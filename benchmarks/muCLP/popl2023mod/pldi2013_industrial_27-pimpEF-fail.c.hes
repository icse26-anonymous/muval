forall (c: int). c > 0 => OR1 c 4 0
s.t.
OR1 (c: int) (curr_serv: int) (resp: int): bool =nu c <= 5 \/ EF1 c curr_serv resp;
EF1 (c: int) (curr_serv: int) (resp: int): bool =mu resp > 5 \/ (not (curr_serv > 0) => EF2 resp) /\ (not (not (curr_serv > 0)) => EF3 c curr_serv resp);
EF2 (resp: int): bool =mu resp > 5 \/ false;
EF3 (c: int) (curr_serv: int) (resp: int): bool =mu resp > 5 \/ EF4 c curr_serv resp \/ EF5 c curr_serv resp;
EF4 (c: int) (curr_serv: int) (resp: int): bool =mu resp > 5 \/ EF6 (c - 1) curr_serv resp;
EF6 (c: int) (curr_serv: int) (resp: int): bool =mu resp > 5 \/ EF7 c (curr_serv - 1) resp;
EF7 (c: int) (curr_serv: int) (resp: int): bool =mu resp > 5 \/ EF1 c curr_serv (resp + 1);
EF5 (c: int) (curr_serv: int) (resp: int): bool =mu resp > 5 \/ c < curr_serv /\ EF8 c curr_serv resp;
EF8 (c: int) (curr_serv: int) (resp: int): bool =mu resp > 5 \/ EF1 c (curr_serv - 1) resp;
