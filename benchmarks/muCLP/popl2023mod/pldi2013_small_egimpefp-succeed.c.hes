exists (x: int). EG1 0 0 x
s.t.
EG1 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF1 p x) /\ EG2 1 p x;
EG2 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF2 p x) /\ (EG3 check p x \/ EG4 check p x);
EG3 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF3 p x) /\ (not (x > 0) => EG5 check p x) /\ (not (not (x > 0)) => EG6 check p x);
EG5 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF4 p x) /\ EG4 check 1 x;
EG4 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF5 p x) /\ EG1 check 0 x;
EG6 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF6 p x) /\ (EG7 check p x \/ EG8 check p x);
EG7 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF7 p x) /\ EG3 check p (x - 1);
EG8 (check: int) (p: int) (x: int): bool =nu (check = 1 => EF8 p x) /\ (exists (t: int). EG9 check p t x);
EG9 (check: int) (p: int) (t: int) (x: int): bool =nu (check = 1 => EF9 p t x) /\ t > 0 /\ EG10 check p t x;
EG10 (check: int) (p: int) (t: int) (x: int): bool =nu (check = 1 => EF10 p t x) /\ EG3 check p (x + t);
EF1 (p: int) (x: int): bool =mu p > 0 \/ EF2 p x;
EF2 (p: int) (x: int): bool =mu p > 0 \/ EF3 p x \/ EF5 p x;
EF3 (p: int) (x: int): bool =mu p > 0 \/ (not (x > 0) => EF4 p x) /\ (not (not (x > 0)) => EF6 p x);
EF4 (p: int) (x: int): bool =mu p > 0 \/ EF5 1 x;
EF5 (p: int) (x: int): bool =mu p > 0 \/ EF1 0 x;
EF6 (p: int) (x: int): bool =mu p > 0 \/ EF7 p x \/ EF8 p x;
EF7 (p: int) (x: int): bool =mu p > 0 \/ EF3 p (x - 1);
EF8 (p: int) (x: int): bool =mu p > 0 \/ (exists (t: int). EF9 p t x);
EF9 (p: int) (t: int) (x: int): bool =mu p > 0 \/ t > 0 /\ EF10 p t x;
EF10 (p: int) (t: int) (x: int): bool =mu p > 0 \/ EF3 p (x + t);
