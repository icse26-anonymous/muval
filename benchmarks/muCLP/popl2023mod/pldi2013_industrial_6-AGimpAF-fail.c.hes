forall (Pdolen: int) (i: int). AG1 Pdolen i 0 0
s.t.
AG1 (Pdolen: int) (i: int) (set: int) (unset: int): bool =nu (set = 1 => AF1 Pdolen i unset) /\ AG2 Pdolen i 1 unset;
AG2 (Pdolen: int) (i: int) (set: int) (unset: int): bool =nu (set = 1 => AF2 Pdolen i unset) /\ AG3 Pdolen i 0 unset;
AG3 (Pdolen: int) (i: int) (set: int) (unset: int): bool =nu (set = 1 => AF3 Pdolen i unset) /\ (not (i < Pdolen) => AG4 set unset) /\ (not (not (i < Pdolen)) => AG5 Pdolen i set unset);
AG4 (set: int) (unset: int): bool =nu (set = 1 => AF4 unset) /\ (forall (dummy: int). AG6 dummy set unset);
AG6 (dummy: int) (set: int) (unset: int): bool =nu (set = 1 => AF5 dummy unset) /\ (dummy > 0 => AG7 set unset) /\ (not (dummy > 0) => AG8 set unset);
AG7 (set: int) (unset: int): bool =nu (set = 1 => AF6 unset) /\ AG9 set 1;
AG9 (set: int) (unset: int): bool =nu (set = 1 => AF7 unset) /\ AG8 set 0;
AG8 (set: int) (unset: int): bool =nu (set = 1 => AF8 unset) /\ true;
AG5 (Pdolen: int) (i: int) (set: int) (unset: int): bool =nu (set = 1 => AF9 Pdolen i unset) /\ AG4 set unset /\ AG10 Pdolen i set unset;
AG10 (Pdolen: int) (i: int) (set: int) (unset: int): bool =nu (set = 1 => AF10 Pdolen i unset) /\ (forall (status: int). AG11 Pdolen i set status unset);
AG11 (Pdolen: int) (i: int) (set: int) (status: int) (unset: int): bool =nu (set = 1 => AF11 Pdolen i status unset) /\ (1 != status => AG12 set status unset) /\ (not (1 != status) => AG13 Pdolen i set unset);
AG12 (set: int) (status: int) (unset: int): bool =nu (set = 1 => AF12 status unset) /\ (2 = status => AG14 set unset) /\ (not (2 = status) => AG4 set unset);
AG14 (set: int) (unset: int): bool =nu (set = 1 => AF13 unset) /\ (forall (num: int). AG4 set unset);
AG13 (Pdolen: int) (i: int) (set: int) (unset: int): bool =nu (set = 1 => AF14 Pdolen i unset) /\ AG3 Pdolen (i + 1) set unset;
AF1 (Pdolen: int) (i: int) (unset: int): bool =mu unset = 1 \/ AF2 Pdolen i unset;
AF2 (Pdolen: int) (i: int) (unset: int): bool =mu unset = 1 \/ AF3 Pdolen i unset;
AF3 (Pdolen: int) (i: int) (unset: int): bool =mu unset = 1 \/ (not (i < Pdolen) => AF4 unset) /\ (not (not (i < Pdolen)) => AF9 Pdolen i unset);
AF4 (unset: int): bool =mu unset = 1 \/ (forall (dummy: int). AF5 dummy unset);
AF5 (dummy: int) (unset: int): bool =mu unset = 1 \/ (dummy > 0 => AF6 unset) /\ (not (dummy > 0) => AF8 unset);
AF6 (unset: int): bool =mu unset = 1 \/ AF7 1;
AF7 (unset: int): bool =mu unset = 1 \/ AF8 0;
AF8 (unset: int): bool =mu unset = 1 \/ false;
AF9 (Pdolen: int) (i: int) (unset: int): bool =mu unset = 1 \/ AF4 unset /\ AF10 Pdolen i unset;
AF10 (Pdolen: int) (i: int) (unset: int): bool =mu unset = 1 \/ (forall (status: int). AF11 Pdolen i status unset);
AF11 (Pdolen: int) (i: int) (status: int) (unset: int): bool =mu unset = 1 \/ (1 != status => AF12 status unset) /\ (not (1 != status) => AF14 Pdolen i unset);
AF12 (status: int) (unset: int): bool =mu unset = 1 \/ (2 = status => AF13 unset) /\ (not (2 = status) => AF4 unset);
AF13 (unset: int): bool =mu unset = 1 \/ (forall (num: int). AF4 unset);
AF14 (Pdolen: int) (i: int) (unset: int): bool =mu unset = 1 \/ AF3 Pdolen (i + 1) unset;
