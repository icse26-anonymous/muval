forall (c: int). c > 0 => AND1 c 4 0
s.t.
AND1 (c: int) (curr_serv: int) (resp: int): bool =nu c > 5 /\ AG1 c curr_serv resp;
AG1 (c: int) (curr_serv: int) (resp: int): bool =nu resp <= 5 /\ (not (curr_serv > 0) => AG2 resp) /\ (not (not (curr_serv > 0)) => AG3 c curr_serv resp);
AG2 (resp: int): bool =nu resp <= 5 /\ true;
AG3 (c: int) (curr_serv: int) (resp: int): bool =nu resp <= 5 /\ AG4 c curr_serv resp /\ AG5 c curr_serv resp;
AG4 (c: int) (curr_serv: int) (resp: int): bool =nu resp <= 5 /\ AG6 (c - 1) curr_serv resp;
AG6 (c: int) (curr_serv: int) (resp: int): bool =nu resp <= 5 /\ AG7 c (curr_serv - 1) resp;
AG7 (c: int) (curr_serv: int) (resp: int): bool =nu resp <= 5 /\ AG1 c curr_serv (resp + 1);
AG5 (c: int) (curr_serv: int) (resp: int): bool =nu resp <= 5 /\ (c < curr_serv => AG8 c curr_serv resp);
AG8 (c: int) (curr_serv: int) (resp: int): bool =nu resp <= 5 /\ AG1 c (curr_serv - 1) resp;
