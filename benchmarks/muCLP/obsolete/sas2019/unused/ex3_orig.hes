/*
Program:

let rec g x = B; if x >= 0 then g (x - 1) else 5
let rec f x = let r = g x in A; f r
let rec main () = let x = * in f x

Buchi automaton:

q0 A -> q0
q0 B -> q1
q1 A -> q0
q1 B -> q1

q0 in F
*/

exists (x: int). F_0_ff x
s.t.
F_0_tt (x: int): bool =nu
  G_0_ff x \/
  (exists (r: int). (G_0_ff_0 x r /\ F_0_tt r)) \/
  (exists (r: int). (G_0_ff_1 x r /\ F_0_tt r));
G_0_tt (x: int): bool =nu x >= 0 /\ G_1_ff (x - 1);
F_0_ff (x: int): bool =mu
  G_0_ff x \/
  (exists (r: int). (G_0_ff_0 x r /\ F_0_tt r)) \/
  (exists (r: int). (G_0_ff_1 x r /\ F_0_tt r));
G_0_ff (x: int): bool =mu x >= 0 /\ G_1_ff (x - 1);
G_1_ff (x: int): bool =mu x >= 0 /\ G_1_ff (x - 1);
G_0_ff_0 (x: int) (r: int): bool =mu x >= 0 /\ G_1_ff_0 (x - 1) r;
G_1_ff_0 (x: int) (r: int): bool =mu x >= 0 /\ G_1_ff_0 (x - 1) r;
G_0_ff_1 (x: int) (r: int): bool =mu (x >= 0 /\ G_1_ff_1 (x - 1) r) \/ (x < 0 /\ r = 5);
G_1_ff_1 (x: int) (r: int): bool =mu (x >= 0 /\ G_1_ff_1 (x - 1) r) \/ (x < 0 /\ r = 5);
G_0_tt_0 (x: int) (r: int): bool =mu x >= 0 /\ G_1_tt_0 (x - 1) r;
G_1_tt_0 (x: int) (r: int): bool =mu x >= 0 /\ G_1_tt_0 (x - 1) r;
G_0_tt_1 (x: int) (r: int): bool =mu x >= 0 /\ G_1_tt_1 (x - 1) r;
G_1_tt_1 (x: int) (r: int): bool =mu x >= 0 /\ G_1_tt_1 (x - 1) r;
