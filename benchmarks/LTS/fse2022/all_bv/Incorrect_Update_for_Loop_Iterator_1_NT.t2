///*** 1_main ***///
START: main_bb0;

TYPE v0: bv(32);
TYPE v1: bv(32);
TYPE v2: bv(32);

FROM: main_bb0;
v0 := nondet();
v1 := nondet();
v2 := nondet();
var__temp_vsize.0 := 64;
var__temp_vbuffer_bytes_left.0 := v2;
TO: main_bb0_end;

FROM: main_bb0_end;
assume(((v0 slt -1) || (v1 sle 0)) || (v2 slt 0));
TO: main_bb3;

FROM: main_bb0_end;
assume(((v0 sge -1) && (v1 sgt 0)) && (v2 sge 0));
TO: main_bb1;

FROM: main_bb1;
vsize.0 := var__temp_vsize.0;
vbuffer_bytes_left.0 := var__temp_vbuffer_bytes_left.0;
v6 := vsize.0 sdiv 2;
TO: main_bb1_end;

FROM: main_bb1_end;
assume(vbuffer_bytes_left.0 slt v6);
TO: main_bb2;

FROM: main_bb1_end;
assume(vbuffer_bytes_left.0 sge v6);
TO: main_bb3;

FROM: main_bb2;
v8 := vsize.0 * 2;
TO: main_bb2_vsize.1;
FROM: main_bb2_vsize.1;
assume((v0 != -1) && (v8 sgt v0));
vsize.1 := v0;
TO: main_bb2_svsize.1;

FROM: main_bb2_vsize.1;
assume((v0 == -1) || (v8 sle v0));
vsize.1 := v8;
TO: main_bb2_svsize.1;

FROM: main_bb2_svsize.1;
v11 := vsize.1 - v1;
var__temp_vsize.0 := vsize.1;
var__temp_vbuffer_bytes_left.0 := v11;
TO: main_bb1;

FROM: main_bb3;
TO: main_bb3_ret;

