///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vx.0 := vcall;
var__temp_vi.0 := 0;
TO: main_entry_end;

FROM: main_entry_end;
assume(vcall != 0);
TO: main_while.cond;

FROM: main_entry_end;
assume(vcall == 0);
TO: main_if.end;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
vi.0 := var__temp_vi.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vx.0 > 0) && (vcall1 > 0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vx.0 <= 0) || (vcall1 <= 0));
TO: main_if.end;

FROM: main_while.body;
vadd := vi.0 + 1;
vsub := vx.0 - 1;
vsub4 := vcall1 - 1;
vsub5 := vsub - vsub4;
var__temp_vx.0 := vsub5;
var__temp_vi.0 := vadd;
TO: main_while.cond;

FROM: main_if.end;
TO: main_if.end_ret;

