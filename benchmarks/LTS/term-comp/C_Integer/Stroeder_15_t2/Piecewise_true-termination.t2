///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vp.0 := vcall1;
var__temp_vq.0 := vcall;
TO: main_while.cond;

FROM: main_while.cond;
vp.0 := var__temp_vp.0;
vq.0 := var__temp_vq.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(((vq.0 > 0) && (vp.0 > 0)) && (vp.0 != vq.0));
TO: main_while.body;

FROM: main_while.cond_end;
assume(((vq.0 <= 0) || (vp.0 <= 0)) || (vp.0 == vq.0));
TO: main_while.end;

FROM: main_while.body;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vq.0 < vp.0);
TO: main_if.then;

FROM: main_while.body_end;
assume(vq.0 >= vp.0);
TO: main_if.else;

FROM: main_if.then;
vsub := vq.0 - 1;
vcall5 := nondet();
var__temp_vp.0 := vcall5;
var__temp_vq.0 := vsub;
TO: main_while.cond;

FROM: main_if.else;
var__temp_vp.0 := vp.0;
var__temp_vq.0 := vq.0;
TO: main_if.else_end;

FROM: main_if.else_end;
assume(vp.0 < vq.0);
TO: main_if.then7;

FROM: main_if.else_end;
assume(vp.0 >= vq.0);
TO: main_while.cond;

FROM: main_if.then7;
vsub8 := vp.0 - 1;
vcall9 := nondet();
var__temp_vp.0 := vsub8;
var__temp_vq.0 := vcall9;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

