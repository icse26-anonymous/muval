///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
TO: main_entry_v.;
FROM: main_entry_v.;
assume(vcall2 != 0);
v. := 1;
TO: main_entry_sv.;

FROM: main_entry_v.;
assume(vcall2 == 0);
v. := -1;
TO: main_entry_sv.;

FROM: main_entry_sv.;
vadd := v. + 1;
vsub := v. - 1;
TO: main_entry_vx.1;
FROM: main_entry_vx.1;
assume(v. > 0);
vx.1 := vadd;
TO: main_entry_svx.1;

FROM: main_entry_vx.1;
assume(v. <= 0);
vx.1 := vsub;
TO: main_entry_svx.1;

FROM: main_entry_svx.1;
vadd9 := vx.1 + 1;
vsub11 := vx.1 - 1;
TO: main_entry_vx.2;
FROM: main_entry_vx.2;
assume(vx.1 > 0);
vx.2 := vadd9;
TO: main_entry_svx.2;

FROM: main_entry_vx.2;
assume(vx.1 <= 0);
vx.2 := vsub11;
TO: main_entry_svx.2;

FROM: main_entry_svx.2;
vadd15 := vx.2 + 1;
vsub17 := vx.2 - 1;
TO: main_entry_vx.3;
FROM: main_entry_vx.3;
assume(vx.2 > 0);
vx.3 := vadd15;
TO: main_entry_svx.3;

FROM: main_entry_vx.3;
assume(vx.2 <= 0);
vx.3 := vsub17;
TO: main_entry_svx.3;

FROM: main_entry_svx.3;
vadd21 := vx.3 + 1;
vsub23 := vx.3 - 1;
TO: main_entry_vx.4;
FROM: main_entry_vx.4;
assume(vx.3 > 0);
vx.4 := vadd21;
TO: main_entry_svx.4;

FROM: main_entry_vx.4;
assume(vx.3 <= 0);
vx.4 := vsub23;
TO: main_entry_svx.4;

FROM: main_entry_svx.4;
vadd27 := vx.4 + 1;
vsub29 := vx.4 - 1;
TO: main_entry_vx.5;
FROM: main_entry_vx.5;
assume(vx.4 > 0);
vx.5 := vadd27;
TO: main_entry_svx.5;

FROM: main_entry_vx.5;
assume(vx.4 <= 0);
vx.5 := vsub29;
TO: main_entry_svx.5;

FROM: main_entry_svx.5;
vadd33 := vx.5 + 1;
vsub35 := vx.5 - 1;
TO: main_entry_vx.6;
FROM: main_entry_vx.6;
assume(vx.5 > 0);
vx.6 := vadd33;
TO: main_entry_svx.6;

FROM: main_entry_vx.6;
assume(vx.5 <= 0);
vx.6 := vsub35;
TO: main_entry_svx.6;

FROM: main_entry_svx.6;
vadd39 := vx.6 + 1;
vsub41 := vx.6 - 1;
TO: main_entry_vx.7;
FROM: main_entry_vx.7;
assume(vx.6 > 0);
vx.7 := vadd39;
TO: main_entry_svx.7;

FROM: main_entry_vx.7;
assume(vx.6 <= 0);
vx.7 := vsub41;
TO: main_entry_svx.7;

FROM: main_entry_svx.7;
vadd45 := vx.7 + 1;
vsub47 := vx.7 - 1;
TO: main_entry_vx.8;
FROM: main_entry_vx.8;
assume(vx.7 > 0);
vx.8 := vadd45;
TO: main_entry_svx.8;

FROM: main_entry_vx.8;
assume(vx.7 <= 0);
vx.8 := vsub47;
TO: main_entry_svx.8;

FROM: main_entry_svx.8;
var__temp_vy.0 := vcall;
var__temp_vz.0 := vcall1;
TO: main_while.cond;

FROM: main_while.cond;
vy.0 := var__temp_vy.0;
vz.0 := var__temp_vz.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vy.0 < 100) && (vz.0 < 100));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vy.0 >= 100) || (vz.0 >= 100));
TO: main_while.end;

FROM: main_while.body;
vadd51 := vy.0 + vx.8;
vsub52 := vz.0 - vx.8;
var__temp_vy.0 := vadd51;
var__temp_vz.0 := vsub52;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

