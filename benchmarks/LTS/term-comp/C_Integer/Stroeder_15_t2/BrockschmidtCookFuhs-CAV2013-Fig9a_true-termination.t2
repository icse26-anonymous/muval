///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
vcall3 := nondet();
var__temp_vi.0 := 0;
TO: main_entry_end;

FROM: main_entry_end;
assume(vcall >= 1);
TO: main_while.cond;

FROM: main_entry_end;
assume(vcall < 1);
TO: main_if.end;

FROM: main_while.cond;
vi.0 := var__temp_vi.0;
var__temp_vj.0 := 0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vi.0 < vcall3);
TO: main_while.cond5;

FROM: main_while.cond_end;
assume(vi.0 >= vcall3);
TO: main_if.end;

FROM: main_while.cond5;
vj.0 := var__temp_vj.0;
TO: main_while.cond5_end;

FROM: main_while.cond5_end;
assume(vj.0 <= vi.0);
TO: main_while.body7;

FROM: main_while.cond5_end;
assume(vj.0 > vi.0);
TO: main_while.end;

FROM: main_while.body7;
vadd := vj.0 + vcall;
var__temp_vj.0 := vadd;
TO: main_while.cond5;

FROM: main_while.end;
vadd8 := vi.0 + 1;
var__temp_vi.0 := vadd8;
TO: main_while.cond;

FROM: main_if.end;
TO: main_if.end_ret;

