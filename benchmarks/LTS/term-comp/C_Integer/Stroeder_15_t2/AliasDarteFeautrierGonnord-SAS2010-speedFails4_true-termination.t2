///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
vcall3 := nondet();
TO: main_entry_v.;
FROM: main_entry_v.;
assume(vcall3 >= 1);
v. := 1;
TO: main_entry_sv.;

FROM: main_entry_v.;
assume(vcall3 < 1);
v. := -1;
TO: main_entry_sv.;

FROM: main_entry_sv.;
var__temp_vx.0 := vcall1;
TO: main_while.cond;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vx.0 <= vcall2);
TO: main_while.body;

FROM: main_while.cond_end;
assume(vx.0 > vcall2);
TO: main_while.end;

FROM: main_while.body;
vadd := vx.0 + v.;
vsub := vx.0 - v.;
TO: main_while.body_vx.1;
FROM: main_while.body_vx.1;
assume(vcall3 >= 1);
vx.1 := vadd;
TO: main_while.body_svx.1;

FROM: main_while.body_vx.1;
assume(vcall3 < 1);
vx.1 := vsub;
TO: main_while.body_svx.1;

FROM: main_while.body_svx.1;
var__temp_vx.0 := vx.1;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

