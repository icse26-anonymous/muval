///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vy1.0 := vcall;
var__temp_vy2.0 := vcall1;
TO: main_entry_end;

FROM: main_entry_end;
assume((vcall > 0) && (vcall1 > 0));
TO: main_while.cond;

FROM: main_entry_end;
assume((vcall <= 0) || (vcall1 <= 0));
TO: main_if.end7;

FROM: main_while.cond;
vy1.0 := var__temp_vy1.0;
vy2.0 := var__temp_vy2.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vy1.0 != vy2.0);
TO: main_while.body;

FROM: main_while.cond_end;
assume(vy1.0 == vy2.0);
TO: main_if.end7;

FROM: main_while.body;
vsub := vy1.0 - vy2.0;
vsub6 := vy2.0 - vy1.0;
TO: main_while.body_vy1.1;
FROM: main_while.body_vy1.1;
assume(vy1.0 > vy2.0);
vy1.1 := vsub;
TO: main_while.body_svy1.1;

FROM: main_while.body_vy1.1;
assume(vy1.0 <= vy2.0);
vy1.1 := vy1.0;
TO: main_while.body_svy1.1;

FROM: main_while.body_svy1.1;
TO: main_while.body_vy2.1;
FROM: main_while.body_vy2.1;
assume(vy1.0 > vy2.0);
vy2.1 := vy2.0;
TO: main_while.body_svy2.1;

FROM: main_while.body_vy2.1;
assume(vy1.0 <= vy2.0);
vy2.1 := vsub6;
TO: main_while.body_svy2.1;

FROM: main_while.body_svy2.1;
var__temp_vy1.0 := vy1.1;
var__temp_vy2.0 := vy2.1;
TO: main_while.cond;

FROM: main_if.end7;
TO: main_if.end7_ret;

