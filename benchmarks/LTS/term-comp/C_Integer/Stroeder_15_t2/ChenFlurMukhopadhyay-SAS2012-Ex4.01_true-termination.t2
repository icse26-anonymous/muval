///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
vcall3 := nondet();
var__temp_vz.0 := vcall2;
var__temp_vy.0 := vcall1;
var__temp_vx.0 := vcall;
TO: main_while.cond;

FROM: main_while.cond;
vz.0 := var__temp_vz.0;
vy.0 := var__temp_vy.0;
vx.0 := var__temp_vx.0;
vadd := vx.0 + vy.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vadd >= 0) && (vx.0 <= vcall3));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vadd < 0) || (vx.0 > vcall3));
TO: main_while.end;

FROM: main_while.body;
vmul := 2 * vx.0;
vadd5 := vmul + vy.0;
vadd6 := vz.0 + 1;
var__temp_vz.0 := vadd6;
var__temp_vy.0 := vz.0;
var__temp_vx.0 := vadd5;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

