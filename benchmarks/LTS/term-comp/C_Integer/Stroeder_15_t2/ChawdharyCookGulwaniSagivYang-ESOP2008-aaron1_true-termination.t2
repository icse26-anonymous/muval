///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
vcall3 := nondet();
var__temp_vj.0 := vcall1;
var__temp_vi.0 := vcall;
TO: main_while.cond;

FROM: main_while.cond;
vj.0 := var__temp_vj.0;
vi.0 := var__temp_vi.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vcall2 >= vi.0) && (vcall3 >= vj.0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vcall2 < vi.0) || (vcall3 < vj.0));
TO: main_lor.lhs.false;

FROM: main_lor.lhs.false;
TO: main_lor.lhs.false_end;

FROM: main_lor.lhs.false_end;
assume((vcall2 >= vi.0) && (vcall3 <= vj.0));
TO: main_while.body;

FROM: main_lor.lhs.false_end;
assume((vcall2 < vi.0) || (vcall3 > vj.0));
TO: main_lor.rhs;

FROM: main_lor.rhs;
TO: main_lor.rhs_end;

FROM: main_lor.rhs_end;
assume((vcall2 <= vi.0) && (vcall3 >= vj.0));
TO: main_while.body;

FROM: main_lor.rhs_end;
assume((vcall2 > vi.0) || (vcall3 < vj.0));
TO: main_while.end;

FROM: main_while.body;
TO: main_while.body_end;

FROM: main_while.body_end;
assume((vcall2 >= vi.0) && (vcall3 >= vj.0));
TO: main_if.then;

FROM: main_while.body_end;
assume((vcall2 < vi.0) || (vcall3 < vj.0));
TO: main_if.else17;

FROM: main_if.then;
vcall13 := nondet();
vadd := vj.0 + 1;
vadd16 := vi.0 + 1;
TO: main_if.then_vj.1;
FROM: main_if.then_vj.1;
assume(vcall13 != 0);
vj.1 := vadd;
TO: main_if.then_svj.1;

FROM: main_if.then_vj.1;
assume(vcall13 == 0);
vj.1 := vj.0;
TO: main_if.then_svj.1;

FROM: main_if.then_svj.1;
TO: main_if.then_vi.1;
FROM: main_if.then_vi.1;
assume(vcall13 != 0);
vi.1 := vi.0;
TO: main_if.then_svi.1;

FROM: main_if.then_vi.1;
assume(vcall13 == 0);
vi.1 := vadd16;
TO: main_if.then_svi.1;

FROM: main_if.then_svi.1;
var__temp_vj.0 := vj.1;
var__temp_vi.0 := vi.1;
TO: main_while.cond;

FROM: main_if.else17;
TO: main_if.else17_end;

FROM: main_if.else17_end;
assume((vcall2 >= vi.0) && (vcall3 <= vj.0));
TO: main_if.then21;

FROM: main_if.else17_end;
assume((vcall2 < vi.0) || (vcall3 > vj.0));
TO: main_if.else23;

FROM: main_if.then21;
vadd22 := vi.0 + 1;
var__temp_vj.0 := vj.0;
var__temp_vi.0 := vadd22;
TO: main_while.cond;

FROM: main_if.else23;
vadd28 := vj.0 + 1;
TO: main_if.else23_vj.2;
FROM: main_if.else23_vj.2;
assume((vcall2 <= vi.0) && (vcall3 >= vj.0));
vj.2 := vadd28;
TO: main_if.else23_svj.2;

FROM: main_if.else23_vj.2;
assume((vcall2 > vi.0) || (vcall3 < vj.0));
vj.2 := vj.0;
TO: main_if.else23_svj.2;

FROM: main_if.else23_svj.2;
var__temp_vj.0 := vj.2;
var__temp_vi.0 := vi.0;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

