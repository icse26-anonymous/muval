///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
var__temp_vy.0 := 0;
var__temp_vx.0 := vcall;
TO: main_while.cond;

FROM: main_while.cond;
vy.0 := var__temp_vy.0;
vx.0 := var__temp_vx.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vx.0 >= 0) && (vy.0 >= 0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vx.0 < 0) || (vy.0 < 0));
TO: main_while.end12;

FROM: main_while.body;
vcall2 := nondet();
var__temp_vy.1 := vy.0;
var__temp_vy.2 := vy.0;
var__temp_vx.1 := vx.0;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vcall2 != 0);
TO: main_while.cond4;

FROM: main_while.body_end;
assume(vcall2 == 0);
TO: main_if.end;

FROM: main_while.cond4;
vy.1 := var__temp_vy.1;
TO: main_while.cond4_end;

FROM: main_while.cond4_end;
assume(vy.1 <= vcall);
TO: main_land.rhs6;

FROM: main_while.cond4_end;
assume(vy.1 > vcall);
TO: main_while.end;

FROM: main_land.rhs6;
vcall7 := nondet();
TO: main_land.rhs6_end;

FROM: main_land.rhs6_end;
assume(vcall7 != 0);
TO: main_while.body10;

FROM: main_land.rhs6_end;
assume(vcall7 == 0);
TO: main_while.end;

FROM: main_while.body10;
vadd := vy.1 + 1;
var__temp_vy.1 := vadd;
TO: main_while.cond4;

FROM: main_while.end;
vsub := vx.0 - 1;
var__temp_vy.2 := vy.1;
var__temp_vx.1 := vsub;
TO: main_if.end;

FROM: main_if.end;
vy.2 := var__temp_vy.2;
vx.1 := var__temp_vx.1;
vsub11 := vy.2 - 1;
var__temp_vy.0 := vsub11;
var__temp_vx.0 := vx.1;
TO: main_while.cond;

FROM: main_while.end12;
TO: main_while.end12_ret;

