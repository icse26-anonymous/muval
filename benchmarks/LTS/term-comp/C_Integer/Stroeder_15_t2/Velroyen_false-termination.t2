///*** 1_main ***///
START: main_entry;

FROM: main_entry;
var__temp_vx.0 := v0;
TO: main_while.cond;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vx.0 != 0);
TO: main_while.body;

FROM: main_while.cond_end;
assume(vx.0 == 0);
TO: main_while.end;

FROM: main_while.body;
var__temp_vx.0 := 0;
TO: main_while.body_end;

FROM: main_while.body_end;
assume((-5 <= vx.0) && (vx.0 <= 35));
TO: main_if.then;

FROM: main_while.body_end;
assume((-5 > vx.0) || (vx.0 > 35));
TO: main_while.cond;

FROM: main_if.then;
var__temp_vx.0 := -5;
TO: main_if.then_end;

FROM: main_if.then_end;
assume(vx.0 < 0);
TO: main_while.cond;

FROM: main_if.then_end;
assume(vx.0 >= 0);
TO: main_if.else;

FROM: main_if.else;
vsub := vx.0 - 1;
TO: main_if.else_vx.1;
FROM: main_if.else_vx.1;
assume(vx.0 > 30);
vx.1 := 35;
TO: main_if.else_svx.1;

FROM: main_if.else_vx.1;
assume(vx.0 <= 30);
vx.1 := vsub;
TO: main_if.else_svx.1;

FROM: main_if.else_svx.1;
var__temp_vx.0 := vx.1;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

