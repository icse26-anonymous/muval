///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
vcall3 := nondet();
var__temp_vy.0 := vcall3;
var__temp_vx.0 := vcall2;
var__temp_vb.0 := vcall1;
TO: main_while.cond;

FROM: main_while.cond;
vy.0 := var__temp_vy.0;
vx.0 := var__temp_vx.0;
vb.0 := var__temp_vb.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(((vx.0 >= 0) && (0 <= vy.0)) && (vy.0 <= vcall));
TO: main_while.body;

FROM: main_while.cond_end;
assume(((vx.0 < 0) || (0 > vy.0)) || (vy.0 > vcall));
TO: main_while.end;

FROM: main_while.body;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vb.0 == 0);
TO: main_if.then;

FROM: main_while.body_end;
assume(vb.0 != 0);
TO: main_if.else;

FROM: main_if.then;
vadd := vy.0 + 1;
vcall7 := nondet();
TO: main_if.then_v.b.0;
FROM: main_if.then_v.b.0;
assume(vcall7 != 0);
v.b.0 := 1;
TO: main_if.then_sv.b.0;

FROM: main_if.then_v.b.0;
assume(vcall7 == 0);
v.b.0 := vb.0;
TO: main_if.then_sv.b.0;

FROM: main_if.then_sv.b.0;
var__temp_vy.0 := vadd;
var__temp_vx.0 := vx.0;
var__temp_vb.0 := v.b.0;
TO: main_while.cond;

FROM: main_if.else;
vsub := vy.0 - 1;
vcall10 := nondet();
vsub13 := vx.0 - 1;
TO: main_if.else_vsub13.x.0;
FROM: main_if.else_vsub13.x.0;
assume(vcall10 != 0);
vsub13.x.0 := vsub13;
TO: main_if.else_svsub13.x.0;

FROM: main_if.else_vsub13.x.0;
assume(vcall10 == 0);
vsub13.x.0 := vx.0;
TO: main_if.else_svsub13.x.0;

FROM: main_if.else_svsub13.x.0;
TO: main_if.else_v.b.01;
FROM: main_if.else_v.b.01;
assume(vcall10 != 0);
v.b.01 := 0;
TO: main_if.else_sv.b.01;

FROM: main_if.else_v.b.01;
assume(vcall10 == 0);
v.b.01 := vb.0;
TO: main_if.else_sv.b.01;

FROM: main_if.else_sv.b.01;
var__temp_vy.0 := vsub;
var__temp_vx.0 := vsub13.x.0;
var__temp_vb.0 := v.b.01;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

