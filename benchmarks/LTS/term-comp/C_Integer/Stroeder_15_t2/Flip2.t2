///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vj.0 := vcall1;
var__temp_vi.0 := vcall;
TO: main_while.cond;

FROM: main_while.cond;
vj.0 := var__temp_vj.0;
vi.0 := var__temp_vi.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vi.0 > 0) && (vj.0 > 0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vi.0 <= 0) || (vj.0 <= 0));
TO: main_while.end;

FROM: main_while.body;
var__temp_vj.0 := vi.0;
var__temp_vi.0 := vj.0;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vi.0 < vj.0);
TO: main_while.cond;

FROM: main_while.body_end;
assume(vi.0 >= vj.0);
TO: main_if.else;

FROM: main_if.else;
vsub := vi.0 - 1;
TO: main_if.else_vj.1;
FROM: main_if.else_vj.1;
assume(vi.0 > vj.0);
vj.1 := vi.0;
TO: main_if.else_svj.1;

FROM: main_if.else_vj.1;
assume(vi.0 <= vj.0);
vj.1 := vj.0;
TO: main_if.else_svj.1;

FROM: main_if.else_svj.1;
TO: main_if.else_vi.1;
FROM: main_if.else_vi.1;
assume(vi.0 > vj.0);
vi.1 := vi.0;
TO: main_if.else_svi.1;

FROM: main_if.else_vi.1;
assume(vi.0 <= vj.0);
vi.1 := vsub;
TO: main_if.else_svi.1;

FROM: main_if.else_svi.1;
var__temp_vj.0 := vj.1;
var__temp_vi.0 := vi.1;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

