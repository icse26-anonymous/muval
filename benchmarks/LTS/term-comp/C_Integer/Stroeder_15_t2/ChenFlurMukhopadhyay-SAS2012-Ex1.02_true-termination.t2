///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
var__temp_vx.0 := vcall;
var__temp_voldx.0 := v0;
TO: main_while.cond;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
voldx.0 := var__temp_voldx.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vx.0 > 0) && (vx.0 < 100));
TO: main_land.rhs;

FROM: main_while.cond_end;
assume((vx.0 <= 0) || (vx.0 >= 100));
TO: main_while.end;

FROM: main_land.rhs;
vmul := 2 * voldx.0;
vadd := vmul + 10;
TO: main_land.rhs_end;

FROM: main_land.rhs_end;
assume(vx.0 >= vadd);
TO: main_while.body;

FROM: main_land.rhs_end;
assume(vx.0 < vadd);
TO: main_while.end;

FROM: main_while.body;
vcall3 := nondet();
var__temp_vx.0 := vcall3;
var__temp_voldx.0 := vx.0;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

