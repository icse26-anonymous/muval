///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
var__temp_vi.0 := vcall;
TO: main_while.cond;

FROM: main_while.cond;
vi.0 := var__temp_vi.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vi.0 != 0);
TO: main_while.body;

FROM: main_while.cond_end;
assume(vi.0 == 0);
TO: main_while.end;

FROM: main_while.body;
var__temp_vi.0 := vi.0;
TO: main_while.body_end;

FROM: main_while.body_end;
assume((vi.0 > -5) && (vi.0 < 5));
TO: main_if.then;

FROM: main_while.body_end;
assume((vi.0 <= -5) || (vi.0 >= 5));
TO: main_while.cond;

FROM: main_if.then;
vadd := vi.0 + 1;
TO: main_if.then_vadd.i.0;
FROM: main_if.then_vadd.i.0;
assume(vi.0 < 0);
vadd.i.0 := vadd;
TO: main_if.then_svadd.i.0;

FROM: main_if.then_vadd.i.0;
assume(vi.0 >= 0);
vadd.i.0 := vi.0;
TO: main_if.then_svadd.i.0;

FROM: main_if.then_svadd.i.0;
vsub := vadd.i.0 - 1;
TO: main_if.then_vi.2;
FROM: main_if.then_vi.2;
assume(vadd.i.0 > 0);
vi.2 := vsub;
TO: main_if.then_svi.2;

FROM: main_if.then_vi.2;
assume(vadd.i.0 <= 0);
vi.2 := vadd.i.0;
TO: main_if.then_svi.2;

FROM: main_if.then_svi.2;
var__temp_vi.0 := vi.2;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

