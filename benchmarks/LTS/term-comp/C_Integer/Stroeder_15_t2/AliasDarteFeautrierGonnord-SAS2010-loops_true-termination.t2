///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vx.0 := vcall;
TO: main_entry_end;

FROM: main_entry_end;
assume(vcall >= 0);
TO: main_while.cond;

FROM: main_entry_end;
assume(vcall < 0);
TO: main_if.end9;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vx.0 >= 0);
TO: main_while.body;

FROM: main_while.cond_end;
assume(vx.0 < 0);
TO: main_if.end9;

FROM: main_while.body;
var__temp_vy.0 := 1;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(1 < vx.0);
TO: main_while.cond5;

FROM: main_while.body_end;
assume(1 >= vx.0);
TO: main_if.end;

FROM: main_while.cond5;
vy.0 := var__temp_vy.0;
TO: main_while.cond5_end;

FROM: main_while.cond5_end;
assume(vy.0 < vx.0);
TO: main_while.body7;

FROM: main_while.cond5_end;
assume(vy.0 >= vx.0);
TO: main_if.end;

FROM: main_while.body7;
vmul := 2 * vy.0;
var__temp_vy.0 := vmul;
TO: main_while.cond5;

FROM: main_if.end;
vsub := vx.0 - 1;
var__temp_vx.0 := vsub;
TO: main_while.cond;

FROM: main_if.end9;
TO: main_if.end9_ret;

