///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
var__temp_vy.0 := vcall1;
var__temp_vx.0 := vcall;
var__temp_vc.0 := 0;
TO: main_while.cond;

FROM: main_while.cond;
vy.0 := var__temp_vy.0;
vx.0 := var__temp_vx.0;
vc.0 := var__temp_vc.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vx.0 > vcall2) || (vy.0 > vcall2));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vx.0 <= vcall2) && (vy.0 <= vcall2));
TO: main_while.end;

FROM: main_while.body;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vx.0 > vcall2);
TO: main_if.then;

FROM: main_while.body_end;
assume(vx.0 <= vcall2);
TO: main_if.else;

FROM: main_if.then;
vsub := vx.0 - 1;
var__temp_vy.2 := vy.0;
var__temp_vx.1 := vsub;
TO: main_if.end9;

FROM: main_if.else;
vsub7 := vy.0 - 1;
TO: main_if.else_vy.1;
FROM: main_if.else_vy.1;
assume(vy.0 > vcall2);
vy.1 := vsub7;
TO: main_if.else_svy.1;

FROM: main_if.else_vy.1;
assume(vy.0 <= vcall2);
vy.1 := vy.0;
TO: main_if.else_svy.1;

FROM: main_if.else_svy.1;
var__temp_vy.2 := vy.1;
var__temp_vx.1 := vx.0;
TO: main_if.end9;

FROM: main_if.end9;
vy.2 := var__temp_vy.2;
vx.1 := var__temp_vx.1;
vadd := vc.0 + 1;
var__temp_vy.0 := vy.2;
var__temp_vx.0 := vx.1;
var__temp_vc.0 := vadd;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

