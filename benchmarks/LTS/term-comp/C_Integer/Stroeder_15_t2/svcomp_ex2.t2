///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
var__temp_vy.0 := vcall1;
var__temp_vflag.0 := 1;
var__temp_vc.0 := 0;
TO: main_while.cond;

FROM: main_while.cond;
vy.0 := var__temp_vy.0;
vflag.0 := var__temp_vflag.0;
vc.0 := var__temp_vc.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vy.0 < vcall2) && (vflag.0 > 0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vy.0 >= vcall2) || (vflag.0 <= 0));
TO: main_while.end;

FROM: main_while.body;
TO: main_while.body_end;

FROM: main_while.body_end;
assume((vy.0 > 0) && (vcall > 1));
TO: main_if.then;

FROM: main_while.body_end;
assume((vy.0 <= 0) || (vcall <= 1));
TO: main_if.else;

FROM: main_if.then;
vmul := vcall * vy.0;
var__temp_vy.2 := vmul;
var__temp_vflag.2 := vflag.0;
TO: main_if.end12;

FROM: main_if.else;
var__temp_vy.2 := vy.0;
var__temp_vflag.2 := 0;
TO: main_if.else_end;

FROM: main_if.else_end;
assume((vy.0 > 0) && (vcall < -1));
TO: main_if.then9;

FROM: main_if.else_end;
assume((vy.0 <= 0) || (vcall >= -1));
TO: main_if.end12;

FROM: main_if.then9;
vsub := 0 - vcall;
vmul10 := vsub * vy.0;
var__temp_vy.2 := vmul10;
var__temp_vflag.2 := vflag.0;
TO: main_if.end12;

FROM: main_if.end12;
vy.2 := var__temp_vy.2;
vflag.2 := var__temp_vflag.2;
vadd := vc.0 + 1;
var__temp_vy.0 := vy.2;
var__temp_vflag.0 := vflag.2;
var__temp_vc.0 := vadd;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

