///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vcall2 := nondet();
var__temp_vx.0 := vcall;
var__temp_vy.0 := vcall1;
var__temp_vc.0 := 0;
var__temp_vz.0 := vcall2;
TO: main_while.cond;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
vy.0 := var__temp_vy.0;
vc.0 := var__temp_vc.0;
vz.0 := var__temp_vz.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vx.0 >= vy.0);
TO: main_while.body;

FROM: main_while.cond_end;
assume(vx.0 < vy.0);
TO: main_while.end;

FROM: main_while.body;
vadd := vc.0 + 1;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vz.0 > 1);
TO: main_if.then;

FROM: main_while.body_end;
assume(vz.0 <= 1);
TO: main_if.else;

FROM: main_if.then;
vsub := vz.0 - 1;
vadd4 := vx.0 + vsub;
var__temp_vx.0 := vadd4;
var__temp_vy.0 := vy.0;
var__temp_vc.0 := vadd;
var__temp_vz.0 := vsub;
TO: main_while.cond;

FROM: main_if.else;
vadd5 := vy.0 + 1;
var__temp_vx.0 := vx.0;
var__temp_vy.0 := vadd5;
var__temp_vc.0 := vadd;
var__temp_vz.0 := vz.0;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

