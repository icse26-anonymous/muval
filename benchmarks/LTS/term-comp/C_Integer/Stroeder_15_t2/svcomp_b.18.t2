///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vx.0 := vcall;
var__temp_vy.0 := vcall1;
TO: main_while.cond;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
vy.0 := var__temp_vy.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vx.0 > 0) && (vy.0 > 0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vx.0 <= 0) || (vy.0 <= 0));
TO: main_while.end12;

FROM: main_while.body;
var__temp_vx.1 := vx.0;
var__temp_vy.1 := vy.0;
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vx.0 > vy.0);
TO: main_while.cond4;

FROM: main_while.body_end;
assume(vx.0 <= vy.0);
TO: main_while.cond7;

FROM: main_while.cond4;
vx.1 := var__temp_vx.1;
var__temp_vx.0 := vx.1;
var__temp_vy.0 := vy.0;
TO: main_while.cond4_end;

FROM: main_while.cond4_end;
assume(vx.1 > 0);
TO: main_while.body6;

FROM: main_while.cond4_end;
assume(vx.1 <= 0);
TO: main_while.cond;

FROM: main_while.body6;
vsub := vx.1 - 1;
var__temp_vx.1 := vsub;
TO: main_while.cond4;

FROM: main_while.cond7;
vy.1 := var__temp_vy.1;
var__temp_vx.0 := vx.0;
var__temp_vy.0 := vy.1;
TO: main_while.cond7_end;

FROM: main_while.cond7_end;
assume(vy.1 > 0);
TO: main_while.body9;

FROM: main_while.cond7_end;
assume(vy.1 <= 0);
TO: main_while.cond;

FROM: main_while.body9;
vsub10 := vy.1 - 1;
var__temp_vy.1 := vsub10;
TO: main_while.cond7;

FROM: main_while.end12;
TO: main_while.end12_ret;

