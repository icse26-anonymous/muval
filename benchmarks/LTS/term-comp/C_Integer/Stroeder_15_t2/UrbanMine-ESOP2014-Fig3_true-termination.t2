///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vx.0 := vcall;
var__temp_vy.0 := vcall1;
TO: main_while.cond;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
vy.0 := var__temp_vy.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vx.0 != 0) && (vy.0 > 0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vx.0 == 0) || (vy.0 <= 0));
TO: main_while.end;

FROM: main_while.body;
vcall4 := nondet();
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vx.0 > 0);
TO: main_if.then;

FROM: main_while.body_end;
assume(vx.0 <= 0);
TO: main_if.else9;

FROM: main_if.then;
TO: main_if.then_end;

FROM: main_if.then_end;
assume(vcall4 != 0);
TO: main_if.then6;

FROM: main_if.then_end;
assume(vcall4 == 0);
TO: main_if.else;

FROM: main_if.then6;
vsub := vx.0 - 1;
vcall7 := nondet();
var__temp_vx.0 := vsub;
var__temp_vy.0 := vcall7;
TO: main_while.cond;

FROM: main_if.else;
vsub8 := vy.0 - 1;
var__temp_vx.0 := vx.0;
var__temp_vy.0 := vsub8;
TO: main_while.cond;

FROM: main_if.else9;
TO: main_if.else9_end;

FROM: main_if.else9_end;
assume(vcall4 != 0);
TO: main_if.then12;

FROM: main_if.else9_end;
assume(vcall4 == 0);
TO: main_if.else13;

FROM: main_if.then12;
vadd := vx.0 + 1;
var__temp_vx.0 := vadd;
var__temp_vy.0 := vy.0;
TO: main_while.cond;

FROM: main_if.else13;
vsub14 := vy.0 - 1;
vcall15 := nondet();
var__temp_vx.0 := vcall15;
var__temp_vy.0 := vsub14;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

