///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
var__temp_vy.0 := vcall1;
var__temp_vx.0 := vcall;
TO: main_while.cond;

FROM: main_while.cond;
vy.0 := var__temp_vy.0;
vx.0 := var__temp_vx.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume((vx.0 > 0) && (vy.0 > 0));
TO: main_while.body;

FROM: main_while.cond_end;
assume((vx.0 <= 0) || (vy.0 <= 0));
TO: main_while.end;

FROM: main_while.body;
vcall3 := nondet();
TO: main_while.body_end;

FROM: main_while.body_end;
assume(vcall3 != 0);
TO: main_if.then;

FROM: main_while.body_end;
assume(vcall3 == 0);
TO: main_if.else;

FROM: main_if.then;
vsub := vx.0 - 1;
var__temp_vy.0 := vx.0;
var__temp_vx.0 := vsub;
TO: main_while.cond;

FROM: main_if.else;
vsub5 := vy.0 - 2;
vadd := vx.0 + 1;
var__temp_vy.0 := vadd;
var__temp_vx.0 := vsub5;
TO: main_while.cond;

FROM: main_while.end;
TO: main_while.end_ret;

