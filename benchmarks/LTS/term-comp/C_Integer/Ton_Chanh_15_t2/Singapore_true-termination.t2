///*** 1_main ***///
START: main_entry;

FROM: main_entry;
vcall := nondet();
vcall1 := nondet();
vadd := vcall + vcall1;
var__temp_vx.0 := vcall;
var__temp_vy.0 := vcall1;
TO: main_entry_end;

FROM: main_entry_end;
assume(vadd <= 0);
TO: main_while.cond;

FROM: main_entry_end;
assume(vadd > 0);
TO: main_if.end;

FROM: main_while.cond;
vx.0 := var__temp_vx.0;
vy.0 := var__temp_vy.0;
TO: main_while.cond_end;

FROM: main_while.cond_end;
assume(vx.0 > 0);
TO: main_while.body;

FROM: main_while.cond_end;
assume(vx.0 <= 0);
TO: main_if.end;

FROM: main_while.body;
vadd3 := vx.0 + vx.0;
vadd4 := vadd3 + vy.0;
vsub := vy.0 - 1;
var__temp_vx.0 := vadd4;
var__temp_vy.0 := vsub;
TO: main_while.cond;

FROM: main_if.end;
TO: main_if.end_ret;

