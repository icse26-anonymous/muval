///*** 1_main ***///
START: main_bb0;

FROM: main_bb0;
v0 := nondet();
v1 := nondet();
var__temp_vx.0 := v0;
var__temp_vy.0 := v1;
vx.0 := var__temp_vx.0;
vy.0 := var__temp_vy.0;
TO: main_bb0_end;

FROM: main_bb0_end;
assume((v0 >= 0) && (v1 >= 0));
TO: main_bb1;

FROM: main_bb0_end;
assume((v0 < 0) || (v1 < 0));
TO: main_bb2;

FROM: main_bb1;
v4 := vx.0 - vy.0;
v6 := vy.0 - vx.0;
TO: main_bb1_end;

FROM: main_bb1_end;
assume((v4 > 2) || (v6 > 2));
TO: main_.critedge;

FROM: main_bb1_end;
assume((v4 <= 2) && (v6 <= 2));
TO: main_bb2;

FROM: main_.critedge;
v9 := vx.0 + 1;
v10 := vy.0 + 1;
TO: main_.critedge_vx.1;
FROM: main_.critedge_vx.1;
assume(vx.0 < vy.0);
vx.1 := v9;
TO: main_.critedge_svx.1;

FROM: main_.critedge_vx.1;
assume(vx.0 >= vy.0);
vx.1 := vx.0;
TO: main_.critedge_svx.1;

FROM: main_.critedge_svx.1;
TO: main_.critedge_vy.1;
FROM: main_.critedge_vy.1;
assume(vx.0 < vy.0);
vy.1 := vy.0;
TO: main_.critedge_svy.1;

FROM: main_.critedge_vy.1;
assume(vx.0 >= vy.0);
vy.1 := v10;
TO: main_.critedge_svy.1;

FROM: main_.critedge_svy.1;
var__temp_vx.0 := vx.1;
var__temp_vy.0 := vy.1;
vx.0 := var__temp_vx.0;
vy.0 := var__temp_vy.0;
TO: main_bb1;

FROM: main_bb2;
TO: main_bb2_ret;

