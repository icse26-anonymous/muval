// ARMC error state:  main-err-0
// ARMC return state: main-ret-0	 -> 1
// main-0-38	 -> 2
// main-2-0	 -> 3
// main-3-0	 -> 4
// main-4-0	 -> 5
// main-5-0	 -> 6
// main-6-0	 -> 7
// main-7-0	 -> 8
// main-8-0	 -> 9
// main-9-0	 -> 10
// main-10-0	 -> 11
// main-11-0	 -> 12
// main-12-0	 -> 13
// main-1-43	 -> 14
// main-15-43	 -> 15
// main-16-54	 -> 16
// main-17-43	 -> 17
// main-19-0	 -> 18
// main-20-0	 -> 19
// main-21-0	 -> 20
// main-22-0	 -> 21
// main-23-0	 -> 22
// main-18-58	 -> 23
// main-25-59	 -> 24
// main-27-60	 -> 25
// main-29-60	 -> 26
// main-31-0	 -> 27
// main-24-73	 -> 28
// main-30-61	 -> 29
// main-32-0	 -> 30
// main-28-66	 -> 31
// main-33-0	 -> 32
// main-34-0	 -> 33
// main-35-0	 -> 34
// main-36-0	 -> 35
// main-26-69	 -> 36
// main-39-73	 -> 37
// main-41-73	 -> 38
// main-40-77	 -> 39
// main-43-73	 -> 40
// main-42-73	 -> 41
// main-45-0	 -> 42
// main-46-0	 -> 43
// main-44-80	 -> 44
// main-48-81	 -> 45
// main-50-82	 -> 46
// main-52-82	 -> 47
// main-54-0	 -> 48
// main-47-94	 -> 49
// main-53-83	 -> 50
// main-55-0	 -> 51
// main-51-88	 -> 52
// main-56-0	 -> 53
// main-57-0	 -> 54
// main-58-0	 -> 55
// main-59-0	 -> 56
// main-49-91	 -> 57
// main-61-94	 -> 58
// main-62-98	 -> 59
// main-64-0	 -> 60
// main-65-0	 -> 61
// main-63-101	 -> 62
// main-67-102	 -> 63
// main-69-103	 -> 64
// main-71-103	 -> 65
// main-73-0	 -> 66
// main-66-113	 -> 67
// main-72-104	 -> 68
// main-74-0	 -> 69
// main-70-109	 -> 70
// main-75-0	 -> 71
// main-76-0	 -> 72
// main-77-0	 -> 73
// main-78-0	 -> 74
// main-68-112	 -> 75
// main-60-118	 -> 76
// main-79-0	 -> 77
// main-38-0	 -> 78
// main-37-123	 -> 79
// main-81-123	 -> 80
// main-80-124	 -> 81
// main-14-0	 -> 82
// main-13-128	 -> 83
START:2;
FROM:2;
seq := 1;
TO:3;
FROM:3;
i := (seq + 3);
TO:4;
FROM:4;
z := nondet();
TO:5;
FROM:5;
assume(z>=0);
TO:6;
FROM:6;
pos := 0;
TO:7;
FROM:7;
N := nondet();
TO:8;
FROM:8;
assume(N>=0);
TO:9;
FROM:9;
b_ip := 0;
TO:10;
FROM:10;
b_probe := 0;
TO:11;
FROM:11;
b_arp := 0;
TO:12;
FROM:12;
b_configured := 0;
TO:13;
FROM:13;
k := 0;
TO:14;
FROM:14;
TO:15;
FROM:15;
assume(b_configured==0);
TO:16;
FROM:15;
assume((b_configured + 1)<=0);
TO:17;
FROM:15;
assume(b_configured>=(1 + 0));
TO:17;
FROM:16;
b_arp := 0;
TO:18;
FROM:18;
b_probe := 0;
TO:19;
FROM:19;
k := 0;
TO:20;
FROM:20;
b_ip := nondet();
TO:21;
FROM:21;
assume(b_ip>=0);
TO:22;
FROM:22;
assume(b_ip<=1);
TO:23;
FROM:23;
assume(z<=0);
TO:24;
FROM:24;
assume(i>=(1 + 0));
TO:25;
FROM:25;
assume(pos<=0);
TO:26;
FROM:26;
assume(b_ip<=0);
TO:27;
FROM:27;
pos := (pos + 1);
TO:28;
FROM:25;
assume(pos>=(1 + 0));
TO:29;
FROM:29;
i := (i - 1);
TO:30;
FROM:30;
pos := 0;
TO:28;
FROM:24;
assume(i<=0);
TO:31;
FROM:31;
seq := (seq + 1);
TO:32;
FROM:32;
i := (seq + 3);
TO:33;
FROM:33;
z := nondet();
TO:34;
FROM:34;
assume(z>=0);
TO:35;
FROM:35;
pos := 0;
TO:28;
FROM:23;
assume(z>=(1 + 0));
TO:36;
FROM:36;
z := (z - 1);
TO:28;
FROM:28;
TO:37;
FROM:37;
assume(b_arp<=0);
TO:38;
FROM:38;
assume(k<=N);
TO:39;
FROM:38;
assume(k>=(1 + N));
TO:40;
FROM:37;
assume(b_arp>=(1 + 0));
TO:41;
FROM:39;
b_probe := nondet();
TO:42;
FROM:42;
assume(b_probe>=0);
TO:43;
FROM:43;
assume(b_probe<=1);
TO:44;
FROM:44;
assume(z<=0);
TO:45;
FROM:45;
assume(i>=(1 + 0));
TO:46;
FROM:46;
assume(pos<=0);
TO:47;
FROM:47;
assume(b_probe<=0);
TO:48;
FROM:48;
pos := (pos + 1);
TO:49;
FROM:46;
assume(pos>=(1 + 0));
TO:50;
FROM:50;
i := (i - 1);
TO:51;
FROM:51;
pos := 0;
TO:49;
FROM:45;
assume(i<=0);
TO:52;
FROM:52;
seq := (seq + 1);
TO:53;
FROM:53;
i := (seq + 3);
TO:54;
FROM:54;
z := nondet();
TO:55;
FROM:55;
assume(z>=0);
TO:56;
FROM:56;
pos := 0;
TO:49;
FROM:44;
assume(z>=(1 + 0));
TO:57;
FROM:57;
z := (z - 1);
TO:49;
FROM:49;
assume(b_probe>=1);
TO:58;
FROM:58;
assume(b_ip<=0);
TO:59;
FROM:59;
b_arp := nondet();
TO:60;
FROM:60;
assume(b_arp>=0);
TO:61;
FROM:61;
assume(b_arp<=1);
TO:62;
FROM:62;
assume(z<=0);
TO:63;
FROM:63;
assume(i>=(1 + 0));
TO:64;
FROM:64;
assume(pos<=0);
TO:65;
FROM:65;
assume(b_arp<=0);
TO:66;
FROM:66;
pos := (pos + 1);
TO:67;
FROM:64;
assume(pos>=(1 + 0));
TO:68;
FROM:68;
i := (i - 1);
TO:69;
FROM:69;
pos := 0;
TO:67;
FROM:63;
assume(i<=0);
TO:70;
FROM:70;
seq := (seq + 1);
TO:71;
FROM:71;
i := (seq + 3);
TO:72;
FROM:72;
z := nondet();
TO:73;
FROM:73;
assume(z>=0);
TO:74;
FROM:74;
pos := 0;
TO:67;
FROM:62;
assume(z>=(1 + 0));
TO:75;
FROM:75;
z := (z - 1);
TO:67;
FROM:67;
assume(seq<=(N + 1));
TO:76;
FROM:58;
assume(b_ip>=(1 + 0));
TO:76;
FROM:49;
assume((b_probe + 1)<=1);
TO:76;
FROM:76;
k := (k + 1);
TO:77;
FROM:77;
assume(seq<=(N + 1));
TO:28;
FROM:78;
TO:79;
FROM:79;
assume(b_arp<=0);
TO:80;
FROM:80;
b_configured := 1;
TO:81;
FROM:79;
assume(b_arp>=(1 + 0));
TO:81;
FROM:81;
assume(seq<=(N + 1));
TO:14;
FROM:82;
TO:83;
FROM:83;
TO:1;
FROM:41;
TO:78;
FROM:40;
TO:78;
FROM:17;
TO:82;
