(set-logic HORN)
(set-info :source |
  Benchmark: ./benchmarks/ocaml/safety/tacas2015//sum_intro.ml
  Generated by Refinement Caml
|)
(set-info :status unknown)
(declare-fun |$P0| (Int) Bool)
(declare-fun |$P1| (Int Int) Bool)
(declare-fun |$P3| (Int) Bool)
(declare-fun |$P2| (Int Int Int) Bool)
(declare-fun |$P4| (Int Int) Bool)
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|$P0| x1) (and (|$P1| x1 x2) (= x0 (+ x1 x2)))) (|$P2| x1 x2 x0))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|$P3| x1) (and (= x0 0) (<= x1 0))) (|$P4| x1 x0))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|$P3| x1) (and (>= x1 1) (= x1 (+ 1 x0)))) (|$P3| x0))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|$P4| x0 x1) (and (|$P3| x2) (and (>= x2 1) (= x2 (+ 1 x0))))) (|$P0| x2))))
(assert (forall ((x0 Int)(x2 Int)(x1 Int)) (=> (and (|$P3| x0) (and (|$P4| x1 x2) (and (>= x0 1) (= x0 (+ 1 x1))))) (|$P1| x0 x2))))
(assert (forall ((x1 Int)(x3 Int)(x0 Int)(x2 Int)) (=> (and (|$P3| x1) (and (|$P4| x0 x2) (and (|$P2| x1 x2 x3) (and (>= x1 1) (= x1 (+ 1 x0)))))) (|$P4| x1 x3))))
(assert (forall ((x0 Int)) (|$P3| x0)))
(assert (not (exists ((x0 Int)(x1 Int)) (and (|$P4| x0 x1) (>= x0 (+ 1 x1))))))
(check-sat)
