(set-logic HORN)
(set-info :source |
  Benchmark: ./benchmarks/ocaml/safety/tacas2015//fib_e.ml
  Generated by Refinement Caml
|)
(set-info :status unknown)
(declare-fun |$P0| (Int) Bool)
(declare-fun |$P1| (Int Int) Bool)
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|$P0| x1) (and (= x1 0) (= x0 1))) (|$P1| x1 x0))))
(assert (forall ((x3 Int)(x0 Int)(x1 Int)(x2 Int)) (=> (and (|$P0| x3) (and (or (not (> x1 0)) (not (> x2 0))) (and (= x3 1) (and (= x0 1) (and (or (and (> x1 0) (>= x3 0)) (and (not (> x1 0)) (not (>= x3 0)))) (or (and (> x2 0) (<= x3 0)) (and (not (> x2 0)) (not (<= x3 0))))))))) (|$P1| x3 x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|$P0| x5) (and (and (or (not (> x1 0)) (not (> x2 0))) (or (not (> x3 0)) (not (> x4 0)))) (and (= x5 (+ 1 x0)) (and (or (and (> x1 0) (>= x5 0)) (and (not (> x1 0)) (not (>= x5 0)))) (and (or (and (> x2 0) (<= x5 0)) (and (not (> x2 0)) (not (<= x5 0)))) (and (or (and (> x3 0) (>= x5 1)) (and (not (> x3 0)) (not (>= x5 1)))) (or (and (> x4 0) (<= x5 1)) (and (not (> x4 0)) (not (<= x5 1)))))))))) (|$P0| x0))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x6 Int)(x5 Int)(x7 Int)) (=> (and (|$P0| x5) (and (|$P1| x6 x7) (and (and (or (not (> x1 0)) (not (> x2 0))) (or (not (> x3 0)) (not (> x4 0)))) (and (= x6 (+ 1 x0)) (and (= x5 (+ 1 x6)) (and (or (and (> x1 0) (>= x5 0)) (and (not (> x1 0)) (not (>= x5 0)))) (and (or (and (> x2 0) (<= x5 0)) (and (not (> x2 0)) (not (<= x5 0)))) (and (or (and (> x3 0) (>= x5 1)) (and (not (> x3 0)) (not (>= x5 1)))) (or (and (> x4 0) (<= x5 1)) (and (not (> x4 0)) (not (<= x5 1)))))))))))) (|$P0| x0))))
(assert (forall ((x5 Int)(x0 Int)(x1 Int)(x2 Int)(x3 Int)(x4 Int)(x6 Int)(x8 Int)(x7 Int)(x9 Int)) (=> (and (|$P0| x5) (and (|$P1| x6 x7) (and (|$P1| x8 x9) (and (and (or (not (> x1 0)) (not (> x2 0))) (or (not (> x3 0)) (not (> x4 0)))) (and (= x6 (+ 1 x8)) (and (= x5 (+ 1 x6)) (and (= x0 (+ x7 x9)) (and (or (and (> x1 0) (>= x5 0)) (and (not (> x1 0)) (not (>= x5 0)))) (and (or (and (> x2 0) (<= x5 0)) (and (not (> x2 0)) (not (<= x5 0)))) (and (or (and (> x3 0) (>= x5 1)) (and (not (> x3 0)) (not (>= x5 1)))) (or (and (> x4 0) (<= x5 1)) (and (not (> x4 0)) (not (<= x5 1)))))))))))))) (|$P1| x5 x0))))
(assert (forall ((x0 Int)) (=> (= x0 3) (|$P0| x0))))
(assert (not (exists ((x0 Int)) (and (|$P1| 3 x0) (<= x0 3)))))
(check-sat)
