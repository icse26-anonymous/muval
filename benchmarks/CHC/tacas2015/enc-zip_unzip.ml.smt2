(set-logic HORN)
(set-info :source |
  Benchmark: ./benchmarks/ocaml/safety/tacas2015//enc-zip_unzip.ml
  Generated by Refinement Caml
|)
(set-info :status unknown)
(declare-fun |$P3| (Int Int) Bool)
(declare-fun |$P4| (Int Int Int) Bool)
(declare-fun |$P2| (Int Int Int) Bool)
(declare-fun |$P0| (Int) Bool)
(declare-fun |$P1| (Int Int) Bool)
(declare-fun |$P13| (Int Int Int Int) Bool)
(declare-fun |$P5| (Int Int Int Int) Bool)
(declare-fun |$P7| (Int) Bool)
(declare-fun |$P6| (Int Int Int) Bool)
(declare-fun |$P8| (Int) Bool)
(declare-fun |$P9| (Int Int) Bool)
(declare-fun |$P10| (Int Int) Bool)
(declare-fun |$P11| (Int Int Int) Bool)
(declare-fun |$P12| (Int Int Int) Bool)
(assert (forall ((x1 Int)(x0 Int)(x4 Int)(x3 Int)(x2 Int)) (=> (and (|$P3| x2 x3) (and (|$P4| x2 x3 x4) (and (= x0 (+ 1 x4)) (= x1 (+ 1 x3))))) (|$P0| x1))))
(assert (forall ((x0 Int)(x1 Int)(x3 Int)(x4 Int)(x2 Int)) (=> (and (|$P3| x2 x3) (and (|$P4| x2 x3 x4) (and (= x0 (+ 1 x3)) (= x1 (+ 1 x4))))) (|$P1| x0 x1))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x5 Int)(x3 Int)(x4 Int)) (=> (and (|$P3| x0 x1) (and (|$P4| x0 x1 x2) (and (|$P2| x3 x4 x5) (and (= x3 (+ 1 x1)) (= x4 (+ 1 x2)))))) (|$P5| x0 x1 x2 x5))))
(assert (forall ((x1 Int)(x0 Int)) (=> (and (|$P7| x1) (and (= x1 0) (= x0 0))) (|$P10| x1 x0))))
(assert (forall ((x2 Int)(x0 Int)(x1 Int)) (=> (and (|$P7| x2) (and (= x0 0) (and (= x1 0) (= x2 0)))) (|$P11| x2 x0 x1))))
(assert (forall ((x1 Int)(x0 Int)(x2 Int)) (=> (and (|$P7| x1) (and (|$P13| x1 0 0 x2) (= x1 0))) (|$P6| x1 x0 x2))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|$P7| x1) (and (|$P0| x2) (and (or (< x1 0) (> x1 0)) (= x1 (+ 1 x0))))) (|$P10| x1 x2))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|$P7| x1) (and (|$P0| x2) (and (|$P1| x2 x3) (and (or (< x1 0) (> x1 0)) (= x1 (+ 1 x0)))))) (|$P11| x1 x2 x3))))
(assert (forall ((x2 Int)(x3 Int)(x4 Int)(x1 Int)(x0 Int)) (=> (and (|$P7| x1) (and (|$P0| x2) (and (|$P1| x2 x3) (and (|$P13| x1 x2 x3 x4) (and (or (< x1 0) (> x1 0)) (= x1 (+ 1 x0))))))) (|$P2| x2 x3 x4))))
(assert (forall ((x0 Int)(x1 Int)) (=> (and (|$P7| x1) (and (or (< x1 0) (> x1 0)) (= x1 (+ 1 x0)))) (|$P7| x0))))
(assert (forall ((x0 Int)(x3 Int)(x1 Int)(x2 Int)) (=> (and (|$P7| x1) (and (|$P10| x2 x3) (and (or (< x1 0) (> x1 0)) (= x1 (+ 1 x2))))) (|$P3| x0 x3))))
(assert (forall ((x0 Int)(x3 Int)(x4 Int)(x1 Int)(x2 Int)) (=> (and (|$P7| x1) (and (|$P10| x2 x3) (and (|$P11| x2 x3 x4) (and (or (< x1 0) (> x1 0)) (= x1 (+ 1 x2)))))) (|$P4| x0 x3 x4))))
(assert (forall ((x1 Int)(x3 Int)(x4 Int)(x5 Int)(x0 Int)(x2 Int)) (=> (and (|$P7| x0) (and (|$P10| x1 x3) (and (|$P11| x1 x3 x4) (and (|$P5| x2 x3 x4 x5) (and (or (< x0 0) (> x0 0)) (= x0 (+ 1 x1))))))) (|$P13| x1 x3 x4 x5))))
(assert (forall ((x1 Int)(x0 Int)(x4 Int)(x2 Int)(x3 Int)) (=> (and (|$P7| x1) (and (|$P6| x2 x3 x4) (and (or (< x1 0) (> x1 0)) (= x1 (+ 1 x2))))) (|$P6| x1 x0 x4))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|$P8| x1) (and (|$P9| x1 x2) (and (= x0 0) (and (= x1 0) (= x2 0))))) (|$P12| x1 x2 x0))))
(assert (not (exists ((x0 Int)) (and (|$P8| 0) (and (|$P9| 0 x0) (or (< x0 0) (> x0 0)))))))
(assert (not (exists ((x0 Int)) (and (|$P8| x0) (and (|$P9| x0 0) (or (< x0 0) (> x0 0)))))))
(assert (forall ((x1 Int)(x2 Int)(x3 Int)(x0 Int)) (=> (and (|$P8| x2) (and (|$P9| x2 x3) (and (and (or (< x2 0) (> x2 0)) (or (< x3 0) (> x3 0))) (and (= x3 (+ 1 x0)) (= x2 (+ 1 x1)))))) (|$P8| x1))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)) (=> (and (|$P8| x2) (and (|$P9| x2 x3) (and (and (or (< x2 0) (> x2 0)) (or (< x3 0) (> x3 0))) (and (= x2 (+ 1 x0)) (= x3 (+ 1 x1)))))) (|$P9| x0 x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)(x3 Int)(x4 Int)(x5 Int)) (=> (and (|$P8| x1) (and (|$P9| x1 x2) (and (|$P12| x3 x4 x5) (and (and (or (< x1 0) (> x1 0)) (or (< x2 0) (> x2 0))) (and (= x1 (+ 1 x3)) (and (= x2 (+ 1 x4)) (= x0 (+ 1 x5)))))))) (|$P12| x1 x2 x0))))
(assert (forall ((x0 Int)) (|$P7| x0)))
(assert (forall ((x1 Int)(x0 Int)) (=> (|$P10| x0 x1) (|$P8| x1))))
(assert (forall ((x1 Int)(x2 Int)(x0 Int)) (=> (and (|$P10| x0 x1) (|$P11| x0 x1 x2)) (|$P9| x1 x2))))
(assert (forall ((x0 Int)(x1 Int)(x2 Int)(x3 Int)) (=> (and (|$P10| x0 x1) (and (|$P11| x0 x1 x2) (|$P12| x1 x2 x3))) (|$P13| x0 x1 x2 x3))))
(check-sat)
