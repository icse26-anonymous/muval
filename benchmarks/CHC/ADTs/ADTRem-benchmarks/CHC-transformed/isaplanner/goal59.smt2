; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new6 (Int Bool) Bool)
(declare-fun new2 (Int Bool) Bool)
(declare-fun new15 (Bool) Bool)
(declare-fun new13 (Bool) Bool)
(declare-fun new10 (Bool) Bool)
(declare-fun new1 (Int Int Int Bool) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new15 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new15 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new10 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new10 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (new10 A)
      (new10 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (>= A 0)
      )
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (>= A 0)
      )
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new13 B)
      )
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (>= C 0)
        (>= A 0)
        (= A (+ 1 C))
        (new6 C B)
      )
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (>= A 0)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (>= A 0)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new15 B)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (>= C 0)
        (>= A 0)
        (= A (+ 1 C))
        (new2 C B)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (new2 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new2 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new2 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (= A 0)
        (new2 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (new6 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new6 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new6 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (= A 0)
        (new6 A B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (= A 0)
        (= A 0)
        (new10 B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= C 0)
        (>= D 0)
        (>= E 0)
        (>= A 0)
        (= A (+ 1 C))
        (= A (+ 1 D))
        (= A (+ 1 E))
        (new1 E D C B)
      )
      (new1 A A A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) )
    (=>
      (and
        (= A false)
        (>= B 0)
        (new1 B B B A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
