; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new26 (Int Int) Bool)
(declare-fun new2 (Int Int Int Int) Bool)
(declare-fun new15 (Int Int) Bool)
(declare-fun new1 (Int Int Int Int) Bool)
(declare-fun diff_new8 (Int Int Int Int Int) Bool)
(declare-fun diff_new6 (Int Int Int Int Int) Bool)
(declare-fun diff_new4 (Int Int Int Int Int) Bool)
(declare-fun diff_new14 (Int Int Int Int Int) Bool)
(declare-fun diff_new12 (Int Int Int Int Int) Bool)
(declare-fun diff_new10 (Int Int Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Int) )
    (=>
      (= B 0)
      (new26 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= B (+ 1 C))
        (new26 A C)
      )
      (new26 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (>= (- C A) 1)
        (new26 A B)
      )
      (new26 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (new26 A B)
      )
      (new26 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (= B 0)
      (new15 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= B (+ 1 C))
        (new15 A C)
      )
      (new15 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (>= (- C A) 1)
        (new15 A B)
      )
      (new15 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (new15 A B)
      )
      (new15 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (= D 0)
        (= B 0)
      )
      (diff_new14 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (<= C (- A 1))
        (= D (+ 1 E))
        (= B (+ 1 E))
        (new15 A E)
      )
      (diff_new14 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (<= C (- D 1))
        (new15 A B)
      )
      (diff_new14 A A B C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- D A) (- 1))
        (<= (- D A) (- 1))
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (<= C (- D 1))
        (new15 A B)
      )
      (diff_new14 A A B C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= C E)
        (<= (- E A) (- 1))
        (<= (- E A) (- 1))
        (<= (- C A) (- 1))
        (diff_new14 A A B C D)
      )
      (diff_new14 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- C A) 1)
        (>= (- C A) 1)
        (= D 0)
        (= B 0)
      )
      (diff_new12 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= (- C A) 1)
        (>= C A)
        (= D (+ 1 E))
        (= B (+ 1 F))
        (diff_new12 A A F C E)
      )
      (diff_new12 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (>= (- C A) 1)
        (>= (- C A) 1)
        (<= C (- D 1))
        (new15 A B)
      )
      (diff_new12 A A B C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- E A) 1)
        (>= (- E A) 1)
        (>= (- C A) 1)
        (>= C E)
        (diff_new12 A A B C D)
      )
      (diff_new12 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- C A) 1)
        (>= C E)
        (<= (- E A) (- 1))
        (<= (- E A) (- 1))
        (diff_new12 A A B C D)
      )
      (diff_new12 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= D 0)
        (= C (+ 1 D))
        (= B 0)
      )
      (diff_new10 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= A A)
        (= C (+ 1 D))
        (= B (+ 1 E))
        (diff_new10 A A A E D)
      )
      (diff_new10 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (<= A (- D 1))
        (= C (+ 1 B))
        (new15 A B)
      )
      (diff_new10 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= A D)
        (<= (- D A) (- 1))
        (<= (- D A) (- 1))
        (diff_new10 A A A B C)
      )
      (diff_new10 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (= D 0)
        (= B 0)
      )
      (diff_new8 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (<= C (- A 1))
        (= D (+ 1 E))
        (= B (+ 1 E))
        (new26 A E)
      )
      (diff_new8 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (<= C (- D 1))
        (new26 A B)
      )
      (diff_new8 A A B C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- D A) (- 1))
        (<= (- D A) (- 1))
        (<= (- C A) (- 1))
        (<= (- C A) (- 1))
        (<= C (- D 1))
        (new26 A B)
      )
      (diff_new8 A A B C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= C E)
        (<= (- E A) (- 1))
        (<= (- E A) (- 1))
        (<= (- C A) (- 1))
        (diff_new8 A A B C D)
      )
      (diff_new8 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- C A) 1)
        (>= (- C A) 1)
        (= D 0)
        (= B 0)
      )
      (diff_new6 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= (- C A) 1)
        (>= C A)
        (= D (+ 1 E))
        (= B (+ 1 F))
        (diff_new6 A A F C E)
      )
      (diff_new6 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (>= (- C A) 1)
        (>= (- C A) 1)
        (<= C (- D 1))
        (new26 A B)
      )
      (diff_new6 A A B C B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- E A) 1)
        (>= (- E A) 1)
        (>= (- C A) 1)
        (>= C E)
        (diff_new6 A A B C D)
      )
      (diff_new6 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- C A) 1)
        (>= C E)
        (<= (- E A) (- 1))
        (<= (- E A) (- 1))
        (diff_new6 A A B C D)
      )
      (diff_new6 A A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= D 0)
        (= C (+ 1 D))
        (= B 0)
      )
      (diff_new4 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= A A)
        (= C (+ 1 D))
        (= B (+ 1 E))
        (diff_new4 A A A E D)
      )
      (diff_new4 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (<= A (- D 1))
        (= C (+ 1 B))
        (new26 A B)
      )
      (diff_new4 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= A D)
        (<= (- D A) (- 1))
        (<= (- D A) (- 1))
        (diff_new4 A A A B C)
      )
      (diff_new4 A A A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= C 0)
        (= B 0)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and
        (= B (+ 1 D))
        (diff_new4 A E F G C)
        (new2 A D A G)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= (- D A) 1)
        (diff_new6 A E F D C)
        (new2 A B A F)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (<= (- D A) (- 1))
        (diff_new8 A E F D C)
        (new2 A B A F)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= C 0)
        (= B 0)
      )
      (new1 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and
        (= B (+ 1 D))
        (diff_new10 A E F G C)
        (new1 A D A G)
      )
      (new1 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= (- D A) 1)
        (diff_new12 A E F D C)
        (new1 A B A F)
      )
      (new1 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (<= (- D A) (- 1))
        (diff_new14 A E F D C)
        (new1 A B A F)
      )
      (new1 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (>= (- A B) 1)
        (new1 C B C A)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (new2 C B C A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
