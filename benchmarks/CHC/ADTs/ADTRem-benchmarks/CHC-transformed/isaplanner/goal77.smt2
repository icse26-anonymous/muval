; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new4 (Int Int Int Int Int) Bool)
(declare-fun new3 (Int Int Int Int Int) Bool)
(declare-fun new2 (Int Int Int Int Int) Bool)
(declare-fun new1 (Int Int Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- A B) 1)
        (= C 0)
        (= D 0)
      )
      (new4 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= (- A B) 1)
        (= D (+ 1 E))
        (= C (+ 1 F))
        (new4 A B F B E)
      )
      (new4 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- E B) 1)
        (>= (- E B) 1)
        (>= (- A B) 1)
        (new4 A B C B D)
      )
      (new4 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- A B) 1)
        (<= (- E B) (- 1))
        (<= (- E B) (- 1))
        (new4 A B C B D)
      )
      (new4 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- A B) 1)
        (= C 0)
        (= D 0)
      )
      (new3 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= (- A B) 1)
        (= D (+ 1 E))
        (= C (+ 1 F))
        (new3 A B F B E)
      )
      (new3 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- E B) 1)
        (>= (- E B) 1)
        (>= (- A B) 1)
        (new3 A B C B D)
      )
      (new3 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- A B) 1)
        (<= (- E B) (- 1))
        (<= (- E B) (- 1))
        (new3 A B C B D)
      )
      (new3 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (= C 0)
        (= D 0)
      )
      (new2 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (= D (+ 1 E))
        (= C (+ 1 F))
        (new2 A B F B E)
      )
      (new2 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- E B) 1)
        (>= (- E B) 1)
        (<= (- A B) (- 1))
        (new2 A B C B D)
      )
      (new2 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (<= (- E B) (- 1))
        (<= (- E B) (- 1))
        (<= (- A B) (- 1))
        (new2 A B C B D)
      )
      (new2 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (= C 0)
        (= D 0)
      )
      (new1 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (= D (+ 1 E))
        (= C (+ 1 F))
        (new1 A B F B E)
      )
      (new1 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- E B) 1)
        (>= (- E B) 1)
        (<= (- A B) (- 1))
        (new1 A B C B D)
      )
      (new1 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (<= (- E B) (- 1))
        (<= (- E B) (- 1))
        (<= (- A B) (- 1))
        (new1 A B C B D)
      )
      (new1 A B C B D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- A B) 1)
        (>= (- C D) 1)
        (new1 D C B C A)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- A B) 1)
        (<= (- C D) (- 1))
        (new2 B A D A C)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- A B) 1)
        (<= (- C D) (- 1))
        (new3 D C B C A)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (<= (- C D) (- 1))
        (new4 D C B C A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
