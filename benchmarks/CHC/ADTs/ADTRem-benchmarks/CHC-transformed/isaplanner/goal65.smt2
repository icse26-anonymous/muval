; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new7 (Int Int) Bool)
(declare-fun new2 (Int Int) Bool)
(declare-fun new10 (Int Int) Bool)
(declare-fun new1 (Int Int) Bool)
(declare-fun diff_new9 () Bool)
(declare-fun diff_new6 (Int Int Int) Bool)
(declare-fun diff_new4 (Int Int Int) Bool)
(declare-fun diff_new12 () Bool)
(declare-fun ff () Bool)

(assert
    diff_new12
)
(assert
  (forall ( (A Int) )
    (new10 A A)
  )
)
(assert
    diff_new9
)
(assert
  (forall ( (A Int) )
    (new7 A A)
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new7 A C)
      (diff_new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        diff_new9
        (diff_new6 A D C)
      )
      (diff_new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (new10 A C)
      (diff_new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        diff_new12
        (diff_new4 A D C)
      )
      (diff_new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) )
    (new2 A A)
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (diff_new4 C D B)
        (new2 A C)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) )
    (new1 A A)
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (diff_new6 C D B)
        (new1 A C)
      )
      (new1 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (>= (- A B) 1)
        (new1 A B)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (new2 A B)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
