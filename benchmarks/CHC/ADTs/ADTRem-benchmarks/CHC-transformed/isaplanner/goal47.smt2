; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new2 (Int Int) Bool)
(declare-fun new1 (Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= B 0)
        (= A 0)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C 0)
        (>= D 0)
        (>= D C)
        (>= E 0)
        (>= E F)
        (>= F 0)
        (= B (+ 1 E))
        (= A (+ 1 D))
        (new2 D F)
        (new2 C E)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C (+ D 1))
        (>= C 0)
        (>= D 0)
        (>= E 0)
        (>= E F)
        (>= F 0)
        (= B (+ 1 E))
        (= A (+ 1 C))
        (new2 D F)
        (new2 C E)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C 0)
        (>= D 0)
        (>= D C)
        (>= E 0)
        (>= F (+ E 1))
        (>= F 0)
        (= B (+ 1 F))
        (= A (+ 1 D))
        (new2 D F)
        (new2 C E)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C (+ D 1))
        (>= C 0)
        (>= D 0)
        (>= E 0)
        (>= F (+ E 1))
        (>= F 0)
        (= B (+ 1 F))
        (= A (+ 1 C))
        (new2 D F)
        (new2 C E)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= B 0)
        (= A 0)
      )
      (new1 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C 0)
        (>= D 0)
        (>= D C)
        (>= E 0)
        (>= E F)
        (>= F 0)
        (= B (+ 1 E))
        (= A (+ 1 D))
        (new1 D F)
        (new1 C E)
      )
      (new1 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C (+ D 1))
        (>= C 0)
        (>= D 0)
        (>= E 0)
        (>= E F)
        (>= F 0)
        (= B (+ 1 E))
        (= A (+ 1 C))
        (new1 D F)
        (new1 C E)
      )
      (new1 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C 0)
        (>= D 0)
        (>= D C)
        (>= E 0)
        (>= F (+ E 1))
        (>= F 0)
        (= B (+ 1 F))
        (= A (+ 1 D))
        (new1 D F)
        (new1 C E)
      )
      (new1 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (>= C (+ D 1))
        (>= C 0)
        (>= D 0)
        (>= E 0)
        (>= F (+ E 1))
        (>= F 0)
        (= B (+ 1 F))
        (= A (+ 1 C))
        (new1 D F)
        (new1 C E)
      )
      (new1 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (>= (- A B) 1)
        (new1 B A)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (new2 B A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
