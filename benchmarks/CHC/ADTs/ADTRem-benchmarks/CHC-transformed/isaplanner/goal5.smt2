; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new6 (Int Int) Bool)
(declare-fun new3 (Int Int) Bool)
(declare-fun new2 (Int Int Int Int Int) Bool)
(declare-fun new1 (Int Int Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Int) )
    (=>
      (= B 0)
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= B (+ 1 C))
        (new6 A C)
      )
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (>= (- C A) 1)
        (new6 A B)
      )
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (new6 A B)
      )
      (new6 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (= B 0)
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= B (+ 1 C))
        (new3 A C)
      )
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (>= (- C A) 1)
        (new3 A B)
      )
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (<= (- C A) (- 1))
        (new3 A B)
      )
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= D 0)
        (= C (+ 1 D))
        (= B 0)
      )
      (new2 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= D (+ 1 E))
        (= C (+ 1 D))
        (= B (+ 1 E))
        (new3 A E)
      )
      (new2 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (= C (+ 1 B))
        (new3 A B)
      )
      (new2 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- D A) (- 1))
        (<= (- D A) (- 1))
        (= C (+ 1 B))
        (new3 A B)
      )
      (new2 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= D 0)
        (= C (+ 1 D))
        (= B 0)
      )
      (new1 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= D (+ 1 E))
        (= C (+ 1 D))
        (= B (+ 1 E))
        (new6 A E)
      )
      (new1 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- D A) 1)
        (>= (- D A) 1)
        (= C (+ 1 B))
        (new6 A B)
      )
      (new1 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- D A) (- 1))
        (<= (- D A) (- 1))
        (= C (+ 1 B))
        (new6 A B)
      )
      (new1 A B A A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (>= (- A B) 2)
        (new1 C B C C A)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (<= (- A B) 0)
        (new2 C B C C A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
