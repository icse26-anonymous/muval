; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new9 (Bool Int Bool) Bool)
(declare-fun new6 (Bool Int Bool) Bool)
(declare-fun new1 (Bool) Bool)
(declare-fun diff_new8 (Bool Bool Int Int) Bool)
(declare-fun diff_new5 (Bool Bool Int Int) Bool)
(declare-fun diff_new3 (Bool Int Bool) Bool)
(declare-fun diff_new13 (Int Bool) Bool)
(declare-fun diff_new11 (Int Bool) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (= B true)
      (diff_new11 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (= B true)
        (<= C A)
        (diff_new11 A B)
        (diff_new11 A B)
      )
      (diff_new11 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (= B true)
      (diff_new13 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (= B true)
        (<= C (- A 1))
        (diff_new13 A B)
        (diff_new13 A B)
      )
      (diff_new13 A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (= A true)
      )
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) (D Int) )
    (=>
      (and
        (= C true)
        (= A true)
        (<= D (- B 1))
        (diff_new13 D A)
        (diff_new11 D A)
        (new9 A B C)
        (new9 A B C)
      )
      (new9 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) )
    (=>
      (and
        (= B true)
        (= A true)
      )
      (diff_new8 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) )
    (=>
      (and
        (= B true)
        (= A true)
        (<= D C)
        (diff_new11 C B)
        (diff_new11 C B)
      )
      (diff_new8 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) )
    (=>
      (and
        (= B true)
        (= A true)
        (<= D C)
        (diff_new11 C A)
        (diff_new11 C A)
      )
      (diff_new8 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= B true)
        (= A true)
        (<= D C)
        (<= E C)
        (diff_new11 C B)
        (diff_new11 C B)
        (diff_new11 C A)
        (diff_new11 C A)
      )
      (diff_new8 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (= A true)
      )
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) (D Int) )
    (=>
      (and
        (= C true)
        (= A true)
        (<= D B)
        (diff_new13 D A)
        (diff_new11 D A)
        (new6 A B C)
        (new6 A B C)
      )
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) )
    (=>
      (and
        (= B true)
        (= A true)
      )
      (diff_new5 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) )
    (=>
      (and
        (= B true)
        (= A true)
        (<= D (- C 1))
        (diff_new13 C B)
        (diff_new13 C B)
      )
      (diff_new5 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) )
    (=>
      (and
        (= B true)
        (= A true)
        (<= D (- C 1))
        (diff_new13 C A)
        (diff_new13 C A)
      )
      (diff_new5 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= B true)
        (= A true)
        (<= D (- C 1))
        (<= E (- C 1))
        (diff_new13 C B)
        (diff_new13 C B)
        (diff_new13 C A)
        (diff_new13 C A)
      )
      (diff_new5 A B C C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= A true)
      )
      (diff_new3 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Bool) (E Int) )
    (=>
      (and
        (= A true)
        (<= C (- B 1))
        (diff_new5 A D C E)
        (diff_new3 A B A)
        (new6 A C A)
      )
      (diff_new3 A B A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Bool) (E Int) )
    (=>
      (and
        (= A true)
        (>= C B)
        (diff_new8 A D C E)
        (diff_new3 A B A)
        (new9 A C A)
      )
      (diff_new3 A B A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) )
    (=>
      (and
        (diff_new3 B C A)
        (new1 B)
      )
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (and
        (= A false)
        (new1 A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
