; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new40 (Bool Int) Bool)
(declare-fun new4 (Int Bool Int) Bool)
(declare-fun new30 (Int) Bool)
(declare-fun new28 (Int Bool) Bool)
(declare-fun new21 (Int) Bool)
(declare-fun new2 (Bool) Bool)
(declare-fun new18 (Int) Bool)
(declare-fun new16 (Int Bool) Bool)
(declare-fun new1 (Bool Bool Bool) Bool)
(declare-fun diff_new6 (Bool Bool Int Int Bool Int Int Int Int Int) Bool)
(declare-fun diff_new12 (Bool Bool Int Int Bool Int Int Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Bool) (B Int) )
    (=>
      (and
        (= A true)
        (= B 0)
      )
      (new40 A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= C D)
        (= E (+ 1 C))
        (= B (+ 1 C))
        (new40 A D)
        (new40 A C)
      )
      (new40 A B)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new30 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new30 B)
      )
      (new30 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (= A 0)
      )
      (new28 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= B true)
        (= B true)
        (<= C D)
        (= E (+ 1 C))
        (= A (+ 1 C))
        (new28 D B)
        (new28 C B)
      )
      (new28 A B)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new21 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new21 B)
      )
      (new21 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new18 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new18 B)
      )
      (new18 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (= A 0)
      )
      (new16 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= B true)
        (= B true)
        (<= C D)
        (= E (+ 1 C))
        (= A (+ 1 C))
        (new16 D B)
        (new16 C B)
      )
      (new16 A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= G F)
        (= H 0)
        (= E 0)
        (= D 0)
        (= B (+ 1 G))
        (new16 F A)
        (new16 G A)
      )
      (diff_new12 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= G F)
        (= H (+ 1 I))
        (= E 0)
        (= D 0)
        (= B (+ 1 G))
        (new18 I)
        (new16 F A)
        (new16 G A)
      )
      (diff_new12 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= G F)
        (= H 0)
        (= E (+ 1 I))
        (= B (+ 1 G))
        (new21 I)
        (new16 F A)
        (new16 G A)
      )
      (diff_new12 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= G F)
        (= H (+ 1 I))
        (= E (+ 1 J))
        (= B (+ 1 G))
        (new21 J)
        (new18 I)
        (new16 F A)
        (new16 G A)
      )
      (diff_new12 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (= B true)
        (= C 0)
        (= A 0)
      )
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= B true)
        (= B true)
        (<= D E)
        (= A (+ 1 D))
        (= C (+ 1 D))
        (new40 B E)
        (new40 B D)
      )
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= H G)
        (= F 0)
        (= E 0)
        (= D 0)
        (= B (+ 1 H))
        (new28 G A)
        (new28 H A)
      )
      (diff_new6 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= H G)
        (= F (+ 1 I))
        (= E 0)
        (= D 0)
        (= B (+ 1 H))
        (new30 I)
        (new28 G A)
        (new28 H A)
      )
      (diff_new6 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= H G)
        (= F 0)
        (= E (+ 1 I))
        (= B (+ 1 H))
        (new21 I)
        (new28 G A)
        (new28 H A)
      )
      (diff_new6 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= H G)
        (= F (+ 1 I))
        (= E (+ 1 J))
        (= B (+ 1 H))
        (new21 J)
        (new30 I)
        (new28 G A)
        (new28 H A)
      )
      (diff_new6 A A B C A D E F G H)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new2 A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= B C)
        (= D (+ 1 B))
        (new40 A C)
        (new40 A B)
      )
      (new2 A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) )
    (=>
      (and
        (= B true)
        (new2 A)
      )
      (new1 A A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) )
    (=>
      (and
        (= B true)
        (new2 A)
      )
      (new1 A B A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Bool) )
    (=>
      (and
        (= C 1)
        (= D 1)
        (= B true)
        (= A true)
        (<= E F)
        (<= G F)
        (<= H I)
        (<= J K)
        (<= L (- M 1))
        (= N (+ 1 E))
        (= O (+ 1 G))
        (= O (+ 1 H))
        (= P (+ 1 J))
        (diff_new6 B Q P L R H G E K J)
        (new4 I A F)
        (new1 A A R)
      )
      (new1 A A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Bool) )
    (=>
      (and
        (= C 0)
        (= D 1)
        (= B true)
        (= A true)
        (>= E (+ F 1))
        (<= G H)
        (<= H I)
        (<= J K)
        (<= L (- M 1))
        (= N (+ 1 G))
        (= O (+ 1 H))
        (= O (+ 1 F))
        (= P (+ 1 J))
        (diff_new6 B Q P L R E I G K J)
        (new1 A A R)
        (new4 F A H)
      )
      (new1 A A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Bool) )
    (=>
      (and
        (= C 1)
        (= D 0)
        (= B true)
        (= A true)
        (>= E F)
        (<= G H)
        (<= I H)
        (<= J K)
        (<= L M)
        (= N (+ 1 G))
        (= O (+ 1 I))
        (= O (+ 1 J))
        (= P (+ 1 L))
        (diff_new12 B Q P F R J I M L G)
        (new4 K A H)
        (new1 A R A)
      )
      (new1 A B A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Bool) (R Bool) )
    (=>
      (and
        (= C 0)
        (= D 0)
        (= B true)
        (= A true)
        (>= E (+ F 1))
        (>= G H)
        (<= I J)
        (<= J K)
        (<= L M)
        (= N (+ 1 I))
        (= O (+ 1 J))
        (= O (+ 1 F))
        (= P (+ 1 L))
        (diff_new12 B Q P H R E K M L I)
        (new1 A R A)
        (new4 F A J)
      )
      (new1 A B A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) )
    (=>
      (and
        (= A true)
        (= B false)
        (new1 B A A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
