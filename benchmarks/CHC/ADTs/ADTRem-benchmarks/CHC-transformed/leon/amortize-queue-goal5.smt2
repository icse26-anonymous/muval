; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new4 (Int Int Int) Bool)
(declare-fun new3 (Int Int Int) Bool)
(declare-fun new2 (Int Int Int Int) Bool)
(declare-fun new1 (Int Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= C 0)
        (= A 0)
      )
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (= C (+ 1 D))
        (= A (+ 1 E))
        (new4 E F D)
      )
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= C 0)
        (= A 0)
      )
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (= C (+ 1 D))
        (= A (+ 1 E))
        (new3 E F D)
      )
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= D 0)
        (= C (+ 1 D))
        (= B 0)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and
        (= D (+ 1 E))
        (= C (+ 1 D))
        (= B (+ 1 F))
        (new3 E G F)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= D 0)
        (= C (+ 1 D))
        (= B 0)
      )
      (new1 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and
        (= D (+ 1 E))
        (= C (+ 1 D))
        (= B (+ 1 F))
        (new4 E G F)
      )
      (new1 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (>= (- A B) 2)
        (new1 C B C A)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (<= (- A B) 0)
        (new2 C B C A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
