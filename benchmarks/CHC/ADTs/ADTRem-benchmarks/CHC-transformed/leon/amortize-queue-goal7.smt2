; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new4 (Int Int Bool) Bool)
(declare-fun new3 (Int Int Bool) Bool)
(declare-fun new2 (Int Int Bool Bool) Bool)
(declare-fun new1 (Int Int Bool Bool) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (= B 0)
        (= A 0)
      )
      (new4 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (= B 0)
        (= A 0)
      )
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and
        (= C true)
        (>= E 0)
        (>= F 0)
        (>= G 0)
        (>= H 0)
        (<= I F)
        (= G 0)
        (= I 0)
        (= E 0)
        (= B (+ F E))
        (= A (+ H G))
        (new3 F H D)
      )
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Int) (H Int) (I Int) )
    (=>
      (and
        (= C true)
        (>= E 0)
        (>= F 0)
        (>= G 0)
        (>= H 0)
        (<= I F)
        (= G 0)
        (= I 0)
        (= E 0)
        (= B (+ F E))
        (= A (+ H G))
        (new4 F H D)
      )
      (new1 A B C D)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) )
    (=>
      (and
        (= A false)
        (= B true)
        (>= (- C D) 2)
        (new1 D C B A)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) )
    (=>
      (and
        (= A false)
        (= B true)
        (<= (- C D) 0)
        (new2 D C B A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
