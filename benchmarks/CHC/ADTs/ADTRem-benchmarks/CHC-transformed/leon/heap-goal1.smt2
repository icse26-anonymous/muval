; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new7 (Int Bool Int) Bool)
(declare-fun new3 (Bool Int) Bool)
(declare-fun new2 (Int Int Bool Bool) Bool)
(declare-fun new14 (Int) Bool)
(declare-fun new13 (Int) Bool)
(declare-fun new1 (Int Bool Bool) Bool)
(declare-fun diff_new9 (Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new14 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new14 B)
      )
      (new14 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new13 B)
      )
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (= B true)
        (= C 0)
        (= A 0)
      )
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= B true)
        (= B true)
        (<= D E)
        (= A (+ 1 D))
        (= C (+ 1 D))
        (new3 B E)
        (new3 B D)
      )
      (new7 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= C 0)
        (= B 0)
        (= A 0)
      )
      (diff_new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= C (+ 1 D))
        (= B 0)
        (= A 0)
        (new13 D)
      )
      (diff_new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (= C 0)
        (= B (+ 1 D))
        (new14 D)
      )
      (diff_new9 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= C (+ 1 D))
        (= B (+ 1 E))
        (new14 E)
        (new13 D)
      )
      (diff_new9 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) )
    (=>
      (and
        (= A true)
        (= B 0)
      )
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= A true)
        (= A true)
        (<= C D)
        (= E (+ 1 C))
        (= B (+ 1 C))
        (new3 A D)
        (new3 A C)
      )
      (new3 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Bool) (E Int) (F Int) (G Int) )
    (=>
      (and
        (= D true)
        (= D true)
        (= D true)
        (= D true)
        (= C true)
        (<= E F)
        (= E 0)
        (= F 0)
        (= G 0)
        (= A (+ 1 G))
        (= A 1)
      )
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) )
    (=>
      (and
        (= D 1)
        (= E 1)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (<= F G)
        (<= H I)
        (<= F G)
        (<= J (- B 1))
        (<= K L)
        (= H (+ 1 F))
        (= I 0)
        (= L 0)
        (= M (+ 1 F))
        (= N (+ 1 M))
        (= N (+ 1 K))
        (= K (+ 1 F))
        (= K (+ 1 F))
        (= A 1)
        (new3 C G)
        (new3 C F)
      )
      (new2 A B C C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) )
    (=>
      (and
        (= D 0)
        (= E 1)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (= C true)
        (>= F (+ G 1))
        (<= H I)
        (<= J K)
        (<= H I)
        (<= L (- B 1))
        (= J 0)
        (= K (+ 1 H))
        (= G 0)
        (= M 0)
        (= N 0)
        (= O (+ 1 M))
        (= O (+ 1 N))
        (= F (+ 1 H))
        (= F (+ 1 H))
        (= A 1)
        (new3 C I)
        (new3 C H)
      )
      (new2 A B C C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and
        (= D 1)
        (= E 0)
        (= C true)
        (>= F B)
        (<= G H)
        (<= I H)
        (<= J K)
        (= L (+ 1 G))
        (= M (+ 1 I))
        (= M (+ 1 J))
        (= A 1)
        (diff_new9 J I G)
        (new7 K C H)
        (new2 A B C C)
      )
      (new2 A B C C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) )
    (=>
      (and
        (= D 0)
        (= E 0)
        (= C true)
        (>= F (+ G 1))
        (>= H B)
        (<= I J)
        (<= J K)
        (= L (+ 1 I))
        (= M (+ 1 J))
        (= M (+ 1 G))
        (= A 1)
        (diff_new9 F K I)
        (new2 A B C C)
        (new7 G C J)
      )
      (new2 A B C C)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Bool) (D Int) )
    (=>
      (and
        (= D 1)
        (new2 D A C B)
      )
      (new1 A B C)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) )
    (=>
      (and
        (= A false)
        (= B true)
        (new1 C A B)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
