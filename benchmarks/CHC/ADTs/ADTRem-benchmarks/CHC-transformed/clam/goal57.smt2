; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new9 (Bool) Bool)
(declare-fun new4 (Int Int Int Bool) Bool)
(declare-fun new3 (Int Int Bool) Bool)
(declare-fun new2 (Int Bool) Bool)
(declare-fun new1 (Int Int Int Int Int Int Int Int Int Bool) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new9 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (new9 A)
      (new9 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) )
    (=>
      (and
        (= D true)
        (>= C 1)
        (>= B 0)
        (>= A 0)
      )
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) )
    (=>
      (and
        (= D true)
        (>= C 1)
        (>= B 0)
        (>= A 0)
        (= B 0)
      )
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) )
    (=>
      (and
        (>= C 1)
        (>= B 0)
        (>= A 0)
        (= A 0)
        (new3 B C D)
      )
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Int) )
    (=>
      (and
        (>= E 0)
        (>= C 1)
        (>= B 0)
        (>= A 0)
        (= A (+ 1 E))
        (new4 E B C D)
      )
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (>= B 1)
        (>= A 0)
      )
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (>= B 1)
        (>= A 0)
        (= A 0)
        (new2 B C)
      )
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) )
    (=>
      (and
        (>= D 0)
        (>= B 1)
        (>= A 0)
        (= A (+ 1 D))
        (new3 D B C)
      )
      (new3 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (>= A 0)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new9 B)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (>= C 0)
        (>= A 0)
        (= A (+ 1 C))
        (new2 C B)
      )
      (new2 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) )
    (=>
      (and
        (>= H 0)
        (>= I 0)
        (>= J 0)
        (>= E 1)
        (>= D 0)
        (>= A 1)
        (= J 0)
        (= E (+ 1 H))
        (= D 0)
        (= F (+ (- 1) A))
        (= F 0)
        (= E (+ 1 I))
        (= D 0)
        (= A (+ 1 J))
        (new2 H G)
      )
      (new1 A B C D E F B D E G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) )
    (=>
      (and
        (>= H 0)
        (>= I 0)
        (>= J 0)
        (>= E 1)
        (>= D 0)
        (>= A 1)
        (= J 0)
        (= D (+ 1 H))
        (= F (+ (- 1) A))
        (= F 0)
        (= D (+ 1 I))
        (= A (+ 1 J))
        (new3 H E G)
      )
      (new1 A B C D E F B D E G)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) )
    (=>
      (and
        (>= H 0)
        (>= I 0)
        (>= J 0)
        (>= E 1)
        (>= D 0)
        (>= A 1)
        (= J (+ 1 H))
        (= F (+ 1 I))
        (= F (+ (- 1) A))
        (= A (+ 1 J))
        (new4 I D E G)
      )
      (new1 A B C D E F B D E G)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) )
    (=>
      (and
        (= A false)
        (>= B 1)
        (>= C 0)
        (>= D 0)
        (= E (+ 1 C))
        (new1 E F G D B C F D B A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
