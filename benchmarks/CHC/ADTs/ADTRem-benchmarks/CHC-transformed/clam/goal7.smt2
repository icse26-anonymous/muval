; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new9 (Int) Bool)
(declare-fun new6 (Int) Bool)
(declare-fun new3 (Int) Bool)
(declare-fun new2 (Int Int Int) Bool)
(declare-fun new11 (Int) Bool)
(declare-fun new1 (Int Int Int) Bool)
(declare-fun diff_new8 (Int Int Int) Bool)
(declare-fun diff_new5 (Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new11 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new11 B)
      )
      (new11 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new9 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new9 B)
      )
      (new9 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= B (+ 1 C))
        (new9 C)
      )
      (diff_new8 A B C)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new6 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new6 B)
      )
      (new6 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) )
    (=>
      (and
        (= B (+ 1 C))
        (new11 C)
      )
      (diff_new5 A B C)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new3 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new3 B)
      )
      (new3 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= B 0)
        (new3 A)
      )
      (new2 A B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (= B (+ 1 D))
        (diff_new5 E F C)
        (new2 A D F)
      )
      (new2 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= B 0)
        (new6 A)
      )
      (new1 A B A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (= B (+ 1 D))
        (diff_new8 E F C)
        (new1 A D F)
      )
      (new1 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (>= (- A B) 1)
        (= (+ C D) A)
        (new1 B C D)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (= (+ C D) A)
        (new2 B C D)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
