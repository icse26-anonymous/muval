; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new8 (Bool) Bool)
(declare-fun new7 (Int Bool) Bool)
(declare-fun new6 (Int Int Bool) Bool)
(declare-fun new4 (Int Int Int Bool) Bool)
(declare-fun new3 (Int Int Int Int Bool) Bool)
(declare-fun new2 (Int Int Int Bool) Bool)
(declare-fun new10 (Int Bool) Bool)
(declare-fun new1 (Int Int Int Int Int Bool) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (= A 0)
      )
      (new10 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= A 0)
        (new8 B)
      )
      (new10 A B)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new8 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (new8 A)
      (new8 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (= B true)
        (>= A 0)
      )
      (new7 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (and
        (>= A 0)
        (= A 0)
        (new8 B)
      )
      (new7 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (>= C 0)
        (>= A 0)
        (= A (+ 1 C))
        (new7 C B)
      )
      (new7 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (= B 0)
        (= A 0)
      )
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (= B 0)
        (= A 0)
      )
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= B 0)
        (= A 0)
        (new10 B C)
      )
      (new6 A B C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) )
    (=>
      (and
        (= D true)
        (>= B 1)
        (= C (+ (- 1) B))
        (= A 1)
      )
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) )
    (=>
      (and
        (= D true)
        (>= B 1)
        (= C (+ (- 1) B))
        (= C 0)
        (= A 1)
      )
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Bool) (E Int) (F Int) )
    (=>
      (and
        (>= E 0)
        (>= F 0)
        (>= B 1)
        (= C (+ (- 1) B))
        (= B (+ 1 E))
        (= A (+ 1 F))
        (= A 1)
        (new2 E F C D)
      )
      (new4 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) )
    (=>
      (and
        (= E true)
        (>= C 1)
        (>= A 0)
        (= D (+ (- 1) C))
        (= B (+ 1 A))
      )
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) )
    (=>
      (and
        (= E true)
        (>= C 1)
        (>= A 0)
        (= D (+ (- 1) C))
        (= D 0)
        (= B (+ 1 A))
      )
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) )
    (=>
      (and
        (>= C 1)
        (>= A 0)
        (= D (+ (- 1) C))
        (= B (+ 1 A))
        (= A 0)
        (new4 B C D E)
      )
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Int) (G Int) )
    (=>
      (and
        (>= F 0)
        (>= G 0)
        (>= C 1)
        (>= A 0)
        (= D (+ (- 1) C))
        (= B (+ 1 F))
        (= B (+ 1 A))
        (= A (+ 1 G))
        (new3 G F C D E)
      )
      (new3 A B C D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (>= A 0)
        (= B 0)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (>= A 0)
        (= A 0)
        (= B 0)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (>= A 0)
        (= B 0)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (= C true)
        (>= A 0)
        (= A 0)
        (= B 0)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) )
    (=>
      (and
        (>= A 0)
        (= B 0)
        (= A 0)
        (new6 B A C)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Bool) (D Int) (E Int) )
    (=>
      (and
        (>= D 0)
        (>= E 0)
        (>= A 0)
        (= A (+ 1 D))
        (= B 0)
        (= A (+ 1 E))
        (new7 E C)
      )
      (new2 A B A C)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Int) )
    (=>
      (and
        (>= F 0)
        (>= C 1)
        (>= A 0)
        (= D (+ (- 1) C))
        (= C (+ 1 F))
        (= A 0)
        (new2 F A D E)
      )
      (new1 A B C A D E)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Bool) (F Int) )
    (=>
      (and
        (>= F 0)
        (>= C 1)
        (>= A 0)
        (= D (+ (- 1) C))
        (= A (+ 1 F))
        (new3 F A C D E)
      )
      (new1 A B C A D E)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= A false)
        (>= B 0)
        (>= C 0)
        (= D (+ 1 B))
        (new1 C E D C B A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
