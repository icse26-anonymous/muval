; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new5 (Int) Bool)
(declare-fun new3 (Int) Bool)
(declare-fun new2 (Int Int Int Int) Bool)
(declare-fun new1 (Int Int Int Int) Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new5 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new5 B)
      )
      (new5 A)
    )
  )
)
(assert
  (forall ( (A Int) )
    (=>
      (= A 0)
      (new3 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) )
    (=>
      (and
        (= A (+ 1 B))
        (new3 B)
      )
      (new3 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= E (+ 1 D))
        (= C (+ 1 E))
        (new3 D)
      )
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (= D (+ 1 E))
        (= C (+ 1 F))
        (new2 A B F E)
      )
      (new2 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (= E (+ 1 D))
        (= C (+ 1 E))
        (new5 D)
      )
      (new1 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) (F Int) )
    (=>
      (and
        (= D (+ 1 E))
        (= C (+ 1 F))
        (new1 A B F E)
      )
      (new1 A B C D)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (<= (- A B) (- 1))
        (= C (+ (- 2) B))
        (new1 D E A C)
      )
      ff
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (E Int) )
    (=>
      (and
        (>= (- A B) 1)
        (= C (+ (- 2) B))
        (new2 D E A C)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
