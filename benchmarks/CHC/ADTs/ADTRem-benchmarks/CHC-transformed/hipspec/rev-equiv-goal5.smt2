; Automatically generated by map2smt

(set-logic HORN)




(declare-fun new6 (Bool) Bool)
(declare-fun new5 (Int Bool) Bool)
(declare-fun new2 (Bool) Bool)
(declare-fun new13 (Bool) Bool)
(declare-fun new10 (Int Bool) Bool)
(declare-fun new1 (Bool) Bool)
(declare-fun diff_new8 () Bool)
(declare-fun diff_new4 (Int Int Bool Bool) Bool)
(declare-fun diff_new12 () Bool)
(declare-fun ff () Bool)

(assert
  (forall ( (A Bool) )
    (=>
      (= A false)
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A false)
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) )
    (=>
      (and
        (= A false)
        (>= (- B C) 1)
      )
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) )
    (=>
      (and
        (= A false)
        (<= (- B C) (- 1))
      )
      (new13 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (new13 A)
      (new13 A)
    )
  )
)
(assert
    diff_new12
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (= B false)
      (new10 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (= B false)
        (>= (- A C) 1)
      )
      (new10 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        (= B false)
        (<= (- A C) (- 1))
      )
      (new10 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (new13 B)
      (new10 A B)
    )
  )
)
(assert
    diff_new8
)
(assert
  (forall ( (A Bool) )
    (=>
      (= A true)
      (new6 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (new6 A)
      (new6 A)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (new10 A B)
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) (C Int) )
    (=>
      (and
        diff_new12
        (new5 C B)
      )
      (new5 A B)
    )
  )
)
(assert
  (forall ( (A Int) (B Bool) )
    (=>
      (new5 A B)
      (diff_new4 A A B B)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (new6 A)
      (new2 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (and
        diff_new8
        (new2 A)
      )
      (new2 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (new2 A)
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Bool) )
    (=>
      (and
        (diff_new4 B C D A)
        (new1 D)
      )
      (new1 A)
    )
  )
)
(assert
  (forall ( (A Bool) )
    (=>
      (and
        (= A false)
        (new1 A)
      )
      ff
    )
  )
)

(assert (not ff))
(check-sat)
