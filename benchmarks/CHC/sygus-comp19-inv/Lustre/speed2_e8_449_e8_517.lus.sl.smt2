(set-logic HORN)

(declare-fun str_invariant
             (Bool
              Bool
              Bool
              Bool
              Bool
              Bool
              Bool
              Bool
              Int
              Int
              Bool
              Bool
              Int
              Bool)
             Bool)
(assert (forall ((A Bool)
         (B Int)
         (C Bool)
         (D Bool)
         (E Int)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Bool)
         (L Bool)
         (M Bool)
         (N Bool))
  (=> (and (str_invariant N M L K J I H G F E D C B A) (not (= L true)))
         false)
    ))
(assert (forall ((A Bool)
         (B Int)
         (C Bool)
         (D Bool)
         (E Int)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Bool)
         (L Bool)
         (M Bool)
         (N Bool))
  (let ((a!1 (- B (ite (= C true) E (ite (= D true) (+ E F) E))))
           (a!2 (ite (and (= M true) (not (= N true))) 2 0)))
     (let ((a!3 (ite (and (= N true) (not (= M true))) 1 a!2)))
     (let ((a!4 (and (not (= I true))
                     (= a!1 0)
                     (not (= H true))
                     (or (and (= N true) (= M true)) (not (= D true)))
                     (not (= C true))
                     (>= E 0)
                     (= A true)
                     (or (not (= N true)) (not (= M true)) (= D true))
                     (>= F 0)
                     (>= (- E) 0)
                     (= E 0)
                     (or (= J true) (not (= H true)))
                     (>= (- 2 F) 0)
                     (= (- F a!3) 0)
                     (or (not (= J true)) (= H true))
                     (= G true)
                     (= L true)
                     (= K true))))
       (=> a!4 (str_invariant N M L K J I H G F E D C B A)))))
    ))
(assert (forall ((A Int)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Bool)
         (G Bool)
         (H Bool)
         (I Int)
         (J Bool)
         (K Bool)
         (L Int)
         (M Int)
         (N Bool)
         (O Bool)
         (P Bool)
         (Q Bool)
         (R Bool)
         (S Bool)
         (T Bool)
         (U Bool)
         (V Bool)
         (W Bool)
         (X Int)
         (Y Bool)
         (Z Bool)
         (A1 Int)
         (B1 Bool))
  (let ((a!1 (or (and (= P true) (< X 0))
                    (and (not (= P true)) (<= X (- 10)))
                    (not (= D true))))
           (a!2 (or (and (= O true) (> X 0))
                    (and (not (= O true)) (>= X 10))
                    (not (= C true))))
           (a!3 (and (or (not (= P true)) (>= X 0))
                     (or (= P true) (> X (- 10)))))
           (a!4 (- X (ite (= Y true) A1 (ite (= Z true) (+ I A) I))))
           (a!5 (and (or (not (= O true)) (<= X 0)) (or (= O true) (< X 10))))
           (a!6 (or (not (= G true)) (and (not (= R true)) (not (= D true)))))
           (a!7 (ite (and (= Q true) (not (= B1 true))) 2 0)))
     (let ((a!8 (ite (and (= B1 true) (not (= Q true))) 1 a!7)))
     (let ((a!9 (and (str_invariant V U T S R P O N M L K J I H)
                     a!1
                     a!2
                     (or a!3 (= D true))
                     (= a!4 0)
                     (or a!5 (= C true))
                     (or (and (= B1 true) (= Q true)) (not (= Z true)))
                     (not (= Y true))
                     (>= A1 0)
                     (not (= W true))
                     (or (not (= B1 true)) (not (= Q true)) (= Z true))
                     (or (= G true) (= R true) (= D true))
                     (>= A 0)
                     (>= (- A1) 0)
                     (= A1 0)
                     (or (= E true) (not (= C true)))
                     a!6
                     (>= (- 2 A) 0)
                     (= (- A a!8) 0)
                     (or (not (= E true)) (= C true))
                     (not (= B true))
                     (not (= F true)))))
       (=> a!9 (str_invariant B1 Q G F E D C B A A1 Z Y X W)))))
    ))


(check-sat)
(exit)
