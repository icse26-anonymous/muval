(set-logic HORN)

(declare-fun str_invariant
             (Bool
              Bool
              Bool
              Int
              Bool
              Bool
              Int
              Int
              Int
              Int
              Bool
              Bool
              Bool
              Int
              Int
              Bool
              Bool
              Bool
              Bool)
             Bool)
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Int)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Bool)
         (O Bool)
         (P Int)
         (Q Bool)
         (R Bool)
         (S Bool))
  (=> (and (str_invariant S R Q P O N M L K J I H G F E D C B A)
              (not (= O true)))
         false)
    ))
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Int)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Bool)
         (O Bool)
         (P Int)
         (Q Bool)
         (R Bool)
         (S Bool)
         (T Bool)
         (U Bool))
  (let ((a!1 (and (or (not (= S true))
                         (not (= R true))
                         (not (= S true))
                         (not (= Q true)))
                     (or (not (= R true)) (not (= Q true)))))
           (a!2 (= U (or (not (= G true)) (>= (- 1 K) 0))))
           (a!3 (or (not (= G true)) (= (- (+ K L M) E) 0))))
     (let ((a!4 (and (= (- J P) 0)
                     (or (and (= U true) (= T true)) (not (= O true)))
                     (= (- M J) 0)
                     (or (not (= U true)) (not (= T true)) (= O true))
                     (or (= H true) (not (= G true)))
                     (= K 0)
                     (= L 0)
                     (= (- F (+ K L M)) 0)
                     (or (= I true)
                         (and (= S true) (= R true) (= S true) (= Q true))
                         (and (= R true) (= Q true)))
                     (or (not (= H true)) (= G true))
                     (= D true)
                     (or (not (= I true)) a!1)
                     (= C true)
                     (= (- E P) 0)
                     (= B true)
                     (or (and (= I true) (>= P 0)) (not (= H true)))
                     (= A true)
                     (or (not (= I true)) (< P 0) (= H true))
                     a!2
                     (= T a!3)
                     (= N true))))
       (=> a!4 (str_invariant S R Q P O N M L K J I H G F E D C B A))))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Bool)
         (E Bool)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Int)
         (L Int)
         (M Bool)
         (N Bool)
         (O Bool)
         (P Bool)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Bool)
         (V Bool)
         (W Int)
         (X Bool)
         (Y Bool)
         (Z Bool)
         (A1 Bool)
         (B1 Bool)
         (C1 Bool)
         (D1 Bool)
         (E1 Bool)
         (F1 Int)
         (G1 Int)
         (H1 Bool)
         (I1 Bool)
         (J1 Bool)
         (K1 Int)
         (L1 Bool)
         (M1 Bool)
         (N1 Bool)
         (O1 Bool))
  (let ((a!1 (ite (= P true)
                     (ite (>= (+ (- 1) T) 0) (+ (+ (- 1) T) S R) T)
                     T))
           (a!4 (ite (= P true) (ite (>= (+ (- 1) T) 0) 0 S) S))
           (a!7 (ite (= P true) (ite (>= (+ (- 1) T) 0) 1 R) R))
           (a!10 (or (and (not (= I1 true)) (not (= M true))) (= H1 true)))
           (a!11 (and (or (not (= L1 true))
                          (not (= A1 true))
                          (not (= L1 true))
                          (not (= P true)))
                      (or (not (= A1 true)) (not (= P true)))))
           (a!12 (= O1 (or (not (= H1 true)) (>= (- 1 A) 0))))
           (a!13 (or (not (= H1 true)) (= (- (+ A B C) L) 0)))
           (a!14 (or (not (= H1 true)) (= (- (+ A B C) F1) 0))))
     (let ((a!2 (ite (= A1 true)
                     (ite (>= (+ (- 1) S) 0) (+ (+ (- 1) T) S R) T)
                     a!1))
           (a!5 (ite (= A1 true) (ite (>= (+ (- 1) S) 0) 0 S) a!4))
           (a!8 (ite (= A1 true) (ite (>= (+ (- 1) S) 0) 1 R) a!7)))
     (let ((a!3 (ite (= L1 true)
                     (ite (>= (+ (- 1) T) 0) (+ (+ (- 1) T) R) T)
                     a!2))
           (a!6 (ite (= L1 true) (ite (>= (+ (- 1) T) 0) (+ 1 S) S) a!5))
           (a!9 (ite (= L1 true) (ite (>= (+ (- 1) T) 0) 0 R) a!8)))
     (let ((a!15 (and (str_invariant Z Y X W V U T S R Q O N M L K J I H G)
                      (= (- C a!3) 0)
                      (= (- B a!6) 0)
                      (or (and (= N1 true) (= O1 true) (= M1 true))
                          (not (= E true)))
                      (= (- A a!9) 0)
                      (or (not (= N1 true))
                          (not (= O1 true))
                          (not (= M1 true))
                          (= E true))
                      (or (= I1 true) (= M true) (not (= H1 true)))
                      (= (- K1 Q) 0)
                      (= (- G1 (+ A B C)) 0)
                      (or (= J1 true)
                          (and (= L1 true) (= A1 true) (= L1 true) (= P true))
                          (and (= A1 true) (= P true)))
                      a!10
                      (not (= E1 true))
                      (or (not (= J1 true)) a!11)
                      (not (= D1 true))
                      (= (- F1 K) 0)
                      (not (= C1 true))
                      (or (and (= J1 true) (>= F 0)) (not (= I1 true)))
                      (not (= B1 true))
                      (or (not (= J1 true)) (< F 0) (= I1 true))
                      a!12
                      (= N1 a!13)
                      (= M1 a!14)
                      (not (= D true)))))
       (=> a!15
           (str_invariant L1 A1 P F E D C B A K1 J1 I1 H1 G1 F1 E1 D1 C1 B1))))))
    ))


(check-sat)
(exit)
