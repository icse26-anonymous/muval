(set-logic HORN)

(declare-fun str_invariant (Int Bool Bool Int Bool Bool Bool Bool) Bool)
(assert (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool))
  (=> (and (str_invariant A H G F E D C B) (not (= H true))) false)
    ))
(assert (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool))
  (let ((a!1 (and (= D true) (or (< F 0) (< (- 20 F) 0))))
           (a!2 (- F (ite (>= (+ (- 1) A) 0) A 0)))
           (a!3 (or (not (= H true))
                    (not (= D true))
                    (and (>= F 0) (>= (- 20 F) 0))))
           (a!4 (or (and (>= (+ 1 A) 0) (>= (- 1 A) 0)) (not (= E true)))))
     (let ((a!5 (and (or (= H true) a!1)
                     (or (= E true) (not (= D true)))
                     (= a!2 0)
                     a!3
                     (or (not (= E true)) (= D true))
                     (= C true)
                     a!4
                     (= B true)
                     (or (< (+ 1 A) 0) (< (- 1 A) 0) (= E true))
                     (= G true))))
       (=> a!5 (str_invariant A H G F E D C B))))
    ))
(assert (forall ((A Int)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Bool)
         (L Bool)
         (M Int)
         (N Bool)
         (O Bool)
         (P Int))
  (let ((a!1 (and (= D true) (or (< F 0) (< (- 20 F) 0))))
           (a!2 (ite (and (>= (+ (- 1) P) 0) (>= (- 9 M) 0)) (+ M P) M))
           (a!4 (or (not (= H true))
                    (not (= D true))
                    (and (>= F 0) (>= (- 20 F) 0))))
           (a!5 (or (and (>= (+ 1 P) 0) (>= (- 1 P) 0)) (not (= E true)))))
     (let ((a!3 (ite (and (>= (- (- 1) P) 0) (>= (+ (- 1) M) 0)) (+ M P) a!2)))
     (let ((a!6 (and (str_invariant A O N M L K J I)
                     (or (= H true) a!1)
                     (or (and (= K true) (= E true)) (not (= D true)))
                     (= (- F a!3) 0)
                     a!4
                     (or (not (= K true)) (not (= E true)) (= D true))
                     (not (= C true))
                     a!5
                     (not (= B true))
                     (or (< (+ 1 P) 0) (< (- 1 P) 0) (= E true))
                     (not (= G true)))))
       (=> a!6 (str_invariant P H G F E D C B)))))
    ))


(check-sat)
(exit)
