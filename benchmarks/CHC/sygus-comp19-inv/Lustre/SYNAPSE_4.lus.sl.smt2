(set-logic HORN)

(declare-fun str_invariant
             (Bool
              Bool
              Bool
              Int
              Bool
              Bool
              Int
              Int
              Int
              Int
              Bool
              Bool
              Bool
              Bool
              Bool
              Bool)
             Bool)
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Bool)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Bool)
         (L Bool)
         (M Int)
         (N Bool)
         (O Bool)
         (P Bool))
  (=> (and (str_invariant P O N M L K J I H G F E D C B A) (not (= L true)))
         false)
    ))
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Bool)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Bool)
         (L Bool)
         (M Int)
         (N Bool)
         (O Bool)
         (P Bool))
  (let ((a!1 (or (and (= D true) (< (- H) 0) (< (- I) 0)) (= L true)))
           (a!2 (and (or (not (= P true)) (not (= O true)))
                     (or (not (= P true)) (not (= N true)))
                     (or (not (= O true)) (not (= N true))))))
     (let ((a!3 (and (= (- G M) 0)
                     (= (- J G) 0)
                     (or (not (= D true))
                         (>= (- H) 0)
                         (>= (- I) 0)
                         (not (= L true)))
                     (or (= E true) (not (= D true)))
                     (= H 0)
                     (= I 0)
                     a!1
                     (or (= F true)
                         (and (= P true) (= O true))
                         (and (= P true) (= N true))
                         (and (= O true) (= N true)))
                     (or (not (= E true)) (= D true))
                     (= C true)
                     (or (not (= F true)) a!2)
                     (= B true)
                     (or (and (= F true) (>= M 0)) (not (= E true)))
                     (= A true)
                     (or (not (= F true)) (< M 0) (= E true))
                     (= K true))))
       (=> a!3 (str_invariant P O N M L K J I H G F E D C B A))))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Bool)
         (E Bool)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Bool)
         (L Bool)
         (M Bool)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Bool)
         (S Bool)
         (T Int)
         (U Bool)
         (V Bool)
         (W Bool)
         (X Bool)
         (Y Bool)
         (Z Bool)
         (A1 Bool)
         (B1 Bool)
         (C1 Bool)
         (D1 Bool)
         (E1 Int)
         (F1 Bool))
  (let ((a!1 (ite (= J true)
                     (ite (>= (+ (- 1) Q) 0) (+ (+ (- 1) Q) P O) Q)
                     Q))
           (a!4 (ite (= J true) (ite (>= (+ (- 1) Q) 0) 0 P) P))
           (a!7 (ite (= J true) (ite (>= (+ (- 1) Q) 0) 1 O) O))
           (a!10 (or (and (= B1 true) (< (- A) 0) (< (- B) 0)) (= E true)))
           (a!11 (and (or (not (= F1 true)) (not (= U true)))
                      (or (not (= F1 true)) (not (= J true)))
                      (or (not (= U true)) (not (= J true))))))
     (let ((a!2 (ite (= U true)
                     (ite (>= (+ (- 1) P) 0) (+ (+ (- 1) Q) P O) Q)
                     a!1))
           (a!5 (ite (= U true) (ite (>= (+ (- 1) P) 0) 0 P) a!4))
           (a!8 (ite (= U true) (ite (>= (+ (- 1) P) 0) 1 O) a!7)))
     (let ((a!3 (ite (= F1 true)
                     (ite (>= (+ (- 1) Q) 0) (+ (+ (- 1) Q) O) Q)
                     a!2))
           (a!6 (ite (= F1 true) (ite (>= (+ (- 1) Q) 0) (+ 1 P) P) a!5))
           (a!9 (ite (= F1 true) (ite (>= (+ (- 1) Q) 0) 0 O) a!8)))
     (let ((a!12 (and (str_invariant X W V T S R Q P O N M L K I H G)
                      (= (- C a!3) 0)
                      (= (- B a!6) 0)
                      (= (- A a!9) 0)
                      (or (not (= B1 true))
                          (>= (- A) 0)
                          (>= (- B) 0)
                          (not (= E true)))
                      (or (and (= C1 true) (= K true)) (not (= B1 true)))
                      (= (- E1 N) 0)
                      a!10
                      (or (= D1 true)
                          (and (= F1 true) (= U true))
                          (and (= F1 true) (= J true))
                          (and (= U true) (= J true)))
                      (or (not (= C1 true)) (not (= K true)) (= B1 true))
                      (not (= A1 true))
                      (or (not (= D1 true)) a!11)
                      (not (= Z true))
                      (or (and (= D1 true) (>= F 0)) (not (= C1 true)))
                      (not (= Y true))
                      (or (not (= D1 true)) (< F 0) (= C1 true))
                      (not (= D true)))))
       (=> a!12 (str_invariant F1 U J F E D C B A E1 D1 C1 B1 A1 Z Y))))))
    ))


(check-sat)
(exit)
