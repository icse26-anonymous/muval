(set-logic HORN)

(declare-fun str_invariant
             (Bool Bool Bool Bool Bool Bool Bool Bool Bool Int)
             Bool)
(assert (forall ((A Int)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Bool)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool))
  (=> (and (str_invariant J I H G F E D C B A) (not (= I true))) false)
    ))
(assert (forall ((A Int)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Bool)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool))
  (let ((a!1 (or (and (= F true) (= G true))
                    (and (not (= F true)) (not (= G true)))
                    (not (= I true))))
           (a!2 (and (or (not (= F true)) (not (= G true)))
                     (or (= F true) (= G true))))
           (a!3 (or (not (= (+ (- 2) A) 0)) (= F true))))
     (let ((a!4 (and (not (= C true))
                     (or (= G true) (not (= D true)) (not (= C true)))
                     (not (= D true))
                     a!1
                     (or (= (+ (- 2) A) 0) (not (= F true)))
                     (= A 0)
                     (or (not (= G true)) (and (= D true) (= C true)))
                     (or a!2 (= I true))
                     a!3
                     (= E true)
                     (= B true)
                     (= H true))))
       (=> a!4 (str_invariant J I H G F E D C B A))))
    ))
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Bool)
         (G Bool)
         (H Int)
         (I Bool)
         (J Bool)
         (K Bool)
         (L Bool)
         (M Bool)
         (N Bool)
         (O Bool)
         (P Bool)
         (Q Bool)
         (R Bool)
         (S Int)
         (T Bool))
  (let ((a!1 (or (and (= E true) (= F true))
                    (and (not (= E true)) (not (= F true)))
                    (not (= I true))))
           (a!2 (- S (ite (= (+ (- 3) H) 0) 0 (+ 1 H))))
           (a!3 (and (or (not (= E true)) (not (= F true)))
                     (or (= E true) (= F true))))
           (a!4 (or (not (= (+ (- 2) S) 0)) (= E true))))
     (let ((a!5 (and (str_invariant R Q P O N M L K J H)
                     (or (= L true) (not (= B true)))
                     (or (not (= L true)) (= B true))
                     (or (= F true) (not (= C true)) (not (= B true)))
                     (not (= C K))
                     a!1
                     (or (= (+ (- 2) S) 0) (not (= E true)))
                     (= a!2 0)
                     (or (not (= F true)) (and (= C true) (= B true)))
                     (or a!3 (= I true))
                     a!4
                     (not (= D true))
                     (not (= A true))
                     (not (= G true)))))
       (=> a!5 (str_invariant T I G F E D C B A S))))
    ))


(check-sat)
(exit)
