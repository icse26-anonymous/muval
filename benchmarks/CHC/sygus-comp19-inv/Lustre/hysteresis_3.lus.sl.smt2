(set-logic HORN)

(declare-fun str_invariant
             (Bool
              Bool
              Bool
              Bool
              Bool
              Bool
              Bool
              Bool
              Int
              Int
              Bool
              Bool
              Int
              Bool)
             Bool)
(assert (forall ((A Bool)
         (B Int)
         (C Bool)
         (D Bool)
         (E Int)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Bool)
         (L Bool)
         (M Bool)
         (N Bool))
  (=> (and (str_invariant N M L K J I H G F E D C B A) (not (= L true)))
         false)
    ))
(assert (forall ((A Bool)
         (B Int)
         (C Bool)
         (D Bool)
         (E Int)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Bool)
         (L Bool)
         (M Bool)
         (N Bool))
  (let ((a!1 (ite (and (= D true) (>= (+ 999 E) 0) (>= (- 999 E) 0))
                     (+ E F)
                     E))
           (a!3 (or (and (not (= N true)) (not (= M true))) (= D true)))
           (a!4 (ite (and (= M true) (not (= N true))) (- 1) 0)))
     (let ((a!2 (= (- B (ite (= C true) E a!1)) 0))
           (a!5 (ite (and (= N true) (not (= M true))) 1 a!4)))
     (let ((a!6 (and (not (= I true))
                     a!2
                     (not (= H true))
                     (or (= N true) (= M true) (not (= D true)))
                     (not (= C true))
                     (>= E 0)
                     (= A true)
                     a!3
                     (>= (+ 1 F) 0)
                     (>= (- E) 0)
                     (= E 0)
                     (>= (- 1 F) 0)
                     (= (- F a!5) 0)
                     (or (= J true) (not (= I true)))
                     (= L true)
                     (= G true)
                     (or (not (= J true)) (= I true))
                     (= K true))))
       (=> a!6 (str_invariant N M L K J I H G F E D C B A)))))
    ))
(assert (forall ((A Int)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Bool)
         (F Bool)
         (G Bool)
         (H Bool)
         (I Int)
         (J Bool)
         (K Bool)
         (L Int)
         (M Int)
         (N Bool)
         (O Bool)
         (P Bool)
         (Q Bool)
         (R Bool)
         (S Bool)
         (T Bool)
         (U Bool)
         (V Bool)
         (W Bool)
         (X Int)
         (Y Bool)
         (Z Bool)
         (A1 Int)
         (B1 Bool))
  (let ((a!1 (or (and (= P true) (< X 0))
                    (and (not (= P true)) (<= X (- 10)))
                    (not (= D true))))
           (a!2 (or (and (= O true) (> X 0))
                    (and (not (= O true)) (>= X 10))
                    (not (= C true))))
           (a!3 (and (or (not (= P true)) (>= X 0))
                     (or (= P true) (> X (- 10)))))
           (a!4 (ite (and (= Z true) (>= (+ 999 I) 0) (>= (- 999 I) 0))
                     (+ I A)
                     I))
           (a!6 (and (or (not (= O true)) (<= X 0)) (or (= O true) (< X 10))))
           (a!7 (or (and (not (= B1 true)) (not (= Q true))) (= Z true)))
           (a!8 (ite (and (= Q true) (not (= B1 true))) (- 1) 0)))
     (let ((a!5 (= (- X (ite (= Y true) A1 a!4)) 0))
           (a!9 (ite (and (= B1 true) (not (= Q true))) 1 a!8)))
     (let ((a!10 (and (str_invariant V U T S R P O N M L K J I H)
                      a!1
                      a!2
                      (or a!3 (= D true))
                      a!5
                      (or a!6 (= C true))
                      (or (= B1 true) (= Q true) (not (= Z true)))
                      (not (= Y true))
                      (>= A1 0)
                      (not (= W true))
                      a!7
                      (or (= G true) (and (= R true) (= C true)))
                      (>= (+ 1 A) 0)
                      (>= (- A1) 0)
                      (= A1 0)
                      (or (= E true) (not (= D true)))
                      (or (not (= G true)) (not (= R true)) (not (= C true)))
                      (>= (- 1 A) 0)
                      (= (- A a!9) 0)
                      (or (not (= E true)) (= D true))
                      (not (= B true))
                      (not (= F true)))))
       (=> a!10 (str_invariant B1 Q G F E D C B A A1 Z Y X W)))))
    ))


(check-sat)
(exit)
