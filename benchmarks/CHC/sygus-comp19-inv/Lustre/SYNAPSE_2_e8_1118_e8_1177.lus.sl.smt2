(set-logic HORN)

(declare-fun str_invariant
             (Bool
              Bool
              Bool
              Int
              Bool
              Bool
              Int
              Int
              Int
              Int
              Bool
              Bool
              Bool
              Int
              Bool
              Bool
              Bool)
             Bool)
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Int)
         (E Bool)
         (F Bool)
         (G Bool)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Bool)
         (M Bool)
         (N Int)
         (O Bool)
         (P Bool)
         (Q Bool))
  (=> (and (str_invariant Q P O N M L K J I H G F E D C B A)
              (not (= M true)))
         false)
    ))
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Int)
         (E Bool)
         (F Bool)
         (G Bool)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Bool)
         (M Bool)
         (N Int)
         (O Bool)
         (P Bool)
         (Q Bool))
  (let ((a!1 (and (= (- H N) 0)
                     (= (- K H) 0)
                     (or (= F true) (not (= E true)))
                     (= I 0)
                     (= J 0)
                     (= (- D (+ I K J)) 0)
                     (or (= G true)
                         (and (= Q true)
                              (= P true)
                              (= Q true)
                              (= O true)
                              (= P true)
                              (= O true)))
                     (or (not (= F true)) (= E true))
                     (= C true)
                     (or (not (= G true))
                         (not (= Q true))
                         (not (= P true))
                         (not (= Q true))
                         (not (= O true))
                         (not (= P true))
                         (not (= O true)))
                     (= B true)
                     (or (and (= G true) (>= N 0)) (not (= F true)))
                     (= A true)
                     (or (not (= G true)) (< N 0) (= F true))
                     (= M true)
                     (= L true))))
       (=> a!1 (str_invariant Q P O N M L K J I H G F E D C B A)))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Bool)
         (E Bool)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Int)
         (K Bool)
         (L Bool)
         (M Bool)
         (N Bool)
         (O Int)
         (P Int)
         (Q Int)
         (R Int)
         (S Bool)
         (T Bool)
         (U Int)
         (V Bool)
         (W Bool)
         (X Bool)
         (Y Bool)
         (Z Bool)
         (A1 Bool)
         (B1 Bool)
         (C1 Int)
         (D1 Bool)
         (E1 Bool)
         (F1 Bool)
         (G1 Int)
         (H1 Bool))
  (let ((a!1 (ite (= L true)
                     (ite (>= (+ (- 1) R) 0) (+ (+ (- 1) R) Q P) R)
                     R))
           (a!4 (ite (= L true) (ite (>= (+ (- 1) R) 0) 0 Q) Q))
           (a!7 (or (not (= D1 true)) (= (- (+ A B C) J) 0) (not (= E true))))
           (a!8 (ite (= L true) (ite (>= (+ (- 1) R) 0) 1 P) P))
           (a!11 (not (= (- (+ A B C) J) 0))))
     (let ((a!2 (ite (= W true)
                     (ite (>= (+ (- 1) Q) 0) (+ (+ (- 1) R) Q P) R)
                     a!1))
           (a!5 (ite (= W true) (ite (>= (+ (- 1) Q) 0) 0 Q) a!4))
           (a!9 (ite (= W true) (ite (>= (+ (- 1) Q) 0) 1 P) a!8)))
     (let ((a!3 (ite (= H1 true)
                     (ite (>= (+ (- 1) R) 0) (+ (+ (- 1) R) P) R)
                     a!2))
           (a!6 (ite (= H1 true) (ite (>= (+ (- 1) R) 0) (+ 1 Q) Q) a!5))
           (a!10 (ite (= H1 true) (ite (>= (+ (- 1) R) 0) 0 P) a!9)))
     (let ((a!12 (and (str_invariant Y X V U T S R Q P O N M K J I H G)
                      (= (- C a!3) 0)
                      (= (- B a!6) 0)
                      a!7
                      (= (- A a!10) 0)
                      (or (and (= D1 true) a!11) (= E true))
                      (or (and (= E1 true) (= K true)) (not (= D1 true)))
                      (= (- G1 O) 0)
                      (= (- C1 (+ A B C)) 0)
                      (or (= F1 true)
                          (and (= H1 true)
                               (= W true)
                               (= H1 true)
                               (= L true)
                               (= W true)
                               (= L true)))
                      (or (not (= E1 true)) (not (= K true)) (= D1 true))
                      (not (= B1 true))
                      (or (not (= F1 true))
                          (not (= H1 true))
                          (not (= W true))
                          (not (= H1 true))
                          (not (= L true))
                          (not (= W true))
                          (not (= L true)))
                      (not (= A1 true))
                      (or (and (= F1 true) (>= F 0)) (not (= E1 true)))
                      (not (= Z true))
                      (or (not (= F1 true)) (< F 0) (= E1 true))
                      (not (= D true)))))
       (=> a!12 (str_invariant H1 W L F E D C B A G1 F1 E1 D1 C1 B1 A1 Z))))))
    ))


(check-sat)
(exit)
