(set-logic HORN)

(declare-fun str_invariant
             (Bool
              Bool
              Bool
              Int
              Bool
              Bool
              Int
              Int
              Int
              Int
              Bool
              Bool
              Bool
              Int
              Bool
              Bool
              Bool
              Bool)
             Bool)
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Int)
         (F Bool)
         (G Bool)
         (H Bool)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Bool)
         (N Bool)
         (O Int)
         (P Bool)
         (Q Bool)
         (R Bool))
  (=> (and (str_invariant R Q P O N M L K J I H G F E D C B A)
              (not (= N true)))
         false)
    ))
(assert (forall ((A Bool)
         (B Bool)
         (C Bool)
         (D Bool)
         (E Int)
         (F Bool)
         (G Bool)
         (H Bool)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Bool)
         (N Bool)
         (O Int)
         (P Bool)
         (Q Bool)
         (R Bool))
  (let ((a!1 (or (and (= F true) (< (- E L) 0)) (= N true)))
           (a!2 (and (or (not (= R true)) (not (= Q true)))
                     (or (not (= R true)) (not (= P true)))
                     (or (not (= Q true)) (not (= P true))))))
     (let ((a!3 (and (= (- I O) 0)
                     (= (- L I) 0)
                     (or (not (= F true)) (>= (- E L) 0) (not (= N true)))
                     (or (= G true) (not (= F true)))
                     (= J 0)
                     (= K 0)
                     a!1
                     (or (= H true)
                         (and (= R true) (= Q true))
                         (and (= R true) (= P true))
                         (and (= Q true) (= P true)))
                     (or (not (= G true)) (= F true))
                     (= D true)
                     (or (not (= H true)) a!2)
                     (= C true)
                     (= (- E O) 0)
                     (= B true)
                     (or (and (= H true) (>= O 0)) (not (= G true)))
                     (= A true)
                     (or (not (= H true)) (< O 0) (= G true))
                     (= M true))))
       (=> a!3 (str_invariant R Q P O N M L K J I H G F E D C B A))))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Bool)
         (E Bool)
         (F Int)
         (G Bool)
         (H Bool)
         (I Bool)
         (J Bool)
         (K Int)
         (L Bool)
         (M Bool)
         (N Bool)
         (O Bool)
         (P Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Bool)
         (U Bool)
         (V Int)
         (W Bool)
         (X Bool)
         (Y Bool)
         (Z Bool)
         (A1 Bool)
         (B1 Bool)
         (C1 Bool)
         (D1 Bool)
         (E1 Int)
         (F1 Bool)
         (G1 Bool)
         (H1 Bool)
         (I1 Int)
         (J1 Bool))
  (let ((a!1 (ite (= N true)
                     (ite (>= (+ (- 1) S) 0) (+ (+ (- 1) S) R Q) S)
                     S))
           (a!4 (ite (= N true) (ite (>= (+ (- 1) S) 0) 0 R) R))
           (a!7 (ite (= N true) (ite (>= (+ (- 1) S) 0) 1 Q) Q))
           (a!10 (or (and (= F1 true) (< (- E1 C) 0)) (= E true)))
           (a!11 (and (or (not (= J1 true)) (not (= Y true)))
                      (or (not (= J1 true)) (not (= N true)))
                      (or (not (= Y true)) (not (= N true))))))
     (let ((a!2 (ite (= Y true)
                     (ite (>= (+ (- 1) R) 0) (+ (+ (- 1) S) R Q) S)
                     a!1))
           (a!5 (ite (= Y true) (ite (>= (+ (- 1) R) 0) 0 R) a!4))
           (a!8 (ite (= Y true) (ite (>= (+ (- 1) R) 0) 1 Q) a!7)))
     (let ((a!3 (ite (= J1 true)
                     (ite (>= (+ (- 1) S) 0) (- (+ (- 2) S) Q) S)
                     a!2))
           (a!6 (ite (= J1 true) (ite (>= (+ (- 1) S) 0) (+ 1 R) R) a!5))
           (a!9 (ite (= J1 true) (ite (>= (+ (- 1) S) 0) 0 Q) a!8)))
     (let ((a!12 (and (str_invariant Z X W V U T S R Q P O M L K J I H G)
                      (= (- C a!3) 0)
                      (= (- B a!6) 0)
                      (= (- A a!9) 0)
                      (or (not (= F1 true)) (>= (- E1 C) 0) (not (= E true)))
                      (or (and (= G1 true) (= L true)) (not (= F1 true)))
                      (= (- I1 P) 0)
                      a!10
                      (or (= H1 true)
                          (and (= J1 true) (= Y true))
                          (and (= J1 true) (= N true))
                          (and (= Y true) (= N true)))
                      (or (not (= G1 true)) (not (= L true)) (= F1 true))
                      (not (= D1 true))
                      (or (not (= H1 true)) a!11)
                      (not (= C1 true))
                      (= (- E1 K) 0)
                      (not (= B1 true))
                      (or (and (= H1 true) (>= F 0)) (not (= G1 true)))
                      (not (= A1 true))
                      (or (not (= H1 true)) (< F 0) (= G1 true))
                      (not (= D true)))))
       (=> a!12 (str_invariant J1 Y N F E D C B A I1 H1 G1 F1 E1 D1 C1 B1 A1))))))
    ))


(check-sat)
(exit)
