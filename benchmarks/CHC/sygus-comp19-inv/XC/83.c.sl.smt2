(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int))
  (=> (and (inv-f I H G F E D C B A)
              (= (- I E) 0)
              (< (- (- 1) E) 0)
              (= (- H B) 0)
              (< (+ (- 1) B) 0))
         false)
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int))
  (=> (and (= (- I F) 0) (= (+ 5000 F) 0)) (inv-f I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int))
  (let ((a!1 (and (= (- M Q) 0) (= (- J P) 0))))
     (let ((a!2 (and a!1
                     (>= (- (- 1) M) 0)
                     (= (- (- L M) J) 0)
                     (= (+ (- (- 1) J) I) 0)
                     (= (- L R) 0)
                     (= (- I H) 0))))
     (let ((a!3 (or (and a!1 (= (- M R) 0) (= (- J H) 0) (= (- P H) 0)) a!2)))
       (=> (and (inv-f Q P O N M L K J I) a!3) (inv-f R H G F E D C B A)))))
    ))


(check-sat)
(exit)
