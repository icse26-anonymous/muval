(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))
  (let ((a!1 (and (inv-f B A G F E D C)
                     (= (- B E) 0)
                     (< (+ (- (- 1) E) C) 0)
                     (= (- A C) 0)
                     (< (+ (- 1) E) 0))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))
  (=> (and (= (- B F) 0) (= (+ (- 1) F) 0)) (inv-f B A G F E D C))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int))
  (let ((a!1 (and (= (- K B) 0)
                     (>= (+ (- (- 1) K) I) 0)
                     (= (+ (* (- 2) K) J) 0)
                     (= (- J N) 0)
                     (= (- A I) 0)
                     (= (- H I) 0))))
     (let ((a!2 (or (and (= (- K B) 0)
                         (= (- K N) 0)
                         (= (- A I) 0)
                         (= (- H I) 0))
                    a!1)))
       (=> (and (inv-f B A M L K J I) a!2) (inv-f N H G F E D C))))
    ))


(check-sat)
(exit)
