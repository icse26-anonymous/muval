(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int))
  (=> (and (inv-f I H G F E D C B A)
              (= (- I E) 0)
              (= (- E A) 0)
              (= (- H A) 0)
              (< E 0))
         false)
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int))
  (=> (and (= (- I F) 0) (= (- H A) 0) (= F 0) (>= (+ (- 1) A) 0))
         (inv-f I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int))
  (let ((a!1 (and (= (- M Q) 0)
                     (not (= (- M I) 0))
                     (= (+ (- (- 1) M) J) 0)
                     (= (- K J) 0)
                     (= (- K R) 0)
                     (= (- P I) 0)
                     (= (- H I) 0)
                     (= (- O G) 0))))
     (let ((a!2 (or (and (= (- M Q) 0)
                         (= (- M R) 0)
                         (= (- Q R) 0)
                         (= (- P H) 0)
                         (= (- O G) 0))
                    (and (= (- M Q) 0)
                         (= (- M I) 0)
                         (= (+ (- 1) L) 0)
                         (= (- K L) 0)
                         (= (- K R) 0)
                         (= (- P I) 0)
                         (= (- H I) 0)
                         (= (- O G) 0))
                    a!1)))
       (=> (and (inv-f Q P O N M L K J I) a!2) (inv-f R H G F E D C B A))))
    ))


(check-sat)
(exit)
