(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int))
  (let ((a!1 (and (inv-f J I H G F E D C B A)
                     (= (- J F) 0)
                     (< (- B F) 0)
                     (= (- I B) 0)
                     (not (= (+ (- 6) B) 0)))))
       (=> a!1 false))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int))
  (=> (and (= (- J G) 0) (= (- I C) 0) (= (+ (- 1) G) 0) (= (+ (- 10) C) 0))
         (inv-f J I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int))
  (let ((a!1 (and (= (- N R) 0) (= (- J Q) 0))))
     (let ((a!2 (and a!1
                     (>= (- J N) 0)
                     (= (+ (- (- 2) N) M) 0)
                     (= (+ (- 1 J) H) 0)
                     (= (- M T) 0)
                     (= (- H I) 0))))
     (let ((a!3 (or (and a!1 (= (- N T) 0) (= (- J I) 0)) a!2)))
       (=> (and (inv-f R Q P O N M L K J H) a!3) (inv-f T I G F E D C B A S)))))
    ))


(check-sat)
(exit)
