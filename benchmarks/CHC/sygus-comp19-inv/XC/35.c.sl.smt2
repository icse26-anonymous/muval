(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (inv-f A H G F E D C B)
                     (not (= (+ (- 40) E) 0))
                     (= (- A E) 0)
                     (< E 0))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (=> (and (= (- A F) 0) (= F 0)) (inv-f A H G F E D C B))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int))
  (let ((a!1 (and (= (- L A) 0) (not (= (+ (- 40) L) 0))))
           (a!3 (and (= (- L A) 0) (= (+ (- 40) L) 0))))
     (let ((a!2 (and a!1
                     (= (+ (- (- 1) L) K) 0)
                     (= (- J K) 0)
                     (= (- J P) 0)
                     (= (- O H) 0))))
     (let ((a!4 (or (and (= (- L A) 0)
                         (= (- L P) 0)
                         (= (- A P) 0)
                         (= (- O H) 0))
                    a!2
                    (and a!3 (= (- J L) 0) (= (- J P) 0) (= (- O H) 0))
                    (and a!3
                         (= (+ (- 1) I) 0)
                         (= (- J I) 0)
                         (= (- J P) 0)
                         (= (- O H) 0))
                    (and a!1 (= (- J L) 0) (= (- J P) 0) (= (- O H) 0)))))
       (=> (and (inv-f A O N M L K J I) a!4) (inv-f P H G F E D C B)))))
    ))


(check-sat)
(exit)
