(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (=> (and (inv-f L K J I H G F E D C B A)
              (= (- L H) 0)
              (= (- K E) 0)
              (= (- J B) 0)
              (< B 0))
         false)
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (=> (and (= (- L I) 0)
              (= (- K E) 0)
              (= (- J C) 0)
              (= (+ (- 8) I) 0)
              (= E 0)
              (= C 0))
         (inv-f L K J I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Int)
         (V Int)
         (W Int)
         (X Int))
  (let ((a!1 (and (= (- P T) 0) (= (- I R) 0))))
     (let ((a!2 (and a!1
                     (>= I 0)
                     (= (- H (+ L I)) 0)
                     (= (- O P) 0)
                     (= (- O X) 0)
                     (= (- H G) 0)
                     (= (- S L) 0)
                     (= (- M L) 0))))
     (let ((a!3 (or (and a!1
                         (= (- P X) 0)
                         (= (- I G) 0)
                         (= (- T X) 0)
                         (= (- S M) 0))
                    a!2)))
       (=> (and (inv-f T S R Q P O N L K J I H) a!3)
           (inv-f X M G F E D C B A W V U)))))
    ))


(check-sat)
(exit)
