(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (=> (and (inv-f A H G F E D C B)
              (= (- A F) 0)
              (< (- 10 F) 0)
              (= (- H C) 0)
              (< C 0))
         false)
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (=> (and (= (- A G) 0) (= (+ (- 1) G) 0)) (inv-f A H G F E D C B))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int))
  (let ((a!1 (and (= (- M A) 0) (= (- J O) 0))))
     (let ((a!2 (and a!1
                     (>= (- 10 M) 0)
                     (= (+ (- 10) M I) 0)
                     (= (+ (- (- 1) M) L) 0)
                     (= (- L P) 0)
                     (= (- I H) 0))))
     (let ((a!3 (or (and a!1 (= (- M P) 0) (= (- J H) 0) (= (- O H) 0)) a!2)))
       (=> (and (inv-f A O N M L K J I) a!3) (inv-f P H G F E D C B)))))
    ))


(check-sat)
(exit)
