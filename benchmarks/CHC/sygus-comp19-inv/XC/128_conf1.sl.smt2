(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (let ((a!1 (and (inv-f K J I H G F E D C B A)
                     (= (- K G) 0)
                     (= (- J C) 0)
                     (< (+ (- (- 1) C) A) 0)
                     (= (- I A) 0)
                     (< (+ (- 1) C) 0))))
       (=> a!1 false))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (=> (and (= (- K H) 0) (= (- J D) 0) (= (+ (- 5) H) 0) (= (+ (- 1) D) 0))
         (inv-f K J I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Int)
         (V Int))
  (let ((a!1 (and (= (- O S) 0) (= (- J R) 0))))
     (let ((a!2 (and a!1
                     (>= (+ (- (- 1) J) H) 0)
                     (= (+ (* (- 2) J) I) 0)
                     (= (+ (- (- 535) O) N) 0)
                     (= (- N V) 0)
                     (= (- I K) 0)
                     (= (- Q H) 0)
                     (= (- G H) 0))))
     (let ((a!3 (or (and a!1
                         (= (- O V) 0)
                         (= (- J K) 0)
                         (= (- Q H) 0)
                         (= (- G H) 0)
                         (= (- S V) 0))
                    a!2)))
       (=> (and (inv-f S R Q P O N M L J I H) a!3)
           (inv-f V K G F E D C B A U T)))))
    ))


(check-sat)
(exit)
