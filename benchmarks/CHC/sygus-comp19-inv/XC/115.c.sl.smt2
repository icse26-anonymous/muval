(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (let ((a!1 (and (inv-f K J I H G F E D C B A)
                     (= (- K F) 0)
                     (not (= (+ 1 F) 0))
                     (= (- J B) 0)
                     (not (= (- F B) 0)))))
       (=> a!1 false))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int))
  (=> (and (= (- K G) 0) (= (- J C) 0) (= G 0) (= C 0))
         (inv-f K J I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Int)
         (V Int))
  (let ((a!1 (and (= (- N S) 0) (= (- I R) 0))))
     (let ((a!2 (and a!1
                     (= (+ (- (- 1) I) H) 0)
                     (= (+ (- (- 1) N) M) 0)
                     (= (- M V) 0)
                     (= (- H K) 0)
                     (= (- Q G) 0))))
     (let ((a!3 (or (and a!1
                         (= (- N V) 0)
                         (= (- I K) 0)
                         (= (- S V) 0)
                         (= (- R K) 0)
                         (= (- Q G) 0))
                    a!2)))
       (=> (and (inv-f S R Q P O N M L J I H) a!3)
           (inv-f V K G F E D C B A U T)))))
    ))


(check-sat)
(exit)
