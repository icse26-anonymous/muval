(set-logic HORN)

(declare-fun inv-f
             (Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int
              Int)
             Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int))
  (=> (and (inv-f R Q P O N M L K J I H G F E D C B A)
              (= (- R M) 0)
              (= (- Q K) 0)
              (= (- P G) 0)
              (= (- O C) 0)
              (< K 0))
         false)
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int))
  (=> (and (= (- Q L) 0) (= L 0))
         (inv-f R Q P O N M L K J I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int)
         (S Int)
         (T Int)
         (U Int)
         (V Int)
         (W Int)
         (X Int)
         (Y Int)
         (Z Int)
         (A1 Int)
         (B1 Int)
         (C1 Int)
         (D1 Int)
         (E1 Int)
         (F1 Int)
         (G1 Int)
         (H1 Int)
         (I1 Int)
         (J1 Int))
  (let ((a!1 (and (= (- R X) 0) (= (- M W) 0) (= (- I V) 0))))
     (let ((a!2 (and (and a!1 (>= (+ (- 49) T) 0))
                     (>= (- 56 T) 0)
                     (= (+ (* (- 2) R) L) 0)
                     (= (+ (- 48 T) H) 0)
                     (= (- (- Q L) H) 0)
                     (= (- P Q) 0)
                     (= (- K L) 0)
                     (= (- G H) 0)
                     (= (- P Y) 0)
                     (= (- K N) 0)
                     (= (- G F) 0)
                     (= (- Z T) 0)
                     (= (- J1 T) 0)
                     (= (- U E) 0)))
           (a!3 (and (and a!1 (>= (+ (- 49) T) 0))
                     (< (- 56 T) 0)
                     (= (- P R) 0)
                     (= (- K M) 0)
                     (= (- G I) 0)
                     (= (- P Y) 0)
                     (= (- K N) 0)
                     (= (- G F) 0)
                     (= (- Z T) 0)
                     (= (- J1 T) 0)
                     (= (- U E) 0))))
     (let ((a!4 (or (and a!1
                         (= (- R Y) 0)
                         (= (- M N) 0)
                         (= (- I F) 0)
                         (= (- Z J1) 0)
                         (= (- X Y) 0)
                         (= (- W N) 0)
                         (= (- V F) 0)
                         (= (- U E) 0))
                    a!2
                    a!3
                    (and a!1
                         (< (+ (- 49) T) 0)
                         (= (- P R) 0)
                         (= (- K M) 0)
                         (= (- G I) 0)
                         (= (- P Y) 0)
                         (= (- K N) 0)
                         (= (- G F) 0)
                         (= (- Z T) 0)
                         (= (- J1 T) 0)
                         (= (- U E) 0)))))
       (=> (and (inv-f Z X W V U T S R Q P O M L K J I H G) a!4)
           (inv-f J1 Y N F E D C B A I1 H1 G1 F1 E1 D1 C1 B1 A1)))))
    ))


(check-sat)
(exit)
