(set-logic HORN)

(declare-fun InvF (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (not (= (- (* 3 A) (+ D C)) 0))))
     (let ((a!2 (and (InvF D C B A) (< (+ (- (- 1) B) A) 0) a!1)))
       (=> a!2 false)))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (=> (and (= D 0) (= B 0) (>= A 0) (= C 0)) (InvF D C B A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (= (- (+ (- 1) H) D) 0) (= (- (+ (- 2) G) C) 0)))
           (a!2 (and (= (- (+ (- 2) H) D) 0) (= (- (+ (- 1) G) C) 0))))
     (let ((a!3 (and (InvF D C B A)
                     (= (- (+ (- 1) F) B) 0)
                     (>= (+ (- (- 1) B) A) 0)
                     (= (- E A) 0)
                     (or a!1 a!2))))
       (=> a!3 (InvF H G F E))))
    ))


(check-sat)
(exit)
