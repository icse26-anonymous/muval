(set-logic HORN)

(declare-fun inv-f (Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int))
  (let ((a!1 (and (inv-f C B A)
                     (< (- A B) 0)
                     (or (< (+ C A) 0) (< (- A C) 0)))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int))
  (=> (and (>= (+ (- 1) A) 0) (= C 0) (= (+ (- 1) B) 0)) (inv-f C B A))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (>= (- (+ (- 1) B) A) 0)
                     (= (- F C) 0)
                     (= (- E B) 0)
                     (= (- D A) 0)))
           (a!2 (and (>= (- A B) 0)
                     (= (- (+ (- 1) E) B) 0)
                     (= (- (+ (- 1) F) C) 0)
                     (= (- D A) 0)))
           (a!3 (and (>= (- A B) 0)
                     (= (- (+ (- 1) E) B) 0)
                     (= (- (+ 1 F) C) 0)
                     (= (- D A) 0))))
       (=> (and (inv-f C B A) (or a!1 a!2 a!3)) (inv-f F E D)))
    ))


(check-sat)
(exit)
