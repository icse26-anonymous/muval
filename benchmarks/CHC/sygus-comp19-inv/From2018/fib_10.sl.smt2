(set-logic HORN)

(declare-fun inv-f (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (inv-f D C B A) (not (= (- D C) 0)))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (=> (and (= D 0) (= A 0) (= (+ (- 1) B) 0) (= C 0)) (inv-f D C B A))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (= (- (+ (- 1) G) C) 0) (= (+ (- 1) E) 0)))
           (a!4 (and (= (- G C) 0) (= (- E A) 0))))
     (let ((a!2 (and (= (+ (- 1) B) 0)
                     (= A 0)
                     (= (- (+ (- 1) H) D) 0)
                     (= F 0)
                     a!1))
           (a!3 (and (not (= (+ (- 1) B) 0))
                     (= A 0)
                     (= (- H D) 0)
                     (= (- F B) 0)
                     a!1))
           (a!5 (and (= (+ (- 1) B) 0)
                     (not (= A 0))
                     (= (- (+ (- 1) H) D) 0)
                     (= F 0)
                     a!4))
           (a!6 (and (not (= (+ (- 1) B) 0))
                     (not (= A 0))
                     (= (- H D) 0)
                     (= (- F B) 0)
                     a!4)))
       (=> (and (inv-f D C B A) (or a!2 a!3 a!5 a!6)) (inv-f H G F E))))
    ))


(check-sat)
(exit)
