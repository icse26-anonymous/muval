(set-logic HORN)

(declare-fun inv-f (Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int))
  (let ((a!1 (not (= (+ (- 2) C (* (- 2) B)) 0))))
       (=> (and (inv-f C B A) (not (= B 0)) a!1) false))
    ))
(assert (forall ((A Int) (B Int) (C Int))
  (=> (and (= (+ (- 2) C) 0) (= B 0)) (inv-f C B A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (= A 0)
                     (= (- (+ (- 4) F) C) 0)
                     (= (- E B) 0)
                     (= (- D A) 0)))
           (a!2 (and (not (= A 0))
                     (= (- (+ (- 2) F) C) 0)
                     (= (- (+ (- 1) E) B) 0)
                     (= (- D A) 0))))
       (=> (and (inv-f C B A) (or a!1 a!2)) (inv-f F E D)))
    ))


(check-sat)
(exit)
