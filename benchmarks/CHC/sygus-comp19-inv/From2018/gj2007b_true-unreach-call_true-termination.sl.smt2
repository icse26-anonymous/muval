(set-logic HORN)

(declare-fun inv-f (Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int))
  (let ((a!1 (and (< (+ (- (- 1) B) A) 0) (< (- A) 0))))
     (let ((a!2 (or (and (< B 0) (< (- A) 0)) a!1)))
       (=> (and (inv-f C B A) a!2) false)))
    ))
(assert (forall ((A Int) (B Int) (C Int))
  (=> (and (= C 0) (= B 0)) (inv-f C B A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (inv-f C B A)
                     (>= (+ (- (- 1) C) A) 0)
                     (or (= (- E C) 0) (= (- E B) 0))
                     (= (- D A) 0)
                     (= (- (+ (- 1) F) C) 0))))
       (=> a!1 (inv-f F E D)))
    ))


(check-sat)
(exit)
