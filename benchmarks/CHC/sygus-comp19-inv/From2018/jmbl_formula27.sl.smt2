(set-logic HORN)

(declare-fun InvF (Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))
  (let ((a!1 (and (< (- (- 1) C) 0) (< (- (+ 2 C) A) 0))))
     (let ((a!2 (or (< D 0)
                    (< (+ (- 1 D) A) 0)
                    (not (= (- C B) 0))
                    (not (= E 0))
                    a!1)))
       (=> (and (InvF D C B A E) a!2) false)))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))
  (=> (and (= C 0) (= D 0) (= B 0) (= A 0) (= E 0)) (InvF D C B A E))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int))
  (let ((a!1 (or (>= (- (- 1) H) 0) (>= (- (+ 2 H) F) 0))))
     (let ((a!2 (and (InvF D C B A I)
                     (= E 0)
                     (= (- H G) 0)
                     (>= (+ (- 1 J) F) 0)
                     (>= J 0)
                     a!1)))
       (=> a!2 (InvF J H G F E))))
    ))


(check-sat)
(exit)
