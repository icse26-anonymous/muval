(set-logic HORN)

(declare-fun inv-f (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (not (= (- B (+ D C)) 0))))
       (=> (and (inv-f D C B A) (< (+ (- 1) A) 0) a!1) false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (=> (and (>= (- 1000000 D) 0)
              (>= C 0)
              (>= (- 1000000 C) 0)
              (= (- B D) 0)
              (= (- A C) 0))
         (inv-f D C B A))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (inv-f D C B A)
                     (>= (+ (- 1) A) 0)
                     (= (- (+ 1 E) A) 0)
                     (= (- (+ (- 1) F) B) 0)
                     (= (- H D) 0)
                     (= (- G C) 0))))
       (=> a!1 (inv-f H G F E)))
    ))


(check-sat)
(exit)
