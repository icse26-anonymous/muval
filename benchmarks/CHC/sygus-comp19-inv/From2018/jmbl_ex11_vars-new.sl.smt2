(set-logic HORN)

(declare-fun InvF (Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))
  (let ((a!1 (or (>= (- (- 1) D) 0) (>= (- (+ (- 1) D) C) 0))))
     (let ((a!2 (and (not (= (- D C) 0)) a!1)))
     (let ((a!3 (or a!2 (and (= (- D C) 0) (>= C 0)))))
       (=> (and (InvF D C B A E) a!3) false))))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int))
  (=> (and (= D 0) (>= (+ (- 1) C) 0)) (InvF D C B A E))))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int))
  (let ((a!1 (and (>= (- (+ (- 1) D) C) 0) (= (- (+ (- 1) J) D) 0))))
     (let ((a!2 (or a!1 (and (= (- D C) 0) (= (+ (- 1) J) 0)))))
       (=> (and (InvF D C B A I) a!2) (InvF J H G F E))))
    ))


(check-sat)
(exit)
