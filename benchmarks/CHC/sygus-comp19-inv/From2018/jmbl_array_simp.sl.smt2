(set-logic HORN)

(declare-fun InvF (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (InvF D C B A)
                     (>= (- D A) 0)
                     (>= (- (+ (- 1) C) B) 0)
                     (>= (+ (- 1) A) 0))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (=> (= D 0) (InvF D C B A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (= (- (+ (- 1) H) D) 0)
                     (= (- G F) 0)
                     (>= (- C F) 0)
                     (>= (+ (- (- 1) D) A) 0)))
           (a!2 (and (= (- (+ (- 1) H) D) 0)
                     (= (- G C) 0)
                     (>= (- (+ (- 1) F) C) 0)
                     (>= (+ (- (- 1) D) A) 0))))
       (=> (and (InvF D C B A) (or a!1 a!2)) (InvF H G F E)))
    ))


(check-sat)
(exit)
