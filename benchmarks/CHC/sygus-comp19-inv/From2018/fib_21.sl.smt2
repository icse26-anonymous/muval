(set-logic HORN)

(declare-fun inv-f (Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))
  (let ((a!1 (and (inv-f B A G F E D C)
                     (>= (- B D) 0)
                     (< (- (+ (- 1) G) D) 0))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int))
  (=> (and (= (+ (- 4000) F) 0)
              (= B 0)
              (= G 0)
              (>= (- 9 D) 0)
              (>= (+ (- 1) D) 0)
              (= (+ (- 2000) E) 0))
         (inv-f B A G F E D C))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int))
  (let ((a!1 (and (>= (- (+ (- 1) J) B) 0)
                     (= (- (+ (- 1) N) B) 0)
                     (= (- H A) 0)
                     (= (- G (+ M L)) 0)
                     (= (- F L) 0)
                     (= (- E K) 0)
                     (= (- D J) 0)
                     (= C 0)))
           (a!2 (and (>= (- (+ (- 1) J) B) 0)
                     (= (- (+ (- 1) N) B) 0)
                     (= (- H A) 0)
                     (= (- G (+ M K)) 0)
                     (= (- F L) 0)
                     (= (- E K) 0)
                     (= (- D J) 0)
                     (= (+ (- 1) C) 0))))
     (let ((a!3 (or (and (>= (- B J) 0)
                         (= (- N B) 0)
                         (= (- H A) 0)
                         (= (- G M) 0)
                         (= (- F L) 0)
                         (= (- E K) 0)
                         (= (- D J) 0)
                         (= (- C I) 0))
                    a!1
                    a!2)))
       (=> (and (inv-f B A M L K J I) a!3) (inv-f N H G F E D C))))
    ))


(check-sat)
(exit)
