(set-logic HORN)

(declare-fun inv-f (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (inv-f D C B A)
                     (= (+ (- 1) B) 0)
                     (>= (- (+ (- 1) D) A) 0)
                     (not (= (- D C) 0)))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (= D 0) (or (= (+ (- 1) B) 0) (= (+ (- 2) B) 0)) (= C 0))))
       (=> a!1 (inv-f D C B A)))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (= (- F B) 0) (= (- E A) 0))))
     (let ((a!2 (and (>= (- (+ (- 1) D) A) 0) (= (- H D) 0) (= (- G C) 0) a!1))
           (a!3 (and (>= (- A D) 0)
                     (= (- (+ (- 1) H) D) 0)
                     (= (- (- G C) B) 0)
                     a!1)))
       (=> (and (inv-f D C B A) (or a!2 a!3)) (inv-f H G F E))))
    ))


(check-sat)
(exit)
