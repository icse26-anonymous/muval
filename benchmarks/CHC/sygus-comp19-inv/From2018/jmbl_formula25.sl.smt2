(set-logic HORN)

(declare-fun InvF (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (or (< (- D) 0)
                    (< (- (+ (- 1) D) A) 0)
                    (not (= (- C B) 0))
                    (and (< A 0) (< (- B A) 0)))))
       (=> (and (InvF D C B A) a!1) false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (=> (and (= C 0) (= D 0) (= B 0) (= (+ 1 A) 0)) (InvF D C B A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (InvF D C B A)
                     (= (- G F) 0)
                     (>= (- (+ (- 1) H) E) 0)
                     (>= (- H) 0)
                     (or (>= E 0) (>= (- F E) 0)))))
       (=> a!1 (InvF H G F E)))
    ))


(check-sat)
(exit)
