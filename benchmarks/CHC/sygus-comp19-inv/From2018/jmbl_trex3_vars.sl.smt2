(set-logic HORN)

(declare-fun InvF (Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int))
  (=> (and (InvF I H G F E D C B A)
              (not (= H 0))
              (not (= I 0))
              (< (- (- 1) G) 0)
              (< (- (- 1) H) 0)
              (< (- (- 1) I) 0)
              (not (= G 0)))
         false)
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int))
  (=> (and (= (+ (- 1) E) 0) (= (+ (- 1) F) 0) (= (+ (- 1) D) 0))
         (InvF I H G F E D C B A))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int)
         (M Int)
         (N Int)
         (O Int)
         (P Int)
         (Q Int)
         (R Int))
  (let ((a!1 (and (= (- F N) 0) (= (- E M) 0) (= (- D L) 0))))
     (let ((a!2 (and (= (- H P) 0)
                     (and (= (- G O) 0) a!1)
                     (>= (+ (- 1) Q) 0)
                     (>= (+ (- 1) P) 0)
                     (>= (+ (- 1) O) 0)
                     (= (+ (- R Q) N) 0)))
           (a!3 (and (= (- R Q) 0)
                     (and (= (- G O) 0) a!1)
                     (>= (+ (- 1) Q) 0)
                     (>= (+ (- 1) P) 0)
                     (>= (+ (- 1) O) 0)
                     (= (+ (- M P) H) 0)))
           (a!4 (and (= (- R Q) 0)
                     (= (- H P) 0)
                     a!1
                     (>= (+ (- 1) Q) 0)
                     (>= (+ (- 1) P) 0)
                     (>= (+ (- 1) O) 0)
                     (= (+ (- L O) G) 0))))
       (=> (and (InvF Q P O N M L K J I) (or a!2 a!3 a!4))
           (InvF R H G F E D C B A))))
    ))


(check-sat)
(exit)
