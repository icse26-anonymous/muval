(set-logic HORN)

(declare-fun InvF (Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (InvF C B A F E D)
                     (< (- C B) 0)
                     (< (+ (- (- 1) F) D) 0)
                     (not (= (+ 1 A) 0)))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (>= (- (+ (- 1) E) A) 0)
                     (or (>= (- C B) 0) (= A 0))
                     (= F 0))))
       (=> a!1 (InvF C B A F E D)))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (let ((a!1 (and (= (- G A) 0)
                     (= (- E J) 0)
                     (= (- D I) 0)
                     (>= (+ (- (- 1) K) I) 0)
                     (>= (- (+ (- 1) H) C) 0)
                     (= (- L H) 0)
                     (= (+ (- (- 1) K) F) 0)))
           (a!2 (and (= (- G A) 0)
                     (= (- E J) 0)
                     (= (- D I) 0)
                     (>= (+ (- (- 1) K) I) 0)
                     (>= (+ (- (- 1) H) C) 0)
                     (= (+ (- (- 1) K) F) 0))))
       (=> (and (InvF C B A K J I) (or a!1 a!2)) (InvF L H G F E D)))
    ))


(check-sat)
(exit)
