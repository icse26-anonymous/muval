(set-logic HORN)

(declare-fun InvF (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (InvF D C B A)
                     (< (- A D) 0)
                     (< (+ (- 1) D C B (* (- 2) A)) 0))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (= D 0) (>= A 0) (or (= (+ (- 1) B) 0) (>= B 0)) (= C 0))))
       (=> a!1 (InvF D C B A)))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (InvF D C B A)
                     (= (- (+ (- 1) H) D) 0)
                     (= (- F B) 0)
                     (= (- E A) 0)
                     (>= (- A D) 0)
                     (= (- (- G D) C) 0))))
       (=> a!1 (InvF H G F E)))
    ))


(check-sat)
(exit)
