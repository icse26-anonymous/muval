(set-logic HORN)

(declare-fun InvF (Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (InvF C B A F E D) (= (- C B) 0) (not (= (+ (- 1) A) 0)))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (= (- (+ 1 C) B) 0) (= A 0))))
     (let ((a!2 (or (and (= (- C B) 0) (= (+ (- 1) A) 0)) a!1)))
       (=> a!2 (InvF C B A F E D))))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (let ((a!1 (and (not (= (- C B) 0)) (= (+ (- 1) G) 0) (= (- L B) 0)))
           (a!2 (and (not (= (- C B) 0))
                     (= G 0)
                     (= (- L B) 0)
                     (= (- (+ (- 1) H) B) 0))))
       (=> (and (InvF C B A K J I) (or a!1 a!2)) (InvF L H G F E D)))
    ))


(check-sat)
(exit)
