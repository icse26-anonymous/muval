(set-logic HORN)

(declare-fun inv-f (Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (inv-f D C B A)
                     (>= (+ (- (- 1) D) B) 0)
                     (< (+ (- 1) (* (- 2) D) C B A) 0))))
       (=> a!1 false))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int))
  (let ((a!1 (and (= B 0) (>= D 0) (= A 0) (or (= (+ (- 1) C) 0) (>= C 0)))))
       (=> a!1 (inv-f D C B A)))
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int))
  (let ((a!1 (and (>= (+ (- (- 1) D) B) 0)
                     (= (- H D) 0)
                     (= (- G C) 0)
                     (= (- F B) 0)
                     (= (- E A) 0)))
           (a!2 (and (>= (- D B) 0)
                     (= (- H D) 0)
                     (= (- G C) 0)
                     (= (- (+ (- 1) F) B) 0)
                     (= (- (+ (- 1) E) A) 0))))
       (=> (and (inv-f D C B A) (or a!1 a!2)) (inv-f H G F E)))
    ))


(check-sat)
(exit)
