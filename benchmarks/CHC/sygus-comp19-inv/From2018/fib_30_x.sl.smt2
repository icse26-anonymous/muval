(set-logic HORN)

(declare-fun inv-f (Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int))
  (=> (and (inv-f C B A) (>= (- C A) 0) (< B 0)) false)))
(assert (forall ((A Int) (B Int) (C Int))
  (=> (and (= B 0) (= C 0) (>= (+ (- 1) A) 0)) (inv-f C B A))))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (let ((a!1 (and (>= (+ (- (- 1) C) A) 0)
                     (= (- (+ (- 1) F) C) 0)
                     (= (- (- E C) B) 0)
                     (= (- D A) 0))))
     (let ((a!2 (or (and (>= (- C A) 0)
                         (= (- F C) 0)
                         (= (- E B) 0)
                         (= (- D A) 0))
                    a!1)))
       (=> (and (inv-f C B A) a!2) (inv-f F E D))))
    ))


(check-sat)
(exit)
