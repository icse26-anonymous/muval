(set-logic HORN)

(declare-fun InvF (Int Int Int Int Int Int) Bool)
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (=> (and (InvF C B A F E D)
              (not (= B 0))
              (not (= C 0))
              (< (- (- 1) A) 0)
              (< (- (- 1) B) 0)
              (< (- (- 1) C) 0)
              (not (= A 0)))
         false)
    ))
(assert (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int))
  (=> (and (= (+ (- 1) E) 0) (= (+ (- 1) F) 0) (= (+ (- 1) D) 0))
         (InvF C B A F E D))
    ))
(assert (forall ((A Int)
         (B Int)
         (C Int)
         (D Int)
         (E Int)
         (F Int)
         (G Int)
         (H Int)
         (I Int)
         (J Int)
         (K Int)
         (L Int))
  (let ((a!1 (and (= (- F K) 0) (= (- E J) 0) (= (- D I) 0))))
     (let ((a!2 (and (= (- H B) 0)
                     (and (= (- G A) 0) a!1)
                     (>= (+ (- 1) C) 0)
                     (>= (+ (- 1) B) 0)
                     (>= (+ (- 1) A) 0)
                     (= (- (+ L K) C) 0)))
           (a!3 (and (= (- L C) 0)
                     (and (= (- G A) 0) a!1)
                     (>= (+ (- 1) C) 0)
                     (>= (+ (- 1) B) 0)
                     (>= (+ (- 1) A) 0)
                     (= (- (+ J H) B) 0)))
           (a!4 (and (= (- L C) 0)
                     (= (- H B) 0)
                     a!1
                     (>= (+ (- 1) C) 0)
                     (>= (+ (- 1) B) 0)
                     (>= (+ (- 1) A) 0)
                     (= (- (+ I G) A) 0))))
       (=> (and (InvF C B A K J I) (or a!2 a!3 a!4)) (InvF L H G F E D))))
    ))


(check-sat)
(exit)
