; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 345
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_b_prod_fun$ 0)
(declare-sort A_b_prod_a_fun$ 0)
(declare-sort A_b_prod_bool_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_b_prod_a_b_prod_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort A_a_b_prod_fun_a_a_fun_fun$ 0)
(declare-sort Bool_a_fun_bool_bool_fun_fun$ 0)
(declare-sort A_a_b_prod_fun_a_bool_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_fun$ 0)
(declare-sort A_b_prod_a_fun_a_b_prod_a_fun_fun$ 0)
(declare-sort A_b_prod_a_fun_a_b_prod_bool_fun_fun$ 0)
(declare-sort A_b_prod_bool_fun_a_b_prod_a_fun_fun$ 0)
(declare-sort A_b_prod_bool_fun_a_b_prod_bool_fun_fun$ 0)
(declare-sort A_b_prod_a_b_prod_fun_a_b_prod_a_fun_fun$ 0)
(declare-sort A_b_prod_a_b_prod_fun_a_b_prod_bool_fun_fun$ 0)
(declare-datatypes () ((A_b_prod$ (pair$ (fst$ A$) (snd$ B$)))))
(declare-codatatypes () ((A_b_prod_llist$ (lNil$) (lCons$ (lhd$ A_b_prod$) (ltl$ A_b_prod_llist$)))
  (A_llist$ (lNil$a) (lCons$a (lhd$a A$) (ltl$a A_llist$)))
  (B_llist$ (lNil$b) (lCons$b (lhd$b B$) (ltl$b B_llist$)))))
(declare-fun p$ () A_bool_fun$)
(declare-fun uu$ () A_b_prod_a_fun$)
(declare-fun xs$ () A_llist$)
(declare-fun ys$ () B_llist$)
(declare-fun comp$ (A_bool_fun$) A_b_prod_a_fun_a_b_prod_bool_fun_fun$)
(declare-fun lzip$ (A_llist$ B_llist$) A_b_prod_llist$)
(declare-fun comp$a (A_b_prod_a_fun$) A_b_prod_a_b_prod_fun_a_b_prod_a_fun_fun$)
(declare-fun comp$b (Bool_bool_fun$) A_b_prod_bool_fun_a_b_prod_bool_fun_fun$)
(declare-fun comp$c (Bool_bool_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun comp$d (A_bool_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun comp$e (A_a_fun$) A_b_prod_a_fun_a_b_prod_a_fun_fun$)
(declare-fun comp$f (A_b_prod_bool_fun$) A_b_prod_a_b_prod_fun_a_b_prod_bool_fun_fun$)
(declare-fun comp$g (Bool_bool_fun$) Bool_bool_fun_bool_bool_fun_fun$)
(declare-fun comp$h (Bool_a_fun$) A_bool_fun_a_a_fun_fun$)
(declare-fun comp$i (A_bool_fun$) Bool_a_fun_bool_bool_fun_fun$)
(declare-fun comp$j (A_a_fun$) A_a_fun_a_a_fun_fun$)
(declare-fun comp$k (Bool_a_fun$) A_b_prod_bool_fun_a_b_prod_a_fun_fun$)
(declare-fun comp$l (A_b_prod_bool_fun$) A_a_b_prod_fun_a_bool_fun_fun$)
(declare-fun comp$m (A_b_prod_a_fun$) A_a_b_prod_fun_a_a_fun_fun$)
(declare-fun fstsp$ (A_b_prod$) A_bool_fun$)
(declare-fun fun_app$ (A_b_prod_a_fun$ A_b_prod$) A$)
(declare-fun fun_app$a (A_b_prod_a_fun_a_b_prod_bool_fun_fun$ A_b_prod_a_fun$) A_b_prod_bool_fun$)
(declare-fun fun_app$b (A_b_prod_a_b_prod_fun_a_b_prod_a_fun_fun$ A_b_prod_a_b_prod_fun$) A_b_prod_a_fun$)
(declare-fun fun_app$c (A_b_prod_a_b_prod_fun$ A_b_prod$) A_b_prod$)
(declare-fun fun_app$d (A_b_prod_bool_fun$ A_b_prod$) Bool)
(declare-fun fun_app$e (A_b_prod_bool_fun_a_b_prod_bool_fun_fun$ A_b_prod_bool_fun$) A_b_prod_bool_fun$)
(declare-fun fun_app$f (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$g (A_bool_fun$ A$) Bool)
(declare-fun fun_app$h (A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun$)
(declare-fun fun_app$i (A_a_fun_a_bool_fun_fun$ A_a_fun$) A_bool_fun$)
(declare-fun fun_app$j (A_a_fun$ A$) A$)
(declare-fun fun_app$k (A_b_prod_a_fun_a_b_prod_a_fun_fun$ A_b_prod_a_fun$) A_b_prod_a_fun$)
(declare-fun fun_app$l (A_b_prod_a_b_prod_fun_a_b_prod_bool_fun_fun$ A_b_prod_a_b_prod_fun$) A_b_prod_bool_fun$)
(declare-fun fun_app$m (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun$) Bool_bool_fun$)
(declare-fun fun_app$n (A_bool_fun_a_a_fun_fun$ A_bool_fun$) A_a_fun$)
(declare-fun fun_app$o (Bool_a_fun_bool_bool_fun_fun$ Bool_a_fun$) Bool_bool_fun$)
(declare-fun fun_app$p (A_a_fun_a_a_fun_fun$ A_a_fun$) A_a_fun$)
(declare-fun fun_app$q (A_b_prod_bool_fun_a_b_prod_a_fun_fun$ A_b_prod_bool_fun$) A_b_prod_a_fun$)
(declare-fun fun_app$r (A_a_b_prod_fun_a_bool_fun_fun$ A_a_b_prod_fun$) A_bool_fun$)
(declare-fun fun_app$s (A_a_b_prod_fun_a_a_fun_fun$ A_a_b_prod_fun$) A_a_fun$)
(declare-fun fun_app$t (Bool_a_fun$ Bool) A$)
(declare-fun fun_app$u (A_a_b_prod_fun$ A$) A_b_prod$)
(declare-fun ltakeWhile$ (A_bool_fun$ A_llist$) A_llist$)
(declare-fun ltakeWhile$a (A_b_prod_bool_fun$ A_b_prod_llist$) A_b_prod_llist$)
(assert (! (forall ((?v0 A_b_prod$)) (! (= (fun_app$ uu$ ?v0) (fst$ ?v0)) :pattern ((fun_app$ uu$ ?v0)))) :named a0))
(assert (! (not (= (lzip$ (ltakeWhile$ p$ xs$) ys$) (ltakeWhile$a (fun_app$a (comp$ p$) uu$) (lzip$ xs$ ys$)))) :named a1))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_b_prod$)) (! (= (fun_app$ (fun_app$b (comp$a ?v0) ?v1) ?v2) (fun_app$ ?v0 (fun_app$c ?v1 ?v2))) :pattern ((fun_app$ (fun_app$b (comp$a ?v0) ?v1) ?v2)))) :named a2))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 A_b_prod$)) (! (= (fun_app$d (fun_app$e (comp$b ?v0) ?v1) ?v2) (fun_app$f ?v0 (fun_app$d ?v1 ?v2))) :pattern ((fun_app$d (fun_app$e (comp$b ?v0) ?v1) ?v2)))) :named a3))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A$)) (! (= (fun_app$g (fun_app$h (comp$c ?v0) ?v1) ?v2) (fun_app$f ?v0 (fun_app$g ?v1 ?v2))) :pattern ((fun_app$g (fun_app$h (comp$c ?v0) ?v1) ?v2)))) :named a4))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$g (fun_app$i (comp$d ?v0) ?v1) ?v2) (fun_app$g ?v0 (fun_app$j ?v1 ?v2))) :pattern ((fun_app$g (fun_app$i (comp$d ?v0) ?v1) ?v2)))) :named a5))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$)) (! (= (fun_app$ (fun_app$k (comp$e ?v0) ?v1) ?v2) (fun_app$j ?v0 (fun_app$ ?v1 ?v2))) :pattern ((fun_app$ (fun_app$k (comp$e ?v0) ?v1) ?v2)))) :named a6))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$)) (! (= (fun_app$d (fun_app$a (comp$ ?v0) ?v1) ?v2) (fun_app$g ?v0 (fun_app$ ?v1 ?v2))) :pattern ((fun_app$d (fun_app$a (comp$ ?v0) ?v1) ?v2)))) :named a7))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_b_prod_a_fun$)) (= (fun_app$e (comp$b ?v0) (fun_app$a (comp$ ?v1) ?v2)) (fun_app$a (comp$ (fun_app$h (comp$c ?v0) ?v1)) ?v2))) :named a8))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_b_prod_a_fun$)) (= (fun_app$a (comp$ ?v0) (fun_app$k (comp$e ?v1) ?v2)) (fun_app$a (comp$ (fun_app$i (comp$d ?v0) ?v1)) ?v2))) :named a9))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_a_b_prod_fun$)) (= (fun_app$a (comp$ ?v0) (fun_app$b (comp$a ?v1) ?v2)) (fun_app$l (comp$f (fun_app$a (comp$ ?v0) ?v1)) ?v2))) :named a10))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun$) (?v2 A_bool_fun$)) (= (fun_app$h (comp$c ?v0) (fun_app$h (comp$c ?v1) ?v2)) (fun_app$h (comp$c (fun_app$m (comp$g ?v0) ?v1)) ?v2))) :named a11))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_a_fun$)) (= (fun_app$h (comp$c ?v0) (fun_app$i (comp$d ?v1) ?v2)) (fun_app$i (comp$d (fun_app$h (comp$c ?v0) ?v1)) ?v2))) :named a12))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$) (?v2 A_bool_fun$)) (= (fun_app$i (comp$d ?v0) (fun_app$n (comp$h ?v1) ?v2)) (fun_app$h (comp$c (fun_app$o (comp$i ?v0) ?v1)) ?v2))) :named a13))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_a_fun$)) (= (fun_app$i (comp$d ?v0) (fun_app$p (comp$j ?v1) ?v2)) (fun_app$i (comp$d (fun_app$i (comp$d ?v0) ?v1)) ?v2))) :named a14))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 A_bool_fun$) (?v2 A_b_prod_a_fun$)) (= (fun_app$q (comp$k ?v0) (fun_app$a (comp$ ?v1) ?v2)) (fun_app$k (comp$e (fun_app$n (comp$h ?v0) ?v1)) ?v2))) :named a15))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$) (?v2 A_b_prod_bool_fun$)) (= (fun_app$a (comp$ ?v0) (fun_app$q (comp$k ?v1) ?v2)) (fun_app$e (comp$b (fun_app$o (comp$i ?v0) ?v1)) ?v2))) :named a16))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun$) (?v2 A_b_prod_bool_fun$)) (= (fun_app$e (comp$b ?v0) (fun_app$e (comp$b ?v1) ?v2)) (fun_app$e (comp$b (fun_app$m (comp$g ?v0) ?v1)) ?v2))) :named a17))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_b_prod_a_fun$)) (= (fun_app$a (comp$ (fun_app$h (comp$c ?v0) ?v1)) ?v2) (fun_app$e (comp$b ?v0) (fun_app$a (comp$ ?v1) ?v2)))) :named a18))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_b_prod_a_fun$)) (= (fun_app$a (comp$ (fun_app$i (comp$d ?v0) ?v1)) ?v2) (fun_app$a (comp$ ?v0) (fun_app$k (comp$e ?v1) ?v2)))) :named a19))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_a_b_prod_fun$)) (= (fun_app$l (comp$f (fun_app$a (comp$ ?v0) ?v1)) ?v2) (fun_app$a (comp$ ?v0) (fun_app$b (comp$a ?v1) ?v2)))) :named a20))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun$) (?v2 A_bool_fun$)) (= (fun_app$h (comp$c (fun_app$m (comp$g ?v0) ?v1)) ?v2) (fun_app$h (comp$c ?v0) (fun_app$h (comp$c ?v1) ?v2)))) :named a21))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$) (?v2 A_bool_fun$)) (= (fun_app$h (comp$c (fun_app$o (comp$i ?v0) ?v1)) ?v2) (fun_app$i (comp$d ?v0) (fun_app$n (comp$h ?v1) ?v2)))) :named a22))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_a_fun$)) (= (fun_app$i (comp$d (fun_app$h (comp$c ?v0) ?v1)) ?v2) (fun_app$h (comp$c ?v0) (fun_app$i (comp$d ?v1) ?v2)))) :named a23))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_a_fun$)) (= (fun_app$i (comp$d (fun_app$i (comp$d ?v0) ?v1)) ?v2) (fun_app$i (comp$d ?v0) (fun_app$p (comp$j ?v1) ?v2)))) :named a24))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_a_b_prod_fun$)) (= (fun_app$r (comp$l (fun_app$a (comp$ ?v0) ?v1)) ?v2) (fun_app$i (comp$d ?v0) (fun_app$s (comp$m ?v1) ?v2)))) :named a25))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 A_a_b_prod_fun$)) (= (fun_app$r (comp$l (fun_app$e (comp$b ?v0) ?v1)) ?v2) (fun_app$h (comp$c ?v0) (fun_app$r (comp$l ?v1) ?v2)))) :named a26))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$) (?v2 A_b_prod_bool_fun$)) (= (fun_app$e (comp$b (fun_app$o (comp$i ?v0) ?v1)) ?v2) (fun_app$a (comp$ ?v0) (fun_app$q (comp$k ?v1) ?v2)))) :named a27))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_b_prod$)) (! (= (fun_app$ (fun_app$b (comp$a ?v0) ?v1) ?v2) (fun_app$ ?v0 (fun_app$c ?v1 ?v2))) :pattern ((fun_app$ (fun_app$b (comp$a ?v0) ?v1) ?v2)))) :named a28))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 A_b_prod$)) (! (= (fun_app$d (fun_app$e (comp$b ?v0) ?v1) ?v2) (fun_app$f ?v0 (fun_app$d ?v1 ?v2))) :pattern ((fun_app$d (fun_app$e (comp$b ?v0) ?v1) ?v2)))) :named a29))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A$)) (! (= (fun_app$g (fun_app$h (comp$c ?v0) ?v1) ?v2) (fun_app$f ?v0 (fun_app$g ?v1 ?v2))) :pattern ((fun_app$g (fun_app$h (comp$c ?v0) ?v1) ?v2)))) :named a30))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$g (fun_app$i (comp$d ?v0) ?v1) ?v2) (fun_app$g ?v0 (fun_app$j ?v1 ?v2))) :pattern ((fun_app$g (fun_app$i (comp$d ?v0) ?v1) ?v2)))) :named a31))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$)) (! (= (fun_app$ (fun_app$k (comp$e ?v0) ?v1) ?v2) (fun_app$j ?v0 (fun_app$ ?v1 ?v2))) :pattern ((fun_app$ (fun_app$k (comp$e ?v0) ?v1) ?v2)))) :named a32))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$)) (! (= (fun_app$d (fun_app$a (comp$ ?v0) ?v1) ?v2) (fun_app$g ?v0 (fun_app$ ?v1 ?v2))) :pattern ((fun_app$d (fun_app$a (comp$ ?v0) ?v1) ?v2)))) :named a33))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$)) (=> (and (= (fun_app$a (comp$ ?v0) ?v1) (fun_app$a (comp$ ?v2) ?v3)) (=> (forall ((?v4 A_b_prod$)) (= (fun_app$g ?v0 (fun_app$ ?v1 ?v4)) (fun_app$g ?v2 (fun_app$ ?v3 ?v4)))) false)) false)) :named a34))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$)) (=> (and (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (=> (forall ((?v4 A$)) (= (fun_app$f ?v0 (fun_app$g ?v1 ?v4)) (fun_app$f ?v2 (fun_app$g ?v3 ?v4)))) false)) false)) :named a35))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$)) (=> (and (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (=> (forall ((?v4 A$)) (= (fun_app$f ?v0 (fun_app$g ?v1 ?v4)) (fun_app$g ?v2 (fun_app$j ?v3 ?v4)))) false)) false)) :named a36))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$)) (=> (and (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (=> (forall ((?v4 A$)) (= (fun_app$g ?v0 (fun_app$j ?v1 ?v4)) (fun_app$f ?v2 (fun_app$g ?v3 ?v4)))) false)) false)) :named a37))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$)) (=> (and (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (=> (forall ((?v4 A$)) (= (fun_app$g ?v0 (fun_app$j ?v1 ?v4)) (fun_app$g ?v2 (fun_app$j ?v3 ?v4)))) false)) false)) :named a38))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_b_prod_bool_fun$)) (=> (and (= (fun_app$a (comp$ ?v0) ?v1) (fun_app$e (comp$b ?v2) ?v3)) (=> (forall ((?v4 A_b_prod$)) (= (fun_app$g ?v0 (fun_app$ ?v1 ?v4)) (fun_app$f ?v2 (fun_app$d ?v3 ?v4)))) false)) false)) :named a39))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$)) (=> (and (= (fun_app$e (comp$b ?v0) ?v1) (fun_app$a (comp$ ?v2) ?v3)) (=> (forall ((?v4 A_b_prod$)) (= (fun_app$f ?v0 (fun_app$d ?v1 ?v4)) (fun_app$g ?v2 (fun_app$ ?v3 ?v4)))) false)) false)) :named a40))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_b_prod_bool_fun$)) (=> (and (= (fun_app$e (comp$b ?v0) ?v1) (fun_app$e (comp$b ?v2) ?v3)) (=> (forall ((?v4 A_b_prod$)) (= (fun_app$f ?v0 (fun_app$d ?v1 ?v4)) (fun_app$f ?v2 (fun_app$d ?v3 ?v4)))) false)) false)) :named a41))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_a_fun$) (?v3 A_b_prod_a_fun$)) (=> (and (= (fun_app$k (comp$e ?v0) ?v1) (fun_app$k (comp$e ?v2) ?v3)) (=> (forall ((?v4 A_b_prod$)) (= (fun_app$j ?v0 (fun_app$ ?v1 ?v4)) (fun_app$j ?v2 (fun_app$ ?v3 ?v4)))) false)) false)) :named a42))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_a_fun$) (?v3 A_b_prod_a_fun$)) (=> (and (= (fun_app$b (comp$a ?v0) ?v1) (fun_app$k (comp$e ?v2) ?v3)) (=> (forall ((?v4 A_b_prod$)) (= (fun_app$ ?v0 (fun_app$c ?v1 ?v4)) (fun_app$j ?v2 (fun_app$ ?v3 ?v4)))) false)) false)) :named a43))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$) (?v4 Bool_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$a (comp$ ?v0) ?v1) (fun_app$a (comp$ ?v2) ?v3)) (= (fun_app$h (comp$c ?v4) ?v2) ?v5)) (= (fun_app$a (comp$ (fun_app$h (comp$c ?v4) ?v0)) ?v1) (fun_app$a (comp$ ?v5) ?v3)))) :named a44))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_a_fun$) (?v3 A_b_prod_a_fun$) (?v4 A_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$b (comp$a ?v0) ?v1) (fun_app$k (comp$e ?v2) ?v3)) (= (fun_app$i (comp$d ?v4) ?v2) ?v5)) (= (fun_app$l (comp$f (fun_app$a (comp$ ?v4) ?v0)) ?v1) (fun_app$a (comp$ ?v5) ?v3)))) :named a45))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_a_fun$) (?v3 A_b_prod_a_b_prod_fun$) (?v4 A_bool_fun$) (?v5 A_b_prod_bool_fun$)) (=> (and (= (fun_app$k (comp$e ?v0) ?v1) (fun_app$b (comp$a ?v2) ?v3)) (= (fun_app$a (comp$ ?v4) ?v2) ?v5)) (= (fun_app$a (comp$ (fun_app$i (comp$d ?v4) ?v0)) ?v1) (fun_app$l (comp$f ?v5) ?v3)))) :named a46))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 Bool_a_fun$) (?v3 A_bool_fun$) (?v4 A_bool_fun$) (?v5 Bool_bool_fun$)) (=> (and (= (fun_app$p (comp$j ?v0) ?v1) (fun_app$n (comp$h ?v2) ?v3)) (= (fun_app$o (comp$i ?v4) ?v2) ?v5)) (= (fun_app$i (comp$d (fun_app$i (comp$d ?v4) ?v0)) ?v1) (fun_app$h (comp$c ?v5) ?v3)))) :named a47))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 A_bool_fun$) (?v2 A_a_fun$) (?v3 A_a_fun$) (?v4 A_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$n (comp$h ?v0) ?v1) (fun_app$p (comp$j ?v2) ?v3)) (= (fun_app$i (comp$d ?v4) ?v2) ?v5)) (= (fun_app$h (comp$c (fun_app$o (comp$i ?v4) ?v0)) ?v1) (fun_app$i (comp$d ?v5) ?v3)))) :named a48))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A_a_fun$) (?v3 A_a_fun$) (?v4 A_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$p (comp$j ?v0) ?v1) (fun_app$p (comp$j ?v2) ?v3)) (= (fun_app$i (comp$d ?v4) ?v2) ?v5)) (= (fun_app$i (comp$d (fun_app$i (comp$d ?v4) ?v0)) ?v1) (fun_app$i (comp$d ?v5) ?v3)))) :named a49))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$) (?v4 Bool_bool_fun$) (?v5 Bool_bool_fun$)) (=> (and (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (= (fun_app$m (comp$g ?v4) ?v2) ?v5)) (= (fun_app$h (comp$c (fun_app$m (comp$g ?v4) ?v0)) ?v1) (fun_app$h (comp$c ?v5) ?v3)))) :named a50))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$) (?v4 Bool_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (= (fun_app$h (comp$c ?v4) ?v2) ?v5)) (= (fun_app$h (comp$c (fun_app$m (comp$g ?v4) ?v0)) ?v1) (fun_app$i (comp$d ?v5) ?v3)))) :named a51))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$) (?v4 Bool_bool_fun$) (?v5 Bool_bool_fun$)) (=> (and (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (= (fun_app$m (comp$g ?v4) ?v2) ?v5)) (= (fun_app$i (comp$d (fun_app$h (comp$c ?v4) ?v0)) ?v1) (fun_app$h (comp$c ?v5) ?v3)))) :named a52))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$) (?v4 Bool_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (= (fun_app$h (comp$c ?v4) ?v2) ?v5)) (= (fun_app$i (comp$d (fun_app$h (comp$c ?v4) ?v0)) ?v1) (fun_app$i (comp$d ?v5) ?v3)))) :named a53))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$) (?v4 A_b_prod_a_fun$) (?v5 A_b_prod_a_fun$)) (=> (and (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (= (fun_app$k (comp$e ?v3) ?v4) ?v5)) (= (fun_app$e (comp$b ?v0) (fun_app$a (comp$ ?v1) ?v4)) (fun_app$a (comp$ ?v2) ?v5)))) :named a54))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$) (?v4 A_b_prod_a_fun$) (?v5 A_b_prod_bool_fun$)) (=> (and (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (= (fun_app$a (comp$ ?v3) ?v4) ?v5)) (= (fun_app$a (comp$ ?v0) (fun_app$k (comp$e ?v1) ?v4)) (fun_app$e (comp$b ?v2) ?v5)))) :named a55))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$) (?v4 A_b_prod_a_b_prod_fun$) (?v5 A_b_prod_a_fun$)) (=> (and (= (fun_app$a (comp$ ?v0) ?v1) (fun_app$a (comp$ ?v2) ?v3)) (= (fun_app$b (comp$a ?v3) ?v4) ?v5)) (= (fun_app$a (comp$ ?v0) (fun_app$b (comp$a ?v1) ?v4)) (fun_app$a (comp$ ?v2) ?v5)))) :named a56))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun$) (?v2 A_bool_fun$) (?v3 Bool_a_fun$) (?v4 A_bool_fun$) (?v5 A_a_fun$)) (=> (and (= (fun_app$m (comp$g ?v0) ?v1) (fun_app$o (comp$i ?v2) ?v3)) (= (fun_app$n (comp$h ?v3) ?v4) ?v5)) (= (fun_app$h (comp$c ?v0) (fun_app$h (comp$c ?v1) ?v4)) (fun_app$i (comp$d ?v2) ?v5)))) :named a57))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun$) (?v2 Bool_bool_fun$) (?v3 Bool_bool_fun$) (?v4 A_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$m (comp$g ?v0) ?v1) (fun_app$m (comp$g ?v2) ?v3)) (= (fun_app$h (comp$c ?v3) ?v4) ?v5)) (= (fun_app$h (comp$c ?v0) (fun_app$h (comp$c ?v1) ?v4)) (fun_app$h (comp$c ?v2) ?v5)))) :named a58))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$) (?v2 Bool_bool_fun$) (?v3 Bool_bool_fun$) (?v4 A_bool_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$o (comp$i ?v0) ?v1) (fun_app$m (comp$g ?v2) ?v3)) (= (fun_app$h (comp$c ?v3) ?v4) ?v5)) (= (fun_app$i (comp$d ?v0) (fun_app$n (comp$h ?v1) ?v4)) (fun_app$h (comp$c ?v2) ?v5)))) :named a59))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$) (?v4 A_a_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (= (fun_app$i (comp$d ?v3) ?v4) ?v5)) (= (fun_app$h (comp$c ?v0) (fun_app$i (comp$d ?v1) ?v4)) (fun_app$h (comp$c ?v2) ?v5)))) :named a60))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$) (?v4 A_a_fun$) (?v5 A_a_fun$)) (=> (and (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (= (fun_app$p (comp$j ?v3) ?v4) ?v5)) (= (fun_app$h (comp$c ?v0) (fun_app$i (comp$d ?v1) ?v4)) (fun_app$i (comp$d ?v2) ?v5)))) :named a61))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$) (?v4 A_a_fun$) (?v5 A_bool_fun$)) (=> (and (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (= (fun_app$i (comp$d ?v3) ?v4) ?v5)) (= (fun_app$i (comp$d ?v0) (fun_app$p (comp$j ?v1) ?v4)) (fun_app$h (comp$c ?v2) ?v5)))) :named a62))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$) (?v4 A_a_fun$) (?v5 A_a_fun$)) (=> (and (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (= (fun_app$p (comp$j ?v3) ?v4) ?v5)) (= (fun_app$i (comp$d ?v0) (fun_app$p (comp$j ?v1) ?v4)) (fun_app$i (comp$d ?v2) ?v5)))) :named a63))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$) (?v4 A_b_prod$)) (=> (= (fun_app$a (comp$ ?v0) ?v1) (fun_app$a (comp$ ?v2) ?v3)) (= (fun_app$g ?v0 (fun_app$ ?v1 ?v4)) (fun_app$g ?v2 (fun_app$ ?v3 ?v4))))) :named a64))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$) (?v4 A$)) (=> (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (= (fun_app$f ?v0 (fun_app$g ?v1 ?v4)) (fun_app$f ?v2 (fun_app$g ?v3 ?v4))))) :named a65))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$) (?v4 A$)) (=> (= (fun_app$h (comp$c ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (= (fun_app$f ?v0 (fun_app$g ?v1 ?v4)) (fun_app$g ?v2 (fun_app$j ?v3 ?v4))))) :named a66))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$) (?v4 A$)) (=> (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$h (comp$c ?v2) ?v3)) (= (fun_app$g ?v0 (fun_app$j ?v1 ?v4)) (fun_app$f ?v2 (fun_app$g ?v3 ?v4))))) :named a67))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$) (?v4 A$)) (=> (= (fun_app$i (comp$d ?v0) ?v1) (fun_app$i (comp$d ?v2) ?v3)) (= (fun_app$g ?v0 (fun_app$j ?v1 ?v4)) (fun_app$g ?v2 (fun_app$j ?v3 ?v4))))) :named a68))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_b_prod_bool_fun$) (?v4 A_b_prod$)) (=> (= (fun_app$a (comp$ ?v0) ?v1) (fun_app$e (comp$b ?v2) ?v3)) (= (fun_app$g ?v0 (fun_app$ ?v1 ?v4)) (fun_app$f ?v2 (fun_app$d ?v3 ?v4))))) :named a69))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$) (?v4 A_b_prod$)) (=> (= (fun_app$e (comp$b ?v0) ?v1) (fun_app$a (comp$ ?v2) ?v3)) (= (fun_app$f ?v0 (fun_app$d ?v1 ?v4)) (fun_app$g ?v2 (fun_app$ ?v3 ?v4))))) :named a70))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_b_prod_bool_fun$) (?v4 A_b_prod$)) (=> (= (fun_app$e (comp$b ?v0) ?v1) (fun_app$e (comp$b ?v2) ?v3)) (= (fun_app$f ?v0 (fun_app$d ?v1 ?v4)) (fun_app$f ?v2 (fun_app$d ?v3 ?v4))))) :named a71))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_a_fun$) (?v3 A_b_prod_a_fun$) (?v4 A_b_prod$)) (=> (= (fun_app$k (comp$e ?v0) ?v1) (fun_app$k (comp$e ?v2) ?v3)) (= (fun_app$j ?v0 (fun_app$ ?v1 ?v4)) (fun_app$j ?v2 (fun_app$ ?v3 ?v4))))) :named a72))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_a_fun$) (?v3 A_b_prod_a_fun$) (?v4 A_b_prod$)) (=> (= (fun_app$b (comp$a ?v0) ?v1) (fun_app$k (comp$e ?v2) ?v3)) (= (fun_app$ ?v0 (fun_app$c ?v1 ?v4)) (fun_app$j ?v2 (fun_app$ ?v3 ?v4))))) :named a73))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_a_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$k (comp$e ?v0) ?v1) ?v2) (= (fun_app$a (comp$ (fun_app$i (comp$d ?v3) ?v0)) ?v1) (fun_app$a (comp$ ?v3) ?v2)))) :named a74))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_bool_fun$) (?v3 Bool_bool_fun$)) (=> (= (fun_app$a (comp$ ?v0) ?v1) ?v2) (= (fun_app$a (comp$ (fun_app$h (comp$c ?v3) ?v0)) ?v1) (fun_app$e (comp$b ?v3) ?v2)))) :named a75))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_b_prod_a_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$b (comp$a ?v0) ?v1) ?v2) (= (fun_app$l (comp$f (fun_app$a (comp$ ?v3) ?v0)) ?v1) (fun_app$a (comp$ ?v3) ?v2)))) :named a76))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 A_bool_fun$) (?v2 A_a_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$n (comp$h ?v0) ?v1) ?v2) (= (fun_app$h (comp$c (fun_app$o (comp$i ?v3) ?v0)) ?v1) (fun_app$i (comp$d ?v3) ?v2)))) :named a77))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A_a_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$p (comp$j ?v0) ?v1) ?v2) (= (fun_app$i (comp$d (fun_app$i (comp$d ?v3) ?v0)) ?v1) (fun_app$i (comp$d ?v3) ?v2)))) :named a78))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 Bool_bool_fun$)) (=> (= (fun_app$h (comp$c ?v0) ?v1) ?v2) (= (fun_app$h (comp$c (fun_app$m (comp$g ?v3) ?v0)) ?v1) (fun_app$h (comp$c ?v3) ?v2)))) :named a79))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 Bool_bool_fun$)) (=> (= (fun_app$i (comp$d ?v0) ?v1) ?v2) (= (fun_app$i (comp$d (fun_app$h (comp$c ?v3) ?v0)) ?v1) (fun_app$h (comp$c ?v3) ?v2)))) :named a80))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_a_b_prod_fun$) (?v2 A_a_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$s (comp$m ?v0) ?v1) ?v2) (= (fun_app$r (comp$l (fun_app$a (comp$ ?v3) ?v0)) ?v1) (fun_app$i (comp$d ?v3) ?v2)))) :named a81))
(assert (! (forall ((?v0 A_b_prod_bool_fun$) (?v1 A_a_b_prod_fun$) (?v2 A_bool_fun$) (?v3 Bool_bool_fun$)) (=> (= (fun_app$r (comp$l ?v0) ?v1) ?v2) (= (fun_app$r (comp$l (fun_app$e (comp$b ?v3) ?v0)) ?v1) (fun_app$h (comp$c ?v3) ?v2)))) :named a82))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 A_b_prod_bool_fun$) (?v2 A_b_prod_a_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$q (comp$k ?v0) ?v1) ?v2) (= (fun_app$e (comp$b (fun_app$o (comp$i ?v3) ?v0)) ?v1) (fun_app$a (comp$ ?v3) ?v2)))) :named a83))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$)) (=> (= (fun_app$h (comp$c ?v0) ?v1) ?v2) (= (fun_app$e (comp$b ?v0) (fun_app$a (comp$ ?v1) ?v3)) (fun_app$a (comp$ ?v2) ?v3)))) :named a84))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 A_b_prod_a_fun$)) (=> (= (fun_app$i (comp$d ?v0) ?v1) ?v2) (= (fun_app$a (comp$ ?v0) (fun_app$k (comp$e ?v1) ?v3)) (fun_app$a (comp$ ?v2) ?v3)))) :named a85))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_bool_fun$) (?v3 A_b_prod_a_b_prod_fun$)) (=> (= (fun_app$a (comp$ ?v0) ?v1) ?v2) (= (fun_app$a (comp$ ?v0) (fun_app$b (comp$a ?v1) ?v3)) (fun_app$l (comp$f ?v2) ?v3)))) :named a86))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$m (comp$g ?v0) ?v1) ?v2) (= (fun_app$h (comp$c ?v0) (fun_app$h (comp$c ?v1) ?v3)) (fun_app$h (comp$c ?v2) ?v3)))) :named a87))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_bool_fun$)) (=> (= (fun_app$o (comp$i ?v0) ?v1) ?v2) (= (fun_app$i (comp$d ?v0) (fun_app$n (comp$h ?v1) ?v3)) (fun_app$h (comp$c ?v2) ?v3)))) :named a88))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$)) (=> (= (fun_app$h (comp$c ?v0) ?v1) ?v2) (= (fun_app$h (comp$c ?v0) (fun_app$i (comp$d ?v1) ?v3)) (fun_app$i (comp$d ?v2) ?v3)))) :named a89))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 A_a_fun$)) (=> (= (fun_app$i (comp$d ?v0) ?v1) ?v2) (= (fun_app$i (comp$d ?v0) (fun_app$p (comp$j ?v1) ?v3)) (fun_app$i (comp$d ?v2) ?v3)))) :named a90))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 A_bool_fun$) (?v2 A_a_fun$) (?v3 A_b_prod_a_fun$)) (=> (= (fun_app$n (comp$h ?v0) ?v1) ?v2) (= (fun_app$q (comp$k ?v0) (fun_app$a (comp$ ?v1) ?v3)) (fun_app$k (comp$e ?v2) ?v3)))) :named a91))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$) (?v2 Bool_bool_fun$) (?v3 A_b_prod_bool_fun$)) (=> (= (fun_app$o (comp$i ?v0) ?v1) ?v2) (= (fun_app$a (comp$ ?v0) (fun_app$q (comp$k ?v1) ?v3)) (fun_app$e (comp$b ?v2) ?v3)))) :named a92))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun$) (?v2 Bool_bool_fun$) (?v3 A_b_prod_bool_fun$)) (=> (= (fun_app$m (comp$g ?v0) ?v1) ?v2) (= (fun_app$e (comp$b ?v0) (fun_app$e (comp$b ?v1) ?v3)) (fun_app$e (comp$b ?v2) ?v3)))) :named a93))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_b_prod_a_fun$) (?v3 A_b_prod$)) (=> (= (fun_app$b (comp$a ?v0) ?v1) ?v2) (= (fun_app$ ?v0 (fun_app$c ?v1 ?v3)) (fun_app$ ?v2 ?v3)))) :named a94))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_b_prod_bool_fun$) (?v2 A_b_prod_bool_fun$) (?v3 A_b_prod$)) (=> (= (fun_app$e (comp$b ?v0) ?v1) ?v2) (= (fun_app$f ?v0 (fun_app$d ?v1 ?v3)) (fun_app$d ?v2 ?v3)))) :named a95))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun$) (?v3 A$)) (=> (= (fun_app$h (comp$c ?v0) ?v1) ?v2) (= (fun_app$f ?v0 (fun_app$g ?v1 ?v3)) (fun_app$g ?v2 ?v3)))) :named a96))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A_bool_fun$) (?v3 A$)) (=> (= (fun_app$i (comp$d ?v0) ?v1) ?v2) (= (fun_app$g ?v0 (fun_app$j ?v1 ?v3)) (fun_app$g ?v2 ?v3)))) :named a97))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_a_fun$) (?v3 A_b_prod$)) (=> (= (fun_app$k (comp$e ?v0) ?v1) ?v2) (= (fun_app$j ?v0 (fun_app$ ?v1 ?v3)) (fun_app$ ?v2 ?v3)))) :named a98))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod_bool_fun$) (?v3 A_b_prod$)) (=> (= (fun_app$a (comp$ ?v0) ?v1) ?v2) (= (fun_app$g ?v0 (fun_app$ ?v1 ?v3)) (fun_app$d ?v2 ?v3)))) :named a99))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_b_prod_a_b_prod_fun$) (?v2 A_b_prod$) (?v3 A_a_fun$) (?v4 A_b_prod_a_fun$) (?v5 A_bool_fun$)) (=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2)) (fun_app$j ?v3 (fun_app$ ?v4 ?v2))) (= (fun_app$d (fun_app$l (comp$f (fun_app$a (comp$ ?v5) ?v0)) ?v1) ?v2) (fun_app$d (fun_app$a (comp$ (fun_app$i (comp$d ?v5) ?v3)) ?v4) ?v2)))) :named a100))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$) (?v3 A_b_prod_a_fun$) (?v4 A_b_prod_a_b_prod_fun$) (?v5 A_bool_fun$)) (=> (= (fun_app$j ?v0 (fun_app$ ?v1 ?v2)) (fun_app$ ?v3 (fun_app$c ?v4 ?v2))) (= (fun_app$d (fun_app$a (comp$ (fun_app$i (comp$d ?v5) ?v0)) ?v1) ?v2) (fun_app$d (fun_app$l (comp$f (fun_app$a (comp$ ?v5) ?v3)) ?v4) ?v2)))) :named a101))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$) (?v2 A$) (?v3 A_bool_fun$) (?v4 A_a_fun$) (?v5 Bool_bool_fun$)) (=> (= (fun_app$f ?v0 (fun_app$g ?v1 ?v2)) (fun_app$g ?v3 (fun_app$j ?v4 ?v2))) (= (fun_app$g (fun_app$h (comp$c (fun_app$m (comp$g ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$i (comp$d (fun_app$h (comp$c ?v5) ?v3)) ?v4) ?v2)))) :named a102))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 A_bool_fun$) (?v2 A$) (?v3 A_a_fun$) (?v4 A_a_fun$) (?v5 A_bool_fun$)) (=> (= (fun_app$t ?v0 (fun_app$g ?v1 ?v2)) (fun_app$j ?v3 (fun_app$j ?v4 ?v2))) (= (fun_app$g (fun_app$h (comp$c (fun_app$o (comp$i ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$i (comp$d (fun_app$i (comp$d ?v5) ?v3)) ?v4) ?v2)))) :named a103))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 Bool_bool_fun$) (?v4 A_bool_fun$) (?v5 Bool_bool_fun$)) (=> (= (fun_app$g ?v0 (fun_app$j ?v1 ?v2)) (fun_app$f ?v3 (fun_app$g ?v4 ?v2))) (= (fun_app$g (fun_app$i (comp$d (fun_app$h (comp$c ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$h (comp$c (fun_app$m (comp$g ?v5) ?v3)) ?v4) ?v2)))) :named a104))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_bool_fun$) (?v4 A_a_fun$) (?v5 Bool_bool_fun$)) (=> (= (fun_app$g ?v0 (fun_app$j ?v1 ?v2)) (fun_app$g ?v3 (fun_app$j ?v4 ?v2))) (= (fun_app$g (fun_app$i (comp$d (fun_app$h (comp$c ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$i (comp$d (fun_app$h (comp$c ?v5) ?v3)) ?v4) ?v2)))) :named a105))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 Bool_a_fun$) (?v4 A_bool_fun$) (?v5 A_bool_fun$)) (=> (= (fun_app$j ?v0 (fun_app$j ?v1 ?v2)) (fun_app$t ?v3 (fun_app$g ?v4 ?v2))) (= (fun_app$g (fun_app$i (comp$d (fun_app$i (comp$d ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$h (comp$c (fun_app$o (comp$i ?v5) ?v3)) ?v4) ?v2)))) :named a106))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_a_fun$) (?v4 A_a_fun$) (?v5 A_bool_fun$)) (=> (= (fun_app$j ?v0 (fun_app$j ?v1 ?v2)) (fun_app$j ?v3 (fun_app$j ?v4 ?v2))) (= (fun_app$g (fun_app$i (comp$d (fun_app$i (comp$d ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$i (comp$d (fun_app$i (comp$d ?v5) ?v3)) ?v4) ?v2)))) :named a107))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_a_b_prod_fun$) (?v2 A$) (?v3 Bool_a_fun$) (?v4 A_bool_fun$) (?v5 A_bool_fun$)) (=> (= (fun_app$ ?v0 (fun_app$u ?v1 ?v2)) (fun_app$t ?v3 (fun_app$g ?v4 ?v2))) (= (fun_app$g (fun_app$r (comp$l (fun_app$a (comp$ ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$h (comp$c (fun_app$o (comp$i ?v5) ?v3)) ?v4) ?v2)))) :named a108))
(assert (! (forall ((?v0 A_b_prod_a_fun$) (?v1 A_a_b_prod_fun$) (?v2 A$) (?v3 A_a_fun$) (?v4 A_a_fun$) (?v5 A_bool_fun$)) (=> (= (fun_app$ ?v0 (fun_app$u ?v1 ?v2)) (fun_app$j ?v3 (fun_app$j ?v4 ?v2))) (= (fun_app$g (fun_app$r (comp$l (fun_app$a (comp$ ?v5) ?v0)) ?v1) ?v2) (fun_app$g (fun_app$i (comp$d (fun_app$i (comp$d ?v5) ?v3)) ?v4) ?v2)))) :named a109))
(assert (! (forall ((?v0 A_b_prod$)) (fun_app$g (fstsp$ ?v0) (fst$ ?v0))) :named a110))
(assert (! (forall ((?v0 A_b_prod$) (?v1 A$)) (=> (and (fun_app$g (fstsp$ ?v0) ?v1) (=> (= ?v1 (fst$ ?v0)) false)) false)) :named a111))
(assert (! (forall ((?v0 A_b_prod$) (?v1 A$)) (! (= (fun_app$g (fstsp$ ?v0) ?v1) (= ?v1 (fst$ ?v0))) :pattern ((fun_app$g (fstsp$ ?v0) ?v1)))) :named a112))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 Bool_bool_fun$) (?v4 A_bool_fun$) (?v5 A$)) (=> (= (fun_app$g ?v0 (fun_app$j ?v1 ?v2)) (fun_app$f ?v3 (fun_app$g ?v4 ?v5))) (= (fun_app$g (fun_app$i (comp$d ?v0) ?v1) ?v2) (fun_app$g (fun_app$h (comp$c ?v3) ?v4) ?v5)))) :named a113))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_bool_fun$) (?v4 A_a_fun$) (?v5 A$)) (=> (= (fun_app$g ?v0 (fun_app$j ?v1 ?v2)) (fun_app$g ?v3 (fun_app$j ?v4 ?v5))) (= (fun_app$g (fun_app$i (comp$d ?v0) ?v1) ?v2) (fun_app$g (fun_app$i (comp$d ?v3) ?v4) ?v5)))) :named a114))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$) (?v3 A_b_prod_a_fun$) (?v4 A_b_prod_a_b_prod_fun$) (?v5 A_b_prod$)) (=> (= (fun_app$j ?v0 (fun_app$ ?v1 ?v2)) (fun_app$ ?v3 (fun_app$c ?v4 ?v5))) (= (fun_app$ (fun_app$k (comp$e ?v0) ?v1) ?v2) (fun_app$ (fun_app$b (comp$a ?v3) ?v4) ?v5)))) :named a115))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$) (?v3 A_a_fun$) (?v4 A_b_prod_a_fun$) (?v5 A_b_prod$)) (=> (= (fun_app$j ?v0 (fun_app$ ?v1 ?v2)) (fun_app$j ?v3 (fun_app$ ?v4 ?v5))) (= (fun_app$ (fun_app$k (comp$e ?v0) ?v1) ?v2) (fun_app$ (fun_app$k (comp$e ?v3) ?v4) ?v5)))) :named a116))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$) (?v3 A_bool_fun$) (?v4 A_b_prod_a_fun$) (?v5 A_b_prod$)) (=> (= (fun_app$g ?v0 (fun_app$ ?v1 ?v2)) (fun_app$g ?v3 (fun_app$ ?v4 ?v5))) (= (fun_app$d (fun_app$a (comp$ ?v0) ?v1) ?v2) (fun_app$d (fun_app$a (comp$ ?v3) ?v4) ?v5)))) :named a117))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_prod_a_fun$) (?v2 A_b_prod$) (?v3 A_bool_fun$) (?v4 A_b_prod_a_fun$)) (=> (= (fun_app$g ?v0 (fun_app$ ?v1 ?v2)) (fun_app$g ?v3 (fun_app$ ?v4 ?v2))) (= (fun_app$d (fun_app$a (comp$ ?v0) ?v1) ?v2) (fun_app$d (fun_app$a (comp$ ?v3) ?v4) ?v2)))) :named a118))
(check-sat)
;(get-unsat-core)
