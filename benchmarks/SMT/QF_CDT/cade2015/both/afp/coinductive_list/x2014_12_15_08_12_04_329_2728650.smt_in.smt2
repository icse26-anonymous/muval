; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 241
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort Bool_set$ 0)
(declare-sort A_set_set$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_set_set_set$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_bool_fun_set$ 0)
(declare-sort A_set_bool_fun$ 0)
(declare-sort A_llist_a_set_fun$ 0)
(declare-sort A_set_set_set_set$ 0)
(declare-sort A_bool_fun_set_set$ 0)
(declare-sort A_set_bool_fun_set$ 0)
(declare-sort A_set_set_bool_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort A_set_set_a_set_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun$ 0)
(declare-sort A_set_a_set_bool_fun_fun$ 0)
(declare-sort A_llist_a_set_fun_a_set_fun$ 0)
(declare-sort A_llist_a_set_fun_a_llist_a_set_fun_fun$ 0)
(declare-sort A_llist_a_set_fun_set_a_llist_a_set_fun_fun$ 0)
(declare-sort A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$ 0)
(declare-sort A_llist_a_set_fun_a_llist_a_set_fun_fun_a_llist_a_set_fun_fun$ 0)
(declare-sort A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun_a_llist_a_set_fun_a_llist_a_set_fun_fun_a_llist_a_set_fun_fun_fun$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))))
(declare-fun f$ () A_llist_a_set_fun_a_llist_a_set_fun_fun$)
(declare-fun uu$ (A_llist$) A_llist_a_set_fun_a_set_fun$)
(declare-fun xs$ () A_llist$)
(declare-fun sup$ () A_set_set_a_set_fun$)
(declare-fun uua$ (A_bool_fun_set$) A_bool_fun_bool_fun$)
(declare-fun uub$ (A_set_set_set$) A_set_set_bool_fun$)
(declare-fun uuc$ (A_set_set$) A_set_bool_fun$)
(declare-fun uud$ (A_set$) A_bool_fun$)
(declare-fun fixp$ (A_llist_a_set_fun_set_a_llist_a_set_fun_fun$) A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun_a_llist_a_set_fun_a_llist_a_set_fun_fun_a_llist_a_set_fun_fun_fun$)
(declare-fun lset$ (A_llist$) A_set$)
(declare-fun sup$a (A_bool_fun_set_set$) A_bool_fun_set$)
(declare-fun sup$b (A_set_set_set_set$) A_set_set_set$)
(declare-fun sup$c (A_set_bool_fun_set$) A_set_bool_fun$)
(declare-fun sup$d (Bool_set$) Bool)
(declare-fun sup$e (A_set_set_set$) A_set_set$)
(declare-fun sup$f (A_bool_fun_set$) A_bool_fun$)
(declare-fun member$ (A_set_set$ A_set_set_set$) Bool)
(declare-fun fun_app$ (A_llist_a_set_fun_a_set_fun$ A_llist_a_set_fun$) A_set$)
(declare-fun fun_lub$ (A_set_set_a_set_fun$) A_llist_a_set_fun_set_a_llist_a_set_fun_fun$)
(declare-fun fun_ord$ (A_set_a_set_bool_fun_fun$) A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$)
(declare-fun less_eq$ () A_set_a_set_bool_fun_fun$)
(declare-fun member$a (A_set$) A_set_set_bool_fun$)
(declare-fun member$b (A_bool_fun$ A_bool_fun_set$) Bool)
(declare-fun member$c (A$) A_set_bool_fun$)
(declare-fun member$d (A_set_set_set$ A_set_set_set_set$) Bool)
(declare-fun member$e (A_bool_fun_set$ A_bool_fun_set_set$) Bool)
(declare-fun fun_app$a (A_llist_a_set_fun$ A_llist$) A_set$)
(declare-fun fun_app$b (A_llist_a_set_fun_a_llist_a_set_fun_fun$ A_llist_a_set_fun$) A_llist_a_set_fun$)
(declare-fun fun_app$c (A_set_set_bool_fun$ A_set_set$) Bool)
(declare-fun fun_app$d (A_set_bool_fun$ A_set$) Bool)
(declare-fun fun_app$e (A_bool_fun_bool_fun$ A_bool_fun$) Bool)
(declare-fun fun_app$f (A_bool_fun$ A$) Bool)
(declare-fun fun_app$g (A_set_a_set_bool_fun_fun$ A_set$) A_set_bool_fun$)
(declare-fun fun_app$h (A_llist_a_set_fun_a_llist_a_set_fun_fun_a_llist_a_set_fun_fun$ A_llist_a_set_fun_a_llist_a_set_fun_fun$) A_llist_a_set_fun$)
(declare-fun fun_app$i (A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun_a_llist_a_set_fun_a_llist_a_set_fun_fun_a_llist_a_set_fun_fun_fun$ A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$) A_llist_a_set_fun_a_llist_a_set_fun_fun_a_llist_a_set_fun_fun$)
(declare-fun fun_app$j (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$k (Bool_bool_bool_fun_fun$ Bool) Bool_bool_fun$)
(declare-fun fun_app$l (A_set_set_a_set_fun$ A_set_set$) A_set$)
(declare-fun less_eq$a (Bool Bool) Bool)
(declare-fun less_eq$b (A_bool_fun_set_set$ A_bool_fun_set_set$) Bool)
(declare-fun less_eq$c (A_bool_fun_set$ A_bool_fun_set$) Bool)
(declare-fun less_eq$d (A_set_set_set_set$ A_set_set_set_set$) Bool)
(declare-fun less_eq$e (A_set_set_set$ A_set_set_set$) Bool)
(declare-fun less_eq$f (A_set_bool_fun_set$ A_set_bool_fun_set$) Bool)
(declare-fun less_eq$g (A_set_bool_fun$ A_set_bool_fun$) Bool)
(declare-fun less_eq$h (Bool_set$ Bool_set$) Bool)
(declare-fun less_eq$i (A_set_set$) A_set_set_bool_fun$)
(declare-fun less_eq$j (A_bool_fun$ A_bool_fun$) Bool)
(declare-fun less_eq$k (A_bool_fun_bool_fun$ A_bool_fun_bool_fun$) Bool)
(declare-fun less_eq$l (A_set_set_bool_fun$ A_set_set_bool_fun$) Bool)
(declare-fun monotone$ (A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun$ A_llist_a_set_fun_a_set_fun$) Bool)
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_a_set_fun$)) (! (= (fun_app$ (uu$ ?v0) ?v1) (fun_app$a (fun_app$b f$ ?v1) ?v0)) :pattern ((fun_app$ (uu$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set$)) (! (= (fun_app$c (uub$ ?v0) ?v1) (member$ ?v1 ?v0)) :pattern ((fun_app$c (uub$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set$)) (! (= (fun_app$d (uuc$ ?v0) ?v1) (fun_app$c (member$a ?v1) ?v0)) :pattern ((fun_app$d (uuc$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 A_bool_fun_set$) (?v1 A_bool_fun$)) (! (= (fun_app$e (uua$ ?v0) ?v1) (member$b ?v1 ?v0)) :pattern ((fun_app$e (uua$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 A_set$) (?v1 A$)) (! (= (fun_app$f (uud$ ?v0) ?v1) (fun_app$d (member$c ?v1) ?v0)) :pattern ((fun_app$f (uud$ ?v0) ?v1)))) :named a4))
(assert (! (not (fun_app$d (fun_app$g less_eq$ (fun_app$a (fun_app$h (fun_app$i (fixp$ (fun_lub$ sup$)) (fun_ord$ less_eq$)) f$) xs$)) (lset$ xs$))) :named a5))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$) (?v1 Bool) (?v2 Bool)) (=> (and (forall ((?v3 Bool) (?v4 Bool)) (=> (less_eq$a ?v3 ?v4) (fun_app$j (fun_app$k ?v0 ?v3) ?v4))) (=> (fun_app$j (fun_app$k ?v0 ?v1) ?v2) (fun_app$j (fun_app$k ?v0 ?v2) ?v1))) (fun_app$j (fun_app$k ?v0 ?v2) ?v1))) :named a6))
(assert (! (forall ((?v0 A_llist$)) (monotone$ (fun_ord$ less_eq$) less_eq$ (uu$ ?v0))) :named a7))
(assert (! (forall ((?v0 A_bool_fun_set_set$) (?v1 A_bool_fun_set_set$)) (=> (less_eq$b ?v0 ?v1) (less_eq$c (sup$a ?v0) (sup$a ?v1)))) :named a8))
(assert (! (forall ((?v0 A_set_set_set_set$) (?v1 A_set_set_set_set$)) (=> (less_eq$d ?v0 ?v1) (less_eq$e (sup$b ?v0) (sup$b ?v1)))) :named a9))
(assert (! (forall ((?v0 A_set_bool_fun_set$) (?v1 A_set_bool_fun_set$)) (=> (less_eq$f ?v0 ?v1) (less_eq$g (sup$c ?v0) (sup$c ?v1)))) :named a10))
(assert (! (forall ((?v0 Bool_set$) (?v1 Bool_set$)) (=> (less_eq$h ?v0 ?v1) (less_eq$a (sup$d ?v0) (sup$d ?v1)))) :named a11))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set_set$)) (=> (less_eq$e ?v0 ?v1) (fun_app$c (less_eq$i (sup$e ?v0)) (sup$e ?v1)))) :named a12))
(assert (! (forall ((?v0 A_bool_fun_set$) (?v1 A_bool_fun_set$)) (=> (less_eq$c ?v0 ?v1) (less_eq$j (sup$f ?v0) (sup$f ?v1)))) :named a13))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set$)) (=> (fun_app$c (less_eq$i ?v0) ?v1) (fun_app$d (fun_app$g less_eq$ (fun_app$l sup$ ?v0)) (fun_app$l sup$ ?v1)))) :named a14))
(assert (! (forall ((?v0 A_set_set_set_set$) (?v1 A_set_set_bool_fun$)) (= (exists ((?v2 A_set_set$)) (and (member$ ?v2 (sup$b ?v0)) (fun_app$c ?v1 ?v2))) (exists ((?v2 A_set_set_set$)) (and (member$d ?v2 ?v0) (exists ((?v3 A_set_set$)) (and (member$ ?v3 ?v2) (fun_app$c ?v1 ?v3))))))) :named a15))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_bool_fun$)) (= (exists ((?v2 A_set$)) (and (fun_app$c (member$a ?v2) (sup$e ?v0)) (fun_app$d ?v1 ?v2))) (exists ((?v2 A_set_set$)) (and (member$ ?v2 ?v0) (exists ((?v3 A_set$)) (and (fun_app$c (member$a ?v3) ?v2) (fun_app$d ?v1 ?v3))))))) :named a16))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_bool_fun$)) (= (exists ((?v2 A$)) (and (fun_app$d (member$c ?v2) (fun_app$l sup$ ?v0)) (fun_app$f ?v1 ?v2))) (exists ((?v2 A_set$)) (and (fun_app$c (member$a ?v2) ?v0) (exists ((?v3 A$)) (and (fun_app$d (member$c ?v3) ?v2) (fun_app$f ?v1 ?v3))))))) :named a17))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set_set_set$)) (= (member$ ?v0 (sup$b ?v1)) (exists ((?v2 A_set_set_set$)) (and (member$d ?v2 ?v1) (member$ ?v0 ?v2))))) :named a18))
(assert (! (forall ((?v0 A_set$) (?v1 A_set_set_set$)) (= (fun_app$c (member$a ?v0) (sup$e ?v1)) (exists ((?v2 A_set_set$)) (and (member$ ?v2 ?v1) (fun_app$c (member$a ?v0) ?v2))))) :named a19))
(assert (! (forall ((?v0 A$) (?v1 A_set_set$)) (= (fun_app$d (member$c ?v0) (fun_app$l sup$ ?v1)) (exists ((?v2 A_set$)) (and (fun_app$c (member$a ?v2) ?v1) (fun_app$d (member$c ?v0) ?v2))))) :named a20))
(assert (! (forall ((?v0 A_set_set_set_set$) (?v1 A_set_set_bool_fun$)) (= (forall ((?v2 A_set_set$)) (=> (member$ ?v2 (sup$b ?v0)) (fun_app$c ?v1 ?v2))) (forall ((?v2 A_set_set_set$)) (=> (member$d ?v2 ?v0) (forall ((?v3 A_set_set$)) (=> (member$ ?v3 ?v2) (fun_app$c ?v1 ?v3))))))) :named a21))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_bool_fun$)) (= (forall ((?v2 A_set$)) (=> (fun_app$c (member$a ?v2) (sup$e ?v0)) (fun_app$d ?v1 ?v2))) (forall ((?v2 A_set_set$)) (=> (member$ ?v2 ?v0) (forall ((?v3 A_set$)) (=> (fun_app$c (member$a ?v3) ?v2) (fun_app$d ?v1 ?v3))))))) :named a22))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_bool_fun$)) (= (forall ((?v2 A$)) (=> (fun_app$d (member$c ?v2) (fun_app$l sup$ ?v0)) (fun_app$f ?v1 ?v2))) (forall ((?v2 A_set$)) (=> (fun_app$c (member$a ?v2) ?v0) (forall ((?v3 A$)) (=> (fun_app$d (member$c ?v3) ?v2) (fun_app$f ?v1 ?v3))))))) :named a23))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set_set_set$) (?v2 A_set_set$)) (=> (and (member$d ?v0 ?v1) (member$ ?v2 ?v0)) (member$ ?v2 (sup$b ?v1)))) :named a24))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set_set$) (?v2 A_set$)) (=> (and (member$ ?v0 ?v1) (fun_app$c (member$a ?v2) ?v0)) (fun_app$c (member$a ?v2) (sup$e ?v1)))) :named a25))
(assert (! (forall ((?v0 A_set$) (?v1 A_set_set$) (?v2 A$)) (=> (and (fun_app$c (member$a ?v0) ?v1) (fun_app$d (member$c ?v2) ?v0)) (fun_app$d (member$c ?v2) (fun_app$l sup$ ?v1)))) :named a26))
(assert (! (forall ((?v0 A_bool_fun_set$) (?v1 A_bool_fun_set$)) (=> (forall ((?v2 A_bool_fun$)) (=> (member$b ?v2 ?v0) (member$b ?v2 ?v1))) (less_eq$c ?v0 ?v1))) :named a27))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set_set$)) (=> (forall ((?v2 A_set_set$)) (=> (member$ ?v2 ?v0) (member$ ?v2 ?v1))) (less_eq$e ?v0 ?v1))) :named a28))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set$)) (=> (forall ((?v2 A_set$)) (=> (fun_app$c (member$a ?v2) ?v0) (fun_app$c (member$a ?v2) ?v1))) (fun_app$c (less_eq$i ?v0) ?v1))) :named a29))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$)) (=> (forall ((?v2 A$)) (=> (fun_app$d (member$c ?v2) ?v0) (fun_app$d (member$c ?v2) ?v1))) (fun_app$d (fun_app$g less_eq$ ?v0) ?v1))) :named a30))
(assert (! (forall ((?v0 A_bool_fun_set$) (?v1 A_bool_fun_set$)) (=> (and (less_eq$c ?v0 ?v1) (less_eq$c ?v1 ?v0)) (= ?v0 ?v1))) :named a31))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set_set$)) (=> (and (less_eq$e ?v0 ?v1) (less_eq$e ?v1 ?v0)) (= ?v0 ?v1))) :named a32))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set$)) (=> (and (fun_app$c (less_eq$i ?v0) ?v1) (fun_app$c (less_eq$i ?v1) ?v0)) (= ?v0 ?v1))) :named a33))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$)) (=> (and (fun_app$d (fun_app$g less_eq$ ?v0) ?v1) (fun_app$d (fun_app$g less_eq$ ?v1) ?v0)) (= ?v0 ?v1))) :named a34))
(assert (! (forall ((?v0 A_bool_fun_set$)) (less_eq$c ?v0 ?v0)) :named a35))
(assert (! (forall ((?v0 A_set_set_set$)) (less_eq$e ?v0 ?v0)) :named a36))
(assert (! (forall ((?v0 A_set_bool_fun$)) (less_eq$g ?v0 ?v0)) :named a37))
(assert (! (forall ((?v0 Bool)) (less_eq$a ?v0 ?v0)) :named a38))
(assert (! (forall ((?v0 A_set_set$)) (fun_app$c (less_eq$i ?v0) ?v0)) :named a39))
(assert (! (forall ((?v0 A_bool_fun$)) (less_eq$j ?v0 ?v0)) :named a40))
(assert (! (forall ((?v0 A_set$)) (fun_app$d (fun_app$g less_eq$ ?v0) ?v0)) :named a41))
(assert (! (forall ((?v0 A_bool_fun_set_set$) (?v1 A_bool_fun_set$)) (=> (forall ((?v2 A_bool_fun_set$)) (=> (member$e ?v2 ?v0) (less_eq$c ?v2 ?v1))) (less_eq$c (sup$a ?v0) ?v1))) :named a42))
(assert (! (forall ((?v0 A_set_set_set_set$) (?v1 A_set_set_set$)) (=> (forall ((?v2 A_set_set_set$)) (=> (member$d ?v2 ?v0) (less_eq$e ?v2 ?v1))) (less_eq$e (sup$b ?v0) ?v1))) :named a43))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set$)) (=> (forall ((?v2 A_set_set$)) (=> (member$ ?v2 ?v0) (fun_app$c (less_eq$i ?v2) ?v1))) (fun_app$c (less_eq$i (sup$e ?v0)) ?v1))) :named a44))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set$)) (=> (forall ((?v2 A_set$)) (=> (fun_app$c (member$a ?v2) ?v0) (fun_app$d (fun_app$g less_eq$ ?v2) ?v1))) (fun_app$d (fun_app$g less_eq$ (fun_app$l sup$ ?v0)) ?v1))) :named a45))
(assert (! (forall ((?v0 A_bool_fun_set$) (?v1 A_bool_fun_set_set$)) (=> (member$e ?v0 ?v1) (less_eq$c ?v0 (sup$a ?v1)))) :named a46))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set_set_set$)) (=> (member$d ?v0 ?v1) (less_eq$e ?v0 (sup$b ?v1)))) :named a47))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set_set$)) (=> (member$ ?v0 ?v1) (fun_app$c (less_eq$i ?v0) (sup$e ?v1)))) :named a48))
(assert (! (forall ((?v0 A_set$) (?v1 A_set_set$)) (=> (fun_app$c (member$a ?v0) ?v1) (fun_app$d (fun_app$g less_eq$ ?v0) (fun_app$l sup$ ?v1)))) :named a49))
(assert (! (forall ((?v0 A_bool_fun_set_set$) (?v1 A_bool_fun_set_set$)) (=> (less_eq$b ?v0 ?v1) (less_eq$c (sup$a ?v0) (sup$a ?v1)))) :named a50))
(assert (! (forall ((?v0 A_set_set_set_set$) (?v1 A_set_set_set_set$)) (=> (less_eq$d ?v0 ?v1) (less_eq$e (sup$b ?v0) (sup$b ?v1)))) :named a51))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set_set$)) (=> (less_eq$e ?v0 ?v1) (fun_app$c (less_eq$i (sup$e ?v0)) (sup$e ?v1)))) :named a52))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set$)) (=> (fun_app$c (less_eq$i ?v0) ?v1) (fun_app$d (fun_app$g less_eq$ (fun_app$l sup$ ?v0)) (fun_app$l sup$ ?v1)))) :named a53))
(assert (! (forall ((?v0 A_bool_fun_set$) (?v1 A_bool_fun_set$)) (= (less_eq$c ?v0 ?v1) (less_eq$k (uua$ ?v0) (uua$ ?v1)))) :named a54))
(assert (! (forall ((?v0 A_set_set_set$) (?v1 A_set_set_set$)) (= (less_eq$e ?v0 ?v1) (less_eq$l (uub$ ?v0) (uub$ ?v1)))) :named a55))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set$)) (= (fun_app$c (less_eq$i ?v0) ?v1) (less_eq$g (uuc$ ?v0) (uuc$ ?v1)))) :named a56))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$)) (= (fun_app$d (fun_app$g less_eq$ ?v0) ?v1) (less_eq$j (uud$ ?v0) (uud$ ?v1)))) :named a57))
(assert (! (forall ((?v0 A_bool_fun_set$)) (less_eq$c ?v0 ?v0)) :named a58))
(assert (! (forall ((?v0 A_set_set_set$)) (less_eq$e ?v0 ?v0)) :named a59))
(assert (! (forall ((?v0 A_set_bool_fun$)) (less_eq$g ?v0 ?v0)) :named a60))
(assert (! (forall ((?v0 Bool)) (less_eq$a ?v0 ?v0)) :named a61))
(assert (! (forall ((?v0 A_set_set$)) (fun_app$c (less_eq$i ?v0) ?v0)) :named a62))
(assert (! (forall ((?v0 A_bool_fun$)) (less_eq$j ?v0 ?v0)) :named a63))
(assert (! (forall ((?v0 A_set$)) (fun_app$d (fun_app$g less_eq$ ?v0) ?v0)) :named a64))
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (or (less_eq$a ?v0 ?v1) (less_eq$a ?v1 ?v0))) :named a65))
(assert (! (forall ((?v0 A_set_bool_fun$) (?v1 A_set_bool_fun$) (?v2 A_set$)) (=> (less_eq$g ?v0 ?v1) (less_eq$a (fun_app$d ?v0 ?v2) (fun_app$d ?v1 ?v2)))) :named a66))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$) (?v2 A$)) (=> (less_eq$j ?v0 ?v1) (less_eq$a (fun_app$f ?v0 ?v2) (fun_app$f ?v1 ?v2)))) :named a67))
(check-sat)
;(get-unsat-core)
