; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 558
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort B$ 0)
(declare-sort Nat$ 0)
(declare-sort Enat_set$ 0)
(declare-sort B_llist_set$ 0)
(declare-sort Enat_nat_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort Enat_bool_fun$ 0)
(declare-sort Enat_enat_fun$ 0)
(declare-sort Enat_list_set$ 0)
(declare-sort B_llist_nat_fun$ 0)
(declare-sort B_llist_bool_fun$ 0)
(declare-sort B_llist_enat_fun$ 0)
(declare-sort B_llist_list_set$ 0)
(declare-sort Enat_b_llist_fun$ 0)
(declare-sort Enat_list_nat_fun$ 0)
(declare-sort Enat_enat_list_fun$ 0)
(declare-sort Enat_enat_prod_set$ 0)
(declare-sort Enat_list_bool_fun$ 0)
(declare-sort Enat_list_enat_fun$ 0)
(declare-sort B_llist_b_llist_fun$ 0)
(declare-sort B_llist_list_nat_fun$ 0)
(declare-sort B_llist_enat_prod_set$ 0)
(declare-sort B_llist_list_bool_fun$ 0)
(declare-sort B_llist_list_enat_fun$ 0)
(declare-sort Enat_b_llist_prod_set$ 0)
(declare-sort Enat_list_b_llist_fun$ 0)
(declare-sort Enat_enat_bool_fun_fun$ 0)
(declare-sort Enat_enat_prod_nat_fun$ 0)
(declare-sort Enat_list_list_nat_fun$ 0)
(declare-sort Bool_enat_enat_prod_fun$ 0)
(declare-sort Enat_enat_enat_prod_fun$ 0)
(declare-sort Enat_enat_prod_bool_fun$ 0)
(declare-sort Enat_enat_prod_enat_fun$ 0)
(declare-sort B_llist_b_llist_prod_set$ 0)
(declare-sort B_llist_enat_prod_nat_fun$ 0)
(declare-sort B_llist_list_list_nat_fun$ 0)
(declare-sort Enat_b_llist_prod_nat_fun$ 0)
(declare-sort B_llist_enat_enat_prod_fun$ 0)
(declare-sort B_llist_enat_prod_bool_fun$ 0)
(declare-sort Enat_b_llist_prod_bool_fun$ 0)
(declare-sort Enat_enat_prod_list_nat_fun$ 0)
(declare-sort B_llist_b_llist_bool_fun_fun$ 0)
(declare-sort Enat_list_enat_list_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_bool_fun$ 0)
(declare-sort Bool_b_llist_b_llist_prod_fun$ 0)
(declare-sort Enat_b_llist_b_llist_prod_fun$ 0)
(declare-sort B_llist_b_llist_b_llist_prod_fun$ 0)
(declare-sort Enat_enat_enat_enat_prod_fun_fun$ 0)
(declare-sort Enat_list_enat_list_bool_fun_fun$ 0)
(declare-sort Enat_enat_prod_enat_enat_prod_fun$ 0)
(declare-sort Enat_list_enat_list_prod_bool_fun$ 0)
(declare-sort B_llist_list_b_llist_list_prod_set$ 0)
(declare-sort B_llist_b_llist_enat_enat_prod_fun_fun$ 0)
(declare-sort B_llist_list_b_llist_list_bool_fun_fun$ 0)
(declare-sort Enat_enat_b_llist_b_llist_prod_fun_fun$ 0)
(declare-sort Enat_enat_prod_enat_enat_prod_prod_set$ 0)
(declare-sort Enat_list_list_enat_list_list_prod_set$ 0)
(declare-sort B_llist_list_b_llist_list_prod_bool_fun$ 0)
(declare-sort Enat_enat_prod_enat_enat_prod_bool_fun_fun$ 0)
(declare-sort Enat_list_list_enat_list_list_bool_fun_fun$ 0)
(declare-sort Enat_enat_prod_enat_enat_prod_prod_bool_fun$ 0)
(declare-sort Enat_list_list_enat_list_list_prod_bool_fun$ 0)
(declare-sort B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ 0)
(declare-sort B_llist_enat_prod_b_llist_enat_prod_prod_set$ 0)
(declare-sort B_llist_list_list_b_llist_list_list_prod_set$ 0)
(declare-sort Enat_b_llist_prod_enat_b_llist_prod_prod_set$ 0)
(declare-sort B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$ 0)
(declare-sort B_llist_list_list_b_llist_list_list_bool_fun_fun$ 0)
(declare-sort Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$ 0)
(declare-sort Enat_enat_list_prod_enat_enat_list_prod_prod_set$ 0)
(declare-sort Enat_enat_prod_list_enat_enat_prod_list_prod_set$ 0)
(declare-sort Enat_list_enat_prod_enat_list_enat_prod_prod_set$ 0)
(declare-sort Enat_list_list_list_enat_list_list_list_prod_set$ 0)
(declare-sort B_llist_enat_prod_b_llist_enat_prod_prod_bool_fun$ 0)
(declare-sort B_llist_list_list_b_llist_list_list_prod_bool_fun$ 0)
(declare-sort Enat_b_llist_prod_enat_b_llist_prod_prod_bool_fun$ 0)
(declare-sort B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$ 0)
(declare-sort Enat_enat_prod_list_enat_enat_prod_list_bool_fun_fun$ 0)
(declare-sort Enat_enat_prod_list_enat_enat_prod_list_prod_bool_fun$ 0)
(declare-sort B_llist_enat_list_prod_b_llist_enat_list_prod_prod_set$ 0)
(declare-sort B_llist_enat_prod_list_b_llist_enat_prod_list_prod_set$ 0)
(declare-sort B_llist_list_list_list_b_llist_list_list_list_prod_set$ 0)
(declare-sort Enat_b_llist_list_prod_enat_b_llist_list_prod_prod_set$ 0)
(declare-sort Enat_b_llist_prod_list_enat_b_llist_prod_list_prod_set$ 0)
(declare-sort Enat_enat_enat_prod_prod_enat_enat_enat_prod_prod_prod_set$ 0)
(declare-sort Enat_enat_prod_enat_prod_enat_enat_prod_enat_prod_prod_set$ 0)
(declare-sort Enat_enat_prod_list_list_enat_enat_prod_list_list_prod_set$ 0)
(declare-sort Enat_enat_bool_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$ 0)
(declare-sort Enat_enat_enat_enat_prod_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$ 0)
(declare-sort Enat_enat_b_llist_b_llist_prod_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$ 0)
(declare-sort Enat_enat_prod_enat_enat_prod_bool_fun_fun_enat_enat_prod_enat_enat_prod_bool_fun_fun_fun$ 0)
(declare-codatatypes () ((B_llist$ (lNil$) (lCons$ (lhd$ B$) (ltl$ B_llist$)))))
(declare-datatypes () ((B_llist_b_llist_prod$ (pair$ (fst$ B_llist$) (snd$ B_llist$)))
  (Nat_option$ (none$) (some$ (the$ Nat$)))
  (Enat$ (abs_enat$ (rep_enat$ Nat_option$)))
  (Enat_enat_prod$ (pair$a (fst$a Enat$) (snd$a Enat$)))
  (Enat_list$ (nil$) (cons$ (hd$ Enat$) (tl$ Enat_list$)))
  (Enat_list_enat_list_prod$ (pair$b (fst$b Enat_list$) (snd$b Enat_list$)))
  (B_llist_list$ (nil$a) (cons$a (hd$a B_llist$) (tl$a B_llist_list$)))
  (B_llist_list_b_llist_list_prod$ (pair$c (fst$c B_llist_list$) (snd$c B_llist_list$)))
  (Enat_enat_prod_enat_enat_prod_prod$ (pair$d (fst$d Enat_enat_prod$) (snd$d Enat_enat_prod$)))
  (Enat_b_llist_prod$ (pair$e (fst$e Enat$) (snd$e B_llist$)))
  (Enat_b_llist_prod_enat_b_llist_prod_prod$ (pair$f (fst$f Enat_b_llist_prod$) (snd$f Enat_b_llist_prod$)))
  (B_llist_enat_prod$ (pair$g (fst$g B_llist$) (snd$g Enat$)))
  (B_llist_enat_prod_b_llist_enat_prod_prod$ (pair$h (fst$h B_llist_enat_prod$) (snd$h B_llist_enat_prod$)))
  (Enat_list_list$ (nil$b) (cons$b (hd$b Enat_list$) (tl$b Enat_list_list$)))
  (Enat_list_list_enat_list_list_prod$ (pair$i (fst$i Enat_list_list$) (snd$i Enat_list_list$)))
  (Enat_enat_prod_list$ (nil$c) (cons$c (hd$c Enat_enat_prod$) (tl$c Enat_enat_prod_list$)))
  (Enat_enat_prod_list_enat_enat_prod_list_prod$ (pair$j (fst$j Enat_enat_prod_list$) (snd$j Enat_enat_prod_list$)))
  (B_llist_list_list$ (nil$d) (cons$d (hd$d B_llist_list$) (tl$d B_llist_list_list$)))
  (B_llist_list_list_b_llist_list_list_prod$ (pair$k (fst$k B_llist_list_list$) (snd$k B_llist_list_list$)))))
(declare-fun uu$ (Bool Enat_list_enat_list_bool_fun_fun$) Enat_list_enat_list_bool_fun_fun$)
(declare-fun wf$ (B_llist_b_llist_prod_set$) Bool)
(declare-fun uua$ (Bool B_llist_list_b_llist_list_bool_fun_fun$) B_llist_list_b_llist_list_bool_fun_fun$)
(declare-fun uub$ (Bool) Enat_enat_prod_enat_enat_prod_bool_fun_fun_enat_enat_prod_enat_enat_prod_bool_fun_fun_fun$)
(declare-fun uuc$ (Bool Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$) Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$)
(declare-fun uud$ (Bool B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$) B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$)
(declare-fun uue$ (Bool B_llist_b_llist_bool_fun_fun$) B_llist_b_llist_bool_fun_fun$)
(declare-fun uuf$ (Bool Enat_enat_bool_fun_fun$) Enat_enat_bool_fun_fun$)
(declare-fun uug$ (Enat_enat_bool_fun_fun$ Enat_enat_enat_enat_prod_fun_fun$) Enat_enat_bool_fun_fun$)
(declare-fun uuh$ (B_llist_b_llist_bool_fun_fun$ Enat_enat_b_llist_b_llist_prod_fun_fun$) Enat_enat_bool_fun_fun$)
(declare-fun uui$ (Enat_enat_bool_fun_fun$ B_llist_b_llist_enat_enat_prod_fun_fun$) B_llist_b_llist_bool_fun_fun$)
(declare-fun uuj$ (B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_b_llist_b_llist_prod_fun_fun$) B_llist_b_llist_bool_fun_fun$)
(declare-fun uuk$ (Enat_enat_enat_enat_prod_fun_fun$) Enat_enat_enat_enat_prod_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$)
(declare-fun uul$ (Enat_enat_enat_enat_prod_fun_fun$ B_llist_b_llist_enat_enat_prod_fun_fun$) B_llist_b_llist_enat_enat_prod_fun_fun$)
(declare-fun uum$ (B_llist_b_llist_enat_enat_prod_fun_fun$) Enat_enat_b_llist_b_llist_prod_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$)
(declare-fun uun$ (Enat_enat_b_llist_b_llist_prod_fun_fun$ Enat_enat_enat_enat_prod_fun_fun$) Enat_enat_b_llist_b_llist_prod_fun_fun$)
(declare-fun uuo$ (B_llist_b_llist_enat_enat_prod_fun_fun$ B_llist_b_llist_b_llist_b_llist_prod_fun_fun$) B_llist_b_llist_enat_enat_prod_fun_fun$)
(declare-fun uup$ (Enat_enat_b_llist_b_llist_prod_fun_fun$ B_llist_b_llist_enat_enat_prod_fun_fun$) B_llist_b_llist_b_llist_b_llist_prod_fun_fun$)
(declare-fun uuq$ (Bool_bool_fun$ Enat_enat_bool_fun_fun$) Enat_enat_bool_fun_fun$)
(declare-fun uur$ (Bool_bool_fun$ B_llist_b_llist_bool_fun_fun$) B_llist_b_llist_bool_fun_fun$)
(declare-fun uus$ (Bool_enat_enat_prod_fun$) Enat_enat_bool_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$)
(declare-fun uut$ (Enat_enat_prod_bool_fun$ Enat_enat_enat_enat_prod_fun_fun$) Enat_enat_bool_fun_fun$)
(declare-fun uuu$ (Bool_enat_enat_prod_fun$ B_llist_b_llist_bool_fun_fun$) B_llist_b_llist_enat_enat_prod_fun_fun$)
(declare-fun uuv$ (Bool_b_llist_b_llist_prod_fun$ Enat_enat_bool_fun_fun$) Enat_enat_b_llist_b_llist_prod_fun_fun$)
(declare-fun uuw$ (Enat_enat_prod_enat_enat_prod_fun$) Enat_enat_enat_enat_prod_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$)
(declare-fun uux$ (Enat_enat_prod_bool_fun$ B_llist_b_llist_enat_enat_prod_fun_fun$) B_llist_b_llist_bool_fun_fun$)
(declare-fun uuy$ (B_llist_b_llist_prod_bool_fun$ Enat_enat_b_llist_b_llist_prod_fun_fun$) Enat_enat_bool_fun_fun$)
(declare-fun uuz$ (Bool_b_llist_b_llist_prod_fun$ B_llist_b_llist_bool_fun_fun$) B_llist_b_llist_b_llist_b_llist_prod_fun_fun$)
(declare-fun uva$ () Enat_list_enat_list_bool_fun_fun$)
(declare-fun uvb$ () B_llist_list_b_llist_list_bool_fun_fun$)
(declare-fun uvc$ () Enat_enat_prod_enat_enat_prod_bool_fun_fun$)
(declare-fun uvd$ () Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$)
(declare-fun uve$ () B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$)
(declare-fun uvf$ () Enat_enat_bool_fun_fun$)
(declare-fun uvg$ () B_llist_b_llist_bool_fun_fun$)
(declare-fun wf$a (Enat_enat_prod_set$) Bool)
(declare-fun wf$b (Enat_list_enat_list_prod_set$) Bool)
(declare-fun wf$c (Enat_enat_prod_enat_enat_prod_prod_set$) Bool)
(declare-fun wf$d (B_llist_list_b_llist_list_prod_set$) Bool)
(declare-fun wf$e (B_llist_enat_prod_b_llist_enat_prod_prod_set$) Bool)
(declare-fun wf$f (Enat_b_llist_prod_enat_b_llist_prod_prod_set$) Bool)
(declare-fun wf$g (Enat_list_list_enat_list_list_prod_set$) Bool)
(declare-fun wf$h (Enat_enat_prod_list_enat_enat_prod_list_prod_set$) Bool)
(declare-fun wf$i (B_llist_list_list_b_llist_list_list_prod_set$) Bool)
(declare-fun wf$j (B_llist_enat_prod_list_b_llist_enat_prod_list_prod_set$) Bool)
(declare-fun wf$k (Enat_b_llist_prod_list_enat_b_llist_prod_list_prod_set$) Bool)
(declare-fun wf$l (Enat_list_list_list_enat_list_list_list_prod_set$) Bool)
(declare-fun wf$m (Enat_enat_prod_list_list_enat_enat_prod_list_list_prod_set$) Bool)
(declare-fun wf$n (B_llist_list_list_list_b_llist_list_list_list_prod_set$) Bool)
(declare-fun wf$o (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) Bool)
(declare-fun wf$p (Enat_enat_list_prod_enat_enat_list_prod_prod_set$) Bool)
(declare-fun wf$q (Enat_list_enat_prod_enat_list_enat_prod_prod_set$) Bool)
(declare-fun wf$r (B_llist_enat_list_prod_b_llist_enat_list_prod_prod_set$) Bool)
(declare-fun wf$s (Enat_enat_enat_prod_prod_enat_enat_enat_prod_prod_prod_set$) Bool)
(declare-fun wf$t (Enat_b_llist_list_prod_enat_b_llist_list_prod_prod_set$) Bool)
(declare-fun wf$u (Enat_enat_prod_enat_prod_enat_enat_prod_enat_prod_prod_set$) Bool)
(declare-fun wfP$ (Enat_enat_bool_fun_fun$) Bool)
(declare-fun less$ () Enat_enat_bool_fun_fun$)
(declare-fun wfP$a (B_llist_b_llist_bool_fun_fun$) Bool)
(declare-fun wfP$b (Enat_list_enat_list_bool_fun_fun$) Bool)
(declare-fun wfP$c (Enat_enat_prod_enat_enat_prod_bool_fun_fun$) Bool)
(declare-fun wfP$d (B_llist_list_b_llist_list_bool_fun_fun$) Bool)
(declare-fun wfP$e (B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$) Bool)
(declare-fun wfP$f (Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$) Bool)
(declare-fun wfP$g (Enat_list_list_enat_list_list_bool_fun_fun$) Bool)
(declare-fun wfP$h (Enat_enat_prod_list_enat_enat_prod_list_bool_fun_fun$) Bool)
(declare-fun wfP$i (B_llist_list_list_b_llist_list_list_bool_fun_fun$) Bool)
(declare-fun lenlex$ (Enat_enat_prod_set$) Enat_list_enat_list_prod_set$)
(declare-fun member$ (Enat_list$ Enat_list_set$) Bool)
(declare-fun collect$ (B_llist_b_llist_prod_bool_fun$) B_llist_b_llist_prod_set$)
(declare-fun fun_app$ (B_llist_enat_enat_prod_fun$ B_llist$) Enat_enat_prod$)
(declare-fun lenlex$a (B_llist_b_llist_prod_set$) B_llist_list_b_llist_list_prod_set$)
(declare-fun lenlex$b (Enat_list_enat_list_prod_set$) Enat_list_list_enat_list_list_prod_set$)
(declare-fun lenlex$c (Enat_enat_prod_enat_enat_prod_prod_set$) Enat_enat_prod_list_enat_enat_prod_list_prod_set$)
(declare-fun lenlex$d (B_llist_list_b_llist_list_prod_set$) B_llist_list_list_b_llist_list_list_prod_set$)
(declare-fun lenlex$e (B_llist_enat_prod_b_llist_enat_prod_prod_set$) B_llist_enat_prod_list_b_llist_enat_prod_list_prod_set$)
(declare-fun lenlex$f (Enat_b_llist_prod_enat_b_llist_prod_prod_set$) Enat_b_llist_prod_list_enat_b_llist_prod_list_prod_set$)
(declare-fun lenlex$g (Enat_list_list_enat_list_list_prod_set$) Enat_list_list_list_enat_list_list_list_prod_set$)
(declare-fun lenlex$h (Enat_enat_prod_list_enat_enat_prod_list_prod_set$) Enat_enat_prod_list_list_enat_enat_prod_list_list_prod_set$)
(declare-fun lenlex$i (B_llist_list_list_b_llist_list_list_prod_set$) B_llist_list_list_list_b_llist_list_list_list_prod_set$)
(declare-fun less_eq$ (B_llist_b_llist_prod_set$ B_llist_b_llist_prod_set$) Bool)
(declare-fun llength$ () B_llist_enat_fun$)
(declare-fun measure$ (Enat_nat_fun$) Enat_enat_prod_set$)
(declare-fun member$a (B_llist_list$ B_llist_list_set$) Bool)
(declare-fun member$b (Enat_enat_prod$ Enat_enat_prod_set$) Bool)
(declare-fun member$c (Enat_b_llist_prod$ Enat_b_llist_prod_set$) Bool)
(declare-fun member$d (B_llist_enat_prod$ B_llist_enat_prod_set$) Bool)
(declare-fun member$e (Enat$ Enat_set$) Bool)
(declare-fun member$f (B_llist$ B_llist_set$) Bool)
(declare-fun collect$a (Enat_enat_prod_bool_fun$) Enat_enat_prod_set$)
(declare-fun collect$b (Enat_list_enat_list_prod_bool_fun$) Enat_list_enat_list_prod_set$)
(declare-fun collect$c (Enat_enat_prod_enat_enat_prod_prod_bool_fun$) Enat_enat_prod_enat_enat_prod_prod_set$)
(declare-fun collect$d (B_llist_list_b_llist_list_prod_bool_fun$) B_llist_list_b_llist_list_prod_set$)
(declare-fun collect$e (B_llist_enat_prod_b_llist_enat_prod_prod_bool_fun$) B_llist_enat_prod_b_llist_enat_prod_prod_set$)
(declare-fun collect$f (Enat_b_llist_prod_enat_b_llist_prod_prod_bool_fun$) Enat_b_llist_prod_enat_b_llist_prod_prod_set$)
(declare-fun collect$g (Enat_list_list_enat_list_list_prod_bool_fun$) Enat_list_list_enat_list_list_prod_set$)
(declare-fun collect$h (Enat_enat_prod_list_enat_enat_prod_list_prod_bool_fun$) Enat_enat_prod_list_enat_enat_prod_list_prod_set$)
(declare-fun collect$i (B_llist_list_list_b_llist_list_list_prod_bool_fun$) B_llist_list_list_b_llist_list_list_prod_set$)
(declare-fun fun_app$a (B_llist_b_llist_enat_enat_prod_fun_fun$ B_llist$) B_llist_enat_enat_prod_fun$)
(declare-fun fun_app$b (B_llist_b_llist_b_llist_prod_fun$ B_llist$) B_llist_b_llist_prod$)
(declare-fun fun_app$c (B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ B_llist$) B_llist_b_llist_b_llist_prod_fun$)
(declare-fun fun_app$d (Enat_enat_enat_prod_fun$ Enat$) Enat_enat_prod$)
(declare-fun fun_app$e (Enat_enat_enat_enat_prod_fun_fun$ Enat$) Enat_enat_enat_prod_fun$)
(declare-fun fun_app$f (Enat_enat_b_llist_b_llist_prod_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$ Enat_enat_b_llist_b_llist_prod_fun_fun$) Enat_enat_enat_enat_prod_fun_fun$)
(declare-fun fun_app$g (Enat_b_llist_b_llist_prod_fun$ Enat$) B_llist_b_llist_prod$)
(declare-fun fun_app$h (Enat_enat_b_llist_b_llist_prod_fun_fun$ Enat$) Enat_b_llist_b_llist_prod_fun$)
(declare-fun fun_app$i (B_llist_bool_fun$ B_llist$) Bool)
(declare-fun fun_app$j (B_llist_b_llist_bool_fun_fun$ B_llist$) B_llist_bool_fun$)
(declare-fun fun_app$k (B_llist_b_llist_prod_bool_fun$ B_llist_b_llist_prod$) Bool)
(declare-fun fun_app$l (Enat_bool_fun$ Enat$) Bool)
(declare-fun fun_app$m (Enat_enat_bool_fun_fun$ Enat$) Enat_bool_fun$)
(declare-fun fun_app$n (Enat_enat_prod_enat_enat_prod_fun$ Enat_enat_prod$) Enat_enat_prod$)
(declare-fun fun_app$o (Enat_enat_enat_enat_prod_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$ Enat_enat_enat_enat_prod_fun_fun$) Enat_enat_enat_enat_prod_fun_fun$)
(declare-fun fun_app$p (Enat_enat_prod_bool_fun$ Enat_enat_prod$) Bool)
(declare-fun fun_app$q (B_llist_enat_prod_bool_fun$ B_llist_enat_prod$) Bool)
(declare-fun fun_app$r (B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$ B_llist_enat_prod$) B_llist_enat_prod_bool_fun$)
(declare-fun fun_app$s (Enat_b_llist_prod_bool_fun$ Enat_b_llist_prod$) Bool)
(declare-fun fun_app$t (Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$ Enat_b_llist_prod$) Enat_b_llist_prod_bool_fun$)
(declare-fun fun_app$u (Enat_enat_prod_enat_enat_prod_bool_fun_fun$ Enat_enat_prod$) Enat_enat_prod_bool_fun$)
(declare-fun fun_app$v (Enat_enat_prod_enat_enat_prod_bool_fun_fun_enat_enat_prod_enat_enat_prod_bool_fun_fun_fun$ Enat_enat_prod_enat_enat_prod_bool_fun_fun$) Enat_enat_prod_enat_enat_prod_bool_fun_fun$)
(declare-fun fun_app$w (B_llist_list_bool_fun$ B_llist_list$) Bool)
(declare-fun fun_app$x (B_llist_list_b_llist_list_bool_fun_fun$ B_llist_list$) B_llist_list_bool_fun$)
(declare-fun fun_app$y (Enat_list_bool_fun$ Enat_list$) Bool)
(declare-fun fun_app$z (Enat_list_enat_list_bool_fun_fun$ Enat_list$) Enat_list_bool_fun$)
(declare-fun lex_prod$ (Enat_enat_prod_set$ Enat_enat_prod_set$) Enat_enat_prod_enat_enat_prod_prod_set$)
(declare-fun measure$a (B_llist_nat_fun$) B_llist_b_llist_prod_set$)
(declare-fun measure$b (Enat_list_nat_fun$) Enat_list_enat_list_prod_set$)
(declare-fun measure$c (Enat_enat_prod_nat_fun$) Enat_enat_prod_enat_enat_prod_prod_set$)
(declare-fun measure$d (B_llist_list_nat_fun$) B_llist_list_b_llist_list_prod_set$)
(declare-fun measure$e (B_llist_enat_prod_nat_fun$) B_llist_enat_prod_b_llist_enat_prod_prod_set$)
(declare-fun measure$f (Enat_b_llist_prod_nat_fun$) Enat_b_llist_prod_enat_b_llist_prod_prod_set$)
(declare-fun measure$g (Enat_list_list_nat_fun$) Enat_list_list_enat_list_list_prod_set$)
(declare-fun measure$h (Enat_enat_prod_list_nat_fun$) Enat_enat_prod_list_enat_enat_prod_list_prod_set$)
(declare-fun measure$i (B_llist_list_list_nat_fun$) B_llist_list_list_b_llist_list_list_prod_set$)
(declare-fun case_prod$ (B_llist_b_llist_enat_enat_prod_fun_fun$ B_llist_b_llist_prod$) Enat_enat_prod$)
(declare-fun fun_app$aa (Bool_b_llist_b_llist_prod_fun$ Bool) B_llist_b_llist_prod$)
(declare-fun fun_app$ab (Bool_enat_enat_prod_fun$ Bool) Enat_enat_prod$)
(declare-fun fun_app$ac (Enat_enat_bool_fun_fun_enat_enat_enat_enat_prod_fun_fun_fun$ Enat_enat_bool_fun_fun$) Enat_enat_enat_enat_prod_fun_fun$)
(declare-fun fun_app$ad (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$ae (Enat_list_enat_list_prod_bool_fun$ Enat_list_enat_list_prod$) Bool)
(declare-fun fun_app$af (B_llist_list_b_llist_list_prod_bool_fun$ B_llist_list_b_llist_list_prod$) Bool)
(declare-fun fun_app$ag (Enat_enat_prod_enat_enat_prod_prod_bool_fun$ Enat_enat_prod_enat_enat_prod_prod$) Bool)
(declare-fun fun_app$ah (Enat_b_llist_prod_enat_b_llist_prod_prod_bool_fun$ Enat_b_llist_prod_enat_b_llist_prod_prod$) Bool)
(declare-fun fun_app$ai (B_llist_enat_prod_b_llist_enat_prod_prod_bool_fun$ B_llist_enat_prod_b_llist_enat_prod_prod$) Bool)
(declare-fun fun_app$aj (B_llist_enat_fun$ B_llist$) Enat$)
(declare-fun inv_image$ (Enat_enat_prod_set$ B_llist_enat_fun$) B_llist_b_llist_prod_set$)
(declare-fun lex_prod$a (B_llist_b_llist_prod_set$ Enat_enat_prod_set$) B_llist_enat_prod_b_llist_enat_prod_prod_set$)
(declare-fun lex_prod$b (Enat_enat_prod_set$ B_llist_b_llist_prod_set$) Enat_b_llist_prod_enat_b_llist_prod_prod_set$)
(declare-fun lex_prod$c (B_llist_b_llist_prod_set$ B_llist_b_llist_prod_set$) B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)
(declare-fun lex_prod$d (Enat_enat_prod_set$ Enat_list_enat_list_prod_set$) Enat_enat_list_prod_enat_enat_list_prod_prod_set$)
(declare-fun lex_prod$e (Enat_list_enat_list_prod_set$ Enat_enat_prod_set$) Enat_list_enat_prod_enat_list_enat_prod_prod_set$)
(declare-fun lex_prod$f (B_llist_b_llist_prod_set$ Enat_list_enat_list_prod_set$) B_llist_enat_list_prod_b_llist_enat_list_prod_prod_set$)
(declare-fun lex_prod$g (Enat_enat_prod_set$ Enat_enat_prod_enat_enat_prod_prod_set$) Enat_enat_enat_prod_prod_enat_enat_enat_prod_prod_prod_set$)
(declare-fun lex_prod$h (Enat_enat_prod_set$ B_llist_list_b_llist_list_prod_set$) Enat_b_llist_list_prod_enat_b_llist_list_prod_prod_set$)
(declare-fun lex_prod$i (Enat_enat_prod_enat_enat_prod_prod_set$ Enat_enat_prod_set$) Enat_enat_prod_enat_prod_enat_enat_prod_enat_prod_prod_set$)
(declare-fun case_prod$a (B_llist_b_llist_bool_fun_fun$) B_llist_b_llist_prod_bool_fun$)
(declare-fun case_prod$b (Enat_enat_b_llist_b_llist_prod_fun_fun$ Enat_enat_prod$) B_llist_b_llist_prod$)
(declare-fun case_prod$c (Enat_enat_enat_enat_prod_fun_fun$) Enat_enat_prod_enat_enat_prod_fun$)
(declare-fun case_prod$d (Enat_enat_bool_fun_fun$) Enat_enat_prod_bool_fun$)
(declare-fun case_prod$e (Enat_list_enat_list_bool_fun_fun$) Enat_list_enat_list_prod_bool_fun$)
(declare-fun case_prod$f (B_llist_list_b_llist_list_bool_fun_fun$) B_llist_list_b_llist_list_prod_bool_fun$)
(declare-fun case_prod$g (Enat_enat_prod_enat_enat_prod_bool_fun_fun$) Enat_enat_prod_enat_enat_prod_prod_bool_fun$)
(declare-fun case_prod$h (Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$) Enat_b_llist_prod_enat_b_llist_prod_prod_bool_fun$)
(declare-fun case_prod$i (B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$) B_llist_enat_prod_b_llist_enat_prod_prod_bool_fun$)
(declare-fun case_prod$j (B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ B_llist_b_llist_prod$) B_llist_b_llist_prod$)
(declare-fun case_prod$k (Enat_list_list_enat_list_list_bool_fun_fun$) Enat_list_list_enat_list_list_prod_bool_fun$)
(declare-fun case_prod$l (Enat_enat_prod_list_enat_enat_prod_list_bool_fun_fun$) Enat_enat_prod_list_enat_enat_prod_list_prod_bool_fun$)
(declare-fun case_prod$m (B_llist_list_list_b_llist_list_list_bool_fun_fun$) B_llist_list_list_b_llist_list_list_prod_bool_fun$)
(declare-fun inv_image$a (Enat_enat_prod_set$ Enat_enat_fun$) Enat_enat_prod_set$)
(declare-fun inv_image$b (B_llist_b_llist_prod_set$ Enat_b_llist_fun$) Enat_enat_prod_set$)
(declare-fun inv_image$c (B_llist_b_llist_prod_set$ B_llist_b_llist_fun$) B_llist_b_llist_prod_set$)
(declare-fun inv_image$d (Enat_enat_prod_set$ Enat_list_enat_fun$) Enat_list_enat_list_prod_set$)
(declare-fun inv_image$e (Enat_list_enat_list_prod_set$ Enat_enat_list_fun$) Enat_enat_prod_set$)
(declare-fun inv_image$f (B_llist_b_llist_prod_set$ Enat_list_b_llist_fun$) Enat_list_enat_list_prod_set$)
(declare-fun inv_image$g (Enat_enat_prod_set$ Enat_enat_prod_enat_fun$) Enat_enat_prod_enat_enat_prod_prod_set$)
(declare-fun inv_image$h (Enat_enat_prod_set$ B_llist_list_enat_fun$) B_llist_list_b_llist_list_prod_set$)
(declare-fun inv_image$i (Enat_enat_prod_enat_enat_prod_prod_set$ Enat_enat_enat_prod_fun$) Enat_enat_prod_set$)
(declare-fun lstrict_prefix$ () B_llist_b_llist_bool_fun_fun$)
(assert (! (forall ((?v0 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v1 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$ (fun_app$a (uuo$ ?v0 ?v1) ?v2) ?v3) (case_prod$ ?v0 (fun_app$b (fun_app$c ?v1 ?v2) ?v3))) :pattern ((fun_app$ (fun_app$a (uuo$ ?v0 ?v1) ?v2) ?v3)))) :named a0))
(assert (! (forall ((?v0 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$d (fun_app$e (fun_app$f (uum$ ?v0) ?v1) ?v2) ?v3) (case_prod$ ?v0 (fun_app$g (fun_app$h ?v1 ?v2) ?v3))) :pattern ((fun_app$d (fun_app$e (fun_app$f (uum$ ?v0) ?v1) ?v2) ?v3)))) :named a1))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$) (?v1 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$i (fun_app$j (uuj$ ?v0 ?v1) ?v2) ?v3) (fun_app$k (case_prod$a ?v0) (fun_app$b (fun_app$c ?v1 ?v2) ?v3))) :pattern ((fun_app$i (fun_app$j (uuj$ ?v0 ?v1) ?v2) ?v3)))) :named a2))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$) (?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$l (fun_app$m (uuh$ ?v0 ?v1) ?v2) ?v3) (fun_app$k (case_prod$a ?v0) (fun_app$g (fun_app$h ?v1 ?v2) ?v3))) :pattern ((fun_app$l (fun_app$m (uuh$ ?v0 ?v1) ?v2) ?v3)))) :named a3))
(assert (! (forall ((?v0 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$b (fun_app$c (uup$ ?v0 ?v1) ?v2) ?v3) (case_prod$b ?v0 (fun_app$ (fun_app$a ?v1 ?v2) ?v3))) :pattern ((fun_app$b (fun_app$c (uup$ ?v0 ?v1) ?v2) ?v3)))) :named a4))
(assert (! (forall ((?v0 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$g (fun_app$h (uun$ ?v0 ?v1) ?v2) ?v3) (case_prod$b ?v0 (fun_app$d (fun_app$e ?v1 ?v2) ?v3))) :pattern ((fun_app$g (fun_app$h (uun$ ?v0 ?v1) ?v2) ?v3)))) :named a5))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_fun_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$ (fun_app$a (uul$ ?v0 ?v1) ?v2) ?v3) (fun_app$n (case_prod$c ?v0) (fun_app$ (fun_app$a ?v1 ?v2) ?v3))) :pattern ((fun_app$ (fun_app$a (uul$ ?v0 ?v1) ?v2) ?v3)))) :named a6))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_fun_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$d (fun_app$e (fun_app$o (uuk$ ?v0) ?v1) ?v2) ?v3) (fun_app$n (case_prod$c ?v0) (fun_app$d (fun_app$e ?v1 ?v2) ?v3))) :pattern ((fun_app$d (fun_app$e (fun_app$o (uuk$ ?v0) ?v1) ?v2) ?v3)))) :named a7))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$i (fun_app$j (uui$ ?v0 ?v1) ?v2) ?v3) (fun_app$p (case_prod$d ?v0) (fun_app$ (fun_app$a ?v1 ?v2) ?v3))) :pattern ((fun_app$i (fun_app$j (uui$ ?v0 ?v1) ?v2) ?v3)))) :named a8))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$l (fun_app$m (uug$ ?v0 ?v1) ?v2) ?v3) (fun_app$p (case_prod$d ?v0) (fun_app$d (fun_app$e ?v1 ?v2) ?v3))) :pattern ((fun_app$l (fun_app$m (uug$ ?v0 ?v1) ?v2) ?v3)))) :named a9))
(assert (! (forall ((?v0 Bool) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$i (fun_app$j (uue$ ?v0 ?v1) ?v2) ?v3) (and ?v0 (fun_app$i (fun_app$j ?v1 ?v2) ?v3))) :pattern ((fun_app$i (fun_app$j (uue$ ?v0 ?v1) ?v2) ?v3)))) :named a10))
(assert (! (forall ((?v0 Bool) (?v1 B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$) (?v2 B_llist_enat_prod$) (?v3 B_llist_enat_prod$)) (! (= (fun_app$q (fun_app$r (uud$ ?v0 ?v1) ?v2) ?v3) (and ?v0 (fun_app$q (fun_app$r ?v1 ?v2) ?v3))) :pattern ((fun_app$q (fun_app$r (uud$ ?v0 ?v1) ?v2) ?v3)))) :named a11))
(assert (! (forall ((?v0 Bool) (?v1 Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$) (?v2 Enat_b_llist_prod$) (?v3 Enat_b_llist_prod$)) (! (= (fun_app$s (fun_app$t (uuc$ ?v0 ?v1) ?v2) ?v3) (and ?v0 (fun_app$s (fun_app$t ?v1 ?v2) ?v3))) :pattern ((fun_app$s (fun_app$t (uuc$ ?v0 ?v1) ?v2) ?v3)))) :named a12))
(assert (! (forall ((?v0 Bool) (?v1 Enat_enat_prod_enat_enat_prod_bool_fun_fun$) (?v2 Enat_enat_prod$) (?v3 Enat_enat_prod$)) (! (= (fun_app$p (fun_app$u (fun_app$v (uub$ ?v0) ?v1) ?v2) ?v3) (and ?v0 (fun_app$p (fun_app$u ?v1 ?v2) ?v3))) :pattern ((fun_app$p (fun_app$u (fun_app$v (uub$ ?v0) ?v1) ?v2) ?v3)))) :named a13))
(assert (! (forall ((?v0 Bool) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$l (fun_app$m (uuf$ ?v0 ?v1) ?v2) ?v3) (and ?v0 (fun_app$l (fun_app$m ?v1 ?v2) ?v3))) :pattern ((fun_app$l (fun_app$m (uuf$ ?v0 ?v1) ?v2) ?v3)))) :named a14))
(assert (! (forall ((?v0 Bool) (?v1 B_llist_list_b_llist_list_bool_fun_fun$) (?v2 B_llist_list$) (?v3 B_llist_list$)) (! (= (fun_app$w (fun_app$x (uua$ ?v0 ?v1) ?v2) ?v3) (and ?v0 (fun_app$w (fun_app$x ?v1 ?v2) ?v3))) :pattern ((fun_app$w (fun_app$x (uua$ ?v0 ?v1) ?v2) ?v3)))) :named a15))
(assert (! (forall ((?v0 Bool) (?v1 Enat_list_enat_list_bool_fun_fun$) (?v2 Enat_list$) (?v3 Enat_list$)) (! (= (fun_app$y (fun_app$z (uu$ ?v0 ?v1) ?v2) ?v3) (and ?v0 (fun_app$y (fun_app$z ?v1 ?v2) ?v3))) :pattern ((fun_app$y (fun_app$z (uu$ ?v0 ?v1) ?v2) ?v3)))) :named a16))
(assert (! (forall ((?v0 B_llist_b_llist_prod_bool_fun$) (?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$l (fun_app$m (uuy$ ?v0 ?v1) ?v2) ?v3) (fun_app$k ?v0 (fun_app$g (fun_app$h ?v1 ?v2) ?v3))) :pattern ((fun_app$l (fun_app$m (uuy$ ?v0 ?v1) ?v2) ?v3)))) :named a17))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$d (fun_app$e (fun_app$o (uuw$ ?v0) ?v1) ?v2) ?v3) (fun_app$n ?v0 (fun_app$d (fun_app$e ?v1 ?v2) ?v3))) :pattern ((fun_app$d (fun_app$e (fun_app$o (uuw$ ?v0) ?v1) ?v2) ?v3)))) :named a18))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$i (fun_app$j (uux$ ?v0 ?v1) ?v2) ?v3) (fun_app$p ?v0 (fun_app$ (fun_app$a ?v1 ?v2) ?v3))) :pattern ((fun_app$i (fun_app$j (uux$ ?v0 ?v1) ?v2) ?v3)))) :named a19))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$l (fun_app$m (uut$ ?v0 ?v1) ?v2) ?v3) (fun_app$p ?v0 (fun_app$d (fun_app$e ?v1 ?v2) ?v3))) :pattern ((fun_app$l (fun_app$m (uut$ ?v0 ?v1) ?v2) ?v3)))) :named a20))
(assert (! (forall ((?v0 Bool_b_llist_b_llist_prod_fun$) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$b (fun_app$c (uuz$ ?v0 ?v1) ?v2) ?v3) (fun_app$aa ?v0 (fun_app$i (fun_app$j ?v1 ?v2) ?v3))) :pattern ((fun_app$b (fun_app$c (uuz$ ?v0 ?v1) ?v2) ?v3)))) :named a21))
(assert (! (forall ((?v0 Bool_b_llist_b_llist_prod_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$g (fun_app$h (uuv$ ?v0 ?v1) ?v2) ?v3) (fun_app$aa ?v0 (fun_app$l (fun_app$m ?v1 ?v2) ?v3))) :pattern ((fun_app$g (fun_app$h (uuv$ ?v0 ?v1) ?v2) ?v3)))) :named a22))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$ (fun_app$a (uuu$ ?v0 ?v1) ?v2) ?v3) (fun_app$ab ?v0 (fun_app$i (fun_app$j ?v1 ?v2) ?v3))) :pattern ((fun_app$ (fun_app$a (uuu$ ?v0 ?v1) ?v2) ?v3)))) :named a23))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$d (fun_app$e (fun_app$ac (uus$ ?v0) ?v1) ?v2) ?v3) (fun_app$ab ?v0 (fun_app$l (fun_app$m ?v1 ?v2) ?v3))) :pattern ((fun_app$d (fun_app$e (fun_app$ac (uus$ ?v0) ?v1) ?v2) ?v3)))) :named a24))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist$) (?v3 B_llist$)) (! (= (fun_app$i (fun_app$j (uur$ ?v0 ?v1) ?v2) ?v3) (fun_app$ad ?v0 (fun_app$i (fun_app$j ?v1 ?v2) ?v3))) :pattern ((fun_app$i (fun_app$j (uur$ ?v0 ?v1) ?v2) ?v3)))) :named a25))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat$) (?v3 Enat$)) (! (= (fun_app$l (fun_app$m (uuq$ ?v0 ?v1) ?v2) ?v3) (fun_app$ad ?v0 (fun_app$l (fun_app$m ?v1 ?v2) ?v3))) :pattern ((fun_app$l (fun_app$m (uuq$ ?v0 ?v1) ?v2) ?v3)))) :named a26))
(assert (! (forall ((?v0 B_llist$) (?v1 B_llist$)) (! (= (fun_app$i (fun_app$j uvg$ ?v0) ?v1) false) :pattern ((fun_app$i (fun_app$j uvg$ ?v0) ?v1)))) :named a27))
(assert (! (forall ((?v0 B_llist_enat_prod$) (?v1 B_llist_enat_prod$)) (! (= (fun_app$q (fun_app$r uve$ ?v0) ?v1) false) :pattern ((fun_app$q (fun_app$r uve$ ?v0) ?v1)))) :named a28))
(assert (! (forall ((?v0 Enat_b_llist_prod$) (?v1 Enat_b_llist_prod$)) (! (= (fun_app$s (fun_app$t uvd$ ?v0) ?v1) false) :pattern ((fun_app$s (fun_app$t uvd$ ?v0) ?v1)))) :named a29))
(assert (! (forall ((?v0 Enat_enat_prod$) (?v1 Enat_enat_prod$)) (! (= (fun_app$p (fun_app$u uvc$ ?v0) ?v1) false) :pattern ((fun_app$p (fun_app$u uvc$ ?v0) ?v1)))) :named a30))
(assert (! (forall ((?v0 Enat$) (?v1 Enat$)) (! (= (fun_app$l (fun_app$m uvf$ ?v0) ?v1) false) :pattern ((fun_app$l (fun_app$m uvf$ ?v0) ?v1)))) :named a31))
(assert (! (forall ((?v0 B_llist_list$) (?v1 B_llist_list$)) (! (= (fun_app$w (fun_app$x uvb$ ?v0) ?v1) false) :pattern ((fun_app$w (fun_app$x uvb$ ?v0) ?v1)))) :named a32))
(assert (! (forall ((?v0 Enat_list$) (?v1 Enat_list$)) (! (= (fun_app$y (fun_app$z uva$ ?v0) ?v1) false) :pattern ((fun_app$y (fun_app$z uva$ ?v0) ?v1)))) :named a33))
(assert (! (not (wf$ (collect$ (case_prod$a lstrict_prefix$)))) :named a34))
(assert (! (wf$ (inv_image$ (collect$a (case_prod$d less$)) llength$)) :named a35))
(assert (! (less_eq$ (collect$ (case_prod$a lstrict_prefix$)) (inv_image$ (collect$a (case_prod$d less$)) llength$)) :named a36))
(assert (! (forall ((?v0 Bool) (?v1 Enat_list_enat_list_bool_fun_fun$) (?v2 Enat_list_enat_list_prod$)) (= (fun_app$ae (case_prod$e (uu$ ?v0 ?v1)) ?v2) (and ?v0 (fun_app$ae (case_prod$e ?v1) ?v2)))) :named a37))
(assert (! (forall ((?v0 Bool) (?v1 B_llist_list_b_llist_list_bool_fun_fun$) (?v2 B_llist_list_b_llist_list_prod$)) (= (fun_app$af (case_prod$f (uua$ ?v0 ?v1)) ?v2) (and ?v0 (fun_app$af (case_prod$f ?v1) ?v2)))) :named a38))
(assert (! (forall ((?v0 Bool) (?v1 Enat_enat_prod_enat_enat_prod_bool_fun_fun$) (?v2 Enat_enat_prod_enat_enat_prod_prod$)) (= (fun_app$ag (case_prod$g (fun_app$v (uub$ ?v0) ?v1)) ?v2) (and ?v0 (fun_app$ag (case_prod$g ?v1) ?v2)))) :named a39))
(assert (! (forall ((?v0 Bool) (?v1 Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$) (?v2 Enat_b_llist_prod_enat_b_llist_prod_prod$)) (= (fun_app$ah (case_prod$h (uuc$ ?v0 ?v1)) ?v2) (and ?v0 (fun_app$ah (case_prod$h ?v1) ?v2)))) :named a40))
(assert (! (forall ((?v0 Bool) (?v1 B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$) (?v2 B_llist_enat_prod_b_llist_enat_prod_prod$)) (= (fun_app$ai (case_prod$i (uud$ ?v0 ?v1)) ?v2) (and ?v0 (fun_app$ai (case_prod$i ?v1) ?v2)))) :named a41))
(assert (! (forall ((?v0 Bool) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$k (case_prod$a (uue$ ?v0 ?v1)) ?v2) (and ?v0 (fun_app$k (case_prod$a ?v1) ?v2)))) :named a42))
(assert (! (forall ((?v0 Bool) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$p (case_prod$d (uuf$ ?v0 ?v1)) ?v2) (and ?v0 (fun_app$p (case_prod$d ?v1) ?v2)))) :named a43))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$p (case_prod$d ?v0) (fun_app$n (case_prod$c ?v1) ?v2)) (fun_app$p (case_prod$d (uug$ ?v0 ?v1)) ?v2))) :named a44))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$) (?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$k (case_prod$a ?v0) (case_prod$b ?v1 ?v2)) (fun_app$p (case_prod$d (uuh$ ?v0 ?v1)) ?v2))) :named a45))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$p (case_prod$d ?v0) (case_prod$ ?v1 ?v2)) (fun_app$k (case_prod$a (uui$ ?v0 ?v1)) ?v2))) :named a46))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$) (?v1 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$k (case_prod$a ?v0) (case_prod$j ?v1 ?v2)) (fun_app$k (case_prod$a (uuj$ ?v0 ?v1)) ?v2))) :named a47))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_fun_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$n (case_prod$c ?v0) (fun_app$n (case_prod$c ?v1) ?v2)) (fun_app$n (case_prod$c (fun_app$o (uuk$ ?v0) ?v1)) ?v2))) :named a48))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_fun_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$n (case_prod$c ?v0) (case_prod$ ?v1 ?v2)) (case_prod$ (uul$ ?v0 ?v1) ?v2))) :named a49))
(assert (! (forall ((?v0 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (case_prod$ ?v0 (case_prod$b ?v1 ?v2)) (fun_app$n (case_prod$c (fun_app$f (uum$ ?v0) ?v1)) ?v2))) :named a50))
(assert (! (forall ((?v0 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (case_prod$b ?v0 (fun_app$n (case_prod$c ?v1) ?v2)) (case_prod$b (uun$ ?v0 ?v1) ?v2))) :named a51))
(assert (! (forall ((?v0 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v1 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (case_prod$ ?v0 (case_prod$j ?v1 ?v2)) (case_prod$ (uuo$ ?v0 ?v1) ?v2))) :named a52))
(assert (! (forall ((?v0 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (case_prod$b ?v0 (case_prod$ ?v1 ?v2)) (case_prod$j (uup$ ?v0 ?v1) ?v2))) :named a53))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$ad ?v0 (fun_app$p (case_prod$d ?v1) ?v2)) (fun_app$p (case_prod$d (uuq$ ?v0 ?v1)) ?v2))) :named a54))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$ad ?v0 (fun_app$k (case_prod$a ?v1) ?v2)) (fun_app$k (case_prod$a (uur$ ?v0 ?v1)) ?v2))) :named a55))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$ab ?v0 (fun_app$p (case_prod$d ?v1) ?v2)) (fun_app$n (case_prod$c (fun_app$ac (uus$ ?v0) ?v1)) ?v2))) :named a56))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$p ?v0 (fun_app$n (case_prod$c ?v1) ?v2)) (fun_app$p (case_prod$d (uut$ ?v0 ?v1)) ?v2))) :named a57))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$ab ?v0 (fun_app$k (case_prod$a ?v1) ?v2)) (case_prod$ (uuu$ ?v0 ?v1) ?v2))) :named a58))
(assert (! (forall ((?v0 Bool_b_llist_b_llist_prod_fun$) (?v1 Enat_enat_bool_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$aa ?v0 (fun_app$p (case_prod$d ?v1) ?v2)) (case_prod$b (uuv$ ?v0 ?v1) ?v2))) :named a59))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_fun$) (?v1 Enat_enat_enat_enat_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$n ?v0 (fun_app$n (case_prod$c ?v1) ?v2)) (fun_app$n (case_prod$c (fun_app$o (uuw$ ?v0) ?v1)) ?v2))) :named a60))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$) (?v1 B_llist_b_llist_enat_enat_prod_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$p ?v0 (case_prod$ ?v1 ?v2)) (fun_app$k (case_prod$a (uux$ ?v0 ?v1)) ?v2))) :named a61))
(assert (! (forall ((?v0 B_llist_b_llist_prod_bool_fun$) (?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$) (?v2 Enat_enat_prod$)) (= (fun_app$k ?v0 (case_prod$b ?v1 ?v2)) (fun_app$p (case_prod$d (uuy$ ?v0 ?v1)) ?v2))) :named a62))
(assert (! (forall ((?v0 Bool_b_llist_b_llist_prod_fun$) (?v1 B_llist_b_llist_bool_fun_fun$) (?v2 B_llist_b_llist_prod$)) (= (fun_app$aa ?v0 (fun_app$k (case_prod$a ?v1) ?v2)) (case_prod$j (uuz$ ?v0 ?v1) ?v2))) :named a63))
(assert (! (wf$a (collect$a (case_prod$d less$))) :named a64))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 Enat_enat_fun$)) (=> (wf$a ?v0) (wf$a (inv_image$a ?v0 ?v1)))) :named a65))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 Enat_b_llist_fun$)) (=> (wf$ ?v0) (wf$a (inv_image$b ?v0 ?v1)))) :named a66))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 B_llist_enat_fun$)) (=> (wf$a ?v0) (wf$ (inv_image$ ?v0 ?v1)))) :named a67))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_fun$)) (=> (wf$ ?v0) (wf$ (inv_image$c ?v0 ?v1)))) :named a68))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 Enat_list_enat_fun$)) (=> (wf$a ?v0) (wf$b (inv_image$d ?v0 ?v1)))) :named a69))
(assert (! (forall ((?v0 Enat_list_enat_list_prod_set$) (?v1 Enat_enat_list_fun$)) (=> (wf$b ?v0) (wf$a (inv_image$e ?v0 ?v1)))) :named a70))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 Enat_list_b_llist_fun$)) (=> (wf$ ?v0) (wf$b (inv_image$f ?v0 ?v1)))) :named a71))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 Enat_enat_prod_enat_fun$)) (=> (wf$a ?v0) (wf$c (inv_image$g ?v0 ?v1)))) :named a72))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 B_llist_list_enat_fun$)) (=> (wf$a ?v0) (wf$d (inv_image$h ?v0 ?v1)))) :named a73))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_prod_set$) (?v1 Enat_enat_enat_prod_fun$)) (=> (wf$c ?v0) (wf$a (inv_image$i ?v0 ?v1)))) :named a74))
(assert (! (forall ((?v0 Enat_enat_prod$) (?v1 Enat_enat_prod$) (?v2 Enat_enat_bool_fun_fun$)) (=> (= ?v0 ?v1) (= (fun_app$p (case_prod$d ?v2) ?v0) (fun_app$p (case_prod$d ?v2) ?v1)))) :named a75))
(assert (! (forall ((?v0 B_llist_b_llist_prod$) (?v1 B_llist_b_llist_prod$) (?v2 B_llist_b_llist_bool_fun_fun$)) (=> (= ?v0 ?v1) (= (fun_app$k (case_prod$a ?v2) ?v0) (fun_app$k (case_prod$a ?v2) ?v1)))) :named a76))
(assert (! (forall ((?v0 Enat_enat_prod$) (?v1 Enat_enat_prod$) (?v2 Enat_enat_enat_enat_prod_fun_fun$)) (=> (= ?v0 ?v1) (= (fun_app$n (case_prod$c ?v2) ?v0) (fun_app$n (case_prod$c ?v2) ?v1)))) :named a77))
(assert (! (forall ((?v0 B_llist_b_llist_prod$) (?v1 B_llist_b_llist_prod$) (?v2 B_llist_b_llist_enat_enat_prod_fun_fun$)) (=> (= ?v0 ?v1) (= (case_prod$ ?v2 ?v0) (case_prod$ ?v2 ?v1)))) :named a78))
(assert (! (forall ((?v0 Enat_enat_prod$) (?v1 Enat_enat_prod$) (?v2 Enat_enat_b_llist_b_llist_prod_fun_fun$)) (=> (= ?v0 ?v1) (= (case_prod$b ?v2 ?v0) (case_prod$b ?v2 ?v1)))) :named a79))
(assert (! (forall ((?v0 B_llist_b_llist_prod$) (?v1 B_llist_b_llist_prod$) (?v2 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$)) (=> (= ?v0 ?v1) (= (case_prod$j ?v2 ?v0) (case_prod$j ?v2 ?v1)))) :named a80))
(assert (! (forall ((?v0 Enat_list_enat_list_prod$) (?v1 Enat_list_enat_list_prod$) (?v2 Enat_list_enat_list_bool_fun_fun$)) (=> (= ?v0 ?v1) (= (fun_app$ae (case_prod$e ?v2) ?v0) (fun_app$ae (case_prod$e ?v2) ?v1)))) :named a81))
(assert (! (forall ((?v0 B_llist_list_b_llist_list_prod$) (?v1 B_llist_list_b_llist_list_prod$) (?v2 B_llist_list_b_llist_list_bool_fun_fun$)) (=> (= ?v0 ?v1) (= (fun_app$af (case_prod$f ?v2) ?v0) (fun_app$af (case_prod$f ?v2) ?v1)))) :named a82))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_prod$) (?v1 Enat_enat_prod_enat_enat_prod_prod$) (?v2 Enat_enat_prod_enat_enat_prod_bool_fun_fun$)) (=> (= ?v0 ?v1) (= (fun_app$ag (case_prod$g ?v2) ?v0) (fun_app$ag (case_prod$g ?v2) ?v1)))) :named a83))
(assert (! (forall ((?v0 Enat_b_llist_prod_enat_b_llist_prod_prod$) (?v1 Enat_b_llist_prod_enat_b_llist_prod_prod$) (?v2 Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$)) (=> (= ?v0 ?v1) (= (fun_app$ah (case_prod$h ?v2) ?v0) (fun_app$ah (case_prod$h ?v2) ?v1)))) :named a84))
(assert (! (forall ((?v0 B_llist$) (?v1 B_llist$)) (=> (fun_app$i (fun_app$j lstrict_prefix$ ?v0) ?v1) (fun_app$l (fun_app$m less$ (fun_app$aj llength$ ?v0)) (fun_app$aj llength$ ?v1)))) :named a85))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$)) (! (= (wfP$ ?v0) (wf$a (collect$a (case_prod$d ?v0)))) :pattern ((wfP$ ?v0)))) :named a86))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$)) (! (= (wfP$a ?v0) (wf$ (collect$ (case_prod$a ?v0)))) :pattern ((wfP$a ?v0)))) :named a87))
(assert (! (forall ((?v0 Enat_list_enat_list_bool_fun_fun$)) (! (= (wfP$b ?v0) (wf$b (collect$b (case_prod$e ?v0)))) :pattern ((wfP$b ?v0)))) :named a88))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$)) (! (= (wfP$c ?v0) (wf$c (collect$c (case_prod$g ?v0)))) :pattern ((wfP$c ?v0)))) :named a89))
(assert (! (forall ((?v0 B_llist_list_b_llist_list_bool_fun_fun$)) (! (= (wfP$d ?v0) (wf$d (collect$d (case_prod$f ?v0)))) :pattern ((wfP$d ?v0)))) :named a90))
(assert (! (forall ((?v0 B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$)) (! (= (wfP$e ?v0) (wf$e (collect$e (case_prod$i ?v0)))) :pattern ((wfP$e ?v0)))) :named a91))
(assert (! (forall ((?v0 Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$)) (! (= (wfP$f ?v0) (wf$f (collect$f (case_prod$h ?v0)))) :pattern ((wfP$f ?v0)))) :named a92))
(assert (! (forall ((?v0 Enat_list_list_enat_list_list_bool_fun_fun$)) (! (= (wfP$g ?v0) (wf$g (collect$g (case_prod$k ?v0)))) :pattern ((wfP$g ?v0)))) :named a93))
(assert (! (forall ((?v0 Enat_enat_prod_list_enat_enat_prod_list_bool_fun_fun$)) (! (= (wfP$h ?v0) (wf$h (collect$h (case_prod$l ?v0)))) :pattern ((wfP$h ?v0)))) :named a94))
(assert (! (forall ((?v0 B_llist_list_list_b_llist_list_list_bool_fun_fun$)) (! (= (wfP$i ?v0) (wf$i (collect$i (case_prod$m ?v0)))) :pattern ((wfP$i ?v0)))) :named a95))
(assert (! (forall ((?v0 Enat_enat_prod_set$)) (=> (wf$a ?v0) (wf$b (lenlex$ ?v0)))) :named a96))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$)) (=> (wf$ ?v0) (wf$d (lenlex$a ?v0)))) :named a97))
(assert (! (forall ((?v0 Enat_list_enat_list_prod_set$)) (=> (wf$b ?v0) (wf$g (lenlex$b ?v0)))) :named a98))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_prod_set$)) (=> (wf$c ?v0) (wf$h (lenlex$c ?v0)))) :named a99))
(assert (! (forall ((?v0 B_llist_list_b_llist_list_prod_set$)) (=> (wf$d ?v0) (wf$i (lenlex$d ?v0)))) :named a100))
(assert (! (forall ((?v0 B_llist_enat_prod_b_llist_enat_prod_prod_set$)) (=> (wf$e ?v0) (wf$j (lenlex$e ?v0)))) :named a101))
(assert (! (forall ((?v0 Enat_b_llist_prod_enat_b_llist_prod_prod_set$)) (=> (wf$f ?v0) (wf$k (lenlex$f ?v0)))) :named a102))
(assert (! (forall ((?v0 Enat_list_list_enat_list_list_prod_set$)) (=> (wf$g ?v0) (wf$l (lenlex$g ?v0)))) :named a103))
(assert (! (forall ((?v0 Enat_enat_prod_list_enat_enat_prod_list_prod_set$)) (=> (wf$h ?v0) (wf$m (lenlex$h ?v0)))) :named a104))
(assert (! (forall ((?v0 B_llist_list_list_b_llist_list_list_prod_set$)) (=> (wf$i ?v0) (wf$n (lenlex$i ?v0)))) :named a105))
(assert (! (forall ((?v0 Enat_nat_fun$)) (wf$a (measure$ ?v0))) :named a106))
(assert (! (forall ((?v0 B_llist_nat_fun$)) (wf$ (measure$a ?v0))) :named a107))
(assert (! (forall ((?v0 Enat_list_nat_fun$)) (wf$b (measure$b ?v0))) :named a108))
(assert (! (forall ((?v0 Enat_enat_prod_nat_fun$)) (wf$c (measure$c ?v0))) :named a109))
(assert (! (forall ((?v0 B_llist_list_nat_fun$)) (wf$d (measure$d ?v0))) :named a110))
(assert (! (forall ((?v0 B_llist_enat_prod_nat_fun$)) (wf$e (measure$e ?v0))) :named a111))
(assert (! (forall ((?v0 Enat_b_llist_prod_nat_fun$)) (wf$f (measure$f ?v0))) :named a112))
(assert (! (forall ((?v0 Enat_list_list_nat_fun$)) (wf$g (measure$g ?v0))) :named a113))
(assert (! (forall ((?v0 Enat_enat_prod_list_nat_fun$)) (wf$h (measure$h ?v0))) :named a114))
(assert (! (forall ((?v0 B_llist_list_list_nat_fun$)) (wf$i (measure$i ?v0))) :named a115))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 Enat_enat_prod_set$)) (=> (and (wf$a ?v0) (wf$a ?v1)) (wf$c (lex_prod$ ?v0 ?v1)))) :named a116))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 Enat_enat_prod_set$)) (=> (and (wf$ ?v0) (wf$a ?v1)) (wf$e (lex_prod$a ?v0 ?v1)))) :named a117))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 B_llist_b_llist_prod_set$)) (=> (and (wf$a ?v0) (wf$ ?v1)) (wf$f (lex_prod$b ?v0 ?v1)))) :named a118))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$)) (=> (and (wf$ ?v0) (wf$ ?v1)) (wf$o (lex_prod$c ?v0 ?v1)))) :named a119))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 Enat_list_enat_list_prod_set$)) (=> (and (wf$a ?v0) (wf$b ?v1)) (wf$p (lex_prod$d ?v0 ?v1)))) :named a120))
(assert (! (forall ((?v0 Enat_list_enat_list_prod_set$) (?v1 Enat_enat_prod_set$)) (=> (and (wf$b ?v0) (wf$a ?v1)) (wf$q (lex_prod$e ?v0 ?v1)))) :named a121))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 Enat_list_enat_list_prod_set$)) (=> (and (wf$ ?v0) (wf$b ?v1)) (wf$r (lex_prod$f ?v0 ?v1)))) :named a122))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 Enat_enat_prod_enat_enat_prod_prod_set$)) (=> (and (wf$a ?v0) (wf$c ?v1)) (wf$s (lex_prod$g ?v0 ?v1)))) :named a123))
(assert (! (forall ((?v0 Enat_enat_prod_set$) (?v1 B_llist_list_b_llist_list_prod_set$)) (=> (and (wf$a ?v0) (wf$d ?v1)) (wf$t (lex_prod$h ?v0 ?v1)))) :named a124))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_prod_set$) (?v1 Enat_enat_prod_set$)) (=> (and (wf$c ?v0) (wf$a ?v1)) (wf$u (lex_prod$i ?v0 ?v1)))) :named a125))
(assert (! (wf$a (collect$a (case_prod$d less$))) :named a126))
(assert (! (wfP$b uva$) :named a127))
(assert (! (wfP$d uvb$) :named a128))
(assert (! (wfP$c uvc$) :named a129))
(assert (! (wfP$f uvd$) :named a130))
(assert (! (wfP$e uve$) :named a131))
(assert (! (wfP$ uvf$) :named a132))
(assert (! (wfP$a uvg$) :named a133))
(assert (! (forall ((?v0 Enat_list_enat_list_bool_fun_fun$)) (= (wfP$b ?v0) (forall ((?v1 Enat_list_set$) (?v2 Enat_list$)) (=> (member$ ?v2 ?v1) (exists ((?v3 Enat_list$)) (and (member$ ?v3 ?v1) (forall ((?v4 Enat_list$)) (=> (fun_app$y (fun_app$z ?v0 ?v4) ?v3) (not (member$ ?v4 ?v1)))))))))) :named a134))
(assert (! (forall ((?v0 B_llist_list_b_llist_list_bool_fun_fun$)) (= (wfP$d ?v0) (forall ((?v1 B_llist_list_set$) (?v2 B_llist_list$)) (=> (member$a ?v2 ?v1) (exists ((?v3 B_llist_list$)) (and (member$a ?v3 ?v1) (forall ((?v4 B_llist_list$)) (=> (fun_app$w (fun_app$x ?v0 ?v4) ?v3) (not (member$a ?v4 ?v1)))))))))) :named a135))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$)) (= (wfP$c ?v0) (forall ((?v1 Enat_enat_prod_set$) (?v2 Enat_enat_prod$)) (=> (member$b ?v2 ?v1) (exists ((?v3 Enat_enat_prod$)) (and (member$b ?v3 ?v1) (forall ((?v4 Enat_enat_prod$)) (=> (fun_app$p (fun_app$u ?v0 ?v4) ?v3) (not (member$b ?v4 ?v1)))))))))) :named a136))
(assert (! (forall ((?v0 Enat_b_llist_prod_enat_b_llist_prod_bool_fun_fun$)) (= (wfP$f ?v0) (forall ((?v1 Enat_b_llist_prod_set$) (?v2 Enat_b_llist_prod$)) (=> (member$c ?v2 ?v1) (exists ((?v3 Enat_b_llist_prod$)) (and (member$c ?v3 ?v1) (forall ((?v4 Enat_b_llist_prod$)) (=> (fun_app$s (fun_app$t ?v0 ?v4) ?v3) (not (member$c ?v4 ?v1)))))))))) :named a137))
(assert (! (forall ((?v0 B_llist_enat_prod_b_llist_enat_prod_bool_fun_fun$)) (= (wfP$e ?v0) (forall ((?v1 B_llist_enat_prod_set$) (?v2 B_llist_enat_prod$)) (=> (member$d ?v2 ?v1) (exists ((?v3 B_llist_enat_prod$)) (and (member$d ?v3 ?v1) (forall ((?v4 B_llist_enat_prod$)) (=> (fun_app$q (fun_app$r ?v0 ?v4) ?v3) (not (member$d ?v4 ?v1)))))))))) :named a138))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$)) (= (wfP$ ?v0) (forall ((?v1 Enat_set$) (?v2 Enat$)) (=> (member$e ?v2 ?v1) (exists ((?v3 Enat$)) (and (member$e ?v3 ?v1) (forall ((?v4 Enat$)) (=> (fun_app$l (fun_app$m ?v0 ?v4) ?v3) (not (member$e ?v4 ?v1)))))))))) :named a139))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$)) (= (wfP$a ?v0) (forall ((?v1 B_llist_set$) (?v2 B_llist$)) (=> (member$f ?v2 ?v1) (exists ((?v3 B_llist$)) (and (member$f ?v3 ?v1) (forall ((?v4 B_llist$)) (=> (fun_app$i (fun_app$j ?v0 ?v4) ?v3) (not (member$f ?v4 ?v1)))))))))) :named a140))
(check-sat)
;(get-unsat-core)
