; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 518
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))
  (A_llist_llist_llist_llist_llist$ (lNil$d) (lCons$d (lhd$d A_llist_llist_llist_llist$) (ltl$d A_llist_llist_llist_llist_llist$)))))
(declare-fun xss$ () A_llist_llist$)
(declare-fun lnull$ (A_llist_llist$) Bool)
(declare-fun lnull$a (A_llist$) Bool)
(declare-fun lnull$b (A_llist_llist_llist_llist$) Bool)
(declare-fun lnull$c (A_llist_llist_llist$) Bool)
(declare-fun lnull$d (A_llist_llist_llist_llist_llist$) Bool)
(declare-fun member$ (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun fun_app$ (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$) Bool)
(declare-fun lappend$ (A_llist$ A_llist$) A_llist$)
(declare-fun lconcat$ (A_llist_llist$) A_llist$)
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$c (A_llist$ A_llist_set$) Bool)
(declare-fun fun_app$a (A_llist_llist_bool_fun$ A_llist_llist$) Bool)
(declare-fun fun_app$b (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun fun_app$c (A_bool_fun$ A$) Bool)
(declare-fun lappend$a (A_llist_llist_llist_llist$ A_llist_llist_llist_llist$) A_llist_llist_llist_llist$)
(declare-fun lappend$b (A_llist_llist_llist$ A_llist_llist_llist$) A_llist_llist_llist$)
(declare-fun lappend$c (A_llist_llist$ A_llist_llist$) A_llist_llist$)
(declare-fun lconcat$a (A_llist_llist_llist_llist_llist$) A_llist_llist_llist_llist$)
(declare-fun lconcat$b (A_llist_llist_llist_llist$) A_llist_llist_llist$)
(declare-fun lconcat$c (A_llist_llist_llist$) A_llist_llist$)
(assert (! (not (= (ltl$ (lconcat$ xss$)) (lappend$ (ltl$ (lhd$a xss$)) (lconcat$ (ltl$a xss$))))) :named a0))
(assert (! (not (lnull$ xss$)) :named a1))
(assert (! (not (lnull$a (lhd$a xss$))) :named a2))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (= (not (lnull$b (lappend$a ?v0 ?v1))) (or (not (lnull$b ?v0)) (not (lnull$b ?v1))))) :named a3))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (= (not (lnull$c (lappend$b ?v0 ?v1))) (or (not (lnull$c ?v0)) (not (lnull$c ?v1))))) :named a4))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (not (lnull$ (lappend$c ?v0 ?v1))) (or (not (lnull$ ?v0)) (not (lnull$ ?v1))))) :named a5))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (not (lnull$a (lappend$ ?v0 ?v1))) (or (not (lnull$a ?v0)) (not (lnull$a ?v1))))) :named a6))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (= (lnull$b (lappend$a ?v0 ?v1)) (and (lnull$b ?v0) (lnull$b ?v1)))) :named a7))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (= (lnull$c (lappend$b ?v0 ?v1)) (and (lnull$c ?v0) (lnull$c ?v1)))) :named a8))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (lnull$ (lappend$c ?v0 ?v1)) (and (lnull$ ?v0) (lnull$ ?v1)))) :named a9))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (lnull$a (lappend$ ?v0 ?v1)) (and (lnull$a ?v0) (lnull$a ?v1)))) :named a10))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (= (ltl$c (lappend$a ?v0 ?v1)) (ite (lnull$b ?v0) (ltl$c ?v1) (lappend$a (ltl$c ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (= (ltl$b (lappend$b ?v0 ?v1)) (ite (lnull$c ?v0) (ltl$b ?v1) (lappend$b (ltl$b ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (ltl$a (lappend$c ?v0 ?v1)) (ite (lnull$ ?v0) (ltl$a ?v1) (lappend$c (ltl$a ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (ltl$ (lappend$ ?v0 ?v1)) (ite (lnull$a ?v0) (ltl$ ?v1) (lappend$ (ltl$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (= (lhd$c (lappend$a ?v0 ?v1)) (ite (lnull$b ?v0) (lhd$c ?v1) (lhd$c ?v0)))) :named a15))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (= (lhd$b (lappend$b ?v0 ?v1)) (ite (lnull$c ?v0) (lhd$b ?v1) (lhd$b ?v0)))) :named a16))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (lhd$a (lappend$c ?v0 ?v1)) (ite (lnull$ ?v0) (lhd$a ?v1) (lhd$a ?v0)))) :named a17))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (lhd$ (lappend$ ?v0 ?v1)) (ite (lnull$a ?v0) (lhd$ ?v1) (lhd$ ?v0)))) :named a18))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_llist$)) (=> (and (not (lnull$d ?v0)) (not (lnull$b (lhd$d ?v0)))) (= (lhd$c (lconcat$a ?v0)) (lhd$c (lhd$d ?v0))))) :named a19))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$)) (=> (and (not (lnull$b ?v0)) (not (lnull$c (lhd$c ?v0)))) (= (lhd$b (lconcat$b ?v0)) (lhd$b (lhd$c ?v0))))) :named a20))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (=> (and (not (lnull$c ?v0)) (not (lnull$ (lhd$b ?v0)))) (= (lhd$a (lconcat$c ?v0)) (lhd$a (lhd$b ?v0))))) :named a21))
(assert (! (forall ((?v0 A_llist_llist$)) (=> (and (not (lnull$ ?v0)) (not (lnull$a (lhd$a ?v0)))) (= (lhd$ (lconcat$ ?v0)) (lhd$ (lhd$a ?v0))))) :named a22))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_llist$)) (= (lappend$b (lappend$b ?v0 ?v1) ?v2) (lappend$b ?v0 (lappend$b ?v1 ?v2)))) :named a23))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_llist$)) (= (lappend$c (lappend$c ?v0 ?v1) ?v2) (lappend$c ?v0 (lappend$c ?v1 ?v2)))) :named a24))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$)) (= (lappend$ (lappend$ ?v0 ?v1) ?v2) (lappend$ ?v0 (lappend$ ?v1 ?v2)))) :named a25))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_bool_fun$)) (=> (and (=> (or (lnull$b ?v0) (not (fun_app$ ?v1 (lhd$c ?v0)))) false) (=> (and (not (lnull$b ?v0)) (fun_app$ ?v1 (lhd$c ?v0))) false)) false)) :named a26))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_bool_fun$)) (=> (and (=> (or (lnull$c ?v0) (not (fun_app$a ?v1 (lhd$b ?v0)))) false) (=> (and (not (lnull$c ?v0)) (fun_app$a ?v1 (lhd$b ?v0))) false)) false)) :named a27))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_bool_fun$)) (=> (and (=> (or (lnull$ ?v0) (not (fun_app$b ?v1 (lhd$a ?v0)))) false) (=> (and (not (lnull$ ?v0)) (fun_app$b ?v1 (lhd$a ?v0))) false)) false)) :named a28))
(assert (! (forall ((?v0 A_llist$) (?v1 A_bool_fun$)) (=> (and (=> (or (lnull$a ?v0) (not (fun_app$c ?v1 (lhd$ ?v0)))) false) (=> (and (not (lnull$a ?v0)) (fun_app$c ?v1 (lhd$ ?v0))) false)) false)) :named a29))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (=> (or (lnull$a ?v0) (lnull$a ?v1)) false) (=> (and (not (lnull$a ?v0)) (not (lnull$a ?v1))) false)) false)) :named a30))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist$)) (=> (and (=> (or (lnull$ ?v0) (lnull$a ?v1)) false) (=> (and (not (lnull$ ?v0)) (not (lnull$a ?v1))) false)) false)) :named a31))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_llist$)) (=> (and (=> (or (lnull$a ?v0) (lnull$ ?v1)) false) (=> (and (not (lnull$a ?v0)) (not (lnull$ ?v1))) false)) false)) :named a32))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (and (=> (or (lnull$ ?v0) (lnull$ ?v1)) false) (=> (and (not (lnull$ ?v0)) (not (lnull$ ?v1))) false)) false)) :named a33))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_llist_llist$)) (=> (and (=> (or (lnull$a ?v0) (lnull$c ?v1)) false) (=> (and (not (lnull$a ?v0)) (not (lnull$c ?v1))) false)) false)) :named a34))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist$)) (=> (and (=> (or (lnull$c ?v0) (lnull$a ?v1)) false) (=> (and (not (lnull$c ?v0)) (not (lnull$a ?v1))) false)) false)) :named a35))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_llist$)) (=> (and (=> (or (lnull$ ?v0) (lnull$c ?v1)) false) (=> (and (not (lnull$ ?v0)) (not (lnull$c ?v1))) false)) false)) :named a36))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist$)) (=> (and (=> (or (lnull$c ?v0) (lnull$ ?v1)) false) (=> (and (not (lnull$c ?v0)) (not (lnull$ ?v1))) false)) false)) :named a37))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (=> (and (=> (or (lnull$c ?v0) (lnull$c ?v1)) false) (=> (and (not (lnull$c ?v0)) (not (lnull$c ?v1))) false)) false)) :named a38))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_llist_llist_llist$)) (=> (and (=> (or (lnull$a ?v0) (lnull$b ?v1)) false) (=> (and (not (lnull$a ?v0)) (not (lnull$b ?v1))) false)) false)) :named a39))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_set$)) (=> (and (=> (forall ((?v1 A_llist_llist_llist_llist$)) (=> (member$ ?v1 ?v0) (lnull$b ?v1))) false) (=> (not (forall ((?v1 A_llist_llist_llist_llist$)) (=> (member$ ?v1 ?v0) (lnull$b ?v1)))) false)) false)) :named a40))
(assert (! (forall ((?v0 A_llist_llist_llist_set$)) (=> (and (=> (forall ((?v1 A_llist_llist_llist$)) (=> (member$a ?v1 ?v0) (lnull$c ?v1))) false) (=> (not (forall ((?v1 A_llist_llist_llist$)) (=> (member$a ?v1 ?v0) (lnull$c ?v1)))) false)) false)) :named a41))
(assert (! (forall ((?v0 A_llist_llist_set$)) (=> (and (=> (forall ((?v1 A_llist_llist$)) (=> (member$b ?v1 ?v0) (lnull$ ?v1))) false) (=> (not (forall ((?v1 A_llist_llist$)) (=> (member$b ?v1 ?v0) (lnull$ ?v1)))) false)) false)) :named a42))
(assert (! (forall ((?v0 A_llist_set$)) (=> (and (=> (forall ((?v1 A_llist$)) (=> (member$c ?v1 ?v0) (lnull$a ?v1))) false) (=> (not (forall ((?v1 A_llist$)) (=> (member$c ?v1 ?v0) (lnull$a ?v1)))) false)) false)) :named a43))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (=> (and (=> (and (lnull$b ?v0) (lnull$b ?v1)) false) (=> (or (not (lnull$b ?v0)) (not (lnull$b ?v1))) false)) false)) :named a44))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (=> (and (=> (and (lnull$c ?v0) (lnull$c ?v1)) false) (=> (or (not (lnull$c ?v0)) (not (lnull$c ?v1))) false)) false)) :named a45))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (and (=> (and (lnull$ ?v0) (lnull$ ?v1)) false) (=> (or (not (lnull$ ?v0)) (not (lnull$ ?v1))) false)) false)) :named a46))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (=> (and (lnull$a ?v0) (lnull$a ?v1)) false) (=> (or (not (lnull$a ?v0)) (not (lnull$a ?v1))) false)) false)) :named a47))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$)) (=> (and (=> (lnull$b ?v0) false) (=> (not (lnull$b ?v0)) false)) false)) :named a48))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (=> (and (=> (lnull$c ?v0) false) (=> (not (lnull$c ?v0)) false)) false)) :named a49))
(assert (! (forall ((?v0 A_llist_llist$)) (=> (and (=> (lnull$ ?v0) false) (=> (not (lnull$ ?v0)) false)) false)) :named a50))
(assert (! (forall ((?v0 A_llist$)) (=> (and (=> (lnull$a ?v0) false) (=> (not (lnull$a ?v0)) false)) false)) :named a51))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (=> (and (= (lnull$b ?v0) (lnull$b ?v1)) (=> (and (not (lnull$b ?v0)) (not (lnull$b ?v1))) (and (= (lhd$c ?v0) (lhd$c ?v1)) (= (ltl$c ?v0) (ltl$c ?v1))))) (= ?v0 ?v1))) :named a52))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (=> (and (= (lnull$c ?v0) (lnull$c ?v1)) (=> (and (not (lnull$c ?v0)) (not (lnull$c ?v1))) (and (= (lhd$b ?v0) (lhd$b ?v1)) (= (ltl$b ?v0) (ltl$b ?v1))))) (= ?v0 ?v1))) :named a53))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (and (= (lnull$ ?v0) (lnull$ ?v1)) (=> (and (not (lnull$ ?v0)) (not (lnull$ ?v1))) (and (= (lhd$a ?v0) (lhd$a ?v1)) (= (ltl$a ?v0) (ltl$a ?v1))))) (= ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (= (lnull$a ?v0) (lnull$a ?v1)) (=> (and (not (lnull$a ?v0)) (not (lnull$a ?v1))) (and (= (lhd$ ?v0) (lhd$ ?v1)) (= (ltl$ ?v0) (ltl$ ?v1))))) (= ?v0 ?v1))) :named a55))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (=> (or (not (lnull$b ?v0)) (not (lnull$b ?v1))) (not (lnull$b (lappend$a ?v0 ?v1))))) :named a56))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (=> (or (not (lnull$c ?v0)) (not (lnull$c ?v1))) (not (lnull$c (lappend$b ?v0 ?v1))))) :named a57))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (or (not (lnull$ ?v0)) (not (lnull$ ?v1))) (not (lnull$ (lappend$c ?v0 ?v1))))) :named a58))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (or (not (lnull$a ?v0)) (not (lnull$a ?v1))) (not (lnull$a (lappend$ ?v0 ?v1))))) :named a59))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (=> (not (lnull$b ?v0)) (= (lappend$a (ltl$c ?v0) ?v1) (ltl$c (lappend$a ?v0 ?v1))))) :named a60))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (=> (not (lnull$c ?v0)) (= (lappend$b (ltl$b ?v0) ?v1) (ltl$b (lappend$b ?v0 ?v1))))) :named a61))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (not (lnull$ ?v0)) (= (lappend$c (ltl$a ?v0) ?v1) (ltl$a (lappend$c ?v0 ?v1))))) :named a62))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (not (lnull$a ?v0)) (= (lappend$ (ltl$ ?v0) ?v1) (ltl$ (lappend$ ?v0 ?v1))))) :named a63))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (=> (and (lnull$b ?v0) (lnull$b ?v1)) (lnull$b (lappend$a ?v0 ?v1)))) :named a64))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (=> (and (lnull$c ?v0) (lnull$c ?v1)) (lnull$c (lappend$b ?v0 ?v1)))) :named a65))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (and (lnull$ ?v0) (lnull$ ?v1)) (lnull$ (lappend$c ?v0 ?v1)))) :named a66))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (lnull$a ?v0) (lnull$a ?v1)) (lnull$a (lappend$ ?v0 ?v1)))) :named a67))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (! (=> (lnull$b ?v0) (= (lappend$a ?v1 ?v0) ?v1)) :pattern ((lappend$a ?v1 ?v0)))) :named a68))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (! (=> (lnull$c ?v0) (= (lappend$b ?v1 ?v0) ?v1)) :pattern ((lappend$b ?v1 ?v0)))) :named a69))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (! (=> (lnull$ ?v0) (= (lappend$c ?v1 ?v0) ?v1)) :pattern ((lappend$c ?v1 ?v0)))) :named a70))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (! (=> (lnull$a ?v0) (= (lappend$ ?v1 ?v0) ?v1)) :pattern ((lappend$ ?v1 ?v0)))) :named a71))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$)) (! (=> (lnull$b ?v0) (= (lappend$a ?v0 ?v1) ?v1)) :pattern ((lappend$a ?v0 ?v1)))) :named a72))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$)) (! (=> (lnull$c ?v0) (= (lappend$b ?v0 ?v1) ?v1)) :pattern ((lappend$b ?v0 ?v1)))) :named a73))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (! (=> (lnull$ ?v0) (= (lappend$c ?v0 ?v1) ?v1)) :pattern ((lappend$c ?v0 ?v1)))) :named a74))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (! (=> (lnull$a ?v0) (= (lappend$ ?v0 ?v1) ?v1)) :pattern ((lappend$ ?v0 ?v1)))) :named a75))
(check-sat)
;(get-unsat-core)
