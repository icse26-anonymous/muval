; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 348
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort C$ 0)
(declare-sort D$ 0)
(declare-sort Unit$ 0)
(declare-sort A_set$ 0)
(declare-sort C_set$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_c_fun$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort C_bool_fun$ 0)
(declare-sort A_a_set_fun$ 0)
(declare-sort C_c_set_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_set_bool_fun$ 0)
(declare-sort C_set_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun$ 0)
(declare-sort A_c_bool_fun_fun$ 0)
(declare-sort A_c_fun_bool_fun$ 0)
(declare-sort B_d_bool_fun_fun$ 0)
(declare-sort C_a_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort C_bool_fun_bool_fun$ 0)
(declare-sort C_c_set_fun_bool_fun$ 0)
(declare-sort A_a_set_fun_a_set_fun$ 0)
(declare-sort C_c_set_fun_c_set_fun$ 0)
(declare-sort Unit_a_b_prod_sum_set$ 0)
(declare-sort Unit_c_d_prod_sum_set$ 0)
(declare-sort Bool_bool_bool_fun_fun$ 0)
(declare-sort A_set_a_set_bool_fun_fun$ 0)
(declare-sort A_set_c_set_bool_fun_fun$ 0)
(declare-sort C_set_a_set_bool_fun_fun$ 0)
(declare-sort C_set_c_set_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_fun$ 0)
(declare-sort A_c_bool_fun_fun_bool_fun$ 0)
(declare-sort C_bool_fun_a_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_bool_fun$ 0)
(declare-sort Unit_c_d_prod_sum_bool_fun$ 0)
(declare-sort A_a_a_set_fun_a_set_fun_fun$ 0)
(declare-sort C_c_c_set_fun_c_set_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_a_set_fun$ 0)
(declare-sort Unit_c_d_prod_sum_c_set_fun$ 0)
(declare-sort A_a_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_a_c_fun_bool_fun_fun$ 0)
(declare-sort C_a_fun_c_c_fun_bool_fun_fun$ 0)
(declare-sort C_c_fun_c_c_fun_bool_fun_fun$ 0)
(declare-sort Unit_c_d_prod_sum_set_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_c_bool_fun_fun$ 0)
(declare-sort A_set_a_a_set_fun_a_set_fun_fun$ 0)
(declare-sort A_set_a_c_set_fun_c_set_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_c_bool_fun_fun$ 0)
(declare-sort C_set_c_a_set_fun_a_set_fun_fun$ 0)
(declare-sort C_set_c_c_set_fun_c_set_fun_fun$ 0)
(declare-sort C_unit_c_d_prod_sum_bool_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_a_bool_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_c_bool_fun_fun$ 0)
(declare-sort Unit_c_d_prod_sum_a_bool_fun_fun$ 0)
(declare-sort Unit_c_d_prod_sum_c_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_c_bool_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_a_bool_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_set_fun_a_a_set_fun_bool_fun_fun$ 0)
(declare-sort A_a_set_fun_a_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_a_set_fun_c_a_set_fun_bool_fun_fun$ 0)
(declare-sort A_a_set_fun_c_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_c_set_fun_a_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_c_set_fun_c_c_set_fun_bool_fun_fun$ 0)
(declare-sort C_a_set_fun_c_a_set_fun_bool_fun_fun$ 0)
(declare-sort C_a_set_fun_c_c_set_fun_bool_fun_fun$ 0)
(declare-sort C_c_set_fun_a_a_set_fun_bool_fun_fun$ 0)
(declare-sort Unit_c_d_prod_sum_c_set_fun_bool_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_c_bool_fun_fun_c_bool_fun_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_a_fun_bool_fun_fun$ 0)
(declare-sort C_c_c_bool_fun_fun_c_bool_fun_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_a_set_fun_a_set_fun$ 0)
(declare-sort Unit_c_d_prod_sum_c_set_fun_c_set_fun$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_bool_fun_fun$ 0)
(declare-sort A_set_bool_fun_a_set_bool_fun_bool_fun_fun$ 0)
(declare-sort A_set_bool_fun_c_set_bool_fun_bool_fun_fun$ 0)
(declare-sort C_set_bool_fun_a_set_bool_fun_bool_fun_fun$ 0)
(declare-sort C_set_bool_fun_c_set_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$ 0)
(declare-sort C_a_bool_fun_fun_c_set_a_set_bool_fun_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort C_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_a_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_c_bool_fun_c_a_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_set_fun_a_set_fun_a_a_set_fun_a_set_fun_bool_fun_fun$ 0)
(declare-sort A_a_set_fun_a_set_fun_a_c_set_fun_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_a_set_fun_a_set_fun_c_a_set_fun_a_set_fun_bool_fun_fun$ 0)
(declare-sort A_a_set_fun_a_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_c_set_fun_c_set_fun_a_c_set_fun_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_c_set_fun_c_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$ 0)
(declare-sort C_a_set_fun_a_set_fun_c_a_set_fun_a_set_fun_bool_fun_fun$ 0)
(declare-sort C_a_set_fun_a_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$ 0)
(declare-sort C_c_set_fun_c_set_fun_a_a_set_fun_a_set_fun_bool_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_set_unit_c_d_prod_sum_set_bool_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_unit_a_b_prod_sum_a_set_fun_a_set_fun_fun$ 0)
(declare-sort Unit_c_d_prod_sum_unit_c_d_prod_sum_c_set_fun_c_set_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort A_set_a_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_set_a_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_set_a_set_bool_fun_fun_c_set_a_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_set_a_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_set_c_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_set_c_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_set_c_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_set_a_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_set_c_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_set_c_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_set_unit_a_b_prod_sum_a_set_fun_a_set_fun_fun$ 0)
(declare-sort Unit_c_d_prod_sum_set_unit_c_d_prod_sum_c_set_fun_c_set_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_bool_fun_a_c_bool_fun_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_a_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_c_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_a_bool_fun_fun_a_c_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ 0)
(declare-sort C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_a_set_fun_unit_c_d_prod_sum_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun_c_c_bool_fun_fun_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_c_bool_fun_fun_a_c_bool_fun_fun_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_c_a_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_c_c_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_a_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_c_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Unit_a_b_prod_sum_a_set_fun_a_set_fun_unit_c_d_prod_sum_c_set_fun_c_set_fun_bool_fun_fun$ 0)
(declare-sort A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-datatypes () ((A_b_prod$ (pair$ (fst$ A$) (snd$ B$)))
  (Unit_a_b_prod_sum$ (inl$ (projl$ Unit$)) (inr$ (projr$ A_b_prod$)))
  (C_d_prod$ (pair$a (fst$a C$) (snd$a D$)))
  (Unit_c_d_prod_sum$ (inl$a (projl$a Unit$)) (inr$a (projr$a C_d_prod$)))))
(declare-fun a$ () A_c_bool_fun_fun$)
(declare-fun b$ () B_d_bool_fun_fun$)
(declare-fun uu$ () A_a_bool_fun_fun$)
(declare-fun uua$ () A_set_a_set_bool_fun_fun$)
(declare-fun uub$ () C_c_bool_fun_fun$)
(declare-fun uuc$ () C_set_c_set_bool_fun_fun$)
(declare-fun uud$ () A_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun uue$ () A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$)
(declare-fun uuf$ () A_c_fun_a_c_fun_bool_fun_fun$)
(declare-fun uug$ () Bool_bool_bool_fun_fun$)
(declare-fun uuh$ () C_bool_fun_c_bool_fun_bool_fun_fun$)
(declare-fun uui$ () A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$)
(declare-fun uuj$ () C_c_bool_fun_bool_fun_fun$)
(declare-fun uuk$ () A_a_bool_fun_bool_fun_fun$)
(declare-fun uul$ () A_a_a_set_fun_a_set_fun_fun$)
(declare-fun uum$ () C_c_c_set_fun_c_set_fun_fun$)
(declare-fun uun$ () A_a_a_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun uuo$ () C_c_c_bool_fun_fun_c_bool_fun_fun_fun$)
(declare-fun uup$ () A_a_c_bool_fun_fun_c_bool_fun_fun_fun$)
(declare-fun uuq$ () Unit_a_b_prod_sum_unit_a_b_prod_sum_a_set_fun_a_set_fun_fun$)
(declare-fun uur$ () Unit_c_d_prod_sum_unit_c_d_prod_sum_c_set_fun_c_set_fun_fun$)
(declare-fun bind$ () A_set_a_a_set_fun_a_set_fun_fun$)
(declare-fun bind$a () C_set_c_c_set_fun_c_set_fun_fun$)
(declare-fun bind$b () Unit_a_b_prod_sum_set_unit_a_b_prod_sum_a_set_fun_a_set_fun_fun$)
(declare-fun bind$c () Unit_c_d_prod_sum_set_unit_c_d_prod_sum_c_set_fun_c_set_fun_fun$)
(declare-fun bind$d () C_set_c_a_set_fun_a_set_fun_fun$)
(declare-fun bind$e () A_set_a_c_set_fun_c_set_fun_fun$)
(declare-fun member$ (A$ A_set$) Bool)
(declare-fun fun_app$ (Bool_bool_fun$ Bool) Bool)
(declare-fun member$a (C$ C_set$) Bool)
(declare-fun member$b (Unit_a_b_prod_sum$ Unit_a_b_prod_sum_set$) Bool)
(declare-fun member$c (Unit_c_d_prod_sum$ Unit_c_d_prod_sum_set$) Bool)
(declare-fun rel_fun$ (Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$ A_set_c_set_bool_fun_fun$) Unit_a_b_prod_sum_a_set_fun_unit_c_d_prod_sum_c_set_fun_bool_fun_fun$)
(declare-fun rel_set$ () A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$)
(declare-fun fun_app$a (Bool_bool_bool_fun_fun$ Bool) Bool_bool_fun$)
(declare-fun fun_app$b (C_set_bool_fun$ C_set$) Bool)
(declare-fun fun_app$c (C_set_c_set_bool_fun_fun$ C_set$) C_set_bool_fun$)
(declare-fun fun_app$d (A_set_bool_fun$ A_set$) Bool)
(declare-fun fun_app$e (A_set_a_set_bool_fun_fun$ A_set$) A_set_bool_fun$)
(declare-fun fun_app$f (C_bool_fun_bool_fun$ C_bool_fun$) Bool)
(declare-fun fun_app$g (C_bool_fun_c_bool_fun_bool_fun_fun$ C_bool_fun$) C_bool_fun_bool_fun$)
(declare-fun fun_app$h (A_bool_fun_bool_fun$ A_bool_fun$) Bool)
(declare-fun fun_app$i (A_bool_fun_a_bool_fun_bool_fun_fun$ A_bool_fun$) A_bool_fun_bool_fun$)
(declare-fun fun_app$j (A_c_bool_fun_fun_bool_fun$ A_c_bool_fun_fun$) Bool)
(declare-fun fun_app$k (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun$) A_c_bool_fun_fun_bool_fun$)
(declare-fun fun_app$l (A_a_bool_fun_fun_bool_fun$ A_a_bool_fun_fun$) Bool)
(declare-fun fun_app$m (A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun$) A_a_bool_fun_fun_bool_fun$)
(declare-fun fun_app$n (A_c_fun_bool_fun$ A_c_fun$) Bool)
(declare-fun fun_app$o (A_c_fun_a_c_fun_bool_fun_fun$ A_c_fun$) A_c_fun_bool_fun$)
(declare-fun fun_app$p (C_bool_fun$ C$) Bool)
(declare-fun fun_app$q (C_c_bool_fun_fun$ C$) C_bool_fun$)
(declare-fun fun_app$r (A_bool_fun$ A$) Bool)
(declare-fun fun_app$s (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$t (Unit_c_d_prod_sum_c_set_fun_c_set_fun$ Unit_c_d_prod_sum_c_set_fun$) C_set$)
(declare-fun fun_app$u (Unit_c_d_prod_sum_unit_c_d_prod_sum_c_set_fun_c_set_fun_fun$ Unit_c_d_prod_sum$) Unit_c_d_prod_sum_c_set_fun_c_set_fun$)
(declare-fun fun_app$v (Unit_c_d_prod_sum_c_set_fun$ Unit_c_d_prod_sum$) C_set$)
(declare-fun fun_app$w (Unit_a_b_prod_sum_a_set_fun_a_set_fun$ Unit_a_b_prod_sum_a_set_fun$) A_set$)
(declare-fun fun_app$x (Unit_a_b_prod_sum_unit_a_b_prod_sum_a_set_fun_a_set_fun_fun$ Unit_a_b_prod_sum$) Unit_a_b_prod_sum_a_set_fun_a_set_fun$)
(declare-fun fun_app$y (Unit_a_b_prod_sum_a_set_fun$ Unit_a_b_prod_sum$) A_set$)
(declare-fun fun_app$z (C_c_bool_fun_bool_fun_fun$ C$) C_bool_fun_bool_fun$)
(declare-fun rel_fun$a (C_c_bool_fun_fun$) Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$b (A_c_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_c_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$c (A_c_bool_fun_fun$ A_set_c_set_bool_fun_fun$) A_a_set_fun_c_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$d (A_c_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$e (A_a_bool_fun_fun$) C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$f (A_a_bool_fun_fun$ C_c_bool_fun_fun$) A_c_fun_a_c_fun_bool_fun_fun$)
(declare-fun rel_fun$g (A_a_bool_fun_fun$ A_c_bool_fun_fun$) A_a_fun_a_c_fun_bool_fun_fun$)
(declare-fun rel_fun$h (A_a_bool_fun_fun$) C_bool_fun_a_bool_fun_fun_a_c_bool_fun_fun_a_a_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$i (A_a_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$j (A_a_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$k (A_a_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$l (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$m (Bool_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$) Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$n (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool_bool_fun_bool_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$o (C_bool_fun_c_bool_fun_bool_fun_fun$ C_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$) C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$p (C_bool_fun_c_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$q (C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$r (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_bool_fun_a_c_bool_fun_fun_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$s (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_c_bool_fun_fun_bool_fun_a_c_bool_fun_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$t (Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_c_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$ Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$u (Bool_bool_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$v (C_bool_fun_c_bool_fun_bool_fun_fun$ C_c_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$) C_bool_fun_c_c_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$w (C_c_fun_c_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_c_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$x (C_c_bool_fun_fun$ C_c_bool_fun_fun$) C_c_fun_c_c_fun_bool_fun_fun$)
(declare-fun rel_fun$y (C_c_bool_fun_fun$) Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$z (C_bool_fun_c_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_c_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_set$a () A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$)
(declare-fun rel_set$b () C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$)
(declare-fun rel_set$c () C_a_bool_fun_fun_c_set_a_set_bool_fun_fun_fun$)
(declare-fun rel_set$d (Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) Unit_a_b_prod_sum_set_unit_c_d_prod_sum_set_bool_fun_fun$)
(declare-fun rel_set$e (Unit_a_b_prod_sum_a_bool_fun_fun$ Unit_a_b_prod_sum_set$ A_set$) Bool)
(declare-fun rel_set$f (Unit_a_b_prod_sum_c_bool_fun_fun$ Unit_a_b_prod_sum_set$ C_set$) Bool)
(declare-fun rel_set$g (Unit_c_d_prod_sum_a_bool_fun_fun$ Unit_c_d_prod_sum_set$ A_set$) Bool)
(declare-fun rel_set$h (Unit_c_d_prod_sum_c_bool_fun_fun$ Unit_c_d_prod_sum_set$ C_set$) Bool)
(declare-fun rel_set$i (C_unit_c_d_prod_sum_bool_fun_fun$ C_set$ Unit_c_d_prod_sum_set$) Bool)
(declare-fun fun_app$aa (C_c_set_fun_c_set_fun$ C_c_set_fun$) C_set$)
(declare-fun fun_app$ab (C_c_c_set_fun_c_set_fun_fun$ C$) C_c_set_fun_c_set_fun$)
(declare-fun fun_app$ac (C_c_set_fun$ C$) C_set$)
(declare-fun fun_app$ad (C_c_bool_fun_fun_c_bool_fun_fun$ C_c_bool_fun_fun$) C_bool_fun$)
(declare-fun fun_app$ae (C_c_c_bool_fun_fun_c_bool_fun_fun_fun$ C$) C_c_bool_fun_fun_c_bool_fun_fun$)
(declare-fun fun_app$af (A_a_bool_fun_bool_fun_fun$ A$) A_bool_fun_bool_fun$)
(declare-fun fun_app$ag (A_a_set_fun_a_set_fun$ A_a_set_fun$) A_set$)
(declare-fun fun_app$ah (A_a_a_set_fun_a_set_fun_fun$ A$) A_a_set_fun_a_set_fun$)
(declare-fun fun_app$ai (A_a_set_fun$ A$) A_set$)
(declare-fun fun_app$aj (A_c_bool_fun_fun_c_bool_fun_fun$ A_c_bool_fun_fun$) C_bool_fun$)
(declare-fun fun_app$ak (A_a_c_bool_fun_fun_c_bool_fun_fun_fun$ A$) A_c_bool_fun_fun_c_bool_fun_fun$)
(declare-fun fun_app$al (A_c_bool_fun_fun$ A$) C_bool_fun$)
(declare-fun fun_app$am (A_a_bool_fun_fun_a_bool_fun_fun$ A_a_bool_fun_fun$) A_bool_fun$)
(declare-fun fun_app$an (A_a_a_bool_fun_fun_a_bool_fun_fun_fun$ A$) A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun fun_app$ao (Unit_c_d_prod_sum_c_set_fun_bool_fun$ Unit_c_d_prod_sum_c_set_fun$) Bool)
(declare-fun fun_app$ap (Unit_a_b_prod_sum_a_set_fun_unit_c_d_prod_sum_c_set_fun_bool_fun_fun$ Unit_a_b_prod_sum_a_set_fun$) Unit_c_d_prod_sum_c_set_fun_bool_fun$)
(declare-fun fun_app$aq (A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$ A_c_bool_fun_fun$) A_set_c_set_bool_fun_fun$)
(declare-fun fun_app$ar (Unit_c_d_prod_sum_bool_fun$ Unit_c_d_prod_sum$) Bool)
(declare-fun fun_app$as (Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$ Unit_a_b_prod_sum$) Unit_c_d_prod_sum_bool_fun$)
(declare-fun fun_app$at (A_set_c_set_bool_fun_fun$ A_set$) C_set_bool_fun$)
(declare-fun fun_app$au (Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_c_bool_fun_bool_fun_fun$)
(declare-fun fun_app$av (A_bool_fun_c_bool_fun_bool_fun_fun$ A_bool_fun$) C_bool_fun_bool_fun$)
(declare-fun fun_app$aw (C_c_set_fun_bool_fun$ C_c_set_fun$) Bool)
(declare-fun fun_app$ax (A_a_set_fun_c_c_set_fun_bool_fun_fun$ A_a_set_fun$) C_c_set_fun_bool_fun$)
(declare-fun fun_app$ay (C_c_bool_fun_fun_bool_fun$ C_c_bool_fun_fun$) Bool)
(declare-fun fun_app$az (A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun$) C_c_bool_fun_fun_bool_fun$)
(declare-fun fun_app$ba (C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$)
(declare-fun fun_app$bb (A_c_fun$ A$) C$)
(declare-fun fun_app$bc (A_a_fun$ A$) A$)
(declare-fun fun_app$bd (A_a_fun_a_c_fun_bool_fun_fun$ A_a_fun$) A_c_fun_bool_fun$)
(declare-fun fun_app$be (C_bool_fun_a_bool_fun_fun$ C_bool_fun$) A_bool_fun$)
(declare-fun fun_app$bf (A_a_fun_bool_fun$ A_a_fun$) Bool)
(declare-fun fun_app$bg (A_c_bool_fun_fun_a_a_fun_bool_fun_fun$ A_c_bool_fun_fun$) A_a_fun_bool_fun$)
(declare-fun fun_app$bh (C_bool_fun_a_bool_fun_fun_a_c_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ C_bool_fun_a_bool_fun_fun$) A_c_bool_fun_fun_a_a_fun_bool_fun_fun$)
(declare-fun fun_app$bi (A_a_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun$) A_c_bool_fun_fun_bool_fun$)
(declare-fun fun_app$bj (A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$ A_a_bool_fun_fun$) A_set_a_set_bool_fun_fun$)
(declare-fun fun_app$bk (C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$ C_c_bool_fun_fun$) C_set_c_set_bool_fun_fun$)
(declare-fun fun_app$bl (C_a_bool_fun_fun$ C$) A_bool_fun$)
(declare-fun fun_app$bm (C_set_a_set_bool_fun_fun$ C_set$) A_set_bool_fun$)
(declare-fun fun_app$bn (C_a_bool_fun_fun_c_set_a_set_bool_fun_fun_fun$ C_a_bool_fun_fun$) C_set_a_set_bool_fun_fun$)
(declare-fun fun_app$bo (Unit_c_d_prod_sum_set_bool_fun$ Unit_c_d_prod_sum_set$) Bool)
(declare-fun fun_app$bp (Unit_a_b_prod_sum_set_unit_c_d_prod_sum_set_bool_fun_fun$ Unit_a_b_prod_sum_set$) Unit_c_d_prod_sum_set_bool_fun$)
(declare-fun fun_app$bq (Unit_a_b_prod_sum_a_bool_fun_fun$ Unit_a_b_prod_sum$) A_bool_fun$)
(declare-fun fun_app$br (Unit_a_b_prod_sum_c_bool_fun_fun$ Unit_a_b_prod_sum$) C_bool_fun$)
(declare-fun fun_app$bs (Unit_c_d_prod_sum_a_bool_fun_fun$ Unit_c_d_prod_sum$) A_bool_fun$)
(declare-fun fun_app$bt (Unit_c_d_prod_sum_c_bool_fun_fun$ Unit_c_d_prod_sum$) C_bool_fun$)
(declare-fun fun_app$bu (C_unit_c_d_prod_sum_bool_fun_fun$ C$) Unit_c_d_prod_sum_bool_fun$)
(declare-fun rel_fun$aa (C_bool_fun_c_bool_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) C_bool_fun_c_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ab (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_a_c_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ac (A_c_fun_a_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ad (A_a_bool_fun_fun$) C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$ae (Bool_a_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_a_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ Bool_a_bool_fun_fun_c_bool_fun_c_a_fun_bool_fun_fun_fun$ Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$af (Bool_bool_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$) Bool_a_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ag (C_bool_fun_c_bool_fun_bool_fun_fun$ C_a_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$) C_bool_fun_c_a_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ah (C_a_fun_c_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_a_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ai (C_c_bool_fun_fun$ A_c_bool_fun_fun$) C_a_fun_c_c_fun_bool_fun_fun$)
(declare-fun rel_fun$aj (C_c_bool_fun_fun$) Bool_a_bool_fun_fun_c_bool_fun_c_a_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$ak (C_bool_fun_a_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_a_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ C_bool_fun_a_bool_fun_fun_a_c_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$al (C_bool_fun_c_bool_fun_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$) C_bool_fun_a_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$am (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_a_a_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$an (A_a_fun_a_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ao (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_set_c_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$ A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ap (A_set_a_set_bool_fun_fun$ C_set_bool_fun_c_set_bool_fun_bool_fun_fun$) A_set_c_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$aq (C_set_c_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_set_bool_fun_c_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ar (A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$ C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$as (A_set_c_set_bool_fun_fun$ A_set_bool_fun_c_set_bool_fun_bool_fun_fun$) A_set_a_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$at (A_set_c_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_set_bool_fun_c_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$au (C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ C_set_c_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$ A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$av (C_a_bool_fun_fun$ C_bool_fun_a_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$aw (C_a_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_a_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ax (C_set_a_set_bool_fun_fun$ C_set_bool_fun_a_set_bool_fun_bool_fun_fun$) C_set_c_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ay (C_set_a_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_set_bool_fun_a_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$az (C_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ C_set_c_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$ A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ba (C_a_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bb (C_set_a_set_bool_fun_fun$ C_set_bool_fun_c_set_bool_fun_bool_fun_fun$) C_set_c_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bc (A_a_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun_c_set_a_set_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$ C_a_bool_fun_fun_c_set_a_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bd (A_c_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$be (A_set_c_set_bool_fun_fun$ A_set_bool_fun_a_set_bool_fun_bool_fun_fun$) A_set_a_set_bool_fun_fun_c_set_a_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bf (A_set_a_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_set_bool_fun_a_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$bg (A_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_set_c_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$ C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bh (A_c_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bi (A_set_c_set_bool_fun_fun$ C_set_bool_fun_c_set_bool_fun_bool_fun_fun$) A_set_c_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bj (A_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ A_set_c_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$ A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bk (A_a_bool_fun_fun$ C_bool_fun_a_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bl (A_set_a_set_bool_fun_fun$ C_set_bool_fun_a_set_bool_fun_bool_fun_fun$) A_set_c_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bm (A_a_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$ A_c_bool_fun_fun_a_set_c_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bn (A_set_a_set_bool_fun_fun$ A_set_bool_fun_c_set_bool_fun_bool_fun_fun$) A_set_a_set_bool_fun_fun_a_set_c_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bo (A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$ A_a_bool_fun_fun_a_set_a_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bp (A_set_a_set_bool_fun_fun$ A_set_bool_fun_a_set_bool_fun_bool_fun_fun$) A_set_a_set_bool_fun_fun_a_set_a_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bq (C_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ C_set_a_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$ C_a_bool_fun_fun_c_set_a_set_bool_fun_fun_fun$ C_c_bool_fun_fun_c_set_c_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$br (C_c_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$) C_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bs (C_set_c_set_bool_fun_fun$ A_set_bool_fun_c_set_bool_fun_bool_fun_fun$) C_set_a_set_bool_fun_fun_c_set_c_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bt (C_c_bool_fun_fun$ C_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$ C_c_bool_fun_bool_fun_fun$ C_c_bool_fun_bool_fun_fun$) Bool)
(declare-fun rel_fun$bu (A_c_bool_fun_fun$ A_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$ A_a_bool_fun_bool_fun_fun$ C_c_bool_fun_bool_fun_fun$) Bool)
(declare-fun rel_fun$bv (A_bool_fun_c_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$bw (A_c_bool_fun_fun$ A_a_set_fun_a_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$ A_a_a_set_fun_a_set_fun_fun$ C_c_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$bx (A_a_set_fun_c_c_set_fun_bool_fun_fun$ A_set_c_set_bool_fun_fun$) A_a_set_fun_a_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$by (A_c_bool_fun_fun$ A_a_bool_fun_fun_a_bool_fun_fun_c_c_bool_fun_fun_c_bool_fun_fun_bool_fun_fun$ A_a_a_bool_fun_fun_a_bool_fun_fun_fun$ C_c_c_bool_fun_fun_c_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bz (A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$) A_a_bool_fun_fun_a_bool_fun_fun_c_c_bool_fun_fun_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ca (A_a_bool_fun_fun$ A_c_bool_fun_fun_c_bool_fun_fun_a_c_bool_fun_fun_c_bool_fun_fun_bool_fun_fun$ A_a_c_bool_fun_fun_c_bool_fun_fun_fun$ A_a_c_bool_fun_fun_c_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$cb (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) A_c_bool_fun_fun_c_bool_fun_fun_a_c_bool_fun_fun_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cc (Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$ Unit_a_b_prod_sum_a_set_fun_a_set_fun_unit_c_d_prod_sum_c_set_fun_c_set_fun_bool_fun_fun$ Unit_a_b_prod_sum_unit_a_b_prod_sum_a_set_fun_a_set_fun_fun$ Unit_c_d_prod_sum_unit_c_d_prod_sum_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$cd (Unit_a_b_prod_sum_a_set_fun_unit_c_d_prod_sum_c_set_fun_bool_fun_fun$ A_set_c_set_bool_fun_fun$) Unit_a_b_prod_sum_a_set_fun_a_set_fun_unit_c_d_prod_sum_c_set_fun_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$ce (A_set_c_set_bool_fun_fun$ A_a_set_fun_a_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$ A_set_a_a_set_fun_a_set_fun_fun$ C_set_c_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$cf (Unit_a_b_prod_sum_set_unit_c_d_prod_sum_set_bool_fun_fun$ Unit_a_b_prod_sum_a_set_fun_a_set_fun_unit_c_d_prod_sum_c_set_fun_c_set_fun_bool_fun_fun$ Unit_a_b_prod_sum_set_unit_a_b_prod_sum_a_set_fun_a_set_fun_fun$ Unit_c_d_prod_sum_set_unit_c_d_prod_sum_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$cg (C_set_a_set_bool_fun_fun$ C_c_set_fun_c_set_fun_a_a_set_fun_a_set_fun_bool_fun_fun$ C_set_c_c_set_fun_c_set_fun_fun$ A_set_a_a_set_fun_a_set_fun_fun$) Bool)
(declare-fun rel_fun$ch (C_c_set_fun_a_a_set_fun_bool_fun_fun$ C_set_a_set_bool_fun_fun$) C_c_set_fun_c_set_fun_a_a_set_fun_a_set_fun_bool_fun_fun$)
(declare-fun rel_fun$ci (C_a_bool_fun_fun$ C_set_a_set_bool_fun_fun$) C_c_set_fun_a_a_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cj (A_set_c_set_bool_fun_fun$ A_a_set_fun_a_set_fun_c_a_set_fun_a_set_fun_bool_fun_fun$ A_set_a_a_set_fun_a_set_fun_fun$ C_set_c_a_set_fun_a_set_fun_fun$) Bool)
(declare-fun rel_fun$ck (A_a_set_fun_c_a_set_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun$) A_a_set_fun_a_set_fun_c_a_set_fun_a_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cl (A_c_bool_fun_fun$ A_set_a_set_bool_fun_fun$) A_a_set_fun_c_a_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cm (A_set_c_set_bool_fun_fun$ A_c_set_fun_c_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$ A_set_a_c_set_fun_c_set_fun_fun$ C_set_c_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$cn (A_c_set_fun_c_c_set_fun_bool_fun_fun$ C_set_c_set_bool_fun_fun$) A_c_set_fun_c_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$co (A_c_bool_fun_fun$ C_set_c_set_bool_fun_fun$) A_c_set_fun_c_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cp (A_set_a_set_bool_fun_fun$ A_a_set_fun_a_set_fun_a_c_set_fun_c_set_fun_bool_fun_fun$ A_set_a_a_set_fun_a_set_fun_fun$ A_set_a_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$cq (A_a_set_fun_a_c_set_fun_bool_fun_fun$ A_set_c_set_bool_fun_fun$) A_a_set_fun_a_set_fun_a_c_set_fun_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cr (A_a_bool_fun_fun$ A_set_c_set_bool_fun_fun$) A_a_set_fun_a_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cs (A_set_a_set_bool_fun_fun$ A_a_set_fun_a_set_fun_a_a_set_fun_a_set_fun_bool_fun_fun$ A_set_a_a_set_fun_a_set_fun_fun$ A_set_a_a_set_fun_a_set_fun_fun$) Bool)
(declare-fun rel_fun$ct (A_a_set_fun_a_a_set_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun$) A_a_set_fun_a_set_fun_a_a_set_fun_a_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cu (A_a_bool_fun_fun$ A_set_a_set_bool_fun_fun$) A_a_set_fun_a_a_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cv (A_set_a_set_bool_fun_fun$ A_c_set_fun_c_set_fun_a_c_set_fun_c_set_fun_bool_fun_fun$ A_set_a_c_set_fun_c_set_fun_fun$ A_set_a_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$cw (A_c_set_fun_a_c_set_fun_bool_fun_fun$ C_set_c_set_bool_fun_fun$) A_c_set_fun_c_set_fun_a_c_set_fun_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cx (A_a_bool_fun_fun$ C_set_c_set_bool_fun_fun$) A_c_set_fun_a_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cy (C_set_c_set_bool_fun_fun$ C_a_set_fun_a_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$ C_set_c_a_set_fun_a_set_fun_fun$ C_set_c_c_set_fun_c_set_fun_fun$) Bool)
(declare-fun rel_fun$cz (C_a_set_fun_c_c_set_fun_bool_fun_fun$ A_set_c_set_bool_fun_fun$) C_a_set_fun_a_set_fun_c_c_set_fun_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$da (C_c_bool_fun_fun$ A_set_c_set_bool_fun_fun$) C_a_set_fun_c_c_set_fun_bool_fun_fun$)
(declare-fun rel_fun$db (C_set_c_set_bool_fun_fun$ C_a_set_fun_a_set_fun_c_a_set_fun_a_set_fun_bool_fun_fun$ C_set_c_a_set_fun_a_set_fun_fun$ C_set_c_a_set_fun_a_set_fun_fun$) Bool)
(declare-fun rel_fun$dc (C_a_set_fun_c_a_set_fun_bool_fun_fun$ A_set_a_set_bool_fun_fun$) C_a_set_fun_a_set_fun_c_a_set_fun_a_set_fun_bool_fun_fun$)
(declare-fun rel_fun$dd (C_c_bool_fun_fun$ A_set_a_set_bool_fun_fun$) C_a_set_fun_c_a_set_fun_bool_fun_fun$)
(declare-fun rel_pre_llist$ (A_c_bool_fun_fun$ B_d_bool_fun_fun$) Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$)
(declare-fun set1_pre_llist$ () Unit_a_b_prod_sum_a_set_fun$)
(declare-fun set1_pre_llist$a () Unit_c_d_prod_sum_c_set_fun$)
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (! (= (fun_app$ (fun_app$a uug$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uug$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 C_set$) (?v1 C_set$)) (! (= (fun_app$b (fun_app$c uuc$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$b (fun_app$c uuc$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$)) (! (= (fun_app$d (fun_app$e uua$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$d (fun_app$e uua$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 C_bool_fun$) (?v1 C_bool_fun$)) (! (= (fun_app$f (fun_app$g uuh$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$f (fun_app$g uuh$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (! (= (fun_app$h (fun_app$i uud$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$h (fun_app$i uud$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (! (= (fun_app$j (fun_app$k uui$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$j (fun_app$k uui$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (! (= (fun_app$l (fun_app$m uue$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$l (fun_app$m uue$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 A_c_fun$) (?v1 A_c_fun$)) (! (= (fun_app$n (fun_app$o uuf$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$n (fun_app$o uuf$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 C$) (?v1 C$)) (! (= (fun_app$p (fun_app$q uub$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$p (fun_app$q uub$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$r (fun_app$s uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$r (fun_app$s uu$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 Unit_c_d_prod_sum$) (?v1 Unit_c_d_prod_sum_c_set_fun$)) (! (= (fun_app$t (fun_app$u uur$ ?v0) ?v1) (fun_app$v ?v1 ?v0)) :pattern ((fun_app$t (fun_app$u uur$ ?v0) ?v1)))) :named a10))
(assert (! (forall ((?v0 Unit_a_b_prod_sum$) (?v1 Unit_a_b_prod_sum_a_set_fun$)) (! (= (fun_app$w (fun_app$x uuq$ ?v0) ?v1) (fun_app$y ?v1 ?v0)) :pattern ((fun_app$w (fun_app$x uuq$ ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 C$) (?v1 C_bool_fun$)) (! (= (fun_app$f (fun_app$z uuj$ ?v0) ?v1) (fun_app$p ?v1 ?v0)) :pattern ((fun_app$f (fun_app$z uuj$ ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 C$) (?v1 C_c_set_fun$)) (! (= (fun_app$aa (fun_app$ab uum$ ?v0) ?v1) (fun_app$ac ?v1 ?v0)) :pattern ((fun_app$aa (fun_app$ab uum$ ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 C$) (?v1 C_c_bool_fun_fun$)) (! (= (fun_app$ad (fun_app$ae uuo$ ?v0) ?v1) (fun_app$q ?v1 ?v0)) :pattern ((fun_app$ad (fun_app$ae uuo$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 A$) (?v1 A_bool_fun$)) (! (= (fun_app$h (fun_app$af uuk$ ?v0) ?v1) (fun_app$r ?v1 ?v0)) :pattern ((fun_app$h (fun_app$af uuk$ ?v0) ?v1)))) :named a15))
(assert (! (forall ((?v0 A$) (?v1 A_a_set_fun$)) (! (= (fun_app$ag (fun_app$ah uul$ ?v0) ?v1) (fun_app$ai ?v1 ?v0)) :pattern ((fun_app$ag (fun_app$ah uul$ ?v0) ?v1)))) :named a16))
(assert (! (forall ((?v0 A$) (?v1 A_c_bool_fun_fun$)) (! (= (fun_app$aj (fun_app$ak uup$ ?v0) ?v1) (fun_app$al ?v1 ?v0)) :pattern ((fun_app$aj (fun_app$ak uup$ ?v0) ?v1)))) :named a17))
(assert (! (forall ((?v0 A$) (?v1 A_a_bool_fun_fun$)) (! (= (fun_app$am (fun_app$an uun$ ?v0) ?v1) (fun_app$s ?v1 ?v0)) :pattern ((fun_app$am (fun_app$an uun$ ?v0) ?v1)))) :named a18))
(assert (! (not (fun_app$ao (fun_app$ap (rel_fun$ (rel_pre_llist$ a$ b$) (fun_app$aq rel_set$ a$)) set1_pre_llist$) set1_pre_llist$a)) :named a19))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 Unit_a_b_prod_sum_a_set_fun$) (?v3 Unit_c_d_prod_sum_c_set_fun$)) (=> (forall ((?v4 Unit_a_b_prod_sum$) (?v5 Unit_c_d_prod_sum$)) (=> (fun_app$ar (fun_app$as ?v0 ?v4) ?v5) (fun_app$b (fun_app$at ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)))) (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3))) :named a20))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 C_bool_fun$) (?v3 C_bool_fun$)) (=> (forall ((?v4 C$) (?v5 C$)) (=> (fun_app$p (fun_app$q ?v0 ?v4) ?v5) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) (fun_app$f (fun_app$g (fun_app$au (rel_fun$a ?v0) ?v1) ?v2) ?v3))) :named a21))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 A_bool_fun$) (?v3 C_bool_fun$)) (=> (forall ((?v4 A$) (?v5 C$)) (=> (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) (fun_app$f (fun_app$av (rel_fun$b ?v0 ?v1) ?v2) ?v3))) :named a22))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 A_a_set_fun$) (?v3 C_c_set_fun$)) (=> (forall ((?v4 A$) (?v5 C$)) (=> (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (fun_app$b (fun_app$at ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)))) (fun_app$aw (fun_app$ax (rel_fun$c ?v0 ?v1) ?v2) ?v3))) :named a23))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 C_c_bool_fun_fun$)) (=> (forall ((?v4 A$) (?v5 C$)) (=> (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (fun_app$f (fun_app$av ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)))) (fun_app$ay (fun_app$az (rel_fun$d ?v0 ?v1) ?v2) ?v3))) :named a24))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_c_bool_fun_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) (fun_app$j (fun_app$k (fun_app$ba (rel_fun$e ?v0) ?v1) ?v2) ?v3))) :named a25))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_fun$) (?v3 A_c_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$p (fun_app$q ?v1 (fun_app$bb ?v2 ?v4)) (fun_app$bb ?v3 ?v5)))) (fun_app$n (fun_app$o (rel_fun$f ?v0 ?v1) ?v2) ?v3))) :named a26))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_c_bool_fun_fun$) (?v2 A_a_fun$) (?v3 A_c_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$p (fun_app$al ?v1 (fun_app$bc ?v2 ?v4)) (fun_app$bb ?v3 ?v5)))) (fun_app$n (fun_app$bd (rel_fun$g ?v0 ?v1) ?v2) ?v3))) :named a27))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_a_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_a_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$r (fun_app$be ?v1 (fun_app$al ?v2 ?v4)) (fun_app$bc ?v3 ?v5)))) (fun_app$bf (fun_app$bg (fun_app$bh (rel_fun$h ?v0) ?v1) ?v2) ?v3))) :named a28))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 A_c_bool_fun_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$f (fun_app$av ?v1 (fun_app$s ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) (fun_app$j (fun_app$bi (rel_fun$i ?v0 ?v1) ?v2) ?v3))) :named a29))
(assert (! (= (fun_app$bj rel_set$a uu$) uua$) :named a30))
(assert (! (= (fun_app$bk rel_set$b uub$) uuc$) :named a31))
(assert (! (forall ((?v0 A_set$) (?v1 C_set$) (?v2 A_c_bool_fun_fun$)) (=> (and (forall ((?v3 A$)) (=> (member$ ?v3 ?v0) (exists ((?v4 C$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$al ?v2 ?v3) ?v4))))) (forall ((?v3 C$)) (=> (member$a ?v3 ?v1) (exists ((?v4 A$)) (and (member$ ?v4 ?v0) (fun_app$p (fun_app$al ?v2 ?v4) ?v3)))))) (fun_app$b (fun_app$at (fun_app$aq rel_set$ ?v2) ?v0) ?v1))) :named a32))
(assert (! (forall ((?v0 C_set$) (?v1 A_set$) (?v2 C_a_bool_fun_fun$)) (=> (and (forall ((?v3 C$)) (=> (member$a ?v3 ?v0) (exists ((?v4 A$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$bl ?v2 ?v3) ?v4))))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v1) (exists ((?v4 C$)) (and (member$a ?v4 ?v0) (fun_app$r (fun_app$bl ?v2 ?v4) ?v3)))))) (fun_app$d (fun_app$bm (fun_app$bn rel_set$c ?v2) ?v0) ?v1))) :named a33))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_a_bool_fun_fun$)) (=> (and (forall ((?v3 A$)) (=> (member$ ?v3 ?v0) (exists ((?v4 A$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$s ?v2 ?v3) ?v4))))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v1) (exists ((?v4 A$)) (and (member$ ?v4 ?v0) (fun_app$r (fun_app$s ?v2 ?v4) ?v3)))))) (fun_app$d (fun_app$e (fun_app$bj rel_set$a ?v2) ?v0) ?v1))) :named a34))
(assert (! (forall ((?v0 C_set$) (?v1 C_set$) (?v2 C_c_bool_fun_fun$)) (=> (and (forall ((?v3 C$)) (=> (member$a ?v3 ?v0) (exists ((?v4 C$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$q ?v2 ?v3) ?v4))))) (forall ((?v3 C$)) (=> (member$a ?v3 ?v1) (exists ((?v4 C$)) (and (member$a ?v4 ?v0) (fun_app$p (fun_app$q ?v2 ?v4) ?v3)))))) (fun_app$b (fun_app$c (fun_app$bk rel_set$b ?v2) ?v0) ?v1))) :named a35))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_set$) (?v1 Unit_c_d_prod_sum_set$) (?v2 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$)) (=> (and (forall ((?v3 Unit_a_b_prod_sum$)) (=> (member$b ?v3 ?v0) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$ar (fun_app$as ?v2 ?v3) ?v4))))) (forall ((?v3 Unit_c_d_prod_sum$)) (=> (member$c ?v3 ?v1) (exists ((?v4 Unit_a_b_prod_sum$)) (and (member$b ?v4 ?v0) (fun_app$ar (fun_app$as ?v2 ?v4) ?v3)))))) (fun_app$bo (fun_app$bp (rel_set$d ?v2) ?v0) ?v1))) :named a36))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_set$) (?v1 A_set$) (?v2 Unit_a_b_prod_sum_a_bool_fun_fun$)) (=> (and (forall ((?v3 Unit_a_b_prod_sum$)) (=> (member$b ?v3 ?v0) (exists ((?v4 A$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$bq ?v2 ?v3) ?v4))))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v1) (exists ((?v4 Unit_a_b_prod_sum$)) (and (member$b ?v4 ?v0) (fun_app$r (fun_app$bq ?v2 ?v4) ?v3)))))) (rel_set$e ?v2 ?v0 ?v1))) :named a37))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_set$) (?v1 C_set$) (?v2 Unit_a_b_prod_sum_c_bool_fun_fun$)) (=> (and (forall ((?v3 Unit_a_b_prod_sum$)) (=> (member$b ?v3 ?v0) (exists ((?v4 C$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$br ?v2 ?v3) ?v4))))) (forall ((?v3 C$)) (=> (member$a ?v3 ?v1) (exists ((?v4 Unit_a_b_prod_sum$)) (and (member$b ?v4 ?v0) (fun_app$p (fun_app$br ?v2 ?v4) ?v3)))))) (rel_set$f ?v2 ?v0 ?v1))) :named a38))
(assert (! (forall ((?v0 Unit_c_d_prod_sum_set$) (?v1 A_set$) (?v2 Unit_c_d_prod_sum_a_bool_fun_fun$)) (=> (and (forall ((?v3 Unit_c_d_prod_sum$)) (=> (member$c ?v3 ?v0) (exists ((?v4 A$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$bs ?v2 ?v3) ?v4))))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v1) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v0) (fun_app$r (fun_app$bs ?v2 ?v4) ?v3)))))) (rel_set$g ?v2 ?v0 ?v1))) :named a39))
(assert (! (forall ((?v0 Unit_c_d_prod_sum_set$) (?v1 C_set$) (?v2 Unit_c_d_prod_sum_c_bool_fun_fun$)) (=> (and (forall ((?v3 Unit_c_d_prod_sum$)) (=> (member$c ?v3 ?v0) (exists ((?v4 C$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$bt ?v2 ?v3) ?v4))))) (forall ((?v3 C$)) (=> (member$a ?v3 ?v1) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v0) (fun_app$p (fun_app$bt ?v2 ?v4) ?v3)))))) (rel_set$h ?v2 ?v0 ?v1))) :named a40))
(assert (! (forall ((?v0 C_set$) (?v1 Unit_c_d_prod_sum_set$) (?v2 C_unit_c_d_prod_sum_bool_fun_fun$)) (=> (and (forall ((?v3 C$)) (=> (member$a ?v3 ?v0) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$ar (fun_app$bu ?v2 ?v3) ?v4))))) (forall ((?v3 Unit_c_d_prod_sum$)) (=> (member$c ?v3 ?v1) (exists ((?v4 C$)) (and (member$a ?v4 ?v0) (fun_app$ar (fun_app$bu ?v2 ?v4) ?v3)))))) (rel_set$i ?v2 ?v0 ?v1))) :named a41))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set$) (?v2 C_set$) (?v3 C$)) (=> (and (fun_app$b (fun_app$at (fun_app$aq rel_set$ ?v0) ?v1) ?v2) (member$a ?v3 ?v2)) (exists ((?v4 A$)) (and (member$ ?v4 ?v1) (fun_app$p (fun_app$al ?v0 ?v4) ?v3))))) :named a42))
(assert (! (forall ((?v0 C_a_bool_fun_fun$) (?v1 C_set$) (?v2 A_set$) (?v3 A$)) (=> (and (fun_app$d (fun_app$bm (fun_app$bn rel_set$c ?v0) ?v1) ?v2) (member$ ?v3 ?v2)) (exists ((?v4 C$)) (and (member$a ?v4 ?v1) (fun_app$r (fun_app$bl ?v0 ?v4) ?v3))))) :named a43))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_set$) (?v2 A_set$) (?v3 A$)) (=> (and (fun_app$d (fun_app$e (fun_app$bj rel_set$a ?v0) ?v1) ?v2) (member$ ?v3 ?v2)) (exists ((?v4 A$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$s ?v0 ?v4) ?v3))))) :named a44))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 C_set$) (?v2 C_set$) (?v3 C$)) (=> (and (fun_app$b (fun_app$c (fun_app$bk rel_set$b ?v0) ?v1) ?v2) (member$a ?v3 ?v2)) (exists ((?v4 C$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$q ?v0 ?v4) ?v3))))) :named a45))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 Unit_a_b_prod_sum_set$) (?v2 Unit_c_d_prod_sum_set$) (?v3 Unit_c_d_prod_sum$)) (=> (and (fun_app$bo (fun_app$bp (rel_set$d ?v0) ?v1) ?v2) (member$c ?v3 ?v2)) (exists ((?v4 Unit_a_b_prod_sum$)) (and (member$b ?v4 ?v1) (fun_app$ar (fun_app$as ?v0 ?v4) ?v3))))) :named a46))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_a_bool_fun_fun$) (?v1 Unit_a_b_prod_sum_set$) (?v2 A_set$) (?v3 A$)) (=> (and (rel_set$e ?v0 ?v1 ?v2) (member$ ?v3 ?v2)) (exists ((?v4 Unit_a_b_prod_sum$)) (and (member$b ?v4 ?v1) (fun_app$r (fun_app$bq ?v0 ?v4) ?v3))))) :named a47))
(assert (! (forall ((?v0 Unit_c_d_prod_sum_a_bool_fun_fun$) (?v1 Unit_c_d_prod_sum_set$) (?v2 A_set$) (?v3 A$)) (=> (and (rel_set$g ?v0 ?v1 ?v2) (member$ ?v3 ?v2)) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$r (fun_app$bs ?v0 ?v4) ?v3))))) :named a48))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_c_bool_fun_fun$) (?v1 Unit_a_b_prod_sum_set$) (?v2 C_set$) (?v3 C$)) (=> (and (rel_set$f ?v0 ?v1 ?v2) (member$a ?v3 ?v2)) (exists ((?v4 Unit_a_b_prod_sum$)) (and (member$b ?v4 ?v1) (fun_app$p (fun_app$br ?v0 ?v4) ?v3))))) :named a49))
(assert (! (forall ((?v0 Unit_c_d_prod_sum_c_bool_fun_fun$) (?v1 Unit_c_d_prod_sum_set$) (?v2 C_set$) (?v3 C$)) (=> (and (rel_set$h ?v0 ?v1 ?v2) (member$a ?v3 ?v2)) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$p (fun_app$bt ?v0 ?v4) ?v3))))) :named a50))
(assert (! (forall ((?v0 C_unit_c_d_prod_sum_bool_fun_fun$) (?v1 C_set$) (?v2 Unit_c_d_prod_sum_set$) (?v3 Unit_c_d_prod_sum$)) (=> (and (rel_set$i ?v0 ?v1 ?v2) (member$c ?v3 ?v2)) (exists ((?v4 C$)) (and (member$a ?v4 ?v1) (fun_app$ar (fun_app$bu ?v0 ?v4) ?v3))))) :named a51))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set$) (?v2 C_set$) (?v3 A$)) (=> (and (fun_app$b (fun_app$at (fun_app$aq rel_set$ ?v0) ?v1) ?v2) (member$ ?v3 ?v1)) (exists ((?v4 C$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$al ?v0 ?v3) ?v4))))) :named a52))
(assert (! (forall ((?v0 C_a_bool_fun_fun$) (?v1 C_set$) (?v2 A_set$) (?v3 C$)) (=> (and (fun_app$d (fun_app$bm (fun_app$bn rel_set$c ?v0) ?v1) ?v2) (member$a ?v3 ?v1)) (exists ((?v4 A$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$bl ?v0 ?v3) ?v4))))) :named a53))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_set$) (?v2 A_set$) (?v3 A$)) (=> (and (fun_app$d (fun_app$e (fun_app$bj rel_set$a ?v0) ?v1) ?v2) (member$ ?v3 ?v1)) (exists ((?v4 A$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$s ?v0 ?v3) ?v4))))) :named a54))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 C_set$) (?v2 C_set$) (?v3 C$)) (=> (and (fun_app$b (fun_app$c (fun_app$bk rel_set$b ?v0) ?v1) ?v2) (member$a ?v3 ?v1)) (exists ((?v4 C$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$q ?v0 ?v3) ?v4))))) :named a55))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 Unit_a_b_prod_sum_set$) (?v2 Unit_c_d_prod_sum_set$) (?v3 Unit_a_b_prod_sum$)) (=> (and (fun_app$bo (fun_app$bp (rel_set$d ?v0) ?v1) ?v2) (member$b ?v3 ?v1)) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v2) (fun_app$ar (fun_app$as ?v0 ?v3) ?v4))))) :named a56))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_a_bool_fun_fun$) (?v1 Unit_a_b_prod_sum_set$) (?v2 A_set$) (?v3 Unit_a_b_prod_sum$)) (=> (and (rel_set$e ?v0 ?v1 ?v2) (member$b ?v3 ?v1)) (exists ((?v4 A$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$bq ?v0 ?v3) ?v4))))) :named a57))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_c_bool_fun_fun$) (?v1 Unit_a_b_prod_sum_set$) (?v2 C_set$) (?v3 Unit_a_b_prod_sum$)) (=> (and (rel_set$f ?v0 ?v1 ?v2) (member$b ?v3 ?v1)) (exists ((?v4 C$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$br ?v0 ?v3) ?v4))))) :named a58))
(assert (! (forall ((?v0 Unit_c_d_prod_sum_a_bool_fun_fun$) (?v1 Unit_c_d_prod_sum_set$) (?v2 A_set$) (?v3 Unit_c_d_prod_sum$)) (=> (and (rel_set$g ?v0 ?v1 ?v2) (member$c ?v3 ?v1)) (exists ((?v4 A$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$bs ?v0 ?v3) ?v4))))) :named a59))
(assert (! (forall ((?v0 Unit_c_d_prod_sum_c_bool_fun_fun$) (?v1 Unit_c_d_prod_sum_set$) (?v2 C_set$) (?v3 Unit_c_d_prod_sum$)) (=> (and (rel_set$h ?v0 ?v1 ?v2) (member$c ?v3 ?v1)) (exists ((?v4 C$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$bt ?v0 ?v3) ?v4))))) :named a60))
(assert (! (forall ((?v0 C_unit_c_d_prod_sum_bool_fun_fun$) (?v1 C_set$) (?v2 Unit_c_d_prod_sum_set$) (?v3 C$)) (=> (and (rel_set$i ?v0 ?v1 ?v2) (member$a ?v3 ?v1)) (exists ((?v4 Unit_c_d_prod_sum$)) (and (member$c ?v4 ?v2) (fun_app$ar (fun_app$bu ?v0 ?v3) ?v4))))) :named a61))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_c_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 A_a_bool_fun_fun$) (?v4 A_c_bool_fun_fun$)) (= (fun_app$j (fun_app$bi (rel_fun$i ?v0 (rel_fun$b ?v1 ?v2)) ?v3) ?v4) (forall ((?v5 A$) (?v6 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v5) ?v6) (fun_app$f (fun_app$av (rel_fun$b ?v1 ?v2) (fun_app$s ?v3 ?v5)) (fun_app$al ?v4 ?v6)))))) :named a62))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 A_a_bool_fun_fun$) (?v4 A_a_bool_fun_fun$)) (= (fun_app$l (fun_app$m (rel_fun$j ?v0 (rel_fun$k ?v1 ?v2)) ?v3) ?v4) (forall ((?v5 A$) (?v6 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v5) ?v6) (fun_app$h (fun_app$i (rel_fun$k ?v1 ?v2) (fun_app$s ?v3 ?v5)) (fun_app$s ?v4 ?v6)))))) :named a63))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_c_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 A_a_bool_fun_fun$) (?v4 C_c_bool_fun_fun$)) (= (fun_app$ay (fun_app$az (rel_fun$d ?v0 (rel_fun$b ?v1 ?v2)) ?v3) ?v4) (forall ((?v5 A$) (?v6 C$)) (=> (fun_app$p (fun_app$al ?v0 ?v5) ?v6) (fun_app$f (fun_app$av (rel_fun$b ?v1 ?v2) (fun_app$s ?v3 ?v5)) (fun_app$q ?v4 ?v6)))))) :named a64))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 A_c_bool_fun_fun$) (?v4 A_c_bool_fun_fun$)) (= (fun_app$j (fun_app$k (fun_app$ba (rel_fun$e ?v0) (fun_app$au (rel_fun$a ?v1) ?v2)) ?v3) ?v4) (forall ((?v5 A$) (?v6 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v5) ?v6) (fun_app$f (fun_app$g (fun_app$au (rel_fun$a ?v1) ?v2) (fun_app$al ?v3 ?v5)) (fun_app$al ?v4 ?v6)))))) :named a65))
(assert (! (= (rel_fun$j uu$ uud$) uue$) :named a66))
(assert (! (= (rel_fun$f uu$ uub$) uuf$) :named a67))
(assert (! (= (fun_app$au (rel_fun$a uub$) uug$) uuh$) :named a68))
(assert (! (= (fun_app$ba (rel_fun$e uu$) uuh$) uui$) :named a69))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 Unit_a_b_prod_sum_a_set_fun$) (?v3 Unit_c_d_prod_sum_c_set_fun$) (?v4 Unit_a_b_prod_sum$) (?v5 Unit_c_d_prod_sum$)) (=> (and (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3) (and (fun_app$ar (fun_app$as ?v0 ?v4) ?v5) (=> (fun_app$b (fun_app$at ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)) false))) false)) :named a70))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 C_bool_fun$) (?v3 C_bool_fun$) (?v4 C$) (?v5 C$)) (=> (and (fun_app$f (fun_app$g (fun_app$au (rel_fun$a ?v0) ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$q ?v0 ?v4) ?v5) (=> (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)) false))) false)) :named a71))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 A_bool_fun$) (?v3 C_bool_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$f (fun_app$av (rel_fun$b ?v0 ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (=> (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)) false))) false)) :named a72))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 A_a_set_fun$) (?v3 C_c_set_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$aw (fun_app$ax (rel_fun$c ?v0 ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (=> (fun_app$b (fun_app$at ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)) false))) false)) :named a73))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 C_c_bool_fun_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$ay (fun_app$az (rel_fun$d ?v0 ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (=> (fun_app$f (fun_app$av ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)) false))) false)) :named a74))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_c_bool_fun_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$j (fun_app$k (fun_app$ba (rel_fun$e ?v0) ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)) false))) false)) :named a75))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_fun$) (?v3 A_c_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$n (fun_app$o (rel_fun$f ?v0 ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$p (fun_app$q ?v1 (fun_app$bb ?v2 ?v4)) (fun_app$bb ?v3 ?v5)) false))) false)) :named a76))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_c_bool_fun_fun$) (?v2 A_a_fun$) (?v3 A_c_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$n (fun_app$bd (rel_fun$g ?v0 ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$p (fun_app$al ?v1 (fun_app$bc ?v2 ?v4)) (fun_app$bb ?v3 ?v5)) false))) false)) :named a77))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_a_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_a_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$bf (fun_app$bg (fun_app$bh (rel_fun$h ?v0) ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$r (fun_app$be ?v1 (fun_app$al ?v2 ?v4)) (fun_app$bc ?v3 ?v5)) false))) false)) :named a78))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 A_c_bool_fun_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$j (fun_app$bi (rel_fun$i ?v0 ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$f (fun_app$av ?v1 (fun_app$s ?v2 ?v4)) (fun_app$al ?v3 ?v5)) false))) false)) :named a79))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_a_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_a_fun$) (?v4 A$)) (=> (and (fun_app$bf (fun_app$bg (fun_app$bh (rel_fun$h ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$r (fun_app$be ?v1 (fun_app$al ?v2 ?v4)) (fun_app$bc ?v3 ?v4)))) :named a80))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 A_c_bool_fun_fun$) (?v4 A$)) (=> (and (fun_app$j (fun_app$bi (rel_fun$i ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$f (fun_app$av ?v1 (fun_app$s ?v2 ?v4)) (fun_app$al ?v3 ?v4)))) :named a81))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_bool_fun_a_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 A_a_bool_fun_fun$) (?v4 A$)) (=> (and (fun_app$l (fun_app$m (rel_fun$j ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$h (fun_app$i ?v1 (fun_app$s ?v2 ?v4)) (fun_app$s ?v3 ?v4)))) :named a82))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_fun$) (?v3 A_c_fun$) (?v4 A$)) (=> (and (fun_app$n (fun_app$o (rel_fun$f ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$p (fun_app$q ?v1 (fun_app$bb ?v2 ?v4)) (fun_app$bb ?v3 ?v4)))) :named a83))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_c_bool_fun_fun$) (?v2 A_a_fun$) (?v3 A_c_fun$) (?v4 A$)) (=> (and (fun_app$n (fun_app$bd (rel_fun$g ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$p (fun_app$al ?v1 (fun_app$bc ?v2 ?v4)) (fun_app$bb ?v3 ?v4)))) :named a84))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 C_bool_fun$) (?v3 C_bool_fun$) (?v4 C$)) (=> (and (fun_app$f (fun_app$g (fun_app$au (rel_fun$a ?v0) ?v1) ?v2) ?v3) (fun_app$p (fun_app$q ?v0 ?v4) ?v4)) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v4)))) :named a85))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_c_bool_fun_fun$) (?v4 A$)) (=> (and (fun_app$j (fun_app$k (fun_app$ba (rel_fun$e ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v4)))) :named a86))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 C_bool_fun$) (?v3 C_bool_fun$) (?v4 C$) (?v5 C$)) (=> (and (fun_app$f (fun_app$g (fun_app$au (rel_fun$a ?v0) ?v1) ?v2) ?v3) (fun_app$p (fun_app$q ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a87))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 A_bool_fun$) (?v3 C_bool_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$f (fun_app$av (rel_fun$b ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a88))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 A_a_set_fun$) (?v3 C_c_set_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$aw (fun_app$ax (rel_fun$c ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$b (fun_app$at ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)))) :named a89))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 C_c_bool_fun_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$ay (fun_app$az (rel_fun$d ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$f (fun_app$av ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)))) :named a90))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_c_bool_fun_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$j (fun_app$k (fun_app$ba (rel_fun$e ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v5)) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) :named a91))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 Unit_a_b_prod_sum_a_set_fun$) (?v3 Unit_c_d_prod_sum_c_set_fun$) (?v4 Unit_a_b_prod_sum$) (?v5 Unit_c_d_prod_sum$)) (=> (and (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3) (fun_app$ar (fun_app$as ?v0 ?v4) ?v5)) (fun_app$b (fun_app$at ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)))) :named a92))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 C_bool_fun$) (?v3 C_bool_fun$) (?v4 C$) (?v5 C$)) (=> (and (fun_app$f (fun_app$g (fun_app$au (rel_fun$a ?v0) ?v1) ?v2) ?v3) (fun_app$p (fun_app$q ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a93))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 A_bool_fun$) (?v3 C_bool_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$f (fun_app$av (rel_fun$b ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a94))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 A_a_set_fun$) (?v3 C_c_set_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$aw (fun_app$ax (rel_fun$c ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$b (fun_app$at ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)))) :named a95))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$) (?v3 C_c_bool_fun_fun$) (?v4 A$) (?v5 C$)) (=> (and (fun_app$ay (fun_app$az (rel_fun$d ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$f (fun_app$av ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)))) :named a96))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v2 A_c_bool_fun_fun$) (?v3 A_c_bool_fun_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$j (fun_app$k (fun_app$ba (rel_fun$e ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v5)) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) :named a97))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$) (?v2 Unit_a_b_prod_sum_a_set_fun$) (?v3 Unit_c_d_prod_sum_c_set_fun$) (?v4 Unit_a_b_prod_sum$) (?v5 Unit_c_d_prod_sum$)) (=> (and (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3) (fun_app$ar (fun_app$as ?v0 ?v4) ?v5)) (fun_app$b (fun_app$at ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)))) :named a98))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$l (rel_fun$m ?v0 (rel_fun$n ?v1 uug$)) (rel_fun$o (fun_app$au (rel_fun$a uub$) ?v0) (rel_fun$p (fun_app$au (rel_fun$a uub$) ?v1) uug$)) (rel_fun$a uub$) (rel_fun$a uub$))) :named a99))
(assert (! (forall ((?v0 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$)) (rel_fun$q (rel_fun$o ?v0 (rel_fun$p ?v1 uug$)) (rel_fun$r (fun_app$ba (rel_fun$e uu$) ?v0) (rel_fun$s (fun_app$ba (rel_fun$e uu$) ?v1) uug$)) (rel_fun$e uu$) (rel_fun$e uu$))) :named a100))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (rel_fun$t (rel_fun$u ?v0 (fun_app$au (rel_fun$a ?v1) uug$)) (rel_fun$v (fun_app$au (rel_fun$a uub$) ?v0) (rel_fun$w (rel_fun$x uub$ ?v1) uug$)) (rel_fun$y uub$) (rel_fun$y uub$))) :named a101))
(assert (! (forall ((?v0 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (rel_fun$z (rel_fun$aa ?v0 (fun_app$au (rel_fun$a ?v1) uug$)) (rel_fun$ab (fun_app$ba (rel_fun$e uu$) ?v0) (rel_fun$ac (rel_fun$f uu$ ?v1) uug$)) (rel_fun$ad uu$) (rel_fun$ad uu$))) :named a102))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$ae (rel_fun$af ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$ag (fun_app$au (rel_fun$a uub$) ?v0) (rel_fun$ah (rel_fun$ai uub$ ?v1) uug$)) (rel_fun$aj uub$) (rel_fun$y uub$))) :named a103))
(assert (! (forall ((?v0 C_bool_fun_c_bool_fun_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$ak (rel_fun$al ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$am (fun_app$ba (rel_fun$e uu$) ?v0) (rel_fun$an (rel_fun$g uu$ ?v1) uug$)) (rel_fun$h uu$) (rel_fun$ad uu$))) :named a104))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (rel_fun$ao (fun_app$ba (rel_fun$e ?v0) (fun_app$au (rel_fun$a ?v1) uug$)) (rel_fun$ap (fun_app$bj rel_set$a ?v0) (rel_fun$aq (fun_app$bk rel_set$b ?v1) uug$)) rel_set$ rel_set$)) :named a105))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$ar (rel_fun$d ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$as (fun_app$aq rel_set$ ?v0) (rel_fun$at (fun_app$aq rel_set$ ?v1) uug$)) rel_set$a rel_set$b)) :named a106))
(assert (! (forall ((?v0 C_a_bool_fun_fun$) (?v1 C_a_bool_fun_fun$)) (rel_fun$au (rel_fun$av ?v0 (rel_fun$aw ?v1 uug$)) (rel_fun$ax (fun_app$bn rel_set$c ?v0) (rel_fun$ay (fun_app$bn rel_set$c ?v1) uug$)) rel_set$b rel_set$a)) :named a107))
(assert (! (forall ((?v0 C_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (rel_fun$az (rel_fun$ba ?v0 (fun_app$au (rel_fun$a ?v1) uug$)) (rel_fun$bb (fun_app$bn rel_set$c ?v0) (rel_fun$aq (fun_app$bk rel_set$b ?v1) uug$)) rel_set$b rel_set$)) :named a108))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (rel_fun$bc (rel_fun$bd ?v0 (rel_fun$k ?v1 uug$)) (rel_fun$be (fun_app$aq rel_set$ ?v0) (rel_fun$bf (fun_app$bj rel_set$a ?v1) uug$)) rel_set$a rel_set$c)) :named a109))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (rel_fun$bg (rel_fun$bh ?v0 (fun_app$au (rel_fun$a ?v1) uug$)) (rel_fun$bi (fun_app$aq rel_set$ ?v0) (rel_fun$aq (fun_app$bk rel_set$b ?v1) uug$)) rel_set$ rel_set$b)) :named a110))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_a_bool_fun_fun$)) (rel_fun$bj (rel_fun$bk ?v0 (rel_fun$aw ?v1 uug$)) (rel_fun$bl (fun_app$bj rel_set$a ?v0) (rel_fun$ay (fun_app$bn rel_set$c ?v1) uug$)) rel_set$ rel_set$a)) :named a111))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$bm (rel_fun$i ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$bn (fun_app$bj rel_set$a ?v0) (rel_fun$at (fun_app$aq rel_set$ ?v1) uug$)) rel_set$a rel_set$)) :named a112))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (rel_fun$bo (rel_fun$j ?v0 (rel_fun$k ?v1 uug$)) (rel_fun$bp (fun_app$bj rel_set$a ?v0) (rel_fun$bf (fun_app$bj rel_set$a ?v1) uug$)) rel_set$a rel_set$a)) :named a113))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$bq (rel_fun$br ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$bs (fun_app$bk rel_set$b ?v0) (rel_fun$at (fun_app$aq rel_set$ ?v1) uug$)) rel_set$c rel_set$b)) :named a114))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bt ?v0 (rel_fun$p (fun_app$au (rel_fun$a ?v0) ?v1) ?v1) uuj$ uuj$)) :named a115))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bu ?v0 (rel_fun$bv (rel_fun$b ?v0 ?v1) ?v1) uuk$ uuj$)) :named a116))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$)) (rel_fun$bw ?v0 (rel_fun$bx (rel_fun$c ?v0 ?v1) ?v1) uul$ uum$)) :named a117))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$)) (rel_fun$by ?v0 (rel_fun$bz (rel_fun$d ?v0 ?v1) ?v1) uun$ uuo$)) :named a118))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$)) (rel_fun$ca ?v0 (rel_fun$cb (fun_app$ba (rel_fun$e ?v0) ?v1) ?v1) uup$ uup$)) :named a119))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$)) (rel_fun$cc ?v0 (rel_fun$cd (rel_fun$ ?v0 ?v1) ?v1) uuq$ uur$)) :named a120))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bt ?v0 (rel_fun$p (fun_app$au (rel_fun$a ?v0) ?v1) ?v1) uuj$ uuj$)) :named a121))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bu ?v0 (rel_fun$bv (rel_fun$b ?v0 ?v1) ?v1) uuk$ uuj$)) :named a122))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$)) (rel_fun$bw ?v0 (rel_fun$bx (rel_fun$c ?v0 ?v1) ?v1) uul$ uum$)) :named a123))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_bool_fun_c_bool_fun_bool_fun_fun$)) (rel_fun$by ?v0 (rel_fun$bz (rel_fun$d ?v0 ?v1) ?v1) uun$ uuo$)) :named a124))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_bool_fun_c_bool_fun_bool_fun_fun$)) (rel_fun$ca ?v0 (rel_fun$cb (fun_app$ba (rel_fun$e ?v0) ?v1) ?v1) uup$ uup$)) :named a125))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 A_set_c_set_bool_fun_fun$)) (rel_fun$cc ?v0 (rel_fun$cd (rel_fun$ ?v0 ?v1) ?v1) uuq$ uur$)) :named a126))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$ce (fun_app$aq rel_set$ ?v0) (rel_fun$bx (rel_fun$c ?v0 (fun_app$aq rel_set$ ?v1)) (fun_app$aq rel_set$ ?v1)) bind$ bind$a)) :named a127))
(assert (! (forall ((?v0 Unit_a_b_prod_sum_unit_c_d_prod_sum_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$cf (rel_set$d ?v0) (rel_fun$cd (rel_fun$ ?v0 (fun_app$aq rel_set$ ?v1)) (fun_app$aq rel_set$ ?v1)) bind$b bind$c)) :named a128))
(assert (! (forall ((?v0 C_a_bool_fun_fun$) (?v1 C_a_bool_fun_fun$)) (rel_fun$cg (fun_app$bn rel_set$c ?v0) (rel_fun$ch (rel_fun$ci ?v0 (fun_app$bn rel_set$c ?v1)) (fun_app$bn rel_set$c ?v1)) bind$a bind$)) :named a129))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (rel_fun$cj (fun_app$aq rel_set$ ?v0) (rel_fun$ck (rel_fun$cl ?v0 (fun_app$bj rel_set$a ?v1)) (fun_app$bj rel_set$a ?v1)) bind$ bind$d)) :named a130))
(assert (! (forall ((?v0 A_c_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (rel_fun$cm (fun_app$aq rel_set$ ?v0) (rel_fun$cn (rel_fun$co ?v0 (fun_app$bk rel_set$b ?v1)) (fun_app$bk rel_set$b ?v1)) bind$e bind$a)) :named a131))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$cp (fun_app$bj rel_set$a ?v0) (rel_fun$cq (rel_fun$cr ?v0 (fun_app$aq rel_set$ ?v1)) (fun_app$aq rel_set$ ?v1)) bind$ bind$e)) :named a132))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (rel_fun$cs (fun_app$bj rel_set$a ?v0) (rel_fun$ct (rel_fun$cu ?v0 (fun_app$bj rel_set$a ?v1)) (fun_app$bj rel_set$a ?v1)) bind$ bind$)) :named a133))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (rel_fun$cv (fun_app$bj rel_set$a ?v0) (rel_fun$cw (rel_fun$cx ?v0 (fun_app$bk rel_set$b ?v1)) (fun_app$bk rel_set$b ?v1)) bind$e bind$e)) :named a134))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 A_c_bool_fun_fun$)) (rel_fun$cy (fun_app$bk rel_set$b ?v0) (rel_fun$cz (rel_fun$da ?v0 (fun_app$aq rel_set$ ?v1)) (fun_app$aq rel_set$ ?v1)) bind$d bind$a)) :named a135))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (rel_fun$db (fun_app$bk rel_set$b ?v0) (rel_fun$dc (rel_fun$dd ?v0 (fun_app$bj rel_set$a ?v1)) (fun_app$bj rel_set$a ?v1)) bind$d bind$d)) :named a136))
(check-sat)
;(get-unsat-core)
