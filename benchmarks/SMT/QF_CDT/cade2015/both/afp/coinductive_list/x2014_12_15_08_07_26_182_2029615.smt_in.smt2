; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 358
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_a_set_fun$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))))
(declare-fun lnull$ (A_llist$) Bool)
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun lfinite$ (A_llist$) Bool)
(declare-fun lmember$ (A$) A_llist_bool_fun$)
(declare-fun fun_app$a (A_llist_a_set_fun$ A_llist$) A_set$)
(declare-fun gen_lset$ (A_set$) A_llist_a_set_fun$)
(declare-fun pred_llist$ (A_bool_fun$ A_llist$) Bool)
(assert (! (not (= (lfinite$ lNil$) true)) :named a0))
(assert (! (lfinite$ lNil$) :named a1))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$ (lmember$ ?v0) lNil$) false) :pattern ((lmember$ ?v0)))) :named a2))
(assert (! (forall ((?v0 A_set$)) (! (= (fun_app$a (gen_lset$ ?v0) lNil$) ?v0) :pattern ((gen_lset$ ?v0)))) :named a3))
(assert (! (forall ((?v0 A_bool_fun$)) (pred_llist$ ?v0 lNil$)) :named a4))
(assert (! (forall ((?v0 A_llist$)) (= (lfinite$ ?v0) (or (= ?v0 lNil$) (exists ((?v1 A_llist$) (?v2 A$)) (and (= ?v0 (lCons$ ?v2 ?v1)) (lfinite$ ?v1)))))) :named a5))
(assert (! (forall ((?v0 A_llist$)) (=> (and (lfinite$ ?v0) (and (=> (= ?v0 lNil$) false) (forall ((?v1 A_llist$) (?v2 A$)) (=> (and (= ?v0 (lCons$ ?v2 ?v1)) (lfinite$ ?v1)) false)))) false)) :named a6))
(assert (! (forall ((?v0 A_llist$)) (= (lfinite$ (ltl$ ?v0)) (lfinite$ ?v0))) :named a7))
(assert (! (forall ((?v0 A$) (?v1 A_llist$)) (! (= (lfinite$ (lCons$ ?v0 ?v1)) (lfinite$ ?v1)) :pattern ((lCons$ ?v0 ?v1)))) :named a8))
(assert (! (forall ((?v0 A_llist$)) (=> (lnull$ ?v0) (lfinite$ ?v0))) :named a9))
(assert (! (= (ltl$ lNil$) lNil$) :named a10))
(assert (! (forall ((?v0 A$) (?v1 A_llist$) (?v2 A$) (?v3 A_llist$)) (= (= (lCons$ ?v0 ?v1) (lCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a11))
(check-sat)
;(get-unsat-core)
