; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 359
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort A_set$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))))
(declare-fun a$ () A$)
(declare-fun a$a () A_set$)
(declare-fun top$ () A_llist_llist_set$)
(declare-fun top$a () A_llist_set$)
(declare-fun top$b () A_set$)
(declare-fun ldrop$ (A_llist_llist_llist$ Nat$) A_llist_llist_llist$)
(declare-fun lconst$ (A$) A_llist$)
(declare-fun ldrop$a (A_llist_llist$ Nat$) A_llist_llist$)
(declare-fun ldrop$b (A_llist$ Nat$) A_llist$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun alllsts$ (A_set$) A_llist_set$)
(declare-fun finlsts$ (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun inflsts$ (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$) A_llist_llist_llist$)
(declare-fun lconst$a (A_llist$) A_llist_llist$)
(declare-fun lconst$b (A_llist_llist$) A_llist_llist_llist$)
(declare-fun member$a (A$ A_set$) Bool)
(declare-fun member$b (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$c (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$d (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun alllsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun alllsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun alllsts$c (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun finlsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun finlsts$b (A_set$) A_llist_set$)
(declare-fun inflsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun inflsts$b (A_set$) A_llist_set$)
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$) A_llist_llist$)
(declare-fun lappend$b (A_llist$ A_llist$) A_llist$)
(assert (! (not (member$ (lconst$ a$) (alllsts$ a$a))) :named a0))
(assert (! (member$a a$ a$a) :named a1))
(assert (! (forall ((?v0 A_llist$)) (not (= (lconst$a ?v0) lNil$a))) :named a2))
(assert (! (forall ((?v0 A$)) (not (= (lconst$ ?v0) lNil$))) :named a3))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 Nat$)) (=> (member$b ?v0 (alllsts$a ?v1)) (member$b (ldrop$ ?v0 ?v2) (alllsts$a ?v1)))) :named a4))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 Nat$)) (=> (member$c ?v0 (alllsts$b ?v1)) (member$c (ldrop$a ?v0 ?v2) (alllsts$b ?v1)))) :named a5))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 Nat$)) (=> (member$ ?v0 (alllsts$ ?v1)) (member$ (ldrop$b ?v0 ?v2) (alllsts$ ?v1)))) :named a6))
(assert (! (forall ((?v0 A_llist_llist$)) (! (= (lconst$b ?v0) (lCons$b ?v0 (lconst$b ?v0))) :pattern ((lconst$b ?v0)))) :named a7))
(assert (! (forall ((?v0 A_llist$)) (! (= (lconst$a ?v0) (lCons$a ?v0 (lconst$a ?v0))) :pattern ((lconst$a ?v0)))) :named a8))
(assert (! (forall ((?v0 A$)) (! (= (lconst$ ?v0) (lCons$ ?v0 (lconst$ ?v0))) :pattern ((lconst$ ?v0)))) :named a9))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (member$b ?v0 (alllsts$a top$))) :named a10))
(assert (! (forall ((?v0 A_llist_llist$)) (member$c ?v0 (alllsts$b top$a))) :named a11))
(assert (! (forall ((?v0 A_llist$)) (member$ ?v0 (alllsts$ top$b))) :named a12))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$) (?v2 A_llist_llist_llist_set$)) (= (member$d (lCons$c ?v0 ?v1) (alllsts$c ?v2)) (and (member$b ?v0 ?v2) (member$d ?v1 (alllsts$c ?v2))))) :named a13))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_set$)) (= (member$b (lCons$b ?v0 ?v1) (alllsts$a ?v2)) (and (member$c ?v0 ?v2) (member$b ?v1 (alllsts$a ?v2))))) :named a14))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_llist$) (?v2 A_llist_set$)) (= (member$c (lCons$a ?v0 ?v1) (alllsts$b ?v2)) (and (member$ ?v0 ?v2) (member$c ?v1 (alllsts$b ?v2))))) :named a15))
(assert (! (forall ((?v0 A$) (?v1 A_llist$) (?v2 A_set$)) (= (member$ (lCons$ ?v0 ?v1) (alllsts$ ?v2)) (and (member$a ?v0 ?v2) (member$ ?v1 (alllsts$ ?v2))))) :named a16))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$b ?v0 (inflsts$ ?v1)) (member$b ?v0 (alllsts$a ?v1)))) :named a17))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$c ?v0 (inflsts$a ?v1)) (member$c ?v0 (alllsts$b ?v1)))) :named a18))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (inflsts$b ?v1)) (member$ ?v0 (alllsts$ ?v1)))) :named a19))
(assert (! (forall ((?v0 A_llist_llist_set$)) (member$b lNil$b (alllsts$a ?v0))) :named a20))
(assert (! (forall ((?v0 A_llist_set$)) (member$c lNil$a (alllsts$b ?v0))) :named a21))
(assert (! (forall ((?v0 A_set$)) (member$ lNil$ (alllsts$ ?v0))) :named a22))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$d ?v0 (alllsts$c ?v1)) (member$b ?v2 ?v1)) (member$d (lCons$c ?v2 ?v0) (alllsts$c ?v1)))) :named a23))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$b ?v0 (alllsts$a ?v1)) (member$c ?v2 ?v1)) (member$b (lCons$b ?v2 ?v0) (alllsts$a ?v1)))) :named a24))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist$)) (=> (and (member$c ?v0 (alllsts$b ?v1)) (member$ ?v2 ?v1)) (member$c (lCons$a ?v2 ?v0) (alllsts$b ?v1)))) :named a25))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A$)) (=> (and (member$ ?v0 (alllsts$ ?v1)) (member$a ?v2 ?v1)) (member$ (lCons$ ?v2 ?v0) (alllsts$ ?v1)))) :named a26))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_set$)) (=> (and (member$b ?v0 (finlsts$ ?v1)) (member$b ?v0 (alllsts$a ?v2))) (member$b ?v0 (finlsts$ ?v2)))) :named a27))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_set$)) (=> (and (member$c ?v0 (finlsts$a ?v1)) (member$c ?v0 (alllsts$b ?v2))) (member$c ?v0 (finlsts$a ?v2)))) :named a28))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_set$)) (=> (and (member$ ?v0 (finlsts$b ?v1)) (member$ ?v0 (alllsts$ ?v2))) (member$ ?v0 (finlsts$b ?v2)))) :named a29))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$b ?v0 (finlsts$ ?v1)) (member$b ?v0 (alllsts$a ?v1)))) :named a30))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$c ?v0 (finlsts$a ?v1)) (member$c ?v0 (alllsts$b ?v1)))) :named a31))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (finlsts$b ?v1)) (member$ ?v0 (alllsts$ ?v1)))) :named a32))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_set$)) (=> (member$b (lappend$ ?v0 ?v1) (alllsts$a ?v2)) (member$b ?v0 (alllsts$a ?v2)))) :named a33))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_set$)) (=> (member$c (lappend$a ?v0 ?v1) (alllsts$b ?v2)) (member$c ?v0 (alllsts$b ?v2)))) :named a34))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_set$)) (=> (member$ (lappend$b ?v0 ?v1) (alllsts$ ?v2)) (member$ ?v0 (alllsts$ ?v2)))) :named a35))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$b ?v0 (alllsts$a ?v1)) (member$b ?v2 (alllsts$a ?v1))) (member$b (lappend$ ?v0 ?v2) (alllsts$a ?v1)))) :named a36))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$c ?v0 (alllsts$b ?v1)) (member$c ?v2 (alllsts$b ?v1))) (member$c (lappend$a ?v0 ?v2) (alllsts$b ?v1)))) :named a37))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (and (member$ ?v0 (alllsts$ ?v1)) (member$ ?v2 (alllsts$ ?v1))) (member$ (lappend$b ?v0 ?v2) (alllsts$ ?v1)))) :named a38))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (= lNil$a (lappend$a ?v0 ?v1)) (and (= ?v0 lNil$a) (= ?v1 lNil$a)))) :named a39))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (= lNil$ (lappend$b ?v0 ?v1)) (and (= ?v0 lNil$) (= ?v1 lNil$)))) :named a40))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (= (lappend$a ?v0 ?v1) lNil$a) (and (= ?v0 lNil$a) (= ?v1 lNil$a)))) :named a41))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (= (lappend$b ?v0 ?v1) lNil$) (and (= ?v0 lNil$) (= ?v1 lNil$)))) :named a42))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_set$)) (= (member$b (lappend$ ?v0 ?v1) (finlsts$ ?v2)) (and (member$b ?v0 (finlsts$ ?v2)) (member$b ?v1 (finlsts$ ?v2))))) :named a43))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_set$)) (= (member$c (lappend$a ?v0 ?v1) (finlsts$a ?v2)) (and (member$c ?v0 (finlsts$a ?v2)) (member$c ?v1 (finlsts$a ?v2))))) :named a44))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_set$)) (= (member$ (lappend$b ?v0 ?v1) (finlsts$b ?v2)) (and (member$ ?v0 (finlsts$b ?v2)) (member$ ?v1 (finlsts$b ?v2))))) :named a45))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$) (?v3 A_llist_llist_llist$)) (=> (member$b ?v0 (finlsts$ ?v1)) (= (= (lappend$ ?v0 ?v2) (lappend$ ?v0 ?v3)) (= ?v2 ?v3)))) :named a46))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$) (?v3 A_llist_llist$)) (=> (member$c ?v0 (finlsts$a ?v1)) (= (= (lappend$a ?v0 ?v2) (lappend$a ?v0 ?v3)) (= ?v2 ?v3)))) :named a47))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$) (?v3 A_llist$)) (=> (member$ ?v0 (finlsts$b ?v1)) (= (= (lappend$b ?v0 ?v2) (lappend$b ?v0 ?v3)) (= ?v2 ?v3)))) :named a48))
(check-sat)
;(get-unsat-core)
