; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 459
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort A_set$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))))
(declare-fun a$ () A_llist$)
(declare-fun b$ () A_llist$)
(declare-fun x$ () A_llist$)
(declare-fun y$ () A_llist$)
(declare-fun a$a () A_set$)
(declare-fun top$ () A_llist_llist_set$)
(declare-fun top$a () A_llist_set$)
(declare-fun top$b () A_set$)
(declare-fun ldrop$ (A_llist_llist_llist$ Nat$) A_llist_llist_llist$)
(declare-fun lconst$ (A_llist_llist_llist$) A_llist_llist_llist_llist$)
(declare-fun ldrop$a (A_llist_llist$ Nat$) A_llist_llist$)
(declare-fun ldrop$b (A_llist$ Nat$) A_llist$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun alllsts$ (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun finpref$ (A_set$ A_llist$) A_llist_set$)
(declare-fun inflsts$ (A_set$) A_llist_set$)
(declare-fun infsuff$ (A_llist_llist_set$ A_llist_llist_llist$) A_llist_llist_llist_set$)
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$) A_llist_llist_llist$)
(declare-fun lconst$a (A_llist_llist$) A_llist_llist_llist$)
(declare-fun lconst$b (A_llist$) A_llist_llist$)
(declare-fun lconst$c (A$) A_llist$)
(declare-fun less_eq$ (A_llist_set$ A_llist_set$) Bool)
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun member$c (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$d (A$ A_set$) Bool)
(declare-fun alllsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun alllsts$b (A_set$) A_llist_set$)
(declare-fun finpref$a (A_llist_llist_set$ A_llist_llist_llist$) A_llist_llist_llist_set$)
(declare-fun finpref$b (A_llist_set$ A_llist_llist$) A_llist_llist_set$)
(declare-fun inflsts$a (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun inflsts$b (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun inflsts$c (A_llist_set$) A_llist_llist_set$)
(declare-fun infsuff$a (A_llist_set$ A_llist_llist$) A_llist_llist_set$)
(declare-fun infsuff$b (A_set$ A_llist$) A_llist_set$)
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$) A_llist_llist$)
(declare-fun lappend$b (A_llist$ A_llist$) A_llist$)
(declare-fun less_eq$a (A_llist_llist_llist_set$ A_llist_llist_llist_set$) Bool)
(declare-fun less_eq$b (A_llist_llist_llist_llist_set$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun less_eq$c (A_llist_llist_set$ A_llist_llist_set$) Bool)
(declare-fun less_eq$d (A_set$ A_set$) Bool)
(declare-fun less_eq$e (A_llist_llist_llist$ A_llist_llist_llist$) Bool)
(declare-fun less_eq$f (A_llist_llist$ A_llist_llist$) Bool)
(declare-fun less_eq$g (A_llist$ A_llist$) Bool)
(assert (! (not (member$ a$ (inflsts$ a$a))) :named a0))
(assert (! (and (member$ a$ (inflsts$ a$a)) (and (member$ b$ (inflsts$ a$a)) (less_eq$ (finpref$ a$a a$) (finpref$ a$a b$)))) :named a1))
(assert (! (member$ x$ (inflsts$ a$a)) :named a2))
(assert (! (member$ y$ (inflsts$ a$a)) :named a3))
(assert (! (and (member$ x$ (inflsts$ a$a)) (and (member$ y$ (inflsts$ a$a)) (less_eq$ (finpref$ a$a x$) (finpref$ a$a y$)))) :named a4))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (=> (member$a ?v0 ?v1) (member$b (lconst$ ?v0) (inflsts$a ?v1)))) :named a5))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$c ?v0 ?v1) (member$a (lconst$a ?v0) (inflsts$b ?v1)))) :named a6))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$)) (=> (member$ ?v0 ?v1) (member$c (lconst$b ?v0) (inflsts$c ?v1)))) :named a7))
(assert (! (forall ((?v0 A$) (?v1 A_set$)) (=> (member$d ?v0 ?v1) (member$ (lconst$c ?v0) (inflsts$ ?v1)))) :named a8))
(assert (! (forall ((?v0 A_llist_llist_llist_set$) (?v1 A_llist_llist_llist_set$)) (=> (less_eq$a ?v0 ?v1) (less_eq$b (inflsts$a ?v0) (inflsts$a ?v1)))) :named a9))
(assert (! (forall ((?v0 A_llist_llist_set$) (?v1 A_llist_llist_set$)) (=> (less_eq$c ?v0 ?v1) (less_eq$a (inflsts$b ?v0) (inflsts$b ?v1)))) :named a10))
(assert (! (forall ((?v0 A_llist_set$) (?v1 A_llist_set$)) (=> (less_eq$ ?v0 ?v1) (less_eq$c (inflsts$c ?v0) (inflsts$c ?v1)))) :named a11))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$)) (=> (less_eq$d ?v0 ?v1) (less_eq$ (inflsts$ ?v0) (inflsts$ ?v1)))) :named a12))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (member$a ?v0 (infsuff$ ?v1 ?v2)) (member$a ?v0 (inflsts$b ?v1)))) :named a13))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (member$c ?v0 (infsuff$a ?v1 ?v2)) (member$c ?v0 (inflsts$c ?v1)))) :named a14))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (member$ ?v0 (infsuff$b ?v1 ?v2)) (member$ ?v0 (inflsts$ ?v1)))) :named a15))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$a ?v0 (finpref$a ?v1 ?v2)) (member$a ?v2 (inflsts$b ?v1))) (member$a ?v2 (infsuff$ ?v1 ?v0)))) :named a16))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$c ?v0 (finpref$b ?v1 ?v2)) (member$c ?v2 (inflsts$c ?v1))) (member$c ?v2 (infsuff$a ?v1 ?v0)))) :named a17))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (and (member$ ?v0 (finpref$ ?v1 ?v2)) (member$ ?v2 (inflsts$ ?v1))) (member$ ?v2 (infsuff$b ?v1 ?v0)))) :named a18))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 Nat$)) (=> (member$a ?v0 (inflsts$b ?v1)) (member$a (ldrop$ ?v0 ?v2) (inflsts$b ?v1)))) :named a19))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 Nat$)) (=> (member$c ?v0 (inflsts$c ?v1)) (member$c (ldrop$a ?v0 ?v2) (inflsts$c ?v1)))) :named a20))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 Nat$)) (=> (member$ ?v0 (inflsts$ ?v1)) (member$ (ldrop$b ?v0 ?v2) (inflsts$ ?v1)))) :named a21))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (inflsts$b ?v1)) (member$a ?v0 (alllsts$ ?v1)))) :named a22))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$c ?v0 (inflsts$c ?v1)) (member$c ?v0 (alllsts$a ?v1)))) :named a23))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (inflsts$ ?v1)) (member$ ?v0 (alllsts$b ?v1)))) :named a24))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (member$a ?v0 (inflsts$b ?v1)) (= (lappend$ ?v0 ?v2) ?v0))) :named a25))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (member$c ?v0 (inflsts$c ?v1)) (= (lappend$a ?v0 ?v2) ?v0))) :named a26))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (member$ ?v0 (inflsts$ ?v1)) (= (lappend$b ?v0 ?v2) ?v0))) :named a27))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (inflsts$b ?v1)) (member$a ?v0 (inflsts$b top$)))) :named a28))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$c ?v0 (inflsts$c ?v1)) (member$c ?v0 (inflsts$c top$a)))) :named a29))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (inflsts$ ?v1)) (member$ ?v0 (inflsts$ top$b)))) :named a30))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (member$a ?v0 (inflsts$b ?v1)) (= (less_eq$e ?v0 ?v2) (= ?v0 ?v2)))) :named a31))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (member$c ?v0 (inflsts$c ?v1)) (= (less_eq$f ?v0 ?v2) (= ?v0 ?v2)))) :named a32))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (member$ ?v0 (inflsts$ ?v1)) (= (less_eq$g ?v0 ?v2) (= ?v0 ?v2)))) :named a33))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (=> (and (member$b ?v0 (inflsts$a ?v1)) (forall ((?v2 A_llist_llist_llist$) (?v3 A_llist_llist_llist_llist$)) (=> (and (member$b ?v3 (inflsts$a ?v1)) (and (member$a ?v2 ?v1) (= ?v0 (lCons$c ?v2 ?v3)))) false))) false)) :named a34))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$a ?v0 (inflsts$b ?v1)) (forall ((?v2 A_llist_llist$) (?v3 A_llist_llist_llist$)) (=> (and (member$a ?v3 (inflsts$b ?v1)) (and (member$c ?v2 ?v1) (= ?v0 (lCons$b ?v2 ?v3)))) false))) false)) :named a35))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$c ?v0 (inflsts$c ?v1)) (forall ((?v2 A_llist$) (?v3 A_llist_llist$)) (=> (and (member$c ?v3 (inflsts$c ?v1)) (and (member$ ?v2 ?v1) (= ?v0 (lCons$a ?v2 ?v3)))) false))) false)) :named a36))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$ ?v0 (inflsts$ ?v1)) (forall ((?v2 A$) (?v3 A_llist$)) (=> (and (member$ ?v3 (inflsts$ ?v1)) (and (member$d ?v2 ?v1) (= ?v0 (lCons$ ?v2 ?v3)))) false))) false)) :named a37))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist_llist$)) (=> (and (member$a ?v0 ?v1) (member$b ?v2 (inflsts$a ?v1))) (member$b (lCons$c ?v0 ?v2) (inflsts$a ?v1)))) :named a38))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$c ?v0 ?v1) (member$a ?v2 (inflsts$b ?v1))) (member$a (lCons$b ?v0 ?v2) (inflsts$b ?v1)))) :named a39))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$ ?v0 ?v1) (member$c ?v2 (inflsts$c ?v1))) (member$c (lCons$a ?v0 ?v2) (inflsts$c ?v1)))) :named a40))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_llist$)) (=> (and (member$d ?v0 ?v1) (member$ ?v2 (inflsts$ ?v1))) (member$ (lCons$ ?v0 ?v2) (inflsts$ ?v1)))) :named a41))
(assert (! (forall ((?v0 A_llist_llist$)) (less_eq$f ?v0 ?v0)) :named a42))
(assert (! (forall ((?v0 A_llist$)) (less_eq$g ?v0 ?v0)) :named a43))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (member$a ?v0 (alllsts$ top$))) :named a44))
(assert (! (forall ((?v0 A_llist_llist$)) (member$c ?v0 (alllsts$a top$a))) :named a45))
(assert (! (forall ((?v0 A_llist$)) (member$ ?v0 (alllsts$b top$b))) :named a46))
(check-sat)
;(get-unsat-core)
