; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 311
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_set_set$ 0)
(declare-sort A_list_set$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_set_set_set$ 0)
(declare-sort A_list_set_set$ 0)
(declare-sort A_set_list_set$ 0)
(declare-sort A_list_list_set$ 0)
(declare-sort A_llist_set_set$ 0)
(declare-sort A_set_llist_set$ 0)
(declare-sort A_list_llist_set$ 0)
(declare-sort A_llist_list_set$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_set_set_set_set$ 0)
(declare-sort A_list_set_set_set$ 0)
(declare-sort A_set_list_set_set$ 0)
(declare-sort A_set_set_list_set$ 0)
(declare-sort A_list_set_list_set$ 0)
(declare-sort A_llist_set_set_set$ 0)
(declare-sort A_set_list_list_set$ 0)
(declare-sort A_set_set_llist_set$ 0)
(declare-sort A_list_set_llist_set$ 0)
(declare-sort A_llist_list_set_set$ 0)
(declare-sort A_llist_set_list_set$ 0)
(declare-sort A_set_list_llist_set$ 0)
(declare-sort A_llist_list_list_set$ 0)
(declare-sort A_llist_set_llist_set$ 0)
(declare-sort A_llist_list_llist_set$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_list_set_set_set$ 0)
(declare-sort A_llist_list_set_list_set$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))))
(declare-datatypes () ((A_list$ (nil$) (cons$ (hd$ A$) (tl$ A_list$)))))
(declare-codatatypes () ((A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))))
(declare-datatypes () ((A_llist_list$ (nil$a) (cons$a (hd$a A_llist$) (tl$a A_llist_list$)))
  (A_set_list$ (nil$b) (cons$b (hd$b A_set$) (tl$b A_set_list$)))))
(declare-codatatypes () ((A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_list_llist$ (lNil$c) (lCons$c (lhd$c A_list$) (ltl$c A_list_llist$)))
  (A_llist_list_llist$ (lNil$d) (lCons$d (lhd$d A_llist_list$) (ltl$d A_llist_list_llist$)))
  (A_set_llist$ (lNil$e) (lCons$e (lhd$e A_set$) (ltl$e A_set_llist$)))
  (A_llist_set_llist$ (lNil$f) (lCons$f (lhd$f A_llist_set$) (ltl$f A_llist_set_llist$)))
  (A_llist_llist_llist_llist$ (lNil$g) (lCons$g (lhd$g A_llist_llist_llist$) (ltl$g A_llist_llist_llist_llist$)))))
(declare-fun s$ () A_llist$)
(declare-fun pow$ (A_set$) A_set_set$)
(declare-fun sup$ (A_set_set$) A_set$)
(declare-fun top$ () A_set$)
(declare-fun pow$a (A_llist_set$) A_llist_set_set$)
(declare-fun pow$b (A_set_set$) A_set_set_set$)
(declare-fun pow$c (A_list_set$) A_list_set_set$)
(declare-fun pow$d (A_llist_set_set$) A_llist_set_set_set$)
(declare-fun pow$e (A_llist_list_set$) A_llist_list_set_set$)
(declare-fun pow$f (A_set_list_set$) A_set_list_set_set$)
(declare-fun pow$g (A_list_set_set$) A_list_set_set_set$)
(declare-fun pow$h (A_set_set_set$) A_set_set_set_set$)
(declare-fun pow$i (A_llist_list_set_set$) A_llist_list_set_set_set$)
(declare-fun sup$a (A_llist_set_set$) A_llist_set$)
(declare-fun sup$b (A_set_set_set$) A_set_set$)
(declare-fun sup$c (A_list_set_set$) A_list_set$)
(declare-fun sup$d (A_llist_set_set_set$) A_llist_set_set$)
(declare-fun sup$e (A_llist_list_set_set$) A_llist_list_set$)
(declare-fun sup$f (A_set_list_set_set$) A_set_list_set$)
(declare-fun sup$g (A_list_set_set_set$) A_list_set_set$)
(declare-fun sup$h (A_set_set_set_set$) A_set_set_set$)
(declare-fun sup$i (A_llist_list_set_set_set$) A_llist_list_set_set$)
(declare-fun top$a () A_llist_set$)
(declare-fun top$b () A_set_set$)
(declare-fun top$c () A_list_set$)
(declare-fun top$d () A_llist_llist_set$)
(declare-fun top$e () A_llist_set_set$)
(declare-fun top$f () A_llist_list_set$)
(declare-fun top$g () A_set_list_set$)
(declare-fun top$h () A_list_set_set$)
(declare-fun top$i () A_set_set_set$)
(declare-fun top$j () A_llist_set_set_set$)
(declare-fun top$k () A_llist_list_set_set$)
(declare-fun top$l () A_set_list_set_set$)
(declare-fun top$m () A_list_set_set_set$)
(declare-fun top$n () A_set_set_set_set$)
(declare-fun top$o () A_llist_list_set_set_set$)
(declare-fun top$p () A_list_list_set$)
(declare-fun top$q () A_llist_set_list_set$)
(declare-fun top$r () A_llist_list_list_set$)
(declare-fun top$s () A_set_list_list_set$)
(declare-fun top$t () A_list_set_list_set$)
(declare-fun top$u () A_set_set_list_set$)
(declare-fun top$v () A_llist_list_set_list_set$)
(declare-fun lists$ (A_set$) A_list_set$)
(declare-fun minus$ (A_llist_set$ A_llist_set$) A_llist_set$)
(declare-fun atMost$ (A_set$) A_set_set$)
(declare-fun lists$a (A_llist_set$) A_llist_list_set$)
(declare-fun lists$b (A_set_set$) A_set_list_set$)
(declare-fun lists$c (A_list_set$) A_list_list_set$)
(declare-fun lists$d (A_llist_set_set$) A_llist_set_list_set$)
(declare-fun lists$e (A_llist_list_set$) A_llist_list_list_set$)
(declare-fun lists$f (A_set_list_set$) A_set_list_list_set$)
(declare-fun lists$g (A_list_set_set$) A_list_set_list_set$)
(declare-fun lists$h (A_set_set_set$) A_set_set_list_set$)
(declare-fun lists$i (A_llist_list_set_set$) A_llist_list_set_list_set$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun minus$a (A_llist_llist_set$ A_llist_llist_set$) A_llist_llist_set$)
(declare-fun minus$b (A_set_llist_set$ A_set_llist_set$) A_set_llist_set$)
(declare-fun minus$c (A_list_llist_set$ A_list_llist_set$) A_list_llist_set$)
(declare-fun minus$d (A_llist_set_llist_set$ A_llist_set_llist_set$) A_llist_set_llist_set$)
(declare-fun minus$e (A_llist_list_llist_set$ A_llist_list_llist_set$) A_llist_list_llist_set$)
(declare-fun minus$f (A_set_list_llist_set$ A_set_list_llist_set$) A_set_list_llist_set$)
(declare-fun minus$g (A_list_set_llist_set$ A_list_set_llist_set$) A_list_set_llist_set$)
(declare-fun minus$h (A_set_set_llist_set$ A_set_set_llist_set$) A_set_set_llist_set$)
(declare-fun minus$i (A_llist_llist_llist_set$ A_llist_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun minus$j (A_set$ A_set$) A_set$)
(declare-fun alllsts$ (A_set$) A_llist_set$)
(declare-fun atMost$a (A_llist_set$) A_llist_set_set$)
(declare-fun atMost$b (A_set_set$) A_set_set_set$)
(declare-fun atMost$c (A_list_set$) A_list_set_set$)
(declare-fun atMost$d (A_llist_set_set$) A_llist_set_set_set$)
(declare-fun atMost$e (A_llist_list_set$) A_llist_list_set_set$)
(declare-fun atMost$f (A_set_list_set$) A_set_list_set_set$)
(declare-fun atMost$g (A_list_set_set$) A_list_set_set_set$)
(declare-fun atMost$h (A_set_set_set$) A_set_set_set_set$)
(declare-fun atMost$i (A_llist_list_set_set$) A_llist_list_set_set_set$)
(declare-fun finlsts$ (A_set$) A_llist_set$)
(declare-fun inflsts$ (A_set$) A_llist_set$)
(declare-fun member$a (A$ A_set$) Bool)
(declare-fun member$b (A_set$ A_set_set$) Bool)
(declare-fun member$c (A_list$ A_list_set$) Bool)
(declare-fun member$d (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$e (A_llist_set$ A_llist_set_set$) Bool)
(declare-fun member$f (A_llist_list$ A_llist_list_set$) Bool)
(declare-fun member$g (A_set_list$ A_set_list_set$) Bool)
(declare-fun member$h (A_list_set$ A_list_set_set$) Bool)
(declare-fun member$i (A_set_set$ A_set_set_set$) Bool)
(declare-fun member$j (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$k (A_list_llist$ A_list_llist_set$) Bool)
(declare-fun member$l (A_llist_list_llist$ A_llist_list_llist_set$) Bool)
(declare-fun member$m (A_set_llist$ A_set_llist_set$) Bool)
(declare-fun member$n (A_llist_set_llist$ A_llist_set_llist_set$) Bool)
(declare-fun member$o (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun alllsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun alllsts$b (A_list_set$) A_list_llist_set$)
(declare-fun alllsts$c (A_llist_list_set$) A_llist_list_llist_set$)
(declare-fun alllsts$d (A_set_set$) A_set_llist_set$)
(declare-fun alllsts$e (A_llist_set_set$) A_llist_set_llist_set$)
(declare-fun alllsts$f (A_llist_set$) A_llist_llist_set$)
(declare-fun alllsts$g (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun alllsts$h (A_set_list_set$) A_set_list_llist_set$)
(declare-fun alllsts$i (A_list_set_set$) A_list_set_llist_set$)
(declare-fun alllsts$j (A_set_set_set$) A_set_set_llist_set$)
(declare-fun finlsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun finlsts$b (A_set_set$) A_set_llist_set$)
(declare-fun finlsts$c (A_list_set$) A_list_llist_set$)
(declare-fun finlsts$d (A_llist_set_set$) A_llist_set_llist_set$)
(declare-fun finlsts$e (A_llist_list_set$) A_llist_list_llist_set$)
(declare-fun finlsts$f (A_set_list_set$) A_set_list_llist_set$)
(declare-fun finlsts$g (A_list_set_set$) A_list_set_llist_set$)
(declare-fun finlsts$h (A_set_set_set$) A_set_set_llist_set$)
(declare-fun finlsts$i (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun inflsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun inflsts$b (A_set_set$) A_set_llist_set$)
(declare-fun inflsts$c (A_list_set$) A_list_llist_set$)
(declare-fun inflsts$d (A_llist_set_set$) A_llist_set_llist_set$)
(declare-fun inflsts$e (A_llist_list_set$) A_llist_list_llist_set$)
(declare-fun inflsts$f (A_set_list_set$) A_set_list_llist_set$)
(declare-fun inflsts$g (A_list_set_set$) A_list_set_llist_set$)
(declare-fun inflsts$h (A_set_set_set$) A_set_set_llist_set$)
(declare-fun inflsts$i (A_llist_llist_set$) A_llist_llist_llist_set$)
(assert (! (not (member$ s$ (alllsts$ top$))) :named a0))
(assert (! (member$ s$ top$a) :named a1))
(assert (! (forall ((?v0 A$)) (= (member$a ?v0 top$) true)) :named a2))
(assert (! (forall ((?v0 A_llist$)) (= (member$ ?v0 top$a) true)) :named a3))
(assert (! (forall ((?v0 A_set$)) (= (member$b ?v0 top$b) true)) :named a4))
(assert (! (forall ((?v0 A_list$)) (= (member$c ?v0 top$c) true)) :named a5))
(assert (! (forall ((?v0 A_llist_llist$)) (= (member$d ?v0 top$d) true)) :named a6))
(assert (! (forall ((?v0 A_llist_set$)) (= (member$e ?v0 top$e) true)) :named a7))
(assert (! (forall ((?v0 A_llist_list$)) (= (member$f ?v0 top$f) true)) :named a8))
(assert (! (forall ((?v0 A_set_list$)) (= (member$g ?v0 top$g) true)) :named a9))
(assert (! (forall ((?v0 A_list_set$)) (= (member$h ?v0 top$h) true)) :named a10))
(assert (! (forall ((?v0 A_set_set$)) (= (member$i ?v0 top$i) true)) :named a11))
(assert (! (forall ((?v0 A$)) (member$a ?v0 top$)) :named a12))
(assert (! (forall ((?v0 A_llist$)) (member$ ?v0 top$a)) :named a13))
(assert (! (forall ((?v0 A_set$)) (member$b ?v0 top$b)) :named a14))
(assert (! (forall ((?v0 A_list$)) (member$c ?v0 top$c)) :named a15))
(assert (! (forall ((?v0 A_llist_llist$)) (member$d ?v0 top$d)) :named a16))
(assert (! (forall ((?v0 A_llist_set$)) (member$e ?v0 top$e)) :named a17))
(assert (! (forall ((?v0 A_llist_list$)) (member$f ?v0 top$f)) :named a18))
(assert (! (forall ((?v0 A_set_list$)) (member$g ?v0 top$g)) :named a19))
(assert (! (forall ((?v0 A_list_set$)) (member$h ?v0 top$h)) :named a20))
(assert (! (forall ((?v0 A_set_set$)) (member$i ?v0 top$i)) :named a21))
(assert (! (forall ((?v0 A_set$)) (=> (forall ((?v1 A$)) (member$a ?v1 ?v0)) (= top$ ?v0))) :named a22))
(assert (! (forall ((?v0 A_llist_set$)) (=> (forall ((?v1 A_llist$)) (member$ ?v1 ?v0)) (= top$a ?v0))) :named a23))
(assert (! (forall ((?v0 A_set_set$)) (=> (forall ((?v1 A_set$)) (member$b ?v1 ?v0)) (= top$b ?v0))) :named a24))
(assert (! (forall ((?v0 A_list_set$)) (=> (forall ((?v1 A_list$)) (member$c ?v1 ?v0)) (= top$c ?v0))) :named a25))
(assert (! (forall ((?v0 A_llist_llist_set$)) (=> (forall ((?v1 A_llist_llist$)) (member$d ?v1 ?v0)) (= top$d ?v0))) :named a26))
(assert (! (forall ((?v0 A_llist_set_set$)) (=> (forall ((?v1 A_llist_set$)) (member$e ?v1 ?v0)) (= top$e ?v0))) :named a27))
(assert (! (forall ((?v0 A_llist_list_set$)) (=> (forall ((?v1 A_llist_list$)) (member$f ?v1 ?v0)) (= top$f ?v0))) :named a28))
(assert (! (forall ((?v0 A_set_list_set$)) (=> (forall ((?v1 A_set_list$)) (member$g ?v1 ?v0)) (= top$g ?v0))) :named a29))
(assert (! (forall ((?v0 A_list_set_set$)) (=> (forall ((?v1 A_list_set$)) (member$h ?v1 ?v0)) (= top$h ?v0))) :named a30))
(assert (! (forall ((?v0 A_set_set_set$)) (=> (forall ((?v1 A_set_set$)) (member$i ?v1 ?v0)) (= top$i ?v0))) :named a31))
(assert (! (exists ((?v0 A$)) (member$a ?v0 top$)) :named a32))
(assert (! (exists ((?v0 A_llist$)) (member$ ?v0 top$a)) :named a33))
(assert (! (exists ((?v0 A_set$)) (member$b ?v0 top$b)) :named a34))
(assert (! (exists ((?v0 A_list$)) (member$c ?v0 top$c)) :named a35))
(assert (! (exists ((?v0 A_llist_llist$)) (member$d ?v0 top$d)) :named a36))
(assert (! (exists ((?v0 A_llist_set$)) (member$e ?v0 top$e)) :named a37))
(assert (! (exists ((?v0 A_llist_list$)) (member$f ?v0 top$f)) :named a38))
(assert (! (exists ((?v0 A_set_list$)) (member$g ?v0 top$g)) :named a39))
(assert (! (exists ((?v0 A_list_set$)) (member$h ?v0 top$h)) :named a40))
(assert (! (exists ((?v0 A_set_set$)) (member$i ?v0 top$i)) :named a41))
(assert (! (forall ((?v0 A_llist_llist_set$)) (member$j lNil$b (alllsts$a ?v0))) :named a42))
(assert (! (forall ((?v0 A_list_set$)) (member$k lNil$c (alllsts$b ?v0))) :named a43))
(assert (! (forall ((?v0 A_llist_list_set$)) (member$l lNil$d (alllsts$c ?v0))) :named a44))
(assert (! (forall ((?v0 A_set_set$)) (member$m lNil$e (alllsts$d ?v0))) :named a45))
(assert (! (forall ((?v0 A_llist_set_set$)) (member$n lNil$f (alllsts$e ?v0))) :named a46))
(assert (! (forall ((?v0 A_llist_set$)) (member$d lNil$a (alllsts$f ?v0))) :named a47))
(assert (! (forall ((?v0 A_set$)) (member$ lNil$ (alllsts$ ?v0))) :named a48))
(assert (! (forall ((?v0 A_set$)) (= (= (atMost$ ?v0) top$b) (= ?v0 top$))) :named a49))
(assert (! (forall ((?v0 A_llist_set$)) (= (= (atMost$a ?v0) top$e) (= ?v0 top$a))) :named a50))
(assert (! (forall ((?v0 A_set_set$)) (= (= (atMost$b ?v0) top$i) (= ?v0 top$b))) :named a51))
(assert (! (forall ((?v0 A_list_set$)) (= (= (atMost$c ?v0) top$h) (= ?v0 top$c))) :named a52))
(assert (! (forall ((?v0 A_llist_set_set$)) (= (= (atMost$d ?v0) top$j) (= ?v0 top$e))) :named a53))
(assert (! (forall ((?v0 A_llist_list_set$)) (= (= (atMost$e ?v0) top$k) (= ?v0 top$f))) :named a54))
(assert (! (forall ((?v0 A_set_list_set$)) (= (= (atMost$f ?v0) top$l) (= ?v0 top$g))) :named a55))
(assert (! (forall ((?v0 A_list_set_set$)) (= (= (atMost$g ?v0) top$m) (= ?v0 top$h))) :named a56))
(assert (! (forall ((?v0 A_set_set_set$)) (= (= (atMost$h ?v0) top$n) (= ?v0 top$i))) :named a57))
(assert (! (forall ((?v0 A_llist_list_set_set$)) (= (= (atMost$i ?v0) top$o) (= ?v0 top$k))) :named a58))
(assert (! (= (sup$ top$b) top$) :named a59))
(assert (! (= (sup$a top$e) top$a) :named a60))
(assert (! (= (sup$b top$i) top$b) :named a61))
(assert (! (= (sup$c top$h) top$c) :named a62))
(assert (! (= (sup$d top$j) top$e) :named a63))
(assert (! (= (sup$e top$k) top$f) :named a64))
(assert (! (= (sup$f top$l) top$g) :named a65))
(assert (! (= (sup$g top$m) top$h) :named a66))
(assert (! (= (sup$h top$n) top$i) :named a67))
(assert (! (= (sup$i top$o) top$k) :named a68))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$o ?v0 (alllsts$g ?v1)) (member$j ?v2 ?v1)) (member$o (lCons$g ?v2 ?v0) (alllsts$g ?v1)))) :named a69))
(assert (! (forall ((?v0 A_list_llist$) (?v1 A_list_set$) (?v2 A_list$)) (=> (and (member$k ?v0 (alllsts$b ?v1)) (member$c ?v2 ?v1)) (member$k (lCons$c ?v2 ?v0) (alllsts$b ?v1)))) :named a70))
(assert (! (forall ((?v0 A_llist_list_llist$) (?v1 A_llist_list_set$) (?v2 A_llist_list$)) (=> (and (member$l ?v0 (alllsts$c ?v1)) (member$f ?v2 ?v1)) (member$l (lCons$d ?v2 ?v0) (alllsts$c ?v1)))) :named a71))
(assert (! (forall ((?v0 A_set_llist$) (?v1 A_set_set$) (?v2 A_set$)) (=> (and (member$m ?v0 (alllsts$d ?v1)) (member$b ?v2 ?v1)) (member$m (lCons$e ?v2 ?v0) (alllsts$d ?v1)))) :named a72))
(assert (! (forall ((?v0 A_llist_set_llist$) (?v1 A_llist_set_set$) (?v2 A_llist_set$)) (=> (and (member$n ?v0 (alllsts$e ?v1)) (member$e ?v2 ?v1)) (member$n (lCons$f ?v2 ?v0) (alllsts$e ?v1)))) :named a73))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$j ?v0 (alllsts$a ?v1)) (member$d ?v2 ?v1)) (member$j (lCons$b ?v2 ?v0) (alllsts$a ?v1)))) :named a74))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist$)) (=> (and (member$d ?v0 (alllsts$f ?v1)) (member$ ?v2 ?v1)) (member$d (lCons$a ?v2 ?v0) (alllsts$f ?v1)))) :named a75))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A$)) (=> (and (member$ ?v0 (alllsts$ ?v1)) (member$a ?v2 ?v1)) (member$ (lCons$ ?v2 ?v0) (alllsts$ ?v1)))) :named a76))
(assert (! (forall ((?v0 A_set$)) (! (= (inflsts$ ?v0) (minus$ (alllsts$ ?v0) (finlsts$ top$))) :pattern ((inflsts$ ?v0)))) :named a77))
(assert (! (forall ((?v0 A_llist_set$)) (! (= (inflsts$a ?v0) (minus$a (alllsts$f ?v0) (finlsts$a top$a))) :pattern ((inflsts$a ?v0)))) :named a78))
(assert (! (forall ((?v0 A_set_set$)) (! (= (inflsts$b ?v0) (minus$b (alllsts$d ?v0) (finlsts$b top$b))) :pattern ((inflsts$b ?v0)))) :named a79))
(assert (! (forall ((?v0 A_list_set$)) (! (= (inflsts$c ?v0) (minus$c (alllsts$b ?v0) (finlsts$c top$c))) :pattern ((inflsts$c ?v0)))) :named a80))
(assert (! (forall ((?v0 A_llist_set_set$)) (! (= (inflsts$d ?v0) (minus$d (alllsts$e ?v0) (finlsts$d top$e))) :pattern ((inflsts$d ?v0)))) :named a81))
(assert (! (forall ((?v0 A_llist_list_set$)) (! (= (inflsts$e ?v0) (minus$e (alllsts$c ?v0) (finlsts$e top$f))) :pattern ((inflsts$e ?v0)))) :named a82))
(assert (! (forall ((?v0 A_set_list_set$)) (! (= (inflsts$f ?v0) (minus$f (alllsts$h ?v0) (finlsts$f top$g))) :pattern ((inflsts$f ?v0)))) :named a83))
(assert (! (forall ((?v0 A_list_set_set$)) (! (= (inflsts$g ?v0) (minus$g (alllsts$i ?v0) (finlsts$g top$h))) :pattern ((inflsts$g ?v0)))) :named a84))
(assert (! (forall ((?v0 A_set_set_set$)) (! (= (inflsts$h ?v0) (minus$h (alllsts$j ?v0) (finlsts$h top$i))) :pattern ((inflsts$h ?v0)))) :named a85))
(assert (! (forall ((?v0 A_llist_llist_set$)) (! (= (inflsts$i ?v0) (minus$i (alllsts$a ?v0) (finlsts$i top$d))) :pattern ((inflsts$i ?v0)))) :named a86))
(assert (! (= (lists$ top$) top$c) :named a87))
(assert (! (= (lists$a top$a) top$f) :named a88))
(assert (! (= (lists$b top$b) top$g) :named a89))
(assert (! (= (lists$c top$c) top$p) :named a90))
(assert (! (= (lists$d top$e) top$q) :named a91))
(assert (! (= (lists$e top$f) top$r) :named a92))
(assert (! (= (lists$f top$g) top$s) :named a93))
(assert (! (= (lists$g top$h) top$t) :named a94))
(assert (! (= (lists$h top$i) top$u) :named a95))
(assert (! (= (lists$i top$k) top$v) :named a96))
(assert (! (= (pow$ top$) top$b) :named a97))
(assert (! (= (pow$a top$a) top$e) :named a98))
(assert (! (= (pow$b top$b) top$i) :named a99))
(assert (! (= (pow$c top$c) top$h) :named a100))
(assert (! (= (pow$d top$e) top$j) :named a101))
(assert (! (= (pow$e top$f) top$k) :named a102))
(assert (! (= (pow$f top$g) top$l) :named a103))
(assert (! (= (pow$g top$h) top$m) :named a104))
(assert (! (= (pow$h top$i) top$n) :named a105))
(assert (! (= (pow$i top$k) top$o) :named a106))
(assert (! (forall ((?v0 A_llist_list_llist$) (?v1 A_llist_list_llist_set$) (?v2 A_llist_list_llist_set$)) (= (member$l ?v0 (minus$e ?v1 ?v2)) (and (member$l ?v0 ?v1) (not (member$l ?v0 ?v2))))) :named a107))
(assert (! (forall ((?v0 A_set_llist$) (?v1 A_set_llist_set$) (?v2 A_set_llist_set$)) (= (member$m ?v0 (minus$b ?v1 ?v2)) (and (member$m ?v0 ?v1) (not (member$m ?v0 ?v2))))) :named a108))
(assert (! (forall ((?v0 A_llist_set_llist$) (?v1 A_llist_set_llist_set$) (?v2 A_llist_set_llist_set$)) (= (member$n ?v0 (minus$d ?v1 ?v2)) (and (member$n ?v0 ?v1) (not (member$n ?v0 ?v2))))) :named a109))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_set$)) (= (member$a ?v0 (minus$j ?v1 ?v2)) (and (member$a ?v0 ?v1) (not (member$a ?v0 ?v2))))) :named a110))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_set$)) (= (member$d ?v0 (minus$a ?v1 ?v2)) (and (member$d ?v0 ?v1) (not (member$d ?v0 ?v2))))) :named a111))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$) (?v2 A_llist_set$)) (= (member$ ?v0 (minus$ ?v1 ?v2)) (and (member$ ?v0 ?v1) (not (member$ ?v0 ?v2))))) :named a112))
(assert (! (forall ((?v0 A_llist_set$) (?v1 A_llist_set$)) (= (minus$ (minus$ ?v0 ?v1) ?v1) (minus$ ?v0 ?v1))) :named a113))
(assert (! (forall ((?v0 A_llist_llist_set$) (?v1 A_llist_llist_set$)) (= (minus$a (minus$a ?v0 ?v1) ?v1) (minus$a ?v0 ?v1))) :named a114))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_set$)) (=> (and (member$a ?v0 ?v1) (not (member$a ?v0 ?v2))) (member$a ?v0 (minus$j ?v1 ?v2)))) :named a115))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_set$)) (=> (and (member$d ?v0 ?v1) (not (member$d ?v0 ?v2))) (member$d ?v0 (minus$a ?v1 ?v2)))) :named a116))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$) (?v2 A_llist_set$)) (=> (and (member$ ?v0 ?v1) (not (member$ ?v0 ?v2))) (member$ ?v0 (minus$ ?v1 ?v2)))) :named a117))
(check-sat)
;(get-unsat-core)
