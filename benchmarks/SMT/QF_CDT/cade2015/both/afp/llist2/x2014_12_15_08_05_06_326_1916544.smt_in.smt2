; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 348
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_set_set$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_set_set_set$ 0)
(declare-sort A_bool_fun_set$ 0)
(declare-sort A_set_bool_fun$ 0)
(declare-sort A_llist_set_set$ 0)
(declare-sort A_set_llist_set$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_set_set_set_set$ 0)
(declare-sort A_bool_fun_set_set$ 0)
(declare-sort A_set_bool_fun_set$ 0)
(declare-sort A_set_set_bool_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort A_llist_set_set_set$ 0)
(declare-sort A_set_set_llist_set$ 0)
(declare-sort A_bool_fun_llist_set$ 0)
(declare-sort A_llist_bool_fun_set$ 0)
(declare-sort A_llist_set_bool_fun$ 0)
(declare-sort A_llist_set_llist_set$ 0)
(declare-sort A_llist_bool_fun_set_set$ 0)
(declare-sort A_llist_bool_fun_bool_fun$ 0)
(declare-sort A_llist_bool_fun_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_set_llist$ (lNil$a) (lCons$a (lhd$a A_set$) (ltl$a A_set_llist$)))
  (A_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist$) (ltl$b A_llist_llist$)))
  (A_llist_set_llist$ (lNil$c) (lCons$c (lhd$c A_llist_set$) (ltl$c A_llist_set_llist$)))
  (A_set_set_llist$ (lNil$d) (lCons$d (lhd$d A_set_set$) (ltl$d A_set_set_llist$)))
  (A_llist_bool_fun_llist$ (lNil$e) (lCons$e (select$ A_llist_bool_fun$) (selecta$ A_llist_bool_fun_llist$)))
  (A_bool_fun_llist$ (lNil$f) (lCons$f (selectb$ A_bool_fun$) (selectc$ A_bool_fun_llist$)))))
(declare-fun s$ () A_llist$)
(declare-fun top$ () A_set$)
(declare-fun top$a () A_set_llist_set$)
(declare-fun top$b () A_llist_llist_set$)
(declare-fun top$c () A_llist_set_set$)
(declare-fun top$d () A_set_set_set$)
(declare-fun top$e () A_llist_bool_fun_set$)
(declare-fun top$f () A_bool_fun_set$)
(declare-fun top$g () A_set_set$)
(declare-fun top$h () A_llist_set$)
(declare-fun top$i () A_set_bool_fun$)
(declare-fun top$j () Bool)
(declare-fun top$k () A_bool_fun$)
(declare-fun top$l () A_llist_bool_fun$)
(declare-fun top$m () A_llist_set_set_set$)
(declare-fun top$n () A_set_set_set_set$)
(declare-fun top$o () A_llist_bool_fun_set_set$)
(declare-fun top$p () A_bool_fun_set_set$)
(declare-fun top$q () A_set_bool_fun_set$)
(declare-fun top$r () A_llist_set_bool_fun$)
(declare-fun top$s () A_set_set_bool_fun$)
(declare-fun top$t () A_llist_bool_fun_bool_fun$)
(declare-fun top$u () A_bool_fun_bool_fun$)
(declare-fun top$v (A_set_llist$) Bool)
(declare-fun top$w (A_llist_llist$) Bool)
(declare-fun minus$ (A_llist_set_llist_set$ A_llist_set_llist_set$) A_llist_set_llist_set$)
(declare-fun atMost$ (A_llist_set_set$) A_llist_set_set_set$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun minus$a (A_set_set_llist_set$ A_set_set_llist_set$) A_set_set_llist_set$)
(declare-fun minus$b (A_llist_bool_fun_llist_set$ A_llist_bool_fun_llist_set$) A_llist_bool_fun_llist_set$)
(declare-fun minus$c (A_bool_fun_llist_set$ A_bool_fun_llist_set$) A_bool_fun_llist_set$)
(declare-fun minus$d (A_llist_llist_set$ A_llist_llist_set$) A_llist_llist_set$)
(declare-fun minus$e (A_set_llist_set$ A_set_llist_set$) A_set_llist_set$)
(declare-fun minus$f (A_llist_set$ A_llist_set$) A_llist_set$)
(declare-fun alllsts$ (A_set_set$) A_set_llist_set$)
(declare-fun atMost$a (A_set_set_set$) A_set_set_set_set$)
(declare-fun atMost$b (A_llist_bool_fun_set$) A_llist_bool_fun_set_set$)
(declare-fun atMost$c (A_bool_fun_set$) A_bool_fun_set_set$)
(declare-fun atMost$d (A_set_bool_fun$) A_set_bool_fun_set$)
(declare-fun atMost$e (A_llist_set$) A_llist_set_set$)
(declare-fun atMost$f (A_set_set$) A_set_set_set$)
(declare-fun atMost$g (A_bool_fun$) A_bool_fun_set$)
(declare-fun atMost$h (A_llist_bool_fun$) A_llist_bool_fun_set$)
(declare-fun atMost$i (A_set$) A_set_set$)
(declare-fun collect$ (A_llist_set_bool_fun$) A_llist_set_set$)
(declare-fun finlsts$ (A_set_set$) A_set_llist_set$)
(declare-fun fun_app$ (A_set_bool_fun$ A_set$) Bool)
(declare-fun inflsts$ (A_llist_set_set$) A_llist_set_llist_set$)
(declare-fun member$a (A_set_llist$ A_set_llist_set$) Bool)
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$c (A_llist_set$ A_llist_set_set$) Bool)
(declare-fun member$d (A_set_set$ A_set_set_set$) Bool)
(declare-fun member$e (A_llist_bool_fun$ A_llist_bool_fun_set$) Bool)
(declare-fun member$f (A_bool_fun$ A_bool_fun_set$) Bool)
(declare-fun member$g (A_set$ A_set_set$) Bool)
(declare-fun member$h (A$) A_set_bool_fun$)
(declare-fun member$i (A_llist_set_llist$ A_llist_set_llist_set$) Bool)
(declare-fun member$j (A_set_set_llist$ A_set_set_llist_set$) Bool)
(declare-fun member$k (A_llist_bool_fun_llist$ A_llist_bool_fun_llist_set$) Bool)
(declare-fun member$l (A_bool_fun_llist$ A_bool_fun_llist_set$) Bool)
(declare-fun poslsts$ (A_set$) A_llist_set$)
(declare-fun alllsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun alllsts$b (A_set$) A_llist_set$)
(declare-fun alllsts$c (A_llist_set_set$) A_llist_set_llist_set$)
(declare-fun alllsts$d (A_set_set_set$) A_set_set_llist_set$)
(declare-fun alllsts$e (A_llist_bool_fun_set$) A_llist_bool_fun_llist_set$)
(declare-fun alllsts$f (A_bool_fun_set$) A_bool_fun_llist_set$)
(declare-fun alllstsp$ (A_bool_fun$) A_llist_bool_fun$)
(declare-fun collect$a (A_set_set_bool_fun$) A_set_set_set$)
(declare-fun collect$b (A_llist_bool_fun_bool_fun$) A_llist_bool_fun_set$)
(declare-fun collect$c (A_bool_fun_bool_fun$) A_bool_fun_set$)
(declare-fun collect$d (A_llist_bool_fun$) A_llist_set$)
(declare-fun collect$e (A_set_bool_fun$) A_set_set$)
(declare-fun collect$f (A_bool_fun$) A_set$)
(declare-fun finlsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun finlsts$b (A_set$) A_llist_set$)
(declare-fun finlsts$c (A_llist_set_set$) A_llist_set_llist_set$)
(declare-fun finlsts$d (A_set_set_set$) A_set_set_llist_set$)
(declare-fun finlsts$e (A_llist_bool_fun_set$) A_llist_bool_fun_llist_set$)
(declare-fun finlsts$f (A_bool_fun_set$) A_bool_fun_llist_set$)
(declare-fun finlstsp$ (A_bool_fun$) A_llist_bool_fun$)
(declare-fun fun_app$a (A_bool_fun$ A$) Bool)
(declare-fun fun_app$b (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun fun_app$c (A_llist_set_bool_fun$ A_llist_set$) Bool)
(declare-fun fun_app$d (A_set_set_bool_fun$ A_set_set$) Bool)
(declare-fun fun_app$e (A_llist_bool_fun_bool_fun$ A_llist_bool_fun$) Bool)
(declare-fun fun_app$f (A_bool_fun_bool_fun$ A_bool_fun$) Bool)
(declare-fun inflsts$a (A_set_set_set$) A_set_set_llist_set$)
(declare-fun inflsts$b (A_llist_bool_fun_set$) A_llist_bool_fun_llist_set$)
(declare-fun inflsts$c (A_bool_fun_set$) A_bool_fun_llist_set$)
(declare-fun inflsts$d (A_llist_set$) A_llist_llist_set$)
(declare-fun inflsts$e (A_set_set$) A_set_llist_set$)
(declare-fun inflsts$f (A_set$) A_llist_set$)
(declare-fun poslsts$a (A_set_set$) A_set_llist_set$)
(declare-fun poslsts$b (A_llist_set$) A_llist_llist_set$)
(assert (! (not (= (member$ s$ (poslsts$ top$)) (not (= s$ lNil$)))) :named a0))
(assert (! (forall ((?v0 A_set_llist$)) (= (member$a ?v0 top$a) true)) :named a1))
(assert (! (forall ((?v0 A_llist_llist$)) (= (member$b ?v0 top$b) true)) :named a2))
(assert (! (forall ((?v0 A_llist_set$)) (= (member$c ?v0 top$c) true)) :named a3))
(assert (! (forall ((?v0 A_set_set$)) (= (member$d ?v0 top$d) true)) :named a4))
(assert (! (forall ((?v0 A_llist_bool_fun$)) (= (member$e ?v0 top$e) true)) :named a5))
(assert (! (forall ((?v0 A_bool_fun$)) (= (member$f ?v0 top$f) true)) :named a6))
(assert (! (forall ((?v0 A_set$)) (= (member$g ?v0 top$g) true)) :named a7))
(assert (! (forall ((?v0 A_llist$)) (= (member$ ?v0 top$h) true)) :named a8))
(assert (! (forall ((?v0 A$)) (= (fun_app$ (member$h ?v0) top$) true)) :named a9))
(assert (! (forall ((?v0 A_set_llist$)) (member$a ?v0 top$a)) :named a10))
(assert (! (forall ((?v0 A_llist_llist$)) (member$b ?v0 top$b)) :named a11))
(assert (! (forall ((?v0 A_llist_set$)) (member$c ?v0 top$c)) :named a12))
(assert (! (forall ((?v0 A_set_set$)) (member$d ?v0 top$d)) :named a13))
(assert (! (forall ((?v0 A_llist_bool_fun$)) (member$e ?v0 top$e)) :named a14))
(assert (! (forall ((?v0 A_bool_fun$)) (member$f ?v0 top$f)) :named a15))
(assert (! (forall ((?v0 A_set$)) (member$g ?v0 top$g)) :named a16))
(assert (! (forall ((?v0 A_llist$)) (member$ ?v0 top$h)) :named a17))
(assert (! (forall ((?v0 A$)) (fun_app$ (member$h ?v0) top$)) :named a18))
(assert (! (forall ((?v0 A_set$)) (! (= (fun_app$ top$i ?v0) top$j) :pattern ((fun_app$ top$i ?v0)))) :named a19))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$a top$k ?v0) top$j) :pattern ((fun_app$a top$k ?v0)))) :named a20))
(assert (! (forall ((?v0 A_llist$)) (! (= (fun_app$b top$l ?v0) top$j) :pattern ((fun_app$b top$l ?v0)))) :named a21))
(assert (! (forall ((?v0 A_set_llist$) (?v1 A_set_set$)) (= (member$a ?v0 (poslsts$a ?v1)) (and (member$a ?v0 (alllsts$ ?v1)) (not (= ?v0 lNil$a))))) :named a22))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (= (member$b ?v0 (poslsts$b ?v1)) (and (member$b ?v0 (alllsts$a ?v1)) (not (= ?v0 lNil$b))))) :named a23))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (= (member$ ?v0 (poslsts$ ?v1)) (and (member$ ?v0 (alllsts$b ?v1)) (not (= ?v0 lNil$))))) :named a24))
(assert (! (forall ((?v0 A_set_llist_set$)) (=> (forall ((?v1 A_set_llist$)) (member$a ?v1 ?v0)) (= top$a ?v0))) :named a25))
(assert (! (forall ((?v0 A_llist_llist_set$)) (=> (forall ((?v1 A_llist_llist$)) (member$b ?v1 ?v0)) (= top$b ?v0))) :named a26))
(assert (! (forall ((?v0 A_llist_set_set$)) (=> (forall ((?v1 A_llist_set$)) (member$c ?v1 ?v0)) (= top$c ?v0))) :named a27))
(assert (! (forall ((?v0 A_set_set_set$)) (=> (forall ((?v1 A_set_set$)) (member$d ?v1 ?v0)) (= top$d ?v0))) :named a28))
(assert (! (forall ((?v0 A_llist_bool_fun_set$)) (=> (forall ((?v1 A_llist_bool_fun$)) (member$e ?v1 ?v0)) (= top$e ?v0))) :named a29))
(assert (! (forall ((?v0 A_bool_fun_set$)) (=> (forall ((?v1 A_bool_fun$)) (member$f ?v1 ?v0)) (= top$f ?v0))) :named a30))
(assert (! (forall ((?v0 A_set_set$)) (=> (forall ((?v1 A_set$)) (member$g ?v1 ?v0)) (= top$g ?v0))) :named a31))
(assert (! (forall ((?v0 A_llist_set$)) (=> (forall ((?v1 A_llist$)) (member$ ?v1 ?v0)) (= top$h ?v0))) :named a32))
(assert (! (forall ((?v0 A_set$)) (=> (forall ((?v1 A$)) (fun_app$ (member$h ?v1) ?v0)) (= top$ ?v0))) :named a33))
(assert (! (exists ((?v0 A_set_llist$)) (member$a ?v0 top$a)) :named a34))
(assert (! (exists ((?v0 A_llist_llist$)) (member$b ?v0 top$b)) :named a35))
(assert (! (exists ((?v0 A_llist_set$)) (member$c ?v0 top$c)) :named a36))
(assert (! (exists ((?v0 A_set_set$)) (member$d ?v0 top$d)) :named a37))
(assert (! (exists ((?v0 A_llist_bool_fun$)) (member$e ?v0 top$e)) :named a38))
(assert (! (exists ((?v0 A_bool_fun$)) (member$f ?v0 top$f)) :named a39))
(assert (! (exists ((?v0 A_set$)) (member$g ?v0 top$g)) :named a40))
(assert (! (exists ((?v0 A_llist$)) (member$ ?v0 top$h)) :named a41))
(assert (! (exists ((?v0 A$)) (fun_app$ (member$h ?v0) top$)) :named a42))
(assert (! (forall ((?v0 A_bool_fun$)) (fun_app$b (finlstsp$ ?v0) lNil$)) :named a43))
(assert (! (forall ((?v0 A_llist_set_llist$)) (member$i ?v0 (alllsts$c top$c))) :named a44))
(assert (! (forall ((?v0 A_set_set_llist$)) (member$j ?v0 (alllsts$d top$d))) :named a45))
(assert (! (forall ((?v0 A_llist_bool_fun_llist$)) (member$k ?v0 (alllsts$e top$e))) :named a46))
(assert (! (forall ((?v0 A_bool_fun_llist$)) (member$l ?v0 (alllsts$f top$f))) :named a47))
(assert (! (forall ((?v0 A_llist_llist$)) (member$b ?v0 (alllsts$a top$h))) :named a48))
(assert (! (forall ((?v0 A_set_llist$)) (member$a ?v0 (alllsts$ top$g))) :named a49))
(assert (! (forall ((?v0 A_llist$)) (member$ ?v0 (alllsts$b top$))) :named a50))
(assert (! (forall ((?v0 A_set_set$)) (member$a lNil$a (finlsts$ ?v0))) :named a51))
(assert (! (forall ((?v0 A_llist_set$)) (member$b lNil$b (finlsts$a ?v0))) :named a52))
(assert (! (forall ((?v0 A_set$)) (member$ lNil$ (finlsts$b ?v0))) :named a53))
(assert (! (forall ((?v0 A_bool_fun$)) (fun_app$b (alllstsp$ ?v0) lNil$)) :named a54))
(assert (! (forall ((?v0 A_set_set$)) (member$a lNil$a (alllsts$ ?v0))) :named a55))
(assert (! (forall ((?v0 A_llist_set$)) (member$b lNil$b (alllsts$a ?v0))) :named a56))
(assert (! (forall ((?v0 A_set$)) (member$ lNil$ (alllsts$b ?v0))) :named a57))
(assert (! (forall ((?v0 A_llist_set_set$)) (= (= (atMost$ ?v0) top$m) (= ?v0 top$c))) :named a58))
(assert (! (forall ((?v0 A_set_set_set$)) (= (= (atMost$a ?v0) top$n) (= ?v0 top$d))) :named a59))
(assert (! (forall ((?v0 A_llist_bool_fun_set$)) (= (= (atMost$b ?v0) top$o) (= ?v0 top$e))) :named a60))
(assert (! (forall ((?v0 A_bool_fun_set$)) (= (= (atMost$c ?v0) top$p) (= ?v0 top$f))) :named a61))
(assert (! (forall ((?v0 A_set_bool_fun$)) (= (= (atMost$d ?v0) top$q) (= ?v0 top$i))) :named a62))
(assert (! (forall ((?v0 A_llist_set$)) (= (= (atMost$e ?v0) top$c) (= ?v0 top$h))) :named a63))
(assert (! (forall ((?v0 A_set_set$)) (= (= (atMost$f ?v0) top$d) (= ?v0 top$g))) :named a64))
(assert (! (forall ((?v0 A_bool_fun$)) (= (= (atMost$g ?v0) top$f) (= ?v0 top$k))) :named a65))
(assert (! (forall ((?v0 A_llist_bool_fun$)) (= (= (atMost$h ?v0) top$e) (= ?v0 top$l))) :named a66))
(assert (! (forall ((?v0 A_set$)) (= (= (atMost$i ?v0) top$g) (= ?v0 top$))) :named a67))
(assert (! (= top$c (collect$ top$r)) :named a68))
(assert (! (= top$d (collect$a top$s)) :named a69))
(assert (! (= top$e (collect$b top$t)) :named a70))
(assert (! (= top$f (collect$c top$u)) :named a71))
(assert (! (= top$h (collect$d top$l)) :named a72))
(assert (! (= top$g (collect$e top$i)) :named a73))
(assert (! (= top$ (collect$f top$k)) :named a74))
(assert (! (forall ((?v0 A_set_llist$)) (! (= (top$v ?v0) (member$a ?v0 top$a)) :pattern ((top$v ?v0)))) :named a75))
(assert (! (forall ((?v0 A_llist_llist$)) (! (= (top$w ?v0) (member$b ?v0 top$b)) :pattern ((top$w ?v0)))) :named a76))
(assert (! (forall ((?v0 A_llist_set$)) (! (= (fun_app$c top$r ?v0) (member$c ?v0 top$c)) :pattern ((fun_app$c top$r ?v0)))) :named a77))
(assert (! (forall ((?v0 A_set_set$)) (! (= (fun_app$d top$s ?v0) (member$d ?v0 top$d)) :pattern ((fun_app$d top$s ?v0)))) :named a78))
(assert (! (forall ((?v0 A_llist_bool_fun$)) (! (= (fun_app$e top$t ?v0) (member$e ?v0 top$e)) :pattern ((fun_app$e top$t ?v0)))) :named a79))
(assert (! (forall ((?v0 A_bool_fun$)) (! (= (fun_app$f top$u ?v0) (member$f ?v0 top$f)) :pattern ((fun_app$f top$u ?v0)))) :named a80))
(assert (! (forall ((?v0 A_set$)) (! (= (fun_app$ top$i ?v0) (member$g ?v0 top$g)) :pattern ((fun_app$ top$i ?v0)))) :named a81))
(assert (! (forall ((?v0 A_llist$)) (! (= (fun_app$b top$l ?v0) (member$ ?v0 top$h)) :pattern ((fun_app$b top$l ?v0)))) :named a82))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$a top$k ?v0) (fun_app$ (member$h ?v0) top$)) :pattern ((fun_app$a top$k ?v0)))) :named a83))
(assert (! (forall ((?v0 A_llist_set_set$)) (! (= (inflsts$ ?v0) (minus$ (alllsts$c ?v0) (finlsts$c top$c))) :pattern ((inflsts$ ?v0)))) :named a84))
(assert (! (forall ((?v0 A_set_set_set$)) (! (= (inflsts$a ?v0) (minus$a (alllsts$d ?v0) (finlsts$d top$d))) :pattern ((inflsts$a ?v0)))) :named a85))
(assert (! (forall ((?v0 A_llist_bool_fun_set$)) (! (= (inflsts$b ?v0) (minus$b (alllsts$e ?v0) (finlsts$e top$e))) :pattern ((inflsts$b ?v0)))) :named a86))
(assert (! (forall ((?v0 A_bool_fun_set$)) (! (= (inflsts$c ?v0) (minus$c (alllsts$f ?v0) (finlsts$f top$f))) :pattern ((inflsts$c ?v0)))) :named a87))
(assert (! (forall ((?v0 A_llist_set$)) (! (= (inflsts$d ?v0) (minus$d (alllsts$a ?v0) (finlsts$a top$h))) :pattern ((inflsts$d ?v0)))) :named a88))
(assert (! (forall ((?v0 A_set_set$)) (! (= (inflsts$e ?v0) (minus$e (alllsts$ ?v0) (finlsts$ top$g))) :pattern ((inflsts$e ?v0)))) :named a89))
(assert (! (forall ((?v0 A_set$)) (! (= (inflsts$f ?v0) (minus$f (alllsts$b ?v0) (finlsts$b top$))) :pattern ((inflsts$f ?v0)))) :named a90))
(check-sat)
;(get-unsat-core)
