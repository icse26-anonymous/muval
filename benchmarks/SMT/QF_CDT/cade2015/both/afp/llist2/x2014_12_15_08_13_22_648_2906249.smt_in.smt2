; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 446
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))))
(declare-fun a$ () A_set$)
(declare-fun bot$ () A_llist_set$)
(declare-fun bot$a () A_llist_llist_llist_set$)
(declare-fun bot$b () A_llist_llist_set$)
(declare-fun bot$c () A_set$)
(declare-fun bot$d () A_bool_fun$)
(declare-fun bot$e () Bool)
(declare-fun bot$f () A_llist_llist_bool_fun$)
(declare-fun bot$g () A_llist_bool_fun$)
(declare-fun bot$h () A_llist_llist_llist_llist_set$)
(declare-fun bot$i () A_llist_llist_llist_bool_fun$)
(declare-fun insert$ (A_llist$ A_llist_set$) A_llist_set$)
(declare-fun member$ (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun alllsts$ (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun collect$ (A_llist_llist_llist_bool_fun$) A_llist_llist_llist_set$)
(declare-fun finpref$ (A_set$ A_llist$) A_llist_set$)
(declare-fun fun_app$ (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$) Bool)
(declare-fun insert$a (A_llist_llist_llist$ A_llist_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun insert$b (A_llist_llist$ A_llist_llist_set$) A_llist_llist_set$)
(declare-fun insert$c (A$ A_set$) A_set$)
(declare-fun insert$d (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$b (A$ A_set$) Bool)
(declare-fun member$c (A_llist$ A_llist_set$) Bool)
(declare-fun poslsts$ (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun alllsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun alllsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun alllsts$c (A_set$) A_llist_set$)
(declare-fun collect$a (A_llist_llist_bool_fun$) A_llist_llist_set$)
(declare-fun collect$b (A_bool_fun$) A_set$)
(declare-fun collect$c (A_llist_bool_fun$) A_llist_set$)
(declare-fun fun_app$a (A_llist_llist_bool_fun$ A_llist_llist$) Bool)
(declare-fun fun_app$b (A_bool_fun$ A$) Bool)
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun poslsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun poslsts$b (A_set$) A_llist_set$)
(declare-fun poslsts$c (A_llist_set$) A_llist_llist_set$)
(assert (! (not (= (finpref$ a$ lNil$) (insert$ lNil$ bot$))) :named a0))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (member$ ?v0 (insert$a ?v0 bot$a))) :named a1))
(assert (! (forall ((?v0 A_llist_llist$)) (member$a ?v0 (insert$b ?v0 bot$b))) :named a2))
(assert (! (forall ((?v0 A$)) (member$b ?v0 (insert$c ?v0 bot$c))) :named a3))
(assert (! (forall ((?v0 A_llist$)) (member$c ?v0 (insert$ ?v0 bot$))) :named a4))
(assert (! (forall ((?v0 A$) (?v1 A_set$)) (= (insert$c ?v0 (insert$c ?v0 ?v1)) (insert$c ?v0 ?v1))) :named a5))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (= (insert$a ?v0 (insert$a ?v0 ?v1)) (insert$a ?v0 ?v1))) :named a6))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$)) (= (insert$b ?v0 (insert$b ?v0 ?v1)) (insert$b ?v0 ?v1))) :named a7))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$)) (= (insert$ ?v0 (insert$ ?v0 ?v1)) (insert$ ?v0 ?v1))) :named a8))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_llist_set$)) (= (member$ ?v0 (insert$a ?v1 ?v2)) (or (= ?v0 ?v1) (member$ ?v0 ?v2)))) :named a9))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A_set$)) (= (member$b ?v0 (insert$c ?v1 ?v2)) (or (= ?v0 ?v1) (member$b ?v0 ?v2)))) :named a10))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_llist_set$)) (= (member$a ?v0 (insert$b ?v1 ?v2)) (or (= ?v0 ?v1) (member$a ?v0 ?v2)))) :named a11))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist_set$)) (= (member$c ?v0 (insert$ ?v1 ?v2)) (or (= ?v0 ?v1) (member$c ?v0 ?v2)))) :named a12))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (=> (not (member$ ?v0 ?v1)) (= ?v0 ?v2)) (member$ ?v0 (insert$a ?v2 ?v1)))) :named a13))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A$)) (=> (=> (not (member$b ?v0 ?v1)) (= ?v0 ?v2)) (member$b ?v0 (insert$c ?v2 ?v1)))) :named a14))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist$)) (=> (=> (not (member$a ?v0 ?v1)) (= ?v0 ?v2)) (member$a ?v0 (insert$b ?v2 ?v1)))) :named a15))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$) (?v2 A_llist$)) (=> (=> (not (member$c ?v0 ?v1)) (= ?v0 ?v2)) (member$c ?v0 (insert$ ?v2 ?v1)))) :named a16))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$)) (= (= (collect$ ?v0) bot$a) (forall ((?v1 A_llist_llist_llist$)) (not (fun_app$ ?v0 ?v1))))) :named a17))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$)) (= (= (collect$a ?v0) bot$b) (forall ((?v1 A_llist_llist$)) (not (fun_app$a ?v0 ?v1))))) :named a18))
(assert (! (forall ((?v0 A_bool_fun$)) (= (= (collect$b ?v0) bot$c) (forall ((?v1 A$)) (not (fun_app$b ?v0 ?v1))))) :named a19))
(assert (! (forall ((?v0 A_llist_bool_fun$)) (= (= (collect$c ?v0) bot$) (forall ((?v1 A_llist$)) (not (fun_app$c ?v0 ?v1))))) :named a20))
(assert (! (forall ((?v0 A_llist_llist_llist_set$)) (= (forall ((?v1 A_llist_llist_llist$)) (not (member$ ?v1 ?v0))) (= ?v0 bot$a))) :named a21))
(assert (! (forall ((?v0 A_llist_llist_set$)) (= (forall ((?v1 A_llist_llist$)) (not (member$a ?v1 ?v0))) (= ?v0 bot$b))) :named a22))
(assert (! (forall ((?v0 A_set$)) (= (forall ((?v1 A$)) (not (member$b ?v1 ?v0))) (= ?v0 bot$c))) :named a23))
(assert (! (forall ((?v0 A_llist_set$)) (= (forall ((?v1 A_llist$)) (not (member$c ?v1 ?v0))) (= ?v0 bot$))) :named a24))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$)) (= (= bot$a (collect$ ?v0)) (forall ((?v1 A_llist_llist_llist$)) (not (fun_app$ ?v0 ?v1))))) :named a25))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$)) (= (= bot$b (collect$a ?v0)) (forall ((?v1 A_llist_llist$)) (not (fun_app$a ?v0 ?v1))))) :named a26))
(assert (! (forall ((?v0 A_bool_fun$)) (= (= bot$c (collect$b ?v0)) (forall ((?v1 A$)) (not (fun_app$b ?v0 ?v1))))) :named a27))
(assert (! (forall ((?v0 A_llist_bool_fun$)) (= (= bot$ (collect$c ?v0)) (forall ((?v1 A_llist$)) (not (fun_app$c ?v0 ?v1))))) :named a28))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (= (member$ ?v0 bot$a) false)) :named a29))
(assert (! (forall ((?v0 A_llist_llist$)) (= (member$a ?v0 bot$b) false)) :named a30))
(assert (! (forall ((?v0 A$)) (= (member$b ?v0 bot$c) false)) :named a31))
(assert (! (forall ((?v0 A_llist$)) (= (member$c ?v0 bot$) false)) :named a32))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$b bot$d ?v0) bot$e) :pattern ((fun_app$b bot$d ?v0)))) :named a33))
(assert (! (forall ((?v0 A_llist_llist$)) (! (= (fun_app$a bot$f ?v0) bot$e) :pattern ((fun_app$a bot$f ?v0)))) :named a34))
(assert (! (forall ((?v0 A_llist$)) (! (= (fun_app$c bot$g ?v0) bot$e) :pattern ((fun_app$c bot$g ?v0)))) :named a35))
(assert (! (= (poslsts$ bot$a) bot$h) :named a36))
(assert (! (= (poslsts$a bot$b) bot$a) :named a37))
(assert (! (= (poslsts$b bot$c) bot$) :named a38))
(assert (! (= (poslsts$c bot$) bot$b) :named a39))
(assert (! (= (alllsts$ bot$a) (insert$d lNil$c bot$h)) :named a40))
(assert (! (= (alllsts$a bot$b) (insert$a lNil$b bot$a)) :named a41))
(assert (! (= (alllsts$b bot$) (insert$b lNil$a bot$b)) :named a42))
(assert (! (= (alllsts$c bot$c) (insert$ lNil$ bot$)) :named a43))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_llist$) (?v3 A_llist_llist_llist$)) (= (= (insert$a ?v0 (insert$a ?v1 bot$a)) (insert$a ?v2 (insert$a ?v3 bot$a))) (or (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= ?v0 ?v3) (= ?v1 ?v2))))) :named a44))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_llist$) (?v3 A_llist_llist$)) (= (= (insert$b ?v0 (insert$b ?v1 bot$b)) (insert$b ?v2 (insert$b ?v3 bot$b))) (or (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= ?v0 ?v3) (= ?v1 ?v2))))) :named a45))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$) (?v3 A$)) (= (= (insert$c ?v0 (insert$c ?v1 bot$c)) (insert$c ?v2 (insert$c ?v3 bot$c))) (or (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= ?v0 ?v3) (= ?v1 ?v2))))) :named a46))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$) (?v3 A_llist$)) (= (= (insert$ ?v0 (insert$ ?v1 bot$)) (insert$ ?v2 (insert$ ?v3 bot$))) (or (and (= ?v0 ?v2) (= ?v1 ?v3)) (and (= ?v0 ?v3) (= ?v1 ?v2))))) :named a47))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (= (member$ ?v0 (poslsts$a ?v1)) (and (member$ ?v0 (alllsts$a ?v1)) (not (= ?v0 lNil$b))))) :named a48))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (= (member$a ?v0 (poslsts$c ?v1)) (and (member$a ?v0 (alllsts$b ?v1)) (not (= ?v0 lNil$a))))) :named a49))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (= (member$c ?v0 (poslsts$b ?v1)) (and (member$c ?v0 (alllsts$c ?v1)) (not (= ?v0 lNil$))))) :named a50))
(assert (! (= bot$a (collect$ bot$i)) :named a51))
(assert (! (= bot$b (collect$a bot$f)) :named a52))
(assert (! (= bot$c (collect$b bot$d)) :named a53))
(assert (! (= bot$ (collect$c bot$g)) :named a54))
(assert (! (forall ((?v0 A_llist_llist_set$)) (member$ lNil$b (alllsts$a ?v0))) :named a55))
(assert (! (forall ((?v0 A_llist_set$)) (member$a lNil$a (alllsts$b ?v0))) :named a56))
(assert (! (forall ((?v0 A_set$)) (member$c lNil$ (alllsts$c ?v0))) :named a57))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$b bot$d ?v0) bot$e) :pattern ((fun_app$b bot$d ?v0)))) :named a58))
(assert (! (forall ((?v0 A_llist_llist$)) (! (= (fun_app$a bot$f ?v0) bot$e) :pattern ((fun_app$a bot$f ?v0)))) :named a59))
(assert (! (forall ((?v0 A_llist$)) (! (= (fun_app$c bot$g ?v0) bot$e) :pattern ((fun_app$c bot$g ?v0)))) :named a60))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (=> (member$ ?v0 bot$a) false)) :named a61))
(assert (! (forall ((?v0 A_llist_llist$)) (=> (member$a ?v0 bot$b) false)) :named a62))
(assert (! (forall ((?v0 A$)) (=> (member$b ?v0 bot$c) false)) :named a63))
(assert (! (forall ((?v0 A_llist$)) (=> (member$c ?v0 bot$) false)) :named a64))
(check-sat)
;(get-unsat-core)
