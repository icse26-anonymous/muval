; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 508
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_set_set$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_set_set_set$ 0)
(declare-sort A_llist_set_set$ 0)
(declare-sort A_set_llist_set$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_set_set_set_set$ 0)
(declare-sort A_set_set_llist_set$ 0)
(declare-codatatypes () ((A_set_llist$ (lNil$) (lCons$ (lhd$ A_set$) (ltl$ A_set_llist$)))
  (A_llist$ (lNil$a) (lCons$a (lhd$a A$) (ltl$a A_llist$)))
  (A_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist$) (ltl$b A_llist_llist$)))
  (A_set_set_llist$ (lNil$c) (lCons$c (lhd$c A_set_set$) (ltl$c A_set_set_llist$)))))
(declare-fun p$ () A_llist_set$)
(declare-fun sup$ (A_llist_set_set$) A_llist_set$)
(declare-fun top$ () A_set$)
(declare-fun sup$a (A_set_set_set_set$) A_set_set_set$)
(declare-fun sup$b (A_set_set_set$) A_set_set$)
(declare-fun sup$c (A_set_set$) A_set$)
(declare-fun top$a () A_set_llist_set$)
(declare-fun top$b () A_set_set_set$)
(declare-fun top$c () A_llist_set$)
(declare-fun top$d () A_set_set$)
(declare-fun top$e () A_llist_set_set$)
(declare-fun top$f () A_set_set_set_set$)
(declare-fun atMost$ (A_llist_set$) A_llist_set_set$)
(declare-fun member$ (A_set_llist$ A_set_llist_set$) Bool)
(declare-fun safety$ (A_set$ A_llist_set$) Bool)
(declare-fun alllsts$ (A_llist_set$) A_llist_llist_set$)
(declare-fun atMost$a (A_set_set_set$) A_set_set_set_set$)
(declare-fun atMost$b (A_set_set$) A_set_set_set$)
(declare-fun atMost$c (A_set$) A_set_set$)
(declare-fun atMost$d (A_set_llist$) A_set_llist_set$)
(declare-fun atMost$e (A_llist$) A_llist_set$)
(declare-fun finlsts$ (A_llist_set$) A_llist_llist_set$)
(declare-fun inflsts$ (A_llist_set$) A_llist_llist_set$)
(declare-fun less_eq$ (A_set_llist$ A_set_llist$) Bool)
(declare-fun member$a (A_set_set$ A_set_set_set$) Bool)
(declare-fun member$b (A_llist$ A_llist_set$) Bool)
(declare-fun member$c (A_set$ A_set_set$) Bool)
(declare-fun member$d (A$ A_set$) Bool)
(declare-fun member$e (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$f (A_set_set_llist$ A_set_set_llist_set$) Bool)
(declare-fun member$g (A_llist_set$ A_llist_set_set$) Bool)
(declare-fun alllsts$a (A_set_set_set$) A_set_set_llist_set$)
(declare-fun alllsts$b (A_set_set$) A_set_llist_set$)
(declare-fun alllsts$c (A_set$) A_llist_set$)
(declare-fun finlsts$a (A_set_set_set$) A_set_set_llist_set$)
(declare-fun finlsts$b (A_set_set$) A_set_llist_set$)
(declare-fun finlsts$c (A_set$) A_llist_set$)
(declare-fun inflsts$a (A_set_set_set$) A_set_set_llist_set$)
(declare-fun inflsts$b (A_set_set$) A_set_llist_set$)
(declare-fun inflsts$c (A_set$) A_llist_set$)
(declare-fun less_eq$a (A_llist$ A_llist$) Bool)
(declare-fun less_eq$b (A_set$ A_set$) Bool)
(declare-fun less_eq$c (A_set_set$ A_set_set$) Bool)
(declare-fun less_eq$d (A_llist_set$ A_llist_set$) Bool)
(declare-fun less_eq$e (A_llist_set_set$ A_llist_set_set$) Bool)
(declare-fun less_eq$f (A_set_set_set$ A_set_set_set$) Bool)
(declare-fun prefix_closed$ (A_llist_set$) Bool)
(declare-fun prefix_closed$a (A_set_llist_set$) Bool)
(assert (! (not (prefix_closed$ p$)) :named a0))
(assert (! (safety$ top$ p$) :named a1))
(assert (! (forall ((?v0 A_set_llist$)) (= (member$ ?v0 top$a) true)) :named a2))
(assert (! (forall ((?v0 A_set_set$)) (= (member$a ?v0 top$b) true)) :named a3))
(assert (! (forall ((?v0 A_llist$)) (= (member$b ?v0 top$c) true)) :named a4))
(assert (! (forall ((?v0 A_set$)) (= (member$c ?v0 top$d) true)) :named a5))
(assert (! (forall ((?v0 A$)) (= (member$d ?v0 top$) true)) :named a6))
(assert (! (forall ((?v0 A_set_llist$)) (member$ ?v0 top$a)) :named a7))
(assert (! (forall ((?v0 A_set_set$)) (member$a ?v0 top$b)) :named a8))
(assert (! (forall ((?v0 A_llist$)) (member$b ?v0 top$c)) :named a9))
(assert (! (forall ((?v0 A_set$)) (member$c ?v0 top$d)) :named a10))
(assert (! (forall ((?v0 A$)) (member$d ?v0 top$)) :named a11))
(assert (! (forall ((?v0 A_set_llist_set$)) (=> (forall ((?v1 A_set_llist$)) (member$ ?v1 ?v0)) (= top$a ?v0))) :named a12))
(assert (! (forall ((?v0 A_set_set_set$)) (=> (forall ((?v1 A_set_set$)) (member$a ?v1 ?v0)) (= top$b ?v0))) :named a13))
(assert (! (forall ((?v0 A_llist_set$)) (=> (forall ((?v1 A_llist$)) (member$b ?v1 ?v0)) (= top$c ?v0))) :named a14))
(assert (! (forall ((?v0 A_set_set$)) (=> (forall ((?v1 A_set$)) (member$c ?v1 ?v0)) (= top$d ?v0))) :named a15))
(assert (! (forall ((?v0 A_set$)) (=> (forall ((?v1 A$)) (member$d ?v1 ?v0)) (= top$ ?v0))) :named a16))
(assert (! (exists ((?v0 A_set_llist$)) (member$ ?v0 top$a)) :named a17))
(assert (! (exists ((?v0 A_set_set$)) (member$a ?v0 top$b)) :named a18))
(assert (! (exists ((?v0 A_llist$)) (member$b ?v0 top$c)) :named a19))
(assert (! (exists ((?v0 A_set$)) (member$c ?v0 top$d)) :named a20))
(assert (! (exists ((?v0 A$)) (member$d ?v0 top$)) :named a21))
(assert (! (forall ((?v0 A_set_llist_set$)) (= (prefix_closed$a ?v0) (forall ((?v1 A_set_llist$)) (=> (member$ ?v1 ?v0) (forall ((?v2 A_set_llist$)) (=> (less_eq$ ?v2 ?v1) (member$ ?v2 ?v0))))))) :named a22))
(assert (! (forall ((?v0 A_llist_set$)) (= (prefix_closed$ ?v0) (forall ((?v1 A_llist$)) (=> (member$b ?v1 ?v0) (forall ((?v2 A_llist$)) (=> (less_eq$a ?v2 ?v1) (member$b ?v2 ?v0))))))) :named a23))
(assert (! (forall ((?v0 A_llist_llist$)) (member$e ?v0 (alllsts$ top$c))) :named a24))
(assert (! (forall ((?v0 A_set_set_llist$)) (member$f ?v0 (alllsts$a top$b))) :named a25))
(assert (! (forall ((?v0 A_set_llist$)) (member$ ?v0 (alllsts$b top$d))) :named a26))
(assert (! (forall ((?v0 A_llist$)) (member$b ?v0 (alllsts$c top$))) :named a27))
(assert (! (forall ((?v0 A_llist_set$)) (= (= (atMost$ ?v0) top$e) (= ?v0 top$c))) :named a28))
(assert (! (forall ((?v0 A_set_set_set$)) (= (= (atMost$a ?v0) top$f) (= ?v0 top$b))) :named a29))
(assert (! (forall ((?v0 A_set_set$)) (= (= (atMost$b ?v0) top$b) (= ?v0 top$d))) :named a30))
(assert (! (forall ((?v0 A_set$)) (= (= (atMost$c ?v0) top$d) (= ?v0 top$))) :named a31))
(assert (! (= (sup$ top$e) top$c) :named a32))
(assert (! (= (sup$a top$f) top$b) :named a33))
(assert (! (= (sup$b top$b) top$d) :named a34))
(assert (! (= (sup$c top$d) top$) :named a35))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$e ?v0 (inflsts$ ?v1)) (member$e ?v0 (inflsts$ top$c)))) :named a36))
(assert (! (forall ((?v0 A_set_set_llist$) (?v1 A_set_set_set$)) (=> (member$f ?v0 (inflsts$a ?v1)) (member$f ?v0 (inflsts$a top$b)))) :named a37))
(assert (! (forall ((?v0 A_set_llist$) (?v1 A_set_set$)) (=> (member$ ?v0 (inflsts$b ?v1)) (member$ ?v0 (inflsts$b top$d)))) :named a38))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$b ?v0 (inflsts$c ?v1)) (member$b ?v0 (inflsts$c top$)))) :named a39))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$e ?v0 (finlsts$ ?v1)) (not (member$e ?v0 (finlsts$ top$c)))) false)) :named a40))
(assert (! (forall ((?v0 A_set_set_llist$) (?v1 A_set_set_set$)) (=> (and (member$f ?v0 (finlsts$a ?v1)) (not (member$f ?v0 (finlsts$a top$b)))) false)) :named a41))
(assert (! (forall ((?v0 A_set_llist$) (?v1 A_set_set$)) (=> (and (member$ ?v0 (finlsts$b ?v1)) (not (member$ ?v0 (finlsts$b top$d)))) false)) :named a42))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$b ?v0 (finlsts$c ?v1)) (not (member$b ?v0 (finlsts$c top$)))) false)) :named a43))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$e ?v0 (finlsts$ ?v1)) (member$e ?v0 (finlsts$ top$c)))) :named a44))
(assert (! (forall ((?v0 A_set_set_llist$) (?v1 A_set_set_set$)) (=> (member$f ?v0 (finlsts$a ?v1)) (member$f ?v0 (finlsts$a top$b)))) :named a45))
(assert (! (forall ((?v0 A_set_llist$) (?v1 A_set_set$)) (=> (member$ ?v0 (finlsts$b ?v1)) (member$ ?v0 (finlsts$b top$d)))) :named a46))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$b ?v0 (finlsts$c ?v1)) (member$b ?v0 (finlsts$c top$)))) :named a47))
(assert (! (forall ((?v0 A_set$)) (less_eq$b ?v0 ?v0)) :named a48))
(assert (! (forall ((?v0 A_set_set$)) (less_eq$c ?v0 ?v0)) :named a49))
(assert (! (forall ((?v0 A_llist_set$)) (less_eq$d ?v0 ?v0)) :named a50))
(assert (! (forall ((?v0 A_llist$)) (less_eq$a ?v0 ?v0)) :named a51))
(assert (! (forall ((?v0 A_llist$)) (less_eq$a ?v0 ?v0)) :named a52))
(assert (! (forall ((?v0 A_set_llist$) (?v1 A_set_llist$)) (= (member$ ?v0 (atMost$d ?v1)) (less_eq$ ?v0 ?v1))) :named a53))
(assert (! (forall ((?v0 A_llist_set$) (?v1 A_llist_set$)) (= (member$g ?v0 (atMost$ ?v1)) (less_eq$d ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set$)) (= (member$a ?v0 (atMost$b ?v1)) (less_eq$c ?v0 ?v1))) :named a55))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (member$b ?v0 (atMost$e ?v1)) (less_eq$a ?v0 ?v1))) :named a56))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$)) (= (member$c ?v0 (atMost$c ?v1)) (less_eq$b ?v0 ?v1))) :named a57))
(assert (! (forall ((?v0 A_llist_set$) (?v1 A_llist_set$)) (= (less_eq$e (atMost$ ?v0) (atMost$ ?v1)) (less_eq$d ?v0 ?v1))) :named a58))
(assert (! (forall ((?v0 A_set_set$) (?v1 A_set_set$)) (= (less_eq$f (atMost$b ?v0) (atMost$b ?v1)) (less_eq$c ?v0 ?v1))) :named a59))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (less_eq$d (atMost$e ?v0) (atMost$e ?v1)) (less_eq$a ?v0 ?v1))) :named a60))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$)) (= (less_eq$c (atMost$c ?v0) (atMost$c ?v1)) (less_eq$b ?v0 ?v1))) :named a61))
(check-sat)
;(get-unsat-core)
