; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 253
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))))
(declare-fun a$ () A_set$)
(declare-fun p$ () Bool)
(declare-fun x$ () A_llist$)
(declare-fun top$ () A_llist_llist_set$)
(declare-fun top$a () A_llist_set$)
(declare-fun top$b () A_set$)
(declare-fun minus$ (A_llist_llist_llist_set$ A_llist_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun minus$a (A_llist_llist_set$ A_llist_llist_set$) A_llist_llist_set$)
(declare-fun minus$b (A_llist_set$ A_llist_set$) A_llist_set$)
(declare-fun alllsts$ (A_set$) A_llist_set$)
(declare-fun finlsts$ (A_set$) A_llist_set$)
(declare-fun fun_app$ (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$) Bool)
(declare-fun inflsts$ (A_set$) A_llist_set$)
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun member$d (A$ A_set$) Bool)
(declare-fun alllsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun alllsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun alllsts$c (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun finlsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun finlsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun finlsts$c (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun fun_app$a (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$) Bool)
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$) Bool)
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun inflsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun inflsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun inflsts$c (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(assert (! (not p$) :named a0))
(assert (! (member$ x$ (alllsts$ a$)) :named a1))
(assert (! (=> (member$ x$ (finlsts$ a$)) p$) :named a2))
(assert (! (=> (member$ x$ (inflsts$ a$)) p$) :named a3))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_set$)) (=> (and (member$a ?v0 (finlsts$a ?v1)) (member$a ?v0 (alllsts$a ?v2))) (member$a ?v0 (finlsts$a ?v2)))) :named a4))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_set$)) (=> (and (member$b ?v0 (finlsts$b ?v1)) (member$b ?v0 (alllsts$b ?v2))) (member$b ?v0 (finlsts$b ?v2)))) :named a5))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_set$)) (=> (and (member$ ?v0 (finlsts$ ?v1)) (member$ ?v0 (alllsts$ ?v2))) (member$ ?v0 (finlsts$ ?v2)))) :named a6))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (finlsts$a ?v1)) (member$a ?v0 (alllsts$a ?v1)))) :named a7))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$b ?v0 (finlsts$b ?v1)) (member$b ?v0 (alllsts$b ?v1)))) :named a8))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (finlsts$ ?v1)) (member$ ?v0 (alllsts$ ?v1)))) :named a9))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (inflsts$a ?v1)) (member$a ?v0 (alllsts$a ?v1)))) :named a10))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$b ?v0 (inflsts$b ?v1)) (member$b ?v0 (alllsts$b ?v1)))) :named a11))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (inflsts$ ?v1)) (member$ ?v0 (alllsts$ ?v1)))) :named a12))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$a ?v0 (alllsts$a ?v1)) (=> (member$a ?v0 (finlsts$a top$)) false)) (member$a ?v0 (inflsts$a ?v1)))) :named a13))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$b ?v0 (alllsts$b ?v1)) (=> (member$b ?v0 (finlsts$b top$a)) false)) (member$b ?v0 (inflsts$b ?v1)))) :named a14))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$ ?v0 (alllsts$ ?v1)) (=> (member$ ?v0 (finlsts$ top$b)) false)) (member$ ?v0 (inflsts$ ?v1)))) :named a15))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$a ?v0 (inflsts$a ?v1)) (=> (and (member$a ?v0 (alllsts$a ?v1)) (not (member$a ?v0 (finlsts$a top$)))) false)) false)) :named a16))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$b ?v0 (inflsts$b ?v1)) (=> (and (member$b ?v0 (alllsts$b ?v1)) (not (member$b ?v0 (finlsts$b top$a)))) false)) false)) :named a17))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$ ?v0 (inflsts$ ?v1)) (=> (and (member$ ?v0 (alllsts$ ?v1)) (not (member$ ?v0 (finlsts$ top$b)))) false)) false)) :named a18))
(assert (! (forall ((?v0 A_llist_llist_set$)) (! (= (inflsts$a ?v0) (minus$ (alllsts$a ?v0) (finlsts$a top$))) :pattern ((inflsts$a ?v0)))) :named a19))
(assert (! (forall ((?v0 A_llist_set$)) (! (= (inflsts$b ?v0) (minus$a (alllsts$b ?v0) (finlsts$b top$a))) :pattern ((inflsts$b ?v0)))) :named a20))
(assert (! (forall ((?v0 A_set$)) (! (= (inflsts$ ?v0) (minus$b (alllsts$ ?v0) (finlsts$ top$b))) :pattern ((inflsts$ ?v0)))) :named a21))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (member$a ?v0 (alllsts$a top$))) :named a22))
(assert (! (forall ((?v0 A_llist_llist$)) (member$b ?v0 (alllsts$b top$a))) :named a23))
(assert (! (forall ((?v0 A_llist$)) (member$ ?v0 (alllsts$ top$b))) :named a24))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_llist$) (?v2 A_llist_llist_llist_set$)) (= (member$c (lCons$c ?v0 ?v1) (alllsts$c ?v2)) (and (member$a ?v0 ?v2) (member$c ?v1 (alllsts$c ?v2))))) :named a25))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_set$)) (= (member$a (lCons$b ?v0 ?v1) (alllsts$a ?v2)) (and (member$b ?v0 ?v2) (member$a ?v1 (alllsts$a ?v2))))) :named a26))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_llist$) (?v2 A_llist_set$)) (= (member$b (lCons$a ?v0 ?v1) (alllsts$b ?v2)) (and (member$ ?v0 ?v2) (member$b ?v1 (alllsts$b ?v2))))) :named a27))
(assert (! (forall ((?v0 A$) (?v1 A_llist$) (?v2 A_set$)) (= (member$ (lCons$ ?v0 ?v1) (alllsts$ ?v2)) (and (member$d ?v0 ?v2) (member$ ?v1 (alllsts$ ?v2))))) :named a28))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (inflsts$a ?v1)) (member$a ?v0 (inflsts$a top$)))) :named a29))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$b ?v0 (inflsts$b ?v1)) (member$b ?v0 (inflsts$b top$a)))) :named a30))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (inflsts$ ?v1)) (member$ ?v0 (inflsts$ top$b)))) :named a31))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (=> (and (member$c ?v0 (inflsts$c ?v1)) (forall ((?v2 A_llist_llist_llist$) (?v3 A_llist_llist_llist_llist$)) (=> (and (member$c ?v3 (inflsts$c ?v1)) (and (member$a ?v2 ?v1) (= ?v0 (lCons$c ?v2 ?v3)))) false))) false)) :named a32))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$a ?v0 (inflsts$a ?v1)) (forall ((?v2 A_llist_llist$) (?v3 A_llist_llist_llist$)) (=> (and (member$a ?v3 (inflsts$a ?v1)) (and (member$b ?v2 ?v1) (= ?v0 (lCons$b ?v2 ?v3)))) false))) false)) :named a33))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$b ?v0 (inflsts$b ?v1)) (forall ((?v2 A_llist$) (?v3 A_llist_llist$)) (=> (and (member$b ?v3 (inflsts$b ?v1)) (and (member$ ?v2 ?v1) (= ?v0 (lCons$a ?v2 ?v3)))) false))) false)) :named a34))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$ ?v0 (inflsts$ ?v1)) (forall ((?v2 A$) (?v3 A_llist$)) (=> (and (member$ ?v3 (inflsts$ ?v1)) (and (member$d ?v2 ?v1) (= ?v0 (lCons$ ?v2 ?v3)))) false))) false)) :named a35))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist_llist$)) (=> (and (member$a ?v0 ?v1) (member$c ?v2 (inflsts$c ?v1))) (member$c (lCons$c ?v0 ?v2) (inflsts$c ?v1)))) :named a36))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$b ?v0 ?v1) (member$a ?v2 (inflsts$a ?v1))) (member$a (lCons$b ?v0 ?v2) (inflsts$a ?v1)))) :named a37))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$ ?v0 ?v1) (member$b ?v2 (inflsts$b ?v1))) (member$b (lCons$a ?v0 ?v2) (inflsts$b ?v1)))) :named a38))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_llist$)) (=> (and (member$d ?v0 ?v1) (member$ ?v2 (inflsts$ ?v1))) (member$ (lCons$ ?v0 ?v2) (inflsts$ ?v1)))) :named a39))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$a ?v0 (finlsts$a ?v1)) (not (member$a ?v0 (finlsts$a top$)))) false)) :named a40))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$b ?v0 (finlsts$b ?v1)) (not (member$b ?v0 (finlsts$b top$a)))) false)) :named a41))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$ ?v0 (finlsts$ ?v1)) (not (member$ ?v0 (finlsts$ top$b)))) false)) :named a42))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (finlsts$a ?v1)) (member$a ?v0 (finlsts$a top$)))) :named a43))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$b ?v0 (finlsts$b ?v1)) (member$b ?v0 (finlsts$b top$a)))) :named a44))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (finlsts$ ?v1)) (member$ ?v0 (finlsts$ top$b)))) :named a45))
(assert (! (forall ((?v0 A_llist_llist_set$)) (member$a lNil$b (alllsts$a ?v0))) :named a46))
(assert (! (forall ((?v0 A_llist_set$)) (member$b lNil$a (alllsts$b ?v0))) :named a47))
(assert (! (forall ((?v0 A_set$)) (member$ lNil$ (alllsts$ ?v0))) :named a48))
(assert (! (forall ((?v0 A_llist_llist_set$)) (member$a lNil$b (finlsts$a ?v0))) :named a49))
(assert (! (forall ((?v0 A_llist_set$)) (member$b lNil$a (finlsts$b ?v0))) :named a50))
(assert (! (forall ((?v0 A_set$)) (member$ lNil$ (finlsts$ ?v0))) :named a51))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (=> (and (=> (= ?v0 lNil$b) false) (forall ((?v1 A_llist_llist$) (?v2 A_llist_llist_llist$)) (=> (= ?v0 (lCons$b ?v1 ?v2)) false))) false)) :named a52))
(assert (! (forall ((?v0 A_llist$)) (=> (and (=> (= ?v0 lNil$) false) (forall ((?v1 A$) (?v2 A_llist$)) (=> (= ?v0 (lCons$ ?v1 ?v2)) false))) false)) :named a53))
(assert (! (forall ((?v0 A_llist_llist$)) (=> (and (=> (= ?v0 lNil$a) false) (forall ((?v1 A_llist$) (?v2 A_llist_llist$)) (=> (= ?v0 (lCons$a ?v1 ?v2)) false))) false)) :named a54))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist_llist_bool_fun$)) (=> (and (member$c ?v0 (finlsts$c ?v1)) (and (forall ((?v3 A_llist_llist_llist_llist$)) (=> (= ?v3 lNil$c) (fun_app$ ?v2 ?v3))) (forall ((?v3 A_llist_llist_llist$) (?v4 A_llist_llist_llist_llist$)) (=> (and (member$c ?v4 (finlsts$c ?v1)) (and (fun_app$ ?v2 ?v4) (member$a ?v3 ?v1))) (fun_app$ ?v2 (lCons$c ?v3 ?v4)))))) (fun_app$ ?v2 ?v0))) :named a55))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist_bool_fun$)) (=> (and (member$a ?v0 (finlsts$a ?v1)) (and (forall ((?v3 A_llist_llist_llist$)) (=> (= ?v3 lNil$b) (fun_app$a ?v2 ?v3))) (forall ((?v3 A_llist_llist$) (?v4 A_llist_llist_llist$)) (=> (and (member$a ?v4 (finlsts$a ?v1)) (and (fun_app$a ?v2 ?v4) (member$b ?v3 ?v1))) (fun_app$a ?v2 (lCons$b ?v3 ?v4)))))) (fun_app$a ?v2 ?v0))) :named a56))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist_bool_fun$)) (=> (and (member$b ?v0 (finlsts$b ?v1)) (and (forall ((?v3 A_llist_llist$)) (=> (= ?v3 lNil$a) (fun_app$b ?v2 ?v3))) (forall ((?v3 A_llist$) (?v4 A_llist_llist$)) (=> (and (member$b ?v4 (finlsts$b ?v1)) (and (fun_app$b ?v2 ?v4) (member$ ?v3 ?v1))) (fun_app$b ?v2 (lCons$a ?v3 ?v4)))))) (fun_app$b ?v2 ?v0))) :named a57))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist_bool_fun$)) (=> (and (member$ ?v0 (finlsts$ ?v1)) (and (forall ((?v3 A_llist$)) (=> (= ?v3 lNil$) (fun_app$c ?v2 ?v3))) (forall ((?v3 A$) (?v4 A_llist$)) (=> (and (member$ ?v4 (finlsts$ ?v1)) (and (fun_app$c ?v2 ?v4) (member$d ?v3 ?v1))) (fun_app$c ?v2 (lCons$ ?v3 ?v4)))))) (fun_app$c ?v2 ?v0))) :named a58))
(check-sat)
;(get-unsat-core)
