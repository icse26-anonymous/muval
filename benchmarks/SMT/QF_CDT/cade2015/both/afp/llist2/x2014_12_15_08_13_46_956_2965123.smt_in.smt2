; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 507
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort A_set$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_a_llist_set_fun$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))))
(declare-fun a$ () A_set$)
(declare-fun top$ () A_llist_set$)
(declare-fun lrev$ (A_llist$) A_llist$)
(declare-fun suff$ (A_llist_set$ A_llist_llist$) A_llist_llist_set$)
(declare-fun top$a () A_set$)
(declare-fun ldrop$ (A_llist$ Nat$) A_llist$)
(declare-fun ltake$ (A_llist$ Nat$) A_llist$)
(declare-fun suff$a (A_set$) A_llist_a_llist_set_fun$)
(declare-fun lconst$ (A_llist_llist$) A_llist_llist_llist$)
(declare-fun ldrop$a (A_llist_llist$ Nat$) A_llist_llist$)
(declare-fun ltake$a (A_llist_llist$ Nat$) A_llist_llist$)
(declare-fun member$ (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun alllsts$ (A_set$) A_llist_set$)
(declare-fun fun_app$ (A_llist_a_llist_set_fun$ A_llist$) A_llist_set$)
(declare-fun inflsts$ (A_set$) A_llist_set$)
(declare-fun infsuff$ (A_set$ A_llist$) A_llist_set$)
(declare-fun lconst$a (A_llist$) A_llist_llist$)
(declare-fun lconst$b (A$) A_llist$)
(declare-fun llength$ (A_llist$) Nat$)
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$b (A_llist$ A_llist_set$) Bool)
(declare-fun member$c (A$ A_set$) Bool)
(declare-fun alllstsp$ (A_bool_fun$ A_llist$) Bool)
(declare-fun finlstsp$ (A_bool_fun$ A_llist$) Bool)
(declare-fun inflsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun inflsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun lbutlast$ (A_llist$) A_llist$)
(declare-fun llength$a (A_llist_llist$) Nat$)
(assert (! (not (= (infsuff$ a$ lNil$) (inflsts$ a$))) :named a0))
(assert (! (= (lbutlast$ lNil$) lNil$) :named a1))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$ ?v0 ?v1) (member$a (lconst$ ?v0) (inflsts$a ?v1)))) :named a2))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$)) (=> (member$b ?v0 ?v1) (member$ (lconst$a ?v0) (inflsts$b ?v1)))) :named a3))
(assert (! (forall ((?v0 A$) (?v1 A_set$)) (=> (member$c ?v0 ?v1) (member$b (lconst$b ?v0) (inflsts$ ?v1)))) :named a4))
(assert (! (forall ((?v0 A_llist_set$) (?v1 A_llist_llist$)) (= (member$ lNil$a (suff$ ?v0 ?v1)) (= ?v1 lNil$a))) :named a5))
(assert (! (forall ((?v0 A_set$) (?v1 A_llist$)) (= (member$b lNil$ (fun_app$ (suff$a ?v0) ?v1)) (= ?v1 lNil$))) :named a6))
(assert (! (forall ((?v0 A_llist$)) (not (= (lconst$a ?v0) lNil$a))) :named a7))
(assert (! (forall ((?v0 A$)) (not (= (lconst$b ?v0) lNil$))) :named a8))
(assert (! (= (lrev$ lNil$) lNil$) :named a9))
(assert (! (forall ((?v0 Nat$)) (! (= (ltake$ lNil$ ?v0) lNil$) :pattern ((ltake$ lNil$ ?v0)))) :named a10))
(assert (! (forall ((?v0 Nat$)) (! (= (ldrop$ lNil$ ?v0) lNil$) :pattern ((ldrop$ lNil$ ?v0)))) :named a11))
(assert (! (forall ((?v0 A_bool_fun$)) (finlstsp$ ?v0 lNil$)) :named a12))
(assert (! (forall ((?v0 A_bool_fun$)) (alllstsp$ ?v0 lNil$)) :named a13))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 Nat$)) (=> (member$ ?v0 (inflsts$b ?v1)) (member$ (ldrop$a ?v0 ?v2) (inflsts$b ?v1)))) :named a14))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 Nat$)) (=> (member$b ?v0 (inflsts$ ?v1)) (member$b (ldrop$ ?v0 ?v2) (inflsts$ ?v1)))) :named a15))
(assert (! (forall ((?v0 A_llist$) (?v1 Nat$)) (=> (not (= (ldrop$ ?v0 ?v1) lNil$)) (not (= ?v0 lNil$)))) :named a16))
(assert (! (forall ((?v0 A_llist$) (?v1 Nat$)) (=> (not (= (ldrop$ ?v0 ?v1) lNil$)) (= (llength$ (ltake$ ?v0 ?v1)) ?v1))) :named a17))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 Nat$)) (=> (member$ ?v0 (inflsts$b ?v1)) (= (llength$a (ltake$a ?v0 ?v2)) ?v2))) :named a18))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 Nat$)) (=> (member$b ?v0 (inflsts$ ?v1)) (= (llength$ (ltake$ ?v0 ?v2)) ?v2))) :named a19))
(assert (! (forall ((?v0 A_set$)) (! (= (fun_app$ (suff$a ?v0) lNil$) (alllsts$ ?v0)) :pattern ((suff$a ?v0)))) :named a20))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 Nat$)) (= (member$ (ldrop$a ?v0 ?v1) (inflsts$b top$)) (member$ ?v0 (inflsts$b top$)))) :named a21))
(assert (! (forall ((?v0 A_llist$) (?v1 Nat$)) (= (member$b (ldrop$ ?v0 ?v1) (inflsts$ top$a)) (member$b ?v0 (inflsts$ top$a)))) :named a22))
(check-sat)
;(get-unsat-core)
