; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 380
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort A_set$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort Nat_a_llist_fun$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort Nat_a_llist_llist_fun$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))))
(declare-fun a$ () A_set$)
(declare-fun i$ () Nat$)
(declare-fun t$ () A_llist$)
(declare-fun top$ () A_llist_llist_set$)
(declare-fun plus$ (Nat$ Nat$) Nat$)
(declare-fun top$a () A_llist_set$)
(declare-fun top$b () A_set$)
(declare-fun zero$ () Nat$)
(declare-fun ldrop$ (A_llist$) Nat_a_llist_fun$)
(declare-fun ltake$ (A_llist_llist_llist$ Nat$) A_llist_llist_llist$)
(declare-fun ldrop$a (A_llist_llist$) Nat_a_llist_llist_fun$)
(declare-fun ldrop$b (A_llist_llist_llist$ Nat$) A_llist_llist_llist$)
(declare-fun ltake$a (A_llist_llist$ Nat$) A_llist_llist$)
(declare-fun ltake$b (A_llist$ Nat$) A_llist$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun alllsts$ (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun finlsts$ (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun fun_app$ (Nat_a_llist_fun$ Nat$) A_llist$)
(declare-fun inflsts$ (A_set$) A_llist_set$)
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$) A_llist_llist_llist$)
(declare-fun llength$ (A_llist_llist_llist$) Nat$)
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun member$d (A$ A_set$) Bool)
(declare-fun alllsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun alllsts$b (A_set$) A_llist_set$)
(declare-fun finlsts$a (A_llist_set$) A_llist_llist_set$)
(declare-fun finlsts$b (A_set$) A_llist_set$)
(declare-fun fun_app$a (Nat_a_llist_llist_fun$ Nat$) A_llist_llist$)
(declare-fun inflsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun inflsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun inflsts$c (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$) A_llist_llist$)
(declare-fun lappend$b (A_llist$ A_llist$) A_llist$)
(declare-fun llength$a (A_llist_llist$) Nat$)
(declare-fun llength$b (A_llist$) Nat$)
(assert (! (not (member$ (fun_app$ (ldrop$ t$) i$) (inflsts$ a$))) :named a0))
(assert (! (member$ t$ (inflsts$ a$)) :named a1))
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$a (ldrop$a lNil$a) ?v0) lNil$a) :pattern ((fun_app$a (ldrop$a lNil$a) ?v0)))) :named a2))
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$ (ldrop$ lNil$) ?v0) lNil$) :pattern ((fun_app$ (ldrop$ lNil$) ?v0)))) :named a3))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 Nat$)) (=> (member$a ?v0 (alllsts$ ?v1)) (member$a (ldrop$b ?v0 ?v2) (alllsts$ ?v1)))) :named a4))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 Nat$)) (=> (member$b ?v0 (alllsts$a ?v1)) (member$b (fun_app$a (ldrop$a ?v0) ?v2) (alllsts$a ?v1)))) :named a5))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 Nat$)) (=> (member$ ?v0 (alllsts$b ?v1)) (member$ (fun_app$ (ldrop$ ?v0) ?v2) (alllsts$b ?v1)))) :named a6))
(assert (! (forall ((?v0 A_llist_llist$)) (! (= (fun_app$a (ldrop$a ?v0) zero$) ?v0) :pattern ((ldrop$a ?v0)))) :named a7))
(assert (! (forall ((?v0 A_llist$)) (! (= (fun_app$ (ldrop$ ?v0) zero$) ?v0) :pattern ((ldrop$ ?v0)))) :named a8))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (inflsts$a ?v1)) (member$a ?v0 (alllsts$ ?v1)))) :named a9))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$b ?v0 (inflsts$b ?v1)) (member$b ?v0 (alllsts$a ?v1)))) :named a10))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (inflsts$ ?v1)) (member$ ?v0 (alllsts$b ?v1)))) :named a11))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$a (ldrop$a ?v0) (plus$ ?v1 ?v2)) (fun_app$a (ldrop$a (fun_app$a (ldrop$a ?v0) ?v1)) ?v2))) :named a12))
(assert (! (forall ((?v0 A_llist$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$ (ldrop$ ?v0) (plus$ ?v1 ?v2)) (fun_app$ (ldrop$ (fun_app$ (ldrop$ ?v0) ?v1)) ?v2))) :named a13))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (member$a ?v0 (inflsts$a ?v1)) (= (lappend$ ?v0 ?v2) ?v0))) :named a14))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (member$b ?v0 (inflsts$b ?v1)) (= (lappend$a ?v0 ?v2) ?v0))) :named a15))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (member$ ?v0 (inflsts$ ?v1)) (= (lappend$b ?v0 ?v2) ?v0))) :named a16))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 Nat$)) (=> (member$a ?v0 (inflsts$a ?v1)) (= (llength$ (ltake$ ?v0 ?v2)) ?v2))) :named a17))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 Nat$)) (=> (member$b ?v0 (inflsts$b ?v1)) (= (llength$a (ltake$a ?v0 ?v2)) ?v2))) :named a18))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 Nat$)) (=> (member$ ?v0 (inflsts$ ?v1)) (= (llength$b (ltake$b ?v0 ?v2)) ?v2))) :named a19))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 Nat$)) (=> (member$a ?v0 (finlsts$ ?v1)) (member$a (ldrop$b ?v0 ?v2) (finlsts$ ?v1)))) :named a20))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 Nat$)) (=> (member$b ?v0 (finlsts$a ?v1)) (member$b (fun_app$a (ldrop$a ?v0) ?v2) (finlsts$a ?v1)))) :named a21))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 Nat$)) (=> (member$ ?v0 (finlsts$b ?v1)) (member$ (fun_app$ (ldrop$ ?v0) ?v2) (finlsts$b ?v1)))) :named a22))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$a ?v0 (inflsts$a ?v1)) (member$a ?v0 (inflsts$a top$)))) :named a23))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (member$b ?v0 (inflsts$b ?v1)) (member$b ?v0 (inflsts$b top$a)))) :named a24))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (member$ ?v0 (inflsts$ ?v1)) (member$ ?v0 (inflsts$ top$b)))) :named a25))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (=> (and (member$c ?v0 (inflsts$c ?v1)) (forall ((?v2 A_llist_llist_llist$) (?v3 A_llist_llist_llist_llist$)) (=> (and (member$c ?v3 (inflsts$c ?v1)) (and (member$a ?v2 ?v1) (= ?v0 (lCons$c ?v2 ?v3)))) false))) false)) :named a26))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$a ?v0 (inflsts$a ?v1)) (forall ((?v2 A_llist_llist$) (?v3 A_llist_llist_llist$)) (=> (and (member$a ?v3 (inflsts$a ?v1)) (and (member$b ?v2 ?v1) (= ?v0 (lCons$b ?v2 ?v3)))) false))) false)) :named a27))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$b ?v0 (inflsts$b ?v1)) (forall ((?v2 A_llist$) (?v3 A_llist_llist$)) (=> (and (member$b ?v3 (inflsts$b ?v1)) (and (member$ ?v2 ?v1) (= ?v0 (lCons$a ?v2 ?v3)))) false))) false)) :named a28))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$ ?v0 (inflsts$ ?v1)) (forall ((?v2 A$) (?v3 A_llist$)) (=> (and (member$ ?v3 (inflsts$ ?v1)) (and (member$d ?v2 ?v1) (= ?v0 (lCons$ ?v2 ?v3)))) false))) false)) :named a29))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist_llist$)) (=> (and (member$a ?v0 ?v1) (member$c ?v2 (inflsts$c ?v1))) (member$c (lCons$c ?v0 ?v2) (inflsts$c ?v1)))) :named a30))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$b ?v0 ?v1) (member$a ?v2 (inflsts$a ?v1))) (member$a (lCons$b ?v0 ?v2) (inflsts$a ?v1)))) :named a31))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$ ?v0 ?v1) (member$b ?v2 (inflsts$b ?v1))) (member$b (lCons$a ?v0 ?v2) (inflsts$b ?v1)))) :named a32))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_llist$)) (=> (and (member$d ?v0 ?v1) (member$ ?v2 (inflsts$ ?v1))) (member$ (lCons$ ?v0 ?v2) (inflsts$ ?v1)))) :named a33))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 Nat$) (?v2 Nat$)) (= (ltake$a (fun_app$a (ldrop$a ?v0) ?v1) ?v2) (fun_app$a (ldrop$a (ltake$a ?v0 (plus$ ?v2 ?v1))) ?v1))) :named a34))
(assert (! (forall ((?v0 A_llist$) (?v1 Nat$) (?v2 Nat$)) (= (ltake$b (fun_app$ (ldrop$ ?v0) ?v1) ?v2) (fun_app$ (ldrop$ (ltake$b ?v0 (plus$ ?v2 ?v1))) ?v1))) :named a35))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (= lNil$a (lappend$a ?v0 ?v1)) (and (= ?v0 lNil$a) (= ?v1 lNil$a)))) :named a36))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (= lNil$ (lappend$b ?v0 ?v1)) (and (= ?v0 lNil$) (= ?v1 lNil$)))) :named a37))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (= (lappend$a ?v0 ?v1) lNil$a) (and (= ?v0 lNil$a) (= ?v1 lNil$a)))) :named a38))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (= (lappend$b ?v0 ?v1) lNil$) (and (= ?v0 lNil$) (= ?v1 lNil$)))) :named a39))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_set$)) (= (member$a (lappend$ ?v0 ?v1) (finlsts$ ?v2)) (and (member$a ?v0 (finlsts$ ?v2)) (member$a ?v1 (finlsts$ ?v2))))) :named a40))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_set$)) (= (member$b (lappend$a ?v0 ?v1) (finlsts$a ?v2)) (and (member$b ?v0 (finlsts$a ?v2)) (member$b ?v1 (finlsts$a ?v2))))) :named a41))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_set$)) (= (member$ (lappend$b ?v0 ?v1) (finlsts$b ?v2)) (and (member$ ?v0 (finlsts$b ?v2)) (member$ ?v1 (finlsts$b ?v2))))) :named a42))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$) (?v3 A_llist_llist_llist$)) (=> (member$a ?v0 (finlsts$ ?v1)) (= (= (lappend$ ?v0 ?v2) (lappend$ ?v0 ?v3)) (= ?v2 ?v3)))) :named a43))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$) (?v3 A_llist_llist$)) (=> (member$b ?v0 (finlsts$a ?v1)) (= (= (lappend$a ?v0 ?v2) (lappend$a ?v0 ?v3)) (= ?v2 ?v3)))) :named a44))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$) (?v3 A_llist$)) (=> (member$ ?v0 (finlsts$b ?v1)) (= (= (lappend$b ?v0 ?v2) (lappend$b ?v0 ?v3)) (= ?v2 ?v3)))) :named a45))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (member$a ?v0 (alllsts$ top$))) :named a46))
(assert (! (forall ((?v0 A_llist_llist$)) (member$b ?v0 (alllsts$a top$a))) :named a47))
(assert (! (forall ((?v0 A_llist$)) (member$ ?v0 (alllsts$b top$b))) :named a48))
(check-sat)
;(get-unsat-core)
