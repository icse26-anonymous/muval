; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 548
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_a_llist_fun$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_a_llist_llist_fun$ 0)
(declare-sort A_llist_llist_a_llist_fun$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_a_llist_llist_fun$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))))
(declare-fun a$ () A_set$)
(declare-fun r$ () Bool)
(declare-fun x$ () A_llist$)
(declare-fun y$ () A_llist$)
(declare-fun lconst$ (A_llist_llist_llist$) A_llist_llist_llist_llist$)
(declare-fun member$ (A_llist$ A_llist_set$) Bool)
(declare-fun finlsts$ (A_set$) A_llist_set$)
(declare-fun fun_app$ (A_llist_a_llist_llist_fun$ A_llist$) A_llist_llist$)
(declare-fun inflsts$ (A_set$) A_llist_set$)
(declare-fun lconst$a (A_llist_llist$) A_llist_llist_llist$)
(declare-fun lconst$b (A_llist$) A_llist_llist$)
(declare-fun lconst$c (A$) A_llist$)
(declare-fun less_eq$ (A_llist$ A_llist$) Bool)
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun member$d (A$ A_set$) Bool)
(declare-fun finlsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun finlsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun fun_app$a (A_llist_llist_a_llist_fun$ A_llist_llist$) A_llist$)
(declare-fun fun_app$b (A_llist_llist_a_llist_llist_fun$ A_llist_llist$) A_llist_llist$)
(declare-fun fun_app$c (A_llist_a_llist_fun$ A_llist$) A_llist$)
(declare-fun inflsts$a (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun inflsts$b (A_llist_set$) A_llist_llist_set$)
(declare-fun inflsts$c (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun less_eq$a (A_llist_llist$ A_llist_llist$) Bool)
(declare-fun less_eq$b (A_llist_llist_llist$ A_llist_llist_llist$) Bool)
(declare-fun prefix_closed$ (A_llist_llist_llist_set$) Bool)
(declare-fun suffix_closed$ (A_llist_llist_llist_set$) Bool)
(declare-fun prefix_closed$a (A_llist_llist_set$) Bool)
(declare-fun prefix_closed$b (A_llist_set$) Bool)
(declare-fun suffix_closed$a (A_llist_llist_set$) Bool)
(declare-fun suffix_closed$b (A_llist_set$) Bool)
(assert (! (not r$) :named a0))
(assert (! (member$ x$ (inflsts$ a$)) :named a1))
(assert (! (member$ y$ (inflsts$ a$)) :named a2))
(assert (! (not (= x$ y$)) :named a3))
(assert (! (forall ((?v0 A_llist$)) (=> (and (member$ ?v0 (finlsts$ a$)) (and (less_eq$ ?v0 x$) (not (less_eq$ ?v0 y$)))) r$)) :named a4))
(assert (! (forall ((?v0 A_llist_llist$)) (less_eq$a ?v0 ?v0)) :named a5))
(assert (! (forall ((?v0 A_llist$)) (less_eq$ ?v0 ?v0)) :named a6))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$a ?v0 (inflsts$a ?v1)) (and (member$a ?v2 (inflsts$a ?v1)) (forall ((?v3 A_llist_llist_llist$)) (=> (and (member$a ?v3 (finlsts$a ?v1)) (less_eq$b ?v3 ?v0)) (less_eq$b ?v3 ?v2))))) (= ?v0 ?v2))) :named a7))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$b ?v0 (inflsts$b ?v1)) (and (member$b ?v2 (inflsts$b ?v1)) (forall ((?v3 A_llist_llist$)) (=> (and (member$b ?v3 (finlsts$b ?v1)) (less_eq$a ?v3 ?v0)) (less_eq$a ?v3 ?v2))))) (= ?v0 ?v2))) :named a8))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (and (member$ ?v0 (inflsts$ ?v1)) (and (member$ ?v2 (inflsts$ ?v1)) (forall ((?v3 A_llist$)) (=> (and (member$ ?v3 (finlsts$ ?v1)) (less_eq$ ?v3 ?v0)) (less_eq$ ?v3 ?v2))))) (= ?v0 ?v2))) :named a9))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (member$a ?v0 (inflsts$a ?v1)) (= (less_eq$b ?v0 ?v2) (= ?v0 ?v2)))) :named a10))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist$)) (=> (member$b ?v0 (inflsts$b ?v1)) (= (less_eq$a ?v0 ?v2) (= ?v0 ?v2)))) :named a11))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist$)) (=> (member$ ?v0 (inflsts$ ?v1)) (= (less_eq$ ?v0 ?v2) (= ?v0 ?v2)))) :named a12))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist$) (?v2 A_llist_llist_set$)) (=> (and (less_eq$b ?v0 ?v1) (member$a ?v1 (finlsts$a ?v2))) (member$a ?v0 (finlsts$a ?v2)))) :named a13))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_set$)) (=> (and (less_eq$a ?v0 ?v1) (member$b ?v1 (finlsts$b ?v2))) (member$b ?v0 (finlsts$b ?v2)))) :named a14))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_set$)) (=> (and (less_eq$ ?v0 ?v1) (member$ ?v1 (finlsts$ ?v2))) (member$ ?v0 (finlsts$ ?v2)))) :named a15))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (=> (and (less_eq$a ?v0 ?v1) (less_eq$a ?v1 ?v0)) (= ?v0 ?v1))) :named a16))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (=> (and (less_eq$ ?v0 ?v1) (less_eq$ ?v1 ?v0)) (= ?v0 ?v1))) :named a17))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$) (?v2 A_llist_llist$)) (=> (and (less_eq$a ?v0 ?v1) (less_eq$a ?v1 ?v2)) (less_eq$a ?v0 ?v2))) :named a18))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$) (?v2 A_llist$)) (=> (and (less_eq$ ?v0 ?v1) (less_eq$ ?v1 ?v2)) (less_eq$ ?v0 ?v2))) :named a19))
(assert (! (forall ((?v0 A_llist_llist_llist_set$)) (= (prefix_closed$ ?v0) (forall ((?v1 A_llist_llist_llist$)) (=> (member$a ?v1 ?v0) (forall ((?v2 A_llist_llist_llist$)) (=> (less_eq$b ?v2 ?v1) (member$a ?v2 ?v0))))))) :named a20))
(assert (! (forall ((?v0 A_llist_llist_set$)) (= (prefix_closed$a ?v0) (forall ((?v1 A_llist_llist$)) (=> (member$b ?v1 ?v0) (forall ((?v2 A_llist_llist$)) (=> (less_eq$a ?v2 ?v1) (member$b ?v2 ?v0))))))) :named a21))
(assert (! (forall ((?v0 A_llist_set$)) (= (prefix_closed$b ?v0) (forall ((?v1 A_llist$)) (=> (member$ ?v1 ?v0) (forall ((?v2 A_llist$)) (=> (less_eq$ ?v2 ?v1) (member$ ?v2 ?v0))))))) :named a22))
(assert (! (forall ((?v0 A_llist_llist_llist_set$)) (= (suffix_closed$ ?v0) (forall ((?v1 A_llist_llist_llist$)) (=> (member$a ?v1 ?v0) (forall ((?v2 A_llist_llist_llist$)) (=> (less_eq$b ?v1 ?v2) (member$a ?v2 ?v0))))))) :named a23))
(assert (! (forall ((?v0 A_llist_llist_set$)) (= (suffix_closed$a ?v0) (forall ((?v1 A_llist_llist$)) (=> (member$b ?v1 ?v0) (forall ((?v2 A_llist_llist$)) (=> (less_eq$a ?v1 ?v2) (member$b ?v2 ?v0))))))) :named a24))
(assert (! (forall ((?v0 A_llist_set$)) (= (suffix_closed$b ?v0) (forall ((?v1 A_llist$)) (=> (member$ ?v1 ?v0) (forall ((?v2 A_llist$)) (=> (less_eq$ ?v1 ?v2) (member$ ?v2 ?v0))))))) :named a25))
(assert (! (forall ((?v0 A_llist_llist$)) (less_eq$a ?v0 ?v0)) :named a26))
(assert (! (forall ((?v0 A_llist$)) (less_eq$ ?v0 ?v0)) :named a27))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (=> (member$a ?v0 ?v1) (member$c (lconst$ ?v0) (inflsts$c ?v1)))) :named a28))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_set$)) (=> (member$b ?v0 ?v1) (member$a (lconst$a ?v0) (inflsts$a ?v1)))) :named a29))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_set$)) (=> (member$ ?v0 ?v1) (member$b (lconst$b ?v0) (inflsts$b ?v1)))) :named a30))
(assert (! (forall ((?v0 A$) (?v1 A_set$)) (=> (member$d ?v0 ?v1) (member$ (lconst$c ?v0) (inflsts$ ?v1)))) :named a31))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist$)) (= (= ?v0 ?v1) (and (less_eq$a ?v0 ?v1) (less_eq$a ?v1 ?v0)))) :named a32))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist$)) (= (= ?v0 ?v1) (and (less_eq$ ?v0 ?v1) (less_eq$ ?v1 ?v0)))) :named a33))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_a_llist_llist_fun$) (?v2 A_llist$) (?v3 A_llist$)) (=> (and (= ?v0 (fun_app$ ?v1 ?v2)) (and (less_eq$ ?v2 ?v3) (forall ((?v4 A_llist$) (?v5 A_llist$)) (=> (less_eq$ ?v4 ?v5) (less_eq$a (fun_app$ ?v1 ?v4) (fun_app$ ?v1 ?v5)))))) (less_eq$a ?v0 (fun_app$ ?v1 ?v3)))) :named a34))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_llist_a_llist_fun$) (?v2 A_llist_llist$) (?v3 A_llist_llist$)) (=> (and (= ?v0 (fun_app$a ?v1 ?v2)) (and (less_eq$a ?v2 ?v3) (forall ((?v4 A_llist_llist$) (?v5 A_llist_llist$)) (=> (less_eq$a ?v4 ?v5) (less_eq$ (fun_app$a ?v1 ?v4) (fun_app$a ?v1 ?v5)))))) (less_eq$ ?v0 (fun_app$a ?v1 ?v3)))) :named a35))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_llist_a_llist_llist_fun$) (?v2 A_llist_llist$) (?v3 A_llist_llist$)) (=> (and (= ?v0 (fun_app$b ?v1 ?v2)) (and (less_eq$a ?v2 ?v3) (forall ((?v4 A_llist_llist$) (?v5 A_llist_llist$)) (=> (less_eq$a ?v4 ?v5) (less_eq$a (fun_app$b ?v1 ?v4) (fun_app$b ?v1 ?v5)))))) (less_eq$a ?v0 (fun_app$b ?v1 ?v3)))) :named a36))
(assert (! (forall ((?v0 A_llist$) (?v1 A_llist_a_llist_fun$) (?v2 A_llist$) (?v3 A_llist$)) (=> (and (= ?v0 (fun_app$c ?v1 ?v2)) (and (less_eq$ ?v2 ?v3) (forall ((?v4 A_llist$) (?v5 A_llist$)) (=> (less_eq$ ?v4 ?v5) (less_eq$ (fun_app$c ?v1 ?v4) (fun_app$c ?v1 ?v5)))))) (less_eq$ ?v0 (fun_app$c ?v1 ?v3)))) :named a37))
(check-sat)
;(get-unsat-core)
