; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 247
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort B$ 0)
(declare-sort B_set$ 0)
(declare-sort B_bool_fun$ 0)
(declare-sort B_b_set_fun$ 0)
(declare-sort B_llist_set$ 0)
(declare-sort B_b_prod_set$ 0)
(declare-sort B_llist_bool_fun$ 0)
(declare-sort B_b_llist_set_fun$ 0)
(declare-sort B_b_prod_bool_fun$ 0)
(declare-sort B_llist_b_set_fun$ 0)
(declare-sort B_llist_llist_set$ 0)
(declare-sort B_b_b_prod_set_fun$ 0)
(declare-sort B_b_llist_prod_set$ 0)
(declare-sort B_b_prod_b_set_fun$ 0)
(declare-sort B_b_prod_llist_set$ 0)
(declare-sort B_llist_b_prod_set$ 0)
(declare-sort B_b_b_prod_prod_set$ 0)
(declare-sort B_b_prod_b_prod_set$ 0)
(declare-sort B_llist_b_llist_set_fun$ 0)
(declare-sort B_b_prod_b_llist_set_fun$ 0)
(declare-sort B_llist_b_b_prod_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_set$ 0)
(declare-sort B_b_b_prod_prod_llist_set$ 0)
(declare-sort B_b_prod_b_b_prod_set_fun$ 0)
(declare-sort B_b_prod_b_llist_prod_set$ 0)
(declare-sort B_llist_b_b_prod_prod_set$ 0)
(declare-sort B_b_prod_b_b_prod_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_bool_fun$ 0)
(declare-sort B_b_llist_b_llist_prod_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_b_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_llist_set$ 0)
(declare-sort B_b_llist_b_llist_prod_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_b_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_llist_bool_fun$ 0)
(declare-sort B_b_llist_b_llist_prod_llist_set_fun$ 0)
(declare-sort B_llist_b_llist_b_llist_prod_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_b_llist_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_llist_b_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_llist_llist_set$ 0)
(declare-sort B_b_llist_b_llist_prod_llist_prod_set$ 0)
(declare-sort B_b_llist_b_llist_prod_prod_llist_set$ 0)
(declare-sort B_llist_b_llist_b_llist_prod_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_b_llist_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_llist_b_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_llist_b_llist_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_llist_b_llist_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_b_llist_b_llist_prod_set_fun$ 0)
(declare-sort B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$ 0)
(declare-sort B_llist_b_llist_prod_b_llist_b_llist_prod_prod_bool_fun$ 0)
(declare-sort B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist_set$ 0)
(declare-codatatypes () ((B_llist$ (lNil$) (lCons$ (lhd$ B$) (ltl$ B_llist$)))))
(declare-datatypes () ((B_llist_b_llist_prod$ (pair$ (fst$ B_llist$) (snd$ B_llist$)))
  (B_b_llist_b_llist_prod_prod$ (pair$a (fst$a B$) (snd$a B_llist_b_llist_prod$)))))
(declare-codatatypes () ((B_b_llist_b_llist_prod_prod_llist$ (lNil$a) (lCons$a (lhd$a B_b_llist_b_llist_prod_prod$) (ltl$a B_b_llist_b_llist_prod_prod_llist$)))))
(declare-datatypes () ((B_b_prod$ (pair$b (fst$b B$) (snd$b B$)))
  (B_b_b_prod_prod$ (pair$c (fst$c B$) (snd$c B_b_prod$)))))
(declare-codatatypes () ((B_b_b_prod_prod_llist$ (lNil$b) (lCons$b (lhd$b B_b_b_prod_prod$) (ltl$b B_b_b_prod_prod_llist$)))))
(declare-datatypes () ((B_llist_b_llist_prod_b_llist_b_llist_prod_prod$ (pair$d (fst$d B_llist_b_llist_prod$) (snd$d B_llist_b_llist_prod$)))))
(declare-codatatypes () ((B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist$ (lNil$c) (lCons$c (lhd$c B_llist_b_llist_prod_b_llist_b_llist_prod_prod$) (ltl$c B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist$)))
  (B_llist_b_llist_prod_llist$ (lNil$d) (lCons$d (lhd$d B_llist_b_llist_prod$) (ltl$d B_llist_b_llist_prod_llist$)))
  (B_llist_b_llist_prod_llist_llist$ (lNil$e) (lCons$e (lhd$e B_llist_b_llist_prod_llist$) (ltl$e B_llist_b_llist_prod_llist_llist$)))
  (B_b_prod_llist$ (lNil$f) (lCons$f (lhd$f B_b_prod$) (ltl$f B_b_prod_llist$)))
  (B_llist_llist$ (lNil$g) (lCons$g (lhd$g B_llist$) (ltl$g B_llist_llist$)))))
(declare-fun uu$ () B_llist_b_llist_set_fun$)
(declare-fun top$ () B_set$)
(declare-fun uua$ () B_b_set_fun$)
(declare-fun uub$ () B_llist_b_llist_set_fun$)
(declare-fun uuc$ () B_b_llist_set_fun$)
(declare-fun uud$ () B_llist_b_set_fun$)
(declare-fun uue$ () B_b_b_prod_set_fun$)
(declare-fun uuf$ () B_b_prod_b_set_fun$)
(declare-fun uug$ () B_b_prod_b_llist_set_fun$)
(declare-fun uuh$ () B_llist_b_b_prod_set_fun$)
(declare-fun uui$ () B_b_llist_b_llist_prod_set_fun$)
(declare-fun uuj$ () B_b_prod_b_b_prod_set_fun$)
(declare-fun uuk$ (B_llist_set$) B_llist_b_llist_set_fun$)
(declare-fun uul$ (B_set$) B_b_set_fun$)
(declare-fun uum$ (B_llist_set$) B_b_llist_set_fun$)
(declare-fun uun$ (B_set$) B_llist_b_set_fun$)
(declare-fun uuo$ (B_set$) B_llist_b_llist_prod_b_set_fun$)
(declare-fun uup$ (B_llist_b_llist_prod_set$) B_b_llist_b_llist_prod_set_fun$)
(declare-fun uuq$ (B_llist_set$) B_llist_b_llist_prod_b_llist_set_fun$)
(declare-fun uur$ (B_llist_b_llist_prod_set$) B_llist_b_llist_b_llist_prod_set_fun$)
(declare-fun uus$ (B_set$) B_llist_b_llist_prod_llist_b_set_fun$)
(declare-fun uut$ (B_llist_set$) B_llist_b_llist_prod_llist_b_llist_set_fun$)
(declare-fun uuu$ (B_set$) B_bool_fun$)
(declare-fun uuv$ (B_llist_set$) B_llist_bool_fun$)
(declare-fun uuw$ (B_llist_b_llist_prod_llist_set$) B_llist_b_llist_prod_llist_bool_fun$)
(declare-fun uux$ (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) B_llist_b_llist_prod_b_llist_b_llist_prod_prod_bool_fun$)
(declare-fun uuy$ (B_llist_b_llist_prod_set$) B_llist_b_llist_prod_bool_fun$)
(declare-fun top$a () B_llist_set$)
(declare-fun top$b () B_b_prod_set$)
(declare-fun top$c () B_llist_b_llist_prod_set$)
(declare-fun top$d () B_b_llist_b_llist_prod_prod_set$)
(declare-fun top$e () B_b_b_prod_prod_set$)
(declare-fun top$f () B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)
(declare-fun top$g () B_llist_b_llist_prod_llist_set$)
(declare-fun top$h () B_b_llist_prod_set$)
(declare-fun top$i () B_llist_b_prod_set$)
(declare-fun top$j () B_b_prod_b_prod_set$)
(declare-fun top$k () B_b_prod_b_llist_prod_set$)
(declare-fun top$l () B_llist_b_b_prod_prod_set$)
(declare-fun top$m () B_b_prod_b_b_prod_prod_set$)
(declare-fun top$n () B_llist_llist_set$)
(declare-fun top$o () B_b_prod_llist_set$)
(declare-fun top$p () B_bool_fun$)
(declare-fun top$q () Bool)
(declare-fun top$r () B_llist_b_llist_prod_bool_fun$)
(declare-fun top$s () B_b_prod_bool_fun$)
(declare-fun top$t () B_llist_bool_fun$)
(declare-fun sigma$ (B_llist_set$ B_llist_b_llist_set_fun$) B_llist_b_llist_prod_set$)
(declare-fun member$ (B_llist_b_llist_prod_llist$ B_llist_b_llist_prod_llist_set$) Bool)
(declare-fun sigma$a (B_set$ B_b_set_fun$) B_b_prod_set$)
(declare-fun sigma$b (B_set$ B_b_llist_set_fun$) B_b_llist_prod_set$)
(declare-fun sigma$c (B_llist_set$ B_llist_b_set_fun$) B_llist_b_prod_set$)
(declare-fun sigma$d (B_set$ B_b_b_prod_set_fun$) B_b_b_prod_prod_set$)
(declare-fun sigma$e (B_b_prod_set$ B_b_prod_b_set_fun$) B_b_prod_b_prod_set$)
(declare-fun sigma$f (B_b_prod_set$ B_b_prod_b_llist_set_fun$) B_b_prod_b_llist_prod_set$)
(declare-fun sigma$g (B_llist_set$ B_llist_b_b_prod_set_fun$) B_llist_b_b_prod_prod_set$)
(declare-fun sigma$h (B_set$ B_b_llist_b_llist_prod_set_fun$) B_b_llist_b_llist_prod_prod_set$)
(declare-fun sigma$i (B_b_prod_set$ B_b_prod_b_b_prod_set_fun$) B_b_prod_b_b_prod_prod_set$)
(declare-fun sigma$j (B_llist_b_llist_prod_set$ B_llist_b_llist_prod_b_set_fun$) B_llist_b_llist_prod_b_prod_set$)
(declare-fun sigma$k (B_llist_b_llist_prod_set$ B_llist_b_llist_prod_b_llist_set_fun$) B_llist_b_llist_prod_b_llist_prod_set$)
(declare-fun sigma$l (B_llist_set$ B_llist_b_llist_b_llist_prod_set_fun$) B_llist_b_llist_b_llist_prod_prod_set$)
(declare-fun sigma$m (B_llist_b_llist_prod_llist_set$ B_llist_b_llist_prod_llist_b_set_fun$) B_llist_b_llist_prod_llist_b_prod_set$)
(declare-fun sigma$n (B_llist_b_llist_prod_llist_set$ B_llist_b_llist_prod_llist_b_llist_set_fun$) B_llist_b_llist_prod_llist_b_llist_prod_set$)
(declare-fun sigma$o (B_llist_b_llist_prod_set$ B_llist_b_llist_prod_b_llist_b_llist_prod_set_fun$) B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)
(declare-fun sigma$p (B_set$ B_b_llist_b_llist_prod_llist_set_fun$) B_b_llist_b_llist_prod_llist_prod_set$)
(declare-fun collect$ (B_b_prod_bool_fun$) B_b_prod_set$)
(declare-fun finlsts$ (B_set$) B_llist_set$)
(declare-fun fun_app$ (B_llist_b_llist_set_fun$ B_llist$) B_llist_set$)
(declare-fun less_eq$ (B_llist_b_llist_prod_set$ B_llist_b_llist_prod_set$) Bool)
(declare-fun member$a (B_llist$ B_llist_set$) Bool)
(declare-fun member$b (B_llist_b_llist_prod$ B_llist_b_llist_prod_set$) Bool)
(declare-fun member$c (B_llist_b_llist_prod_b_llist_b_llist_prod_prod$ B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) Bool)
(declare-fun member$d (B$ B_set$) Bool)
(declare-fun member$e (B_b_llist_b_llist_prod_prod_llist$ B_b_llist_b_llist_prod_prod_llist_set$) Bool)
(declare-fun member$f (B_b_b_prod_prod_llist$ B_b_b_prod_prod_llist_set$) Bool)
(declare-fun member$g (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist$ B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist_set$) Bool)
(declare-fun member$h (B_llist_b_llist_prod_llist_llist$ B_llist_b_llist_prod_llist_llist_set$) Bool)
(declare-fun member$i (B_b_prod_llist$ B_b_prod_llist_set$) Bool)
(declare-fun member$j (B_llist_llist$ B_llist_llist_set$) Bool)
(declare-fun member$k (B_b_llist_b_llist_prod_prod$ B_b_llist_b_llist_prod_prod_set$) Bool)
(declare-fun member$l (B_b_b_prod_prod$ B_b_b_prod_prod_set$) Bool)
(declare-fun member$m (B_b_prod$ B_b_prod_set$) Bool)
(declare-fun collect$a (B_llist_bool_fun$) B_llist_set$)
(declare-fun collect$b (B_llist_b_llist_prod_bool_fun$) B_llist_b_llist_prod_set$)
(declare-fun collect$c (B_bool_fun$) B_set$)
(declare-fun finlsts$a (B_b_llist_b_llist_prod_prod_set$) B_b_llist_b_llist_prod_prod_llist_set$)
(declare-fun finlsts$b (B_b_b_prod_prod_set$) B_b_b_prod_prod_llist_set$)
(declare-fun finlsts$c (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist_set$)
(declare-fun finlsts$d (B_llist_b_llist_prod_llist_set$) B_llist_b_llist_prod_llist_llist_set$)
(declare-fun finlsts$e (B_b_prod_set$) B_b_prod_llist_set$)
(declare-fun finlsts$f (B_llist_set$) B_llist_llist_set$)
(declare-fun finlsts$g (B_llist_b_llist_prod_set$) B_llist_b_llist_prod_llist_set$)
(declare-fun fun_app$a (B_llist_b_llist_prod_llist_bool_fun$ B_llist_b_llist_prod_llist$) Bool)
(declare-fun fun_app$b (B_llist_bool_fun$ B_llist$) Bool)
(declare-fun fun_app$c (B_llist_b_llist_prod_bool_fun$ B_llist_b_llist_prod$) Bool)
(declare-fun fun_app$d (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_bool_fun$ B_llist_b_llist_prod_b_llist_b_llist_prod_prod$) Bool)
(declare-fun fun_app$e (B_bool_fun$ B$) Bool)
(declare-fun fun_app$f (B_llist_b_llist_prod_llist_b_llist_set_fun$ B_llist_b_llist_prod_llist$) B_llist_set$)
(declare-fun fun_app$g (B_llist_b_llist_prod_b_llist_set_fun$ B_llist_b_llist_prod$) B_llist_set$)
(declare-fun fun_app$h (B_b_llist_set_fun$ B$) B_llist_set$)
(declare-fun fun_app$i (B_llist_b_llist_b_llist_prod_set_fun$ B_llist$) B_llist_b_llist_prod_set$)
(declare-fun fun_app$j (B_b_llist_b_llist_prod_set_fun$ B$) B_llist_b_llist_prod_set$)
(declare-fun fun_app$k (B_llist_b_llist_prod_llist_b_set_fun$ B_llist_b_llist_prod_llist$) B_set$)
(declare-fun fun_app$l (B_llist_b_set_fun$ B_llist$) B_set$)
(declare-fun fun_app$m (B_llist_b_llist_prod_b_set_fun$ B_llist_b_llist_prod$) B_set$)
(declare-fun fun_app$n (B_b_set_fun$ B$) B_set$)
(declare-fun fun_app$o (B_llist_b_b_prod_set_fun$ B_llist$) B_b_prod_set$)
(declare-fun fun_app$p (B_b_prod_b_llist_set_fun$ B_b_prod$) B_llist_set$)
(declare-fun fun_app$q (B_b_prod_b_b_prod_set_fun$ B_b_prod$) B_b_prod_set$)
(declare-fun fun_app$r (B_b_prod_b_set_fun$ B_b_prod$) B_set$)
(declare-fun fun_app$s (B_b_b_prod_set_fun$ B$) B_b_prod_set$)
(declare-fun fun_app$t (B_llist_b_llist_prod_b_llist_b_llist_prod_set_fun$ B_llist_b_llist_prod$) B_llist_b_llist_prod_set$)
(declare-fun fun_app$u (B_b_llist_b_llist_prod_llist_set_fun$ B$) B_llist_b_llist_prod_llist_set$)
(declare-fun less_eq$a (B_b_prod_set$ B_b_prod_set$) Bool)
(declare-fun less_eq$b (B_b_prod_llist_set$ B_b_prod_llist_set$) Bool)
(declare-fun less_eq$c (B_llist_set$ B_llist_set$) Bool)
(declare-fun less_eq$d (B_llist_llist_set$ B_llist_llist_set$) Bool)
(declare-fun less_eq$e (B_llist_b_llist_prod_llist_set$ B_llist_b_llist_prod_llist_set$) Bool)
(declare-fun less_eq$f (B_llist_b_llist_prod_llist_llist_set$ B_llist_b_llist_prod_llist_llist_set$) Bool)
(declare-fun less_eq$g (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$ B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) Bool)
(declare-fun less_eq$h (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist_set$ B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist_set$) Bool)
(declare-fun less_eq$i (B_set$ B_set$) Bool)
(declare-fun less_eq$j (B_b_llist_prod_set$ B_b_llist_prod_set$) Bool)
(declare-fun less_eq$k (B_llist_b_prod_set$ B_llist_b_prod_set$) Bool)
(declare-fun less_eq$l (B_llist_b_llist_prod_b_prod_set$ B_llist_b_llist_prod_b_prod_set$) Bool)
(declare-fun less_eq$m (B_b_llist_b_llist_prod_prod_set$ B_b_llist_b_llist_prod_prod_set$) Bool)
(declare-fun less_eq$n (B_llist_b_llist_prod_b_llist_prod_set$ B_llist_b_llist_prod_b_llist_prod_set$) Bool)
(declare-fun less_eq$o (B_llist_b_llist_b_llist_prod_prod_set$ B_llist_b_llist_b_llist_prod_prod_set$) Bool)
(declare-fun less_eq$p (B_llist_b_llist_prod_llist_b_prod_set$ B_llist_b_llist_prod_llist_b_prod_set$) Bool)
(declare-fun less_eq$q (B_llist_b_llist_prod_llist_b_llist_prod_set$ B_llist_b_llist_prod_llist_b_llist_prod_set$) Bool)
(declare-fun less_eq$r (B_b_llist_b_llist_prod_llist_prod_set$ B_b_llist_b_llist_prod_llist_prod_set$) Bool)
(declare-fun less_eq$s (B_llist_b_llist_prod_bool_fun$ B_llist_b_llist_prod_bool_fun$) Bool)
(declare-fun less_eq$t (B_bool_fun$ B_bool_fun$) Bool)
(declare-fun less_eq$u (B_llist_bool_fun$ B_llist_bool_fun$) Bool)
(declare-fun less_eq$v (B_llist_b_llist_prod_llist_bool_fun$ B_llist_b_llist_prod_llist_bool_fun$) Bool)
(declare-fun less_eq$w (B_llist_b_llist_prod_b_llist_b_llist_prod_prod_bool_fun$ B_llist_b_llist_prod_b_llist_b_llist_prod_prod_bool_fun$) Bool)
(declare-fun finlsts_pred$ () B_llist_b_llist_prod_set$)
(assert (! (forall ((?v0 B_llist$)) (! (= (fun_app$ uu$ ?v0) (finlsts$ top$)) :pattern ((fun_app$ uu$ ?v0)))) :named a0))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$) (?v1 B_llist_b_llist_prod_llist$)) (! (= (fun_app$a (uuw$ ?v0) ?v1) (member$ ?v1 ?v0)) :pattern ((fun_app$a (uuw$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist$)) (! (= (fun_app$b (uuv$ ?v0) ?v1) (member$a ?v1 ?v0)) :pattern ((fun_app$b (uuv$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod$)) (! (= (fun_app$c (uuy$ ?v0) ?v1) (member$b ?v1 ?v0)) :pattern ((fun_app$c (uuy$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) (?v1 B_llist_b_llist_prod_b_llist_b_llist_prod_prod$)) (! (= (fun_app$d (uux$ ?v0) ?v1) (member$c ?v1 ?v0)) :pattern ((fun_app$d (uux$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 B_set$) (?v1 B$)) (! (= (fun_app$e (uuu$ ?v0) ?v1) (member$d ?v1 ?v0)) :pattern ((fun_app$e (uuu$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_b_llist_prod_llist$)) (! (= (fun_app$f (uut$ ?v0) ?v1) ?v0) :pattern ((fun_app$f (uut$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist$)) (! (= (fun_app$ (uuk$ ?v0) ?v1) ?v0) :pattern ((fun_app$ (uuk$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_b_llist_prod$)) (! (= (fun_app$g (uuq$ ?v0) ?v1) ?v0) :pattern ((fun_app$g (uuq$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B$)) (! (= (fun_app$h (uum$ ?v0) ?v1) ?v0) :pattern ((fun_app$h (uum$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist$)) (! (= (fun_app$i (uur$ ?v0) ?v1) ?v0) :pattern ((fun_app$i (uur$ ?v0) ?v1)))) :named a10))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B$)) (! (= (fun_app$j (uup$ ?v0) ?v1) ?v0) :pattern ((fun_app$j (uup$ ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 B_set$) (?v1 B_llist_b_llist_prod_llist$)) (! (= (fun_app$k (uus$ ?v0) ?v1) ?v0) :pattern ((fun_app$k (uus$ ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 B_set$) (?v1 B_llist$)) (! (= (fun_app$l (uun$ ?v0) ?v1) ?v0) :pattern ((fun_app$l (uun$ ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 B_set$) (?v1 B_llist_b_llist_prod$)) (! (= (fun_app$m (uuo$ ?v0) ?v1) ?v0) :pattern ((fun_app$m (uuo$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 B_set$) (?v1 B$)) (! (= (fun_app$n (uul$ ?v0) ?v1) ?v0) :pattern ((fun_app$n (uul$ ?v0) ?v1)))) :named a15))
(assert (! (forall ((?v0 B_llist$)) (! (= (fun_app$ uub$ ?v0) top$a) :pattern ((fun_app$ uub$ ?v0)))) :named a16))
(assert (! (forall ((?v0 B_llist$)) (! (= (fun_app$o uuh$ ?v0) top$b) :pattern ((fun_app$o uuh$ ?v0)))) :named a17))
(assert (! (forall ((?v0 B_llist$)) (! (= (fun_app$l uud$ ?v0) top$) :pattern ((fun_app$l uud$ ?v0)))) :named a18))
(assert (! (forall ((?v0 B_b_prod$)) (! (= (fun_app$p uug$ ?v0) top$a) :pattern ((fun_app$p uug$ ?v0)))) :named a19))
(assert (! (forall ((?v0 B_b_prod$)) (! (= (fun_app$q uuj$ ?v0) top$b) :pattern ((fun_app$q uuj$ ?v0)))) :named a20))
(assert (! (forall ((?v0 B_b_prod$)) (! (= (fun_app$r uuf$ ?v0) top$) :pattern ((fun_app$r uuf$ ?v0)))) :named a21))
(assert (! (forall ((?v0 B$)) (! (= (fun_app$h uuc$ ?v0) top$a) :pattern ((fun_app$h uuc$ ?v0)))) :named a22))
(assert (! (forall ((?v0 B$)) (! (= (fun_app$j uui$ ?v0) top$c) :pattern ((fun_app$j uui$ ?v0)))) :named a23))
(assert (! (forall ((?v0 B$)) (! (= (fun_app$s uue$ ?v0) top$b) :pattern ((fun_app$s uue$ ?v0)))) :named a24))
(assert (! (forall ((?v0 B$)) (! (= (fun_app$n uua$ ?v0) top$) :pattern ((fun_app$n uua$ ?v0)))) :named a25))
(assert (! (not (less_eq$ finlsts_pred$ (sigma$ (finlsts$ top$) uu$))) :named a26))
(assert (! (forall ((?v0 B_b_llist_b_llist_prod_prod_llist$) (?v1 B_b_llist_b_llist_prod_prod_set$)) (=> (and (member$e ?v0 (finlsts$a ?v1)) (not (member$e ?v0 (finlsts$a top$d)))) false)) :named a27))
(assert (! (forall ((?v0 B_b_b_prod_prod_llist$) (?v1 B_b_b_prod_prod_set$)) (=> (and (member$f ?v0 (finlsts$b ?v1)) (not (member$f ?v0 (finlsts$b top$e)))) false)) :named a28))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist$) (?v1 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (=> (and (member$g ?v0 (finlsts$c ?v1)) (not (member$g ?v0 (finlsts$c top$f)))) false)) :named a29))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_llist$) (?v1 B_llist_b_llist_prod_llist_set$)) (=> (and (member$h ?v0 (finlsts$d ?v1)) (not (member$h ?v0 (finlsts$d top$g)))) false)) :named a30))
(assert (! (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_set$)) (=> (and (member$i ?v0 (finlsts$e ?v1)) (not (member$i ?v0 (finlsts$e top$b)))) false)) :named a31))
(assert (! (forall ((?v0 B_llist_llist$) (?v1 B_llist_set$)) (=> (and (member$j ?v0 (finlsts$f ?v1)) (not (member$j ?v0 (finlsts$f top$a)))) false)) :named a32))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist$) (?v1 B_llist_b_llist_prod_set$)) (=> (and (member$ ?v0 (finlsts$g ?v1)) (not (member$ ?v0 (finlsts$g top$c)))) false)) :named a33))
(assert (! (forall ((?v0 B_llist$) (?v1 B_set$)) (=> (and (member$a ?v0 (finlsts$ ?v1)) (not (member$a ?v0 (finlsts$ top$)))) false)) :named a34))
(assert (! (forall ((?v0 B_b_llist_b_llist_prod_prod_llist$) (?v1 B_b_llist_b_llist_prod_prod_set$)) (=> (member$e ?v0 (finlsts$a ?v1)) (member$e ?v0 (finlsts$a top$d)))) :named a35))
(assert (! (forall ((?v0 B_b_b_prod_prod_llist$) (?v1 B_b_b_prod_prod_set$)) (=> (member$f ?v0 (finlsts$b ?v1)) (member$f ?v0 (finlsts$b top$e)))) :named a36))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_llist$) (?v1 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (=> (member$g ?v0 (finlsts$c ?v1)) (member$g ?v0 (finlsts$c top$f)))) :named a37))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_llist$) (?v1 B_llist_b_llist_prod_llist_set$)) (=> (member$h ?v0 (finlsts$d ?v1)) (member$h ?v0 (finlsts$d top$g)))) :named a38))
(assert (! (forall ((?v0 B_b_prod_llist$) (?v1 B_b_prod_set$)) (=> (member$i ?v0 (finlsts$e ?v1)) (member$i ?v0 (finlsts$e top$b)))) :named a39))
(assert (! (forall ((?v0 B_llist_llist$) (?v1 B_llist_set$)) (=> (member$j ?v0 (finlsts$f ?v1)) (member$j ?v0 (finlsts$f top$a)))) :named a40))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist$) (?v1 B_llist_b_llist_prod_set$)) (=> (member$ ?v0 (finlsts$g ?v1)) (member$ ?v0 (finlsts$g top$c)))) :named a41))
(assert (! (forall ((?v0 B_llist$) (?v1 B_set$)) (=> (member$a ?v0 (finlsts$ ?v1)) (member$a ?v0 (finlsts$ top$)))) :named a42))
(assert (! (forall ((?v0 B_b_prod_set$) (?v1 B_b_prod_set$)) (=> (less_eq$a ?v0 ?v1) (less_eq$b (finlsts$e ?v0) (finlsts$e ?v1)))) :named a43))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_set$)) (=> (less_eq$c ?v0 ?v1) (less_eq$d (finlsts$f ?v0) (finlsts$f ?v1)))) :named a44))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$) (?v1 B_llist_b_llist_prod_llist_set$)) (=> (less_eq$e ?v0 ?v1) (less_eq$f (finlsts$d ?v0) (finlsts$d ?v1)))) :named a45))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) (?v1 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (=> (less_eq$g ?v0 ?v1) (less_eq$h (finlsts$c ?v0) (finlsts$c ?v1)))) :named a46))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$)) (=> (less_eq$ ?v0 ?v1) (less_eq$e (finlsts$g ?v0) (finlsts$g ?v1)))) :named a47))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$)) (=> (less_eq$i ?v0 ?v1) (less_eq$c (finlsts$ ?v0) (finlsts$ ?v1)))) :named a48))
(assert (! (= (sigma$a top$ uua$) top$b) :named a49))
(assert (! (= (sigma$ top$a uub$) top$c) :named a50))
(assert (! (= (sigma$b top$ uuc$) top$h) :named a51))
(assert (! (= (sigma$c top$a uud$) top$i) :named a52))
(assert (! (= (sigma$d top$ uue$) top$e) :named a53))
(assert (! (= (sigma$e top$b uuf$) top$j) :named a54))
(assert (! (= (sigma$f top$b uug$) top$k) :named a55))
(assert (! (= (sigma$g top$a uuh$) top$l) :named a56))
(assert (! (= (sigma$h top$ uui$) top$d) :named a57))
(assert (! (= (sigma$i top$b uuj$) top$m) :named a58))
(assert (! (forall ((?v0 B_llist$) (?v1 B_llist_set$) (?v2 B_llist_set$) (?v3 B_llist_set$)) (=> (member$a ?v0 ?v1) (= (less_eq$ (sigma$ ?v2 (uuk$ ?v1)) (sigma$ ?v3 (uuk$ ?v1))) (less_eq$c ?v2 ?v3)))) :named a59))
(assert (! (forall ((?v0 B$) (?v1 B_set$) (?v2 B_set$) (?v3 B_set$)) (=> (member$d ?v0 ?v1) (= (less_eq$a (sigma$a ?v2 (uul$ ?v1)) (sigma$a ?v3 (uul$ ?v1))) (less_eq$i ?v2 ?v3)))) :named a60))
(assert (! (forall ((?v0 B_llist$) (?v1 B_llist_set$) (?v2 B_set$) (?v3 B_set$)) (=> (member$a ?v0 ?v1) (= (less_eq$j (sigma$b ?v2 (uum$ ?v1)) (sigma$b ?v3 (uum$ ?v1))) (less_eq$i ?v2 ?v3)))) :named a61))
(assert (! (forall ((?v0 B$) (?v1 B_set$) (?v2 B_llist_set$) (?v3 B_llist_set$)) (=> (member$d ?v0 ?v1) (= (less_eq$k (sigma$c ?v2 (uun$ ?v1)) (sigma$c ?v3 (uun$ ?v1))) (less_eq$c ?v2 ?v3)))) :named a62))
(assert (! (forall ((?v0 B$) (?v1 B_set$) (?v2 B_llist_b_llist_prod_set$) (?v3 B_llist_b_llist_prod_set$)) (=> (member$d ?v0 ?v1) (= (less_eq$l (sigma$j ?v2 (uuo$ ?v1)) (sigma$j ?v3 (uuo$ ?v1))) (less_eq$ ?v2 ?v3)))) :named a63))
(assert (! (forall ((?v0 B_llist_b_llist_prod$) (?v1 B_llist_b_llist_prod_set$) (?v2 B_set$) (?v3 B_set$)) (=> (member$b ?v0 ?v1) (= (less_eq$m (sigma$h ?v2 (uup$ ?v1)) (sigma$h ?v3 (uup$ ?v1))) (less_eq$i ?v2 ?v3)))) :named a64))
(assert (! (forall ((?v0 B_llist$) (?v1 B_llist_set$) (?v2 B_llist_b_llist_prod_set$) (?v3 B_llist_b_llist_prod_set$)) (=> (member$a ?v0 ?v1) (= (less_eq$n (sigma$k ?v2 (uuq$ ?v1)) (sigma$k ?v3 (uuq$ ?v1))) (less_eq$ ?v2 ?v3)))) :named a65))
(assert (! (forall ((?v0 B_llist_b_llist_prod$) (?v1 B_llist_b_llist_prod_set$) (?v2 B_llist_set$) (?v3 B_llist_set$)) (=> (member$b ?v0 ?v1) (= (less_eq$o (sigma$l ?v2 (uur$ ?v1)) (sigma$l ?v3 (uur$ ?v1))) (less_eq$c ?v2 ?v3)))) :named a66))
(assert (! (forall ((?v0 B$) (?v1 B_set$) (?v2 B_llist_b_llist_prod_llist_set$) (?v3 B_llist_b_llist_prod_llist_set$)) (=> (member$d ?v0 ?v1) (= (less_eq$p (sigma$m ?v2 (uus$ ?v1)) (sigma$m ?v3 (uus$ ?v1))) (less_eq$e ?v2 ?v3)))) :named a67))
(assert (! (forall ((?v0 B_llist$) (?v1 B_llist_set$) (?v2 B_llist_b_llist_prod_llist_set$) (?v3 B_llist_b_llist_prod_llist_set$)) (=> (member$a ?v0 ?v1) (= (less_eq$q (sigma$n ?v2 (uut$ ?v1)) (sigma$n ?v3 (uut$ ?v1))) (less_eq$e ?v2 ?v3)))) :named a68))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_set$) (?v2 B_llist_b_llist_set_fun$) (?v3 B_llist_b_llist_set_fun$)) (=> (and (less_eq$c ?v0 ?v1) (forall ((?v4 B_llist$)) (=> (member$a ?v4 ?v0) (less_eq$c (fun_app$ ?v2 ?v4) (fun_app$ ?v3 ?v4))))) (less_eq$ (sigma$ ?v0 ?v2) (sigma$ ?v1 ?v3)))) :named a69))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$) (?v2 B_llist_b_llist_prod_b_llist_b_llist_prod_set_fun$) (?v3 B_llist_b_llist_prod_b_llist_b_llist_prod_set_fun$)) (=> (and (less_eq$ ?v0 ?v1) (forall ((?v4 B_llist_b_llist_prod$)) (=> (member$b ?v4 ?v0) (less_eq$ (fun_app$t ?v2 ?v4) (fun_app$t ?v3 ?v4))))) (less_eq$g (sigma$o ?v0 ?v2) (sigma$o ?v1 ?v3)))) :named a70))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$) (?v2 B_b_set_fun$) (?v3 B_b_set_fun$)) (=> (and (less_eq$i ?v0 ?v1) (forall ((?v4 B$)) (=> (member$d ?v4 ?v0) (less_eq$i (fun_app$n ?v2 ?v4) (fun_app$n ?v3 ?v4))))) (less_eq$a (sigma$a ?v0 ?v2) (sigma$a ?v1 ?v3)))) :named a71))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$) (?v2 B_b_llist_set_fun$) (?v3 B_b_llist_set_fun$)) (=> (and (less_eq$i ?v0 ?v1) (forall ((?v4 B$)) (=> (member$d ?v4 ?v0) (less_eq$c (fun_app$h ?v2 ?v4) (fun_app$h ?v3 ?v4))))) (less_eq$j (sigma$b ?v0 ?v2) (sigma$b ?v1 ?v3)))) :named a72))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_set$) (?v2 B_llist_b_set_fun$) (?v3 B_llist_b_set_fun$)) (=> (and (less_eq$c ?v0 ?v1) (forall ((?v4 B_llist$)) (=> (member$a ?v4 ?v0) (less_eq$i (fun_app$l ?v2 ?v4) (fun_app$l ?v3 ?v4))))) (less_eq$k (sigma$c ?v0 ?v2) (sigma$c ?v1 ?v3)))) :named a73))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$) (?v2 B_llist_b_llist_prod_b_set_fun$) (?v3 B_llist_b_llist_prod_b_set_fun$)) (=> (and (less_eq$ ?v0 ?v1) (forall ((?v4 B_llist_b_llist_prod$)) (=> (member$b ?v4 ?v0) (less_eq$i (fun_app$m ?v2 ?v4) (fun_app$m ?v3 ?v4))))) (less_eq$l (sigma$j ?v0 ?v2) (sigma$j ?v1 ?v3)))) :named a74))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$) (?v2 B_b_llist_b_llist_prod_set_fun$) (?v3 B_b_llist_b_llist_prod_set_fun$)) (=> (and (less_eq$i ?v0 ?v1) (forall ((?v4 B$)) (=> (member$d ?v4 ?v0) (less_eq$ (fun_app$j ?v2 ?v4) (fun_app$j ?v3 ?v4))))) (less_eq$m (sigma$h ?v0 ?v2) (sigma$h ?v1 ?v3)))) :named a75))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$) (?v2 B_llist_b_llist_prod_b_llist_set_fun$) (?v3 B_llist_b_llist_prod_b_llist_set_fun$)) (=> (and (less_eq$ ?v0 ?v1) (forall ((?v4 B_llist_b_llist_prod$)) (=> (member$b ?v4 ?v0) (less_eq$c (fun_app$g ?v2 ?v4) (fun_app$g ?v3 ?v4))))) (less_eq$n (sigma$k ?v0 ?v2) (sigma$k ?v1 ?v3)))) :named a76))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$) (?v2 B_b_llist_b_llist_prod_llist_set_fun$) (?v3 B_b_llist_b_llist_prod_llist_set_fun$)) (=> (and (less_eq$i ?v0 ?v1) (forall ((?v4 B$)) (=> (member$d ?v4 ?v0) (less_eq$e (fun_app$u ?v2 ?v4) (fun_app$u ?v3 ?v4))))) (less_eq$r (sigma$p ?v0 ?v2) (sigma$p ?v1 ?v3)))) :named a77))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_set$) (?v2 B_llist_b_llist_b_llist_prod_set_fun$) (?v3 B_llist_b_llist_b_llist_prod_set_fun$)) (=> (and (less_eq$c ?v0 ?v1) (forall ((?v4 B_llist$)) (=> (member$a ?v4 ?v0) (less_eq$ (fun_app$i ?v2 ?v4) (fun_app$i ?v3 ?v4))))) (less_eq$o (sigma$l ?v0 ?v2) (sigma$l ?v1 ?v3)))) :named a78))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist$)) (= (member$ ?v0 top$g) true)) :named a79))
(assert (! (forall ((?v0 B_llist_llist$)) (= (member$j ?v0 top$n) true)) :named a80))
(assert (! (forall ((?v0 B_b_prod_llist$)) (= (member$i ?v0 top$o) true)) :named a81))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod$)) (= (member$c ?v0 top$f) true)) :named a82))
(assert (! (forall ((?v0 B_b_llist_b_llist_prod_prod$)) (= (member$k ?v0 top$d) true)) :named a83))
(assert (! (forall ((?v0 B_b_b_prod_prod$)) (= (member$l ?v0 top$e) true)) :named a84))
(assert (! (forall ((?v0 B_b_prod$)) (= (member$m ?v0 top$b) true)) :named a85))
(assert (! (forall ((?v0 B_llist$)) (= (member$a ?v0 top$a) true)) :named a86))
(assert (! (forall ((?v0 B_llist_b_llist_prod$)) (= (member$b ?v0 top$c) true)) :named a87))
(assert (! (forall ((?v0 B$)) (= (member$d ?v0 top$) true)) :named a88))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod$)) (member$c ?v0 top$f)) :named a89))
(assert (! (forall ((?v0 B_b_llist_b_llist_prod_prod$)) (member$k ?v0 top$d)) :named a90))
(assert (! (forall ((?v0 B_b_b_prod_prod$)) (member$l ?v0 top$e)) :named a91))
(assert (! (forall ((?v0 B_b_prod$)) (member$m ?v0 top$b)) :named a92))
(assert (! (forall ((?v0 B_llist$)) (member$a ?v0 top$a)) :named a93))
(assert (! (forall ((?v0 B_llist_b_llist_prod$)) (member$b ?v0 top$c)) :named a94))
(assert (! (forall ((?v0 B$)) (member$d ?v0 top$)) :named a95))
(assert (! (forall ((?v0 B$)) (! (= (fun_app$e top$p ?v0) top$q) :pattern ((fun_app$e top$p ?v0)))) :named a96))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$)) (=> (forall ((?v2 B$)) (=> (member$d ?v2 ?v0) (member$d ?v2 ?v1))) (less_eq$i ?v0 ?v1))) :named a97))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_set$)) (=> (forall ((?v2 B_llist$)) (=> (member$a ?v2 ?v0) (member$a ?v2 ?v1))) (less_eq$c ?v0 ?v1))) :named a98))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$) (?v1 B_llist_b_llist_prod_llist_set$)) (=> (forall ((?v2 B_llist_b_llist_prod_llist$)) (=> (member$ ?v2 ?v0) (member$ ?v2 ?v1))) (less_eq$e ?v0 ?v1))) :named a99))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) (?v1 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (=> (forall ((?v2 B_llist_b_llist_prod_b_llist_b_llist_prod_prod$)) (=> (member$c ?v2 ?v0) (member$c ?v2 ?v1))) (less_eq$g ?v0 ?v1))) :named a100))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$)) (=> (forall ((?v2 B_llist_b_llist_prod$)) (=> (member$b ?v2 ?v0) (member$b ?v2 ?v1))) (less_eq$ ?v0 ?v1))) :named a101))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$)) (=> (and (less_eq$i ?v0 ?v1) (less_eq$i ?v1 ?v0)) (= ?v0 ?v1))) :named a102))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_set$)) (=> (and (less_eq$c ?v0 ?v1) (less_eq$c ?v1 ?v0)) (= ?v0 ?v1))) :named a103))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$) (?v1 B_llist_b_llist_prod_llist_set$)) (=> (and (less_eq$e ?v0 ?v1) (less_eq$e ?v1 ?v0)) (= ?v0 ?v1))) :named a104))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) (?v1 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (=> (and (less_eq$g ?v0 ?v1) (less_eq$g ?v1 ?v0)) (= ?v0 ?v1))) :named a105))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$)) (=> (and (less_eq$ ?v0 ?v1) (less_eq$ ?v1 ?v0)) (= ?v0 ?v1))) :named a106))
(assert (! (forall ((?v0 B_set$)) (less_eq$i ?v0 ?v0)) :named a107))
(assert (! (forall ((?v0 B_llist_set$)) (less_eq$c ?v0 ?v0)) :named a108))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$)) (less_eq$e ?v0 ?v0)) :named a109))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (less_eq$g ?v0 ?v0)) :named a110))
(assert (! (forall ((?v0 B_llist_b_llist_prod_bool_fun$)) (less_eq$s ?v0 ?v0)) :named a111))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$)) (less_eq$ ?v0 ?v0)) :named a112))
(assert (! (forall ((?v0 B_b_prod_set$)) (less_eq$a ?v0 top$b)) :named a113))
(assert (! (forall ((?v0 B_llist_set$)) (less_eq$c ?v0 top$a)) :named a114))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$)) (less_eq$e ?v0 top$g)) :named a115))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (less_eq$g ?v0 top$f)) :named a116))
(assert (! (forall ((?v0 B_set$)) (less_eq$i ?v0 top$)) :named a117))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$)) (less_eq$ ?v0 top$c)) :named a118))
(assert (! (forall ((?v0 B_b_prod_set$)) (= (less_eq$a top$b ?v0) (= ?v0 top$b))) :named a119))
(assert (! (forall ((?v0 B_bool_fun$)) (= (less_eq$t top$p ?v0) (= ?v0 top$p))) :named a120))
(assert (! (forall ((?v0 B_llist_set$)) (= (less_eq$c top$a ?v0) (= ?v0 top$a))) :named a121))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$)) (= (less_eq$e top$g ?v0) (= ?v0 top$g))) :named a122))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (= (less_eq$g top$f ?v0) (= ?v0 top$f))) :named a123))
(assert (! (forall ((?v0 B_llist_b_llist_prod_bool_fun$)) (= (less_eq$s top$r ?v0) (= ?v0 top$r))) :named a124))
(assert (! (forall ((?v0 B_set$)) (= (less_eq$i top$ ?v0) (= ?v0 top$))) :named a125))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$)) (= (less_eq$ top$c ?v0) (= ?v0 top$c))) :named a126))
(assert (! (forall ((?v0 B_b_prod_set$)) (=> (less_eq$a top$b ?v0) (= ?v0 top$b))) :named a127))
(assert (! (forall ((?v0 B_bool_fun$)) (=> (less_eq$t top$p ?v0) (= ?v0 top$p))) :named a128))
(assert (! (forall ((?v0 B_llist_set$)) (=> (less_eq$c top$a ?v0) (= ?v0 top$a))) :named a129))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$)) (=> (less_eq$e top$g ?v0) (= ?v0 top$g))) :named a130))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (=> (less_eq$g top$f ?v0) (= ?v0 top$f))) :named a131))
(assert (! (forall ((?v0 B_llist_b_llist_prod_bool_fun$)) (=> (less_eq$s top$r ?v0) (= ?v0 top$r))) :named a132))
(assert (! (forall ((?v0 B_set$)) (=> (less_eq$i top$ ?v0) (= ?v0 top$))) :named a133))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$)) (=> (less_eq$ top$c ?v0) (= ?v0 top$c))) :named a134))
(assert (! (= top$b (collect$ top$s)) :named a135))
(assert (! (= top$a (collect$a top$t)) :named a136))
(assert (! (= top$c (collect$b top$r)) :named a137))
(assert (! (= top$ (collect$c top$p)) :named a138))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$)) (= (less_eq$i ?v0 ?v1) (less_eq$t (uuu$ ?v0) (uuu$ ?v1)))) :named a139))
(assert (! (forall ((?v0 B_llist_set$) (?v1 B_llist_set$)) (= (less_eq$c ?v0 ?v1) (less_eq$u (uuv$ ?v0) (uuv$ ?v1)))) :named a140))
(assert (! (forall ((?v0 B_llist_b_llist_prod_llist_set$) (?v1 B_llist_b_llist_prod_llist_set$)) (= (less_eq$e ?v0 ?v1) (less_eq$v (uuw$ ?v0) (uuw$ ?v1)))) :named a141))
(assert (! (forall ((?v0 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$) (?v1 B_llist_b_llist_prod_b_llist_b_llist_prod_prod_set$)) (= (less_eq$g ?v0 ?v1) (less_eq$w (uux$ ?v0) (uux$ ?v1)))) :named a142))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$) (?v1 B_llist_b_llist_prod_set$)) (= (less_eq$ ?v0 ?v1) (less_eq$s (uuy$ ?v0) (uuy$ ?v1)))) :named a143))
(check-sat)
;(get-unsat-core)
