; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 363
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_set$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_llist_set$ 0)
(declare-sort A_llist_bool_fun$ 0)
(declare-sort A_llist_llist_set$ 0)
(declare-sort A_llist_a_llist_fun$ 0)
(declare-sort A_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_bool_fun$ 0)
(declare-sort A_llist_llist_llist_llist_set$ 0)
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0)
(declare-codatatypes () ((A_llist$ (lNil$) (lCons$ (lhd$ A$) (ltl$ A_llist$)))
  (A_llist_llist$ (lNil$a) (lCons$a (lhd$a A_llist$) (ltl$a A_llist_llist$)))
  (A_llist_llist_llist$ (lNil$b) (lCons$b (lhd$b A_llist_llist$) (ltl$b A_llist_llist_llist$)))
  (A_llist_llist_llist_llist$ (lNil$c) (lCons$c (lhd$c A_llist_llist_llist$) (ltl$c A_llist_llist_llist_llist$)))))
(declare-fun a$ () A$)
(declare-fun l$ () A_llist$)
(declare-fun a$a () A_set$)
(declare-fun a$b () A$)
(declare-fun l$a () A_llist$)
(declare-fun uu$ () A_llist_a_llist_fun$)
(declare-fun top$ () A_set$)
(declare-fun uua$ () A_a_fun$)
(declare-fun top$a () A_llist_llist_set$)
(declare-fun top$b () A_llist_set$)
(declare-fun lconst$ (A$) A_llist$)
(declare-fun member$ (A$ A_set$) Bool)
(declare-fun finlsts$ (A_set$) A_llist_set$)
(declare-fun fun_app$ (A_llist_a_llist_fun$ A_llist$) A_llist$)
(declare-fun lconst$a (A_llist_llist$) A_llist_llist_llist$)
(declare-fun lconst$b (A_llist$) A_llist_llist$)
(declare-fun member$a (A_llist$ A_llist_set$) Bool)
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$) Bool)
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$) Bool)
(declare-fun member$d (A_llist_llist$ A_llist_llist_set$) Bool)
(declare-fun finlsts$a (A_llist_llist_llist_set$) A_llist_llist_llist_llist_set$)
(declare-fun finlsts$b (A_llist_llist_set$) A_llist_llist_llist_set$)
(declare-fun finlsts$c (A_llist_set$) A_llist_llist_set$)
(declare-fun fun_app$a (A_a_fun$ A$) A$)
(declare-fun fun_app$b (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$) Bool)
(declare-fun fun_app$c (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$) Bool)
(declare-fun fun_app$d (A_llist_llist_bool_fun$ A_llist_llist$) Bool)
(declare-fun fun_app$e (A_llist_bool_fun$ A_llist$) Bool)
(declare-fun iterates$ (A_llist_a_llist_fun$ A_llist$) A_llist_llist$)
(declare-fun iterates$a (A_a_fun$ A$) A_llist$)
(assert (! (forall ((?v0 A_llist$)) (! (= (fun_app$ uu$ ?v0) ?v0) :pattern ((fun_app$ uu$ ?v0)))) :named a0))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$a uua$ ?v0) ?v0) :pattern ((fun_app$a uua$ ?v0)))) :named a1))
(assert (! (not (= (lconst$ a$) l$)) :named a2))
(assert (! (member$ a$ a$a) :named a3))
(assert (! (= (lCons$ a$ (lconst$ a$)) (lCons$ a$b l$)) :named a4))
(assert (! (not (= (lconst$ a$) l$)) :named a5))
(assert (! (not (not (= (lconst$ a$) (lCons$ a$b l$)))) :named a6))
(assert (! (= (lconst$ a$) (lCons$ a$b l$)) :named a7))
(assert (! (forall ((?v0 A_llist_llist$)) (! (= (lconst$a ?v0) (lCons$b ?v0 (lconst$a ?v0))) :pattern ((lconst$a ?v0)))) :named a8))
(assert (! (forall ((?v0 A_llist$)) (! (= (lconst$b ?v0) (lCons$a ?v0 (lconst$b ?v0))) :pattern ((lconst$b ?v0)))) :named a9))
(assert (! (forall ((?v0 A$)) (! (= (lconst$ ?v0) (lCons$ ?v0 (lconst$ ?v0))) :pattern ((lconst$ ?v0)))) :named a10))
(assert (! (member$a (lconst$ a$) (finlsts$ top$)) :named a11))
(assert (! (member$a l$ (finlsts$ top$)) :named a12))
(assert (! (forall ((?v0 A_llist_llist$)) (not (= (lconst$a ?v0) lNil$b))) :named a13))
(assert (! (forall ((?v0 A_llist$)) (not (= (lconst$b ?v0) lNil$a))) :named a14))
(assert (! (forall ((?v0 A$)) (not (= (lconst$ ?v0) lNil$))) :named a15))
(assert (! (forall ((?v0 A_llist$)) (= (lconst$b ?v0) (iterates$ uu$ ?v0))) :named a16))
(assert (! (forall ((?v0 A$)) (= (lconst$ ?v0) (iterates$a uua$ ?v0))) :named a17))
(assert (! (member$a l$a (finlsts$ top$)) :named a18))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (= (member$b ?v0 (finlsts$a ?v1)) (or (= ?v0 lNil$c) (exists ((?v2 A_llist_llist_llist_llist$) (?v3 A_llist_llist_llist$)) (and (= ?v0 (lCons$c ?v3 ?v2)) (and (member$b ?v2 (finlsts$a ?v1)) (member$c ?v3 ?v1))))))) :named a19))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (= (member$c ?v0 (finlsts$b ?v1)) (or (= ?v0 lNil$b) (exists ((?v2 A_llist_llist_llist$) (?v3 A_llist_llist$)) (and (= ?v0 (lCons$b ?v3 ?v2)) (and (member$c ?v2 (finlsts$b ?v1)) (member$d ?v3 ?v1))))))) :named a20))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (= (member$d ?v0 (finlsts$c ?v1)) (or (= ?v0 lNil$a) (exists ((?v2 A_llist_llist$) (?v3 A_llist$)) (and (= ?v0 (lCons$a ?v3 ?v2)) (and (member$d ?v2 (finlsts$c ?v1)) (member$a ?v3 ?v1))))))) :named a21))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (= (member$a ?v0 (finlsts$ ?v1)) (or (= ?v0 lNil$) (exists ((?v2 A_llist$) (?v3 A$)) (and (= ?v0 (lCons$ ?v3 ?v2)) (and (member$a ?v2 (finlsts$ ?v1)) (member$ ?v3 ?v1))))))) :named a22))
(assert (! (forall ((?v0 A_llist_llist_llist$)) (=> (and (=> (= ?v0 lNil$b) false) (forall ((?v1 A_llist_llist$) (?v2 A_llist_llist_llist$)) (=> (= ?v0 (lCons$b ?v1 ?v2)) false))) false)) :named a23))
(assert (! (forall ((?v0 A_llist_llist$)) (=> (and (=> (= ?v0 lNil$a) false) (forall ((?v1 A_llist$) (?v2 A_llist_llist$)) (=> (= ?v0 (lCons$a ?v1 ?v2)) false))) false)) :named a24))
(assert (! (forall ((?v0 A_llist$)) (=> (and (=> (= ?v0 lNil$) false) (forall ((?v1 A$) (?v2 A_llist$)) (=> (= ?v0 (lCons$ ?v1 ?v2)) false))) false)) :named a25))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$)) (=> (and (member$b ?v0 (finlsts$a ?v1)) (and (=> (= ?v0 lNil$c) false) (forall ((?v2 A_llist_llist_llist_llist$) (?v3 A_llist_llist_llist$)) (=> (and (= ?v0 (lCons$c ?v3 ?v2)) (and (member$b ?v2 (finlsts$a ?v1)) (member$c ?v3 ?v1))) false)))) false)) :named a26))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$c ?v0 (finlsts$b ?v1)) (and (=> (= ?v0 lNil$b) false) (forall ((?v2 A_llist_llist_llist$) (?v3 A_llist_llist$)) (=> (and (= ?v0 (lCons$b ?v3 ?v2)) (and (member$c ?v2 (finlsts$b ?v1)) (member$d ?v3 ?v1))) false)))) false)) :named a27))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$d ?v0 (finlsts$c ?v1)) (and (=> (= ?v0 lNil$a) false) (forall ((?v2 A_llist_llist$) (?v3 A_llist$)) (=> (and (= ?v0 (lCons$a ?v3 ?v2)) (and (member$d ?v2 (finlsts$c ?v1)) (member$a ?v3 ?v1))) false)))) false)) :named a28))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$a ?v0 (finlsts$ ?v1)) (and (=> (= ?v0 lNil$) false) (forall ((?v2 A_llist$) (?v3 A$)) (=> (and (= ?v0 (lCons$ ?v3 ?v2)) (and (member$a ?v2 (finlsts$ ?v1)) (member$ ?v3 ?v1))) false)))) false)) :named a29))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist_llist_bool_fun$)) (=> (and (member$b ?v0 (finlsts$a ?v1)) (and (forall ((?v3 A_llist_llist_llist_llist$)) (=> (= ?v3 lNil$c) (fun_app$b ?v2 ?v3))) (forall ((?v3 A_llist_llist_llist$) (?v4 A_llist_llist_llist_llist$)) (=> (and (member$b ?v4 (finlsts$a ?v1)) (and (fun_app$b ?v2 ?v4) (member$c ?v3 ?v1))) (fun_app$b ?v2 (lCons$c ?v3 ?v4)))))) (fun_app$b ?v2 ?v0))) :named a30))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist_llist_bool_fun$)) (=> (and (member$c ?v0 (finlsts$b ?v1)) (and (forall ((?v3 A_llist_llist_llist$)) (=> (= ?v3 lNil$b) (fun_app$c ?v2 ?v3))) (forall ((?v3 A_llist_llist$) (?v4 A_llist_llist_llist$)) (=> (and (member$c ?v4 (finlsts$b ?v1)) (and (fun_app$c ?v2 ?v4) (member$d ?v3 ?v1))) (fun_app$c ?v2 (lCons$b ?v3 ?v4)))))) (fun_app$c ?v2 ?v0))) :named a31))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist_llist_bool_fun$)) (=> (and (member$d ?v0 (finlsts$c ?v1)) (and (forall ((?v3 A_llist_llist$)) (=> (= ?v3 lNil$a) (fun_app$d ?v2 ?v3))) (forall ((?v3 A_llist$) (?v4 A_llist_llist$)) (=> (and (member$d ?v4 (finlsts$c ?v1)) (and (fun_app$d ?v2 ?v4) (member$a ?v3 ?v1))) (fun_app$d ?v2 (lCons$a ?v3 ?v4)))))) (fun_app$d ?v2 ?v0))) :named a32))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A_llist_bool_fun$)) (=> (and (member$a ?v0 (finlsts$ ?v1)) (and (forall ((?v3 A_llist$)) (=> (= ?v3 lNil$) (fun_app$e ?v2 ?v3))) (forall ((?v3 A$) (?v4 A_llist$)) (=> (and (member$a ?v4 (finlsts$ ?v1)) (and (fun_app$e ?v2 ?v4) (member$ ?v3 ?v1))) (fun_app$e ?v2 (lCons$ ?v3 ?v4)))))) (fun_app$e ?v2 ?v0))) :named a33))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$) (?v1 A_llist_llist_llist_set$) (?v2 A_llist_llist_llist$)) (=> (and (member$b ?v0 (finlsts$a ?v1)) (member$c ?v2 ?v1)) (member$b (lCons$c ?v2 ?v0) (finlsts$a ?v1)))) :named a34))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$) (?v2 A_llist_llist$)) (=> (and (member$c ?v0 (finlsts$b ?v1)) (member$d ?v2 ?v1)) (member$c (lCons$b ?v2 ?v0) (finlsts$b ?v1)))) :named a35))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$) (?v2 A_llist$)) (=> (and (member$d ?v0 (finlsts$c ?v1)) (member$a ?v2 ?v1)) (member$d (lCons$a ?v2 ?v0) (finlsts$c ?v1)))) :named a36))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$) (?v2 A$)) (=> (and (member$a ?v0 (finlsts$ ?v1)) (member$ ?v2 ?v1)) (member$a (lCons$ ?v2 ?v0) (finlsts$ ?v1)))) :named a37))
(assert (! (forall ((?v0 A_llist_llist_llist$) (?v1 A_llist_llist_set$)) (=> (and (member$c ?v0 (finlsts$b ?v1)) (not (member$c ?v0 (finlsts$b top$a)))) false)) :named a38))
(assert (! (forall ((?v0 A_llist_llist$) (?v1 A_llist_set$)) (=> (and (member$d ?v0 (finlsts$c ?v1)) (not (member$d ?v0 (finlsts$c top$b)))) false)) :named a39))
(assert (! (forall ((?v0 A_llist$) (?v1 A_set$)) (=> (and (member$a ?v0 (finlsts$ ?v1)) (not (member$a ?v0 (finlsts$ top$)))) false)) :named a40))
(check-sat)
;(get-unsat-core)
