; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 437
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort C$ 0)
(declare-sort D$ 0)
(declare-sort Nat$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort B_bool_fun$ 0)
(declare-sort C_bool_fun$ 0)
(declare-sort D_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_b_bool_fun_fun$ 0)
(declare-sort B_a_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun$ 0)
(declare-sort C_d_bool_fun_fun$ 0)
(declare-sort D_c_bool_fun_fun$ 0)
(declare-sort D_d_bool_fun_fun$ 0)
(declare-sort A_a_tllist_bool_fun$ 0)
(declare-sort A_b_tllist_bool_fun$ 0)
(declare-sort A_c_tllist_bool_fun$ 0)
(declare-sort A_d_tllist_bool_fun$ 0)
(declare-sort B_a_tllist_bool_fun$ 0)
(declare-sort B_d_tllist_bool_fun$ 0)
(declare-sort A_a_tllist_a_a_tllist_bool_fun_fun$ 0)
(declare-sort A_b_tllist_a_b_tllist_bool_fun_fun$ 0)
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0)
(declare-sort A_d_tllist_a_d_tllist_bool_fun_fun$ 0)
(declare-sort B_a_tllist_b_a_tllist_bool_fun_fun$ 0)
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0)
(declare-codatatypes () ((A_c_tllist$ (tNil$ (terminal$ C$)) (tCons$ (thd$ A$) (ttl$ A_c_tllist$)))
  (B_d_tllist$ (tNil$a (terminal$a D$)) (tCons$a (thd$a B$) (ttl$a B_d_tllist$)))
  (B_a_tllist$ (tNil$b (terminal$b A$)) (tCons$b (thd$b B$) (ttl$b B_a_tllist$)))
  (A_d_tllist$ (tNil$c (terminal$c D$)) (tCons$c (thd$c A$) (ttl$c A_d_tllist$)))
  (A_b_tllist$ (tNil$d (terminal$d B$)) (tCons$d (thd$d A$) (ttl$d A_b_tllist$)))
  (A_a_tllist$ (tNil$e (terminal$e A$)) (tCons$e (thd$e A$) (ttl$e A_a_tllist$)))))
(declare-datatypes () ((Nat_option$ (none$) (some$ (the$ Nat$)))
  (Enat$ (abs_enat$ (rep_enat$ Nat_option$)))))
(declare-codatatypes () ((B_b_tllist$ (tNil$f (terminal$f B$)) (tCons$f (thd$f B$) (ttl$f B_b_tllist$)))
  (B_c_tllist$ (tNil$g (terminal$g C$)) (tCons$g (thd$g B$) (ttl$g B_c_tllist$)))
  (D_b_tllist$ (tNil$h (terminal$h B$)) (tCons$h (thd$h D$) (ttl$h D_b_tllist$)))
  (D_d_tllist$ (tNil$i (terminal$i D$)) (tCons$i (thd$i D$) (ttl$i D_d_tllist$)))
  (D_a_tllist$ (tNil$j (terminal$j A$)) (tCons$j (thd$j D$) (ttl$j D_a_tllist$)))
  (D_c_tllist$ (tNil$k (terminal$k C$)) (tCons$k (thd$k D$) (ttl$k D_c_tllist$)))))
(declare-fun s$ () A_a_bool_fun_fun$)
(declare-fun t$ () B_b_bool_fun_fun$)
(declare-fun r1$ () A_b_bool_fun_fun$)
(declare-fun r2$ () C_d_bool_fun_fun$)
(declare-fun s$a () C_c_bool_fun_fun$)
(declare-fun t$a () D_d_bool_fun_fun$)
(declare-fun uu$ () B_b_bool_fun_fun$)
(declare-fun xs$ () A_c_tllist$)
(declare-fun ys$ () B_d_tllist$)
(declare-fun uua$ () A_a_bool_fun_fun$)
(declare-fun uub$ () B_a_tllist_b_a_tllist_bool_fun_fun$)
(declare-fun uuc$ () D_d_bool_fun_fun$)
(declare-fun uud$ () A_d_tllist_a_d_tllist_bool_fun_fun$)
(declare-fun uue$ () A_b_tllist_a_b_tllist_bool_fun_fun$)
(declare-fun uuf$ () A_a_tllist_a_a_tllist_bool_fun_fun$)
(declare-fun uug$ () C_c_bool_fun_fun$)
(declare-fun uuh$ () A_c_tllist_a_c_tllist_bool_fun_fun$)
(declare-fun uui$ () B_d_tllist_b_d_tllist_bool_fun_fun$)
(declare-fun xs$a () A_c_tllist$)
(declare-fun ys$a () B_d_tllist$)
(declare-fun transp$ (A_a_bool_fun_fun$) Bool)
(declare-fun fun_app$ (B_d_tllist_bool_fun$ B_d_tllist$) Bool)
(declare-fun tlength$ (B_a_tllist$) Enat$)
(declare-fun transp$a (C_c_bool_fun_fun$) Bool)
(declare-fun transp$b (B_b_bool_fun_fun$) Bool)
(declare-fun transp$c (D_d_bool_fun_fun$) Bool)
(declare-fun fun_app$a (B_d_tllist_b_d_tllist_bool_fun_fun$ B_d_tllist$) B_d_tllist_bool_fun$)
(declare-fun fun_app$b (B_a_tllist_bool_fun$ B_a_tllist$) Bool)
(declare-fun fun_app$c (B_a_tllist_b_a_tllist_bool_fun_fun$ B_a_tllist$) B_a_tllist_bool_fun$)
(declare-fun fun_app$d (A_d_tllist_bool_fun$ A_d_tllist$) Bool)
(declare-fun fun_app$e (A_d_tllist_a_d_tllist_bool_fun_fun$ A_d_tllist$) A_d_tllist_bool_fun$)
(declare-fun fun_app$f (A_c_tllist_bool_fun$ A_c_tllist$) Bool)
(declare-fun fun_app$g (A_c_tllist_a_c_tllist_bool_fun_fun$ A_c_tllist$) A_c_tllist_bool_fun$)
(declare-fun fun_app$h (A_b_tllist_bool_fun$ A_b_tllist$) Bool)
(declare-fun fun_app$i (A_b_tllist_a_b_tllist_bool_fun_fun$ A_b_tllist$) A_b_tllist_bool_fun$)
(declare-fun fun_app$j (A_a_tllist_bool_fun$ A_a_tllist$) Bool)
(declare-fun fun_app$k (A_a_tllist_a_a_tllist_bool_fun_fun$ A_a_tllist$) A_a_tllist_bool_fun$)
(declare-fun fun_app$l (D_bool_fun$ D$) Bool)
(declare-fun fun_app$m (D_d_bool_fun_fun$ D$) D_bool_fun$)
(declare-fun fun_app$n (C_bool_fun$ C$) Bool)
(declare-fun fun_app$o (C_c_bool_fun_fun$ C$) C_bool_fun$)
(declare-fun fun_app$p (B_bool_fun$ B$) Bool)
(declare-fun fun_app$q (B_b_bool_fun_fun$ B$) B_bool_fun$)
(declare-fun fun_app$r (A_bool_fun$ A$) Bool)
(declare-fun fun_app$s (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$t (C_d_bool_fun_fun$ C$) D_bool_fun$)
(declare-fun fun_app$u (A_b_bool_fun_fun$ A$) B_bool_fun$)
(declare-fun fun_app$v (B_a_bool_fun_fun$ B$) A_bool_fun$)
(declare-fun fun_app$w (D_c_bool_fun_fun$ D$) C_bool_fun$)
(declare-fun tlength$a (A_d_tllist$) Enat$)
(declare-fun tlength$b (A_b_tllist$) Enat$)
(declare-fun tlength$c (A_a_tllist$) Enat$)
(declare-fun tlength$d (B_d_tllist$) Enat$)
(declare-fun tlength$e (A_c_tllist$) Enat$)
(declare-fun tllist_all2$ (A_a_bool_fun_fun$ C_c_bool_fun_fun$) A_c_tllist_a_c_tllist_bool_fun_fun$)
(declare-fun tllist_all2$a (B_b_bool_fun_fun$ D_d_bool_fun_fun$) B_d_tllist_b_d_tllist_bool_fun_fun$)
(declare-fun tllist_all2$b (B_b_bool_fun_fun$ A_a_bool_fun_fun$) B_a_tllist_b_a_tllist_bool_fun_fun$)
(declare-fun tllist_all2$c (A_a_bool_fun_fun$ D_d_bool_fun_fun$) A_d_tllist_a_d_tllist_bool_fun_fun$)
(declare-fun tllist_all2$d (A_a_bool_fun_fun$ B_b_bool_fun_fun$) A_b_tllist_a_b_tllist_bool_fun_fun$)
(declare-fun tllist_all2$e (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A_a_tllist_a_a_tllist_bool_fun_fun$)
(declare-fun tllist_all2$f (B_a_bool_fun_fun$ D_c_bool_fun_fun$ B_d_tllist$ A_c_tllist$) Bool)
(declare-fun tllist_all2$g (A_b_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_d_tllist$) Bool)
(declare-fun tllist_all2$h (B_b_bool_fun_fun$ B_b_bool_fun_fun$ B_b_tllist$ B_b_tllist$) Bool)
(declare-fun tllist_all2$i (B_b_bool_fun_fun$ C_c_bool_fun_fun$ B_c_tllist$ B_c_tllist$) Bool)
(declare-fun tllist_all2$j (D_d_bool_fun_fun$ B_b_bool_fun_fun$ D_b_tllist$ D_b_tllist$) Bool)
(declare-fun tllist_all2$k (D_d_bool_fun_fun$ D_d_bool_fun_fun$ D_d_tllist$ D_d_tllist$) Bool)
(declare-fun tllist_all2$l (D_d_bool_fun_fun$ A_a_bool_fun_fun$ D_a_tllist$ D_a_tllist$) Bool)
(declare-fun tllist_all2$m (D_d_bool_fun_fun$ C_c_bool_fun_fun$ D_c_tllist$ D_c_tllist$) Bool)
(assert (! (forall ((?v0 B_d_tllist$) (?v1 B_d_tllist$)) (! (= (fun_app$ (fun_app$a uui$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uui$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 B_a_tllist$) (?v1 B_a_tllist$)) (! (= (fun_app$b (fun_app$c uub$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$b (fun_app$c uub$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 A_d_tllist$) (?v1 A_d_tllist$)) (! (= (fun_app$d (fun_app$e uud$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$d (fun_app$e uud$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 A_c_tllist$) (?v1 A_c_tllist$)) (! (= (fun_app$f (fun_app$g uuh$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$f (fun_app$g uuh$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 A_b_tllist$) (?v1 A_b_tllist$)) (! (= (fun_app$h (fun_app$i uue$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$h (fun_app$i uue$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 A_a_tllist$) (?v1 A_a_tllist$)) (! (= (fun_app$j (fun_app$k uuf$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$j (fun_app$k uuf$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 D$) (?v1 D$)) (! (= (fun_app$l (fun_app$m uuc$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$l (fun_app$m uuc$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 C$) (?v1 C$)) (! (= (fun_app$n (fun_app$o uug$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$n (fun_app$o uug$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 B$) (?v1 B$)) (! (= (fun_app$p (fun_app$q uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$p (fun_app$q uu$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$r (fun_app$s uua$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$r (fun_app$s uua$ ?v0) ?v1)))) :named a9))
(assert (! (not (= (fun_app$f (fun_app$g (tllist_all2$ s$ s$a) xs$) xs$a) (fun_app$ (fun_app$a (tllist_all2$a t$ t$a) ys$) ys$a))) :named a10))
(assert (! (forall ((?v0 C$) (?v1 D$)) (=> (fun_app$l (fun_app$t r2$ ?v0) ?v1) (forall ((?v2 C$) (?v3 D$)) (=> (fun_app$l (fun_app$t r2$ ?v2) ?v3) (= (fun_app$n (fun_app$o s$a ?v0) ?v2) (fun_app$l (fun_app$m t$a ?v1) ?v3)))))) :named a11))
(assert (! (forall ((?v0 A$) (?v1 B$)) (=> (fun_app$p (fun_app$u r1$ ?v0) ?v1) (forall ((?v2 A$) (?v3 B$)) (=> (fun_app$p (fun_app$u r1$ ?v2) ?v3) (= (fun_app$r (fun_app$s s$ ?v0) ?v2) (fun_app$p (fun_app$q t$ ?v1) ?v3)))))) :named a12))
(assert (! (= (tllist_all2$b uu$ uua$) uub$) :named a13))
(assert (! (= (tllist_all2$c uua$ uuc$) uud$) :named a14))
(assert (! (= (tllist_all2$d uua$ uu$) uue$) :named a15))
(assert (! (= (tllist_all2$e uua$ uua$) uuf$) :named a16))
(assert (! (= (tllist_all2$ uua$ uug$) uuh$) :named a17))
(assert (! (= (tllist_all2$a uu$ uuc$) uui$) :named a18))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 B_a_tllist$) (?v3 B_a_tllist$) (?v4 B_b_bool_fun_fun$) (?v5 A_a_bool_fun_fun$)) (=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v2) ?v3) (and (forall ((?v6 B$) (?v7 B$)) (=> (fun_app$p (fun_app$q ?v0 ?v6) ?v7) (fun_app$p (fun_app$q ?v4 ?v6) ?v7))) (forall ((?v6 A$) (?v7 A$)) (=> (fun_app$r (fun_app$s ?v1 ?v6) ?v7) (fun_app$r (fun_app$s ?v5 ?v6) ?v7))))) (fun_app$b (fun_app$c (tllist_all2$b ?v4 ?v5) ?v2) ?v3))) :named a19))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 A_c_tllist$) (?v4 B_a_bool_fun_fun$) (?v5 D_c_bool_fun_fun$)) (=> (and (tllist_all2$f ?v0 ?v1 ?v2 ?v3) (and (forall ((?v6 B$) (?v7 A$)) (=> (fun_app$r (fun_app$v ?v0 ?v6) ?v7) (fun_app$r (fun_app$v ?v4 ?v6) ?v7))) (forall ((?v6 D$) (?v7 C$)) (=> (fun_app$n (fun_app$w ?v1 ?v6) ?v7) (fun_app$n (fun_app$w ?v5 ?v6) ?v7))))) (tllist_all2$f ?v4 ?v5 ?v2 ?v3))) :named a20))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 A_d_tllist$) (?v3 A_d_tllist$) (?v4 A_a_bool_fun_fun$) (?v5 D_d_bool_fun_fun$)) (=> (and (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) ?v2) ?v3) (and (forall ((?v6 A$) (?v7 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v6) ?v7) (fun_app$r (fun_app$s ?v4 ?v6) ?v7))) (forall ((?v6 D$) (?v7 D$)) (=> (fun_app$l (fun_app$m ?v1 ?v6) ?v7) (fun_app$l (fun_app$m ?v5 ?v6) ?v7))))) (fun_app$d (fun_app$e (tllist_all2$c ?v4 ?v5) ?v2) ?v3))) :named a21))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 A_b_tllist$) (?v3 A_b_tllist$) (?v4 A_a_bool_fun_fun$) (?v5 B_b_bool_fun_fun$)) (=> (and (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v2) ?v3) (and (forall ((?v6 A$) (?v7 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v6) ?v7) (fun_app$r (fun_app$s ?v4 ?v6) ?v7))) (forall ((?v6 B$) (?v7 B$)) (=> (fun_app$p (fun_app$q ?v1 ?v6) ?v7) (fun_app$p (fun_app$q ?v5 ?v6) ?v7))))) (fun_app$h (fun_app$i (tllist_all2$d ?v4 ?v5) ?v2) ?v3))) :named a22))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A_a_tllist$) (?v3 A_a_tllist$) (?v4 A_a_bool_fun_fun$) (?v5 A_a_bool_fun_fun$)) (=> (and (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) ?v2) ?v3) (and (forall ((?v6 A$) (?v7 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v6) ?v7) (fun_app$r (fun_app$s ?v4 ?v6) ?v7))) (forall ((?v6 A$) (?v7 A$)) (=> (fun_app$r (fun_app$s ?v1 ?v6) ?v7) (fun_app$r (fun_app$s ?v5 ?v6) ?v7))))) (fun_app$j (fun_app$k (tllist_all2$e ?v4 ?v5) ?v2) ?v3))) :named a23))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 A_c_tllist$) (?v4 A_a_bool_fun_fun$) (?v5 C_c_bool_fun_fun$)) (=> (and (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v2) ?v3) (and (forall ((?v6 A$) (?v7 A$)) (=> (fun_app$r (fun_app$s ?v0 ?v6) ?v7) (fun_app$r (fun_app$s ?v4 ?v6) ?v7))) (forall ((?v6 C$) (?v7 C$)) (=> (fun_app$n (fun_app$o ?v1 ?v6) ?v7) (fun_app$n (fun_app$o ?v5 ?v6) ?v7))))) (fun_app$f (fun_app$g (tllist_all2$ ?v4 ?v5) ?v2) ?v3))) :named a24))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 B_d_tllist$) (?v4 B_b_bool_fun_fun$) (?v5 D_d_bool_fun_fun$)) (=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v2) ?v3) (and (forall ((?v6 B$) (?v7 B$)) (=> (fun_app$p (fun_app$q ?v0 ?v6) ?v7) (fun_app$p (fun_app$q ?v4 ?v6) ?v7))) (forall ((?v6 D$) (?v7 D$)) (=> (fun_app$l (fun_app$m ?v1 ?v6) ?v7) (fun_app$l (fun_app$m ?v5 ?v6) ?v7))))) (fun_app$ (fun_app$a (tllist_all2$a ?v4 ?v5) ?v2) ?v3))) :named a25))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 B_d_tllist$) (?v4 A_b_bool_fun_fun$) (?v5 C_d_bool_fun_fun$)) (=> (and (tllist_all2$g ?v0 ?v1 ?v2 ?v3) (and (forall ((?v6 A$) (?v7 B$)) (=> (fun_app$p (fun_app$u ?v0 ?v6) ?v7) (fun_app$p (fun_app$u ?v4 ?v6) ?v7))) (forall ((?v6 C$) (?v7 D$)) (=> (fun_app$l (fun_app$t ?v1 ?v6) ?v7) (fun_app$l (fun_app$t ?v5 ?v6) ?v7))))) (tllist_all2$g ?v4 ?v5 ?v2 ?v3))) :named a26))
(assert (! (tllist_all2$g r1$ r2$ xs$ ys$) :named a27))
(assert (! (tllist_all2$g r1$ r2$ xs$a ys$a) :named a28))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 B_a_tllist$) (?v3 B_a_tllist$)) (=> (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v2) ?v3) (= (tlength$ ?v2) (tlength$ ?v3)))) :named a29))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 A_d_tllist$) (?v3 A_d_tllist$)) (=> (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) ?v2) ?v3) (= (tlength$a ?v2) (tlength$a ?v3)))) :named a30))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 A_b_tllist$) (?v3 A_b_tllist$)) (=> (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v2) ?v3) (= (tlength$b ?v2) (tlength$b ?v3)))) :named a31))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A_a_tllist$) (?v3 A_a_tllist$)) (=> (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) ?v2) ?v3) (= (tlength$c ?v2) (tlength$c ?v3)))) :named a32))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 A_c_tllist$)) (=> (tllist_all2$f ?v0 ?v1 ?v2 ?v3) (= (tlength$d ?v2) (tlength$e ?v3)))) :named a33))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 A_c_tllist$)) (=> (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v2) ?v3) (= (tlength$e ?v2) (tlength$e ?v3)))) :named a34))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 B_d_tllist$)) (=> (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v2) ?v3) (= (tlength$d ?v2) (tlength$d ?v3)))) :named a35))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 B_d_tllist$)) (=> (tllist_all2$g ?v0 ?v1 ?v2 ?v3) (= (tlength$e ?v2) (tlength$d ?v3)))) :named a36))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 A_c_tllist$) (?v4 A_c_tllist$)) (=> (and (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v2) ?v3) (and (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v3) ?v4) (and (transp$ ?v0) (transp$a ?v1)))) (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v2) ?v4))) :named a37))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 B_d_tllist$) (?v4 B_d_tllist$)) (=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v2) ?v3) (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v3) ?v4) (and (transp$b ?v0) (transp$c ?v1)))) (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v2) ?v4))) :named a38))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 B_b_tllist$) (?v3 B_b_tllist$) (?v4 B_b_tllist$)) (=> (and (tllist_all2$h ?v0 ?v1 ?v2 ?v3) (and (tllist_all2$h ?v0 ?v1 ?v3 ?v4) (and (transp$b ?v0) (transp$b ?v1)))) (tllist_all2$h ?v0 ?v1 ?v2 ?v4))) :named a39))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 B_a_tllist$) (?v3 B_a_tllist$) (?v4 B_a_tllist$)) (=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v2) ?v3) (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v3) ?v4) (and (transp$b ?v0) (transp$ ?v1)))) (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v2) ?v4))) :named a40))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 B_c_tllist$) (?v3 B_c_tllist$) (?v4 B_c_tllist$)) (=> (and (tllist_all2$i ?v0 ?v1 ?v2 ?v3) (and (tllist_all2$i ?v0 ?v1 ?v3 ?v4) (and (transp$b ?v0) (transp$a ?v1)))) (tllist_all2$i ?v0 ?v1 ?v2 ?v4))) :named a41))
(assert (! (forall ((?v0 D_d_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 D_b_tllist$) (?v3 D_b_tllist$) (?v4 D_b_tllist$)) (=> (and (tllist_all2$j ?v0 ?v1 ?v2 ?v3) (and (tllist_all2$j ?v0 ?v1 ?v3 ?v4) (and (transp$c ?v0) (transp$b ?v1)))) (tllist_all2$j ?v0 ?v1 ?v2 ?v4))) :named a42))
(assert (! (forall ((?v0 D_d_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 D_d_tllist$) (?v3 D_d_tllist$) (?v4 D_d_tllist$)) (=> (and (tllist_all2$k ?v0 ?v1 ?v2 ?v3) (and (tllist_all2$k ?v0 ?v1 ?v3 ?v4) (and (transp$c ?v0) (transp$c ?v1)))) (tllist_all2$k ?v0 ?v1 ?v2 ?v4))) :named a43))
(assert (! (forall ((?v0 D_d_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 D_a_tllist$) (?v3 D_a_tllist$) (?v4 D_a_tllist$)) (=> (and (tllist_all2$l ?v0 ?v1 ?v2 ?v3) (and (tllist_all2$l ?v0 ?v1 ?v3 ?v4) (and (transp$c ?v0) (transp$ ?v1)))) (tllist_all2$l ?v0 ?v1 ?v2 ?v4))) :named a44))
(assert (! (forall ((?v0 D_d_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 D_c_tllist$) (?v3 D_c_tllist$) (?v4 D_c_tllist$)) (=> (and (tllist_all2$m ?v0 ?v1 ?v2 ?v3) (and (tllist_all2$m ?v0 ?v1 ?v3 ?v4) (and (transp$c ?v0) (transp$a ?v1)))) (tllist_all2$m ?v0 ?v1 ?v2 ?v4))) :named a45))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 A_b_tllist$) (?v3 A_b_tllist$) (?v4 A_b_tllist$)) (=> (and (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v2) ?v3) (and (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v3) ?v4) (and (transp$ ?v0) (transp$b ?v1)))) (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v2) ?v4))) :named a46))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A$) (?v3 A$)) (! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) (tNil$b ?v2)) (tNil$b ?v3)) (fun_app$r (fun_app$s ?v1 ?v2) ?v3)) :pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) (tNil$b ?v2)) (tNil$b ?v3))))) :named a47))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 D$) (?v3 D$)) (! (= (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) (tNil$c ?v2)) (tNil$c ?v3)) (fun_app$l (fun_app$m ?v1 ?v2) ?v3)) :pattern ((fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) (tNil$c ?v2)) (tNil$c ?v3))))) :named a48))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 B$) (?v3 B$)) (! (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) (tNil$d ?v2)) (tNil$d ?v3)) (fun_app$p (fun_app$q ?v1 ?v2) ?v3)) :pattern ((fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) (tNil$d ?v2)) (tNil$d ?v3))))) :named a49))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A$) (?v3 A$)) (! (= (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) (tNil$e ?v2)) (tNil$e ?v3)) (fun_app$r (fun_app$s ?v1 ?v2) ?v3)) :pattern ((fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) (tNil$e ?v2)) (tNil$e ?v3))))) :named a50))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 D$) (?v3 C$)) (! (= (tllist_all2$f ?v0 ?v1 (tNil$a ?v2) (tNil$ ?v3)) (fun_app$n (fun_app$w ?v1 ?v2) ?v3)) :pattern ((tllist_all2$f ?v0 ?v1 (tNil$a ?v2) (tNil$ ?v3))))) :named a51))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 C$) (?v3 C$)) (! (= (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) (tNil$ ?v2)) (tNil$ ?v3)) (fun_app$n (fun_app$o ?v1 ?v2) ?v3)) :pattern ((fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) (tNil$ ?v2)) (tNil$ ?v3))))) :named a52))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 D$) (?v3 D$)) (! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) (tNil$a ?v2)) (tNil$a ?v3)) (fun_app$l (fun_app$m ?v1 ?v2) ?v3)) :pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) (tNil$a ?v2)) (tNil$a ?v3))))) :named a53))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 C$) (?v3 D$)) (! (= (tllist_all2$g ?v0 ?v1 (tNil$ ?v2) (tNil$a ?v3)) (fun_app$l (fun_app$t ?v1 ?v2) ?v3)) :pattern ((tllist_all2$g ?v0 ?v1 (tNil$ ?v2) (tNil$a ?v3))))) :named a54))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 B$) (?v3 B_a_tllist$) (?v4 B$) (?v5 B_a_tllist$)) (! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) (tCons$b ?v2 ?v3)) (tCons$b ?v4 ?v5)) (and (fun_app$p (fun_app$q ?v0 ?v2) ?v4) (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v3) ?v5))) :pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) (tCons$b ?v2 ?v3)) (tCons$b ?v4 ?v5))))) :named a55))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 A$) (?v3 A_d_tllist$) (?v4 A$) (?v5 A_d_tllist$)) (! (= (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) (tCons$c ?v2 ?v3)) (tCons$c ?v4 ?v5)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v4) (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) ?v3) ?v5))) :pattern ((fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) (tCons$c ?v2 ?v3)) (tCons$c ?v4 ?v5))))) :named a56))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 A$) (?v3 A_b_tllist$) (?v4 A$) (?v5 A_b_tllist$)) (! (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) (tCons$d ?v2 ?v3)) (tCons$d ?v4 ?v5)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v4) (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v3) ?v5))) :pattern ((fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) (tCons$d ?v2 ?v3)) (tCons$d ?v4 ?v5))))) :named a57))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A$) (?v3 A_a_tllist$) (?v4 A$) (?v5 A_a_tllist$)) (! (= (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) (tCons$e ?v2 ?v3)) (tCons$e ?v4 ?v5)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v4) (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) ?v3) ?v5))) :pattern ((fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) (tCons$e ?v2 ?v3)) (tCons$e ?v4 ?v5))))) :named a58))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 B$) (?v3 B_d_tllist$) (?v4 A$) (?v5 A_c_tllist$)) (! (= (tllist_all2$f ?v0 ?v1 (tCons$a ?v2 ?v3) (tCons$ ?v4 ?v5)) (and (fun_app$r (fun_app$v ?v0 ?v2) ?v4) (tllist_all2$f ?v0 ?v1 ?v3 ?v5))) :pattern ((tllist_all2$f ?v0 ?v1 (tCons$a ?v2 ?v3) (tCons$ ?v4 ?v5))))) :named a59))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A$) (?v3 A_c_tllist$) (?v4 A$) (?v5 A_c_tllist$)) (! (= (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) (tCons$ ?v2 ?v3)) (tCons$ ?v4 ?v5)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v4) (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v3) ?v5))) :pattern ((fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) (tCons$ ?v2 ?v3)) (tCons$ ?v4 ?v5))))) :named a60))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 B$) (?v3 B_d_tllist$) (?v4 B$) (?v5 B_d_tllist$)) (! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) (tCons$a ?v2 ?v3)) (tCons$a ?v4 ?v5)) (and (fun_app$p (fun_app$q ?v0 ?v2) ?v4) (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v3) ?v5))) :pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) (tCons$a ?v2 ?v3)) (tCons$a ?v4 ?v5))))) :named a61))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 A$) (?v3 A_c_tllist$) (?v4 B$) (?v5 B_d_tllist$)) (! (= (tllist_all2$g ?v0 ?v1 (tCons$ ?v2 ?v3) (tCons$a ?v4 ?v5)) (and (fun_app$p (fun_app$u ?v0 ?v2) ?v4) (tllist_all2$g ?v0 ?v1 ?v3 ?v5))) :pattern ((tllist_all2$g ?v0 ?v1 (tCons$ ?v2 ?v3) (tCons$a ?v4 ?v5))))) :named a62))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A$) (?v3 B_a_tllist$)) (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) (tNil$b ?v2)) ?v3) (exists ((?v4 A$)) (and (= ?v3 (tNil$b ?v4)) (fun_app$r (fun_app$s ?v1 ?v2) ?v4))))) :named a63))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 D$) (?v3 A_d_tllist$)) (= (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) (tNil$c ?v2)) ?v3) (exists ((?v4 D$)) (and (= ?v3 (tNil$c ?v4)) (fun_app$l (fun_app$m ?v1 ?v2) ?v4))))) :named a64))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 B$) (?v3 A_b_tllist$)) (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) (tNil$d ?v2)) ?v3) (exists ((?v4 B$)) (and (= ?v3 (tNil$d ?v4)) (fun_app$p (fun_app$q ?v1 ?v2) ?v4))))) :named a65))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A$) (?v3 A_a_tllist$)) (= (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) (tNil$e ?v2)) ?v3) (exists ((?v4 A$)) (and (= ?v3 (tNil$e ?v4)) (fun_app$r (fun_app$s ?v1 ?v2) ?v4))))) :named a66))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 D$) (?v3 A_c_tllist$)) (= (tllist_all2$f ?v0 ?v1 (tNil$a ?v2) ?v3) (exists ((?v4 C$)) (and (= ?v3 (tNil$ ?v4)) (fun_app$n (fun_app$w ?v1 ?v2) ?v4))))) :named a67))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 C$) (?v3 A_c_tllist$)) (= (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) (tNil$ ?v2)) ?v3) (exists ((?v4 C$)) (and (= ?v3 (tNil$ ?v4)) (fun_app$n (fun_app$o ?v1 ?v2) ?v4))))) :named a68))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 D$) (?v3 B_d_tllist$)) (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) (tNil$a ?v2)) ?v3) (exists ((?v4 D$)) (and (= ?v3 (tNil$a ?v4)) (fun_app$l (fun_app$m ?v1 ?v2) ?v4))))) :named a69))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 C$) (?v3 B_d_tllist$)) (= (tllist_all2$g ?v0 ?v1 (tNil$ ?v2) ?v3) (exists ((?v4 D$)) (and (= ?v3 (tNil$a ?v4)) (fun_app$l (fun_app$t ?v1 ?v2) ?v4))))) :named a70))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 B_a_tllist$) (?v3 A$)) (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v2) (tNil$b ?v3)) (exists ((?v4 A$)) (and (= ?v2 (tNil$b ?v4)) (fun_app$r (fun_app$s ?v1 ?v4) ?v3))))) :named a71))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 A_d_tllist$) (?v3 D$)) (= (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) ?v2) (tNil$c ?v3)) (exists ((?v4 D$)) (and (= ?v2 (tNil$c ?v4)) (fun_app$l (fun_app$m ?v1 ?v4) ?v3))))) :named a72))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 A_b_tllist$) (?v3 B$)) (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v2) (tNil$d ?v3)) (exists ((?v4 B$)) (and (= ?v2 (tNil$d ?v4)) (fun_app$p (fun_app$q ?v1 ?v4) ?v3))))) :named a73))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A_a_tllist$) (?v3 A$)) (= (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) ?v2) (tNil$e ?v3)) (exists ((?v4 A$)) (and (= ?v2 (tNil$e ?v4)) (fun_app$r (fun_app$s ?v1 ?v4) ?v3))))) :named a74))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 C$)) (= (tllist_all2$f ?v0 ?v1 ?v2 (tNil$ ?v3)) (exists ((?v4 D$)) (and (= ?v2 (tNil$a ?v4)) (fun_app$n (fun_app$w ?v1 ?v4) ?v3))))) :named a75))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 C$)) (= (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v2) (tNil$ ?v3)) (exists ((?v4 C$)) (and (= ?v2 (tNil$ ?v4)) (fun_app$n (fun_app$o ?v1 ?v4) ?v3))))) :named a76))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 D$)) (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v2) (tNil$a ?v3)) (exists ((?v4 D$)) (and (= ?v2 (tNil$a ?v4)) (fun_app$l (fun_app$m ?v1 ?v4) ?v3))))) :named a77))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 D$)) (= (tllist_all2$g ?v0 ?v1 ?v2 (tNil$a ?v3)) (exists ((?v4 C$)) (and (= ?v2 (tNil$ ?v4)) (fun_app$l (fun_app$t ?v1 ?v4) ?v3))))) :named a78))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 B_b_bool_fun_fun$)) (=> (fun_app$r (fun_app$s ?v0 ?v1) ?v2) (fun_app$b (fun_app$c (tllist_all2$b ?v3 ?v0) (tNil$b ?v1)) (tNil$b ?v2)))) :named a79))
(assert (! (forall ((?v0 D_d_bool_fun_fun$) (?v1 D$) (?v2 D$) (?v3 A_a_bool_fun_fun$)) (=> (fun_app$l (fun_app$m ?v0 ?v1) ?v2) (fun_app$d (fun_app$e (tllist_all2$c ?v3 ?v0) (tNil$c ?v1)) (tNil$c ?v2)))) :named a80))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B$) (?v2 B$) (?v3 A_a_bool_fun_fun$)) (=> (fun_app$p (fun_app$q ?v0 ?v1) ?v2) (fun_app$h (fun_app$i (tllist_all2$d ?v3 ?v0) (tNil$d ?v1)) (tNil$d ?v2)))) :named a81))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_a_bool_fun_fun$)) (=> (fun_app$r (fun_app$s ?v0 ?v1) ?v2) (fun_app$j (fun_app$k (tllist_all2$e ?v3 ?v0) (tNil$e ?v1)) (tNil$e ?v2)))) :named a82))
(assert (! (forall ((?v0 D_c_bool_fun_fun$) (?v1 D$) (?v2 C$) (?v3 B_a_bool_fun_fun$)) (=> (fun_app$n (fun_app$w ?v0 ?v1) ?v2) (tllist_all2$f ?v3 ?v0 (tNil$a ?v1) (tNil$ ?v2)))) :named a83))
(assert (! (forall ((?v0 C_c_bool_fun_fun$) (?v1 C$) (?v2 C$) (?v3 A_a_bool_fun_fun$)) (=> (fun_app$n (fun_app$o ?v0 ?v1) ?v2) (fun_app$f (fun_app$g (tllist_all2$ ?v3 ?v0) (tNil$ ?v1)) (tNil$ ?v2)))) :named a84))
(assert (! (forall ((?v0 D_d_bool_fun_fun$) (?v1 D$) (?v2 D$) (?v3 B_b_bool_fun_fun$)) (=> (fun_app$l (fun_app$m ?v0 ?v1) ?v2) (fun_app$ (fun_app$a (tllist_all2$a ?v3 ?v0) (tNil$a ?v1)) (tNil$a ?v2)))) :named a85))
(assert (! (forall ((?v0 C_d_bool_fun_fun$) (?v1 C$) (?v2 D$) (?v3 A_b_bool_fun_fun$)) (=> (fun_app$l (fun_app$t ?v0 ?v1) ?v2) (tllist_all2$g ?v3 ?v0 (tNil$ ?v1) (tNil$a ?v2)))) :named a86))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 B$) (?v3 B_a_tllist$) (?v4 B_a_tllist$)) (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) (tCons$b ?v2 ?v3)) ?v4) (exists ((?v5 B$) (?v6 B_a_tllist$)) (and (= ?v4 (tCons$b ?v5 ?v6)) (and (fun_app$p (fun_app$q ?v0 ?v2) ?v5) (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v3) ?v6)))))) :named a87))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 A$) (?v3 A_d_tllist$) (?v4 A_d_tllist$)) (= (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) (tCons$c ?v2 ?v3)) ?v4) (exists ((?v5 A$) (?v6 A_d_tllist$)) (and (= ?v4 (tCons$c ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v5) (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) ?v3) ?v6)))))) :named a88))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 A$) (?v3 A_b_tllist$) (?v4 A_b_tllist$)) (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) (tCons$d ?v2 ?v3)) ?v4) (exists ((?v5 A$) (?v6 A_b_tllist$)) (and (= ?v4 (tCons$d ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v5) (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v3) ?v6)))))) :named a89))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A$) (?v3 A_a_tllist$) (?v4 A_a_tllist$)) (= (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) (tCons$e ?v2 ?v3)) ?v4) (exists ((?v5 A$) (?v6 A_a_tllist$)) (and (= ?v4 (tCons$e ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v5) (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) ?v3) ?v6)))))) :named a90))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 B$) (?v3 B_d_tllist$) (?v4 A_c_tllist$)) (= (tllist_all2$f ?v0 ?v1 (tCons$a ?v2 ?v3) ?v4) (exists ((?v5 A$) (?v6 A_c_tllist$)) (and (= ?v4 (tCons$ ?v5 ?v6)) (and (fun_app$r (fun_app$v ?v0 ?v2) ?v5) (tllist_all2$f ?v0 ?v1 ?v3 ?v6)))))) :named a91))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A$) (?v3 A_c_tllist$) (?v4 A_c_tllist$)) (= (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) (tCons$ ?v2 ?v3)) ?v4) (exists ((?v5 A$) (?v6 A_c_tllist$)) (and (= ?v4 (tCons$ ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v2) ?v5) (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v3) ?v6)))))) :named a92))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 B$) (?v3 B_d_tllist$) (?v4 B_d_tllist$)) (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) (tCons$a ?v2 ?v3)) ?v4) (exists ((?v5 B$) (?v6 B_d_tllist$)) (and (= ?v4 (tCons$a ?v5 ?v6)) (and (fun_app$p (fun_app$q ?v0 ?v2) ?v5) (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v3) ?v6)))))) :named a93))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 A$) (?v3 A_c_tllist$) (?v4 B_d_tllist$)) (= (tllist_all2$g ?v0 ?v1 (tCons$ ?v2 ?v3) ?v4) (exists ((?v5 B$) (?v6 B_d_tllist$)) (and (= ?v4 (tCons$a ?v5 ?v6)) (and (fun_app$p (fun_app$u ?v0 ?v2) ?v5) (tllist_all2$g ?v0 ?v1 ?v3 ?v6)))))) :named a94))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 B_a_tllist$) (?v3 B$) (?v4 B_a_tllist$)) (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v2) (tCons$b ?v3 ?v4)) (exists ((?v5 B$) (?v6 B_a_tllist$)) (and (= ?v2 (tCons$b ?v5 ?v6)) (and (fun_app$p (fun_app$q ?v0 ?v5) ?v3) (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1) ?v6) ?v4)))))) :named a95))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 A_d_tllist$) (?v3 A$) (?v4 A_d_tllist$)) (= (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) ?v2) (tCons$c ?v3 ?v4)) (exists ((?v5 A$) (?v6 A_d_tllist$)) (and (= ?v2 (tCons$c ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v5) ?v3) (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1) ?v6) ?v4)))))) :named a96))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 A_b_tllist$) (?v3 A$) (?v4 A_b_tllist$)) (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v2) (tCons$d ?v3 ?v4)) (exists ((?v5 A$) (?v6 A_b_tllist$)) (and (= ?v2 (tCons$d ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v5) ?v3) (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1) ?v6) ?v4)))))) :named a97))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A_a_tllist$) (?v3 A$) (?v4 A_a_tllist$)) (= (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) ?v2) (tCons$e ?v3 ?v4)) (exists ((?v5 A$) (?v6 A_a_tllist$)) (and (= ?v2 (tCons$e ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v5) ?v3) (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v1) ?v6) ?v4)))))) :named a98))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 D_c_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 A$) (?v4 A_c_tllist$)) (= (tllist_all2$f ?v0 ?v1 ?v2 (tCons$ ?v3 ?v4)) (exists ((?v5 B$) (?v6 B_d_tllist$)) (and (= ?v2 (tCons$a ?v5 ?v6)) (and (fun_app$r (fun_app$v ?v0 ?v5) ?v3) (tllist_all2$f ?v0 ?v1 ?v6 ?v4)))))) :named a99))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 A$) (?v4 A_c_tllist$)) (= (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v2) (tCons$ ?v3 ?v4)) (exists ((?v5 A$) (?v6 A_c_tllist$)) (and (= ?v2 (tCons$ ?v5 ?v6)) (and (fun_app$r (fun_app$s ?v0 ?v5) ?v3) (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v1) ?v6) ?v4)))))) :named a100))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 D_d_bool_fun_fun$) (?v2 B_d_tllist$) (?v3 B$) (?v4 B_d_tllist$)) (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v2) (tCons$a ?v3 ?v4)) (exists ((?v5 B$) (?v6 B_d_tllist$)) (and (= ?v2 (tCons$a ?v5 ?v6)) (and (fun_app$p (fun_app$q ?v0 ?v5) ?v3) (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1) ?v6) ?v4)))))) :named a101))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 C_d_bool_fun_fun$) (?v2 A_c_tllist$) (?v3 B$) (?v4 B_d_tllist$)) (= (tllist_all2$g ?v0 ?v1 ?v2 (tCons$a ?v3 ?v4)) (exists ((?v5 A$) (?v6 A_c_tllist$)) (and (= ?v2 (tCons$ ?v5 ?v6)) (and (fun_app$p (fun_app$u ?v0 ?v5) ?v3) (tllist_all2$g ?v0 ?v1 ?v6 ?v4)))))) :named a102))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B$) (?v2 B$) (?v3 A_a_bool_fun_fun$) (?v4 B_a_tllist$) (?v5 B_a_tllist$)) (=> (and (fun_app$p (fun_app$q ?v0 ?v1) ?v2) (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v3) ?v4) ?v5)) (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v3) (tCons$b ?v1 ?v4)) (tCons$b ?v2 ?v5)))) :named a103))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 D_d_bool_fun_fun$) (?v4 A_d_tllist$) (?v5 A_d_tllist$)) (=> (and (fun_app$r (fun_app$s ?v0 ?v1) ?v2) (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v3) ?v4) ?v5)) (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v3) (tCons$c ?v1 ?v4)) (tCons$c ?v2 ?v5)))) :named a104))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 B_b_bool_fun_fun$) (?v4 A_b_tllist$) (?v5 A_b_tllist$)) (=> (and (fun_app$r (fun_app$s ?v0 ?v1) ?v2) (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v3) ?v4) ?v5)) (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v3) (tCons$d ?v1 ?v4)) (tCons$d ?v2 ?v5)))) :named a105))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 A_a_bool_fun_fun$) (?v4 A_a_tllist$) (?v5 A_a_tllist$)) (=> (and (fun_app$r (fun_app$s ?v0 ?v1) ?v2) (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v3) ?v4) ?v5)) (fun_app$j (fun_app$k (tllist_all2$e ?v0 ?v3) (tCons$e ?v1 ?v4)) (tCons$e ?v2 ?v5)))) :named a106))
(assert (! (forall ((?v0 B_a_bool_fun_fun$) (?v1 B$) (?v2 A$) (?v3 D_c_bool_fun_fun$) (?v4 B_d_tllist$) (?v5 A_c_tllist$)) (=> (and (fun_app$r (fun_app$v ?v0 ?v1) ?v2) (tllist_all2$f ?v0 ?v3 ?v4 ?v5)) (tllist_all2$f ?v0 ?v3 (tCons$a ?v1 ?v4) (tCons$ ?v2 ?v5)))) :named a107))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A$) (?v3 C_c_bool_fun_fun$) (?v4 A_c_tllist$) (?v5 A_c_tllist$)) (=> (and (fun_app$r (fun_app$s ?v0 ?v1) ?v2) (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v3) ?v4) ?v5)) (fun_app$f (fun_app$g (tllist_all2$ ?v0 ?v3) (tCons$ ?v1 ?v4)) (tCons$ ?v2 ?v5)))) :named a108))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B$) (?v2 B$) (?v3 D_d_bool_fun_fun$) (?v4 B_d_tllist$) (?v5 B_d_tllist$)) (=> (and (fun_app$p (fun_app$q ?v0 ?v1) ?v2) (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v3) ?v4) ?v5)) (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v3) (tCons$a ?v1 ?v4)) (tCons$a ?v2 ?v5)))) :named a109))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 A$) (?v2 B$) (?v3 C_d_bool_fun_fun$) (?v4 A_c_tllist$) (?v5 B_d_tllist$)) (=> (and (fun_app$p (fun_app$u ?v0 ?v1) ?v2) (tllist_all2$g ?v0 ?v3 ?v4 ?v5)) (tllist_all2$g ?v0 ?v3 (tCons$ ?v1 ?v4) (tCons$a ?v2 ?v5)))) :named a110))
(assert (! (forall ((?v0 A$) (?v1 A_c_tllist$) (?v2 A$) (?v3 A_c_tllist$)) (= (= (tCons$ ?v0 ?v1) (tCons$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a111))
(assert (! (forall ((?v0 B$) (?v1 B_d_tllist$) (?v2 B$) (?v3 B_d_tllist$)) (= (= (tCons$a ?v0 ?v1) (tCons$a ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a112))
(check-sat)
;(get-unsat-core)
