; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 152
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort C$ 0)
(declare-sort D$ 0)
(declare-sort E$ 0)
(declare-sort F$ 0)
(declare-sort B_set$ 0)
(declare-sort E_set$ 0)
(declare-sort B_b_fun$ 0)
(declare-sort B_e_fun$ 0)
(declare-sort B_bool_fun$ 0)
(declare-sort E_bool_fun$ 0)
(declare-sort B_b_set_fun$ 0)
(declare-sort E_e_set_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort B_set_bool_fun$ 0)
(declare-sort E_set_bool_fun$ 0)
(declare-sort A_d_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun$ 0)
(declare-sort B_b_fun_bool_fun$ 0)
(declare-sort B_e_bool_fun_fun$ 0)
(declare-sort B_e_fun_bool_fun$ 0)
(declare-sort C_f_bool_fun_fun$ 0)
(declare-sort E_b_bool_fun_fun$ 0)
(declare-sort E_e_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_set$ 0)
(declare-sort D_e_f_prod_sum_set$ 0)
(declare-sort B_bool_fun_bool_fun$ 0)
(declare-sort E_bool_fun_bool_fun$ 0)
(declare-sort E_e_set_fun_bool_fun$ 0)
(declare-sort B_b_set_fun_b_set_fun$ 0)
(declare-sort E_e_set_fun_e_set_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_bool_fun$ 0)
(declare-sort A_b_c_prod_sum_b_set_fun$ 0)
(declare-sort B_set_b_set_bool_fun_fun$ 0)
(declare-sort B_set_e_set_bool_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_e_set_fun$ 0)
(declare-sort E_set_b_set_bool_fun_fun$ 0)
(declare-sort E_set_e_set_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_bool_fun$ 0)
(declare-sort B_e_bool_fun_fun_bool_fun$ 0)
(declare-sort E_bool_fun_b_bool_fun_fun$ 0)
(declare-sort E_e_bool_fun_bool_fun_fun$ 0)
(declare-sort E_e_bool_fun_fun_bool_fun$ 0)
(declare-sort B_b_b_set_fun_b_set_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_set_bool_fun$ 0)
(declare-sort E_e_e_set_fun_e_set_fun_fun$ 0)
(declare-sort B_b_fun_b_e_fun_bool_fun_fun$ 0)
(declare-sort B_e_fun_b_e_fun_bool_fun_fun$ 0)
(declare-sort E_b_fun_e_e_fun_bool_fun_fun$ 0)
(declare-sort E_e_fun_e_e_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_b_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_e_bool_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_b_bool_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_e_bool_fun_fun$ 0)
(declare-sort E_d_e_f_prod_sum_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_bool_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_e_bool_fun_fun$ 0)
(declare-sort B_set_b_b_set_fun_b_set_fun_fun$ 0)
(declare-sort B_set_b_e_set_fun_e_set_fun_fun$ 0)
(declare-sort E_e_bool_fun_fun_e_bool_fun_fun$ 0)
(declare-sort E_set_e_b_set_fun_b_set_fun_fun$ 0)
(declare-sort E_set_e_e_set_fun_e_set_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_e_set_fun_bool_fun$ 0)
(declare-sort A_b_c_prod_sum_b_set_fun_b_set_fun$ 0)
(declare-sort B_bool_fun_b_bool_fun_bool_fun_fun$ 0)
(declare-sort B_bool_fun_e_bool_fun_bool_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_e_set_fun_e_set_fun$ 0)
(declare-sort E_bool_fun_b_bool_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_e_bool_fun_bool_fun_fun$ 0)
(declare-sort B_b_set_fun_b_b_set_fun_bool_fun_fun$ 0)
(declare-sort B_b_set_fun_b_e_set_fun_bool_fun_fun$ 0)
(declare-sort B_b_set_fun_e_b_set_fun_bool_fun_fun$ 0)
(declare-sort B_b_set_fun_e_e_set_fun_bool_fun_fun$ 0)
(declare-sort B_e_set_fun_b_e_set_fun_bool_fun_fun$ 0)
(declare-sort B_e_set_fun_e_e_set_fun_bool_fun_fun$ 0)
(declare-sort E_b_set_fun_e_b_set_fun_bool_fun_fun$ 0)
(declare-sort E_b_set_fun_e_e_set_fun_bool_fun_fun$ 0)
(declare-sort E_e_set_fun_b_b_set_fun_bool_fun_fun$ 0)
(declare-sort B_b_b_bool_fun_fun_b_bool_fun_fun_fun$ 0)
(declare-sort B_b_e_bool_fun_fun_e_bool_fun_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_b_b_fun_bool_fun_fun$ 0)
(declare-sort E_e_e_bool_fun_fun_e_bool_fun_fun_fun$ 0)
(declare-sort Bool_bool_fun_bool_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$ 0)
(declare-sort B_set_bool_fun_b_set_bool_fun_bool_fun_fun$ 0)
(declare-sort B_set_bool_fun_e_set_bool_fun_bool_fun_fun$ 0)
(declare-sort E_set_bool_fun_b_set_bool_fun_bool_fun_fun$ 0)
(declare-sort E_set_bool_fun_e_set_bool_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$ 0)
(declare-sort E_b_bool_fun_fun_e_set_b_set_bool_fun_fun_fun$ 0)
(declare-sort E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_e_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_bool_fun_b_e_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_e_fun_bool_fun_b_e_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort E_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_b_fun_bool_fun_e_e_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort E_e_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_e_fun_bool_fun_e_e_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_set_d_e_f_prod_sum_set_bool_fun_fun$ 0)
(declare-sort B_bool_fun_bool_fun_e_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_b_bool_fun_fun_bool_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_e_bool_fun_fun_bool_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_bool_fun_e_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_a_b_c_prod_sum_b_set_fun_b_set_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_d_e_f_prod_sum_e_set_fun_e_set_fun_fun$ 0)
(declare-sort Bool_b_bool_fun_fun_e_bool_fun_e_b_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_e_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_fun$ 0)
(declare-sort B_b_set_fun_b_set_fun_b_b_set_fun_b_set_fun_bool_fun_fun$ 0)
(declare-sort B_b_set_fun_b_set_fun_b_e_set_fun_e_set_fun_bool_fun_fun$ 0)
(declare-sort B_b_set_fun_b_set_fun_e_b_set_fun_b_set_fun_bool_fun_fun$ 0)
(declare-sort B_b_set_fun_b_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$ 0)
(declare-sort B_e_set_fun_e_set_fun_b_e_set_fun_e_set_fun_bool_fun_fun$ 0)
(declare-sort B_e_set_fun_e_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$ 0)
(declare-sort E_b_set_fun_b_set_fun_e_b_set_fun_b_set_fun_bool_fun_fun$ 0)
(declare-sort E_b_set_fun_b_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$ 0)
(declare-sort E_e_set_fun_e_set_fun_b_b_set_fun_b_set_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_set_a_b_c_prod_sum_b_set_fun_b_set_fun_fun$ 0)
(declare-sort D_e_f_prod_sum_set_d_e_f_prod_sum_e_set_fun_e_set_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_b_set_fun_d_e_f_prod_sum_e_set_fun_bool_fun_fun$ 0)
(declare-sort B_set_b_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_set_b_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_set_b_set_bool_fun_fun_e_set_b_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_set_b_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_set_e_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_set_e_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_set_e_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_set_b_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_set_e_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_set_e_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_f_bool_fun_fun_a_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_bool_fun_b_e_bool_fun_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_b_bool_fun_fun_e_bool_fun_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_e_bool_fun_fun_e_bool_fun_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_b_bool_fun_fun_b_e_bool_fun_fun_b_b_fun_bool_fun_fun_fun$ 0)
(declare-sort E_bool_fun_e_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_bool_fun_fun_e_e_bool_fun_fun_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_e_bool_fun_fun_b_e_bool_fun_fun_e_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_e_b_fun_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_e_e_fun_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_prod_sum_b_set_fun_b_set_fun_d_e_f_prod_sum_e_set_fun_e_set_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_e_bool_fun_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort E_bool_fun_e_bool_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_b_b_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_b_e_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-datatypes () ((B_c_prod$ (pair$ (fst$ B$) (snd$ C$)))
  (A_b_c_prod_sum$ (inl$ (projl$ A$)) (inr$ (projr$ B_c_prod$)))
  (E_f_prod$ (pair$a (fst$a E$) (snd$a F$)))
  (D_e_f_prod_sum$ (inl$a (projl$a D$)) (inr$a (projr$a E_f_prod$)))))
(declare-fun a$ () B_e_bool_fun_fun$)
(declare-fun b$ () A_d_bool_fun_fun$)
(declare-fun c$ () C_f_bool_fun_fun$)
(declare-fun uu$ () B_b_bool_fun_fun$)
(declare-fun uua$ () B_set_b_set_bool_fun_fun$)
(declare-fun uub$ () E_e_bool_fun_fun$)
(declare-fun uuc$ () E_set_e_set_bool_fun_fun$)
(declare-fun uud$ () B_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun uue$ () B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$)
(declare-fun uuf$ () B_e_fun_b_e_fun_bool_fun_fun$)
(declare-fun uug$ () Bool_bool_bool_fun_fun$)
(declare-fun uuh$ () E_bool_fun_e_bool_fun_bool_fun_fun$)
(declare-fun uui$ () B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$)
(declare-fun uuj$ () E_e_bool_fun_bool_fun_fun$)
(declare-fun uuk$ () B_b_bool_fun_bool_fun_fun$)
(declare-fun uul$ () B_b_b_set_fun_b_set_fun_fun$)
(declare-fun uum$ () E_e_e_set_fun_e_set_fun_fun$)
(declare-fun uun$ () B_b_b_bool_fun_fun_b_bool_fun_fun_fun$)
(declare-fun uuo$ () E_e_e_bool_fun_fun_e_bool_fun_fun_fun$)
(declare-fun uup$ () B_b_e_bool_fun_fun_e_bool_fun_fun_fun$)
(declare-fun uuq$ () A_b_c_prod_sum_a_b_c_prod_sum_b_set_fun_b_set_fun_fun$)
(declare-fun uur$ () D_e_f_prod_sum_d_e_f_prod_sum_e_set_fun_e_set_fun_fun$)
(declare-fun bind$ () B_set_b_b_set_fun_b_set_fun_fun$)
(declare-fun bind$a () E_set_e_e_set_fun_e_set_fun_fun$)
(declare-fun bind$b () A_b_c_prod_sum_set_a_b_c_prod_sum_b_set_fun_b_set_fun_fun$)
(declare-fun bind$c () D_e_f_prod_sum_set_d_e_f_prod_sum_e_set_fun_e_set_fun_fun$)
(declare-fun bind$d () E_set_e_b_set_fun_b_set_fun_fun$)
(declare-fun bind$e () B_set_b_e_set_fun_e_set_fun_fun$)
(declare-fun member$ (B$ B_set$) Bool)
(declare-fun fun_app$ (Bool_bool_fun$ Bool) Bool)
(declare-fun member$a (E$ E_set$) Bool)
(declare-fun member$b (A_b_c_prod_sum$ A_b_c_prod_sum_set$) Bool)
(declare-fun member$c (D_e_f_prod_sum$ D_e_f_prod_sum_set$) Bool)
(declare-fun rel_fun$ (A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$ B_set_e_set_bool_fun_fun$) A_b_c_prod_sum_b_set_fun_d_e_f_prod_sum_e_set_fun_bool_fun_fun$)
(declare-fun rel_set$ () B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$)
(declare-fun fun_app$a (Bool_bool_bool_fun_fun$ Bool) Bool_bool_fun$)
(declare-fun fun_app$b (E_set_bool_fun$ E_set$) Bool)
(declare-fun fun_app$c (E_set_e_set_bool_fun_fun$ E_set$) E_set_bool_fun$)
(declare-fun fun_app$d (B_set_bool_fun$ B_set$) Bool)
(declare-fun fun_app$e (B_set_b_set_bool_fun_fun$ B_set$) B_set_bool_fun$)
(declare-fun fun_app$f (E_bool_fun_bool_fun$ E_bool_fun$) Bool)
(declare-fun fun_app$g (E_bool_fun_e_bool_fun_bool_fun_fun$ E_bool_fun$) E_bool_fun_bool_fun$)
(declare-fun fun_app$h (B_bool_fun_bool_fun$ B_bool_fun$) Bool)
(declare-fun fun_app$i (B_bool_fun_b_bool_fun_bool_fun_fun$ B_bool_fun$) B_bool_fun_bool_fun$)
(declare-fun fun_app$j (B_e_bool_fun_fun_bool_fun$ B_e_bool_fun_fun$) Bool)
(declare-fun fun_app$k (B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun$) B_e_bool_fun_fun_bool_fun$)
(declare-fun fun_app$l (B_b_bool_fun_fun_bool_fun$ B_b_bool_fun_fun$) Bool)
(declare-fun fun_app$m (B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ B_b_bool_fun_fun$) B_b_bool_fun_fun_bool_fun$)
(declare-fun fun_app$n (B_e_fun_bool_fun$ B_e_fun$) Bool)
(declare-fun fun_app$o (B_e_fun_b_e_fun_bool_fun_fun$ B_e_fun$) B_e_fun_bool_fun$)
(declare-fun fun_app$p (E_bool_fun$ E$) Bool)
(declare-fun fun_app$q (E_e_bool_fun_fun$ E$) E_bool_fun$)
(declare-fun fun_app$r (B_bool_fun$ B$) Bool)
(declare-fun fun_app$s (B_b_bool_fun_fun$ B$) B_bool_fun$)
(declare-fun fun_app$t (D_e_f_prod_sum_e_set_fun_e_set_fun$ D_e_f_prod_sum_e_set_fun$) E_set$)
(declare-fun fun_app$u (D_e_f_prod_sum_d_e_f_prod_sum_e_set_fun_e_set_fun_fun$ D_e_f_prod_sum$) D_e_f_prod_sum_e_set_fun_e_set_fun$)
(declare-fun fun_app$v (D_e_f_prod_sum_e_set_fun$ D_e_f_prod_sum$) E_set$)
(declare-fun fun_app$w (A_b_c_prod_sum_b_set_fun_b_set_fun$ A_b_c_prod_sum_b_set_fun$) B_set$)
(declare-fun fun_app$x (A_b_c_prod_sum_a_b_c_prod_sum_b_set_fun_b_set_fun_fun$ A_b_c_prod_sum$) A_b_c_prod_sum_b_set_fun_b_set_fun$)
(declare-fun fun_app$y (A_b_c_prod_sum_b_set_fun$ A_b_c_prod_sum$) B_set$)
(declare-fun fun_app$z (E_e_bool_fun_bool_fun_fun$ E$) E_bool_fun_bool_fun$)
(declare-fun rel_fun$a (E_e_bool_fun_fun$) Bool_bool_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$b (B_e_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_bool_fun_e_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$c (B_e_bool_fun_fun$ B_set_e_set_bool_fun_fun$) B_b_set_fun_e_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$d (B_e_bool_fun_fun$ B_bool_fun_e_bool_fun_bool_fun_fun$) B_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$e (B_b_bool_fun_fun$) E_bool_fun_e_bool_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$f (B_b_bool_fun_fun$ E_e_bool_fun_fun$) B_e_fun_b_e_fun_bool_fun_fun$)
(declare-fun rel_fun$g (B_b_bool_fun_fun$ B_e_bool_fun_fun$) B_b_fun_b_e_fun_bool_fun_fun$)
(declare-fun rel_fun$h (B_b_bool_fun_fun$) E_bool_fun_b_bool_fun_fun_b_e_bool_fun_fun_b_b_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$i (B_b_bool_fun_fun$ B_bool_fun_e_bool_fun_bool_fun_fun$) B_b_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$j (B_b_bool_fun_fun$ B_bool_fun_b_bool_fun_bool_fun_fun$) B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$k (B_b_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$l (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$m (Bool_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$) Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$n (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$) Bool_bool_fun_bool_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$o (E_bool_fun_e_bool_fun_bool_fun_fun$ E_bool_fun_bool_fun_e_bool_fun_bool_fun_bool_fun_fun$) E_bool_fun_e_bool_fun_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$p (E_bool_fun_e_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) E_bool_fun_bool_fun_e_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$q (E_bool_fun_e_bool_fun_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_bool_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$r (B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun_bool_fun_b_e_bool_fun_fun_bool_fun_bool_fun_fun$) B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$s (B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_e_bool_fun_fun_bool_fun_b_e_bool_fun_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$t (Bool_e_bool_fun_fun_bool_e_bool_fun_fun_bool_fun_fun$ E_bool_fun_e_e_fun_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_bool_fun_fun$ Bool_e_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_fun$ Bool_e_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$u (Bool_bool_bool_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun$) Bool_e_bool_fun_fun_bool_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$v (E_bool_fun_e_bool_fun_bool_fun_fun$ E_e_fun_bool_fun_e_e_fun_bool_fun_bool_fun_fun$) E_bool_fun_e_e_fun_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$w (E_e_fun_e_e_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) E_e_fun_bool_fun_e_e_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$x (E_e_bool_fun_fun$ E_e_bool_fun_fun$) E_e_fun_e_e_fun_bool_fun_fun$)
(declare-fun rel_fun$y (E_e_bool_fun_fun$) Bool_e_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$z (E_bool_fun_e_bool_fun_fun_e_bool_fun_e_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun_b_e_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_bool_fun_fun$ E_bool_fun_e_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_fun$ E_bool_fun_e_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_set$a () B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$)
(declare-fun rel_set$b () E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$)
(declare-fun rel_set$c () E_b_bool_fun_fun_e_set_b_set_bool_fun_fun_fun$)
(declare-fun rel_set$d (A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) A_b_c_prod_sum_set_d_e_f_prod_sum_set_bool_fun_fun$)
(declare-fun rel_set$e (A_b_c_prod_sum_b_bool_fun_fun$ A_b_c_prod_sum_set$ B_set$) Bool)
(declare-fun rel_set$f (A_b_c_prod_sum_e_bool_fun_fun$ A_b_c_prod_sum_set$ E_set$) Bool)
(declare-fun rel_set$g (D_e_f_prod_sum_b_bool_fun_fun$ D_e_f_prod_sum_set$ B_set$) Bool)
(declare-fun rel_set$h (D_e_f_prod_sum_e_bool_fun_fun$ D_e_f_prod_sum_set$ E_set$) Bool)
(declare-fun rel_set$i (E_d_e_f_prod_sum_bool_fun_fun$ E_set$ D_e_f_prod_sum_set$) Bool)
(declare-fun fun_app$aa (E_e_set_fun_e_set_fun$ E_e_set_fun$) E_set$)
(declare-fun fun_app$ab (E_e_e_set_fun_e_set_fun_fun$ E$) E_e_set_fun_e_set_fun$)
(declare-fun fun_app$ac (E_e_set_fun$ E$) E_set$)
(declare-fun fun_app$ad (E_e_bool_fun_fun_e_bool_fun_fun$ E_e_bool_fun_fun$) E_bool_fun$)
(declare-fun fun_app$ae (E_e_e_bool_fun_fun_e_bool_fun_fun_fun$ E$) E_e_bool_fun_fun_e_bool_fun_fun$)
(declare-fun fun_app$af (B_b_bool_fun_bool_fun_fun$ B$) B_bool_fun_bool_fun$)
(declare-fun fun_app$ag (B_b_set_fun_b_set_fun$ B_b_set_fun$) B_set$)
(declare-fun fun_app$ah (B_b_b_set_fun_b_set_fun_fun$ B$) B_b_set_fun_b_set_fun$)
(declare-fun fun_app$ai (B_b_set_fun$ B$) B_set$)
(declare-fun fun_app$aj (B_e_bool_fun_fun_e_bool_fun_fun$ B_e_bool_fun_fun$) E_bool_fun$)
(declare-fun fun_app$ak (B_b_e_bool_fun_fun_e_bool_fun_fun_fun$ B$) B_e_bool_fun_fun_e_bool_fun_fun$)
(declare-fun fun_app$al (B_e_bool_fun_fun$ B$) E_bool_fun$)
(declare-fun fun_app$am (B_b_bool_fun_fun_b_bool_fun_fun$ B_b_bool_fun_fun$) B_bool_fun$)
(declare-fun fun_app$an (B_b_b_bool_fun_fun_b_bool_fun_fun_fun$ B$) B_b_bool_fun_fun_b_bool_fun_fun$)
(declare-fun fun_app$ao (D_e_f_prod_sum_e_set_fun_bool_fun$ D_e_f_prod_sum_e_set_fun$) Bool)
(declare-fun fun_app$ap (A_b_c_prod_sum_b_set_fun_d_e_f_prod_sum_e_set_fun_bool_fun_fun$ A_b_c_prod_sum_b_set_fun$) D_e_f_prod_sum_e_set_fun_bool_fun$)
(declare-fun fun_app$aq (C_f_bool_fun_fun_a_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun_fun$ C_f_bool_fun_fun$) A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$)
(declare-fun fun_app$ar (B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$ B_e_bool_fun_fun$) B_set_e_set_bool_fun_fun$)
(declare-fun fun_app$as (D_e_f_prod_sum_bool_fun$ D_e_f_prod_sum$) Bool)
(declare-fun fun_app$at (A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$ A_b_c_prod_sum$) D_e_f_prod_sum_bool_fun$)
(declare-fun fun_app$au (B_set_e_set_bool_fun_fun$ B_set$) E_set_bool_fun$)
(declare-fun fun_app$av (Bool_bool_bool_fun_fun_e_bool_fun_e_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun$) E_bool_fun_e_bool_fun_bool_fun_fun$)
(declare-fun fun_app$aw (B_bool_fun_e_bool_fun_bool_fun_fun$ B_bool_fun$) E_bool_fun_bool_fun$)
(declare-fun fun_app$ax (E_e_set_fun_bool_fun$ E_e_set_fun$) Bool)
(declare-fun fun_app$ay (B_b_set_fun_e_e_set_fun_bool_fun_fun$ B_b_set_fun$) E_e_set_fun_bool_fun$)
(declare-fun fun_app$az (E_e_bool_fun_fun_bool_fun$ E_e_bool_fun_fun$) Bool)
(declare-fun fun_app$ba (B_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ B_b_bool_fun_fun$) E_e_bool_fun_fun_bool_fun$)
(declare-fun fun_app$bb (E_bool_fun_e_bool_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun$) B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$)
(declare-fun fun_app$bc (B_e_fun$ B$) E$)
(declare-fun fun_app$bd (B_b_fun$ B$) B$)
(declare-fun fun_app$be (B_b_fun_b_e_fun_bool_fun_fun$ B_b_fun$) B_e_fun_bool_fun$)
(declare-fun fun_app$bf (E_bool_fun_b_bool_fun_fun$ E_bool_fun$) B_bool_fun$)
(declare-fun fun_app$bg (B_b_fun_bool_fun$ B_b_fun$) Bool)
(declare-fun fun_app$bh (B_e_bool_fun_fun_b_b_fun_bool_fun_fun$ B_e_bool_fun_fun$) B_b_fun_bool_fun$)
(declare-fun fun_app$bi (E_bool_fun_b_bool_fun_fun_b_e_bool_fun_fun_b_b_fun_bool_fun_fun_fun$ E_bool_fun_b_bool_fun_fun$) B_e_bool_fun_fun_b_b_fun_bool_fun_fun$)
(declare-fun fun_app$bj (B_b_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ B_b_bool_fun_fun$) B_e_bool_fun_fun_bool_fun$)
(declare-fun fun_app$bk (B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$ B_b_bool_fun_fun$) B_set_b_set_bool_fun_fun$)
(declare-fun fun_app$bl (E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$ E_e_bool_fun_fun$) E_set_e_set_bool_fun_fun$)
(declare-fun fun_app$bm (E_b_bool_fun_fun$ E$) B_bool_fun$)
(declare-fun fun_app$bn (E_set_b_set_bool_fun_fun$ E_set$) B_set_bool_fun$)
(declare-fun fun_app$bo (E_b_bool_fun_fun_e_set_b_set_bool_fun_fun_fun$ E_b_bool_fun_fun$) E_set_b_set_bool_fun_fun$)
(declare-fun fun_app$bp (D_e_f_prod_sum_set_bool_fun$ D_e_f_prod_sum_set$) Bool)
(declare-fun fun_app$bq (A_b_c_prod_sum_set_d_e_f_prod_sum_set_bool_fun_fun$ A_b_c_prod_sum_set$) D_e_f_prod_sum_set_bool_fun$)
(declare-fun fun_app$br (A_b_c_prod_sum_b_bool_fun_fun$ A_b_c_prod_sum$) B_bool_fun$)
(declare-fun fun_app$bs (A_b_c_prod_sum_e_bool_fun_fun$ A_b_c_prod_sum$) E_bool_fun$)
(declare-fun fun_app$bt (D_e_f_prod_sum_b_bool_fun_fun$ D_e_f_prod_sum$) B_bool_fun$)
(declare-fun fun_app$bu (D_e_f_prod_sum_e_bool_fun_fun$ D_e_f_prod_sum$) E_bool_fun$)
(declare-fun fun_app$bv (E_d_e_f_prod_sum_bool_fun_fun$ E$) D_e_f_prod_sum_bool_fun$)
(declare-fun rel_fun$aa (E_bool_fun_e_bool_fun_bool_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun$) E_bool_fun_e_bool_fun_fun_e_bool_fun_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ab (B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ B_e_fun_bool_fun_b_e_fun_bool_fun_bool_fun_fun$) B_e_bool_fun_fun_b_e_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ac (B_e_fun_b_e_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_e_fun_bool_fun_b_e_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ad (B_b_bool_fun_fun$) E_bool_fun_e_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$ae (Bool_b_bool_fun_fun_bool_e_bool_fun_fun_bool_fun_fun$ E_bool_fun_e_b_fun_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_bool_fun_fun$ Bool_b_bool_fun_fun_e_bool_fun_e_b_fun_bool_fun_fun_fun$ Bool_e_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$af (Bool_bool_bool_fun_fun$ B_bool_fun_e_bool_fun_bool_fun_fun$) Bool_b_bool_fun_fun_bool_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ag (E_bool_fun_e_bool_fun_bool_fun_fun$ E_b_fun_bool_fun_e_e_fun_bool_fun_bool_fun_fun$) E_bool_fun_e_b_fun_bool_fun_fun_e_bool_fun_e_e_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ah (E_b_fun_e_e_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) E_b_fun_bool_fun_e_e_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ai (E_e_bool_fun_fun$ B_e_bool_fun_fun$) E_b_fun_e_e_fun_bool_fun_fun$)
(declare-fun rel_fun$aj (E_e_bool_fun_fun$) Bool_b_bool_fun_fun_e_bool_fun_e_b_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$ak (E_bool_fun_b_bool_fun_fun_e_bool_fun_e_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun_b_b_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_bool_fun_fun$ E_bool_fun_b_bool_fun_fun_b_e_bool_fun_fun_b_b_fun_bool_fun_fun_fun$ E_bool_fun_e_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$al (E_bool_fun_e_bool_fun_bool_fun_fun$ B_bool_fun_e_bool_fun_bool_fun_fun$) E_bool_fun_b_bool_fun_fun_e_bool_fun_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$am (B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ B_b_fun_bool_fun_b_e_fun_bool_fun_bool_fun_fun$) B_e_bool_fun_fun_b_b_fun_bool_fun_fun_b_e_bool_fun_fun_b_e_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$an (B_b_fun_b_e_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_b_fun_bool_fun_b_e_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ao (B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ B_set_e_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$ B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ap (B_set_b_set_bool_fun_fun$ E_set_bool_fun_e_set_bool_fun_bool_fun_fun$) B_set_e_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$aq (E_set_e_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) E_set_bool_fun_e_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ar (B_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ B_set_b_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$ B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$ E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$as (B_set_e_set_bool_fun_fun$ B_set_bool_fun_e_set_bool_fun_bool_fun_fun$) B_set_b_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$at (B_set_e_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_set_bool_fun_e_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$au (E_e_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ E_set_e_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$ E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$ B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$av (E_b_bool_fun_fun$ E_bool_fun_b_bool_fun_bool_fun_fun$) E_e_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$aw (E_b_bool_fun_fun$ Bool_bool_bool_fun_fun$) E_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ax (E_set_b_set_bool_fun_fun$ E_set_bool_fun_b_set_bool_fun_bool_fun_fun$) E_set_e_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ay (E_set_b_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) E_set_bool_fun_b_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$az (E_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ E_set_e_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$ E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$ B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ba (E_b_bool_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun$) E_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bb (E_set_b_set_bool_fun_fun$ E_set_bool_fun_e_set_bool_fun_bool_fun_fun$) E_set_e_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bc (B_b_bool_fun_fun_e_b_bool_fun_fun_bool_fun_fun$ B_set_b_set_bool_fun_fun_e_set_b_set_bool_fun_fun_bool_fun_fun$ B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$ E_b_bool_fun_fun_e_set_b_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bd (B_e_bool_fun_fun$ B_bool_fun_b_bool_fun_bool_fun_fun$) B_b_bool_fun_fun_e_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$be (B_set_e_set_bool_fun_fun$ B_set_bool_fun_b_set_bool_fun_bool_fun_fun$) B_set_b_set_bool_fun_fun_e_set_b_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bf (B_set_b_set_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_set_bool_fun_b_set_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$bg (B_e_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ B_set_e_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$ E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bh (B_e_bool_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun$) B_e_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bi (B_set_e_set_bool_fun_fun$ E_set_bool_fun_e_set_bool_fun_bool_fun_fun$) B_set_e_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bj (B_e_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ B_set_e_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$ B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$ B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bk (B_b_bool_fun_fun$ E_bool_fun_b_bool_fun_bool_fun_fun$) B_e_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bl (B_set_b_set_bool_fun_fun$ E_set_bool_fun_b_set_bool_fun_bool_fun_fun$) B_set_e_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bm (B_b_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ B_set_b_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$ B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$ B_e_bool_fun_fun_b_set_e_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bn (B_set_b_set_bool_fun_fun$ B_set_bool_fun_e_set_bool_fun_bool_fun_fun$) B_set_b_set_bool_fun_fun_b_set_e_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bo (B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ B_set_b_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$ B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$ B_b_bool_fun_fun_b_set_b_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bp (B_set_b_set_bool_fun_fun$ B_set_bool_fun_b_set_bool_fun_bool_fun_fun$) B_set_b_set_bool_fun_fun_b_set_b_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bq (E_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ E_set_b_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$ E_b_bool_fun_fun_e_set_b_set_bool_fun_fun_fun$ E_e_bool_fun_fun_e_set_e_set_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$br (E_e_bool_fun_fun$ B_bool_fun_e_bool_fun_bool_fun_fun$) E_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bs (E_set_e_set_bool_fun_fun$ B_set_bool_fun_e_set_bool_fun_bool_fun_fun$) E_set_b_set_bool_fun_fun_e_set_e_set_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bt (E_e_bool_fun_fun$ E_bool_fun_bool_fun_e_bool_fun_bool_fun_bool_fun_fun$ E_e_bool_fun_bool_fun_fun$ E_e_bool_fun_bool_fun_fun$) Bool)
(declare-fun rel_fun$bu (B_e_bool_fun_fun$ B_bool_fun_bool_fun_e_bool_fun_bool_fun_bool_fun_fun$ B_b_bool_fun_bool_fun_fun$ E_e_bool_fun_bool_fun_fun$) Bool)
(declare-fun rel_fun$bv (B_bool_fun_e_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_bool_fun_bool_fun_e_bool_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$bw (B_e_bool_fun_fun$ B_b_set_fun_b_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$ B_b_b_set_fun_b_set_fun_fun$ E_e_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$bx (B_b_set_fun_e_e_set_fun_bool_fun_fun$ B_set_e_set_bool_fun_fun$) B_b_set_fun_b_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$by (B_e_bool_fun_fun$ B_b_bool_fun_fun_b_bool_fun_fun_e_e_bool_fun_fun_e_bool_fun_fun_bool_fun_fun$ B_b_b_bool_fun_fun_b_bool_fun_fun_fun$ E_e_e_bool_fun_fun_e_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$bz (B_b_bool_fun_fun_e_e_bool_fun_fun_bool_fun_fun$ B_bool_fun_e_bool_fun_bool_fun_fun$) B_b_bool_fun_fun_b_bool_fun_fun_e_e_bool_fun_fun_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ca (B_b_bool_fun_fun$ B_e_bool_fun_fun_e_bool_fun_fun_b_e_bool_fun_fun_e_bool_fun_fun_bool_fun_fun$ B_b_e_bool_fun_fun_e_bool_fun_fun_fun$ B_b_e_bool_fun_fun_e_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$cb (B_e_bool_fun_fun_b_e_bool_fun_fun_bool_fun_fun$ E_bool_fun_e_bool_fun_bool_fun_fun$) B_e_bool_fun_fun_e_bool_fun_fun_b_e_bool_fun_fun_e_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cc (A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$ A_b_c_prod_sum_b_set_fun_b_set_fun_d_e_f_prod_sum_e_set_fun_e_set_fun_bool_fun_fun$ A_b_c_prod_sum_a_b_c_prod_sum_b_set_fun_b_set_fun_fun$ D_e_f_prod_sum_d_e_f_prod_sum_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$cd (A_b_c_prod_sum_b_set_fun_d_e_f_prod_sum_e_set_fun_bool_fun_fun$ B_set_e_set_bool_fun_fun$) A_b_c_prod_sum_b_set_fun_b_set_fun_d_e_f_prod_sum_e_set_fun_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$ce (B_set_e_set_bool_fun_fun$ B_b_set_fun_b_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$ B_set_b_b_set_fun_b_set_fun_fun$ E_set_e_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$cf (A_b_c_prod_sum_set_d_e_f_prod_sum_set_bool_fun_fun$ A_b_c_prod_sum_b_set_fun_b_set_fun_d_e_f_prod_sum_e_set_fun_e_set_fun_bool_fun_fun$ A_b_c_prod_sum_set_a_b_c_prod_sum_b_set_fun_b_set_fun_fun$ D_e_f_prod_sum_set_d_e_f_prod_sum_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$cg (E_set_b_set_bool_fun_fun$ E_e_set_fun_e_set_fun_b_b_set_fun_b_set_fun_bool_fun_fun$ E_set_e_e_set_fun_e_set_fun_fun$ B_set_b_b_set_fun_b_set_fun_fun$) Bool)
(declare-fun rel_fun$ch (E_e_set_fun_b_b_set_fun_bool_fun_fun$ E_set_b_set_bool_fun_fun$) E_e_set_fun_e_set_fun_b_b_set_fun_b_set_fun_bool_fun_fun$)
(declare-fun rel_fun$ci (E_b_bool_fun_fun$ E_set_b_set_bool_fun_fun$) E_e_set_fun_b_b_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cj (B_set_e_set_bool_fun_fun$ B_b_set_fun_b_set_fun_e_b_set_fun_b_set_fun_bool_fun_fun$ B_set_b_b_set_fun_b_set_fun_fun$ E_set_e_b_set_fun_b_set_fun_fun$) Bool)
(declare-fun rel_fun$ck (B_b_set_fun_e_b_set_fun_bool_fun_fun$ B_set_b_set_bool_fun_fun$) B_b_set_fun_b_set_fun_e_b_set_fun_b_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cl (B_e_bool_fun_fun$ B_set_b_set_bool_fun_fun$) B_b_set_fun_e_b_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cm (B_set_e_set_bool_fun_fun$ B_e_set_fun_e_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$ B_set_b_e_set_fun_e_set_fun_fun$ E_set_e_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$cn (B_e_set_fun_e_e_set_fun_bool_fun_fun$ E_set_e_set_bool_fun_fun$) B_e_set_fun_e_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$co (B_e_bool_fun_fun$ E_set_e_set_bool_fun_fun$) B_e_set_fun_e_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cp (B_set_b_set_bool_fun_fun$ B_b_set_fun_b_set_fun_b_e_set_fun_e_set_fun_bool_fun_fun$ B_set_b_b_set_fun_b_set_fun_fun$ B_set_b_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$cq (B_b_set_fun_b_e_set_fun_bool_fun_fun$ B_set_e_set_bool_fun_fun$) B_b_set_fun_b_set_fun_b_e_set_fun_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cr (B_b_bool_fun_fun$ B_set_e_set_bool_fun_fun$) B_b_set_fun_b_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cs (B_set_b_set_bool_fun_fun$ B_b_set_fun_b_set_fun_b_b_set_fun_b_set_fun_bool_fun_fun$ B_set_b_b_set_fun_b_set_fun_fun$ B_set_b_b_set_fun_b_set_fun_fun$) Bool)
(declare-fun rel_fun$ct (B_b_set_fun_b_b_set_fun_bool_fun_fun$ B_set_b_set_bool_fun_fun$) B_b_set_fun_b_set_fun_b_b_set_fun_b_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cu (B_b_bool_fun_fun$ B_set_b_set_bool_fun_fun$) B_b_set_fun_b_b_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cv (B_set_b_set_bool_fun_fun$ B_e_set_fun_e_set_fun_b_e_set_fun_e_set_fun_bool_fun_fun$ B_set_b_e_set_fun_e_set_fun_fun$ B_set_b_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$cw (B_e_set_fun_b_e_set_fun_bool_fun_fun$ E_set_e_set_bool_fun_fun$) B_e_set_fun_e_set_fun_b_e_set_fun_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cx (B_b_bool_fun_fun$ E_set_e_set_bool_fun_fun$) B_e_set_fun_b_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$cy (E_set_e_set_bool_fun_fun$ E_b_set_fun_b_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$ E_set_e_b_set_fun_b_set_fun_fun$ E_set_e_e_set_fun_e_set_fun_fun$) Bool)
(declare-fun rel_fun$cz (E_b_set_fun_e_e_set_fun_bool_fun_fun$ B_set_e_set_bool_fun_fun$) E_b_set_fun_b_set_fun_e_e_set_fun_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$da (E_e_bool_fun_fun$ B_set_e_set_bool_fun_fun$) E_b_set_fun_e_e_set_fun_bool_fun_fun$)
(declare-fun rel_fun$db (E_set_e_set_bool_fun_fun$ E_b_set_fun_b_set_fun_e_b_set_fun_b_set_fun_bool_fun_fun$ E_set_e_b_set_fun_b_set_fun_fun$ E_set_e_b_set_fun_b_set_fun_fun$) Bool)
(declare-fun rel_fun$dc (E_b_set_fun_e_b_set_fun_bool_fun_fun$ B_set_b_set_bool_fun_fun$) E_b_set_fun_b_set_fun_e_b_set_fun_b_set_fun_bool_fun_fun$)
(declare-fun rel_fun$dd (E_e_bool_fun_fun$ B_set_b_set_bool_fun_fun$) E_b_set_fun_e_b_set_fun_bool_fun_fun$)
(declare-fun rel_pre_tllist$ (B_e_bool_fun_fun$ A_d_bool_fun_fun$) C_f_bool_fun_fun_a_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun_fun$)
(declare-fun set1_pre_tllist$ () A_b_c_prod_sum_b_set_fun$)
(declare-fun set1_pre_tllist$a () D_e_f_prod_sum_e_set_fun$)
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (! (= (fun_app$ (fun_app$a uug$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uug$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 E_set$) (?v1 E_set$)) (! (= (fun_app$b (fun_app$c uuc$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$b (fun_app$c uuc$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$)) (! (= (fun_app$d (fun_app$e uua$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$d (fun_app$e uua$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 E_bool_fun$) (?v1 E_bool_fun$)) (! (= (fun_app$f (fun_app$g uuh$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$f (fun_app$g uuh$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 B_bool_fun$) (?v1 B_bool_fun$)) (! (= (fun_app$h (fun_app$i uud$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$h (fun_app$i uud$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (! (= (fun_app$j (fun_app$k uui$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$j (fun_app$k uui$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_b_bool_fun_fun$)) (! (= (fun_app$l (fun_app$m uue$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$l (fun_app$m uue$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 B_e_fun$) (?v1 B_e_fun$)) (! (= (fun_app$n (fun_app$o uuf$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$n (fun_app$o uuf$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 E$) (?v1 E$)) (! (= (fun_app$p (fun_app$q uub$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$p (fun_app$q uub$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 B$) (?v1 B$)) (! (= (fun_app$r (fun_app$s uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$r (fun_app$s uu$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 D_e_f_prod_sum$) (?v1 D_e_f_prod_sum_e_set_fun$)) (! (= (fun_app$t (fun_app$u uur$ ?v0) ?v1) (fun_app$v ?v1 ?v0)) :pattern ((fun_app$t (fun_app$u uur$ ?v0) ?v1)))) :named a10))
(assert (! (forall ((?v0 A_b_c_prod_sum$) (?v1 A_b_c_prod_sum_b_set_fun$)) (! (= (fun_app$w (fun_app$x uuq$ ?v0) ?v1) (fun_app$y ?v1 ?v0)) :pattern ((fun_app$w (fun_app$x uuq$ ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 E$) (?v1 E_bool_fun$)) (! (= (fun_app$f (fun_app$z uuj$ ?v0) ?v1) (fun_app$p ?v1 ?v0)) :pattern ((fun_app$f (fun_app$z uuj$ ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 E$) (?v1 E_e_set_fun$)) (! (= (fun_app$aa (fun_app$ab uum$ ?v0) ?v1) (fun_app$ac ?v1 ?v0)) :pattern ((fun_app$aa (fun_app$ab uum$ ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 E$) (?v1 E_e_bool_fun_fun$)) (! (= (fun_app$ad (fun_app$ae uuo$ ?v0) ?v1) (fun_app$q ?v1 ?v0)) :pattern ((fun_app$ad (fun_app$ae uuo$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 B$) (?v1 B_bool_fun$)) (! (= (fun_app$h (fun_app$af uuk$ ?v0) ?v1) (fun_app$r ?v1 ?v0)) :pattern ((fun_app$h (fun_app$af uuk$ ?v0) ?v1)))) :named a15))
(assert (! (forall ((?v0 B$) (?v1 B_b_set_fun$)) (! (= (fun_app$ag (fun_app$ah uul$ ?v0) ?v1) (fun_app$ai ?v1 ?v0)) :pattern ((fun_app$ag (fun_app$ah uul$ ?v0) ?v1)))) :named a16))
(assert (! (forall ((?v0 B$) (?v1 B_e_bool_fun_fun$)) (! (= (fun_app$aj (fun_app$ak uup$ ?v0) ?v1) (fun_app$al ?v1 ?v0)) :pattern ((fun_app$aj (fun_app$ak uup$ ?v0) ?v1)))) :named a17))
(assert (! (forall ((?v0 B$) (?v1 B_b_bool_fun_fun$)) (! (= (fun_app$am (fun_app$an uun$ ?v0) ?v1) (fun_app$s ?v1 ?v0)) :pattern ((fun_app$am (fun_app$an uun$ ?v0) ?v1)))) :named a18))
(assert (! (not (fun_app$ao (fun_app$ap (rel_fun$ (fun_app$aq (rel_pre_tllist$ a$ b$) c$) (fun_app$ar rel_set$ a$)) set1_pre_tllist$) set1_pre_tllist$a)) :named a19))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 A_b_c_prod_sum_b_set_fun$) (?v3 D_e_f_prod_sum_e_set_fun$)) (=> (forall ((?v4 A_b_c_prod_sum$) (?v5 D_e_f_prod_sum$)) (=> (fun_app$as (fun_app$at ?v0 ?v4) ?v5) (fun_app$b (fun_app$au ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)))) (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3))) :named a20))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 E_bool_fun$) (?v3 E_bool_fun$)) (=> (forall ((?v4 E$) (?v5 E$)) (=> (fun_app$p (fun_app$q ?v0 ?v4) ?v5) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) (fun_app$f (fun_app$g (fun_app$av (rel_fun$a ?v0) ?v1) ?v2) ?v3))) :named a21))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 B_bool_fun$) (?v3 E_bool_fun$)) (=> (forall ((?v4 B$) (?v5 E$)) (=> (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) (fun_app$f (fun_app$aw (rel_fun$b ?v0 ?v1) ?v2) ?v3))) :named a22))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 B_b_set_fun$) (?v3 E_e_set_fun$)) (=> (forall ((?v4 B$) (?v5 E$)) (=> (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (fun_app$b (fun_app$au ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)))) (fun_app$ax (fun_app$ay (rel_fun$c ?v0 ?v1) ?v2) ?v3))) :named a23))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 E_e_bool_fun_fun$)) (=> (forall ((?v4 B$) (?v5 E$)) (=> (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (fun_app$f (fun_app$aw ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)))) (fun_app$az (fun_app$ba (rel_fun$d ?v0 ?v1) ?v2) ?v3))) :named a24))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_e_bool_fun_fun$)) (=> (forall ((?v4 B$) (?v5 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) (fun_app$j (fun_app$k (fun_app$bb (rel_fun$e ?v0) ?v1) ?v2) ?v3))) :named a25))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_e_bool_fun_fun$) (?v2 B_e_fun$) (?v3 B_e_fun$)) (=> (forall ((?v4 B$) (?v5 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$p (fun_app$q ?v1 (fun_app$bc ?v2 ?v4)) (fun_app$bc ?v3 ?v5)))) (fun_app$n (fun_app$o (rel_fun$f ?v0 ?v1) ?v2) ?v3))) :named a26))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_e_bool_fun_fun$) (?v2 B_b_fun$) (?v3 B_e_fun$)) (=> (forall ((?v4 B$) (?v5 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$p (fun_app$al ?v1 (fun_app$bd ?v2 ?v4)) (fun_app$bc ?v3 ?v5)))) (fun_app$n (fun_app$be (rel_fun$g ?v0 ?v1) ?v2) ?v3))) :named a27))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_b_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_b_fun$)) (=> (forall ((?v4 B$) (?v5 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$r (fun_app$bf ?v1 (fun_app$al ?v2 ?v4)) (fun_app$bd ?v3 ?v5)))) (fun_app$bg (fun_app$bh (fun_app$bi (rel_fun$h ?v0) ?v1) ?v2) ?v3))) :named a28))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 B_e_bool_fun_fun$)) (=> (forall ((?v4 B$) (?v5 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (fun_app$f (fun_app$aw ?v1 (fun_app$s ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) (fun_app$j (fun_app$bj (rel_fun$i ?v0 ?v1) ?v2) ?v3))) :named a29))
(assert (! (= (fun_app$bk rel_set$a uu$) uua$) :named a30))
(assert (! (= (fun_app$bl rel_set$b uub$) uuc$) :named a31))
(assert (! (forall ((?v0 B_set$) (?v1 E_set$) (?v2 B_e_bool_fun_fun$)) (=> (and (forall ((?v3 B$)) (=> (member$ ?v3 ?v0) (exists ((?v4 E$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$al ?v2 ?v3) ?v4))))) (forall ((?v3 E$)) (=> (member$a ?v3 ?v1) (exists ((?v4 B$)) (and (member$ ?v4 ?v0) (fun_app$p (fun_app$al ?v2 ?v4) ?v3)))))) (fun_app$b (fun_app$au (fun_app$ar rel_set$ ?v2) ?v0) ?v1))) :named a32))
(assert (! (forall ((?v0 E_set$) (?v1 B_set$) (?v2 E_b_bool_fun_fun$)) (=> (and (forall ((?v3 E$)) (=> (member$a ?v3 ?v0) (exists ((?v4 B$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$bm ?v2 ?v3) ?v4))))) (forall ((?v3 B$)) (=> (member$ ?v3 ?v1) (exists ((?v4 E$)) (and (member$a ?v4 ?v0) (fun_app$r (fun_app$bm ?v2 ?v4) ?v3)))))) (fun_app$d (fun_app$bn (fun_app$bo rel_set$c ?v2) ?v0) ?v1))) :named a33))
(assert (! (forall ((?v0 B_set$) (?v1 B_set$) (?v2 B_b_bool_fun_fun$)) (=> (and (forall ((?v3 B$)) (=> (member$ ?v3 ?v0) (exists ((?v4 B$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$s ?v2 ?v3) ?v4))))) (forall ((?v3 B$)) (=> (member$ ?v3 ?v1) (exists ((?v4 B$)) (and (member$ ?v4 ?v0) (fun_app$r (fun_app$s ?v2 ?v4) ?v3)))))) (fun_app$d (fun_app$e (fun_app$bk rel_set$a ?v2) ?v0) ?v1))) :named a34))
(assert (! (forall ((?v0 E_set$) (?v1 E_set$) (?v2 E_e_bool_fun_fun$)) (=> (and (forall ((?v3 E$)) (=> (member$a ?v3 ?v0) (exists ((?v4 E$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$q ?v2 ?v3) ?v4))))) (forall ((?v3 E$)) (=> (member$a ?v3 ?v1) (exists ((?v4 E$)) (and (member$a ?v4 ?v0) (fun_app$p (fun_app$q ?v2 ?v4) ?v3)))))) (fun_app$b (fun_app$c (fun_app$bl rel_set$b ?v2) ?v0) ?v1))) :named a35))
(assert (! (forall ((?v0 A_b_c_prod_sum_set$) (?v1 D_e_f_prod_sum_set$) (?v2 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$)) (=> (and (forall ((?v3 A_b_c_prod_sum$)) (=> (member$b ?v3 ?v0) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$as (fun_app$at ?v2 ?v3) ?v4))))) (forall ((?v3 D_e_f_prod_sum$)) (=> (member$c ?v3 ?v1) (exists ((?v4 A_b_c_prod_sum$)) (and (member$b ?v4 ?v0) (fun_app$as (fun_app$at ?v2 ?v4) ?v3)))))) (fun_app$bp (fun_app$bq (rel_set$d ?v2) ?v0) ?v1))) :named a36))
(assert (! (forall ((?v0 A_b_c_prod_sum_set$) (?v1 B_set$) (?v2 A_b_c_prod_sum_b_bool_fun_fun$)) (=> (and (forall ((?v3 A_b_c_prod_sum$)) (=> (member$b ?v3 ?v0) (exists ((?v4 B$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$br ?v2 ?v3) ?v4))))) (forall ((?v3 B$)) (=> (member$ ?v3 ?v1) (exists ((?v4 A_b_c_prod_sum$)) (and (member$b ?v4 ?v0) (fun_app$r (fun_app$br ?v2 ?v4) ?v3)))))) (rel_set$e ?v2 ?v0 ?v1))) :named a37))
(assert (! (forall ((?v0 A_b_c_prod_sum_set$) (?v1 E_set$) (?v2 A_b_c_prod_sum_e_bool_fun_fun$)) (=> (and (forall ((?v3 A_b_c_prod_sum$)) (=> (member$b ?v3 ?v0) (exists ((?v4 E$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$bs ?v2 ?v3) ?v4))))) (forall ((?v3 E$)) (=> (member$a ?v3 ?v1) (exists ((?v4 A_b_c_prod_sum$)) (and (member$b ?v4 ?v0) (fun_app$p (fun_app$bs ?v2 ?v4) ?v3)))))) (rel_set$f ?v2 ?v0 ?v1))) :named a38))
(assert (! (forall ((?v0 D_e_f_prod_sum_set$) (?v1 B_set$) (?v2 D_e_f_prod_sum_b_bool_fun_fun$)) (=> (and (forall ((?v3 D_e_f_prod_sum$)) (=> (member$c ?v3 ?v0) (exists ((?v4 B$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$bt ?v2 ?v3) ?v4))))) (forall ((?v3 B$)) (=> (member$ ?v3 ?v1) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v0) (fun_app$r (fun_app$bt ?v2 ?v4) ?v3)))))) (rel_set$g ?v2 ?v0 ?v1))) :named a39))
(assert (! (forall ((?v0 D_e_f_prod_sum_set$) (?v1 E_set$) (?v2 D_e_f_prod_sum_e_bool_fun_fun$)) (=> (and (forall ((?v3 D_e_f_prod_sum$)) (=> (member$c ?v3 ?v0) (exists ((?v4 E$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$bu ?v2 ?v3) ?v4))))) (forall ((?v3 E$)) (=> (member$a ?v3 ?v1) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v0) (fun_app$p (fun_app$bu ?v2 ?v4) ?v3)))))) (rel_set$h ?v2 ?v0 ?v1))) :named a40))
(assert (! (forall ((?v0 E_set$) (?v1 D_e_f_prod_sum_set$) (?v2 E_d_e_f_prod_sum_bool_fun_fun$)) (=> (and (forall ((?v3 E$)) (=> (member$a ?v3 ?v0) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$as (fun_app$bv ?v2 ?v3) ?v4))))) (forall ((?v3 D_e_f_prod_sum$)) (=> (member$c ?v3 ?v1) (exists ((?v4 E$)) (and (member$a ?v4 ?v0) (fun_app$as (fun_app$bv ?v2 ?v4) ?v3)))))) (rel_set$i ?v2 ?v0 ?v1))) :named a41))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set$) (?v2 E_set$) (?v3 E$)) (=> (and (fun_app$b (fun_app$au (fun_app$ar rel_set$ ?v0) ?v1) ?v2) (member$a ?v3 ?v2)) (exists ((?v4 B$)) (and (member$ ?v4 ?v1) (fun_app$p (fun_app$al ?v0 ?v4) ?v3))))) :named a42))
(assert (! (forall ((?v0 E_b_bool_fun_fun$) (?v1 E_set$) (?v2 B_set$) (?v3 B$)) (=> (and (fun_app$d (fun_app$bn (fun_app$bo rel_set$c ?v0) ?v1) ?v2) (member$ ?v3 ?v2)) (exists ((?v4 E$)) (and (member$a ?v4 ?v1) (fun_app$r (fun_app$bm ?v0 ?v4) ?v3))))) :named a43))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_set$) (?v2 B_set$) (?v3 B$)) (=> (and (fun_app$d (fun_app$e (fun_app$bk rel_set$a ?v0) ?v1) ?v2) (member$ ?v3 ?v2)) (exists ((?v4 B$)) (and (member$ ?v4 ?v1) (fun_app$r (fun_app$s ?v0 ?v4) ?v3))))) :named a44))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 E_set$) (?v2 E_set$) (?v3 E$)) (=> (and (fun_app$b (fun_app$c (fun_app$bl rel_set$b ?v0) ?v1) ?v2) (member$a ?v3 ?v2)) (exists ((?v4 E$)) (and (member$a ?v4 ?v1) (fun_app$p (fun_app$q ?v0 ?v4) ?v3))))) :named a45))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 A_b_c_prod_sum_set$) (?v2 D_e_f_prod_sum_set$) (?v3 D_e_f_prod_sum$)) (=> (and (fun_app$bp (fun_app$bq (rel_set$d ?v0) ?v1) ?v2) (member$c ?v3 ?v2)) (exists ((?v4 A_b_c_prod_sum$)) (and (member$b ?v4 ?v1) (fun_app$as (fun_app$at ?v0 ?v4) ?v3))))) :named a46))
(assert (! (forall ((?v0 A_b_c_prod_sum_b_bool_fun_fun$) (?v1 A_b_c_prod_sum_set$) (?v2 B_set$) (?v3 B$)) (=> (and (rel_set$e ?v0 ?v1 ?v2) (member$ ?v3 ?v2)) (exists ((?v4 A_b_c_prod_sum$)) (and (member$b ?v4 ?v1) (fun_app$r (fun_app$br ?v0 ?v4) ?v3))))) :named a47))
(assert (! (forall ((?v0 D_e_f_prod_sum_b_bool_fun_fun$) (?v1 D_e_f_prod_sum_set$) (?v2 B_set$) (?v3 B$)) (=> (and (rel_set$g ?v0 ?v1 ?v2) (member$ ?v3 ?v2)) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$r (fun_app$bt ?v0 ?v4) ?v3))))) :named a48))
(assert (! (forall ((?v0 A_b_c_prod_sum_e_bool_fun_fun$) (?v1 A_b_c_prod_sum_set$) (?v2 E_set$) (?v3 E$)) (=> (and (rel_set$f ?v0 ?v1 ?v2) (member$a ?v3 ?v2)) (exists ((?v4 A_b_c_prod_sum$)) (and (member$b ?v4 ?v1) (fun_app$p (fun_app$bs ?v0 ?v4) ?v3))))) :named a49))
(assert (! (forall ((?v0 D_e_f_prod_sum_e_bool_fun_fun$) (?v1 D_e_f_prod_sum_set$) (?v2 E_set$) (?v3 E$)) (=> (and (rel_set$h ?v0 ?v1 ?v2) (member$a ?v3 ?v2)) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v1) (fun_app$p (fun_app$bu ?v0 ?v4) ?v3))))) :named a50))
(assert (! (forall ((?v0 E_d_e_f_prod_sum_bool_fun_fun$) (?v1 E_set$) (?v2 D_e_f_prod_sum_set$) (?v3 D_e_f_prod_sum$)) (=> (and (rel_set$i ?v0 ?v1 ?v2) (member$c ?v3 ?v2)) (exists ((?v4 E$)) (and (member$a ?v4 ?v1) (fun_app$as (fun_app$bv ?v0 ?v4) ?v3))))) :named a51))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set$) (?v2 E_set$) (?v3 B$)) (=> (and (fun_app$b (fun_app$au (fun_app$ar rel_set$ ?v0) ?v1) ?v2) (member$ ?v3 ?v1)) (exists ((?v4 E$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$al ?v0 ?v3) ?v4))))) :named a52))
(assert (! (forall ((?v0 E_b_bool_fun_fun$) (?v1 E_set$) (?v2 B_set$) (?v3 E$)) (=> (and (fun_app$d (fun_app$bn (fun_app$bo rel_set$c ?v0) ?v1) ?v2) (member$a ?v3 ?v1)) (exists ((?v4 B$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$bm ?v0 ?v3) ?v4))))) :named a53))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_set$) (?v2 B_set$) (?v3 B$)) (=> (and (fun_app$d (fun_app$e (fun_app$bk rel_set$a ?v0) ?v1) ?v2) (member$ ?v3 ?v1)) (exists ((?v4 B$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$s ?v0 ?v3) ?v4))))) :named a54))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 E_set$) (?v2 E_set$) (?v3 E$)) (=> (and (fun_app$b (fun_app$c (fun_app$bl rel_set$b ?v0) ?v1) ?v2) (member$a ?v3 ?v1)) (exists ((?v4 E$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$q ?v0 ?v3) ?v4))))) :named a55))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 A_b_c_prod_sum_set$) (?v2 D_e_f_prod_sum_set$) (?v3 A_b_c_prod_sum$)) (=> (and (fun_app$bp (fun_app$bq (rel_set$d ?v0) ?v1) ?v2) (member$b ?v3 ?v1)) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v2) (fun_app$as (fun_app$at ?v0 ?v3) ?v4))))) :named a56))
(assert (! (forall ((?v0 A_b_c_prod_sum_b_bool_fun_fun$) (?v1 A_b_c_prod_sum_set$) (?v2 B_set$) (?v3 A_b_c_prod_sum$)) (=> (and (rel_set$e ?v0 ?v1 ?v2) (member$b ?v3 ?v1)) (exists ((?v4 B$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$br ?v0 ?v3) ?v4))))) :named a57))
(assert (! (forall ((?v0 A_b_c_prod_sum_e_bool_fun_fun$) (?v1 A_b_c_prod_sum_set$) (?v2 E_set$) (?v3 A_b_c_prod_sum$)) (=> (and (rel_set$f ?v0 ?v1 ?v2) (member$b ?v3 ?v1)) (exists ((?v4 E$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$bs ?v0 ?v3) ?v4))))) :named a58))
(assert (! (forall ((?v0 D_e_f_prod_sum_b_bool_fun_fun$) (?v1 D_e_f_prod_sum_set$) (?v2 B_set$) (?v3 D_e_f_prod_sum$)) (=> (and (rel_set$g ?v0 ?v1 ?v2) (member$c ?v3 ?v1)) (exists ((?v4 B$)) (and (member$ ?v4 ?v2) (fun_app$r (fun_app$bt ?v0 ?v3) ?v4))))) :named a59))
(assert (! (forall ((?v0 D_e_f_prod_sum_e_bool_fun_fun$) (?v1 D_e_f_prod_sum_set$) (?v2 E_set$) (?v3 D_e_f_prod_sum$)) (=> (and (rel_set$h ?v0 ?v1 ?v2) (member$c ?v3 ?v1)) (exists ((?v4 E$)) (and (member$a ?v4 ?v2) (fun_app$p (fun_app$bu ?v0 ?v3) ?v4))))) :named a60))
(assert (! (forall ((?v0 E_d_e_f_prod_sum_bool_fun_fun$) (?v1 E_set$) (?v2 D_e_f_prod_sum_set$) (?v3 E$)) (=> (and (rel_set$i ?v0 ?v1 ?v2) (member$a ?v3 ?v1)) (exists ((?v4 D_e_f_prod_sum$)) (and (member$c ?v4 ?v2) (fun_app$as (fun_app$bv ?v0 ?v3) ?v4))))) :named a61))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_e_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 B_b_bool_fun_fun$) (?v4 B_e_bool_fun_fun$)) (= (fun_app$j (fun_app$bj (rel_fun$i ?v0 (rel_fun$b ?v1 ?v2)) ?v3) ?v4) (forall ((?v5 B$) (?v6 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v5) ?v6) (fun_app$f (fun_app$aw (rel_fun$b ?v1 ?v2) (fun_app$s ?v3 ?v5)) (fun_app$al ?v4 ?v6)))))) :named a62))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 B_b_bool_fun_fun$) (?v4 B_b_bool_fun_fun$)) (= (fun_app$l (fun_app$m (rel_fun$j ?v0 (rel_fun$k ?v1 ?v2)) ?v3) ?v4) (forall ((?v5 B$) (?v6 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v5) ?v6) (fun_app$h (fun_app$i (rel_fun$k ?v1 ?v2) (fun_app$s ?v3 ?v5)) (fun_app$s ?v4 ?v6)))))) :named a63))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_e_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 B_b_bool_fun_fun$) (?v4 E_e_bool_fun_fun$)) (= (fun_app$az (fun_app$ba (rel_fun$d ?v0 (rel_fun$b ?v1 ?v2)) ?v3) ?v4) (forall ((?v5 B$) (?v6 E$)) (=> (fun_app$p (fun_app$al ?v0 ?v5) ?v6) (fun_app$f (fun_app$aw (rel_fun$b ?v1 ?v2) (fun_app$s ?v3 ?v5)) (fun_app$q ?v4 ?v6)))))) :named a64))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_e_bool_fun_fun$) (?v2 Bool_bool_bool_fun_fun$) (?v3 B_e_bool_fun_fun$) (?v4 B_e_bool_fun_fun$)) (= (fun_app$j (fun_app$k (fun_app$bb (rel_fun$e ?v0) (fun_app$av (rel_fun$a ?v1) ?v2)) ?v3) ?v4) (forall ((?v5 B$) (?v6 B$)) (=> (fun_app$r (fun_app$s ?v0 ?v5) ?v6) (fun_app$f (fun_app$g (fun_app$av (rel_fun$a ?v1) ?v2) (fun_app$al ?v3 ?v5)) (fun_app$al ?v4 ?v6)))))) :named a65))
(assert (! (= (rel_fun$j uu$ uud$) uue$) :named a66))
(assert (! (= (rel_fun$f uu$ uub$) uuf$) :named a67))
(assert (! (= (fun_app$av (rel_fun$a uub$) uug$) uuh$) :named a68))
(assert (! (= (fun_app$bb (rel_fun$e uu$) uuh$) uui$) :named a69))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 A_b_c_prod_sum_b_set_fun$) (?v3 D_e_f_prod_sum_e_set_fun$) (?v4 A_b_c_prod_sum$) (?v5 D_e_f_prod_sum$)) (=> (and (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3) (and (fun_app$as (fun_app$at ?v0 ?v4) ?v5) (=> (fun_app$b (fun_app$au ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)) false))) false)) :named a70))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 E_bool_fun$) (?v3 E_bool_fun$) (?v4 E$) (?v5 E$)) (=> (and (fun_app$f (fun_app$g (fun_app$av (rel_fun$a ?v0) ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$q ?v0 ?v4) ?v5) (=> (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)) false))) false)) :named a71))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 B_bool_fun$) (?v3 E_bool_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$f (fun_app$aw (rel_fun$b ?v0 ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (=> (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)) false))) false)) :named a72))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 B_b_set_fun$) (?v3 E_e_set_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$ax (fun_app$ay (rel_fun$c ?v0 ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (=> (fun_app$b (fun_app$au ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)) false))) false)) :named a73))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 E_e_bool_fun_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$az (fun_app$ba (rel_fun$d ?v0 ?v1) ?v2) ?v3) (and (fun_app$p (fun_app$al ?v0 ?v4) ?v5) (=> (fun_app$f (fun_app$aw ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)) false))) false)) :named a74))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_e_bool_fun_fun$) (?v4 B$) (?v5 B$)) (=> (and (fun_app$j (fun_app$k (fun_app$bb (rel_fun$e ?v0) ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)) false))) false)) :named a75))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_e_bool_fun_fun$) (?v2 B_e_fun$) (?v3 B_e_fun$) (?v4 B$) (?v5 B$)) (=> (and (fun_app$n (fun_app$o (rel_fun$f ?v0 ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$p (fun_app$q ?v1 (fun_app$bc ?v2 ?v4)) (fun_app$bc ?v3 ?v5)) false))) false)) :named a76))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_e_bool_fun_fun$) (?v2 B_b_fun$) (?v3 B_e_fun$) (?v4 B$) (?v5 B$)) (=> (and (fun_app$n (fun_app$be (rel_fun$g ?v0 ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$p (fun_app$al ?v1 (fun_app$bd ?v2 ?v4)) (fun_app$bc ?v3 ?v5)) false))) false)) :named a77))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_b_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_b_fun$) (?v4 B$) (?v5 B$)) (=> (and (fun_app$bg (fun_app$bh (fun_app$bi (rel_fun$h ?v0) ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$r (fun_app$bf ?v1 (fun_app$al ?v2 ?v4)) (fun_app$bd ?v3 ?v5)) false))) false)) :named a78))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 B_e_bool_fun_fun$) (?v4 B$) (?v5 B$)) (=> (and (fun_app$j (fun_app$bj (rel_fun$i ?v0 ?v1) ?v2) ?v3) (and (fun_app$r (fun_app$s ?v0 ?v4) ?v5) (=> (fun_app$f (fun_app$aw ?v1 (fun_app$s ?v2 ?v4)) (fun_app$al ?v3 ?v5)) false))) false)) :named a79))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_b_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_b_fun$) (?v4 B$)) (=> (and (fun_app$bg (fun_app$bh (fun_app$bi (rel_fun$h ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$r (fun_app$bf ?v1 (fun_app$al ?v2 ?v4)) (fun_app$bd ?v3 ?v4)))) :named a80))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 B_e_bool_fun_fun$) (?v4 B$)) (=> (and (fun_app$j (fun_app$bj (rel_fun$i ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$f (fun_app$aw ?v1 (fun_app$s ?v2 ?v4)) (fun_app$al ?v3 ?v4)))) :named a81))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_bool_fun_b_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 B_b_bool_fun_fun$) (?v4 B$)) (=> (and (fun_app$l (fun_app$m (rel_fun$j ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$h (fun_app$i ?v1 (fun_app$s ?v2 ?v4)) (fun_app$s ?v3 ?v4)))) :named a82))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_e_bool_fun_fun$) (?v2 B_e_fun$) (?v3 B_e_fun$) (?v4 B$)) (=> (and (fun_app$n (fun_app$o (rel_fun$f ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$p (fun_app$q ?v1 (fun_app$bc ?v2 ?v4)) (fun_app$bc ?v3 ?v4)))) :named a83))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_e_bool_fun_fun$) (?v2 B_b_fun$) (?v3 B_e_fun$) (?v4 B$)) (=> (and (fun_app$n (fun_app$be (rel_fun$g ?v0 ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$p (fun_app$al ?v1 (fun_app$bd ?v2 ?v4)) (fun_app$bc ?v3 ?v4)))) :named a84))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 E_bool_fun$) (?v3 E_bool_fun$) (?v4 E$)) (=> (and (fun_app$f (fun_app$g (fun_app$av (rel_fun$a ?v0) ?v1) ?v2) ?v3) (fun_app$p (fun_app$q ?v0 ?v4) ?v4)) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v4)))) :named a85))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_e_bool_fun_fun$) (?v4 B$)) (=> (and (fun_app$j (fun_app$k (fun_app$bb (rel_fun$e ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v4)) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v4)))) :named a86))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 E_bool_fun$) (?v3 E_bool_fun$) (?v4 E$) (?v5 E$)) (=> (and (fun_app$f (fun_app$g (fun_app$av (rel_fun$a ?v0) ?v1) ?v2) ?v3) (fun_app$p (fun_app$q ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a87))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 B_bool_fun$) (?v3 E_bool_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$f (fun_app$aw (rel_fun$b ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a88))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 B_b_set_fun$) (?v3 E_e_set_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$ax (fun_app$ay (rel_fun$c ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$b (fun_app$au ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)))) :named a89))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 E_e_bool_fun_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$az (fun_app$ba (rel_fun$d ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$f (fun_app$aw ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)))) :named a90))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_e_bool_fun_fun$) (?v4 B$) (?v5 B$)) (=> (and (fun_app$j (fun_app$k (fun_app$bb (rel_fun$e ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v5)) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) :named a91))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 A_b_c_prod_sum_b_set_fun$) (?v3 D_e_f_prod_sum_e_set_fun$) (?v4 A_b_c_prod_sum$) (?v5 D_e_f_prod_sum$)) (=> (and (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3) (fun_app$as (fun_app$at ?v0 ?v4) ?v5)) (fun_app$b (fun_app$au ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)))) :named a92))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 E_bool_fun$) (?v3 E_bool_fun$) (?v4 E$) (?v5 E$)) (=> (and (fun_app$f (fun_app$g (fun_app$av (rel_fun$a ?v0) ?v1) ?v2) ?v3) (fun_app$p (fun_app$q ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$p ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a93))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$) (?v2 B_bool_fun$) (?v3 E_bool_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$f (fun_app$aw (rel_fun$b ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$ (fun_app$a ?v1 (fun_app$r ?v2 ?v4)) (fun_app$p ?v3 ?v5)))) :named a94))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 B_b_set_fun$) (?v3 E_e_set_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$ax (fun_app$ay (rel_fun$c ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$b (fun_app$au ?v1 (fun_app$ai ?v2 ?v4)) (fun_app$ac ?v3 ?v5)))) :named a95))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_b_bool_fun_fun$) (?v3 E_e_bool_fun_fun$) (?v4 B$) (?v5 E$)) (=> (and (fun_app$az (fun_app$ba (rel_fun$d ?v0 ?v1) ?v2) ?v3) (fun_app$p (fun_app$al ?v0 ?v4) ?v5)) (fun_app$f (fun_app$aw ?v1 (fun_app$s ?v2 ?v4)) (fun_app$q ?v3 ?v5)))) :named a96))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v2 B_e_bool_fun_fun$) (?v3 B_e_bool_fun_fun$) (?v4 B$) (?v5 B$)) (=> (and (fun_app$j (fun_app$k (fun_app$bb (rel_fun$e ?v0) ?v1) ?v2) ?v3) (fun_app$r (fun_app$s ?v0 ?v4) ?v5)) (fun_app$f (fun_app$g ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) :named a97))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$) (?v2 A_b_c_prod_sum_b_set_fun$) (?v3 D_e_f_prod_sum_e_set_fun$) (?v4 A_b_c_prod_sum$) (?v5 D_e_f_prod_sum$)) (=> (and (fun_app$ao (fun_app$ap (rel_fun$ ?v0 ?v1) ?v2) ?v3) (fun_app$as (fun_app$at ?v0 ?v4) ?v5)) (fun_app$b (fun_app$au ?v1 (fun_app$y ?v2 ?v4)) (fun_app$v ?v3 ?v5)))) :named a98))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$l (rel_fun$m ?v0 (rel_fun$n ?v1 uug$)) (rel_fun$o (fun_app$av (rel_fun$a uub$) ?v0) (rel_fun$p (fun_app$av (rel_fun$a uub$) ?v1) uug$)) (rel_fun$a uub$) (rel_fun$a uub$))) :named a99))
(assert (! (forall ((?v0 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$)) (rel_fun$q (rel_fun$o ?v0 (rel_fun$p ?v1 uug$)) (rel_fun$r (fun_app$bb (rel_fun$e uu$) ?v0) (rel_fun$s (fun_app$bb (rel_fun$e uu$) ?v1) uug$)) (rel_fun$e uu$) (rel_fun$e uu$))) :named a100))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$) (?v1 E_e_bool_fun_fun$)) (rel_fun$t (rel_fun$u ?v0 (fun_app$av (rel_fun$a ?v1) uug$)) (rel_fun$v (fun_app$av (rel_fun$a uub$) ?v0) (rel_fun$w (rel_fun$x uub$ ?v1) uug$)) (rel_fun$y uub$) (rel_fun$y uub$))) :named a101))
(assert (! (forall ((?v0 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v1 E_e_bool_fun_fun$)) (rel_fun$z (rel_fun$aa ?v0 (fun_app$av (rel_fun$a ?v1) uug$)) (rel_fun$ab (fun_app$bb (rel_fun$e uu$) ?v0) (rel_fun$ac (rel_fun$f uu$ ?v1) uug$)) (rel_fun$ad uu$) (rel_fun$ad uu$))) :named a102))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$ae (rel_fun$af ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$ag (fun_app$av (rel_fun$a uub$) ?v0) (rel_fun$ah (rel_fun$ai uub$ ?v1) uug$)) (rel_fun$aj uub$) (rel_fun$y uub$))) :named a103))
(assert (! (forall ((?v0 E_bool_fun_e_bool_fun_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$ak (rel_fun$al ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$am (fun_app$bb (rel_fun$e uu$) ?v0) (rel_fun$an (rel_fun$g uu$ ?v1) uug$)) (rel_fun$h uu$) (rel_fun$ad uu$))) :named a104))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_e_bool_fun_fun$)) (rel_fun$ao (fun_app$bb (rel_fun$e ?v0) (fun_app$av (rel_fun$a ?v1) uug$)) (rel_fun$ap (fun_app$bk rel_set$a ?v0) (rel_fun$aq (fun_app$bl rel_set$b ?v1) uug$)) rel_set$ rel_set$)) :named a105))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$ar (rel_fun$d ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$as (fun_app$ar rel_set$ ?v0) (rel_fun$at (fun_app$ar rel_set$ ?v1) uug$)) rel_set$a rel_set$b)) :named a106))
(assert (! (forall ((?v0 E_b_bool_fun_fun$) (?v1 E_b_bool_fun_fun$)) (rel_fun$au (rel_fun$av ?v0 (rel_fun$aw ?v1 uug$)) (rel_fun$ax (fun_app$bo rel_set$c ?v0) (rel_fun$ay (fun_app$bo rel_set$c ?v1) uug$)) rel_set$b rel_set$a)) :named a107))
(assert (! (forall ((?v0 E_b_bool_fun_fun$) (?v1 E_e_bool_fun_fun$)) (rel_fun$az (rel_fun$ba ?v0 (fun_app$av (rel_fun$a ?v1) uug$)) (rel_fun$bb (fun_app$bo rel_set$c ?v0) (rel_fun$aq (fun_app$bl rel_set$b ?v1) uug$)) rel_set$b rel_set$)) :named a108))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_b_bool_fun_fun$)) (rel_fun$bc (rel_fun$bd ?v0 (rel_fun$k ?v1 uug$)) (rel_fun$be (fun_app$ar rel_set$ ?v0) (rel_fun$bf (fun_app$bk rel_set$a ?v1) uug$)) rel_set$a rel_set$c)) :named a109))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 E_e_bool_fun_fun$)) (rel_fun$bg (rel_fun$bh ?v0 (fun_app$av (rel_fun$a ?v1) uug$)) (rel_fun$bi (fun_app$ar rel_set$ ?v0) (rel_fun$aq (fun_app$bl rel_set$b ?v1) uug$)) rel_set$ rel_set$b)) :named a110))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_b_bool_fun_fun$)) (rel_fun$bj (rel_fun$bk ?v0 (rel_fun$aw ?v1 uug$)) (rel_fun$bl (fun_app$bk rel_set$a ?v0) (rel_fun$ay (fun_app$bo rel_set$c ?v1) uug$)) rel_set$ rel_set$a)) :named a111))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$bm (rel_fun$i ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$bn (fun_app$bk rel_set$a ?v0) (rel_fun$at (fun_app$ar rel_set$ ?v1) uug$)) rel_set$a rel_set$)) :named a112))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_b_bool_fun_fun$)) (rel_fun$bo (rel_fun$j ?v0 (rel_fun$k ?v1 uug$)) (rel_fun$bp (fun_app$bk rel_set$a ?v0) (rel_fun$bf (fun_app$bk rel_set$a ?v1) uug$)) rel_set$a rel_set$a)) :named a113))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$bq (rel_fun$br ?v0 (rel_fun$b ?v1 uug$)) (rel_fun$bs (fun_app$bl rel_set$b ?v0) (rel_fun$at (fun_app$ar rel_set$ ?v1) uug$)) rel_set$c rel_set$b)) :named a114))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bt ?v0 (rel_fun$p (fun_app$av (rel_fun$a ?v0) ?v1) ?v1) uuj$ uuj$)) :named a115))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bu ?v0 (rel_fun$bv (rel_fun$b ?v0 ?v1) ?v1) uuk$ uuj$)) :named a116))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$)) (rel_fun$bw ?v0 (rel_fun$bx (rel_fun$c ?v0 ?v1) ?v1) uul$ uum$)) :named a117))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$)) (rel_fun$by ?v0 (rel_fun$bz (rel_fun$d ?v0 ?v1) ?v1) uun$ uuo$)) :named a118))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$)) (rel_fun$ca ?v0 (rel_fun$cb (fun_app$bb (rel_fun$e ?v0) ?v1) ?v1) uup$ uup$)) :named a119))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$)) (rel_fun$cc ?v0 (rel_fun$cd (rel_fun$ ?v0 ?v1) ?v1) uuq$ uur$)) :named a120))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bt ?v0 (rel_fun$p (fun_app$av (rel_fun$a ?v0) ?v1) ?v1) uuj$ uuj$)) :named a121))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 Bool_bool_bool_fun_fun$)) (rel_fun$bu ?v0 (rel_fun$bv (rel_fun$b ?v0 ?v1) ?v1) uuk$ uuj$)) :named a122))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$)) (rel_fun$bw ?v0 (rel_fun$bx (rel_fun$c ?v0 ?v1) ?v1) uul$ uum$)) :named a123))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_bool_fun_e_bool_fun_bool_fun_fun$)) (rel_fun$by ?v0 (rel_fun$bz (rel_fun$d ?v0 ?v1) ?v1) uun$ uuo$)) :named a124))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_bool_fun_e_bool_fun_bool_fun_fun$)) (rel_fun$ca ?v0 (rel_fun$cb (fun_app$bb (rel_fun$e ?v0) ?v1) ?v1) uup$ uup$)) :named a125))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 B_set_e_set_bool_fun_fun$)) (rel_fun$cc ?v0 (rel_fun$cd (rel_fun$ ?v0 ?v1) ?v1) uuq$ uur$)) :named a126))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$ce (fun_app$ar rel_set$ ?v0) (rel_fun$bx (rel_fun$c ?v0 (fun_app$ar rel_set$ ?v1)) (fun_app$ar rel_set$ ?v1)) bind$ bind$a)) :named a127))
(assert (! (forall ((?v0 A_b_c_prod_sum_d_e_f_prod_sum_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$cf (rel_set$d ?v0) (rel_fun$cd (rel_fun$ ?v0 (fun_app$ar rel_set$ ?v1)) (fun_app$ar rel_set$ ?v1)) bind$b bind$c)) :named a128))
(assert (! (forall ((?v0 E_b_bool_fun_fun$) (?v1 E_b_bool_fun_fun$)) (rel_fun$cg (fun_app$bo rel_set$c ?v0) (rel_fun$ch (rel_fun$ci ?v0 (fun_app$bo rel_set$c ?v1)) (fun_app$bo rel_set$c ?v1)) bind$a bind$)) :named a129))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 B_b_bool_fun_fun$)) (rel_fun$cj (fun_app$ar rel_set$ ?v0) (rel_fun$ck (rel_fun$cl ?v0 (fun_app$bk rel_set$a ?v1)) (fun_app$bk rel_set$a ?v1)) bind$ bind$d)) :named a130))
(assert (! (forall ((?v0 B_e_bool_fun_fun$) (?v1 E_e_bool_fun_fun$)) (rel_fun$cm (fun_app$ar rel_set$ ?v0) (rel_fun$cn (rel_fun$co ?v0 (fun_app$bl rel_set$b ?v1)) (fun_app$bl rel_set$b ?v1)) bind$e bind$a)) :named a131))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$cp (fun_app$bk rel_set$a ?v0) (rel_fun$cq (rel_fun$cr ?v0 (fun_app$ar rel_set$ ?v1)) (fun_app$ar rel_set$ ?v1)) bind$ bind$e)) :named a132))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_b_bool_fun_fun$)) (rel_fun$cs (fun_app$bk rel_set$a ?v0) (rel_fun$ct (rel_fun$cu ?v0 (fun_app$bk rel_set$a ?v1)) (fun_app$bk rel_set$a ?v1)) bind$ bind$)) :named a133))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 E_e_bool_fun_fun$)) (rel_fun$cv (fun_app$bk rel_set$a ?v0) (rel_fun$cw (rel_fun$cx ?v0 (fun_app$bl rel_set$b ?v1)) (fun_app$bl rel_set$b ?v1)) bind$e bind$e)) :named a134))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 B_e_bool_fun_fun$)) (rel_fun$cy (fun_app$bl rel_set$b ?v0) (rel_fun$cz (rel_fun$da ?v0 (fun_app$ar rel_set$ ?v1)) (fun_app$ar rel_set$ ?v1)) bind$d bind$a)) :named a135))
(assert (! (forall ((?v0 E_e_bool_fun_fun$) (?v1 B_b_bool_fun_fun$)) (rel_fun$db (fun_app$bl rel_set$b ?v0) (rel_fun$dc (rel_fun$dd ?v0 (fun_app$bk rel_set$a ?v1)) (fun_app$bk rel_set$a ?v1)) bind$d bind$d)) :named a136))
(check-sat)
;(get-unsat-core)
