; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 405
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort Enat_set$ 0)
(declare-sort Enat_set_set$ 0)
(declare-sort Enat_bool_fun$ 0)
(declare-sort Enat_set_set_set$ 0)
(declare-sort A_stream_bool_fun$ 0)
(declare-datatypes () ((Nat_option$ (none$) (some$ (the$ Nat$)))
  (Enat$ (abs_enat$ (rep_enat$ Nat_option$)))))
(declare-codatatypes () ((A_stream$ (sCons$ (shd$ A$) (stl$ A_stream$)))))
(declare-fun p$ () A_stream_bool_fun$)
(declare-fun uu$ () Enat_bool_fun$)
(declare-fun inf$ (Enat_set$) Enat$)
(declare-fun enat$ (Nat$) Enat$)
(declare-fun inf$a (Enat_set_set_set$) Enat_set_set$)
(declare-fun inf$b (Enat_set_set$) Enat_set$)
(declare-fun less$ (Enat$ Enat$) Bool)
(declare-fun omega$ () A_stream$)
(declare-fun sdrop$ (Nat$ A_stream$) A_stream$)
(declare-fun member$ (Enat_set_set$ Enat_set_set_set$) Bool)
(declare-fun sfirst$ (A_stream_bool_fun$ A_stream$) Enat$)
(declare-fun collect$ (Enat_bool_fun$) Enat_set$)
(declare-fun fun_app$ (Enat_bool_fun$ Enat$) Bool)
(declare-fun less_eq$ (Enat$ Enat$) Bool)
(declare-fun member$a (Enat_set$ Enat_set_set$) Bool)
(declare-fun member$b (Enat$ Enat_set$) Bool)
(declare-fun fun_app$a (A_stream_bool_fun$ A_stream$) Bool)
(declare-fun less_eq$a (Enat_set_set$ Enat_set_set$) Bool)
(declare-fun less_eq$b (Enat_set$ Enat_set$) Bool)
(declare-fun less_eq$c (Nat$ Nat$) Bool)
(declare-fun less_eq$d (Enat_set_set_set$ Enat_set_set_set$) Bool)
(assert (! (forall ((?v0 Enat$)) (! (= (fun_app$ uu$ ?v0) (exists ((?v1 Nat$)) (and (= ?v0 (enat$ ?v1)) (fun_app$a p$ (sdrop$ ?v1 omega$))))) :pattern ((fun_app$ uu$ ?v0)))) :named a0))
(assert (! (not (less_eq$ (sfirst$ p$ omega$) (inf$ (collect$ uu$)))) :named a1))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (enat$ ?v0) (enat$ ?v1)) (= ?v0 ?v1))) :named a2))
(assert (! (forall ((?v0 Enat_set_set$)) (less_eq$a ?v0 ?v0)) :named a3))
(assert (! (forall ((?v0 Enat_set$)) (less_eq$b ?v0 ?v0)) :named a4))
(assert (! (forall ((?v0 Enat$)) (less_eq$ ?v0 ?v0)) :named a5))
(assert (! (forall ((?v0 Nat$)) (less_eq$c ?v0 ?v0)) :named a6))
(assert (! (forall ((?v0 Enat$) (?v1 Nat$)) (=> (less_eq$ ?v0 (enat$ ?v1)) (exists ((?v2 Nat$)) (= ?v0 (enat$ ?v2))))) :named a7))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set_set_set$)) (= (less_eq$a ?v0 (inf$a ?v1)) (forall ((?v2 Enat_set_set$)) (=> (member$ ?v2 ?v1) (less_eq$a ?v0 ?v2))))) :named a8))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat_set_set$)) (= (less_eq$b ?v0 (inf$b ?v1)) (forall ((?v2 Enat_set$)) (=> (member$a ?v2 ?v1) (less_eq$b ?v0 ?v2))))) :named a9))
(assert (! (forall ((?v0 Enat$) (?v1 Enat_set$)) (= (less_eq$ ?v0 (inf$ ?v1)) (forall ((?v2 Enat$)) (=> (member$b ?v2 ?v1) (less_eq$ ?v0 ?v2))))) :named a10))
(assert (! (forall ((?v0 Enat_set_set_set$) (?v1 Enat_set_set$)) (=> (and (forall ((?v2 Enat_set_set$)) (=> (member$ ?v2 ?v0) (less_eq$a ?v1 ?v2))) (forall ((?v2 Enat_set_set$)) (=> (forall ((?v3 Enat_set_set$)) (=> (member$ ?v3 ?v0) (less_eq$a ?v2 ?v3))) (less_eq$a ?v2 ?v1)))) (= (inf$a ?v0) ?v1))) :named a11))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set$)) (=> (and (forall ((?v2 Enat_set$)) (=> (member$a ?v2 ?v0) (less_eq$b ?v1 ?v2))) (forall ((?v2 Enat_set$)) (=> (forall ((?v3 Enat_set$)) (=> (member$a ?v3 ?v0) (less_eq$b ?v2 ?v3))) (less_eq$b ?v2 ?v1)))) (= (inf$b ?v0) ?v1))) :named a12))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat$)) (=> (and (forall ((?v2 Enat$)) (=> (member$b ?v2 ?v0) (less_eq$ ?v1 ?v2))) (forall ((?v2 Enat$)) (=> (forall ((?v3 Enat$)) (=> (member$b ?v3 ?v0) (less_eq$ ?v2 ?v3))) (less_eq$ ?v2 ?v1)))) (= (inf$ ?v0) ?v1))) :named a13))
(assert (! (forall ((?v0 Enat_set_set_set$) (?v1 Enat_set_set_set$)) (=> (forall ((?v2 Enat_set_set$)) (=> (member$ ?v2 ?v0) (exists ((?v3 Enat_set_set$)) (and (member$ ?v3 ?v1) (less_eq$a ?v3 ?v2))))) (less_eq$a (inf$a ?v1) (inf$a ?v0)))) :named a14))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set_set$)) (=> (forall ((?v2 Enat_set$)) (=> (member$a ?v2 ?v0) (exists ((?v3 Enat_set$)) (and (member$a ?v3 ?v1) (less_eq$b ?v3 ?v2))))) (less_eq$b (inf$b ?v1) (inf$b ?v0)))) :named a15))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat_set$)) (=> (forall ((?v2 Enat$)) (=> (member$b ?v2 ?v0) (exists ((?v3 Enat$)) (and (member$b ?v3 ?v1) (less_eq$ ?v3 ?v2))))) (less_eq$ (inf$ ?v1) (inf$ ?v0)))) :named a16))
(assert (! (forall ((?v0 Enat_set_set_set$) (?v1 Enat_set_set$)) (=> (forall ((?v2 Enat_set_set$)) (=> (member$ ?v2 ?v0) (less_eq$a ?v1 ?v2))) (less_eq$a ?v1 (inf$a ?v0)))) :named a17))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set$)) (=> (forall ((?v2 Enat_set$)) (=> (member$a ?v2 ?v0) (less_eq$b ?v1 ?v2))) (less_eq$b ?v1 (inf$b ?v0)))) :named a18))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat$)) (=> (forall ((?v2 Enat$)) (=> (member$b ?v2 ?v0) (less_eq$ ?v1 ?v2))) (less_eq$ ?v1 (inf$ ?v0)))) :named a19))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set_set_set$) (?v2 Enat_set_set$)) (=> (and (member$ ?v0 ?v1) (less_eq$a ?v0 ?v2)) (less_eq$a (inf$a ?v1) ?v2))) :named a20))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat_set_set$) (?v2 Enat_set$)) (=> (and (member$a ?v0 ?v1) (less_eq$b ?v0 ?v2)) (less_eq$b (inf$b ?v1) ?v2))) :named a21))
(assert (! (forall ((?v0 Enat$) (?v1 Enat_set$) (?v2 Enat$)) (=> (and (member$b ?v0 ?v1) (less_eq$ ?v0 ?v2)) (less_eq$ (inf$ ?v1) ?v2))) :named a22))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set_set_set$)) (=> (member$ ?v0 ?v1) (less_eq$a (inf$a ?v1) ?v0))) :named a23))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat_set_set$)) (=> (member$a ?v0 ?v1) (less_eq$b (inf$b ?v1) ?v0))) :named a24))
(assert (! (forall ((?v0 Enat$) (?v1 Enat_set$)) (=> (member$b ?v0 ?v1) (less_eq$ (inf$ ?v1) ?v0))) :named a25))
(assert (! (forall ((?v0 Enat_set_set_set$) (?v1 Enat_set_set_set$)) (=> (less_eq$d ?v0 ?v1) (less_eq$a (inf$a ?v1) (inf$a ?v0)))) :named a26))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set_set$)) (=> (less_eq$a ?v0 ?v1) (less_eq$b (inf$b ?v1) (inf$b ?v0)))) :named a27))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat_set$)) (=> (less_eq$b ?v0 ?v1) (less_eq$ (inf$ ?v1) (inf$ ?v0)))) :named a28))
(assert (! (forall ((?v0 Nat$) (?v1 A_stream_bool_fun$) (?v2 A_stream$)) (=> (less$ (enat$ ?v0) (sfirst$ ?v1 ?v2)) (not (fun_app$a ?v1 (sdrop$ ?v0 ?v2))))) :named a29))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set_set$)) (= (= ?v0 ?v1) (and (less_eq$a ?v0 ?v1) (less_eq$a ?v1 ?v0)))) :named a30))
(assert (! (forall ((?v0 Enat_set$) (?v1 Enat_set$)) (= (= ?v0 ?v1) (and (less_eq$b ?v0 ?v1) (less_eq$b ?v1 ?v0)))) :named a31))
(assert (! (forall ((?v0 Enat$) (?v1 Enat$)) (= (= ?v0 ?v1) (and (less_eq$ ?v0 ?v1) (less_eq$ ?v1 ?v0)))) :named a32))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= ?v0 ?v1) (and (less_eq$c ?v0 ?v1) (less_eq$c ?v1 ?v0)))) :named a33))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (! (= (less_eq$ (enat$ ?v0) (enat$ ?v1)) (less_eq$c ?v0 ?v1)) :pattern ((less_eq$ (enat$ ?v0) (enat$ ?v1))))) :named a34))
(assert (! (forall ((?v0 Enat$) (?v1 Enat$)) (= (not (= ?v0 ?v1)) (or (less$ ?v0 ?v1) (less$ ?v1 ?v0)))) :named a35))
(assert (! (forall ((?v0 Enat$) (?v1 Enat$)) (= (not (less$ ?v0 ?v1)) (or (less$ ?v1 ?v0) (= ?v0 ?v1)))) :named a36))
(assert (! (forall ((?v0 Enat$) (?v1 Enat$)) (=> (and (=> (less$ ?v0 ?v1) false) (and (=> (= ?v0 ?v1) false) (=> (less$ ?v1 ?v0) false))) false)) :named a37))
(assert (! (forall ((?v0 Enat_set_set_set$) (?v1 Enat_set_set$)) (=> (forall ((?v2 Enat_set_set$)) (=> (member$ ?v2 ?v0) (less_eq$a ?v1 ?v2))) (less_eq$a ?v1 (inf$a ?v0)))) :named a38))
(assert (! (forall ((?v0 Enat_set_set$) (?v1 Enat_set$)) (=> (forall ((?v2 Enat_set$)) (=> (member$a ?v2 ?v0) (less_eq$b ?v1 ?v2))) (less_eq$b ?v1 (inf$b ?v0)))) :named a39))
(check-sat)
;(get-unsat-core)
