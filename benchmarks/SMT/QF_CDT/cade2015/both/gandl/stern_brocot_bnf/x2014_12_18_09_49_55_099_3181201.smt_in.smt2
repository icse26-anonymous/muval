; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 515
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort Nat$ 0)
(declare-sort Nat_nat_fun$ 0)
(declare-sort Nat_nat_fun_nat_fun$ 0)
(declare-sort Nat_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_fun_nat_fun$ 0)
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_nat_fun_fun_nat_fun$ 0)
(declare-sort Nat_nat_nat_fun_nat_fun_fun$ 0)
(declare-sort Nat_nat_nat_nat_fun_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_nat_fun_fun_nat_fun$ 0)
(declare-sort Nat_nat_nat_fun_fun_nat_nat_fun_fun$ 0)
(declare-codatatypes () ((Nat_stream$ (sCons$ (shd$ Nat$) (stl$ Nat_stream$)))
  (Nat_tree$ (node$ (root$ Nat$) (left$ Nat_tree$) (right$ Nat_tree$)))
  (Nat_nat_fun_tree$ (node$a (select$ Nat_nat_fun$) (selecta$ Nat_nat_fun_tree$) (selectb$ Nat_nat_fun_tree$)))
  (Nat_nat_fun_stream$ (sCons$a (selectc$ Nat_nat_fun$) (selectd$ Nat_nat_fun_stream$)))
  (Nat_nat_fun_nat_fun_tree$ (node$b (selecte$ Nat_nat_fun_nat_fun$) (selectf$ Nat_nat_fun_nat_fun_tree$) (selectg$ Nat_nat_fun_nat_fun_tree$)))
  (Nat_nat_fun_nat_fun_stream$ (sCons$b (selecth$ Nat_nat_fun_nat_fun$) (selecti$ Nat_nat_fun_nat_fun_stream$)))
  (Nat_nat_nat_fun_fun_tree$ (node$c (selectj$ Nat_nat_nat_fun_fun$) (selectk$ Nat_nat_nat_fun_fun_tree$) (selectl$ Nat_nat_nat_fun_fun_tree$)))
  (Nat_nat_nat_fun_fun_stream$ (sCons$c (selectm$ Nat_nat_nat_fun_fun$) (selectn$ Nat_nat_nat_fun_fun_stream$)))
  (Nat_nat_fun_nat_nat_fun_fun_tree$ (node$d (selecto$ Nat_nat_fun_nat_nat_fun_fun$) (selectp$ Nat_nat_fun_nat_nat_fun_fun_tree$) (selectq$ Nat_nat_fun_nat_nat_fun_fun_tree$)))
  (Nat_nat_fun_nat_nat_fun_fun_stream$ (sCons$d (selectr$ Nat_nat_fun_nat_nat_fun_fun$) (selects$ Nat_nat_fun_nat_nat_fun_fun_stream$)))
  (Nat_nat_nat_fun_fun_nat_fun_tree$ (node$e (selectt$ Nat_nat_nat_fun_fun_nat_fun$) (selectu$ Nat_nat_nat_fun_fun_nat_fun_tree$) (selectv$ Nat_nat_nat_fun_fun_nat_fun_tree$)))
  (Nat_nat_nat_fun_fun_nat_fun_stream$ (sCons$e (selectw$ Nat_nat_nat_fun_fun_nat_fun$) (selectx$ Nat_nat_nat_fun_fun_nat_fun_stream$)))
  (Nat_nat_fun_nat_fun_nat_fun_tree$ (node$f (selecty$ Nat_nat_fun_nat_fun_nat_fun$) (selectz$ Nat_nat_fun_nat_fun_nat_fun_tree$) (selecua$ Nat_nat_fun_nat_fun_nat_fun_tree$)))
  (Nat_nat_fun_nat_fun_nat_fun_stream$ (sCons$f (selecub$ Nat_nat_fun_nat_fun_nat_fun$) (selecuc$ Nat_nat_fun_nat_fun_nat_fun_stream$)))
  (Nat_nat_nat_nat_fun_fun_fun_tree$ (node$g (selecud$ Nat_nat_nat_nat_fun_fun_fun$) (selecue$ Nat_nat_nat_nat_fun_fun_fun_tree$) (selecuf$ Nat_nat_nat_nat_fun_fun_fun_tree$)))
  (Nat_nat_nat_nat_fun_fun_fun_stream$ (sCons$g (selecug$ Nat_nat_nat_nat_fun_fun_fun$) (selecuh$ Nat_nat_nat_nat_fun_fun_fun_stream$)))
  (Nat_nat_nat_fun_nat_fun_fun_tree$ (node$h (selecui$ Nat_nat_nat_fun_nat_fun_fun$) (selecuj$ Nat_nat_nat_fun_nat_fun_fun_tree$) (selecuk$ Nat_nat_nat_fun_nat_fun_fun_tree$)))
  (Nat_nat_nat_fun_nat_fun_fun_stream$ (sCons$h (selecul$ Nat_nat_nat_fun_nat_fun_fun$) (selecum$ Nat_nat_nat_fun_nat_fun_fun_stream$)))
  (Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ (node$i (selecun$ Nat_nat_fun_nat_nat_fun_fun_nat_fun$) (selecuo$ Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$) (selecup$ Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$)))
  (Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ (sCons$i (selecuq$ Nat_nat_fun_nat_nat_fun_fun_nat_fun$) (selecur$ Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$)))
  (Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ (node$j (selecus$ Nat_nat_nat_fun_fun_nat_nat_fun_fun$) (selecut$ Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$) (selecuu$ Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$)))
  (Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ (sCons$j (selecuv$ Nat_nat_nat_fun_fun_nat_nat_fun_fun$) (selecuw$ Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$)))))
(declare-datatypes () ((Num$ (one$) (bit0$ (selecux$ Num$)) (bit1$ (selecuy$ Num$)))))
(declare-fun den$ () Nat_tree$)
(declare-fun num$ () Nat_tree$)
(declare-fun fusc$ () Nat_stream$)
(declare-fun one$a () Nat$)
(declare-fun one$b () Nat_tree$)
(declare-fun one$c () Nat_stream$)
(declare-fun plus$ (Nat_tree$ Nat_tree$) Nat_tree$)
(declare-fun stl$a (Nat_nat_fun_nat_nat_fun_fun_stream$) Nat_nat_fun_nat_nat_fun_fun_stream$)
(declare-fun stl$b (Nat_nat_nat_fun_fun_stream$) Nat_nat_nat_fun_fun_stream$)
(declare-fun stl$c (Nat_nat_fun_nat_fun_stream$) Nat_nat_fun_nat_fun_stream$)
(declare-fun stl$d (Nat_nat_fun_stream$) Nat_nat_fun_stream$)
(declare-fun fusc$a () Nat_stream$)
(declare-fun plus$a (Nat_stream$ Nat_stream$) Nat_stream$)
(declare-fun st_ap$ (Nat_nat_fun_stream$ Nat_stream$) Nat_stream$)
(declare-fun times$ (Nat_tree$ Nat_tree$) Nat_tree$)
(declare-fun st_ap$a (Nat_nat_fun_nat_fun_stream$ Nat_nat_fun_stream$) Nat_stream$)
(declare-fun st_ap$b (Nat_nat_nat_fun_fun_stream$ Nat_stream$) Nat_nat_fun_stream$)
(declare-fun st_ap$c (Nat_nat_fun_nat_nat_fun_fun_stream$ Nat_nat_fun_stream$) Nat_nat_fun_stream$)
(declare-fun st_ap$d (Nat_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_nat_fun_fun_stream$) Nat_stream$)
(declare-fun st_ap$e (Nat_nat_fun_nat_fun_nat_fun_stream$ Nat_nat_fun_nat_fun_stream$) Nat_stream$)
(declare-fun st_ap$f (Nat_nat_nat_nat_fun_fun_fun_stream$ Nat_stream$) Nat_nat_nat_fun_fun_stream$)
(declare-fun st_ap$g (Nat_nat_nat_fun_nat_fun_fun_stream$ Nat_stream$) Nat_nat_fun_nat_fun_stream$)
(declare-fun st_ap$h (Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_fun_nat_nat_fun_fun_stream$) Nat_stream$)
(declare-fun st_ap$i (Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ Nat_nat_nat_fun_fun_stream$) Nat_nat_fun_stream$)
(declare-fun stream$ (Nat_tree$) Nat_stream$)
(declare-fun times$a (Nat_stream$ Nat_stream$) Nat_stream$)
(declare-fun fIXME_x$ () Nat_tree$)
(declare-fun numeral$ (Num$) Nat_tree$)
(declare-fun stream$a (Nat_nat_fun_tree$) Nat_nat_fun_stream$)
(declare-fun stream$b (Nat_nat_fun_nat_fun_tree$) Nat_nat_fun_nat_fun_stream$)
(declare-fun stream$c (Nat_nat_nat_fun_fun_tree$) Nat_nat_nat_fun_fun_stream$)
(declare-fun stream$d (Nat_nat_fun_nat_nat_fun_fun_tree$) Nat_nat_fun_nat_nat_fun_fun_stream$)
(declare-fun stream$e (Nat_nat_nat_fun_fun_nat_fun_tree$) Nat_nat_nat_fun_fun_nat_fun_stream$)
(declare-fun stream$f (Nat_nat_fun_nat_fun_nat_fun_tree$) Nat_nat_fun_nat_fun_nat_fun_stream$)
(declare-fun stream$g (Nat_nat_nat_nat_fun_fun_fun_tree$) Nat_nat_nat_nat_fun_fun_fun_stream$)
(declare-fun stream$h (Nat_nat_nat_fun_nat_fun_fun_tree$) Nat_nat_nat_fun_nat_fun_fun_stream$)
(declare-fun stream$i (Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$) Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$)
(declare-fun stream$j (Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$) Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$)
(declare-fun tree_ap$ (Nat_nat_fun_tree$ Nat_tree$) Nat_tree$)
(declare-fun numeral$a (Num$) Nat_stream$)
(declare-fun tree_ap$a (Nat_nat_fun_nat_fun_tree$ Nat_nat_fun_tree$) Nat_tree$)
(declare-fun tree_ap$b (Nat_nat_nat_fun_fun_tree$ Nat_tree$) Nat_nat_fun_tree$)
(declare-fun tree_ap$c (Nat_nat_fun_nat_nat_fun_fun_tree$ Nat_nat_fun_tree$) Nat_nat_fun_tree$)
(declare-fun tree_ap$d (Nat_nat_nat_fun_fun_nat_fun_tree$ Nat_nat_nat_fun_fun_tree$) Nat_tree$)
(declare-fun tree_ap$e (Nat_nat_fun_nat_fun_nat_fun_tree$ Nat_nat_fun_nat_fun_tree$) Nat_tree$)
(declare-fun tree_ap$f (Nat_nat_nat_nat_fun_fun_fun_tree$ Nat_tree$) Nat_nat_nat_fun_fun_tree$)
(declare-fun tree_ap$g (Nat_nat_nat_fun_nat_fun_fun_tree$ Nat_tree$) Nat_nat_fun_nat_fun_tree$)
(declare-fun tree_ap$h (Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ Nat_nat_fun_nat_nat_fun_fun_tree$) Nat_tree$)
(declare-fun tree_ap$i (Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ Nat_nat_nat_fun_fun_tree$) Nat_nat_fun_tree$)
(declare-fun tree_chop$ (Nat_tree$) Nat_tree$)
(declare-fun tree_chop$a (Nat_nat_fun_nat_nat_fun_fun_tree$) Nat_nat_fun_nat_nat_fun_fun_tree$)
(declare-fun tree_chop$b (Nat_nat_nat_fun_fun_tree$) Nat_nat_nat_fun_fun_tree$)
(declare-fun tree_chop$c (Nat_nat_fun_nat_fun_tree$) Nat_nat_fun_nat_fun_tree$)
(declare-fun tree_chop$d (Nat_nat_fun_tree$) Nat_nat_fun_tree$)
(declare-fun tree_chop$e (Nat_nat_nat_fun_fun_nat_fun_tree$) Nat_nat_nat_fun_fun_nat_fun_tree$)
(declare-fun tree_chop$f (Nat_nat_fun_nat_fun_nat_fun_tree$) Nat_nat_fun_nat_fun_nat_fun_tree$)
(declare-fun tree_chop$g (Nat_nat_nat_nat_fun_fun_fun_tree$) Nat_nat_nat_nat_fun_fun_fun_tree$)
(declare-fun tree_chop$h (Nat_nat_nat_fun_nat_fun_fun_tree$) Nat_nat_nat_fun_nat_fun_fun_tree$)
(declare-fun tree_chop$i (Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$) Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$)
(declare-fun tree_chop$j (Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$) Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$)
(assert (! (not (= fusc$ (stream$ num$))) :named a0))
(assert (! (= (left$ num$) num$) :named a1))
(assert (! (= (stl$ fusc$) fusc$a) :named a2))
(assert (! (= den$ (tree_chop$ num$)) :named a3))
(assert (! (= (left$ fIXME_x$) num$) :named a4))
(assert (! (forall ((?v0 Nat_nat_fun_tree$) (?v1 Nat_tree$)) (= (stream$ (tree_ap$ ?v0 ?v1)) (st_ap$ (stream$a ?v0) (stream$ ?v1)))) :named a5))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$) (?v1 Nat_nat_fun_tree$)) (= (stream$ (tree_ap$a ?v0 ?v1)) (st_ap$a (stream$b ?v0) (stream$a ?v1)))) :named a6))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$) (?v1 Nat_tree$)) (= (stream$a (tree_ap$b ?v0 ?v1)) (st_ap$b (stream$c ?v0) (stream$ ?v1)))) :named a7))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$) (?v1 Nat_nat_fun_tree$)) (= (stream$a (tree_ap$c ?v0 ?v1)) (st_ap$c (stream$d ?v0) (stream$a ?v1)))) :named a8))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun_tree$) (?v1 Nat_nat_nat_fun_fun_tree$)) (= (stream$ (tree_ap$d ?v0 ?v1)) (st_ap$d (stream$e ?v0) (stream$c ?v1)))) :named a9))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun_tree$) (?v1 Nat_nat_fun_nat_fun_tree$)) (= (stream$ (tree_ap$e ?v0 ?v1)) (st_ap$e (stream$f ?v0) (stream$b ?v1)))) :named a10))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun_tree$) (?v1 Nat_tree$)) (= (stream$c (tree_ap$f ?v0 ?v1)) (st_ap$f (stream$g ?v0) (stream$ ?v1)))) :named a11))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun_tree$) (?v1 Nat_tree$)) (= (stream$b (tree_ap$g ?v0 ?v1)) (st_ap$g (stream$h ?v0) (stream$ ?v1)))) :named a12))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$) (?v1 Nat_nat_fun_nat_nat_fun_fun_tree$)) (= (stream$ (tree_ap$h ?v0 ?v1)) (st_ap$h (stream$i ?v0) (stream$d ?v1)))) :named a13))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$) (?v1 Nat_nat_nat_fun_fun_tree$)) (= (stream$a (tree_ap$i ?v0 ?v1)) (st_ap$i (stream$j ?v0) (stream$c ?v1)))) :named a14))
(assert (! (= (shd$ fusc$) one$a) :named a15))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$)) (= (stl$a (stream$d ?v0)) (stream$d (tree_chop$a ?v0)))) :named a16))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$)) (= (stl$b (stream$c ?v0)) (stream$c (tree_chop$b ?v0)))) :named a17))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$)) (= (stl$c (stream$b ?v0)) (stream$b (tree_chop$c ?v0)))) :named a18))
(assert (! (forall ((?v0 Nat_nat_fun_tree$)) (= (stl$d (stream$a ?v0)) (stream$a (tree_chop$d ?v0)))) :named a19))
(assert (! (forall ((?v0 Nat_tree$)) (= (stl$ (stream$ ?v0)) (stream$ (tree_chop$ ?v0)))) :named a20))
(assert (! (= (root$ num$) one$a) :named a21))
(assert (! (= (stream$ one$b) one$c) :named a22))
(assert (! (forall ((?v0 Num$)) (= (stream$ (numeral$ ?v0)) (numeral$a ?v0))) :named a23))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (= (stream$ (times$ ?v0 ?v1)) (times$a (stream$ ?v0) (stream$ ?v1)))) :named a24))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (= (stream$ (plus$ ?v0 ?v1)) (plus$a (stream$ ?v0) (stream$ ?v1)))) :named a25))
(assert (! (forall ((?v0 Nat_nat_fun_tree$) (?v1 Nat_tree$)) (= (tree_chop$ (tree_ap$ ?v0 ?v1)) (tree_ap$ (tree_chop$d ?v0) (tree_chop$ ?v1)))) :named a26))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$) (?v1 Nat_nat_fun_tree$)) (= (tree_chop$ (tree_ap$a ?v0 ?v1)) (tree_ap$a (tree_chop$c ?v0) (tree_chop$d ?v1)))) :named a27))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$) (?v1 Nat_tree$)) (= (tree_chop$d (tree_ap$b ?v0 ?v1)) (tree_ap$b (tree_chop$b ?v0) (tree_chop$ ?v1)))) :named a28))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$) (?v1 Nat_nat_fun_tree$)) (= (tree_chop$d (tree_ap$c ?v0 ?v1)) (tree_ap$c (tree_chop$a ?v0) (tree_chop$d ?v1)))) :named a29))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun_tree$) (?v1 Nat_nat_nat_fun_fun_tree$)) (= (tree_chop$ (tree_ap$d ?v0 ?v1)) (tree_ap$d (tree_chop$e ?v0) (tree_chop$b ?v1)))) :named a30))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun_tree$) (?v1 Nat_nat_fun_nat_fun_tree$)) (= (tree_chop$ (tree_ap$e ?v0 ?v1)) (tree_ap$e (tree_chop$f ?v0) (tree_chop$c ?v1)))) :named a31))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun_tree$) (?v1 Nat_tree$)) (= (tree_chop$b (tree_ap$f ?v0 ?v1)) (tree_ap$f (tree_chop$g ?v0) (tree_chop$ ?v1)))) :named a32))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun_tree$) (?v1 Nat_tree$)) (= (tree_chop$c (tree_ap$g ?v0 ?v1)) (tree_ap$g (tree_chop$h ?v0) (tree_chop$ ?v1)))) :named a33))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$) (?v1 Nat_nat_fun_nat_nat_fun_fun_tree$)) (= (tree_chop$ (tree_ap$h ?v0 ?v1)) (tree_ap$h (tree_chop$i ?v0) (tree_chop$a ?v1)))) :named a34))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$) (?v1 Nat_nat_nat_fun_fun_tree$)) (= (tree_chop$d (tree_ap$i ?v0 ?v1)) (tree_ap$i (tree_chop$j ?v0) (tree_chop$b ?v1)))) :named a35))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (= (left$ (plus$ ?v0 ?v1)) (plus$ (left$ ?v0) (left$ ?v1)))) :named a36))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (= (left$ (times$ ?v0 ?v1)) (times$ (left$ ?v0) (left$ ?v1)))) :named a37))
(assert (! (forall ((?v0 Num$)) (= (left$ (numeral$ ?v0)) (numeral$ ?v0))) :named a38))
(assert (! (forall ((?v0 Nat_stream$) (?v1 Nat_stream$)) (= (stl$ (plus$a ?v0 ?v1)) (plus$a (stl$ ?v0) (stl$ ?v1)))) :named a39))
(check-sat)
;(get-unsat-core)
