; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 217
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort Bool_tree$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_bool_a_fun_fun$ 0)
(declare-sort A_bool_fun_a_fun$ 0)
(declare-sort Bool_a_a_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort Bool_a_bool_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_a_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_fun_bool_bool_fun_fun$ 0)
(declare-sort Bool_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Bool_a_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_fun_a_a_bool_fun_a_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_fun_a_a_bool_fun_a_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_a_a_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_a_fun_fun_a_a_bool_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_a_a_bool_fun_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_a_a_bool_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-codatatypes () ((A_bool_fun_tree$ (node$ (select$ A_bool_fun$) (selecta$ A_bool_fun_tree$) (selectb$ A_bool_fun_tree$)))
  (A_tree$ (node$a (root$ A$) (left$ A_tree$) (right$ A_tree$)))
  (A_a_bool_fun_fun_tree$ (node$b (selectc$ A_a_bool_fun_fun$) (selectd$ A_a_bool_fun_fun_tree$) (selecte$ A_a_bool_fun_fun_tree$)))
  (A_a_fun_tree$ (node$c (selectf$ A_a_fun$) (selectg$ A_a_fun_tree$) (selecth$ A_a_fun_tree$)))
  (Bool_a_bool_fun_fun_tree$ (node$d (selecti$ Bool_a_bool_fun_fun$) (selectj$ Bool_a_bool_fun_fun_tree$) (selectk$ Bool_a_bool_fun_fun_tree$)))
  (Bool_bool_fun_tree$ (node$e (selectl$ Bool_bool_fun$) (selectm$ Bool_bool_fun_tree$) (selectn$ Bool_bool_fun_tree$)))
  (A_a_bool_fun_fun_bool_fun_tree$ (node$f (selecto$ A_a_bool_fun_fun_bool_fun$) (selectp$ A_a_bool_fun_fun_bool_fun_tree$) (selectq$ A_a_bool_fun_fun_bool_fun_tree$)))
  (Bool_a_a_bool_fun_fun_fun_tree$ (node$g (selectr$ Bool_a_a_bool_fun_fun_fun$) (selects$ Bool_a_a_bool_fun_fun_fun_tree$) (selectt$ Bool_a_a_bool_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ (node$h (selectu$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) (selectv$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) (selectw$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)))
  (Bool_a_fun_tree$ (node$i (selectx$ Bool_a_fun$) (selecty$ Bool_a_fun_tree$) (selectz$ Bool_a_fun_tree$)))
  (Bool_a_a_fun_fun_tree$ (node$j (selecua$ Bool_a_a_fun_fun$) (selecub$ Bool_a_a_fun_fun_tree$) (selecuc$ Bool_a_a_fun_fun_tree$)))
  (A_a_a_fun_fun_tree$ (node$k (selecud$ A_a_a_fun_fun$) (selecue$ A_a_a_fun_fun_tree$) (selecuf$ A_a_a_fun_fun_tree$)))
  (A_a_bool_fun_a_fun_fun_tree$ (node$l (selecug$ A_a_bool_fun_a_fun_fun$) (selecuh$ A_a_bool_fun_a_fun_fun_tree$) (selecui$ A_a_bool_fun_a_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_tree$ (node$m (selecuj$ A_a_a_bool_fun_fun_fun$) (selecuk$ A_a_a_bool_fun_fun_fun_tree$) (selecul$ A_a_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_a_bool_fun_fun_fun_tree$ (node$n (selecum$ A_bool_fun_a_a_bool_fun_fun_fun$) (selecun$ A_bool_fun_a_a_bool_fun_fun_fun_tree$) (selecuo$ A_bool_fun_a_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_bool_a_bool_fun_fun_fun_tree$ (node$o (selecup$ A_bool_fun_bool_a_bool_fun_fun_fun$) (selecuq$ A_bool_fun_bool_a_bool_fun_fun_fun_tree$) (selecur$ A_bool_fun_bool_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_fun_tree$ (node$p (selecus$ A_bool_fun_a_fun$) (selecut$ A_bool_fun_a_fun_tree$) (selecuu$ A_bool_fun_a_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_fun_tree$ (node$q (selecuv$ A_a_fun_a_a_a_fun_fun_fun$) (selecuw$ A_a_fun_a_a_a_fun_fun_fun_tree$) (selecux$ A_a_fun_a_a_a_fun_fun_fun_tree$)))
  (A_bool_fun_bool_fun_tree$ (node$r (selecuy$ A_bool_fun_bool_fun$) (selecuz$ A_bool_fun_bool_fun_tree$) (selecva$ A_bool_fun_bool_fun_tree$)))
  (A_a_bool_fun_bool_fun_fun_tree$ (node$s (selecvb$ A_a_bool_fun_bool_fun_fun$) (selecvc$ A_a_bool_fun_bool_fun_fun_tree$) (selecvd$ A_a_bool_fun_bool_fun_fun_tree$)))
  (A_bool_fun_bool_fun_a_a_bool_fun_bool_fun_fun_fun_tree$ (node$t (selecve$ A_bool_fun_bool_fun_a_a_bool_fun_bool_fun_fun_fun$) (selecvf$ A_bool_fun_bool_fun_a_a_bool_fun_bool_fun_fun_fun_tree$) (selecvg$ A_bool_fun_bool_fun_a_a_bool_fun_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_fun_a_a_bool_fun_a_fun_fun_fun_tree$ (node$u (selecvh$ A_bool_fun_a_fun_a_a_bool_fun_a_fun_fun_fun$) (selecvi$ A_bool_fun_a_fun_a_a_bool_fun_a_fun_fun_fun_tree$) (selecvj$ A_bool_fun_a_fun_a_a_bool_fun_a_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ (node$v (selecvk$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun$) (selecvl$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) (selecvm$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_bool_fun_fun_tree$ (node$w (selecvn$ A_bool_fun_a_bool_fun_fun$) (selecvo$ A_bool_fun_a_bool_fun_fun_tree$) (selecvp$ A_bool_fun_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$x (selecvq$ A_a_bool_fun_a_bool_fun_fun_fun$) (selecvr$ A_a_bool_fun_a_bool_fun_fun_fun_tree$) (selecvs$ A_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_bool_fun_fun_a_a_bool_fun_a_bool_fun_fun_fun_fun_tree$ (node$y (selecvt$ A_bool_fun_a_bool_fun_fun_a_a_bool_fun_a_bool_fun_fun_fun_fun$) (selecvu$ A_bool_fun_a_bool_fun_fun_a_a_bool_fun_a_bool_fun_fun_fun_fun_tree$) (selecvv$ A_bool_fun_a_bool_fun_fun_a_a_bool_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_tree$ (node$z (selecvw$ A_a_a_a_fun_fun_fun$) (selecvx$ A_a_a_a_fun_fun_fun_tree$) (selecvy$ A_a_a_a_fun_fun_fun_tree$)))
  (A_bool_bool_fun_fun_tree$ (node$aa (selecvz$ A_bool_bool_fun_fun$) (selecwa$ A_bool_bool_fun_fun_tree$) (selecwb$ A_bool_bool_fun_fun_tree$)))
  (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ (node$ab (selecwc$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun$) (selecwd$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) (selecwe$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)))
  (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$ (node$ac (selecwf$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun$) (selecwg$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$) (selecwh$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ (node$ad (selecwi$ A_a_a_fun_fun_a_a_a_fun_fun_fun$) (selecwj$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) (selecwk$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ (node$ae (selecwl$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$) (selecwm$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) (selecwn$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_tree$ (node$af (selecwo$ A_bool_a_bool_fun_fun_fun$) (selecwp$ A_bool_a_bool_fun_fun_fun_tree$) (selecwq$ A_bool_a_bool_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$ (node$ag (selecwr$ A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun$) (selecws$ A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$) (selecwt$ A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$)))
  (Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$ (node$ah (selecwu$ Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun$) (selecwv$ Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$) (selecww$ Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$)))
  (Bool_bool_a_bool_fun_fun_fun_tree$ (node$ai (selecwx$ Bool_bool_a_bool_fun_fun_fun$) (selecwy$ Bool_bool_a_bool_fun_fun_fun_tree$) (selecwz$ Bool_bool_a_bool_fun_fun_fun_tree$)))
  (Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$ (node$aj (selecxa$ Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun$) (selecxb$ Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$) (selecxc$ Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_bool_fun_fun_a_a_bool_fun_bool_fun_fun_fun_tree$ (node$ak (selecxd$ A_bool_fun_a_bool_fun_fun_a_a_bool_fun_bool_fun_fun_fun$) (selecxe$ A_bool_fun_a_bool_fun_fun_a_a_bool_fun_bool_fun_fun_fun_tree$) (selecxf$ A_bool_fun_a_bool_fun_fun_a_a_bool_fun_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_a_fun_fun_tree$ (node$al (selecxg$ A_bool_fun_a_a_fun_fun$) (selecxh$ A_bool_fun_a_a_fun_fun_tree$) (selecxi$ A_bool_fun_a_a_fun_fun_tree$)))
  (A_bool_fun_a_a_fun_fun_a_a_bool_fun_a_fun_fun_fun_tree$ (node$am (selecxj$ A_bool_fun_a_a_fun_fun_a_a_bool_fun_a_fun_fun_fun$) (selecxk$ A_bool_fun_a_a_fun_fun_a_a_bool_fun_a_fun_fun_fun_tree$) (selecxl$ A_bool_fun_a_a_fun_fun_a_a_bool_fun_a_fun_fun_fun_tree$)))
  (Bool_a_fun_bool_bool_fun_fun_tree$ (node$an (selecxm$ Bool_a_fun_bool_bool_fun_fun$) (selecxn$ Bool_a_fun_bool_bool_fun_fun_tree$) (selecxo$ Bool_a_fun_bool_bool_fun_fun_tree$)))
  (Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$ (node$ao (selecxp$ Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun$) (selecxq$ Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$) (selecxr$ Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$)))
  (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$ap (selecxs$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) (selecxt$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (selecxu$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_fun_a_bool_fun_fun_tree$ (node$aq (selecxv$ A_a_fun_a_bool_fun_fun$) (selecxw$ A_a_fun_a_bool_fun_fun_tree$) (selecxx$ A_a_fun_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ (node$ar (selecxy$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$) (selecxz$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) (selecya$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_a_fun_fun_tree$ (node$as (selecyb$ A_bool_a_fun_fun$) (selecyc$ A_bool_a_fun_fun_tree$) (selecyd$ A_bool_a_fun_fun_tree$)))
  (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ (node$at (selecye$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$) (selecyf$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$) (selecyg$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_tree$ (node$au (selecyh$ A_a_fun_a_a_fun_fun$) (selecyi$ A_a_fun_a_a_fun_fun_tree$) (selecyj$ A_a_fun_a_a_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$av (selecyk$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$) (selecyl$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) (selecym$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_bool_fun_fun_tree$ (node$aw (selecyn$ A_a_bool_fun_fun_a_bool_fun_fun$) (selecyo$ A_a_bool_fun_fun_a_bool_fun_fun_tree$) (selecyp$ A_a_bool_fun_fun_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$ax (selecyq$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$) (selecyr$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) (selecys$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_fun_a_a_bool_fun_fun_fun_tree$ (node$ay (selecyt$ A_a_fun_a_a_bool_fun_fun_fun$) (selecyu$ A_a_fun_a_a_bool_fun_fun_fun_tree$) (selecyv$ A_a_fun_a_a_bool_fun_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$az (selecyw$ A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$) (selecyx$ A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) (selecyy$ A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$ba (selecyz$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$) (selecza$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) (seleczb$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_fun_fun_tree$ (node$bb (seleczc$ A_a_bool_fun_fun_a_a_fun_fun$) (seleczd$ A_a_bool_fun_fun_a_a_fun_fun_tree$) (selecze$ A_a_bool_fun_fun_a_a_fun_fun_tree$)))
  (A_a_bool_fun_a_fun_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$ (node$bc (seleczf$ A_a_bool_fun_a_fun_fun_a_a_bool_fun_fun_a_a_fun_fun_fun$) (seleczg$ A_a_bool_fun_a_fun_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$) (seleczh$ A_a_bool_fun_a_fun_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$)))
  (Bool_a_fun_bool_a_bool_fun_fun_fun_tree$ (node$bd (seleczi$ Bool_a_fun_bool_a_bool_fun_fun_fun$) (seleczj$ Bool_a_fun_bool_a_bool_fun_fun_fun_tree$) (seleczk$ Bool_a_fun_bool_a_bool_fun_fun_fun_tree$)))
  (Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$ (node$be (seleczl$ Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun$) (seleczm$ Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$) (seleczn$ Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$)))
  (Bool_a_a_bool_fun_fun_bool_fun_fun_tree$ (node$bf (seleczo$ Bool_a_a_bool_fun_fun_bool_fun_fun$) (seleczp$ Bool_a_a_bool_fun_fun_bool_fun_fun_tree$) (seleczq$ Bool_a_a_bool_fun_fun_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$bg (seleczr$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$) (seleczs$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) (seleczt$ A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)))))
(declare-fun t$ () A_tree$)
(declare-fun id$ () A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun t$a () A_tree$)
(declare-fun uu$ () A_a_bool_fun_fun$)
(declare-fun id$a () A_a_fun$)
(declare-fun uua$ (Bool) A_bool_fun$)
(declare-fun uub$ (A_bool_fun$) A_a_bool_fun_fun$)
(declare-fun uuc$ (A$) A_a_fun$)
(declare-fun uud$ (A_bool_fun$) Bool_a_bool_fun_fun$)
(declare-fun uue$ (A$) A_bool_fun_a_fun$)
(declare-fun uuf$ (Bool) A_a_bool_fun_fun_bool_fun$)
(declare-fun uug$ (A_a_bool_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun uuh$ (A_a_fun$) A_a_a_fun_fun$)
(declare-fun uui$ (A_bool_fun_a_fun$) A_a_bool_fun_a_fun_fun$)
(declare-fun uuj$ (A_a_bool_fun_fun$) A_a_a_bool_fun_fun_fun$)
(declare-fun node$bh (Bool Bool_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_C$ () Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun tree_I$ () A_a_fun_tree$)
(declare-fun tree_K$ () Bool_a_bool_fun_fun_tree$)
(declare-fun tree_S$ () Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun fun_app$ (A_bool_fun$ A$) Bool)
(declare-fun tree_C$a () A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_C$b () A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_C$c () A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_C$d () A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$e () A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$f () Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$g () Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$h () A_bool_fun_a_bool_fun_fun_a_a_bool_fun_bool_fun_fun_fun_tree$)
(declare-fun tree_C$i () A_bool_fun_a_a_fun_fun_a_a_bool_fun_a_fun_fun_fun_tree$)
(declare-fun tree_I$a () A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_K$a () A_a_a_fun_fun_tree$)
(declare-fun tree_K$b () A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_K$c () A_bool_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_K$d () A_a_bool_fun_a_fun_fun_tree$)
(declare-fun tree_K$e () A_a_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_K$f () A_bool_fun_bool_fun_a_a_bool_fun_bool_fun_fun_fun_tree$)
(declare-fun tree_K$g () A_bool_fun_a_fun_a_a_bool_fun_a_fun_fun_fun_tree$)
(declare-fun tree_K$h () A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_K$i () A_bool_fun_a_bool_fun_fun_a_a_bool_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_K$j () Bool_a_a_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun tree_K$k () A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$a () A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$b () A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$c () A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$d () A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$e () A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$f () A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$g () A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$h () A_a_bool_fun_a_fun_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$i () Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$ (A_bool_fun_tree$ A_tree$) Bool_tree$)
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$b (A_a_bool_fun_fun_bool_fun$ A_a_bool_fun_fun$) Bool)
(declare-fun fun_app$c (A_a_bool_fun_a_fun_fun$ A$) A_bool_fun_a_fun$)
(declare-fun fun_app$d (Bool_a_bool_fun_fun$ Bool) A_bool_fun$)
(declare-fun fun_app$e (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun$) A_a_bool_fun_fun$)
(declare-fun fun_app$f (A_a_a_bool_fun_fun_fun$ A$) A_a_bool_fun_fun$)
(declare-fun fun_app$g (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$h (A_bool_fun_a_fun$ A_bool_fun$) A$)
(declare-fun fun_app$i (A_a_fun$ A$) A$)
(declare-fun fun_app$j (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$k (Bool_a_a_bool_fun_fun_fun$ Bool) A_a_bool_fun_fun$)
(declare-fun fun_app$l (Bool_a_fun$ Bool) A$)
(declare-fun fun_app$m (Bool_a_a_fun_fun$ Bool) A_a_fun$)
(declare-fun fun_app$n (A_bool_fun_bool_fun$ A_bool_fun$) Bool)
(declare-fun fun_app$o (A_a_bool_fun_bool_fun_fun$ A$) A_bool_fun_bool_fun$)
(declare-fun map_tree$ (A_bool_fun$ A_tree$) Bool_tree$)
(declare-fun tree_ap$a (A_a_bool_fun_fun_tree$ A_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$b (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun tree_ap$c (Bool_a_bool_fun_fun_tree$ Bool_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$d (Bool_bool_fun_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_ap$e (A_a_bool_fun_fun_bool_fun_tree$ A_a_bool_fun_fun_tree$) Bool_tree$)
(declare-fun tree_ap$f (Bool_a_a_bool_fun_fun_fun_tree$ Bool_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$g (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$h (Bool_a_fun_tree$ Bool_tree$) A_tree$)
(declare-fun tree_ap$i (Bool_a_a_fun_fun_tree$ Bool_tree$) A_a_fun_tree$)
(declare-fun tree_ap$j (A_a_a_fun_fun_tree$ A_tree$) A_a_fun_tree$)
(declare-fun tree_ap$k (A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$l (A_bool_fun_bool_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$m (A_bool_fun_a_fun_tree$ A_bool_fun_tree$) A_tree$)
(declare-fun tree_ap$n (A_a_bool_fun_a_fun_fun_tree$ A_tree$) A_bool_fun_a_fun_tree$)
(declare-fun tree_ap$o (A_a_fun_a_a_a_fun_fun_fun_tree$ A_a_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$p (A_a_bool_fun_bool_fun_fun_tree$ A_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$q (A_bool_fun_bool_fun_a_a_bool_fun_bool_fun_fun_fun_tree$ A_bool_fun_bool_fun_tree$) A_a_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_ap$r (A_bool_fun_a_fun_a_a_bool_fun_a_fun_fun_fun_tree$ A_bool_fun_a_fun_tree$) A_a_bool_fun_a_fun_fun_tree$)
(declare-fun tree_ap$s (A_a_a_bool_fun_fun_fun_tree$ A_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$t (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$u (A_a_bool_fun_a_bool_fun_fun_fun_tree$ A_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$v (A_bool_fun_a_bool_fun_fun_a_a_bool_fun_a_bool_fun_fun_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_tree$) A_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$w (A_a_a_a_fun_fun_fun_tree$ A_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$x (A_bool_bool_fun_fun_tree$ A_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$y (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun tree_ap$z (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun map_tree$a (A_a_fun$ A_tree$) A_tree$)
(declare-fun map_tree$b (Bool_a_bool_fun_fun$ Bool_tree$) A_bool_fun_tree$)
(declare-fun map_tree$c (A_a_bool_fun_fun$ A_tree$) A_bool_fun_tree$)
(declare-fun map_tree$d (A_a_a_fun_fun$ A_tree$) A_a_fun_tree$)
(declare-fun map_tree$e (A_a_bool_fun_bool_fun_fun$ A_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun map_tree$f (A_a_bool_fun_a_fun_fun$ A_tree$) A_bool_fun_a_fun_tree$)
(declare-fun map_tree$g (A_a_a_bool_fun_fun_fun$ A_tree$) A_a_bool_fun_fun_tree$)
(declare-fun map_tree$h (A_a_bool_fun_fun_bool_fun$ A_a_bool_fun_fun_tree$) Bool_tree$)
(declare-fun map_tree$i (A_a_bool_fun_a_bool_fun_fun_fun$ A_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun map_tree$j (Bool_bool_fun$ Bool_tree$) Bool_tree$)
(declare-fun map_tree$k (Bool_a_a_bool_fun_fun_fun$ Bool_tree$) A_a_bool_fun_fun_tree$)
(declare-fun map_tree$l (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun map_tree$m (Bool_a_fun$ Bool_tree$) A_tree$)
(declare-fun map_tree$n (Bool_a_a_fun_fun$ Bool_tree$) A_a_fun_tree$)
(declare-fun map_tree$o (A_bool_fun_bool_fun$ A_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$aa (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$ab (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ac (A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_tree$) Bool_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ad (A_bool_a_bool_fun_fun_fun_tree$ A_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ae (Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$ Bool_a_a_bool_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$af (Bool_bool_a_bool_fun_fun_fun_tree$ Bool_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ag (Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$ Bool_bool_a_bool_fun_fun_fun_tree$) Bool_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ah (A_bool_fun_bool_fun_tree$ A_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$ai (A_bool_fun_a_bool_fun_fun_a_a_bool_fun_bool_fun_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_tree$) A_a_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_ap$aj (A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$ak (A_bool_fun_a_a_fun_fun_a_a_bool_fun_a_fun_fun_fun_tree$ A_bool_fun_a_a_fun_fun_tree$) A_a_bool_fun_a_fun_fun_tree$)
(declare-fun tree_ap$al (A_bool_fun_a_a_fun_fun_tree$ A_bool_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$am (Bool_a_fun_bool_bool_fun_fun_tree$ Bool_a_fun_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$an (Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) Bool_a_fun_bool_bool_fun_fun_tree$)
(declare-fun tree_ap$ao (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ap (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$aq (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ar (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ A_bool_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$as (A_bool_a_fun_fun_tree$ A_tree$) Bool_a_fun_tree$)
(declare-fun tree_ap$at (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$au (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$av (A_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$aw (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ax (A_a_fun_a_a_bool_fun_fun_fun_tree$ A_a_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ay (A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$az (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ba (A_a_bool_fun_fun_a_a_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$bb (A_a_bool_fun_a_fun_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$ A_a_bool_fun_a_fun_fun_tree$) A_a_bool_fun_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$bc (Bool_a_fun_bool_a_bool_fun_fun_fun_tree$ Bool_a_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bd (Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$ Bool_a_a_bool_fun_fun_fun_tree$) Bool_a_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$be (Bool_a_a_bool_fun_fun_bool_fun_fun_tree$ Bool_tree$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_ap$bf (A_a_bool_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$ (A_a_bool_fun_fun$) A_a_bool_fun_fun_tree$)
(declare-fun tree_pure$a (Bool) Bool_tree$)
(declare-fun tree_pure$b (A_a_fun$) A_a_fun_tree$)
(declare-fun tree_pure$c (A$) A_tree$)
(declare-fun tree_pure$d (A_bool_fun$) A_bool_fun_tree$)
(declare-fun tree_pure$e (Bool_bool_fun$) Bool_bool_fun_tree$)
(declare-fun tree_pure$f (Bool_a_bool_fun_fun$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_pure$g (A_a_bool_fun_fun_bool_fun$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$h (Bool_a_a_bool_fun_fun_fun$) Bool_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$i (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$j (Bool_a_fun$) Bool_a_fun_tree$)
(declare-fun tree_pure$k (Bool_a_a_fun_fun$) Bool_a_a_fun_fun_tree$)
(declare-fun tree_pure$l (A_a_a_fun_fun$) A_a_a_fun_fun_tree$)
(declare-fun tree_pure$m (A_a_bool_fun_a_fun_fun$) A_a_bool_fun_a_fun_fun_tree$)
(declare-fun tree_pure$n (A_a_a_bool_fun_fun_fun$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$o (A_bool_fun_a_fun$) A_bool_fun_a_fun_tree$)
(declare-fun tree_pure$p (A_bool_fun_bool_fun$) A_bool_fun_bool_fun_tree$)
(declare-fun tree_pure$q (A_a_bool_fun_bool_fun_fun$) A_a_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$r (A_a_bool_fun_a_bool_fun_fun_fun$) A_a_bool_fun_a_bool_fun_fun_fun_tree$)
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uu$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 Bool) (?v1 A_a_bool_fun_fun$)) (! (= (fun_app$b (uuf$ ?v0) ?v1) ?v0) :pattern ((fun_app$b (uuf$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 Bool) (?v1 A$)) (! (= (fun_app$ (uua$ ?v0) ?v1) ?v0) :pattern ((fun_app$ (uua$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 A_bool_fun_a_fun$) (?v1 A$)) (! (= (fun_app$c (uui$ ?v0) ?v1) ?v0) :pattern ((fun_app$c (uui$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool)) (! (= (fun_app$d (uud$ ?v0) ?v1) ?v0) :pattern ((fun_app$d (uud$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (! (= (fun_app$a (uub$ ?v0) ?v1) ?v0) :pattern ((fun_app$a (uub$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (! (= (fun_app$e (uug$ ?v0) ?v1) ?v0) :pattern ((fun_app$e (uug$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (! (= (fun_app$f (uuj$ ?v0) ?v1) ?v0) :pattern ((fun_app$f (uuj$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (! (= (fun_app$g (uuh$ ?v0) ?v1) ?v0) :pattern ((fun_app$g (uuh$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 A$) (?v1 A_bool_fun$)) (! (= (fun_app$h (uue$ ?v0) ?v1) ?v0) :pattern ((fun_app$h (uue$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$i (uuc$ ?v0) ?v1) ?v0) :pattern ((fun_app$i (uuc$ ?v0) ?v1)))) :named a10))
(assert (! (not (= (tree_ap$ (tree_ap$a (tree_pure$ uu$) t$) (tree_ap$b tree_I$ t$)) (tree_ap$ (tree_ap$c tree_K$ (tree_pure$a true)) t$))) :named a11))
(assert (! (= t$ t$a) :named a12))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (= (tree_ap$b (tree_pure$b ?v0) (tree_pure$c ?v1)) (tree_pure$c (fun_app$i ?v0 ?v1)))) :named a13))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (= (tree_ap$ (tree_pure$d ?v0) (tree_pure$c ?v1)) (tree_pure$a (fun_app$ ?v0 ?v1)))) :named a14))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool)) (= (tree_ap$d (tree_pure$e ?v0) (tree_pure$a ?v1)) (tree_pure$a (fun_app$j ?v0 ?v1)))) :named a15))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool)) (= (tree_ap$c (tree_pure$f ?v0) (tree_pure$a ?v1)) (tree_pure$d (fun_app$d ?v0 ?v1)))) :named a16))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (tree_ap$a (tree_pure$ ?v0) (tree_pure$c ?v1)) (tree_pure$d (fun_app$a ?v0 ?v1)))) :named a17))
(assert (! (forall ((?v0 A_a_bool_fun_fun_bool_fun$) (?v1 A_a_bool_fun_fun$)) (= (tree_ap$e (tree_pure$g ?v0) (tree_pure$ ?v1)) (tree_pure$a (fun_app$b ?v0 ?v1)))) :named a18))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$f (tree_pure$h ?v0) (tree_pure$a ?v1)) (tree_pure$ (fun_app$k ?v0 ?v1)))) :named a19))
(assert (! (forall ((?v0 A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) (?v1 A_a_bool_fun_fun$)) (= (tree_ap$g (tree_pure$i ?v0) (tree_pure$ ?v1)) (tree_pure$ (fun_app$e ?v0 ?v1)))) :named a20))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool)) (= (tree_ap$h (tree_pure$j ?v0) (tree_pure$a ?v1)) (tree_pure$c (fun_app$l ?v0 ?v1)))) :named a21))
(assert (! (forall ((?v0 Bool_a_a_fun_fun$) (?v1 Bool)) (= (tree_ap$i (tree_pure$k ?v0) (tree_pure$a ?v1)) (tree_pure$b (fun_app$m ?v0 ?v1)))) :named a22))
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a23))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a24))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (= (tree_pure$c ?v0) (tree_pure$c ?v1)) (= ?v0 ?v1))) :named a25))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (= (= (tree_pure$d ?v0) (tree_pure$d ?v1)) (= ?v0 ?v1))) :named a26))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$)) (= (= (tree_pure$b ?v0) (tree_pure$b ?v1)) (= ?v0 ?v1))) :named a27))
(assert (! (forall ((?v0 A_a_bool_fun_fun_bool_fun$) (?v1 A_a_bool_fun_fun_bool_fun$)) (= (= (tree_pure$g ?v0) (tree_pure$g ?v1)) (= ?v0 ?v1))) :named a28))
(assert (! (forall ((?v0 A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) (?v1 A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)) (= (= (tree_pure$i ?v0) (tree_pure$i ?v1)) (= ?v0 ?v1))) :named a29))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (= (tree_pure$l ?v0) (tree_pure$l ?v1)) (= ?v0 ?v1))) :named a30))
(assert (! (forall ((?v0 A_a_bool_fun_a_fun_fun$) (?v1 A_a_bool_fun_a_fun_fun$)) (= (= (tree_pure$m ?v0) (tree_pure$m ?v1)) (= ?v0 ?v1))) :named a31))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun$) (?v1 A_a_a_bool_fun_fun_fun$)) (= (= (tree_pure$n ?v0) (tree_pure$n ?v1)) (= ?v0 ?v1))) :named a32))
(assert (! (forall ((?v0 Bool_tree$) (?v1 A_tree$)) (= (tree_ap$ (tree_ap$c tree_K$ ?v0) ?v1) ?v0)) :named a33))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (tree_ap$b (tree_ap$j tree_K$a ?v0) ?v1) ?v0)) :named a34))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_tree$)) (= (tree_ap$a (tree_ap$k tree_K$b ?v0) ?v1) ?v0)) :named a35))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 Bool_tree$)) (= (tree_ap$c (tree_ap$l tree_K$c ?v0) ?v1) ?v0)) :named a36))
(assert (! (forall ((?v0 A_tree$) (?v1 A_bool_fun_tree$)) (= (tree_ap$m (tree_ap$n tree_K$d ?v0) ?v1) ?v0)) :named a37))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (tree_ap$j (tree_ap$o tree_K$e ?v0) ?v1) ?v0)) :named a38))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$) (?v1 A_tree$)) (= (tree_ap$p (tree_ap$q tree_K$f ?v0) ?v1) ?v0)) :named a39))
(assert (! (forall ((?v0 A_bool_fun_a_fun_tree$) (?v1 A_tree$)) (= (tree_ap$n (tree_ap$r tree_K$g ?v0) ?v1) ?v0)) :named a40))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$s (tree_ap$t tree_K$h ?v0) ?v1) ?v0)) :named a41))
(assert (! (forall ((?v0 A_bool_fun_a_bool_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$u (tree_ap$v tree_K$i ?v0) ?v1) ?v0)) :named a42))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$ ?v0 (tree_pure$c ?v2)) (tree_ap$ ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a43))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$b ?v0 (tree_pure$c ?v2)) (tree_ap$b ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a44))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$a ?v0 (tree_pure$c ?v2)) (tree_ap$a ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a45))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 Bool_a_bool_fun_fun_tree$)) (=> (forall ((?v2 Bool)) (= (tree_ap$c ?v0 (tree_pure$a ?v2)) (tree_ap$c ?v1 (tree_pure$a ?v2)))) (= ?v0 ?v1))) :named a46))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$j ?v0 (tree_pure$c ?v2)) (tree_ap$j ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a47))
(assert (! (forall ((?v0 A_a_bool_fun_bool_fun_fun_tree$) (?v1 A_a_bool_fun_bool_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$p ?v0 (tree_pure$c ?v2)) (tree_ap$p ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a48))
(assert (! (forall ((?v0 A_a_bool_fun_a_fun_fun_tree$) (?v1 A_a_bool_fun_a_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$n ?v0 (tree_pure$c ?v2)) (tree_ap$n ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a49))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$s ?v0 (tree_pure$c ?v2)) (tree_ap$s ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a50))
(assert (! (forall ((?v0 A_a_bool_fun_a_bool_fun_fun_fun_tree$) (?v1 A_a_bool_fun_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$u ?v0 (tree_pure$c ?v2)) (tree_ap$u ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a51))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_a_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$w ?v0 (tree_pure$c ?v2)) (tree_ap$w ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a52))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$ ?v0 ?v2) (tree_ap$ ?v1 ?v2))) (= ?v0 ?v1))) :named a53))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$b ?v0 ?v2) (tree_ap$b ?v1 ?v2))) (= ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$a ?v0 ?v2) (tree_ap$a ?v1 ?v2))) (= ?v0 ?v1))) :named a55))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 Bool_a_bool_fun_fun_tree$)) (=> (forall ((?v2 Bool_tree$)) (= (tree_ap$c ?v0 ?v2) (tree_ap$c ?v1 ?v2))) (= ?v0 ?v1))) :named a56))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$j ?v0 ?v2) (tree_ap$j ?v1 ?v2))) (= ?v0 ?v1))) :named a57))
(assert (! (forall ((?v0 A_a_bool_fun_bool_fun_fun_tree$) (?v1 A_a_bool_fun_bool_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$p ?v0 ?v2) (tree_ap$p ?v1 ?v2))) (= ?v0 ?v1))) :named a58))
(assert (! (forall ((?v0 A_a_bool_fun_a_fun_fun_tree$) (?v1 A_a_bool_fun_a_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$n ?v0 ?v2) (tree_ap$n ?v1 ?v2))) (= ?v0 ?v1))) :named a59))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$s ?v0 ?v2) (tree_ap$s ?v1 ?v2))) (= ?v0 ?v1))) :named a60))
(assert (! (forall ((?v0 A_a_bool_fun_a_bool_fun_fun_fun_tree$) (?v1 A_a_bool_fun_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$u ?v0 ?v2) (tree_ap$u ?v1 ?v2))) (= ?v0 ?v1))) :named a61))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_a_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$w ?v0 ?v2) (tree_ap$w ?v1 ?v2))) (= ?v0 ?v1))) :named a62))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 A_tree$) (?v2 Bool_tree$)) (= (tree_ap$d (tree_ap$x (tree_ap$y tree_C$ ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$c ?v0 ?v2) ?v1))) :named a63))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$a (tree_ap$g tree_C$a ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$a ?v0 ?v2) ?v1))) :named a64))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 Bool_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$c (tree_ap$z tree_C$b ?v0) ?v1) ?v2) (tree_ap$d (tree_ap$x ?v0 ?v2) ?v1))) :named a65))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$j (tree_ap$aa tree_C$c ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$j ?v0 ?v2) ?v1))) :named a66))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$a (tree_ap$s (tree_ap$ab tree_C$d ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$s ?v0 ?v2) ?v1))) :named a67))
(assert (! (forall ((?v0 A_bool_a_bool_fun_fun_fun_tree$) (?v1 Bool_tree$) (?v2 A_tree$)) (= (tree_ap$a (tree_ap$f (tree_ap$ac tree_C$e ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$ad ?v0 ?v2) ?v1))) :named a68))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 Bool_tree$)) (= (tree_ap$c (tree_ap$ad (tree_ap$ae tree_C$f ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$f ?v0 ?v2) ?v1))) :named a69))
(assert (! (forall ((?v0 Bool_bool_a_bool_fun_fun_fun_tree$) (?v1 Bool_tree$) (?v2 Bool_tree$)) (= (tree_ap$c (tree_ap$af (tree_ap$ag tree_C$g ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$af ?v0 ?v2) ?v1))) :named a70))
(assert (! (forall ((?v0 A_bool_fun_a_bool_fun_fun_tree$) (?v1 A_tree$) (?v2 A_bool_fun_tree$)) (= (tree_ap$ah (tree_ap$p (tree_ap$ai tree_C$h ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$aj ?v0 ?v2) ?v1))) :named a71))
(assert (! (forall ((?v0 A_bool_fun_a_a_fun_fun_tree$) (?v1 A_tree$) (?v2 A_bool_fun_tree$)) (= (tree_ap$m (tree_ap$n (tree_ap$ak tree_C$i ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$al ?v0 ?v2) ?v1))) :named a72))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 Bool_a_fun_tree$) (?v2 Bool_tree$)) (= (tree_ap$d (tree_ap$am (tree_ap$an tree_S$ ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$c ?v0 ?v2) (tree_ap$h ?v1 ?v2)))) :named a73))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$aj (tree_ap$ao tree_S$a ?v0) ?v1) ?v2) (tree_ap$d (tree_ap$x ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a74))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$ap (tree_ap$aq tree_S$b ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$a ?v0 ?v2) (tree_ap$b ?v1 ?v2)))) :named a75))
(assert (! (forall ((?v0 A_bool_a_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$al (tree_ap$ar tree_S$c ?v0) ?v1) ?v2) (tree_ap$h (tree_ap$as ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a76))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$at (tree_ap$au tree_S$d ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$j ?v0 ?v2) (tree_ap$b ?v1 ?v2)))) :named a77))
(assert (! (forall ((?v0 A_a_bool_fun_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$av (tree_ap$aw tree_S$e ?v0) ?v1) ?v2) (tree_ap$ah (tree_ap$p ?v0 ?v2) (tree_ap$a ?v1 ?v2)))) :named a78))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$a (tree_ap$ax (tree_ap$ay tree_S$f ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$s ?v0 ?v2) (tree_ap$b ?v1 ?v2)))) :named a79))
(assert (! (forall ((?v0 A_bool_a_bool_fun_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$a (tree_ap$k (tree_ap$az tree_S$g ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$ad ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a80))
(assert (! (forall ((?v0 A_a_bool_fun_a_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$ba (tree_ap$bb tree_S$h ?v0) ?v1) ?v2) (tree_ap$m (tree_ap$n ?v0 ?v2) (tree_ap$a ?v1 ?v2)))) :named a81))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun_tree$) (?v1 Bool_a_fun_tree$) (?v2 Bool_tree$)) (= (tree_ap$c (tree_ap$bc (tree_ap$bd tree_S$i ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$f ?v0 ?v2) (tree_ap$h ?v1 ?v2)))) :named a82))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$ (tree_pure$d ?v0) (node$a ?v1 ?v2 ?v3)) (node$bh (fun_app$ ?v0 ?v1) (tree_ap$ (tree_pure$d ?v0) ?v2) (tree_ap$ (tree_pure$d ?v0) ?v3)))) :named a83))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$b (tree_pure$b ?v0) (node$a ?v1 ?v2 ?v3)) (node$a (fun_app$i ?v0 ?v1) (tree_ap$b (tree_pure$b ?v0) ?v2) (tree_ap$b (tree_pure$b ?v0) ?v3)))) :named a84))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$c (tree_pure$f ?v0) (node$bh ?v1 ?v2 ?v3)) (node$ (fun_app$d ?v0 ?v1) (tree_ap$c (tree_pure$f ?v0) ?v2) (tree_ap$c (tree_pure$f ?v0) ?v3)))) :named a85))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$a (tree_pure$ ?v0) (node$a ?v1 ?v2 ?v3)) (node$ (fun_app$a ?v0 ?v1) (tree_ap$a (tree_pure$ ?v0) ?v2) (tree_ap$a (tree_pure$ ?v0) ?v3)))) :named a86))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$h (tree_pure$j ?v0) (node$bh ?v1 ?v2 ?v3)) (node$a (fun_app$l ?v0 ?v1) (tree_ap$h (tree_pure$j ?v0) ?v2) (tree_ap$h (tree_pure$j ?v0) ?v3)))) :named a87))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$d (tree_pure$e ?v0) (node$bh ?v1 ?v2 ?v3)) (node$bh (fun_app$j ?v0 ?v1) (tree_ap$d (tree_pure$e ?v0) ?v2) (tree_ap$d (tree_pure$e ?v0) ?v3)))) :named a88))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$j (tree_pure$l ?v0) (node$a ?v1 ?v2 ?v3)) (node$c (fun_app$g ?v0 ?v1) (tree_ap$j (tree_pure$l ?v0) ?v2) (tree_ap$j (tree_pure$l ?v0) ?v3)))) :named a89))
(assert (! (forall ((?v0 A_bool_fun_a_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun_tree$)) (= (tree_ap$m (tree_pure$o ?v0) (node$ ?v1 ?v2 ?v3)) (node$a (fun_app$h ?v0 ?v1) (tree_ap$m (tree_pure$o ?v0) ?v2) (tree_ap$m (tree_pure$o ?v0) ?v3)))) :named a90))
(assert (! (forall ((?v0 A_bool_fun_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun_tree$)) (= (tree_ap$ah (tree_pure$p ?v0) (node$ ?v1 ?v2 ?v3)) (node$bh (fun_app$n ?v0 ?v1) (tree_ap$ah (tree_pure$p ?v0) ?v2) (tree_ap$ah (tree_pure$p ?v0) ?v3)))) :named a91))
(assert (! (forall ((?v0 A_a_bool_fun_bool_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$p (tree_pure$q ?v0) (node$a ?v1 ?v2 ?v3)) (node$r (fun_app$o ?v0 ?v1) (tree_ap$p (tree_pure$q ?v0) ?v2) (tree_ap$p (tree_pure$q ?v0) ?v3)))) :named a92))
(assert (! (= tree_I$a (tree_pure$i id$)) :named a93))
(assert (! (= tree_I$ (tree_pure$b id$a)) :named a94))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_tree$)) (= (tree_ap$ (tree_pure$d ?v0) ?v1) (map_tree$ ?v0 ?v1))) :named a95))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_tree$)) (= (tree_ap$b (tree_pure$b ?v0) ?v1) (map_tree$a ?v0 ?v1))) :named a96))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool_tree$)) (= (tree_ap$c (tree_pure$f ?v0) ?v1) (map_tree$b ?v0 ?v1))) :named a97))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_tree$)) (= (tree_ap$a (tree_pure$ ?v0) ?v1) (map_tree$c ?v0 ?v1))) :named a98))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_tree$)) (= (tree_ap$j (tree_pure$l ?v0) ?v1) (map_tree$d ?v0 ?v1))) :named a99))
(assert (! (forall ((?v0 A_a_bool_fun_bool_fun_fun$) (?v1 A_tree$)) (= (tree_ap$p (tree_pure$q ?v0) ?v1) (map_tree$e ?v0 ?v1))) :named a100))
(assert (! (forall ((?v0 A_a_bool_fun_a_fun_fun$) (?v1 A_tree$)) (= (tree_ap$n (tree_pure$m ?v0) ?v1) (map_tree$f ?v0 ?v1))) :named a101))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun$) (?v1 A_tree$)) (= (tree_ap$s (tree_pure$n ?v0) ?v1) (map_tree$g ?v0 ?v1))) :named a102))
(assert (! (forall ((?v0 A_a_bool_fun_fun_bool_fun$) (?v1 A_a_bool_fun_fun_tree$)) (= (tree_ap$e (tree_pure$g ?v0) ?v1) (map_tree$h ?v0 ?v1))) :named a103))
(assert (! (forall ((?v0 A_a_bool_fun_a_bool_fun_fun_fun$) (?v1 A_tree$)) (= (tree_ap$u (tree_pure$r ?v0) ?v1) (map_tree$i ?v0 ?v1))) :named a104))
(assert (! (forall ((?v0 Bool)) (= (tree_pure$d (uua$ ?v0)) (tree_ap$c tree_K$ (tree_pure$a ?v0)))) :named a105))
(assert (! (forall ((?v0 A_bool_fun$)) (= (tree_pure$ (uub$ ?v0)) (tree_ap$k tree_K$b (tree_pure$d ?v0)))) :named a106))
(assert (! (forall ((?v0 A$)) (= (tree_pure$b (uuc$ ?v0)) (tree_ap$j tree_K$a (tree_pure$c ?v0)))) :named a107))
(assert (! (forall ((?v0 A_bool_fun$)) (= (tree_pure$f (uud$ ?v0)) (tree_ap$l tree_K$c (tree_pure$d ?v0)))) :named a108))
(assert (! (forall ((?v0 A$)) (= (tree_pure$o (uue$ ?v0)) (tree_ap$n tree_K$d (tree_pure$c ?v0)))) :named a109))
(assert (! (forall ((?v0 Bool)) (= (tree_pure$g (uuf$ ?v0)) (tree_ap$be tree_K$j (tree_pure$a ?v0)))) :named a110))
(assert (! (forall ((?v0 A_a_bool_fun_fun$)) (= (tree_pure$i (uug$ ?v0)) (tree_ap$bf tree_K$k (tree_pure$ ?v0)))) :named a111))
(assert (! (forall ((?v0 A_a_fun$)) (= (tree_pure$l (uuh$ ?v0)) (tree_ap$o tree_K$e (tree_pure$b ?v0)))) :named a112))
(assert (! (forall ((?v0 A_bool_fun_a_fun$)) (= (tree_pure$m (uui$ ?v0)) (tree_ap$r tree_K$g (tree_pure$o ?v0)))) :named a113))
(assert (! (forall ((?v0 A_a_bool_fun_fun$)) (= (tree_pure$n (uuj$ ?v0)) (tree_ap$t tree_K$h (tree_pure$ ?v0)))) :named a114))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$)) (= (tree_ap$g (tree_pure$i id$) ?v0) ?v0)) :named a115))
(assert (! (forall ((?v0 A_tree$)) (= (tree_ap$b (tree_pure$b id$a) ?v0) ?v0)) :named a116))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool)) (= (map_tree$j ?v0 (tree_pure$a ?v1)) (tree_pure$a (fun_app$j ?v0 ?v1)))) :named a117))
(assert (! (forall ((?v0 A_a_bool_fun_fun_bool_fun$) (?v1 A_a_bool_fun_fun$)) (= (map_tree$h ?v0 (tree_pure$ ?v1)) (tree_pure$a (fun_app$b ?v0 ?v1)))) :named a118))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun$) (?v1 Bool)) (= (map_tree$k ?v0 (tree_pure$a ?v1)) (tree_pure$ (fun_app$k ?v0 ?v1)))) :named a119))
(assert (! (forall ((?v0 A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) (?v1 A_a_bool_fun_fun$)) (= (map_tree$l ?v0 (tree_pure$ ?v1)) (tree_pure$ (fun_app$e ?v0 ?v1)))) :named a120))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool)) (= (map_tree$m ?v0 (tree_pure$a ?v1)) (tree_pure$c (fun_app$l ?v0 ?v1)))) :named a121))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (= (map_tree$ ?v0 (tree_pure$c ?v1)) (tree_pure$a (fun_app$ ?v0 ?v1)))) :named a122))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (= (map_tree$a ?v0 (tree_pure$c ?v1)) (tree_pure$c (fun_app$i ?v0 ?v1)))) :named a123))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool)) (= (map_tree$b ?v0 (tree_pure$a ?v1)) (tree_pure$d (fun_app$d ?v0 ?v1)))) :named a124))
(assert (! (forall ((?v0 Bool_a_a_fun_fun$) (?v1 Bool)) (= (map_tree$n ?v0 (tree_pure$a ?v1)) (tree_pure$b (fun_app$m ?v0 ?v1)))) :named a125))
(assert (! (forall ((?v0 A_bool_fun_bool_fun$) (?v1 A_bool_fun$)) (= (map_tree$o ?v0 (tree_pure$d ?v1)) (tree_pure$a (fun_app$n ?v0 ?v1)))) :named a126))
(check-sat)
;(get-unsat-core)
