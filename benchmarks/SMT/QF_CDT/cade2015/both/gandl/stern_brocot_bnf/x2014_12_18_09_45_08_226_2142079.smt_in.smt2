; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 91
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort Bool_tree$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun$ 0)
(declare-sort A_bool_a_fun_fun$ 0)
(declare-sort A_bool_fun_a_fun$ 0)
(declare-sort A_tree_a_tree_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort Bool_a_bool_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_bool_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_bool_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_fun$ 0)
(declare-sort Bool_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_tree_tree_a_tree_tree_fun$ 0)
(declare-sort A_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_tree_a_tree_a_tree_fun_fun$ 0)
(declare-sort Bool_a_fun_bool_bool_fun_fun$ 0)
(declare-sort Bool_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_tree_tree_tree_a_tree_tree_tree_fun$ 0)
(declare-sort Bool_bool_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_bool_a_bool_fun_fun_fun_bool_bool_fun_bool_a_bool_fun_fun_fun_fun$ 0)
(declare-codatatypes () ((A_bool_fun_tree$ (node$ (select$ A_bool_fun$) (selecta$ A_bool_fun_tree$) (selectb$ A_bool_fun_tree$)))
  (A_tree$ (node$a (root$ A$) (left$ A_tree$) (right$ A_tree$)))
  (Bool_a_bool_fun_fun_tree$ (node$b (selectc$ Bool_a_bool_fun_fun$) (selectd$ Bool_a_bool_fun_fun_tree$) (selecte$ Bool_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_tree$ (node$c (selectf$ A_a_bool_fun_fun$) (selectg$ A_a_bool_fun_fun_tree$) (selecth$ A_a_bool_fun_fun_tree$)))
  (A_a_fun_tree$ (node$d (selecti$ A_a_fun$) (selectj$ A_a_fun_tree$) (selectk$ A_a_fun_tree$)))
  (A_a_a_fun_fun_tree$ (node$e (selectl$ A_a_a_fun_fun$) (selectm$ A_a_a_fun_fun_tree$) (selectn$ A_a_a_fun_fun_tree$)))
  (Bool_bool_fun_tree$ (node$f (selecto$ Bool_bool_fun$) (selectp$ Bool_bool_fun_tree$) (selectq$ Bool_bool_fun_tree$)))
  (A_a_bool_fun_fun_bool_fun_tree$ (node$g (selectr$ A_a_bool_fun_fun_bool_fun$) (selects$ A_a_bool_fun_fun_bool_fun_tree$) (selectt$ A_a_bool_fun_fun_bool_fun_tree$)))
  (Bool_a_a_bool_fun_fun_fun_tree$ (node$h (selectu$ Bool_a_a_bool_fun_fun_fun$) (selectv$ Bool_a_a_bool_fun_fun_fun_tree$) (selectw$ Bool_a_a_bool_fun_fun_fun_tree$)))
  (Bool_a_a_a_fun_fun_fun_tree$ (node$i (selectx$ Bool_a_a_a_fun_fun_fun$) (selecty$ Bool_a_a_a_fun_fun_fun_tree$) (selectz$ Bool_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_bool_fun_tree$ (node$j (selecua$ A_a_a_fun_fun_bool_fun$) (selecub$ A_a_a_fun_fun_bool_fun_tree$) (selecuc$ A_a_a_fun_fun_bool_fun_tree$)))
  (A_a_a_fun_fun_a_a_bool_fun_fun_fun_tree$ (node$k (selecud$ A_a_a_fun_fun_a_a_bool_fun_fun_fun$) (selecue$ A_a_a_fun_fun_a_a_bool_fun_fun_fun_tree$) (selecuf$ A_a_a_fun_fun_a_a_bool_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ (node$l (selecug$ A_a_a_fun_fun_a_a_a_fun_fun_fun$) (selecuh$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) (selecui$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_a_fun_fun_tree$ (node$m (selecuj$ A_a_a_fun_a_fun_fun$) (selecuk$ A_a_a_fun_a_fun_fun_tree$) (selecul$ A_a_a_fun_a_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_tree$ (node$n (selecum$ A_a_a_bool_fun_fun_fun$) (selecun$ A_a_a_bool_fun_fun_fun_tree$) (selecuo$ A_a_a_bool_fun_fun_fun_tree$)))
  (A_tree_tree$ (node$o (root$a A_tree$) (left$a A_tree_tree$) (right$a A_tree_tree$)))
  (A_tree_tree_tree$ (node$p (root$b A_tree_tree$) (left$b A_tree_tree_tree$) (right$b A_tree_tree_tree$)))
  (A_tree_tree_tree_tree$ (node$q (root$c A_tree_tree_tree$) (left$c A_tree_tree_tree_tree$) (right$c A_tree_tree_tree_tree$)))
  (A_tree_tree_tree_a_tree_tree_tree_fun_tree$ (node$r (selecup$ A_tree_tree_tree_a_tree_tree_tree_fun$) (selecuq$ A_tree_tree_tree_a_tree_tree_tree_fun_tree$) (selecur$ A_tree_tree_tree_a_tree_tree_tree_fun_tree$)))
  (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ (node$s (selecus$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$) (selecut$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$) (selecuu$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)))
  (A_tree_tree_a_tree_tree_fun_tree$ (node$t (selecuv$ A_tree_tree_a_tree_tree_fun$) (selecuw$ A_tree_tree_a_tree_tree_fun_tree$) (selecux$ A_tree_tree_a_tree_tree_fun_tree$)))
  (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ (node$u (selecuy$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$) (selecuz$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$) (selecva$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)))
  (A_tree_a_tree_fun_tree$ (node$v (selecvb$ A_tree_a_tree_fun$) (selecvc$ A_tree_a_tree_fun_tree$) (selecvd$ A_tree_a_tree_fun_tree$)))
  (A_tree_a_tree_a_tree_fun_fun_tree$ (node$w (selecve$ A_tree_a_tree_a_tree_fun_fun$) (selecvf$ A_tree_a_tree_a_tree_fun_fun_tree$) (selecvg$ A_tree_a_tree_a_tree_fun_fun_tree$)))
  (A_bool_fun_bool_a_bool_fun_fun_fun_tree$ (node$x (selecvh$ A_bool_fun_bool_a_bool_fun_fun_fun$) (selecvi$ A_bool_fun_bool_a_bool_fun_fun_fun_tree$) (selecvj$ A_bool_fun_bool_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_a_bool_fun_fun_fun_tree$ (node$y (selecvk$ A_bool_fun_a_a_bool_fun_fun_fun$) (selecvl$ A_bool_fun_a_a_bool_fun_fun_fun_tree$) (selecvm$ A_bool_fun_a_a_bool_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_fun_tree$ (node$z (selecvn$ A_a_fun_a_a_a_fun_fun_fun$) (selecvo$ A_a_fun_a_a_a_fun_fun_fun_tree$) (selecvp$ A_a_fun_a_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_fun_tree$ (node$aa (selecvq$ A_a_fun_a_fun$) (selecvr$ A_a_fun_a_fun_tree$) (selecvs$ A_a_fun_a_fun_tree$)))
  (A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ (node$ab (selecvt$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun$) (selecvu$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$) (selecvv$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ (node$ac (selecvw$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun$) (selecvx$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) (selecvy$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_tree$ (node$ad (selecvz$ A_a_a_a_fun_fun_fun$) (selecwa$ A_a_a_a_fun_fun_fun_tree$) (selecwb$ A_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ (node$ae (selecwc$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun$) (selecwd$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$) (selecwe$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_bool_fun_fun_tree$ (node$af (selecwf$ A_a_fun_a_bool_fun_fun$) (selecwg$ A_a_fun_a_bool_fun_fun_tree$) (selecwh$ A_a_fun_a_bool_fun_fun_tree$)))
  (A_a_a_fun_a_bool_fun_fun_fun_tree$ (node$ag (selecwi$ A_a_a_fun_a_bool_fun_fun_fun$) (selecwj$ A_a_a_fun_a_bool_fun_fun_fun_tree$) (selecwk$ A_a_a_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_fun_a_bool_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$ (node$ah (selecwl$ A_a_fun_a_bool_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun$) (selecwm$ A_a_fun_a_bool_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$) (selecwn$ A_a_fun_a_bool_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_fun_a_a_fun_fun_fun_tree$ (node$ai (selecwo$ A_a_a_fun_a_a_fun_fun_fun$) (selecwp$ A_a_a_fun_a_a_fun_fun_fun_tree$) (selecwq$ A_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_tree$ (node$aj (selecwr$ A_a_fun_a_a_fun_fun$) (selecws$ A_a_fun_a_a_fun_fun_tree$) (selecwt$ A_a_fun_a_a_fun_fun_tree$)))
  (A_bool_bool_fun_fun_tree$ (node$ak (selecwu$ A_bool_bool_fun_fun$) (selecwv$ A_bool_bool_fun_fun_tree$) (selecww$ A_bool_bool_fun_fun_tree$)))
  (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ (node$al (selecwx$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun$) (selecwy$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$) (selecwz$ Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)))
  (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$ (node$am (selecxa$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun$) (selecxb$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$) (selecxc$ A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ (node$an (selecxd$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) (selecxe$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) (selecxf$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)))
  (Bool_bool_a_bool_fun_fun_fun_tree$ (node$ao (selecxg$ Bool_bool_a_bool_fun_fun_fun$) (selecxh$ Bool_bool_a_bool_fun_fun_fun_tree$) (selecxi$ Bool_bool_a_bool_fun_fun_fun_tree$)))
  (Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$ (node$ap (selecxj$ Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun$) (selecxk$ Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$) (selecxl$ Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_tree$ (node$aq (selecxm$ A_bool_a_bool_fun_fun_fun$) (selecxn$ A_bool_a_bool_fun_fun_fun_tree$) (selecxo$ A_bool_a_bool_fun_fun_fun_tree$)))
  (Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$ (node$ar (selecxp$ Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun$) (selecxq$ Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$) (selecxr$ Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$ (node$as (selecxs$ A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun$) (selecxt$ A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$) (selecxu$ A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ (node$at (selecxv$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$) (selecxw$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) (selecxx$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ (node$au (selecxy$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$) (selecxz$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$) (selecya$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ (node$av (selecyb$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun$) (selecyc$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$) (selecyd$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$)))
  (Bool_a_fun_tree$ (node$aw (selecye$ Bool_a_fun$) (selecyf$ Bool_a_fun_tree$) (selecyg$ Bool_a_fun_tree$)))
  (Bool_a_fun_bool_bool_fun_fun_tree$ (node$ax (selecyh$ Bool_a_fun_bool_bool_fun_fun$) (selecyi$ Bool_a_fun_bool_bool_fun_fun_tree$) (selecyj$ Bool_a_fun_bool_bool_fun_fun_tree$)))
  (Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$ (node$ay (selecyk$ Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun$) (selecyl$ Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$) (selecym$ Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_bool_fun_fun_tree$ (node$az (selecyn$ A_bool_fun_a_bool_fun_fun$) (selecyo$ A_bool_fun_a_bool_fun_fun_tree$) (selecyp$ A_bool_fun_a_bool_fun_fun_tree$)))
  (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$ba (selecyq$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) (selecyr$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (selecys$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ (node$bb (selecyt$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$) (selecyu$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) (selecyv$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_a_fun_fun_tree$ (node$bc (selecyw$ A_bool_a_fun_fun$) (selecyx$ A_bool_a_fun_fun_tree$) (selecyy$ A_bool_a_fun_fun_tree$)))
  (A_bool_fun_a_a_fun_fun_tree$ (node$bd (selecyz$ A_bool_fun_a_a_fun_fun$) (selecza$ A_bool_fun_a_a_fun_fun_tree$) (seleczb$ A_bool_fun_a_a_fun_fun_tree$)))
  (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ (node$be (seleczc$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$) (seleczd$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$) (selecze$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$bf (seleczf$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$) (seleczg$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) (seleczh$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_bool_fun_bool_fun_fun_tree$ (node$bg (seleczi$ A_a_bool_fun_bool_fun_fun$) (seleczj$ A_a_bool_fun_bool_fun_fun_tree$) (seleczk$ A_a_bool_fun_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_bool_fun_fun_tree$ (node$bh (seleczl$ A_a_bool_fun_fun_a_bool_fun_fun$) (seleczm$ A_a_bool_fun_fun_a_bool_fun_fun_tree$) (seleczn$ A_a_bool_fun_fun_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$bi (seleczo$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$) (seleczp$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) (seleczq$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_bool_fun_tree$ (node$bj (seleczr$ A_bool_fun_bool_fun$) (seleczs$ A_bool_fun_bool_fun_tree$) (seleczt$ A_bool_fun_bool_fun_tree$)))
  (A_a_a_fun_bool_fun_fun_tree$ (node$bk (seleczu$ A_a_a_fun_bool_fun_fun$) (seleczv$ A_a_a_fun_bool_fun_fun_tree$) (seleczw$ A_a_a_fun_bool_fun_fun_tree$)))
  (A_a_a_fun_fun_a_bool_fun_fun_tree$ (node$bl (seleczx$ A_a_a_fun_fun_a_bool_fun_fun$) (seleczy$ A_a_a_fun_fun_a_bool_fun_fun_tree$) (seleczz$ A_a_a_fun_fun_a_bool_fun_fun_tree$)))
  (A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$ (node$bm (seledaa$ A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$) (seledab$ A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$) (seledac$ A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_fun_bool_fun_tree$ (node$bn (seledad$ A_a_fun_bool_fun$) (seledae$ A_a_fun_bool_fun_tree$) (seledaf$ A_a_fun_bool_fun_tree$)))
  (Bool_bool_fun_bool_a_bool_fun_fun_fun_tree$ (node$bo (seledag$ Bool_bool_fun_bool_a_bool_fun_fun_fun$) (seledah$ Bool_bool_fun_bool_a_bool_fun_fun_fun_tree$) (seledai$ Bool_bool_fun_bool_a_bool_fun_fun_fun_tree$)))
  (Bool_bool_a_bool_fun_fun_fun_bool_bool_fun_bool_a_bool_fun_fun_fun_fun_tree$ (node$bp (seledaj$ Bool_bool_a_bool_fun_fun_fun_bool_bool_fun_bool_a_bool_fun_fun_fun_fun$) (seledak$ Bool_bool_a_bool_fun_fun_fun_bool_bool_fun_bool_a_bool_fun_fun_fun_fun_tree$) (seledal$ Bool_bool_a_bool_fun_fun_fun_bool_bool_fun_bool_a_bool_fun_fun_fun_fun_tree$)))
  (Bool_a_fun_bool_a_bool_fun_fun_fun_tree$ (node$bq (seledam$ Bool_a_fun_bool_a_bool_fun_fun_fun$) (seledan$ Bool_a_fun_bool_a_bool_fun_fun_fun_tree$) (seledao$ Bool_a_fun_bool_a_bool_fun_fun_fun_tree$)))
  (Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$ (node$br (seledap$ Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun$) (seledaq$ Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$) (seledar$ Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$bs (seledas$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$) (seledat$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) (seledau$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_fun_tree$ (node$bt (seledav$ A_bool_fun_a_fun$) (seledaw$ A_bool_fun_a_fun_tree$) (seledax$ A_bool_fun_a_fun_tree$)))))
(declare-fun a$ () A_tree$)
(declare-fun b$ () A_tree$)
(declare-fun c$ () A_tree$)
(declare-fun uu$ () A_a_bool_fun_fun$)
(declare-fun plus$ () A_a_a_fun_fun$)
(declare-fun plus$a () A_tree_a_tree_a_tree_fun_fun$)
(declare-fun plus$b (A_tree_tree_tree_tree$ A_tree_tree_tree_tree$) A_tree_tree_tree_tree$)
(declare-fun plus$c () A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$)
(declare-fun plus$d () A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$)
(declare-fun node$bu (Bool Bool_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_C$ () Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$)
(declare-fun tree_K$ () Bool_a_bool_fun_fun_tree$)
(declare-fun tree_S$ () Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun fun_app$ (A_bool_fun$ A$) Bool)
(declare-fun tree_C$a () A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_C$b () A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_C$c () A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_C$d () Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$e () Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$f () A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$g () A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$h () A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_C$i () A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$)
(declare-fun tree_K$a () A_a_a_fun_fun_tree$)
(declare-fun tree_K$b () A_bool_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_K$c () A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_K$d () A_a_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_K$e () A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_K$f () A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$)
(declare-fun tree_K$g () A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_K$h () A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_K$i () A_a_fun_a_bool_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$a () A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$b () A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$c () A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$d () A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$e () A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$f () A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$g () Bool_bool_a_bool_fun_fun_fun_bool_bool_fun_bool_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$h () Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$i () A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$ (A_bool_fun_tree$ A_tree$) Bool_tree$)
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$b (A_a_fun$ A$) A$)
(declare-fun fun_app$c (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$d (Bool_a_bool_fun_fun$ Bool) A_bool_fun$)
(declare-fun fun_app$e (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$f (A_a_bool_fun_fun_bool_fun$ A_a_bool_fun_fun$) Bool)
(declare-fun fun_app$g (Bool_a_a_bool_fun_fun_fun$ Bool) A_a_bool_fun_fun$)
(declare-fun fun_app$h (Bool_a_a_a_fun_fun_fun$ Bool) A_a_a_fun_fun$)
(declare-fun fun_app$i (A_a_a_fun_fun_bool_fun$ A_a_a_fun_fun$) Bool)
(declare-fun fun_app$j (A_tree_a_tree_fun$ A_tree$) A_tree$)
(declare-fun fun_app$k (A_tree_a_tree_a_tree_fun_fun$ A_tree$) A_tree_a_tree_fun$)
(declare-fun fun_app$l (A_tree_tree_tree_a_tree_tree_tree_fun$ A_tree_tree_tree$) A_tree_tree_tree$)
(declare-fun fun_app$m (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ A_tree_tree_tree$) A_tree_tree_tree_a_tree_tree_tree_fun$)
(declare-fun fun_app$n (A_tree_tree_a_tree_tree_fun$ A_tree_tree$) A_tree_tree$)
(declare-fun fun_app$o (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ A_tree_tree$) A_tree_tree_a_tree_tree_fun$)
(declare-fun fun_app$p (Bool_a_fun$ Bool) A$)
(declare-fun fun_app$q (A_a_fun_a_fun$ A_a_fun$) A$)
(declare-fun fun_app$r (A_a_fun_bool_fun$ A_a_fun$) Bool)
(declare-fun fun_app$s (A_bool_fun_a_fun$ A_bool_fun$) A$)
(declare-fun tree_ap$a (Bool_a_bool_fun_fun_tree$ Bool_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$b (A_a_bool_fun_fun_tree$ A_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$c (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun tree_ap$d (A_a_a_fun_fun_tree$ A_tree$) A_a_fun_tree$)
(declare-fun tree_ap$e (Bool_bool_fun_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_ap$f (A_a_bool_fun_fun_bool_fun_tree$ A_a_bool_fun_fun_tree$) Bool_tree$)
(declare-fun tree_ap$g (Bool_a_a_bool_fun_fun_fun_tree$ Bool_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$h (Bool_a_a_a_fun_fun_fun_tree$ Bool_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$i (A_a_a_fun_fun_bool_fun_tree$ A_a_a_fun_fun_tree$) Bool_tree$)
(declare-fun tree_ap$j (A_tree_tree_tree_a_tree_tree_tree_fun_tree$ A_tree_tree_tree_tree$) A_tree_tree_tree_tree$)
(declare-fun tree_ap$k (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ A_tree_tree_tree_tree$) A_tree_tree_tree_a_tree_tree_tree_fun_tree$)
(declare-fun tree_ap$l (A_tree_tree_a_tree_tree_fun_tree$ A_tree_tree_tree$) A_tree_tree_tree$)
(declare-fun tree_ap$m (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ A_tree_tree_tree$) A_tree_tree_a_tree_tree_fun_tree$)
(declare-fun tree_ap$n (A_tree_a_tree_fun_tree$ A_tree_tree$) A_tree_tree$)
(declare-fun tree_ap$o (A_tree_a_tree_a_tree_fun_fun_tree$ A_tree_tree$) A_tree_a_tree_fun_tree$)
(declare-fun tree_ap$p (A_bool_fun_bool_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$q (A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$r (A_a_fun_a_a_a_fun_fun_fun_tree$ A_a_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$s (A_a_fun_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun tree_ap$t (A_a_a_fun_a_fun_fun_tree$ A_tree$) A_a_fun_a_fun_tree$)
(declare-fun tree_ap$u (A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_fun_tree$) A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_ap$v (A_a_a_bool_fun_fun_fun_tree$ A_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$w (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$x (A_a_a_a_fun_fun_fun_tree$ A_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$y (A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$z (A_a_a_fun_a_bool_fun_fun_fun_tree$ A_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$aa (A_a_fun_a_bool_fun_fun_a_a_a_fun_a_bool_fun_fun_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$) A_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ab (A_a_a_fun_a_a_fun_fun_fun_tree$ A_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$ac (A_bool_bool_fun_fun_tree$ A_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$ad (Bool_a_bool_fun_fun_a_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) A_bool_bool_fun_fun_tree$)
(declare-fun tree_ap$ae (A_bool_bool_fun_fun_bool_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$af (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ag (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$ah (Bool_bool_a_bool_fun_fun_fun_tree$ Bool_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ai (Bool_bool_a_bool_fun_fun_fun_bool_bool_a_bool_fun_fun_fun_fun_tree$ Bool_bool_a_bool_fun_fun_fun_tree$) Bool_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$aj (A_bool_a_bool_fun_fun_fun_tree$ A_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ak (Bool_a_a_bool_fun_fun_fun_a_bool_a_bool_fun_fun_fun_fun_tree$ Bool_a_a_bool_fun_fun_fun_tree$) A_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$al (A_bool_a_bool_fun_fun_fun_bool_a_a_bool_fun_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_tree$) Bool_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$am (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$an (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$) A_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$ao (A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_ap$ap (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$aq (Bool_a_fun_bool_bool_fun_fun_tree$ Bool_a_fun_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$ar (Bool_a_bool_fun_fun_bool_a_fun_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) Bool_a_fun_bool_bool_fun_fun_tree$)
(declare-fun tree_ap$as (Bool_a_fun_tree$ Bool_tree$) A_tree$)
(declare-fun tree_ap$at (A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$au (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$av (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$aw (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ax (A_bool_fun_a_a_fun_fun_tree$ A_bool_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$ay (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ A_bool_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$az (A_bool_a_fun_fun_tree$ A_tree$) Bool_a_fun_tree$)
(declare-fun tree_ap$ba (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$bb (A_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$bc (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bd (A_bool_fun_bool_fun_tree$ A_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$be (A_a_bool_fun_bool_fun_fun_tree$ A_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$bf (A_a_a_fun_fun_a_bool_fun_fun_tree$ A_a_a_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$bg (A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$ A_a_a_fun_bool_fun_fun_tree$) A_a_a_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bh (A_a_fun_bool_fun_tree$ A_a_fun_tree$) Bool_tree$)
(declare-fun tree_ap$bi (A_a_a_fun_bool_fun_fun_tree$ A_tree$) A_a_fun_bool_fun_tree$)
(declare-fun tree_ap$bj (Bool_bool_fun_bool_a_bool_fun_fun_fun_tree$ Bool_bool_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bk (Bool_bool_a_bool_fun_fun_fun_bool_bool_fun_bool_a_bool_fun_fun_fun_fun_tree$ Bool_bool_a_bool_fun_fun_fun_tree$) Bool_bool_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bl (Bool_a_fun_bool_a_bool_fun_fun_fun_tree$ Bool_a_fun_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bm (Bool_a_a_bool_fun_fun_fun_bool_a_fun_bool_a_bool_fun_fun_fun_fun_tree$ Bool_a_a_bool_fun_fun_fun_tree$) Bool_a_fun_bool_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bn (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bo (A_bool_fun_a_fun_tree$ A_bool_fun_tree$) A_tree$)
(declare-fun tree_pure$ (A_a_bool_fun_fun$) A_a_bool_fun_fun_tree$)
(declare-fun tree_pure$a (Bool) Bool_tree$)
(declare-fun tree_pure$b (A_a_a_fun_fun$) A_a_a_fun_fun_tree$)
(declare-fun tree_pure$c (A_a_fun$) A_a_fun_tree$)
(declare-fun tree_pure$d (A$) A_tree$)
(declare-fun tree_pure$e (A_bool_fun$) A_bool_fun_tree$)
(declare-fun tree_pure$f (Bool_bool_fun$) Bool_bool_fun_tree$)
(declare-fun tree_pure$g (Bool_a_bool_fun_fun$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_pure$h (A_a_bool_fun_fun_bool_fun$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$i (Bool_a_a_bool_fun_fun_fun$) Bool_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$j (Bool_a_a_a_fun_fun_fun$) Bool_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$k (A_a_a_fun_fun_bool_fun$) A_a_a_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$l (A_a_a_fun_fun_a_a_bool_fun_fun_fun$) A_a_a_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$m (A_a_a_fun_fun_a_a_a_fun_fun_fun$) A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$n (A_a_a_fun_a_fun_fun$) A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_pure$o (A_a_a_bool_fun_fun_fun$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$p (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$) A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$q (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$) A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$r (A_tree_a_tree_a_tree_fun_fun$) A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun tree_pure$s (Bool_a_fun$) Bool_a_fun_tree$)
(declare-fun tree_pure$t (A_a_fun_a_fun$) A_a_fun_a_fun_tree$)
(declare-fun tree_pure$u (A_a_fun_bool_fun$) A_a_fun_bool_fun_tree$)
(declare-fun tree_pure$v (A_bool_fun_a_fun$) A_bool_fun_a_fun_tree$)
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uu$ ?v0) ?v1)))) :named a0))
(assert (! (not (= (tree_ap$ (tree_ap$a tree_K$ (tree_ap$ (tree_ap$b (tree_pure$ uu$) b$) c$)) a$) (tree_pure$a true))) :named a1))
(assert (! (= (tree_ap$ (tree_ap$b (tree_pure$ uu$) (tree_ap$c (tree_ap$d (tree_pure$b plus$) a$) b$)) (tree_ap$c (tree_ap$d (tree_pure$b plus$) a$) c$)) (tree_pure$a true)) :named a2))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (= (tree_ap$c (tree_pure$c ?v0) (tree_pure$d ?v1)) (tree_pure$d (fun_app$b ?v0 ?v1)))) :named a3))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (= (tree_ap$ (tree_pure$e ?v0) (tree_pure$d ?v1)) (tree_pure$a (fun_app$ ?v0 ?v1)))) :named a4))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool)) (= (tree_ap$e (tree_pure$f ?v0) (tree_pure$a ?v1)) (tree_pure$a (fun_app$c ?v0 ?v1)))) :named a5))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool)) (= (tree_ap$a (tree_pure$g ?v0) (tree_pure$a ?v1)) (tree_pure$e (fun_app$d ?v0 ?v1)))) :named a6))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (tree_ap$b (tree_pure$ ?v0) (tree_pure$d ?v1)) (tree_pure$e (fun_app$a ?v0 ?v1)))) :named a7))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$)) (= (tree_ap$d (tree_pure$b ?v0) (tree_pure$d ?v1)) (tree_pure$c (fun_app$e ?v0 ?v1)))) :named a8))
(assert (! (forall ((?v0 A_a_bool_fun_fun_bool_fun$) (?v1 A_a_bool_fun_fun$)) (= (tree_ap$f (tree_pure$h ?v0) (tree_pure$ ?v1)) (tree_pure$a (fun_app$f ?v0 ?v1)))) :named a9))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$g (tree_pure$i ?v0) (tree_pure$a ?v1)) (tree_pure$ (fun_app$g ?v0 ?v1)))) :named a10))
(assert (! (forall ((?v0 Bool_a_a_a_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$h (tree_pure$j ?v0) (tree_pure$a ?v1)) (tree_pure$b (fun_app$h ?v0 ?v1)))) :named a11))
(assert (! (forall ((?v0 A_a_a_fun_fun_bool_fun$) (?v1 A_a_a_fun_fun$)) (= (tree_ap$i (tree_pure$k ?v0) (tree_pure$b ?v1)) (tree_pure$a (fun_app$i ?v0 ?v1)))) :named a12))
(assert (! (= (fun_app$j (fun_app$k plus$a a$) b$) (fun_app$j (fun_app$k plus$a a$) c$)) :named a13))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (= ?v0 ?v1) (= (tree_ap$ (tree_ap$b (tree_pure$ uu$) ?v0) ?v1) (tree_pure$a true)))) :named a14))
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a15))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a16))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (= (tree_pure$b ?v0) (tree_pure$b ?v1)) (= ?v0 ?v1))) :named a17))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (= (tree_pure$d ?v0) (tree_pure$d ?v1)) (= ?v0 ?v1))) :named a18))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (= (= (tree_pure$e ?v0) (tree_pure$e ?v1)) (= ?v0 ?v1))) :named a19))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$)) (= (= (tree_pure$c ?v0) (tree_pure$c ?v1)) (= ?v0 ?v1))) :named a20))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_bool_fun_fun_fun$) (?v1 A_a_a_fun_fun_a_a_bool_fun_fun_fun$)) (= (= (tree_pure$l ?v0) (tree_pure$l ?v1)) (= ?v0 ?v1))) :named a21))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$) (?v1 A_a_a_fun_fun_a_a_a_fun_fun_fun$)) (= (= (tree_pure$m ?v0) (tree_pure$m ?v1)) (= ?v0 ?v1))) :named a22))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$) (?v1 A_a_a_fun_a_fun_fun$)) (= (= (tree_pure$n ?v0) (tree_pure$n ?v1)) (= ?v0 ?v1))) :named a23))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun$) (?v1 A_a_a_bool_fun_fun_fun$)) (= (= (tree_pure$o ?v0) (tree_pure$o ?v1)) (= ?v0 ?v1))) :named a24))
(assert (! (forall ((?v0 A_tree_tree_tree_tree$) (?v1 A_tree_tree_tree_tree$)) (! (= (plus$b ?v0 ?v1) (tree_ap$j (tree_ap$k (tree_pure$p plus$c) ?v0) ?v1)) :pattern ((plus$b ?v0 ?v1)))) :named a25))
(assert (! (forall ((?v0 A_tree_tree_tree$) (?v1 A_tree_tree_tree$)) (! (= (fun_app$l (fun_app$m plus$c ?v0) ?v1) (tree_ap$l (tree_ap$m (tree_pure$q plus$d) ?v0) ?v1)) :pattern ((fun_app$l (fun_app$m plus$c ?v0) ?v1)))) :named a26))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (! (= (fun_app$n (fun_app$o plus$d ?v0) ?v1) (tree_ap$n (tree_ap$o (tree_pure$r plus$a) ?v0) ?v1)) :pattern ((fun_app$n (fun_app$o plus$d ?v0) ?v1)))) :named a27))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (! (= (fun_app$j (fun_app$k plus$a ?v0) ?v1) (tree_ap$c (tree_ap$d (tree_pure$b plus$) ?v0) ?v1)) :pattern ((fun_app$j (fun_app$k plus$a ?v0) ?v1)))) :named a28))
(assert (! (forall ((?v0 Bool_tree$) (?v1 A_tree$)) (= (tree_ap$ (tree_ap$a tree_K$ ?v0) ?v1) ?v0)) :named a29))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (tree_ap$c (tree_ap$d tree_K$a ?v0) ?v1) ?v0)) :named a30))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 Bool_tree$)) (= (tree_ap$a (tree_ap$p tree_K$b ?v0) ?v1) ?v0)) :named a31))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_tree$)) (= (tree_ap$b (tree_ap$q tree_K$c ?v0) ?v1) ?v0)) :named a32))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (tree_ap$d (tree_ap$r tree_K$d ?v0) ?v1) ?v0)) :named a33))
(assert (! (forall ((?v0 A_tree$) (?v1 A_a_fun_tree$)) (= (tree_ap$s (tree_ap$t tree_K$e ?v0) ?v1) ?v0)) :named a34))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_tree$)) (= (tree_ap$t (tree_ap$u tree_K$f ?v0) ?v1) ?v0)) :named a35))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$v (tree_ap$w tree_K$g ?v0) ?v1) ?v0)) :named a36))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$x (tree_ap$y tree_K$h ?v0) ?v1) ?v0)) :named a37))
(assert (! (forall ((?v0 A_a_fun_a_bool_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$z (tree_ap$aa tree_K$i ?v0) ?v1) ?v0)) :named a38))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$ ?v0 (tree_pure$d ?v2)) (tree_ap$ ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a39))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$c ?v0 (tree_pure$d ?v2)) (tree_ap$c ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a40))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$b ?v0 (tree_pure$d ?v2)) (tree_ap$b ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a41))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$d ?v0 (tree_pure$d ?v2)) (tree_ap$d ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a42))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 Bool_a_bool_fun_fun_tree$)) (=> (forall ((?v2 Bool)) (= (tree_ap$a ?v0 (tree_pure$a ?v2)) (tree_ap$a ?v1 (tree_pure$a ?v2)))) (= ?v0 ?v1))) :named a43))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$) (?v1 A_a_a_fun_a_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$t ?v0 (tree_pure$d ?v2)) (tree_ap$t ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a44))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$v ?v0 (tree_pure$d ?v2)) (tree_ap$v ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a45))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_a_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$x ?v0 (tree_pure$d ?v2)) (tree_ap$x ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a46))
(assert (! (forall ((?v0 A_a_a_fun_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$z ?v0 (tree_pure$d ?v2)) (tree_ap$z ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a47))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$ab ?v0 (tree_pure$d ?v2)) (tree_ap$ab ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a48))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$ ?v0 ?v2) (tree_ap$ ?v1 ?v2))) (= ?v0 ?v1))) :named a49))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$c ?v0 ?v2) (tree_ap$c ?v1 ?v2))) (= ?v0 ?v1))) :named a50))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 Bool_a_bool_fun_fun_tree$)) (=> (forall ((?v2 Bool_tree$)) (= (tree_ap$a ?v0 ?v2) (tree_ap$a ?v1 ?v2))) (= ?v0 ?v1))) :named a51))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$b ?v0 ?v2) (tree_ap$b ?v1 ?v2))) (= ?v0 ?v1))) :named a52))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$d ?v0 ?v2) (tree_ap$d ?v1 ?v2))) (= ?v0 ?v1))) :named a53))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$) (?v1 A_a_a_fun_a_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$t ?v0 ?v2) (tree_ap$t ?v1 ?v2))) (= ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$v ?v0 ?v2) (tree_ap$v ?v1 ?v2))) (= ?v0 ?v1))) :named a55))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_a_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$x ?v0 ?v2) (tree_ap$x ?v1 ?v2))) (= ?v0 ?v1))) :named a56))
(assert (! (forall ((?v0 A_a_a_fun_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$z ?v0 ?v2) (tree_ap$z ?v1 ?v2))) (= ?v0 ?v1))) :named a57))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$ab ?v0 ?v2) (tree_ap$ab ?v1 ?v2))) (= ?v0 ?v1))) :named a58))
(assert (! (= (tree_ap$ (tree_ap$b (tree_pure$ uu$) (fun_app$j (fun_app$k plus$a a$) b$)) (fun_app$j (fun_app$k plus$a a$) c$)) (tree_pure$a true)) :named a59))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 A_tree$) (?v2 Bool_tree$)) (= (tree_ap$e (tree_ap$ac (tree_ap$ad tree_C$ ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$a ?v0 ?v2) ?v1))) :named a60))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 Bool_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$a (tree_ap$ae tree_C$a ?v0) ?v1) ?v2) (tree_ap$e (tree_ap$ac ?v0 ?v2) ?v1))) :named a61))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$b (tree_ap$af tree_C$b ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$b ?v0 ?v2) ?v1))) :named a62))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$c (tree_ap$d (tree_ap$ag tree_C$c ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$d ?v0 ?v2) ?v1))) :named a63))
(assert (! (forall ((?v0 Bool_bool_a_bool_fun_fun_fun_tree$) (?v1 Bool_tree$) (?v2 Bool_tree$)) (= (tree_ap$a (tree_ap$ah (tree_ap$ai tree_C$d ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$ah ?v0 ?v2) ?v1))) :named a64))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 Bool_tree$)) (= (tree_ap$a (tree_ap$aj (tree_ap$ak tree_C$e ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$g ?v0 ?v2) ?v1))) :named a65))
(assert (! (forall ((?v0 A_bool_a_bool_fun_fun_fun_tree$) (?v1 Bool_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$g (tree_ap$al tree_C$f ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$aj ?v0 ?v2) ?v1))) :named a66))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$v (tree_ap$am tree_C$g ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$v ?v0 ?v2) ?v1))) :named a67))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$d (tree_ap$x (tree_ap$an tree_C$h ?v0) ?v1) ?v2) (tree_ap$d (tree_ap$x ?v0 ?v2) ?v1))) :named a68))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$) (?v1 A_tree$) (?v2 A_a_fun_tree$)) (= (tree_ap$s (tree_ap$t (tree_ap$ao tree_C$i ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$ap ?v0 ?v2) ?v1))) :named a69))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (= (= (fun_app$b (fun_app$e plus$ ?v0) ?v1) (fun_app$b (fun_app$e plus$ ?v2) ?v1)) (= ?v0 ?v2))) :named a70))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (= (= (fun_app$b (fun_app$e plus$ ?v0) ?v1) (fun_app$b (fun_app$e plus$ ?v0) ?v2)) (= ?v1 ?v2))) :named a71))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 Bool_a_fun_tree$) (?v2 Bool_tree$)) (= (tree_ap$e (tree_ap$aq (tree_ap$ar tree_S$ ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$a ?v0 ?v2) (tree_ap$as ?v1 ?v2)))) :named a72))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$at (tree_ap$au tree_S$a ?v0) ?v1) ?v2) (tree_ap$e (tree_ap$ac ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a73))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$av (tree_ap$aw tree_S$b ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$b ?v0 ?v2) (tree_ap$c ?v1 ?v2)))) :named a74))
(assert (! (forall ((?v0 A_bool_a_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$c (tree_ap$ax (tree_ap$ay tree_S$c ?v0) ?v1) ?v2) (tree_ap$as (tree_ap$az ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a75))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$c (tree_ap$ap (tree_ap$ba tree_S$d ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$d ?v0 ?v2) (tree_ap$c ?v1 ?v2)))) :named a76))
(assert (! (forall ((?v0 A_a_bool_fun_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$bb (tree_ap$bc tree_S$e ?v0) ?v1) ?v2) (tree_ap$bd (tree_ap$be ?v0 ?v2) (tree_ap$b ?v1 ?v2)))) :named a77))
(assert (! (forall ((?v0 A_a_a_fun_bool_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$bf (tree_ap$bg tree_S$f ?v0) ?v1) ?v2) (tree_ap$bh (tree_ap$bi ?v0 ?v2) (tree_ap$d ?v1 ?v2)))) :named a78))
(assert (! (forall ((?v0 Bool_bool_a_bool_fun_fun_fun_tree$) (?v1 Bool_bool_fun_tree$) (?v2 Bool_tree$)) (= (tree_ap$a (tree_ap$bj (tree_ap$bk tree_S$g ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$ah ?v0 ?v2) (tree_ap$e ?v1 ?v2)))) :named a79))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun_tree$) (?v1 Bool_a_fun_tree$) (?v2 Bool_tree$)) (= (tree_ap$a (tree_ap$bl (tree_ap$bm tree_S$h ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$g ?v0 ?v2) (tree_ap$as ?v1 ?v2)))) :named a80))
(assert (! (forall ((?v0 A_bool_a_bool_fun_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$q (tree_ap$bn tree_S$i ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$aj ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a81))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$ (tree_pure$e ?v0) (node$a ?v1 ?v2 ?v3)) (node$bu (fun_app$ ?v0 ?v1) (tree_ap$ (tree_pure$e ?v0) ?v2) (tree_ap$ (tree_pure$e ?v0) ?v3)))) :named a82))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$c (tree_pure$c ?v0) (node$a ?v1 ?v2 ?v3)) (node$a (fun_app$b ?v0 ?v1) (tree_ap$c (tree_pure$c ?v0) ?v2) (tree_ap$c (tree_pure$c ?v0) ?v3)))) :named a83))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$a (tree_pure$g ?v0) (node$bu ?v1 ?v2 ?v3)) (node$ (fun_app$d ?v0 ?v1) (tree_ap$a (tree_pure$g ?v0) ?v2) (tree_ap$a (tree_pure$g ?v0) ?v3)))) :named a84))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$b (tree_pure$ ?v0) (node$a ?v1 ?v2 ?v3)) (node$ (fun_app$a ?v0 ?v1) (tree_ap$b (tree_pure$ ?v0) ?v2) (tree_ap$b (tree_pure$ ?v0) ?v3)))) :named a85))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$d (tree_pure$b ?v0) (node$a ?v1 ?v2 ?v3)) (node$d (fun_app$e ?v0 ?v1) (tree_ap$d (tree_pure$b ?v0) ?v2) (tree_ap$d (tree_pure$b ?v0) ?v3)))) :named a86))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$as (tree_pure$s ?v0) (node$bu ?v1 ?v2 ?v3)) (node$a (fun_app$p ?v0 ?v1) (tree_ap$as (tree_pure$s ?v0) ?v2) (tree_ap$as (tree_pure$s ?v0) ?v3)))) :named a87))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$e (tree_pure$f ?v0) (node$bu ?v1 ?v2 ?v3)) (node$bu (fun_app$c ?v0 ?v1) (tree_ap$e (tree_pure$f ?v0) ?v2) (tree_ap$e (tree_pure$f ?v0) ?v3)))) :named a88))
(assert (! (forall ((?v0 A_a_fun_a_fun$) (?v1 A_a_fun$) (?v2 A_a_fun_tree$) (?v3 A_a_fun_tree$)) (= (tree_ap$s (tree_pure$t ?v0) (node$d ?v1 ?v2 ?v3)) (node$a (fun_app$q ?v0 ?v1) (tree_ap$s (tree_pure$t ?v0) ?v2) (tree_ap$s (tree_pure$t ?v0) ?v3)))) :named a89))
(assert (! (forall ((?v0 A_a_fun_bool_fun$) (?v1 A_a_fun$) (?v2 A_a_fun_tree$) (?v3 A_a_fun_tree$)) (= (tree_ap$bh (tree_pure$u ?v0) (node$d ?v1 ?v2 ?v3)) (node$bu (fun_app$r ?v0 ?v1) (tree_ap$bh (tree_pure$u ?v0) ?v2) (tree_ap$bh (tree_pure$u ?v0) ?v3)))) :named a90))
(assert (! (forall ((?v0 A_bool_fun_a_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun_tree$)) (= (tree_ap$bo (tree_pure$v ?v0) (node$ ?v1 ?v2 ?v3)) (node$a (fun_app$s ?v0 ?v1) (tree_ap$bo (tree_pure$v ?v0) ?v2) (tree_ap$bo (tree_pure$v ?v0) ?v3)))) :named a91))
(assert (! (forall ((?v0 A_tree_tree_tree$) (?v1 A_tree_tree_tree$) (?v2 A_tree_tree_tree$)) (= (fun_app$l (fun_app$m plus$c (fun_app$l (fun_app$m plus$c ?v0) ?v1)) ?v2) (fun_app$l (fun_app$m plus$c ?v0) (fun_app$l (fun_app$m plus$c ?v1) ?v2)))) :named a92))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$) (?v2 A_tree_tree$)) (= (fun_app$n (fun_app$o plus$d (fun_app$n (fun_app$o plus$d ?v0) ?v1)) ?v2) (fun_app$n (fun_app$o plus$d ?v0) (fun_app$n (fun_app$o plus$d ?v1) ?v2)))) :named a93))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (= (fun_app$b (fun_app$e plus$ (fun_app$b (fun_app$e plus$ ?v0) ?v1)) ?v2) (fun_app$b (fun_app$e plus$ ?v0) (fun_app$b (fun_app$e plus$ ?v1) ?v2)))) :named a94))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (fun_app$j (fun_app$k plus$a (fun_app$j (fun_app$k plus$a ?v0) ?v1)) ?v2) (fun_app$j (fun_app$k plus$a ?v0) (fun_app$j (fun_app$k plus$a ?v1) ?v2)))) :named a95))
(check-sat)
;(get-unsat-core)
