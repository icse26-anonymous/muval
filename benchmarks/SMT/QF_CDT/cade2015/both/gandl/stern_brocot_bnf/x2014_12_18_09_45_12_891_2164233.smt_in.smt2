; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 239
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort Bool_tree$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun$ 0)
(declare-sort A_bool_a_fun_fun$ 0)
(declare-sort A_bool_fun_a_fun$ 0)
(declare-sort Bool_a_a_fun_fun$ 0)
(declare-sort A_tree_a_tree_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort Bool_a_bool_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_bool_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_bool_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_fun$ 0)
(declare-sort Bool_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_a_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_bool_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort Bool_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_tree_tree_a_tree_tree_fun$ 0)
(declare-sort A_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_tree_a_tree_a_tree_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_tree_tree_tree_a_tree_tree_tree_fun$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_bool_bool_fun_fun$ 0)
(declare-sort Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ 0)
(declare-sort Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_bool_a_a_fun_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ 0)
(declare-sort A_a_a_a_bool_fun_fun_fun_fun_a_a_a_a_bool_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$ 0)
(declare-sort Bool_a_bool_fun_bool_fun_bool_fun_fun_bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_fun$ 0)
(declare-codatatypes () ((A_bool_fun_tree$ (node$ (select$ A_bool_fun$) (selecta$ A_bool_fun_tree$) (selectb$ A_bool_fun_tree$)))
  (A_tree$ (node$a (root$ A$) (left$ A_tree$) (right$ A_tree$)))
  (Bool_a_bool_fun_fun_tree$ (node$b (selectc$ Bool_a_bool_fun_fun$) (selectd$ Bool_a_bool_fun_fun_tree$) (selecte$ Bool_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_tree$ (node$c (selectf$ A_a_bool_fun_fun$) (selectg$ A_a_bool_fun_fun_tree$) (selecth$ A_a_bool_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_tree$ (node$d (selecti$ A_a_a_bool_fun_fun_fun$) (selectj$ A_a_a_bool_fun_fun_fun_tree$) (selectk$ A_a_a_bool_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ (node$e (selectl$ A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun$) (selectm$ A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) (selectn$ A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_tree$ (node$f (selecto$ A_a_a_fun_fun$) (selectp$ A_a_a_fun_fun_tree$) (selectq$ A_a_a_fun_fun_tree$)))
  (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun_tree$ (node$g (selectr$ A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$) (selects$ A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun_tree$) (selectt$ A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_a_bool_fun_fun_fun_tree$ (node$h (selectu$ A_a_fun_a_a_bool_fun_fun_fun$) (selectv$ A_a_fun_a_a_bool_fun_fun_fun_tree$) (selectw$ A_a_fun_a_a_bool_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$i (selectx$ A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$) (selecty$ A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) (selectz$ A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_fun_tree$ (node$j (selecua$ A_a_fun$) (selecub$ A_a_fun_tree$) (selecuc$ A_a_fun_tree$)))
  (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ (node$k (selecud$ A_a_a_fun_fun_a_a_a_fun_fun_fun$) (selecue$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) (selecuf$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)))
  (Bool_bool_fun_tree$ (node$l (selecug$ Bool_bool_fun$) (selecuh$ Bool_bool_fun_tree$) (selecui$ Bool_bool_fun_tree$)))
  (A_a_bool_fun_fun_bool_fun_tree$ (node$m (selecuj$ A_a_bool_fun_fun_bool_fun$) (selecuk$ A_a_bool_fun_fun_bool_fun_tree$) (selecul$ A_a_bool_fun_fun_bool_fun_tree$)))
  (Bool_a_a_bool_fun_fun_fun_tree$ (node$n (selecum$ Bool_a_a_bool_fun_fun_fun$) (selecun$ Bool_a_a_bool_fun_fun_fun_tree$) (selecuo$ Bool_a_a_bool_fun_fun_fun_tree$)))
  (Bool_a_a_a_fun_fun_fun_tree$ (node$o (selecup$ Bool_a_a_a_fun_fun_fun$) (selecuq$ Bool_a_a_a_fun_fun_fun_tree$) (selecur$ Bool_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_bool_fun_tree$ (node$p (selecus$ A_a_a_fun_fun_bool_fun$) (selecut$ A_a_a_fun_fun_bool_fun_tree$) (selecuu$ A_a_a_fun_fun_bool_fun_tree$)))
  (A_tree_tree$ (node$q (root$a A_tree$) (left$a A_tree_tree$) (right$a A_tree_tree$)))
  (A_tree_tree_tree$ (node$r (root$b A_tree_tree$) (left$b A_tree_tree_tree$) (right$b A_tree_tree_tree$)))
  (A_tree_tree_tree_tree$ (node$s (root$c A_tree_tree_tree$) (left$c A_tree_tree_tree_tree$) (right$c A_tree_tree_tree_tree$)))
  (A_tree_tree_tree_a_tree_tree_tree_fun_tree$ (node$t (selecuv$ A_tree_tree_tree_a_tree_tree_tree_fun$) (selecuw$ A_tree_tree_tree_a_tree_tree_tree_fun_tree$) (selecux$ A_tree_tree_tree_a_tree_tree_tree_fun_tree$)))
  (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ (node$u (selecuy$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$) (selecuz$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$) (selecva$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)))
  (A_tree_tree_a_tree_tree_fun_tree$ (node$v (selecvb$ A_tree_tree_a_tree_tree_fun$) (selecvc$ A_tree_tree_a_tree_tree_fun_tree$) (selecvd$ A_tree_tree_a_tree_tree_fun_tree$)))
  (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ (node$w (selecve$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$) (selecvf$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$) (selecvg$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)))
  (A_tree_a_tree_fun_tree$ (node$x (selecvh$ A_tree_a_tree_fun$) (selecvi$ A_tree_a_tree_fun_tree$) (selecvj$ A_tree_a_tree_fun_tree$)))
  (A_tree_a_tree_a_tree_fun_fun_tree$ (node$y (selecvk$ A_tree_a_tree_a_tree_fun_fun$) (selecvl$ A_tree_a_tree_a_tree_fun_fun_tree$) (selecvm$ A_tree_a_tree_a_tree_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ (node$z (selecvn$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun$) (selecvo$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$) (selecvp$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ (node$aa (selecvq$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun$) (selecvr$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) (selecvs$ A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_tree$ (node$ab (selecvt$ A_a_a_a_fun_fun_fun$) (selecvu$ A_a_a_a_fun_fun_fun_tree$) (selecvv$ A_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ (node$ac (selecvw$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$) (selecvx$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$) (selecvy$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_a_a_bool_fun_fun_fun_fun_tree$ (node$ad (selecvz$ A_a_a_a_bool_fun_fun_fun_fun$) (selecwa$ A_a_a_a_bool_fun_fun_fun_fun_tree$) (selecwb$ A_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_a_bool_fun_fun_fun_fun_a_a_a_a_bool_fun_fun_fun_fun_fun_tree$ (node$ae (selecwc$ A_a_a_a_bool_fun_fun_fun_fun_a_a_a_a_bool_fun_fun_fun_fun_fun$) (selecwd$ A_a_a_a_bool_fun_fun_fun_fun_a_a_a_a_bool_fun_fun_fun_fun_fun_tree$) (selecwe$ A_a_a_a_bool_fun_fun_fun_fun_a_a_a_a_bool_fun_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_tree$ (node$af (selecwf$ A_a_fun_a_a_fun_fun$) (selecwg$ A_a_fun_a_a_fun_fun_tree$) (selecwh$ A_a_fun_a_a_fun_fun_tree$)))
  (A_a_fun_a_fun_tree$ (node$ag (selecwi$ A_a_fun_a_fun$) (selecwj$ A_a_fun_a_fun_tree$) (selecwk$ A_a_fun_a_fun_tree$)))
  (A_a_a_fun_a_fun_fun_tree$ (node$ah (selecwl$ A_a_a_fun_a_fun_fun$) (selecwm$ A_a_a_fun_a_fun_fun_tree$) (selecwn$ A_a_a_fun_a_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ (node$ai (selecwo$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun$) (selecwp$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$) (selecwq$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$)))
  (A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$aj (selecwr$ A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun$) (selecws$ A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) (selecwt$ A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_fun_tree$ (node$ak (selecwu$ A_a_fun_a_a_a_fun_fun_fun$) (selecwv$ A_a_fun_a_a_a_fun_fun_fun_tree$) (selecww$ A_a_fun_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_a_a_fun_fun_fun_tree$ (node$al (selecwx$ A_a_a_fun_a_a_fun_fun_fun$) (selecwy$ A_a_a_fun_a_a_fun_fun_fun_tree$) (selecwz$ A_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$am (selecxa$ A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$) (selecxb$ A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$) (selecxc$ A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$)))
  (A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ (node$an (selecxd$ A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$) (selecxe$ A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$) (selecxf$ A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_a_a_fun_a_fun_fun_fun_tree$ (node$ao (selecxg$ A_a_a_a_fun_a_fun_fun_fun$) (selecxh$ A_a_a_a_fun_a_fun_fun_fun_tree$) (selecxi$ A_a_a_a_fun_a_fun_fun_fun_tree$)))
  (A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ (node$ap (selecxj$ A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun$) (selecxk$ A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$) (selecxl$ A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_bool_fun_fun_tree$ (node$aq (selecxm$ A_bool_fun_a_bool_fun_fun$) (selecxn$ A_bool_fun_a_bool_fun_fun_tree$) (selecxo$ A_bool_fun_a_bool_fun_fun_tree$)))
  (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$ar (selecxp$ Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$) (selecxq$ Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (selecxr$ Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_fun_a_bool_fun_fun_tree$ (node$as (selecxs$ A_a_fun_a_bool_fun_fun$) (selecxt$ A_a_fun_a_bool_fun_fun_tree$) (selecxu$ A_a_fun_a_bool_fun_fun_tree$)))
  (A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$ (node$at (selecxv$ A_bool_fun_a_a_fun_a_bool_fun_fun_fun$) (selecxw$ A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$) (selecxx$ A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$)))
  (Bool_a_fun_tree$ (node$au (selecxy$ Bool_a_fun$) (selecxz$ Bool_a_fun_tree$) (selecya$ Bool_a_fun_tree$)))
  (A_bool_fun_a_a_fun_fun_tree$ (node$av (selecyb$ A_bool_fun_a_a_fun_fun$) (selecyc$ A_bool_fun_a_a_fun_fun_tree$) (selecyd$ A_bool_fun_a_a_fun_fun_tree$)))
  (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$ (node$aw (selecye$ Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$) (selecyf$ Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$) (selecyg$ Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$ax (selecyh$ A_a_fun_a_a_fun_a_a_fun_fun_fun$) (selecyi$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$) (selecyj$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_bool_fun_bool_fun_tree$ (node$ay (selecyk$ A_bool_fun_bool_fun$) (selecyl$ A_bool_fun_bool_fun_tree$) (selecym$ A_bool_fun_bool_fun_tree$)))
  (A_a_bool_fun_fun_a_bool_fun_fun_tree$ (node$az (selecyn$ A_a_bool_fun_fun_a_bool_fun_fun$) (selecyo$ A_a_bool_fun_fun_a_bool_fun_fun_tree$) (selecyp$ A_a_bool_fun_fun_a_bool_fun_fun_tree$)))
  (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$ba (selecyq$ A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$) (selecyr$ A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) (selecys$ A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_fun_bool_fun_tree$ (node$bb (selecyt$ A_a_fun_bool_fun$) (selecyu$ A_a_fun_bool_fun_tree$) (selecyv$ A_a_fun_bool_fun_tree$)))
  (A_a_a_fun_fun_a_bool_fun_fun_tree$ (node$bc (selecyw$ A_a_a_fun_fun_a_bool_fun_fun$) (selecyx$ A_a_a_fun_fun_a_bool_fun_fun_tree$) (selecyy$ A_a_a_fun_fun_a_bool_fun_fun_tree$)))
  (A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$ (node$bd (selecyz$ A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$) (selecza$ A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$) (seleczb$ A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_a_bool_fun_fun_fun_tree$ (node$be (seleczc$ A_bool_fun_a_a_bool_fun_fun_fun$) (seleczd$ A_bool_fun_a_a_bool_fun_fun_fun_tree$) (selecze$ A_bool_fun_a_a_bool_fun_fun_fun_tree$)))
  (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$bf (seleczf$ Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$) (seleczg$ Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) (seleczh$ Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (Bool_a_a_fun_fun_tree$ (node$bg (seleczi$ Bool_a_a_fun_fun$) (seleczj$ Bool_a_a_fun_fun_tree$) (seleczk$ Bool_a_a_fun_fun_tree$)))
  (A_bool_fun_a_a_a_fun_fun_fun_tree$ (node$bh (seleczl$ A_bool_fun_a_a_a_fun_fun_fun$) (seleczm$ A_bool_fun_a_a_a_fun_fun_fun_tree$) (seleczn$ A_bool_fun_a_a_a_fun_fun_fun_tree$)))
  (Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$ (node$bi (seleczo$ Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun$) (seleczp$ Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$) (seleczq$ Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ (node$bj (seleczr$ A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$) (seleczs$ A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$) (seleczt$ A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_fun_tree$ (node$bk (seleczu$ A_bool_fun_a_fun$) (seleczv$ A_bool_fun_a_fun_tree$) (seleczw$ A_bool_fun_a_fun_tree$)))
  (A_a_bool_fun_fun_a_a_fun_fun_tree$ (node$bl (seleczx$ A_a_bool_fun_fun_a_a_fun_fun$) (seleczy$ A_a_bool_fun_fun_a_a_fun_fun_tree$) (seleczz$ A_a_bool_fun_fun_a_a_fun_fun_tree$)))
  (A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$ (node$bm (seledaa$ A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun$) (seledab$ A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$) (seledac$ A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ (node$bn (seledad$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun$) (seledae$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) (seledaf$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)))
  (Bool_a_bool_fun_bool_fun_fun_tree$ (node$bo (seledag$ Bool_a_bool_fun_bool_fun_fun$) (seledah$ Bool_a_bool_fun_bool_fun_fun_tree$) (seledai$ Bool_a_bool_fun_bool_fun_fun_tree$)))
  (A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ (node$bp (seledaj$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun$) (seledak$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$) (seledal$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ (node$bq (seledam$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun$) (seledan$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$) (seledao$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$br (seledap$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$) (seledaq$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$) (seledar$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$)))
  (A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$bs (seledas$ A_a_a_fun_a_a_bool_fun_fun_fun_fun$) (seledat$ A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) (seledau$ A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_bool_fun_fun_tree$ (node$bt (seledav$ A_bool_bool_fun_fun$) (seledaw$ A_bool_bool_fun_fun_tree$) (seledax$ A_bool_bool_fun_fun_tree$)))
  (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$bu (seleday$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) (seledaz$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (seledba$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ (node$bv (seledbb$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$) (seledbc$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) (seledbd$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_a_fun_fun_tree$ (node$bw (seledbe$ A_bool_a_fun_fun$) (seledbf$ A_bool_a_fun_fun_tree$) (seledbg$ A_bool_a_fun_fun_tree$)))
  (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ (node$bx (seledbh$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun$) (seledbi$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$) (seledbj$ A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$by (seledbk$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$) (seledbl$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) (seledbm$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_bool_fun_bool_fun_fun_tree$ (node$bz (seledbn$ A_a_bool_fun_bool_fun_fun$) (seledbo$ A_a_bool_fun_bool_fun_fun_tree$) (seledbp$ A_a_bool_fun_bool_fun_fun_tree$)))
  (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$ca (seledbq$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$) (seledbr$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) (seledbs$ A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_a_a_fun_bool_fun_fun_tree$ (node$cb (seledbt$ A_a_a_fun_bool_fun_fun$) (seledbu$ A_a_a_fun_bool_fun_fun_tree$) (seledbv$ A_a_a_fun_bool_fun_fun_tree$)))
  (A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$ (node$cc (seledbw$ A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$) (seledbx$ A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$) (seledby$ A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_tree$ (node$cd (seledbz$ A_bool_a_bool_fun_fun_fun$) (seledca$ A_bool_a_bool_fun_fun_fun_tree$) (seledcb$ A_bool_a_bool_fun_fun_fun_tree$)))
  (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$ce (seledcc$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$) (seledcd$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$) (seledce$ A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$cf (seledcf$ A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$) (seledcg$ A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) (seledch$ A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_a_a_fun_fun_fun_tree$ (node$cg (seledci$ A_bool_a_a_fun_fun_fun$) (seledcj$ A_bool_a_a_fun_fun_fun_tree$) (seledck$ A_bool_a_a_fun_fun_fun_tree$)))
  (A_bool_a_a_fun_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$ (node$ch (seledcl$ A_bool_a_a_fun_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun$) (seledcm$ A_bool_a_a_fun_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$) (seledcn$ A_bool_a_a_fun_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ (node$ci (seledco$ A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$) (seledcp$ A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$) (seledcq$ A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$cj (seledcr$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun$) (seledcs$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) (seledct$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ (node$ck (seledcu$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun$) (seledcv$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$) (seledcw$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$cl (seledcx$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$) (seledcy$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$) (seledcz$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_tree$ (node$cm (seledda$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun$) (seleddb$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_tree$) (seleddc$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$ (node$cn (seleddd$ A_a_a_fun_a_fun_fun_a_a_fun_fun$) (seledde$ A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$) (seleddf$ A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$)))
  (A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$ (node$co (seleddg$ A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun$) (seleddh$ A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$) (seleddi$ A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_a_fun_a_fun_fun_tree$ (node$cp (seleddj$ A_a_a_fun_a_fun_a_fun_fun$) (seleddk$ A_a_a_fun_a_fun_a_fun_fun_tree$) (seleddl$ A_a_a_fun_a_fun_a_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_fun_fun_tree$ (node$cq (seleddm$ A_a_a_fun_fun_a_a_fun_fun$) (seleddn$ A_a_a_fun_fun_a_a_fun_fun_tree$) (seleddo$ A_a_a_fun_fun_a_a_fun_fun_tree$)))
  (A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ (node$cr (seleddp$ A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$) (seleddq$ A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$) (seleddr$ A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$cs (seledds$ A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun$) (seleddt$ A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$) (seleddu$ A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)))
  (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$ct (seleddv$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$) (seleddw$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$) (seleddx$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$cu (seleddy$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun$) (seleddz$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) (seledea$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_fun_tree$ (node$cv (seledeb$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_fun$) (seledec$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_fun_tree$) (seleded$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ (node$cw (seledee$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun$) (seledef$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) (seledeg$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$cx (seledeh$ A_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) (seledei$ A_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (seledej$ A_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_fun_tree$ (node$cy (seledek$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_fun$) (seledel$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_fun_tree$) (seledem$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$cz (seleden$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$) (seledeo$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) (seledep$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)))
  (Bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_tree$ (node$da (seledeq$ Bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun$) (seleder$ Bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_tree$) (seledes$ Bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_tree$)))
  (Bool_a_bool_fun_bool_fun_bool_fun_fun_bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_fun_tree$ (node$db (seledet$ Bool_a_bool_fun_bool_fun_bool_fun_fun_bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_fun$) (seledeu$ Bool_a_bool_fun_bool_fun_bool_fun_fun_bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_fun_tree$) (seledev$ Bool_a_bool_fun_bool_fun_bool_fun_fun_bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_fun_tree$)))
  (Bool_a_bool_fun_bool_fun_bool_fun_fun_tree$ (node$dc (seledew$ Bool_a_bool_fun_bool_fun_bool_fun_fun$) (seledex$ Bool_a_bool_fun_bool_fun_bool_fun_fun_tree$) (seledey$ Bool_a_bool_fun_bool_fun_bool_fun_fun_tree$)))
  (Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$ (node$dd (seledez$ Bool_a_bool_fun_fun_bool_bool_fun_fun$) (seledfa$ Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$) (seledfb$ Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$)))
  (Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$ (node$de (seledfc$ Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun$) (seledfd$ Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$) (seledfe$ Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$)))))
(declare-fun a$ () A_tree$)
(declare-fun b$ () A_tree$)
(declare-fun c$ () A_tree$)
(declare-fun uu$ () A_a_bool_fun_fun$)
(declare-fun comp$ () A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$)
(declare-fun plus$ () A_a_a_fun_fun$)
(declare-fun comp$a () A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun comp$b () Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun comp$c () A_bool_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun comp$d () Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$)
(declare-fun comp$e () A_a_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun comp$f () A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun comp$g () A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$)
(declare-fun comp$h () Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$)
(declare-fun comp$i () Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun$)
(declare-fun comp$j () A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$)
(declare-fun comp$k () A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun$)
(declare-fun comp$l (A_a_fun_a_fun$) A_a_a_fun_fun_a_a_fun_fun$)
(declare-fun comp$m (A_a_a_bool_fun_fun_fun$) A_a_fun_a_a_a_bool_fun_fun_fun_fun$)
(declare-fun comp$n (A_a_a_fun_a_fun_fun$) A_a_fun_a_a_a_fun_a_fun_fun_fun$)
(declare-fun comp$o (A_a_a_a_fun_fun_fun$) A_a_fun_a_a_a_a_fun_fun_fun_fun$)
(declare-fun comp$p (A_a_a_fun_a_a_fun_fun_fun$) A_a_fun_a_a_a_fun_a_a_fun_fun_fun_fun$)
(declare-fun plus$a () A_tree_a_tree_a_tree_fun_fun$)
(declare-fun plus$b (A_tree_tree_tree_tree$ A_tree_tree_tree_tree$) A_tree_tree_tree_tree$)
(declare-fun plus$c () A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$)
(declare-fun plus$d () A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$)
(declare-fun node$df (Bool Bool_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_C$ () A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_I$ () A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_K$ () Bool_a_bool_fun_fun_tree$)
(declare-fun tree_S$ () A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun fun_app$ (A_bool_fun$ A$) Bool)
(declare-fun tree_C$a () A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_C$b () A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_C$c () A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_C$d () A_a_a_a_bool_fun_fun_fun_fun_a_a_a_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun tree_C$e () A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$)
(declare-fun tree_C$f () A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_C$g () A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_C$h () A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_C$i () A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$)
(declare-fun tree_I$a () A_a_fun_tree$)
(declare-fun tree_I$b () A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_I$c () A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_I$d () Bool_bool_fun_tree$)
(declare-fun tree_K$a () A_a_a_fun_fun_tree$)
(declare-fun tree_K$b () A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_K$c () A_a_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_K$d () A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_K$e () Bool_a_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_K$f () A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_K$g () A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$)
(declare-fun tree_K$h () A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_K$i () A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_K$j () A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_K$k () A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_K$l () A_a_a_fun_a_fun_a_fun_fun_tree$)
(declare-fun tree_K$m () A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_K$n () A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_K$o () Bool_a_bool_fun_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_S$a () A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$b () A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$c () A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$d () A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$e () A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$f () A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$g () A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$h () A_bool_a_a_fun_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_S$i () A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_S$j () A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_S$k () A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$l () A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_S$m () A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_S$n () A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun tree_S$o () A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$p () Bool_a_bool_fun_bool_fun_bool_fun_fun_bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun tree_S$q () Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ (A_bool_fun_tree$ A_tree$) Bool_tree$)
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$b (A_a_fun$ A$) A$)
(declare-fun fun_app$c (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$d (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$e (A_a_a_bool_fun_fun_fun$ A$) A_a_bool_fun_fun$)
(declare-fun fun_app$f (A_a_bool_fun_fun_bool_fun$ A_a_bool_fun_fun$) Bool)
(declare-fun fun_app$g (Bool_a_a_bool_fun_fun_fun$ Bool) A_a_bool_fun_fun$)
(declare-fun fun_app$h (Bool_a_a_a_fun_fun_fun$ Bool) A_a_a_fun_fun$)
(declare-fun fun_app$i (A_a_a_fun_fun_bool_fun$ A_a_a_fun_fun$) Bool)
(declare-fun fun_app$j (A_tree_a_tree_fun$ A_tree$) A_tree$)
(declare-fun fun_app$k (A_tree_a_tree_a_tree_fun_fun$ A_tree$) A_tree_a_tree_fun$)
(declare-fun fun_app$l (A_tree_tree_tree_a_tree_tree_tree_fun$ A_tree_tree_tree$) A_tree_tree_tree$)
(declare-fun fun_app$m (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ A_tree_tree_tree$) A_tree_tree_tree_a_tree_tree_tree_fun$)
(declare-fun fun_app$n (A_tree_tree_a_tree_tree_fun$ A_tree_tree$) A_tree_tree$)
(declare-fun fun_app$o (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ A_tree_tree$) A_tree_tree_a_tree_tree_fun$)
(declare-fun fun_app$p (A_a_fun_a_a_bool_fun_fun_fun$ A_a_fun$) A_a_bool_fun_fun$)
(declare-fun fun_app$q (A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$ A_a_bool_fun_fun$) A_a_fun_a_a_bool_fun_fun_fun$)
(declare-fun fun_app$r (A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun$ A_a_a_fun_fun$) A_a_a_bool_fun_fun_fun$)
(declare-fun fun_app$s (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$ A_a_fun_a_a_bool_fun_fun_fun$) A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun$)
(declare-fun fun_app$t (A_a_fun_a_bool_fun_fun$ A_a_fun$) A_bool_fun$)
(declare-fun fun_app$u (A_bool_fun_a_a_fun_a_bool_fun_fun_fun$ A_bool_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun fun_app$v (A_a_fun_a_a_fun_fun$ A_a_fun$) A_a_fun$)
(declare-fun fun_app$w (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$) A_a_fun_a_a_fun_fun$)
(declare-fun fun_app$x (A_a_a_fun_fun_a_a_fun_fun$ A_a_a_fun_fun$) A_a_fun$)
(declare-fun fun_app$y (A_a_fun_a_fun$ A_a_fun$) A$)
(declare-fun fun_app$z (A_a_fun_a_a_a_fun_fun_fun$ A_a_fun$) A_a_a_fun_fun$)
(declare-fun tree_ap$a (Bool_a_bool_fun_fun_tree$ Bool_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$b (A_a_bool_fun_fun_tree$ A_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$c (A_a_a_bool_fun_fun_fun_tree$ A_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$d (A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$e (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun_tree$ A_a_fun_a_a_bool_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$f (A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$g (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun tree_ap$h (A_a_a_fun_fun_tree$ A_tree$) A_a_fun_tree$)
(declare-fun tree_ap$i (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$j (Bool_bool_fun_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_ap$k (A_a_bool_fun_fun_bool_fun_tree$ A_a_bool_fun_fun_tree$) Bool_tree$)
(declare-fun tree_ap$l (Bool_a_a_bool_fun_fun_fun_tree$ Bool_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$m (Bool_a_a_a_fun_fun_fun_tree$ Bool_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$n (A_a_a_fun_fun_bool_fun_tree$ A_a_a_fun_fun_tree$) Bool_tree$)
(declare-fun tree_ap$o (A_tree_tree_tree_a_tree_tree_tree_fun_tree$ A_tree_tree_tree_tree$) A_tree_tree_tree_tree$)
(declare-fun tree_ap$p (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ A_tree_tree_tree_tree$) A_tree_tree_tree_a_tree_tree_tree_fun_tree$)
(declare-fun tree_ap$q (A_tree_tree_a_tree_tree_fun_tree$ A_tree_tree_tree$) A_tree_tree_tree$)
(declare-fun tree_ap$r (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ A_tree_tree_tree$) A_tree_tree_a_tree_tree_fun_tree$)
(declare-fun tree_ap$s (A_tree_a_tree_fun_tree$ A_tree_tree$) A_tree_tree$)
(declare-fun tree_ap$t (A_tree_a_tree_a_tree_fun_fun_tree$ A_tree_tree$) A_tree_a_tree_fun_tree$)
(declare-fun tree_ap$u (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$v (A_a_a_bool_fun_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$w (A_a_a_a_fun_fun_fun_tree$ A_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$x (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$) A_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$y (A_a_a_a_bool_fun_fun_fun_fun_tree$ A_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$z (A_a_a_a_bool_fun_fun_fun_fun_a_a_a_a_bool_fun_fun_fun_fun_fun_tree$ A_a_a_a_bool_fun_fun_fun_fun_tree$) A_a_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun fun_app$aa (A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun$) A_a_fun_a_a_a_fun_fun_fun$)
(declare-fun fun_app$ab (A_a_fun_a_a_a_bool_fun_fun_fun_fun$ A_a_fun$) A_a_a_bool_fun_fun_fun$)
(declare-fun fun_app$ac (A_a_a_fun_a_fun_fun$ A$) A_a_fun_a_fun$)
(declare-fun fun_app$ad (A_a_fun_a_a_a_fun_a_fun_fun_fun$ A_a_fun$) A_a_a_fun_a_fun_fun$)
(declare-fun fun_app$ae (A_a_a_a_fun_fun_fun$ A$) A_a_a_fun_fun$)
(declare-fun fun_app$af (A_a_fun_a_a_a_a_fun_fun_fun_fun$ A_a_fun$) A_a_a_a_fun_fun_fun$)
(declare-fun fun_app$ag (A_a_a_fun_a_a_fun_fun_fun$ A$) A_a_fun_a_a_fun_fun$)
(declare-fun fun_app$ah (A_a_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun$) A_a_a_fun_a_a_fun_fun_fun$)
(declare-fun fun_app$ai (A_bool_fun_a_fun$ A_bool_fun$) A$)
(declare-fun fun_app$aj (A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun$)
(declare-fun tree_ap$aa (A_a_fun_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun tree_ap$ab (A_a_a_fun_a_fun_fun_tree$ A_tree$) A_a_fun_a_fun_tree$)
(declare-fun tree_ap$ac (A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_ap$ad (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$ae (A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$af (A_a_a_fun_a_a_fun_fun_fun_tree$ A_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$ag (A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_a_fun_fun_fun_tree$) A_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$ah (A_a_fun_a_a_a_fun_fun_fun_tree$ A_a_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$ai (A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ A_a_a_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$aj (A_a_a_a_fun_a_fun_fun_fun_tree$ A_tree$) A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_ap$ak (A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_a_fun_fun_fun_tree$) A_a_a_a_fun_a_fun_fun_fun_tree$)
(declare-fun tree_ap$al (A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$am (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ Bool_bool_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$an (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$ao (A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ap (A_bool_fun_a_a_fun_fun_tree$ A_bool_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$aq (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$ Bool_a_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$ar (Bool_a_fun_tree$ Bool_tree$) A_tree$)
(declare-fun tree_ap$as (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$at (A_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$au (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_bool_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$av (A_bool_fun_bool_fun_tree$ A_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$aw (A_a_a_fun_fun_a_bool_fun_fun_tree$ A_a_a_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$ax (A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$ A_a_fun_bool_fun_tree$) A_a_a_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ay (A_a_fun_bool_fun_tree$ A_a_fun_tree$) Bool_tree$)
(declare-fun tree_ap$az (A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ba (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bb (A_bool_fun_a_a_a_fun_fun_fun_tree$ A_bool_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$bc (Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$ Bool_a_a_fun_fun_tree$) A_bool_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$bd (Bool_a_a_fun_fun_tree$ Bool_tree$) A_a_fun_tree$)
(declare-fun tree_ap$be (A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$bf (A_a_bool_fun_fun_a_a_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$bg (A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$ A_bool_fun_a_fun_tree$) A_a_bool_fun_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$bh (A_bool_fun_a_fun_tree$ A_bool_fun_tree$) A_tree$)
(declare-fun tree_ap$bi (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bj (Bool_a_bool_fun_bool_fun_fun_tree$ Bool_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$bk (A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_fun_tree$) A_a_a_fun_a_fun_fun_tree$)
(declare-fun tree_ap$bl (A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$bm (A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$) A_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$bn (A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ A_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bo (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bp (A_bool_bool_fun_fun_tree$ A_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$bq (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$br (A_bool_a_fun_fun_a_bool_fun_a_a_fun_fun_fun_tree$ A_bool_a_fun_fun_tree$) A_bool_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$bs (A_bool_a_fun_fun_tree$ A_tree$) Bool_a_fun_tree$)
(declare-fun tree_ap$bt (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$bu (A_a_bool_fun_bool_fun_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_bool_fun_fun_tree$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bv (A_a_bool_fun_bool_fun_fun_tree$ A_tree$) A_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$bw (A_a_a_fun_bool_fun_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$ A_a_a_fun_bool_fun_fun_tree$) A_a_a_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$bx (A_a_a_fun_bool_fun_fun_tree$ A_tree$) A_a_fun_bool_fun_tree$)
(declare-fun tree_ap$by (A_bool_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$ A_bool_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bz (A_bool_a_bool_fun_fun_fun_tree$ A_tree$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ca (A_a_fun_a_a_bool_fun_fun_fun_tree$ A_a_fun_tree$) A_a_bool_fun_fun_tree$)
(declare-fun tree_ap$cb (A_a_a_bool_fun_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_a_bool_fun_fun_fun_tree$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$cc (A_bool_a_a_fun_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$ A_bool_a_a_fun_fun_fun_tree$) A_bool_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$cd (A_bool_a_a_fun_fun_fun_tree$ A_tree$) Bool_a_a_fun_fun_tree$)
(declare-fun tree_ap$ce (A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$) A_a_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$cf (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$cg (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$ch (A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$ci (A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_a_fun_a_fun_fun_tree$) A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$cj (A_a_a_fun_fun_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$ck (A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$) A_a_a_fun_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$cl (A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_a_a_a_fun_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_ap$cm (A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$) A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_ap$cn (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$co (A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_a_a_bool_fun_fun_fun_fun_tree$) A_a_bool_fun_fun_a_a_a_bool_fun_fun_fun_fun_a_a_bool_fun_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$cp (A_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_a_a_bool_fun_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$cq (A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_fun_tree$ A_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_bool_fun_a_a_bool_fun_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$cr (Bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_tree$ Bool_a_bool_fun_bool_fun_fun_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$cs (Bool_a_bool_fun_bool_fun_bool_fun_fun_bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_bool_fun_bool_fun_fun_tree$) Bool_a_bool_fun_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun tree_ap$ct (Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$ Bool_a_bool_fun_fun_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$cu (Bool_a_bool_fun_bool_fun_fun_bool_a_bool_fun_fun_bool_bool_fun_fun_fun_tree$ Bool_a_bool_fun_bool_fun_fun_tree$) Bool_a_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun tree_pure$ (A_a_bool_fun_fun$) A_a_bool_fun_fun_tree$)
(declare-fun tree_pure$a (Bool) Bool_tree$)
(declare-fun tree_pure$b (A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$) A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$c (A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$) A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$d (A_a_a_fun_fun$) A_a_a_fun_fun_tree$)
(declare-fun tree_pure$e (A_a_fun$) A_a_fun_tree$)
(declare-fun tree_pure$f (A$) A_tree$)
(declare-fun tree_pure$g (A_bool_fun$) A_bool_fun_tree$)
(declare-fun tree_pure$h (Bool_bool_fun$) Bool_bool_fun_tree$)
(declare-fun tree_pure$i (A_a_a_bool_fun_fun_fun$) A_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$j (A_a_bool_fun_fun_bool_fun$) A_a_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$k (Bool_a_a_bool_fun_fun_fun$) Bool_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$l (Bool_a_a_a_fun_fun_fun$) Bool_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$m (A_a_a_fun_fun_bool_fun$) A_a_a_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$n (A_a_fun_a_a_bool_fun_fun_fun$) A_a_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$o (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$) A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$p (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$) A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$q (A_tree_a_tree_a_tree_fun_fun$) A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun tree_pure$r (Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun$) Bool_bool_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$s (A_bool_fun_a_a_fun_a_bool_fun_fun_fun$) A_bool_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$t (Bool_a_fun_a_bool_fun_a_a_fun_fun_fun$) Bool_a_fun_a_bool_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$u (A_a_fun_a_a_fun_a_a_fun_fun_fun$) A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$v (A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun$) A_bool_fun_bool_fun_a_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$w (A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun$) A_a_fun_bool_fun_a_a_a_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$x (Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun$) Bool_a_bool_fun_fun_a_bool_fun_a_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$y (Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun$) Bool_a_a_fun_fun_a_bool_fun_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$z (A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$) A_a_a_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$aa (A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun$) A_bool_fun_a_fun_a_a_bool_fun_fun_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$ab (A_bool_fun_a_fun$) A_bool_fun_a_fun_tree$)
(declare-fun tree_pure$ac (A_a_fun_a_fun$) A_a_fun_a_fun_tree$)
(declare-fun tree_pure$ad (A_bool_fun_a_bool_fun_fun$) A_bool_fun_a_bool_fun_fun_tree$)
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uu$ ?v0) ?v1)))) :named a0))
(assert (! (not (= (tree_ap$ (tree_ap$a tree_K$ (tree_ap$ (tree_ap$b (tree_pure$ uu$) b$) c$)) a$) (tree_pure$a true))) :named a1))
(assert (! (= (tree_ap$ (tree_ap$b (tree_ap$c (tree_ap$d (tree_ap$e (tree_pure$b comp$) (tree_ap$f (tree_pure$c comp$a) (tree_pure$ uu$))) (tree_pure$d plus$)) a$) b$) (tree_ap$g (tree_ap$h (tree_ap$i tree_C$ (tree_pure$d plus$)) c$) a$)) (tree_pure$a true)) :named a2))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (= (tree_ap$g (tree_pure$e ?v0) (tree_pure$f ?v1)) (tree_pure$f (fun_app$b ?v0 ?v1)))) :named a3))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (= (tree_ap$ (tree_pure$g ?v0) (tree_pure$f ?v1)) (tree_pure$a (fun_app$ ?v0 ?v1)))) :named a4))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool)) (= (tree_ap$j (tree_pure$h ?v0) (tree_pure$a ?v1)) (tree_pure$a (fun_app$c ?v0 ?v1)))) :named a5))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$)) (= (tree_ap$b (tree_pure$ ?v0) (tree_pure$f ?v1)) (tree_pure$g (fun_app$a ?v0 ?v1)))) :named a6))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$)) (= (tree_ap$h (tree_pure$d ?v0) (tree_pure$f ?v1)) (tree_pure$e (fun_app$d ?v0 ?v1)))) :named a7))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun$) (?v1 A$)) (= (tree_ap$c (tree_pure$i ?v0) (tree_pure$f ?v1)) (tree_pure$ (fun_app$e ?v0 ?v1)))) :named a8))
(assert (! (forall ((?v0 A_a_bool_fun_fun_bool_fun$) (?v1 A_a_bool_fun_fun$)) (= (tree_ap$k (tree_pure$j ?v0) (tree_pure$ ?v1)) (tree_pure$a (fun_app$f ?v0 ?v1)))) :named a9))
(assert (! (forall ((?v0 Bool_a_a_bool_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$l (tree_pure$k ?v0) (tree_pure$a ?v1)) (tree_pure$ (fun_app$g ?v0 ?v1)))) :named a10))
(assert (! (forall ((?v0 Bool_a_a_a_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$m (tree_pure$l ?v0) (tree_pure$a ?v1)) (tree_pure$d (fun_app$h ?v0 ?v1)))) :named a11))
(assert (! (forall ((?v0 A_a_a_fun_fun_bool_fun$) (?v1 A_a_a_fun_fun$)) (= (tree_ap$n (tree_pure$m ?v0) (tree_pure$d ?v1)) (tree_pure$a (fun_app$i ?v0 ?v1)))) :named a12))
(assert (! (= (fun_app$j (fun_app$k plus$a a$) b$) (fun_app$j (fun_app$k plus$a a$) c$)) :named a13))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (= ?v0 ?v1) (= (tree_ap$ (tree_ap$b (tree_pure$ uu$) ?v0) ?v1) (tree_pure$a true)))) :named a14))
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a15))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a16))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (= (tree_pure$d ?v0) (tree_pure$d ?v1)) (= ?v0 ?v1))) :named a17))
(assert (! (forall ((?v0 A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$) (?v1 A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$)) (= (= (tree_pure$c ?v0) (tree_pure$c ?v1)) (= ?v0 ?v1))) :named a18))
(assert (! (forall ((?v0 A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$) (?v1 A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$)) (= (= (tree_pure$b ?v0) (tree_pure$b ?v1)) (= ?v0 ?v1))) :named a19))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (= (tree_pure$f ?v0) (tree_pure$f ?v1)) (= ?v0 ?v1))) :named a20))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (= (= (tree_pure$g ?v0) (tree_pure$g ?v1)) (= ?v0 ?v1))) :named a21))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$)) (= (= (tree_pure$e ?v0) (tree_pure$e ?v1)) (= ?v0 ?v1))) :named a22))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun$) (?v1 A_a_a_bool_fun_fun_fun$)) (= (= (tree_pure$i ?v0) (tree_pure$i ?v1)) (= ?v0 ?v1))) :named a23))
(assert (! (forall ((?v0 A_a_fun_a_a_bool_fun_fun_fun$) (?v1 A_a_fun_a_a_bool_fun_fun_fun$)) (= (= (tree_pure$n ?v0) (tree_pure$n ?v1)) (= ?v0 ?v1))) :named a24))
(assert (! (forall ((?v0 A_tree_tree_tree_tree$) (?v1 A_tree_tree_tree_tree$)) (! (= (plus$b ?v0 ?v1) (tree_ap$o (tree_ap$p (tree_pure$o plus$c) ?v0) ?v1)) :pattern ((plus$b ?v0 ?v1)))) :named a25))
(assert (! (forall ((?v0 A_tree_tree_tree$) (?v1 A_tree_tree_tree$)) (! (= (fun_app$l (fun_app$m plus$c ?v0) ?v1) (tree_ap$q (tree_ap$r (tree_pure$p plus$d) ?v0) ?v1)) :pattern ((fun_app$l (fun_app$m plus$c ?v0) ?v1)))) :named a26))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (! (= (fun_app$n (fun_app$o plus$d ?v0) ?v1) (tree_ap$s (tree_ap$t (tree_pure$q plus$a) ?v0) ?v1)) :pattern ((fun_app$n (fun_app$o plus$d ?v0) ?v1)))) :named a27))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (! (= (fun_app$j (fun_app$k plus$a ?v0) ?v1) (tree_ap$g (tree_ap$h (tree_pure$d plus$) ?v0) ?v1)) :pattern ((fun_app$j (fun_app$k plus$a ?v0) ?v1)))) :named a28))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$b (tree_ap$u tree_C$a ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$b ?v0 ?v2) ?v1))) :named a29))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$g (tree_ap$h (tree_ap$i tree_C$ ?v0) ?v1) ?v2) (tree_ap$g (tree_ap$h ?v0 ?v2) ?v1))) :named a30))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$c (tree_ap$v tree_C$b ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$c ?v0 ?v2) ?v1))) :named a31))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$h (tree_ap$w (tree_ap$x tree_C$c ?v0) ?v1) ?v2) (tree_ap$h (tree_ap$w ?v0 ?v2) ?v1))) :named a32))
(assert (! (forall ((?v0 A_a_a_a_bool_fun_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$c (tree_ap$y (tree_ap$z tree_C$d ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$y ?v0 ?v2) ?v1))) :named a33))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$) (?v1 A_tree$) (?v2 A_a_fun_tree$)) (= (tree_ap$aa (tree_ap$ab (tree_ap$ac tree_C$e ?v0) ?v1) ?v2) (tree_ap$g (tree_ap$ad ?v0 ?v2) ?v1))) :named a34))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$g (tree_ap$ad (tree_ap$ae tree_C$f ?v0) ?v1) ?v2) (tree_ap$aa (tree_ap$ab ?v0 ?v2) ?v1))) :named a35))
(assert (! (forall ((?v0 A_a_fun_a_a_a_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_a_fun_tree$)) (= (tree_ap$ad (tree_ap$af (tree_ap$ag tree_C$g ?v0) ?v1) ?v2) (tree_ap$h (tree_ap$ah ?v0 ?v2) ?v1))) :named a36))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$h (tree_ap$ah (tree_ap$ai tree_C$h ?v0) ?v1) ?v2) (tree_ap$ad (tree_ap$af ?v0 ?v2) ?v1))) :named a37))
(assert (! (forall ((?v0 A_a_a_a_fun_a_fun_fun_fun_tree$) (?v1 A_tree$) (?v2 A_tree$)) (= (tree_ap$ab (tree_ap$aj (tree_ap$ak tree_C$i ?v0) ?v1) ?v2) (tree_ap$ab (tree_ap$aj ?v0 ?v2) ?v1))) :named a38))
(assert (! (forall ((?v0 Bool_bool_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$al (tree_ap$am (tree_pure$r comp$b) ?v0) ?v1) ?v2) (tree_ap$j ?v0 (tree_ap$ ?v1 ?v2)))) :named a39))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$an (tree_ap$ao (tree_pure$s comp$c) ?v0) ?v1) ?v2) (tree_ap$ ?v0 (tree_ap$g ?v1 ?v2)))) :named a40))
(assert (! (forall ((?v0 Bool_a_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$g (tree_ap$ap (tree_ap$aq (tree_pure$t comp$d) ?v0) ?v1) ?v2) (tree_ap$ar ?v0 (tree_ap$ ?v1 ?v2)))) :named a41))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$g (tree_ap$ad (tree_ap$as (tree_pure$u comp$e) ?v0) ?v1) ?v2) (tree_ap$g ?v0 (tree_ap$g ?v1 ?v2)))) :named a42))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$) (?v1 A_a_bool_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$at (tree_ap$au (tree_pure$v comp$f) ?v0) ?v1) ?v2) (tree_ap$av ?v0 (tree_ap$b ?v1 ?v2)))) :named a43))
(assert (! (forall ((?v0 A_a_fun_bool_fun_tree$) (?v1 A_a_a_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$aw (tree_ap$ax (tree_pure$w comp$g) ?v0) ?v1) ?v2) (tree_ap$ay ?v0 (tree_ap$h ?v1 ?v2)))) :named a44))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$az (tree_ap$ba (tree_pure$x comp$h) ?v0) ?v1) ?v2) (tree_ap$a ?v0 (tree_ap$ ?v1 ?v2)))) :named a45))
(assert (! (forall ((?v0 Bool_a_a_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$h (tree_ap$bb (tree_ap$bc (tree_pure$y comp$i) ?v0) ?v1) ?v2) (tree_ap$bd ?v0 (tree_ap$ ?v1 ?v2)))) :named a46))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$h (tree_ap$ah (tree_ap$be (tree_pure$z comp$j) ?v0) ?v1) ?v2) (tree_ap$h ?v0 (tree_ap$g ?v1 ?v2)))) :named a47))
(assert (! (forall ((?v0 A_bool_fun_a_fun_tree$) (?v1 A_a_bool_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$g (tree_ap$bf (tree_ap$bg (tree_pure$aa comp$k) ?v0) ?v1) ?v2) (tree_ap$bh ?v0 (tree_ap$b ?v1 ?v2)))) :named a48))
(assert (! (forall ((?v0 Bool_tree$) (?v1 A_tree$)) (= (tree_ap$ (tree_ap$a tree_K$ ?v0) ?v1) ?v0)) :named a49))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (tree_ap$g (tree_ap$h tree_K$a ?v0) ?v1) ?v0)) :named a50))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_tree$)) (= (tree_ap$b (tree_ap$az tree_K$b ?v0) ?v1) ?v0)) :named a51))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (tree_ap$h (tree_ap$ah tree_K$c ?v0) ?v1) ?v0)) :named a52))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$c (tree_ap$bi tree_K$d ?v0) ?v1) ?v0)) :named a53))
(assert (! (forall ((?v0 Bool_tree$) (?v1 A_bool_fun_tree$)) (= (tree_ap$av (tree_ap$bj tree_K$e ?v0) ?v1) ?v0)) :named a54))
(assert (! (forall ((?v0 A_tree$) (?v1 A_a_fun_tree$)) (= (tree_ap$aa (tree_ap$ab tree_K$f ?v0) ?v1) ?v0)) :named a55))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_tree$)) (= (tree_ap$ab (tree_ap$bk tree_K$g ?v0) ?v1) ?v0)) :named a56))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$w (tree_ap$bl tree_K$h ?v0) ?v1) ?v0)) :named a57))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$) (?v1 A_tree$)) (= (tree_ap$af (tree_ap$bm tree_K$i ?v0) ?v1) ?v0)) :named a58))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$ ?v0 (tree_pure$f ?v2)) (tree_ap$ ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a59))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$g ?v0 (tree_pure$f ?v2)) (tree_ap$g ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a60))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$b ?v0 (tree_pure$f ?v2)) (tree_ap$b ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a61))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$h ?v0 (tree_pure$f ?v2)) (tree_ap$h ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a62))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$c ?v0 (tree_pure$f ?v2)) (tree_ap$c ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a63))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$) (?v1 A_a_a_fun_a_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$ab ?v0 (tree_pure$f ?v2)) (tree_ap$ab ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a64))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_a_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$w ?v0 (tree_pure$f ?v2)) (tree_ap$w ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a65))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$af ?v0 (tree_pure$f ?v2)) (tree_ap$af ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a66))
(assert (! (forall ((?v0 A_a_a_a_bool_fun_fun_fun_fun_tree$) (?v1 A_a_a_a_bool_fun_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$y ?v0 (tree_pure$f ?v2)) (tree_ap$y ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a67))
(assert (! (forall ((?v0 A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$bn ?v0 (tree_pure$f ?v2)) (tree_ap$bn ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a68))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$ ?v0 ?v2) (tree_ap$ ?v1 ?v2))) (= ?v0 ?v1))) :named a69))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$g ?v0 ?v2) (tree_ap$g ?v1 ?v2))) (= ?v0 ?v1))) :named a70))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$b ?v0 ?v2) (tree_ap$b ?v1 ?v2))) (= ?v0 ?v1))) :named a71))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$h ?v0 ?v2) (tree_ap$h ?v1 ?v2))) (= ?v0 ?v1))) :named a72))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$c ?v0 ?v2) (tree_ap$c ?v1 ?v2))) (= ?v0 ?v1))) :named a73))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$) (?v1 A_a_a_fun_a_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$ab ?v0 ?v2) (tree_ap$ab ?v1 ?v2))) (= ?v0 ?v1))) :named a74))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_a_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$w ?v0 ?v2) (tree_ap$w ?v1 ?v2))) (= ?v0 ?v1))) :named a75))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_a_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$af ?v0 ?v2) (tree_ap$af ?v1 ?v2))) (= ?v0 ?v1))) :named a76))
(assert (! (forall ((?v0 A_a_a_a_bool_fun_fun_fun_fun_tree$) (?v1 A_a_a_a_bool_fun_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$y ?v0 ?v2) (tree_ap$y ?v1 ?v2))) (= ?v0 ?v1))) :named a77))
(assert (! (forall ((?v0 A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$) (?v1 A_a_a_fun_a_a_bool_fun_fun_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$bn ?v0 ?v2) (tree_ap$bn ?v1 ?v2))) (= ?v0 ?v1))) :named a78))
(assert (! (= (tree_ap$ (tree_ap$b (tree_pure$ uu$) (fun_app$j (fun_app$k plus$a a$) b$)) (fun_app$j (fun_app$k plus$a a$) c$)) (tree_pure$a true)) :named a79))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$al (tree_ap$bo tree_S$ ?v0) ?v1) ?v2) (tree_ap$j (tree_ap$bp ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a80))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$an (tree_ap$bq tree_S$a ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$b ?v0 ?v2) (tree_ap$g ?v1 ?v2)))) :named a81))
(assert (! (forall ((?v0 A_bool_a_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$g (tree_ap$ap (tree_ap$br tree_S$b ?v0) ?v1) ?v2) (tree_ap$ar (tree_ap$bs ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a82))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$g (tree_ap$ad (tree_ap$bt tree_S$c ?v0) ?v1) ?v2) (tree_ap$g (tree_ap$h ?v0 ?v2) (tree_ap$g ?v1 ?v2)))) :named a83))
(assert (! (forall ((?v0 A_a_bool_fun_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$at (tree_ap$bu tree_S$d ?v0) ?v1) ?v2) (tree_ap$av (tree_ap$bv ?v0 ?v2) (tree_ap$b ?v1 ?v2)))) :named a84))
(assert (! (forall ((?v0 A_a_a_fun_bool_fun_fun_tree$) (?v1 A_a_a_fun_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$aw (tree_ap$bw tree_S$e ?v0) ?v1) ?v2) (tree_ap$ay (tree_ap$bx ?v0 ?v2) (tree_ap$h ?v1 ?v2)))) :named a85))
(assert (! (forall ((?v0 A_bool_a_bool_fun_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$az (tree_ap$by tree_S$f ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$bz ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a86))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$b (tree_ap$ca (tree_ap$cb tree_S$g ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$c ?v0 ?v2) (tree_ap$g ?v1 ?v2)))) :named a87))
(assert (! (forall ((?v0 A_bool_a_a_fun_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$h (tree_ap$bb (tree_ap$cc tree_S$h ?v0) ?v1) ?v2) (tree_ap$bd (tree_ap$cd ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a88))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$h (tree_ap$ah (tree_ap$ce tree_S$i ?v0) ?v1) ?v2) (tree_ap$h (tree_ap$w ?v0 ?v2) (tree_ap$g ?v1 ?v2)))) :named a89))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$a (fun_app$p (fun_app$q comp$a ?v0) ?v1) ?v2) (fun_app$a ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$a (fun_app$p (fun_app$q comp$a ?v0) ?v1) ?v2)))) :named a90))
(assert (! (forall ((?v0 A_a_fun_a_a_bool_fun_fun_fun$) (?v1 A_a_a_fun_fun$) (?v2 A$)) (! (= (fun_app$e (fun_app$r (fun_app$s comp$ ?v0) ?v1) ?v2) (fun_app$p ?v0 (fun_app$d ?v1 ?v2))) :pattern ((fun_app$e (fun_app$r (fun_app$s comp$ ?v0) ?v1) ?v2)))) :named a91))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$ (fun_app$t (fun_app$u comp$c ?v0) ?v1) ?v2) (fun_app$ ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$ (fun_app$t (fun_app$u comp$c ?v0) ?v1) ?v2)))) :named a92))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$b (fun_app$v (fun_app$w comp$e ?v0) ?v1) ?v2) (fun_app$b ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$b (fun_app$v (fun_app$w comp$e ?v0) ?v1) ?v2)))) :named a93))
(assert (! (forall ((?v0 A_a_fun_a_fun$) (?v1 A_a_a_fun_fun$) (?v2 A$)) (! (= (fun_app$b (fun_app$x (comp$l ?v0) ?v1) ?v2) (fun_app$y ?v0 (fun_app$d ?v1 ?v2))) :pattern ((fun_app$b (fun_app$x (comp$l ?v0) ?v1) ?v2)))) :named a94))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$d (fun_app$z (fun_app$aa comp$j ?v0) ?v1) ?v2) (fun_app$d ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$d (fun_app$z (fun_app$aa comp$j ?v0) ?v1) ?v2)))) :named a95))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$e (fun_app$ab (comp$m ?v0) ?v1) ?v2) (fun_app$e ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$e (fun_app$ab (comp$m ?v0) ?v1) ?v2)))) :named a96))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$ac (fun_app$ad (comp$n ?v0) ?v1) ?v2) (fun_app$ac ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$ac (fun_app$ad (comp$n ?v0) ?v1) ?v2)))) :named a97))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$ae (fun_app$af (comp$o ?v0) ?v1) ?v2) (fun_app$ae ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$ae (fun_app$af (comp$o ?v0) ?v1) ?v2)))) :named a98))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$ag (fun_app$ah (comp$p ?v0) ?v1) ?v2) (fun_app$ag ?v0 (fun_app$b ?v1 ?v2))) :pattern ((fun_app$ag (fun_app$ah (comp$p ?v0) ?v1) ?v2)))) :named a99))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (= (= (fun_app$b (fun_app$d plus$ ?v0) ?v1) (fun_app$b (fun_app$d plus$ ?v2) ?v1)) (= ?v0 ?v2))) :named a100))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (= (= (fun_app$b (fun_app$d plus$ ?v0) ?v1) (fun_app$b (fun_app$d plus$ ?v0) ?v2)) (= ?v1 ?v2))) :named a101))
(assert (! (= tree_I$ (tree_ap$cf (tree_ap$cg tree_S$j tree_K$j) tree_K$k)) :named a102))
(assert (! (= tree_I$a (tree_ap$ch (tree_ap$ci tree_S$k tree_K$l) tree_K$f)) :named a103))
(assert (! (= tree_I$a (tree_ap$cj (tree_ap$ck tree_S$l tree_K$f) tree_K$a)) :named a104))
(assert (! (= tree_I$ (tree_ap$cl (tree_ap$cm tree_S$m tree_K$k) tree_K$c)) :named a105))
(assert (! (= tree_I$b (tree_ap$cn (tree_ap$co tree_S$n tree_K$m) tree_K$d)) :named a106))
(assert (! (= tree_I$c (tree_ap$cp (tree_ap$cq tree_S$o tree_K$n) tree_K$b)) :named a107))
(assert (! (= tree_I$d (tree_ap$cr (tree_ap$cs tree_S$p tree_K$o) tree_K$e)) :named a108))
(assert (! (= tree_I$d (tree_ap$ct (tree_ap$cu tree_S$q tree_K$e) tree_K$)) :named a109))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$ (tree_pure$g ?v0) (node$a ?v1 ?v2 ?v3)) (node$df (fun_app$ ?v0 ?v1) (tree_ap$ (tree_pure$g ?v0) ?v2) (tree_ap$ (tree_pure$g ?v0) ?v3)))) :named a110))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$g (tree_pure$e ?v0) (node$a ?v1 ?v2 ?v3)) (node$a (fun_app$b ?v0 ?v1) (tree_ap$g (tree_pure$e ?v0) ?v2) (tree_ap$g (tree_pure$e ?v0) ?v3)))) :named a111))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$b (tree_pure$ ?v0) (node$a ?v1 ?v2 ?v3)) (node$ (fun_app$a ?v0 ?v1) (tree_ap$b (tree_pure$ ?v0) ?v2) (tree_ap$b (tree_pure$ ?v0) ?v3)))) :named a112))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$h (tree_pure$d ?v0) (node$a ?v1 ?v2 ?v3)) (node$j (fun_app$d ?v0 ?v1) (tree_ap$h (tree_pure$d ?v0) ?v2) (tree_ap$h (tree_pure$d ?v0) ?v3)))) :named a113))
(assert (! (forall ((?v0 A_a_a_bool_fun_fun_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$c (tree_pure$i ?v0) (node$a ?v1 ?v2 ?v3)) (node$c (fun_app$e ?v0 ?v1) (tree_ap$c (tree_pure$i ?v0) ?v2) (tree_ap$c (tree_pure$i ?v0) ?v3)))) :named a114))
(assert (! (forall ((?v0 A_a_bool_fun_fun_a_a_fun_a_a_bool_fun_fun_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A_a_bool_fun_fun_tree$) (?v3 A_a_bool_fun_fun_tree$)) (= (tree_ap$f (tree_pure$c ?v0) (node$c ?v1 ?v2 ?v3)) (node$h (fun_app$q ?v0 ?v1) (tree_ap$f (tree_pure$c ?v0) ?v2) (tree_ap$f (tree_pure$c ?v0) ?v3)))) :named a115))
(assert (! (forall ((?v0 A_a_fun_a_a_bool_fun_fun_fun_a_a_a_fun_fun_a_a_a_bool_fun_fun_fun_fun_fun$) (?v1 A_a_fun_a_a_bool_fun_fun_fun$) (?v2 A_a_fun_a_a_bool_fun_fun_fun_tree$) (?v3 A_a_fun_a_a_bool_fun_fun_fun_tree$)) (= (tree_ap$e (tree_pure$b ?v0) (node$h ?v1 ?v2 ?v3)) (node$e (fun_app$s ?v0 ?v1) (tree_ap$e (tree_pure$b ?v0) ?v2) (tree_ap$e (tree_pure$b ?v0) ?v3)))) :named a116))
(assert (! (forall ((?v0 A_bool_fun_a_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun_tree$)) (= (tree_ap$bh (tree_pure$ab ?v0) (node$ ?v1 ?v2 ?v3)) (node$a (fun_app$ai ?v0 ?v1) (tree_ap$bh (tree_pure$ab ?v0) ?v2) (tree_ap$bh (tree_pure$ab ?v0) ?v3)))) :named a117))
(assert (! (forall ((?v0 A_a_fun_a_fun$) (?v1 A_a_fun$) (?v2 A_a_fun_tree$) (?v3 A_a_fun_tree$)) (= (tree_ap$aa (tree_pure$ac ?v0) (node$j ?v1 ?v2 ?v3)) (node$a (fun_app$y ?v0 ?v1) (tree_ap$aa (tree_pure$ac ?v0) ?v2) (tree_ap$aa (tree_pure$ac ?v0) ?v3)))) :named a118))
(assert (! (forall ((?v0 A_bool_fun_a_bool_fun_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun_tree$)) (= (tree_ap$al (tree_pure$ad ?v0) (node$ ?v1 ?v2 ?v3)) (node$ (fun_app$aj ?v0 ?v1) (tree_ap$al (tree_pure$ad ?v0) ?v2) (tree_ap$al (tree_pure$ad ?v0) ?v3)))) :named a119))
(check-sat)
;(get-unsat-core)
