; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 478
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort Nat$ 0)
(declare-sort Nat_nat_fun$ 0)
(declare-sort Nat_bool_fun$ 0)
(declare-sort Nat_nat_fun_nat_fun$ 0)
(declare-sort Nat_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_nat_prod_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun$ 0)
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_nat_prod_fun$ 0)
(declare-sort Nat_nat_nat_prod_nat_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_fun$ 0)
(declare-sort Nat_nat_prod_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun$ 0)
(declare-sort Nat_nat_fun_nat_nat_prod_nat_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_fun$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_nat_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ 0)
(declare-sort Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ 0)
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ 0)
(declare-datatypes () ((Dir$ (l$) (r$))
  (Dir_list$ (nil$) (cons$ (hd$ Dir$) (tl$ Dir_list$)))))
(declare-codatatypes () ((Nat_tree$ (node$ (root$ Nat$) (left$ Nat_tree$) (right$ Nat_tree$)))
  (Nat_nat_prod_nat_fun_tree$ (node$a (select$ Nat_nat_prod_nat_fun$) (selecta$ Nat_nat_prod_nat_fun_tree$) (selectb$ Nat_nat_prod_nat_fun_tree$)))))
(declare-datatypes () ((Nat_nat_prod$ (pair$ (fst$ Nat$) (snd$ Nat$)))))
(declare-codatatypes () ((Nat_nat_prod_tree$ (node$b (root$a Nat_nat_prod$) (left$a Nat_nat_prod_tree$) (right$a Nat_nat_prod_tree$)))
  (Nat_nat_fun_tree$ (node$c (selectc$ Nat_nat_fun$) (selectd$ Nat_nat_fun_tree$) (selecte$ Nat_nat_fun_tree$)))
  (Nat_nat_fun_nat_fun_tree$ (node$d (selectf$ Nat_nat_fun_nat_fun$) (selectg$ Nat_nat_fun_nat_fun_tree$) (selecth$ Nat_nat_fun_nat_fun_tree$)))
  (Nat_nat_nat_fun_fun_tree$ (node$e (selecti$ Nat_nat_nat_fun_fun$) (selectj$ Nat_nat_nat_fun_fun_tree$) (selectk$ Nat_nat_nat_fun_fun_tree$)))
  (Nat_nat_nat_prod_fun_tree$ (node$f (selectl$ Nat_nat_nat_prod_fun$) (selectm$ Nat_nat_nat_prod_fun_tree$) (selectn$ Nat_nat_nat_prod_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_fun_tree$ (node$g (selecto$ Nat_nat_prod_nat_fun_nat_fun$) (selectp$ Nat_nat_prod_nat_fun_nat_fun_tree$) (selectq$ Nat_nat_prod_nat_fun_nat_fun_tree$)))
  (Nat_nat_fun_nat_nat_fun_fun_tree$ (node$h (selectr$ Nat_nat_fun_nat_nat_fun_fun$) (selects$ Nat_nat_fun_nat_nat_fun_fun_tree$) (selectt$ Nat_nat_fun_nat_nat_fun_fun_tree$)))
  (Nat_nat_prod_nat_nat_fun_fun_tree$ (node$i (selectu$ Nat_nat_prod_nat_nat_fun_fun$) (selectv$ Nat_nat_prod_nat_nat_fun_fun_tree$) (selectw$ Nat_nat_prod_nat_nat_fun_fun_tree$)))
  (Nat_nat_nat_prod_nat_fun_fun_tree$ (node$j (selectx$ Nat_nat_nat_prod_nat_fun_fun$) (selecty$ Nat_nat_nat_prod_nat_fun_fun_tree$) (selectz$ Nat_nat_nat_prod_nat_fun_fun_tree$)))
  (Nat_nat_fun_nat_nat_prod_fun_tree$ (node$k (selecua$ Nat_nat_fun_nat_nat_prod_fun$) (selecub$ Nat_nat_fun_nat_nat_prod_fun_tree$) (selecuc$ Nat_nat_fun_nat_nat_prod_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ (node$l (selecud$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$) (selecue$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) (selecuf$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_fun_fun_tree$ (node$m (selecug$ Nat_nat_prod_nat_fun_nat_nat_fun_fun$) (selecuh$ Nat_nat_prod_nat_fun_nat_nat_fun_fun_tree$) (selecui$ Nat_nat_prod_nat_fun_nat_nat_fun_fun_tree$)))
  (Nat_nat_fun_nat_nat_prod_nat_fun_fun_tree$ (node$n (selecuj$ Nat_nat_fun_nat_nat_prod_nat_fun_fun$) (selecuk$ Nat_nat_fun_nat_nat_prod_nat_fun_fun_tree$) (selecul$ Nat_nat_fun_nat_nat_prod_nat_fun_fun_tree$)))
  (Nat_nat_prod_nat_nat_prod_fun_tree$ (node$o (selecum$ Nat_nat_prod_nat_nat_prod_fun$) (selecun$ Nat_nat_prod_nat_nat_prod_fun_tree$) (selecuo$ Nat_nat_prod_nat_nat_prod_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$ (node$p (selecup$ Nat_nat_prod_nat_fun_nat_nat_prod_fun$) (selecuq$ Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$) (selecur$ Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$)))
  (Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$ (node$q (selecus$ Nat_nat_prod_nat_nat_prod_nat_fun_fun$) (selecut$ Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$) (selecuu$ Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$)))
  (Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ (node$r (selecuv$ Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) (selecuw$ Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$) (selecux$ Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ (node$s (selecuy$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) (selecuz$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$) (selecva$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ (node$t (selecvb$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$) (selecvc$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$) (selecvd$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ (node$u (selecve$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$) (selecvf$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$) (selecvg$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ (node$v (selecvh$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$) (selecvi$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$) (selecvj$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$)))
  (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ (node$w (selecvk$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) (selecvl$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$) (selecvm$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)))
  (Nat_tree_tree$ (node$x (root$b Nat_tree$) (left$b Nat_tree_tree$) (right$b Nat_tree_tree$)))
  (Nat_tree_tree_tree$ (node$y (root$c Nat_tree_tree$) (left$c Nat_tree_tree_tree$) (right$c Nat_tree_tree_tree$)))))
(declare-fun x$ () Nat$)
(declare-fun uu$ () Nat_nat_prod_nat_fun$)
(declare-fun den$ () Nat_tree$)
(declare-fun less$ (Nat$) Nat_bool_fun$)
(declare-fun zero$ () Nat$)
(declare-fun root$d (Nat_nat_fun_tree$) Nat_nat_fun$)
(declare-fun root$e (Nat_nat_prod_nat_fun_tree$) Nat_nat_prod_nat_fun$)
(declare-fun root$f (Nat_nat_fun_nat_fun_tree$) Nat_nat_fun_nat_fun$)
(declare-fun root$g (Nat_nat_nat_fun_fun_tree$) Nat_nat_nat_fun_fun$)
(declare-fun root$h (Nat_nat_nat_prod_fun_tree$) Nat_nat_nat_prod_fun$)
(declare-fun root$i (Nat_nat_prod_nat_fun_nat_fun_tree$) Nat_nat_prod_nat_fun_nat_fun$)
(declare-fun root$j (Nat_nat_fun_nat_nat_fun_fun_tree$) Nat_nat_fun_nat_nat_fun_fun$)
(declare-fun root$k (Nat_nat_prod_nat_nat_fun_fun_tree$) Nat_nat_prod_nat_nat_fun_fun$)
(declare-fun root$l (Nat_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_nat_prod_nat_fun_fun$)
(declare-fun root$m (Nat_nat_fun_nat_nat_prod_fun_tree$) Nat_nat_fun_nat_nat_prod_fun$)
(declare-fun root$n (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)
(declare-fun root$o (Nat_nat_prod_nat_fun_nat_nat_fun_fun_tree$) Nat_nat_prod_nat_fun_nat_nat_fun_fun$)
(declare-fun root$p (Nat_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_fun_nat_nat_prod_nat_fun_fun$)
(declare-fun zero$a () Nat_tree_tree_tree$)
(declare-fun zero$b () Nat_tree_tree$)
(declare-fun zero$c () Nat_tree$)
(declare-fun fun_app$ (Nat_nat_prod_nat_fun$ Nat_nat_prod$) Nat$)
(declare-fun tree_ap$ (Nat_nat_prod_nat_fun_tree$ Nat_nat_prod_tree$) Nat_tree$)
(declare-fun fun_app$a (Nat_bool_fun$ Nat$) Bool)
(declare-fun fun_app$b (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ Nat_nat_prod_nat_fun$) Nat_nat_prod_nat_fun$)
(declare-fun fun_app$c (Nat_nat_fun$ Nat$) Nat$)
(declare-fun fun_app$d (Nat_nat_nat_prod_fun$ Nat$) Nat_nat_prod$)
(declare-fun fun_app$e (Nat_nat_prod_nat_fun_nat_fun$ Nat_nat_prod_nat_fun$) Nat$)
(declare-fun fun_app$f (Nat_nat_nat_prod_nat_fun_fun$ Nat$) Nat_nat_prod_nat_fun$)
(declare-fun fun_app$g (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$) Nat_nat_prod$)
(declare-fun fun_app$h (Nat_nat_prod_nat_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_fun$) Nat_nat_prod$)
(declare-fun fun_app$i (Nat_nat_prod_nat_nat_prod_nat_fun_fun$ Nat_nat_prod$) Nat_nat_prod_nat_fun$)
(declare-fun fun_app$j (Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ Nat$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)
(declare-fun fun_app$k (Nat_nat_fun_nat_fun$ Nat_nat_fun$) Nat$)
(declare-fun fun_app$l (Nat_nat_nat_fun_fun$ Nat$) Nat_nat_fun$)
(declare-fun fun_app$m (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$) Nat_nat_fun$)
(declare-fun fun_app$n (Nat_nat_prod_nat_nat_fun_fun$ Nat_nat_prod$) Nat_nat_fun$)
(declare-fun fun_app$o (Nat_nat_fun_nat_nat_prod_fun$ Nat_nat_fun$) Nat_nat_prod$)
(declare-fun tree_ap$a (Nat_nat_fun_tree$ Nat_tree$) Nat_tree$)
(declare-fun tree_ap$b (Nat_nat_fun_nat_fun_tree$ Nat_nat_fun_tree$) Nat_tree$)
(declare-fun tree_ap$c (Nat_nat_nat_fun_fun_tree$ Nat_tree$) Nat_nat_fun_tree$)
(declare-fun tree_ap$d (Nat_nat_nat_prod_fun_tree$ Nat_tree$) Nat_nat_prod_tree$)
(declare-fun tree_ap$e (Nat_nat_prod_nat_fun_nat_fun_tree$ Nat_nat_prod_nat_fun_tree$) Nat_tree$)
(declare-fun tree_ap$f (Nat_nat_fun_nat_nat_fun_fun_tree$ Nat_nat_fun_tree$) Nat_nat_fun_tree$)
(declare-fun tree_ap$g (Nat_nat_prod_nat_nat_fun_fun_tree$ Nat_nat_prod_tree$) Nat_nat_fun_tree$)
(declare-fun tree_ap$h (Nat_nat_nat_prod_nat_fun_fun_tree$ Nat_tree$) Nat_nat_prod_nat_fun_tree$)
(declare-fun tree_ap$i (Nat_nat_fun_nat_nat_prod_fun_tree$ Nat_nat_fun_tree$) Nat_nat_prod_tree$)
(declare-fun tree_ap$j (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ Nat_nat_prod_nat_fun_tree$) Nat_nat_prod_nat_fun_tree$)
(declare-fun tree_ap$k (Nat_nat_prod_nat_nat_prod_fun_tree$ Nat_nat_prod_tree$) Nat_nat_prod_tree$)
(declare-fun tree_ap$l (Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_fun_tree$) Nat_nat_prod_tree$)
(declare-fun tree_ap$m (Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$ Nat_nat_prod_tree$) Nat_nat_prod_nat_fun_tree$)
(declare-fun tree_ap$n (Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ Nat_tree$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun tree_ap$o (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_prod_tree$)
(declare-fun tree_ap$p (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_tree$)
(declare-fun tree_ap$q (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_prod_nat_fun_tree$)
(declare-fun tree_ap$r (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun tree_pure$ (Nat_nat_prod_nat_fun$) Nat_nat_prod_nat_fun_tree$)
(declare-fun tree_pure$a (Nat$) Nat_tree$)
(declare-fun tree_pure$b (Nat_nat_fun$) Nat_nat_fun_tree$)
(declare-fun tree_pure$c (Nat_nat_prod$) Nat_nat_prod_tree$)
(declare-fun tree_pure$d (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun tree_pure$e (Nat_nat_fun_nat_fun$) Nat_nat_fun_nat_fun_tree$)
(declare-fun tree_pure$f (Nat_nat_fun_nat_nat_prod_fun$) Nat_nat_fun_nat_nat_prod_fun_tree$)
(declare-fun tree_pure$g (Nat_nat_fun_nat_nat_fun_fun$) Nat_nat_fun_nat_nat_fun_fun_tree$)
(declare-fun tree_pure$h (Nat_nat_prod_nat_fun_nat_nat_fun_fun$) Nat_nat_prod_nat_fun_nat_nat_fun_fun_tree$)
(declare-fun tree_pure$i (Nat_nat_fun_nat_nat_prod_nat_fun_fun$) Nat_nat_fun_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun tree_pure$j (Nat_nat_nat_prod_fun$) Nat_nat_nat_prod_fun_tree$)
(declare-fun tree_pure$k (Nat_nat_prod_nat_fun_nat_fun$) Nat_nat_prod_nat_fun_nat_fun_tree$)
(declare-fun tree_pure$l (Nat_nat_nat_prod_nat_fun_fun$) Nat_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun tree_pure$m (Nat_nat_prod_nat_nat_prod_fun$) Nat_nat_prod_nat_nat_prod_fun_tree$)
(declare-fun tree_pure$n (Nat_nat_prod_nat_fun_nat_nat_prod_fun$) Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$)
(declare-fun tree_pure$o (Nat_nat_prod_nat_nat_prod_nat_fun_fun$) Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun tree_pure$p (Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)
(declare-fun tree_pure$q (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)
(declare-fun tree_pure$r (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$)
(declare-fun tree_pure$s (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$)
(declare-fun tree_pure$t (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun tree_pure$u (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)
(declare-fun tree_pure$v (Nat_tree_tree$) Nat_tree_tree_tree$)
(declare-fun tree_pure$w (Nat_tree$) Nat_tree_tree$)
(declare-fun stern_brocot$ () Nat_nat_prod_tree$)
(declare-fun traverse_tree$ (Dir_list$ Nat_tree$) Nat_tree$)
(declare-fun traverse_tree$a (Dir_list$ Nat_nat_fun_tree$) Nat_nat_fun_tree$)
(declare-fun traverse_tree$b (Dir_list$ Nat_nat_prod_nat_fun_tree$) Nat_nat_prod_nat_fun_tree$)
(declare-fun traverse_tree$c (Dir_list$ Nat_nat_prod_tree$) Nat_nat_prod_tree$)
(declare-fun traverse_tree$d (Dir_list$ Nat_nat_fun_nat_fun_tree$) Nat_nat_fun_nat_fun_tree$)
(declare-fun traverse_tree$e (Dir_list$ Nat_nat_nat_fun_fun_tree$) Nat_nat_nat_fun_fun_tree$)
(declare-fun traverse_tree$f (Dir_list$ Nat_nat_nat_prod_fun_tree$) Nat_nat_nat_prod_fun_tree$)
(declare-fun traverse_tree$g (Dir_list$ Nat_nat_prod_nat_fun_nat_fun_tree$) Nat_nat_prod_nat_fun_nat_fun_tree$)
(declare-fun traverse_tree$h (Dir_list$ Nat_nat_fun_nat_nat_fun_fun_tree$) Nat_nat_fun_nat_nat_fun_fun_tree$)
(declare-fun traverse_tree$i (Dir_list$ Nat_nat_prod_nat_nat_fun_fun_tree$) Nat_nat_prod_nat_nat_fun_fun_tree$)
(declare-fun traverse_tree$j (Dir_list$ Nat_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun traverse_tree$k (Dir_list$ Nat_nat_fun_nat_nat_prod_fun_tree$) Nat_nat_fun_nat_nat_prod_fun_tree$)
(declare-fun traverse_tree$l (Dir_list$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)
(declare-fun traverse_tree$m (Dir_list$ Nat_nat_prod_nat_fun_nat_nat_fun_fun_tree$) Nat_nat_prod_nat_fun_nat_nat_fun_fun_tree$)
(declare-fun traverse_tree$n (Dir_list$ Nat_nat_fun_nat_nat_prod_nat_fun_fun_tree$) Nat_nat_fun_nat_nat_prod_nat_fun_fun_tree$)
(assert (! (forall ((?v0 Nat_nat_prod$)) (! (= (fun_app$ uu$ ?v0) (snd$ ?v0)) :pattern ((fun_app$ uu$ ?v0)))) :named a0))
(assert (! (not (fun_app$a (less$ zero$) x$)) :named a1))
(assert (! (exists ((?v0 Dir_list$)) (= x$ (root$ (traverse_tree$ ?v0 (tree_ap$ (tree_pure$ uu$) stern_brocot$))))) :named a2))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_tree$) (?v2 Nat_tree$)) (= (traverse_tree$ ?v0 (tree_ap$a ?v1 ?v2)) (tree_ap$a (traverse_tree$a ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a3))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_nat_fun_tree$) (?v2 Nat_nat_prod_tree$)) (= (traverse_tree$ ?v0 (tree_ap$ ?v1 ?v2)) (tree_ap$ (traverse_tree$b ?v0 ?v1) (traverse_tree$c ?v0 ?v2)))) :named a4))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_nat_fun_tree$) (?v2 Nat_nat_fun_tree$)) (= (traverse_tree$ ?v0 (tree_ap$b ?v1 ?v2)) (tree_ap$b (traverse_tree$d ?v0 ?v1) (traverse_tree$a ?v0 ?v2)))) :named a5))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_nat_fun_fun_tree$) (?v2 Nat_tree$)) (= (traverse_tree$a ?v0 (tree_ap$c ?v1 ?v2)) (tree_ap$c (traverse_tree$e ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a6))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_nat_prod_fun_tree$) (?v2 Nat_tree$)) (= (traverse_tree$c ?v0 (tree_ap$d ?v1 ?v2)) (tree_ap$d (traverse_tree$f ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a7))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_nat_fun_nat_fun_tree$) (?v2 Nat_nat_prod_nat_fun_tree$)) (= (traverse_tree$ ?v0 (tree_ap$e ?v1 ?v2)) (tree_ap$e (traverse_tree$g ?v0 ?v1) (traverse_tree$b ?v0 ?v2)))) :named a8))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_nat_nat_fun_fun_tree$) (?v2 Nat_nat_fun_tree$)) (= (traverse_tree$a ?v0 (tree_ap$f ?v1 ?v2)) (tree_ap$f (traverse_tree$h ?v0 ?v1) (traverse_tree$a ?v0 ?v2)))) :named a9))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_nat_nat_fun_fun_tree$) (?v2 Nat_nat_prod_tree$)) (= (traverse_tree$a ?v0 (tree_ap$g ?v1 ?v2)) (tree_ap$g (traverse_tree$i ?v0 ?v1) (traverse_tree$c ?v0 ?v2)))) :named a10))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_nat_prod_nat_fun_fun_tree$) (?v2 Nat_tree$)) (= (traverse_tree$b ?v0 (tree_ap$h ?v1 ?v2)) (tree_ap$h (traverse_tree$j ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a11))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_nat_nat_prod_fun_tree$) (?v2 Nat_nat_fun_tree$)) (= (traverse_tree$c ?v0 (tree_ap$i ?v1 ?v2)) (tree_ap$i (traverse_tree$k ?v0 ?v1) (traverse_tree$a ?v0 ?v2)))) :named a12))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat$)) (= (traverse_tree$ ?v0 (tree_pure$a ?v1)) (tree_pure$a ?v1))) :named a13))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_nat_fun$)) (= (traverse_tree$b ?v0 (tree_pure$ ?v1)) (tree_pure$ ?v1))) :named a14))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun$)) (= (traverse_tree$a ?v0 (tree_pure$b ?v1)) (tree_pure$b ?v1))) :named a15))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod$)) (= (traverse_tree$c ?v0 (tree_pure$c ?v1)) (tree_pure$c ?v1))) :named a16))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (traverse_tree$l ?v0 (tree_pure$d ?v1)) (tree_pure$d ?v1))) :named a17))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_nat_fun$)) (= (traverse_tree$d ?v0 (tree_pure$e ?v1)) (tree_pure$e ?v1))) :named a18))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_nat_nat_prod_fun$)) (= (traverse_tree$k ?v0 (tree_pure$f ?v1)) (tree_pure$f ?v1))) :named a19))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_nat_nat_fun_fun$)) (= (traverse_tree$h ?v0 (tree_pure$g ?v1)) (tree_pure$g ?v1))) :named a20))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_nat_fun_nat_nat_fun_fun$)) (= (traverse_tree$m ?v0 (tree_pure$h ?v1)) (tree_pure$h ?v1))) :named a21))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (traverse_tree$n ?v0 (tree_pure$i ?v1)) (tree_pure$i ?v1))) :named a22))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$) (?v1 Nat_nat_prod$)) (= (tree_ap$ (tree_pure$ ?v0) (tree_pure$c ?v1)) (tree_pure$a (fun_app$ ?v0 ?v1)))) :named a23))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$) (?v1 Nat_nat_prod_nat_fun$)) (= (tree_ap$j (tree_pure$d ?v0) (tree_pure$ ?v1)) (tree_pure$ (fun_app$b ?v0 ?v1)))) :named a24))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat$)) (= (tree_ap$a (tree_pure$b ?v0) (tree_pure$a ?v1)) (tree_pure$a (fun_app$c ?v0 ?v1)))) :named a25))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun$) (?v1 Nat$)) (= (tree_ap$d (tree_pure$j ?v0) (tree_pure$a ?v1)) (tree_pure$c (fun_app$d ?v0 ?v1)))) :named a26))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun$) (?v1 Nat_nat_prod_nat_fun$)) (= (tree_ap$e (tree_pure$k ?v0) (tree_pure$ ?v1)) (tree_pure$a (fun_app$e ?v0 ?v1)))) :named a27))
(assert (! (forall ((?v0 Nat_nat_nat_prod_nat_fun_fun$) (?v1 Nat$)) (= (tree_ap$h (tree_pure$l ?v0) (tree_pure$a ?v1)) (tree_pure$ (fun_app$f ?v0 ?v1)))) :named a28))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$) (?v1 Nat_nat_prod$)) (= (tree_ap$k (tree_pure$m ?v0) (tree_pure$c ?v1)) (tree_pure$c (fun_app$g ?v0 ?v1)))) :named a29))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_fun$) (?v1 Nat_nat_prod_nat_fun$)) (= (tree_ap$l (tree_pure$n ?v0) (tree_pure$ ?v1)) (tree_pure$c (fun_app$h ?v0 ?v1)))) :named a30))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_fun_fun$) (?v1 Nat_nat_prod$)) (= (tree_ap$m (tree_pure$o ?v0) (tree_pure$c ?v1)) (tree_pure$ (fun_app$i ?v0 ?v1)))) :named a31))
(assert (! (forall ((?v0 Nat_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) (?v1 Nat$)) (= (tree_ap$n (tree_pure$p ?v0) (tree_pure$a ?v1)) (tree_pure$d (fun_app$j ?v0 ?v1)))) :named a32))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$)) (= (= (tree_pure$q ?v0) (tree_pure$q ?v1)) (= ?v0 ?v1))) :named a33))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$)) (= (= (tree_pure$r ?v0) (tree_pure$r ?v1)) (= ?v0 ?v1))) :named a34))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$)) (= (= (tree_pure$s ?v0) (tree_pure$s ?v1)) (= ?v0 ?v1))) :named a35))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$)) (= (= (tree_pure$t ?v0) (tree_pure$t ?v1)) (= ?v0 ?v1))) :named a36))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$)) (= (= (tree_pure$u ?v0) (tree_pure$u ?v1)) (= ?v0 ?v1))) :named a37))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a38))
(assert (! (forall ((?v0 Nat_nat_prod$) (?v1 Nat_nat_prod$)) (= (= (tree_pure$c ?v0) (tree_pure$c ?v1)) (= ?v0 ?v1))) :named a39))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (= (tree_pure$d ?v0) (tree_pure$d ?v1)) (= ?v0 ?v1))) :named a40))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$) (?v1 Nat_nat_prod_nat_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a41))
(assert (! (forall ((?v0 Nat_nat_fun_tree$) (?v1 Nat_tree$)) (= (root$ (tree_ap$a ?v0 ?v1)) (fun_app$c (root$d ?v0) (root$ ?v1)))) :named a42))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_tree$) (?v1 Nat_nat_prod_tree$)) (= (root$ (tree_ap$ ?v0 ?v1)) (fun_app$ (root$e ?v0) (root$a ?v1)))) :named a43))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$) (?v1 Nat_nat_fun_tree$)) (= (root$ (tree_ap$b ?v0 ?v1)) (fun_app$k (root$f ?v0) (root$d ?v1)))) :named a44))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$) (?v1 Nat_tree$)) (= (root$d (tree_ap$c ?v0 ?v1)) (fun_app$l (root$g ?v0) (root$ ?v1)))) :named a45))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun_tree$) (?v1 Nat_tree$)) (= (root$a (tree_ap$d ?v0 ?v1)) (fun_app$d (root$h ?v0) (root$ ?v1)))) :named a46))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun_tree$) (?v1 Nat_nat_prod_nat_fun_tree$)) (= (root$ (tree_ap$e ?v0 ?v1)) (fun_app$e (root$i ?v0) (root$e ?v1)))) :named a47))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$) (?v1 Nat_nat_fun_tree$)) (= (root$d (tree_ap$f ?v0 ?v1)) (fun_app$m (root$j ?v0) (root$d ?v1)))) :named a48))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_fun_fun_tree$) (?v1 Nat_nat_prod_tree$)) (= (root$d (tree_ap$g ?v0 ?v1)) (fun_app$n (root$k ?v0) (root$a ?v1)))) :named a49))
(assert (! (forall ((?v0 Nat_nat_nat_prod_nat_fun_fun_tree$) (?v1 Nat_tree$)) (= (root$e (tree_ap$h ?v0 ?v1)) (fun_app$f (root$l ?v0) (root$ ?v1)))) :named a50))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_prod_fun_tree$) (?v1 Nat_nat_fun_tree$)) (= (root$a (tree_ap$i ?v0 ?v1)) (fun_app$o (root$m ?v0) (root$d ?v1)))) :named a51))
(assert (! (forall ((?v0 Nat$)) (= (root$ (tree_pure$a ?v0)) ?v0)) :named a52))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$)) (= (root$e (tree_pure$ ?v0)) ?v0)) :named a53))
(assert (! (forall ((?v0 Nat_nat_fun$)) (= (root$d (tree_pure$b ?v0)) ?v0)) :named a54))
(assert (! (forall ((?v0 Nat_nat_prod$)) (= (root$a (tree_pure$c ?v0)) ?v0)) :named a55))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (root$n (tree_pure$d ?v0)) ?v0)) :named a56))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun$)) (= (root$f (tree_pure$e ?v0)) ?v0)) :named a57))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_prod_fun$)) (= (root$m (tree_pure$f ?v0)) ?v0)) :named a58))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$)) (= (root$j (tree_pure$g ?v0)) ?v0)) :named a59))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_fun_fun$)) (= (root$o (tree_pure$h ?v0)) ?v0)) :named a60))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (root$p (tree_pure$i ?v0)) ?v0)) :named a61))
(assert (! (= zero$a (tree_pure$v zero$b)) :named a62))
(assert (! (= zero$b (tree_pure$w zero$c)) :named a63))
(assert (! (= zero$c (tree_pure$a zero$)) :named a64))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$) (?v1 Nat_nat_fun_nat_nat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_fun$)) (= (tree_ap$f ?v0 (tree_pure$b ?v2)) (tree_ap$f ?v1 (tree_pure$b ?v2)))) (= ?v0 ?v1))) :named a65))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (tree_ap$o ?v0 (tree_pure$d ?v2)) (tree_ap$o ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a66))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (tree_ap$p ?v0 (tree_pure$d ?v2)) (tree_ap$p ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a67))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (tree_ap$q ?v0 (tree_pure$d ?v2)) (tree_ap$q ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a68))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$)) (= (tree_ap$r ?v0 (tree_pure$d ?v2)) (tree_ap$r ?v1 (tree_pure$d ?v2)))) (= ?v0 ?v1))) :named a69))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun$)) (= (tree_ap$j ?v0 (tree_pure$ ?v2)) (tree_ap$j ?v1 (tree_pure$ ?v2)))) (= ?v0 ?v1))) :named a70))
(assert (! (forall ((?v0 Nat_nat_fun_tree$) (?v1 Nat_nat_fun_tree$)) (=> (forall ((?v2 Nat$)) (= (tree_ap$a ?v0 (tree_pure$a ?v2)) (tree_ap$a ?v1 (tree_pure$a ?v2)))) (= ?v0 ?v1))) :named a71))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_tree$) (?v1 Nat_nat_prod_nat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod$)) (= (tree_ap$ ?v0 (tree_pure$c ?v2)) (tree_ap$ ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a72))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$) (?v1 Nat_nat_fun_nat_nat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_fun_tree$)) (= (tree_ap$f ?v0 ?v2) (tree_ap$f ?v1 ?v2))) (= ?v0 ?v1))) :named a73))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)) (= (tree_ap$o ?v0 ?v2) (tree_ap$o ?v1 ?v2))) (= ?v0 ?v1))) :named a74))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)) (= (tree_ap$p ?v0 ?v2) (tree_ap$p ?v1 ?v2))) (= ?v0 ?v1))) :named a75))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)) (= (tree_ap$q ?v0 ?v2) (tree_ap$q ?v1 ?v2))) (= ?v0 ?v1))) :named a76))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)) (= (tree_ap$r ?v0 ?v2) (tree_ap$r ?v1 ?v2))) (= ?v0 ?v1))) :named a77))
(assert (! (forall ((?v0 Nat_nat_fun_tree$) (?v1 Nat_nat_fun_tree$)) (=> (forall ((?v2 Nat_tree$)) (= (tree_ap$a ?v0 ?v2) (tree_ap$a ?v1 ?v2))) (= ?v0 ?v1))) :named a78))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$) (?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_nat_fun_tree$)) (= (tree_ap$j ?v0 ?v2) (tree_ap$j ?v1 ?v2))) (= ?v0 ?v1))) :named a79))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_tree$) (?v1 Nat_nat_prod_nat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_tree$)) (= (tree_ap$ ?v0 ?v2) (tree_ap$ ?v1 ?v2))) (= ?v0 ?v1))) :named a80))
(assert (! (forall ((?v0 Nat$)) (= (not (= ?v0 zero$)) (fun_app$a (less$ zero$) ?v0))) :named a81))
(assert (! (forall ((?v0 Nat$)) (= (not (fun_app$a (less$ zero$) ?v0)) (= ?v0 zero$))) :named a82))
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$a (less$ ?v0) zero$) false) :pattern ((less$ ?v0)))) :named a83))
(assert (! (= den$ (tree_ap$ (tree_pure$ uu$) stern_brocot$)) :named a84))
(assert (! (forall ((?v0 Nat$)) (=> (=> (= ?v0 zero$) false) (fun_app$a (less$ zero$) ?v0))) :named a85))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (=> (fun_app$a (less$ ?v0) ?v1) (not (= ?v1 zero$)))) :named a86))
(check-sat)
;(get-unsat-core)
