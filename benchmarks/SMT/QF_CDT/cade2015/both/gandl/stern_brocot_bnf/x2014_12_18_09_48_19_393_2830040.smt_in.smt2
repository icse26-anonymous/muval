; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 460
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_a_tree_fun$ 0)
(declare-sort A_tree_a_fun$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort A_a_stream_fun$ 0)
(declare-sort A_stream_a_fun$ 0)
(declare-sort A_tree_a_tree_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_stream_a_tree_fun$ 0)
(declare-sort A_tree_a_stream_fun$ 0)
(declare-sort A_stream_a_stream_fun$ 0)
(declare-sort A_a_stream_a_stream_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_fun$ 0)
(declare-sort A_tree_tree_a_tree_tree_fun$ 0)
(declare-sort A_tree_a_tree_a_tree_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_stream_tree_a_stream_tree_fun$ 0)
(declare-sort A_tree_stream_a_tree_stream_fun$ 0)
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0)
(declare-sort A_stream_stream_a_stream_stream_fun$ 0)
(declare-sort A_tree_tree_stream_a_tree_tree_stream_fun$ 0)
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ 0)
(declare-sort A_stream_stream_tree_a_stream_stream_tree_fun$ 0)
(declare-sort A_stream_tree_stream_a_stream_tree_stream_fun$ 0)
(declare-sort A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ 0)
(declare-sort A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$ 0)
(declare-sort A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ 0)
(declare-sort A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun$ 0)
(declare-sort A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$ 0)
(declare-sort A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$ 0)
(declare-codatatypes () ((A_stream$ (sCons$ (shd$ A$) (stl$ A_stream$)))
  (A_tree$ (node$ (root$ A$) (left$ A_tree$) (right$ A_tree$)))
  (A_tree_tree$ (node$a (root$a A_tree$) (left$a A_tree_tree$) (right$a A_tree_tree$)))
  (A_stream_tree$ (node$b (root$b A_stream$) (left$b A_stream_tree$) (right$b A_stream_tree$)))
  (A_stream_tree_tree$ (node$c (root$c A_stream_tree$) (left$c A_stream_tree_tree$) (right$c A_stream_tree_tree$)))
  (A_tree_tree_tree$ (node$d (root$d A_tree_tree$) (left$d A_tree_tree_tree$) (right$d A_tree_tree_tree$)))
  (A_stream_stream$ (sCons$a (shd$a A_stream$) (stl$a A_stream_stream$)))
  (A_stream_stream_tree$ (node$e (root$e A_stream_stream$) (left$e A_stream_stream_tree$) (right$e A_stream_stream_tree$)))
  (A_tree_stream$ (sCons$b (shd$b A_tree$) (stl$b A_tree_stream$)))
  (A_tree_stream_tree$ (node$f (root$f A_tree_stream$) (left$f A_tree_stream_tree$) (right$f A_tree_stream_tree$)))
  (A_stream_stream_tree_tree$ (node$g (root$g A_stream_stream_tree$) (left$g A_stream_stream_tree_tree$) (right$g A_stream_stream_tree_tree$)))
  (A_tree_tree_stream$ (sCons$c (shd$c A_tree_tree$) (stl$c A_tree_tree_stream$)))
  (A_tree_tree_stream_tree$ (node$h (root$h A_tree_tree_stream$) (left$h A_tree_tree_stream_tree$) (right$h A_tree_tree_stream_tree$)))
  (A_stream_tree_stream$ (sCons$d (shd$d A_stream_tree$) (stl$d A_stream_tree_stream$)))
  (A_stream_tree_stream_tree$ (node$i (root$i A_stream_tree_stream$) (left$i A_stream_tree_stream_tree$) (right$i A_stream_tree_stream_tree$)))
  (A_stream_stream_stream$ (sCons$e (shd$e A_stream_stream$) (stl$e A_stream_stream_stream$)))
  (A_tree_stream_stream$ (sCons$f (shd$f A_tree_stream$) (stl$f A_tree_stream_stream$)))
  (A_stream_stream_tree_stream$ (sCons$g (shd$g A_stream_stream_tree$) (stl$g A_stream_stream_tree_stream$)))
  (A_tree_tree_stream_stream$ (sCons$h (shd$h A_tree_tree_stream$) (stl$h A_tree_tree_stream_stream$)))
  (A_stream_tree_stream_stream$ (sCons$i (shd$i A_stream_tree_stream$) (stl$i A_stream_tree_stream_stream$)))
  (A_a_fun_tree$ (node$j (select$ A_a_fun$) (selecta$ A_a_fun_tree$) (selectb$ A_a_fun_tree$)))
  (A_a_fun_stream$ (sCons$j (selectc$ A_a_fun$) (selectd$ A_a_fun_stream$)))
  (A_a_fun_a_fun_tree$ (node$k (selecte$ A_a_fun_a_fun$) (selectf$ A_a_fun_a_fun_tree$) (selectg$ A_a_fun_a_fun_tree$)))
  (A_a_fun_a_fun_stream$ (sCons$k (selecth$ A_a_fun_a_fun$) (selecti$ A_a_fun_a_fun_stream$)))
  (A_stream_a_stream_fun_tree$ (node$l (selectj$ A_stream_a_stream_fun$) (selectk$ A_stream_a_stream_fun_tree$) (selectl$ A_stream_a_stream_fun_tree$)))
  (A_stream_a_stream_fun_stream$ (sCons$l (selectm$ A_stream_a_stream_fun$) (selectn$ A_stream_a_stream_fun_stream$)))
  (A_a_a_fun_fun_tree$ (node$m (selecto$ A_a_a_fun_fun$) (selectp$ A_a_a_fun_fun_tree$) (selectq$ A_a_a_fun_fun_tree$)))
  (A_a_a_fun_fun_stream$ (sCons$m (selectr$ A_a_a_fun_fun$) (selects$ A_a_a_fun_fun_stream$)))
  (A_a_fun_a_a_fun_fun_tree$ (node$n (selectt$ A_a_fun_a_a_fun_fun$) (selectu$ A_a_fun_a_a_fun_fun_tree$) (selectv$ A_a_fun_a_a_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_stream$ (sCons$n (selectw$ A_a_fun_a_a_fun_fun$) (selectx$ A_a_fun_a_a_fun_fun_stream$)))
  (A_tree_a_tree_a_tree_fun_fun_tree$ (node$o (selecty$ A_tree_a_tree_a_tree_fun_fun$) (selectz$ A_tree_a_tree_a_tree_fun_fun_tree$) (selecua$ A_tree_a_tree_a_tree_fun_fun_tree$)))
  (A_tree_a_tree_fun_stream$ (sCons$o (selecub$ A_tree_a_tree_fun$) (selecuc$ A_tree_a_tree_fun_stream$)))
  (A_tree_a_tree_fun_tree$ (node$p (selecud$ A_tree_a_tree_fun$) (selecue$ A_tree_a_tree_fun_tree$) (selecuf$ A_tree_a_tree_fun_tree$)))
  (A_tree_a_tree_a_tree_fun_fun_stream$ (sCons$p (selecug$ A_tree_a_tree_a_tree_fun_fun$) (selecuh$ A_tree_a_tree_a_tree_fun_fun_stream$)))
  (A_stream_a_stream_a_stream_fun_fun_tree$ (node$q (selecui$ A_stream_a_stream_a_stream_fun_fun$) (selecuj$ A_stream_a_stream_a_stream_fun_fun_tree$) (selecuk$ A_stream_a_stream_a_stream_fun_fun_tree$)))
  (A_stream_a_stream_a_stream_fun_fun_stream$ (sCons$q (selecul$ A_stream_a_stream_a_stream_fun_fun$) (selecum$ A_stream_a_stream_a_stream_fun_fun_stream$)))
  (A_a_tree_fun_tree$ (node$r (selecun$ A_a_tree_fun$) (selecuo$ A_a_tree_fun_tree$) (selecup$ A_a_tree_fun_tree$)))
  (A_a_tree_fun_stream$ (sCons$r (selecuq$ A_a_tree_fun$) (selecur$ A_a_tree_fun_stream$)))
  (A_a_stream_fun_tree$ (node$s (selecus$ A_a_stream_fun$) (selecut$ A_a_stream_fun_tree$) (selecuu$ A_a_stream_fun_tree$)))
  (A_a_stream_fun_stream$ (sCons$s (selecuv$ A_a_stream_fun$) (selecuw$ A_a_stream_fun_stream$)))
  (A_stream_a_stream_fun_a_fun_tree$ (node$t (selecux$ A_stream_a_stream_fun_a_fun$) (selecuy$ A_stream_a_stream_fun_a_fun_tree$) (selecuz$ A_stream_a_stream_fun_a_fun_tree$)))
  (A_stream_a_stream_fun_a_fun_stream$ (sCons$t (selecva$ A_stream_a_stream_fun_a_fun$) (selecvb$ A_stream_a_stream_fun_a_fun_stream$)))
  (A_stream_tree_a_stream_tree_fun_tree$ (node$u (selecvc$ A_stream_tree_a_stream_tree_fun$) (selecvd$ A_stream_tree_a_stream_tree_fun_tree$) (selecve$ A_stream_tree_a_stream_tree_fun_tree$)))
  (A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_tree$ (node$v (selecvf$ A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$) (selecvg$ A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_tree$) (selecvh$ A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_tree$)))
  (A_tree_tree_a_tree_tree_fun_tree$ (node$w (selecvi$ A_tree_tree_a_tree_tree_fun$) (selecvj$ A_tree_tree_a_tree_tree_fun_tree$) (selecvk$ A_tree_tree_a_tree_tree_fun_tree$)))
  (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ (node$x (selecvl$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$) (selecvm$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$) (selecvn$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)))
  (A_stream_stream_a_stream_stream_fun_tree$ (node$y (selecvo$ A_stream_stream_a_stream_stream_fun$) (selecvp$ A_stream_stream_a_stream_stream_fun_tree$) (selecvq$ A_stream_stream_a_stream_stream_fun_tree$)))
  (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_tree$ (node$z (selecvr$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$) (selecvs$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_tree$) (selecvt$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_tree$)))
  (A_tree_stream_a_tree_stream_fun_tree$ (node$aa (selecvu$ A_tree_stream_a_tree_stream_fun$) (selecvv$ A_tree_stream_a_tree_stream_fun_tree$) (selecvw$ A_tree_stream_a_tree_stream_fun_tree$)))
  (A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_tree$ (node$ab (selecvx$ A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$) (selecvy$ A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_tree$) (selecvz$ A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_tree$)))
  (A_stream_stream_tree_a_stream_stream_tree_fun_tree$ (node$ac (selecwa$ A_stream_stream_tree_a_stream_stream_tree_fun$) (selecwb$ A_stream_stream_tree_a_stream_stream_tree_fun_tree$) (selecwc$ A_stream_stream_tree_a_stream_stream_tree_fun_tree$)))
  (A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_tree$ (node$ad (selecwd$ A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$) (selecwe$ A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_tree$) (selecwf$ A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_tree$)))
  (A_tree_tree_stream_a_tree_tree_stream_fun_tree$ (node$ae (selecwg$ A_tree_tree_stream_a_tree_tree_stream_fun$) (selecwh$ A_tree_tree_stream_a_tree_tree_stream_fun_tree$) (selecwi$ A_tree_tree_stream_a_tree_tree_stream_fun_tree$)))
  (A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun_tree$ (node$af (selecwj$ A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun$) (selecwk$ A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun_tree$) (selecwl$ A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun_tree$)))
  (A_stream_tree_stream_a_stream_tree_stream_fun_tree$ (node$ag (selecwm$ A_stream_tree_stream_a_stream_tree_stream_fun$) (selecwn$ A_stream_tree_stream_a_stream_tree_stream_fun_tree$) (selecwo$ A_stream_tree_stream_a_stream_tree_stream_fun_tree$)))
  (A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_tree$ (node$ah (selecwp$ A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$) (selecwq$ A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_tree$) (selecwr$ A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_tree$)))
  (A_a_a_fun_fun_a_fun_tree$ (node$ai (selecws$ A_a_a_fun_fun_a_fun$) (selecwt$ A_a_a_fun_fun_a_fun_tree$) (selecwu$ A_a_a_fun_fun_a_fun_tree$)))
  (A_a_stream_a_stream_fun_fun_tree$ (node$aj (selecwv$ A_a_stream_a_stream_fun_fun$) (selecww$ A_a_stream_a_stream_fun_fun_tree$) (selecwx$ A_a_stream_a_stream_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_tree$ (node$ak (selecwy$ A_a_a_a_fun_fun_fun$) (selecwz$ A_a_a_a_fun_fun_fun_tree$) (selecxa$ A_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun_tree$ (node$al (selecxb$ A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$) (selecxc$ A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun_tree$) (selecxd$ A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_tree$ (node$am (selecxe$ A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$) (selecxf$ A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_tree$) (selecxg$ A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_tree$)))
  (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ (node$an (selecxh$ A_a_a_fun_fun_a_a_a_fun_fun_fun$) (selecxi$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) (selecxj$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)))
  (A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun_tree$ (node$ao (selecxk$ A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$) (selecxl$ A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun_tree$) (selecxm$ A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun_tree$)))
  (A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun_tree$ (node$ap (selecxn$ A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$) (selecxo$ A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun_tree$) (selecxp$ A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun_tree$)))
  (A_stream_a_fun_stream$ (sCons$u (selecxq$ A_stream_a_fun$) (selecxr$ A_stream_a_fun_stream$)))
  (A_tree_a_fun_stream$ (sCons$v (selecxs$ A_tree_a_fun$) (selecxt$ A_tree_a_fun_stream$)))
  (A_tree_a_stream_fun_stream$ (sCons$w (selecxu$ A_tree_a_stream_fun$) (selecxv$ A_tree_a_stream_fun_stream$)))
  (A_stream_a_tree_fun_stream$ (sCons$x (selecxw$ A_stream_a_tree_fun$) (selecxx$ A_stream_a_tree_fun_stream$)))))
(declare-fun t$ () A_tree$)
(declare-fun t$a () A_tree$)
(declare-fun mod$ () A_tree_a_tree_a_tree_fun_fun$)
(declare-fun mod$a () A_stream_a_stream_a_stream_fun_fun$)
(declare-fun mod$b () A_a_a_fun_fun$)
(declare-fun mod$c () A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$)
(declare-fun mod$d () A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$)
(declare-fun mod$e (A_stream_tree_tree$ A_stream_tree_tree$) A_stream_tree_tree$)
(declare-fun mod$f (A_tree_tree_tree$ A_tree_tree_tree$) A_tree_tree_tree$)
(declare-fun mod$g () A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$)
(declare-fun mod$h () A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$)
(declare-fun mod$i (A_tree_stream_tree$ A_tree_stream_tree$) A_tree_stream_tree$)
(declare-fun mod$j () A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$)
(declare-fun mod$k (A_stream_stream_tree_tree$ A_stream_stream_tree_tree$) A_stream_stream_tree_tree$)
(declare-fun mod$l (A_tree_tree_stream_tree$ A_tree_tree_stream_tree$) A_tree_tree_stream_tree$)
(declare-fun mod$m () A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun$)
(declare-fun mod$n (A_stream_tree_stream_tree$ A_stream_tree_stream_tree$) A_stream_tree_stream_tree$)
(declare-fun mod$o () A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$)
(declare-fun mod$p (A_stream_stream_stream$ A_stream_stream_stream$) A_stream_stream_stream$)
(declare-fun mod$q (A_tree_stream_stream$ A_tree_stream_stream$) A_tree_stream_stream$)
(declare-fun mod$r (A_stream_stream_tree_stream$ A_stream_stream_tree_stream$) A_stream_stream_tree_stream$)
(declare-fun mod$s (A_tree_tree_stream_stream$ A_tree_tree_stream_stream$) A_tree_tree_stream_stream$)
(declare-fun mod$t (A_stream_tree_stream_stream$ A_stream_tree_stream_stream$) A_stream_tree_stream_stream$)
(declare-fun shd$j (A_a_fun_stream$) A_a_fun$)
(declare-fun shd$k (A_stream_a_fun_stream$ A_stream$) A$)
(declare-fun shd$l (A_tree_a_fun_stream$ A_tree$) A$)
(declare-fun shd$m (A_a_stream_fun_stream$ A$) A_stream$)
(declare-fun shd$n (A_a_tree_fun_stream$ A$) A_tree$)
(declare-fun shd$o (A_stream_a_stream_fun_stream$) A_stream_a_stream_fun$)
(declare-fun shd$p (A_tree_a_stream_fun_stream$ A_tree$) A_stream$)
(declare-fun shd$q (A_stream_a_tree_fun_stream$ A_stream$) A_tree$)
(declare-fun shd$r (A_tree_a_tree_fun_stream$ A_tree$) A_tree$)
(declare-fun shd$s (A_a_fun_a_fun_stream$ A_a_fun$) A$)
(declare-fun stl$j (A_a_fun_a_a_fun_fun_stream$) A_a_fun_a_a_fun_fun_stream$)
(declare-fun stl$k (A_a_fun_a_fun_stream$) A_a_fun_a_fun_stream$)
(declare-fun stl$l (A_tree_a_tree_a_tree_fun_fun_stream$) A_tree_a_tree_a_tree_fun_fun_stream$)
(declare-fun stl$m (A_stream_a_stream_fun_stream$) A_stream_a_stream_fun_stream$)
(declare-fun stl$n (A_stream_a_stream_a_stream_fun_fun_stream$) A_stream_a_stream_a_stream_fun_fun_stream$)
(declare-fun stl$o (A_a_a_fun_fun_stream$) A_a_a_fun_fun_stream$)
(declare-fun stl$p (A_a_fun_stream$) A_a_fun_stream$)
(declare-fun st_ap$ (A_a_fun_stream$) A_stream_a_stream_fun$)
(declare-fun st_ap$a (A_a_fun_a_fun_stream$ A_a_fun_stream$) A_stream$)
(declare-fun st_ap$b (A_stream_a_stream_fun_stream$ A_stream_stream$) A_stream_stream$)
(declare-fun st_ap$c (A_a_a_fun_fun_stream$ A_stream$) A_a_fun_stream$)
(declare-fun st_ap$d (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$) A_a_fun_stream$)
(declare-fun st_ap$e (A_tree_a_tree_a_tree_fun_fun_stream$ A_tree_stream$) A_tree_a_tree_fun_stream$)
(declare-fun st_ap$f (A_stream_a_stream_a_stream_fun_fun_stream$ A_stream_stream$) A_stream_a_stream_fun_stream$)
(declare-fun st_ap$g (A_a_tree_fun_stream$ A_stream$) A_tree_stream$)
(declare-fun st_ap$h (A_a_stream_fun_stream$ A_stream$) A_stream_stream$)
(declare-fun st_ap$i (A_stream_a_stream_fun_a_fun_stream$ A_stream_a_stream_fun_stream$) A_stream$)
(declare-fun st_ap$j (A_stream_a_fun_stream$ A_stream_stream$) A_stream$)
(declare-fun st_ap$k (A_tree_a_fun_stream$ A_tree_stream$) A_stream$)
(declare-fun st_ap$l (A_tree_a_stream_fun_stream$ A_tree_stream$) A_stream_stream$)
(declare-fun st_ap$m (A_stream_a_tree_fun_stream$ A_stream_stream$) A_tree_stream$)
(declare-fun st_ap$n (A_tree_a_tree_fun_stream$ A_tree_stream$) A_tree_stream$)
(declare-fun stream$ (A_tree$) A_stream$)
(declare-fun fun_app$ (A_tree_a_tree_fun$ A_tree$) A_tree$)
(declare-fun stream$a (A_a_fun_tree$) A_a_fun_stream$)
(declare-fun stream$b (A_a_fun_a_fun_tree$) A_a_fun_a_fun_stream$)
(declare-fun stream$c (A_stream_tree$) A_stream_stream$)
(declare-fun stream$d (A_stream_a_stream_fun_tree$) A_stream_a_stream_fun_stream$)
(declare-fun stream$e (A_a_a_fun_fun_tree$) A_a_a_fun_fun_stream$)
(declare-fun stream$f (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_stream$)
(declare-fun stream$g (A_tree_a_tree_fun_tree$) A_tree_a_tree_fun_stream$)
(declare-fun stream$h (A_tree_a_tree_a_tree_fun_fun_tree$) A_tree_a_tree_a_tree_fun_fun_stream$)
(declare-fun stream$i (A_tree_tree$) A_tree_stream$)
(declare-fun stream$j (A_stream_a_stream_a_stream_fun_fun_tree$) A_stream_a_stream_a_stream_fun_fun_stream$)
(declare-fun stream$k (A_a_tree_fun_tree$) A_a_tree_fun_stream$)
(declare-fun stream$l (A_a_stream_fun_tree$) A_a_stream_fun_stream$)
(declare-fun stream$m (A_stream_a_stream_fun_a_fun_tree$) A_stream_a_stream_fun_a_fun_stream$)
(declare-fun tree_ap$ (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun fun_app$a (A_tree_a_tree_a_tree_fun_fun$ A_tree$) A_tree_a_tree_fun$)
(declare-fun fun_app$b (A_stream_a_stream_fun$ A_stream$) A_stream$)
(declare-fun fun_app$c (A_stream_a_stream_a_stream_fun_fun$ A_stream$) A_stream_a_stream_fun$)
(declare-fun fun_app$d (A_a_fun$ A$) A$)
(declare-fun fun_app$e (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$f (A_tree_tree_a_tree_tree_fun$ A_tree_tree$) A_tree_tree$)
(declare-fun fun_app$g (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ A_tree_tree$) A_tree_tree_a_tree_tree_fun$)
(declare-fun fun_app$h (A_stream_tree_a_stream_tree_fun$ A_stream_tree$) A_stream_tree$)
(declare-fun fun_app$i (A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$ A_stream_tree$) A_stream_tree_a_stream_tree_fun$)
(declare-fun fun_app$j (A_stream_stream_tree_a_stream_stream_tree_fun$ A_stream_stream_tree$) A_stream_stream_tree$)
(declare-fun fun_app$k (A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$ A_stream_stream_tree$) A_stream_stream_tree_a_stream_stream_tree_fun$)
(declare-fun fun_app$l (A_stream_stream_a_stream_stream_fun$ A_stream_stream$) A_stream_stream$)
(declare-fun fun_app$m (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ A_stream_stream$) A_stream_stream_a_stream_stream_fun$)
(declare-fun fun_app$n (A_tree_stream_a_tree_stream_fun$ A_tree_stream$) A_tree_stream$)
(declare-fun fun_app$o (A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$ A_tree_stream$) A_tree_stream_a_tree_stream_fun$)
(declare-fun fun_app$p (A_tree_tree_stream_a_tree_tree_stream_fun$ A_tree_tree_stream$) A_tree_tree_stream$)
(declare-fun fun_app$q (A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun$ A_tree_tree_stream$) A_tree_tree_stream_a_tree_tree_stream_fun$)
(declare-fun fun_app$r (A_stream_tree_stream_a_stream_tree_stream_fun$ A_stream_tree_stream$) A_stream_tree_stream$)
(declare-fun fun_app$s (A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$ A_stream_tree_stream$) A_stream_tree_stream_a_stream_tree_stream_fun$)
(declare-fun fun_app$t (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$) A_a_a_fun_fun$)
(declare-fun fun_app$u (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ A_a_a_fun_fun$) A_stream_a_stream_a_stream_fun_fun$)
(declare-fun fun_app$v (A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ A_a_a_fun_fun$) A_tree_a_tree_a_tree_fun_fun$)
(declare-fun fun_app$w (A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$ A_stream_a_stream_a_stream_fun_fun$) A_a_a_fun_fun$)
(declare-fun fun_app$x (A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$ A_tree_a_tree_a_tree_fun_fun$) A_a_a_fun_fun$)
(declare-fun tree_ap$a (A_a_fun_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun tree_ap$b (A_stream_a_stream_fun_tree$ A_stream_tree$) A_stream_tree$)
(declare-fun tree_ap$c (A_a_a_fun_fun_tree$ A_tree$) A_a_fun_tree$)
(declare-fun tree_ap$d (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$e (A_tree_a_tree_a_tree_fun_fun_tree$ A_tree_tree$) A_tree_a_tree_fun_tree$)
(declare-fun tree_ap$f (A_stream_a_stream_a_stream_fun_fun_tree$ A_stream_tree$) A_stream_a_stream_fun_tree$)
(declare-fun tree_ap$g (A_a_tree_fun_tree$ A_tree$) A_tree_tree$)
(declare-fun tree_ap$h (A_a_stream_fun_tree$ A_tree$) A_stream_tree$)
(declare-fun tree_ap$i (A_stream_a_stream_fun_a_fun_tree$ A_stream_a_stream_fun_tree$) A_tree$)
(declare-fun tree_ap$j (A_tree_a_tree_fun_tree$ A_tree_tree$) A_tree_tree$)
(declare-fun tree_ap$k (A_stream_tree_a_stream_tree_fun_tree$ A_stream_tree_tree$) A_stream_tree_tree$)
(declare-fun tree_ap$l (A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_tree$ A_stream_tree_tree$) A_stream_tree_a_stream_tree_fun_tree$)
(declare-fun tree_ap$m (A_tree_tree_a_tree_tree_fun_tree$ A_tree_tree_tree$) A_tree_tree_tree$)
(declare-fun tree_ap$n (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ A_tree_tree_tree$) A_tree_tree_a_tree_tree_fun_tree$)
(declare-fun tree_ap$o (A_stream_stream_a_stream_stream_fun_tree$ A_stream_stream_tree$) A_stream_stream_tree$)
(declare-fun tree_ap$p (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_tree$ A_stream_stream_tree$) A_stream_stream_a_stream_stream_fun_tree$)
(declare-fun tree_ap$q (A_tree_stream_a_tree_stream_fun_tree$ A_tree_stream_tree$) A_tree_stream_tree$)
(declare-fun tree_ap$r (A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_tree$ A_tree_stream_tree$) A_tree_stream_a_tree_stream_fun_tree$)
(declare-fun tree_ap$s (A_stream_stream_tree_a_stream_stream_tree_fun_tree$ A_stream_stream_tree_tree$) A_stream_stream_tree_tree$)
(declare-fun tree_ap$t (A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_tree$ A_stream_stream_tree_tree$) A_stream_stream_tree_a_stream_stream_tree_fun_tree$)
(declare-fun tree_ap$u (A_tree_tree_stream_a_tree_tree_stream_fun_tree$ A_tree_tree_stream_tree$) A_tree_tree_stream_tree$)
(declare-fun tree_ap$v (A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun_tree$ A_tree_tree_stream_tree$) A_tree_tree_stream_a_tree_tree_stream_fun_tree$)
(declare-fun tree_ap$w (A_stream_tree_stream_a_stream_tree_stream_fun_tree$ A_stream_tree_stream_tree$) A_stream_tree_stream_tree$)
(declare-fun tree_ap$x (A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_tree$ A_stream_tree_stream_tree$) A_stream_tree_stream_a_stream_tree_stream_fun_tree$)
(declare-fun tree_ap$y (A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_tree$) A_tree$)
(declare-fun tree_ap$z (A_a_stream_a_stream_fun_fun_tree$ A_tree$) A_stream_a_stream_fun_tree$)
(declare-fun tree_ap$aa (A_a_a_a_fun_fun_fun_tree$ A_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$ab (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$ac (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_stream_a_stream_a_stream_fun_fun_tree$)
(declare-fun tree_ap$ad (A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun_tree$ A_a_a_fun_fun_tree$) A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun tree_ap$ae (A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun_tree$ A_stream_a_stream_a_stream_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$af (A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun_tree$ A_tree_a_tree_a_tree_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_chop$ (A_tree_tree$) A_tree_tree$)
(declare-fun tree_pure$ (A_a_a_fun_fun$) A_a_a_fun_fun_tree$)
(declare-fun tree_chop$a (A_stream_tree$) A_stream_tree$)
(declare-fun tree_chop$b (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_chop$c (A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun tree_chop$d (A_tree_a_tree_a_tree_fun_fun_tree$) A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun tree_chop$e (A_stream_a_stream_fun_tree$) A_stream_a_stream_fun_tree$)
(declare-fun tree_chop$f (A_stream_a_stream_a_stream_fun_fun_tree$) A_stream_a_stream_a_stream_fun_fun_tree$)
(declare-fun tree_chop$g (A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_chop$h (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_chop$i (A_tree$) A_tree$)
(declare-fun tree_chop$j (A_tree_a_tree_fun_tree$) A_tree_a_tree_fun_tree$)
(declare-fun tree_chop$k (A_stream_a_stream_fun_a_fun_tree$) A_stream_a_stream_fun_a_fun_tree$)
(declare-fun tree_chop$l (A_a_a_fun_fun_a_fun_tree$) A_a_a_fun_fun_a_fun_tree$)
(declare-fun tree_chop$m (A_a_stream_a_stream_fun_fun_tree$) A_a_stream_a_stream_fun_fun_tree$)
(declare-fun tree_chop$n (A_a_a_a_fun_fun_fun_tree$) A_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_chop$o (A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun_tree$) A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun_tree$)
(declare-fun tree_chop$p (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_tree$) A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_tree$)
(declare-fun tree_chop$q (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$) A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$a (A_tree_a_tree_a_tree_fun_fun$) A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun tree_pure$b (A_stream_a_stream_a_stream_fun_fun$) A_stream_a_stream_a_stream_fun_fun_tree$)
(declare-fun tree_pure$c (A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$) A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_tree$)
(declare-fun tree_pure$d (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$) A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$e (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$) A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_tree$)
(declare-fun tree_pure$f (A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$) A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_tree$)
(declare-fun tree_pure$g (A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$) A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_tree$)
(declare-fun tree_pure$h (A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun$) A_tree_tree_stream_a_tree_tree_stream_a_tree_tree_stream_fun_fun_tree$)
(declare-fun tree_pure$i (A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$) A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_tree$)
(declare-fun tree_pure$j (A_stream_a_stream_fun$) A_stream_a_stream_fun_tree$)
(declare-fun tree_pure$k (A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$) A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun_tree$)
(declare-fun tree_pure$l (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$) A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_tree$)
(declare-fun tree_pure$m (A_a_a_fun_fun_a_a_a_fun_fun_fun$) A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$n (A_a_fun$) A_a_fun_tree$)
(declare-fun tree_pure$o (A$) A_tree$)
(declare-fun tree_pure$p (A_stream$) A_stream_tree$)
(declare-fun tree_pure$q (A_tree$) A_tree_tree$)
(declare-fun tree_pure$r (A_tree_a_tree_fun$) A_tree_a_tree_fun_tree$)
(declare-fun tree_pure$s (A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$) A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun_tree$)
(declare-fun tree_pure$t (A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$) A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun_tree$)
(assert (! (not (= (stream$ (fun_app$ (fun_app$a mod$ t$) t$a)) (fun_app$b (fun_app$c mod$a (stream$ t$)) (stream$ t$a)))) :named a0))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (root$ (fun_app$ (fun_app$a mod$ ?v0) ?v1)) (fun_app$d (fun_app$e mod$b (root$ ?v0)) (root$ ?v1)))) :named a1))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (= (root$a (fun_app$f (fun_app$g mod$c ?v0) ?v1)) (fun_app$ (fun_app$a mod$ (root$a ?v0)) (root$a ?v1)))) :named a2))
(assert (! (forall ((?v0 A_stream_tree$) (?v1 A_stream_tree$)) (= (root$b (fun_app$h (fun_app$i mod$d ?v0) ?v1)) (fun_app$b (fun_app$c mod$a (root$b ?v0)) (root$b ?v1)))) :named a3))
(assert (! (forall ((?v0 A_stream_tree_tree$) (?v1 A_stream_tree_tree$)) (= (root$c (mod$e ?v0 ?v1)) (fun_app$h (fun_app$i mod$d (root$c ?v0)) (root$c ?v1)))) :named a4))
(assert (! (forall ((?v0 A_tree_tree_tree$) (?v1 A_tree_tree_tree$)) (= (root$d (mod$f ?v0 ?v1)) (fun_app$f (fun_app$g mod$c (root$d ?v0)) (root$d ?v1)))) :named a5))
(assert (! (forall ((?v0 A_stream_stream_tree$) (?v1 A_stream_stream_tree$)) (= (root$e (fun_app$j (fun_app$k mod$g ?v0) ?v1)) (fun_app$l (fun_app$m mod$h (root$e ?v0)) (root$e ?v1)))) :named a6))
(assert (! (forall ((?v0 A_tree_stream_tree$) (?v1 A_tree_stream_tree$)) (= (root$f (mod$i ?v0 ?v1)) (fun_app$n (fun_app$o mod$j (root$f ?v0)) (root$f ?v1)))) :named a7))
(assert (! (forall ((?v0 A_stream_stream_tree_tree$) (?v1 A_stream_stream_tree_tree$)) (= (root$g (mod$k ?v0 ?v1)) (fun_app$j (fun_app$k mod$g (root$g ?v0)) (root$g ?v1)))) :named a8))
(assert (! (forall ((?v0 A_tree_tree_stream_tree$) (?v1 A_tree_tree_stream_tree$)) (= (root$h (mod$l ?v0 ?v1)) (fun_app$p (fun_app$q mod$m (root$h ?v0)) (root$h ?v1)))) :named a9))
(assert (! (forall ((?v0 A_stream_tree_stream_tree$) (?v1 A_stream_tree_stream_tree$)) (= (root$i (mod$n ?v0 ?v1)) (fun_app$r (fun_app$s mod$o (root$i ?v0)) (root$i ?v1)))) :named a10))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (= (shd$ (fun_app$b (fun_app$c mod$a ?v0) ?v1)) (fun_app$d (fun_app$e mod$b (shd$ ?v0)) (shd$ ?v1)))) :named a11))
(assert (! (forall ((?v0 A_tree_stream$) (?v1 A_tree_stream$)) (= (shd$b (fun_app$n (fun_app$o mod$j ?v0) ?v1)) (fun_app$ (fun_app$a mod$ (shd$b ?v0)) (shd$b ?v1)))) :named a12))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (= (shd$a (fun_app$l (fun_app$m mod$h ?v0) ?v1)) (fun_app$b (fun_app$c mod$a (shd$a ?v0)) (shd$a ?v1)))) :named a13))
(assert (! (forall ((?v0 A_stream_tree_stream$) (?v1 A_stream_tree_stream$)) (= (shd$d (fun_app$r (fun_app$s mod$o ?v0) ?v1)) (fun_app$h (fun_app$i mod$d (shd$d ?v0)) (shd$d ?v1)))) :named a14))
(assert (! (forall ((?v0 A_tree_tree_stream$) (?v1 A_tree_tree_stream$)) (= (shd$c (fun_app$p (fun_app$q mod$m ?v0) ?v1)) (fun_app$f (fun_app$g mod$c (shd$c ?v0)) (shd$c ?v1)))) :named a15))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (= (shd$e (mod$p ?v0 ?v1)) (fun_app$l (fun_app$m mod$h (shd$e ?v0)) (shd$e ?v1)))) :named a16))
(assert (! (forall ((?v0 A_tree_stream_stream$) (?v1 A_tree_stream_stream$)) (= (shd$f (mod$q ?v0 ?v1)) (fun_app$n (fun_app$o mod$j (shd$f ?v0)) (shd$f ?v1)))) :named a17))
(assert (! (forall ((?v0 A_stream_stream_tree_stream$) (?v1 A_stream_stream_tree_stream$)) (= (shd$g (mod$r ?v0 ?v1)) (fun_app$j (fun_app$k mod$g (shd$g ?v0)) (shd$g ?v1)))) :named a18))
(assert (! (forall ((?v0 A_tree_tree_stream_stream$) (?v1 A_tree_tree_stream_stream$)) (= (shd$h (mod$s ?v0 ?v1)) (fun_app$p (fun_app$q mod$m (shd$h ?v0)) (shd$h ?v1)))) :named a19))
(assert (! (forall ((?v0 A_stream_tree_stream_stream$) (?v1 A_stream_tree_stream_stream$)) (= (shd$i (mod$t ?v0 ?v1)) (fun_app$r (fun_app$s mod$o (shd$i ?v0)) (shd$i ?v1)))) :named a20))
(assert (! (forall ((?v0 A_stream_stream_tree$) (?v1 A_stream_stream_tree$)) (= (right$e (fun_app$j (fun_app$k mod$g ?v0) ?v1)) (fun_app$j (fun_app$k mod$g (right$e ?v0)) (right$e ?v1)))) :named a21))
(assert (! (forall ((?v0 A_stream_tree$) (?v1 A_stream_tree$)) (= (right$b (fun_app$h (fun_app$i mod$d ?v0) ?v1)) (fun_app$h (fun_app$i mod$d (right$b ?v0)) (right$b ?v1)))) :named a22))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (= (right$a (fun_app$f (fun_app$g mod$c ?v0) ?v1)) (fun_app$f (fun_app$g mod$c (right$a ?v0)) (right$a ?v1)))) :named a23))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (right$ (fun_app$ (fun_app$a mod$ ?v0) ?v1)) (fun_app$ (fun_app$a mod$ (right$ ?v0)) (right$ ?v1)))) :named a24))
(assert (! (forall ((?v0 A_stream_stream_tree$) (?v1 A_stream_stream_tree$)) (= (left$e (fun_app$j (fun_app$k mod$g ?v0) ?v1)) (fun_app$j (fun_app$k mod$g (left$e ?v0)) (left$e ?v1)))) :named a25))
(assert (! (forall ((?v0 A_stream_tree$) (?v1 A_stream_tree$)) (= (left$b (fun_app$h (fun_app$i mod$d ?v0) ?v1)) (fun_app$h (fun_app$i mod$d (left$b ?v0)) (left$b ?v1)))) :named a26))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (= (left$a (fun_app$f (fun_app$g mod$c ?v0) ?v1)) (fun_app$f (fun_app$g mod$c (left$a ?v0)) (left$a ?v1)))) :named a27))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (left$ (fun_app$ (fun_app$a mod$ ?v0) ?v1)) (fun_app$ (fun_app$a mod$ (left$ ?v0)) (left$ ?v1)))) :named a28))
(assert (! (forall ((?v0 A_tree_tree_stream$) (?v1 A_tree_tree_stream$)) (= (stl$c (fun_app$p (fun_app$q mod$m ?v0) ?v1)) (fun_app$p (fun_app$q mod$m (stl$c ?v0)) (stl$c ?v1)))) :named a29))
(assert (! (forall ((?v0 A_stream_tree_stream$) (?v1 A_stream_tree_stream$)) (= (stl$d (fun_app$r (fun_app$s mod$o ?v0) ?v1)) (fun_app$r (fun_app$s mod$o (stl$d ?v0)) (stl$d ?v1)))) :named a30))
(assert (! (forall ((?v0 A_tree_stream_stream$) (?v1 A_tree_stream_stream$)) (= (stl$f (mod$q ?v0 ?v1)) (mod$q (stl$f ?v0) (stl$f ?v1)))) :named a31))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (= (stl$e (mod$p ?v0 ?v1)) (mod$p (stl$e ?v0) (stl$e ?v1)))) :named a32))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (= (stl$a (fun_app$l (fun_app$m mod$h ?v0) ?v1)) (fun_app$l (fun_app$m mod$h (stl$a ?v0)) (stl$a ?v1)))) :named a33))
(assert (! (forall ((?v0 A_tree_stream$) (?v1 A_tree_stream$)) (= (stl$b (fun_app$n (fun_app$o mod$j ?v0) ?v1)) (fun_app$n (fun_app$o mod$j (stl$b ?v0)) (stl$b ?v1)))) :named a34))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (= (stl$ (fun_app$b (fun_app$c mod$a ?v0) ?v1)) (fun_app$b (fun_app$c mod$a (stl$ ?v0)) (stl$ ?v1)))) :named a35))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (stream$ (tree_ap$ ?v0 ?v1)) (fun_app$b (st_ap$ (stream$a ?v0)) (stream$ ?v1)))) :named a36))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (stream$ (tree_ap$a ?v0 ?v1)) (st_ap$a (stream$b ?v0) (stream$a ?v1)))) :named a37))
(assert (! (forall ((?v0 A_stream_a_stream_fun_tree$) (?v1 A_stream_tree$)) (= (stream$c (tree_ap$b ?v0 ?v1)) (st_ap$b (stream$d ?v0) (stream$c ?v1)))) :named a38))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$)) (= (stream$a (tree_ap$c ?v0 ?v1)) (st_ap$c (stream$e ?v0) (stream$ ?v1)))) :named a39))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$) (?v1 A_a_fun_tree$)) (= (stream$a (tree_ap$d ?v0 ?v1)) (st_ap$d (stream$f ?v0) (stream$a ?v1)))) :named a40))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_tree$) (?v1 A_tree_tree$)) (= (stream$g (tree_ap$e ?v0 ?v1)) (st_ap$e (stream$h ?v0) (stream$i ?v1)))) :named a41))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_tree$) (?v1 A_stream_tree$)) (= (stream$d (tree_ap$f ?v0 ?v1)) (st_ap$f (stream$j ?v0) (stream$c ?v1)))) :named a42))
(assert (! (forall ((?v0 A_a_tree_fun_tree$) (?v1 A_tree$)) (= (stream$i (tree_ap$g ?v0 ?v1)) (st_ap$g (stream$k ?v0) (stream$ ?v1)))) :named a43))
(assert (! (forall ((?v0 A_a_stream_fun_tree$) (?v1 A_tree$)) (= (stream$c (tree_ap$h ?v0 ?v1)) (st_ap$h (stream$l ?v0) (stream$ ?v1)))) :named a44))
(assert (! (forall ((?v0 A_stream_a_stream_fun_a_fun_tree$) (?v1 A_stream_a_stream_fun_tree$)) (= (stream$ (tree_ap$i ?v0 ?v1)) (st_ap$i (stream$m ?v0) (stream$d ?v1)))) :named a45))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (! (= (fun_app$ (fun_app$a mod$ ?v0) ?v1) (tree_ap$ (tree_ap$c (tree_pure$ mod$b) ?v0) ?v1)) :pattern ((fun_app$ (fun_app$a mod$ ?v0) ?v1)))) :named a46))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (! (= (fun_app$f (fun_app$g mod$c ?v0) ?v1) (tree_ap$j (tree_ap$e (tree_pure$a mod$) ?v0) ?v1)) :pattern ((fun_app$f (fun_app$g mod$c ?v0) ?v1)))) :named a47))
(assert (! (forall ((?v0 A_stream_tree$) (?v1 A_stream_tree$)) (! (= (fun_app$h (fun_app$i mod$d ?v0) ?v1) (tree_ap$b (tree_ap$f (tree_pure$b mod$a) ?v0) ?v1)) :pattern ((fun_app$h (fun_app$i mod$d ?v0) ?v1)))) :named a48))
(assert (! (forall ((?v0 A_stream_tree_tree$) (?v1 A_stream_tree_tree$)) (! (= (mod$e ?v0 ?v1) (tree_ap$k (tree_ap$l (tree_pure$c mod$d) ?v0) ?v1)) :pattern ((mod$e ?v0 ?v1)))) :named a49))
(assert (! (forall ((?v0 A_tree_tree_tree$) (?v1 A_tree_tree_tree$)) (! (= (mod$f ?v0 ?v1) (tree_ap$m (tree_ap$n (tree_pure$d mod$c) ?v0) ?v1)) :pattern ((mod$f ?v0 ?v1)))) :named a50))
(assert (! (forall ((?v0 A_stream_stream_tree$) (?v1 A_stream_stream_tree$)) (! (= (fun_app$j (fun_app$k mod$g ?v0) ?v1) (tree_ap$o (tree_ap$p (tree_pure$e mod$h) ?v0) ?v1)) :pattern ((fun_app$j (fun_app$k mod$g ?v0) ?v1)))) :named a51))
(assert (! (forall ((?v0 A_tree_stream_tree$) (?v1 A_tree_stream_tree$)) (! (= (mod$i ?v0 ?v1) (tree_ap$q (tree_ap$r (tree_pure$f mod$j) ?v0) ?v1)) :pattern ((mod$i ?v0 ?v1)))) :named a52))
(assert (! (forall ((?v0 A_stream_stream_tree_tree$) (?v1 A_stream_stream_tree_tree$)) (! (= (mod$k ?v0 ?v1) (tree_ap$s (tree_ap$t (tree_pure$g mod$g) ?v0) ?v1)) :pattern ((mod$k ?v0 ?v1)))) :named a53))
(assert (! (forall ((?v0 A_tree_tree_stream_tree$) (?v1 A_tree_tree_stream_tree$)) (! (= (mod$l ?v0 ?v1) (tree_ap$u (tree_ap$v (tree_pure$h mod$m) ?v0) ?v1)) :pattern ((mod$l ?v0 ?v1)))) :named a54))
(assert (! (forall ((?v0 A_stream_tree_stream_tree$) (?v1 A_stream_tree_stream_tree$)) (! (= (mod$n ?v0 ?v1) (tree_ap$w (tree_ap$x (tree_pure$i mod$o) ?v0) ?v1)) :pattern ((mod$n ?v0 ?v1)))) :named a55))
(assert (! (forall ((?v0 A_tree_tree$)) (= (stl$b (stream$i ?v0)) (stream$i (tree_chop$ ?v0)))) :named a56))
(assert (! (forall ((?v0 A_stream_tree$)) (= (stl$a (stream$c ?v0)) (stream$c (tree_chop$a ?v0)))) :named a57))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$)) (= (stl$j (stream$f ?v0)) (stream$f (tree_chop$b ?v0)))) :named a58))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$)) (= (stl$k (stream$b ?v0)) (stream$b (tree_chop$c ?v0)))) :named a59))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_tree$)) (= (stl$l (stream$h ?v0)) (stream$h (tree_chop$d ?v0)))) :named a60))
(assert (! (forall ((?v0 A_stream_a_stream_fun_tree$)) (= (stl$m (stream$d ?v0)) (stream$d (tree_chop$e ?v0)))) :named a61))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_tree$)) (= (stl$n (stream$j ?v0)) (stream$j (tree_chop$f ?v0)))) :named a62))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$)) (= (stl$o (stream$e ?v0)) (stream$e (tree_chop$g ?v0)))) :named a63))
(assert (! (forall ((?v0 A_a_fun_tree$)) (= (stl$p (stream$a ?v0)) (stream$a (tree_chop$h ?v0)))) :named a64))
(assert (! (forall ((?v0 A_tree$)) (= (stl$ (stream$ ?v0)) (stream$ (tree_chop$i ?v0)))) :named a65))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (tree_chop$i (tree_ap$ ?v0 ?v1)) (tree_ap$ (tree_chop$h ?v0) (tree_chop$i ?v1)))) :named a66))
(assert (! (forall ((?v0 A_stream_a_stream_fun_tree$) (?v1 A_stream_tree$)) (= (tree_chop$a (tree_ap$b ?v0 ?v1)) (tree_ap$b (tree_chop$e ?v0) (tree_chop$a ?v1)))) :named a67))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$)) (= (tree_chop$h (tree_ap$c ?v0 ?v1)) (tree_ap$c (tree_chop$g ?v0) (tree_chop$i ?v1)))) :named a68))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_tree$) (?v1 A_tree_tree$)) (= (tree_chop$j (tree_ap$e ?v0 ?v1)) (tree_ap$e (tree_chop$d ?v0) (tree_chop$ ?v1)))) :named a69))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_tree$) (?v1 A_stream_tree$)) (= (tree_chop$e (tree_ap$f ?v0 ?v1)) (tree_ap$f (tree_chop$f ?v0) (tree_chop$a ?v1)))) :named a70))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (tree_chop$i (tree_ap$a ?v0 ?v1)) (tree_ap$a (tree_chop$c ?v0) (tree_chop$h ?v1)))) :named a71))
(assert (! (forall ((?v0 A_stream_a_stream_fun_a_fun_tree$) (?v1 A_stream_a_stream_fun_tree$)) (= (tree_chop$i (tree_ap$i ?v0 ?v1)) (tree_ap$i (tree_chop$k ?v0) (tree_chop$e ?v1)))) :named a72))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (= (tree_chop$i (tree_ap$y ?v0 ?v1)) (tree_ap$y (tree_chop$l ?v0) (tree_chop$g ?v1)))) :named a73))
(assert (! (forall ((?v0 A_a_stream_a_stream_fun_fun_tree$) (?v1 A_tree$)) (= (tree_chop$e (tree_ap$z ?v0 ?v1)) (tree_ap$z (tree_chop$m ?v0) (tree_chop$i ?v1)))) :named a74))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_tree$)) (= (tree_chop$g (tree_ap$aa ?v0 ?v1)) (tree_ap$aa (tree_chop$n ?v0) (tree_chop$i ?v1)))) :named a75))
(assert (! (forall ((?v0 A_stream_a_stream_fun$)) (= (tree_chop$e (tree_pure$j ?v0)) (tree_pure$j ?v0))) :named a76))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$)) (= (tree_chop$o (tree_pure$k ?v0)) (tree_pure$k ?v0))) :named a77))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$)) (= (tree_chop$p (tree_pure$l ?v0)) (tree_pure$l ?v0))) :named a78))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$)) (= (tree_chop$q (tree_pure$m ?v0)) (tree_pure$m ?v0))) :named a79))
(assert (! (forall ((?v0 A_a_fun$)) (= (tree_chop$h (tree_pure$n ?v0)) (tree_pure$n ?v0))) :named a80))
(assert (! (forall ((?v0 A$)) (= (tree_chop$i (tree_pure$o ?v0)) (tree_pure$o ?v0))) :named a81))
(assert (! (forall ((?v0 A_a_a_fun_fun$)) (= (tree_chop$g (tree_pure$ ?v0)) (tree_pure$ ?v0))) :named a82))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$)) (= (tree_chop$f (tree_pure$b ?v0)) (tree_pure$b ?v0))) :named a83))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$)) (= (tree_chop$d (tree_pure$a ?v0)) (tree_pure$a ?v0))) :named a84))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (= (tree_ap$ (tree_pure$n ?v0) (tree_pure$o ?v1)) (tree_pure$o (fun_app$d ?v0 ?v1)))) :named a85))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 A_stream$)) (= (tree_ap$b (tree_pure$j ?v0) (tree_pure$p ?v1)) (tree_pure$p (fun_app$b ?v0 ?v1)))) :named a86))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$)) (= (tree_ap$c (tree_pure$ ?v0) (tree_pure$o ?v1)) (tree_pure$n (fun_app$e ?v0 ?v1)))) :named a87))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$) (?v1 A_stream$)) (= (tree_ap$f (tree_pure$b ?v0) (tree_pure$p ?v1)) (tree_pure$j (fun_app$c ?v0 ?v1)))) :named a88))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$) (?v1 A_tree$)) (= (tree_ap$e (tree_pure$a ?v0) (tree_pure$q ?v1)) (tree_pure$r (fun_app$a ?v0 ?v1)))) :named a89))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (tree_ap$ab (tree_pure$m ?v0) (tree_pure$ ?v1)) (tree_pure$ (fun_app$t ?v0 ?v1)))) :named a90))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (tree_ap$ac (tree_pure$l ?v0) (tree_pure$ ?v1)) (tree_pure$b (fun_app$u ?v0 ?v1)))) :named a91))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (tree_ap$ad (tree_pure$k ?v0) (tree_pure$ ?v1)) (tree_pure$a (fun_app$v ?v0 ?v1)))) :named a92))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$) (?v1 A_stream_a_stream_a_stream_fun_fun$)) (= (tree_ap$ae (tree_pure$s ?v0) (tree_pure$b ?v1)) (tree_pure$ (fun_app$w ?v0 ?v1)))) :named a93))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$) (?v1 A_tree_a_tree_a_tree_fun_fun$)) (= (tree_ap$af (tree_pure$t ?v0) (tree_pure$a ?v1)) (tree_pure$ (fun_app$x ?v0 ?v1)))) :named a94))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$) (?v1 A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$)) (= (= (tree_pure$k ?v0) (tree_pure$k ?v1)) (= ?v0 ?v1))) :named a95))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$) (?v1 A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$)) (= (= (tree_pure$l ?v0) (tree_pure$l ?v1)) (= ?v0 ?v1))) :named a96))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$) (?v1 A_a_a_fun_fun_a_a_a_fun_fun_fun$)) (= (= (tree_pure$m ?v0) (tree_pure$m ?v1)) (= ?v0 ?v1))) :named a97))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$)) (= (= (tree_pure$n ?v0) (tree_pure$n ?v1)) (= ?v0 ?v1))) :named a98))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (= (tree_pure$o ?v0) (tree_pure$o ?v1)) (= ?v0 ?v1))) :named a99))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a100))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$) (?v1 A_stream_a_stream_a_stream_fun_fun$)) (= (= (tree_pure$b ?v0) (tree_pure$b ?v1)) (= ?v0 ?v1))) :named a101))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$) (?v1 A_tree_a_tree_a_tree_fun_fun$)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a102))
(assert (! (forall ((?v0 A_a_fun_stream$) (?v1 A_stream$)) (= (shd$ (fun_app$b (st_ap$ ?v0) ?v1)) (fun_app$d (shd$j ?v0) (shd$ ?v1)))) :named a103))
(assert (! (forall ((?v0 A_stream_a_fun_stream$) (?v1 A_stream_stream$)) (= (shd$ (st_ap$j ?v0 ?v1)) (shd$k ?v0 (shd$a ?v1)))) :named a104))
(assert (! (forall ((?v0 A_tree_a_fun_stream$) (?v1 A_tree_stream$)) (= (shd$ (st_ap$k ?v0 ?v1)) (shd$l ?v0 (shd$b ?v1)))) :named a105))
(assert (! (forall ((?v0 A_a_stream_fun_stream$) (?v1 A_stream$)) (= (shd$a (st_ap$h ?v0 ?v1)) (shd$m ?v0 (shd$ ?v1)))) :named a106))
(assert (! (forall ((?v0 A_a_tree_fun_stream$) (?v1 A_stream$)) (= (shd$b (st_ap$g ?v0 ?v1)) (shd$n ?v0 (shd$ ?v1)))) :named a107))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$) (?v1 A_stream_stream$)) (= (shd$a (st_ap$b ?v0 ?v1)) (fun_app$b (shd$o ?v0) (shd$a ?v1)))) :named a108))
(assert (! (forall ((?v0 A_tree_a_stream_fun_stream$) (?v1 A_tree_stream$)) (= (shd$a (st_ap$l ?v0 ?v1)) (shd$p ?v0 (shd$b ?v1)))) :named a109))
(assert (! (forall ((?v0 A_stream_a_tree_fun_stream$) (?v1 A_stream_stream$)) (= (shd$b (st_ap$m ?v0 ?v1)) (shd$q ?v0 (shd$a ?v1)))) :named a110))
(assert (! (forall ((?v0 A_tree_a_tree_fun_stream$) (?v1 A_tree_stream$)) (= (shd$b (st_ap$n ?v0 ?v1)) (shd$r ?v0 (shd$b ?v1)))) :named a111))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$) (?v1 A_a_fun_stream$)) (= (shd$ (st_ap$a ?v0 ?v1)) (shd$s ?v0 (shd$j ?v1)))) :named a112))
(check-sat)
;(get-unsat-core)
