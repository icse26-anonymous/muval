; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 444
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort Nat$ 0)
(declare-sort Rat$ 0)
(declare-sort Int_nat_fun$ 0)
(declare-sort Int_rat_fun$ 0)
(declare-sort Nat_int_fun$ 0)
(declare-sort Nat_nat_fun$ 0)
(declare-sort Nat_rat_fun$ 0)
(declare-sort Rat_int_fun$ 0)
(declare-sort Rat_nat_fun$ 0)
(declare-sort Rat_rat_fun$ 0)
(declare-sort Nat_nat_rat_fun_fun$ 0)
(declare-sort Rat_rat_fun_rat_fun$ 0)
(declare-sort Rat_rat_rat_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun$ 0)
(declare-sort Rat_nat_nat_prod_fun$ 0)
(declare-sort Rat_rat_fun_rat_rat_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_rat_fun$ 0)
(declare-sort Nat_nat_prod_rat_rat_fun_fun$ 0)
(declare-sort Rat_nat_nat_prod_rat_fun_fun$ 0)
(declare-sort Rat_rat_fun_nat_nat_prod_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_rat_fun_rat_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$ 0)
(declare-codatatypes () ((Rat_tree$ (node$ (root$ Rat$) (left$ Rat_tree$) (right$ Rat_tree$)))))
(declare-datatypes () ((Dir$ (l$) (r$))
  (Dir_list$ (nil$) (cons$ (hd$ Dir$) (tl$ Dir_list$)))))
(declare-codatatypes () ((Nat_nat_prod_rat_fun_tree$ (node$a (select$ Nat_nat_prod_rat_fun$) (selecta$ Nat_nat_prod_rat_fun_tree$) (selectb$ Nat_nat_prod_rat_fun_tree$)))))
(declare-datatypes () ((Nat_nat_prod$ (pair$ (fst$ Nat$) (snd$ Nat$)))))
(declare-codatatypes () ((Nat_nat_prod_tree$ (node$b (root$a Nat_nat_prod$) (left$a Nat_nat_prod_tree$) (right$a Nat_nat_prod_tree$)))
  (Rat_rat_fun_tree$ (node$c (selectc$ Rat_rat_fun$) (selectd$ Rat_rat_fun_tree$) (selecte$ Rat_rat_fun_tree$)))
  (Rat_rat_fun_rat_fun_tree$ (node$d (selectf$ Rat_rat_fun_rat_fun$) (selectg$ Rat_rat_fun_rat_fun_tree$) (selecth$ Rat_rat_fun_rat_fun_tree$)))
  (Rat_rat_rat_fun_fun_tree$ (node$e (selecti$ Rat_rat_rat_fun_fun$) (selectj$ Rat_rat_rat_fun_fun_tree$) (selectk$ Rat_rat_rat_fun_fun_tree$)))
  (Rat_nat_nat_prod_fun_tree$ (node$f (selectl$ Rat_nat_nat_prod_fun$) (selectm$ Rat_nat_nat_prod_fun_tree$) (selectn$ Rat_nat_nat_prod_fun_tree$)))
  (Nat_nat_prod_rat_fun_rat_fun_tree$ (node$g (selecto$ Nat_nat_prod_rat_fun_rat_fun$) (selectp$ Nat_nat_prod_rat_fun_rat_fun_tree$) (selectq$ Nat_nat_prod_rat_fun_rat_fun_tree$)))
  (Rat_rat_fun_rat_rat_fun_fun_tree$ (node$h (selectr$ Rat_rat_fun_rat_rat_fun_fun$) (selects$ Rat_rat_fun_rat_rat_fun_fun_tree$) (selectt$ Rat_rat_fun_rat_rat_fun_fun_tree$)))
  (Nat_nat_prod_rat_rat_fun_fun_tree$ (node$i (selectu$ Nat_nat_prod_rat_rat_fun_fun$) (selectv$ Nat_nat_prod_rat_rat_fun_fun_tree$) (selectw$ Nat_nat_prod_rat_rat_fun_fun_tree$)))
  (Rat_nat_nat_prod_rat_fun_fun_tree$ (node$j (selectx$ Rat_nat_nat_prod_rat_fun_fun$) (selecty$ Rat_nat_nat_prod_rat_fun_fun_tree$) (selectz$ Rat_nat_nat_prod_rat_fun_fun_tree$)))
  (Rat_rat_fun_nat_nat_prod_fun_tree$ (node$k (selecua$ Rat_rat_fun_nat_nat_prod_fun$) (selecub$ Rat_rat_fun_nat_nat_prod_fun_tree$) (selecuc$ Rat_rat_fun_nat_nat_prod_fun_tree$)))
  (Nat_tree$ (node$l (root$b Nat$) (left$b Nat_tree$) (right$b Nat_tree$)))
  (Int_tree$ (node$m (root$c Int) (left$c Int_tree$) (right$c Int_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ (node$n (selecud$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (selecue$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) (selecuf$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)))
  (Rat_nat_fun_tree$ (node$o (selecug$ Rat_nat_fun$) (selecuh$ Rat_nat_fun_tree$) (selecui$ Rat_nat_fun_tree$)))
  (Rat_int_fun_tree$ (node$p (selecuj$ Rat_int_fun$) (selecuk$ Rat_int_fun_tree$) (selecul$ Rat_int_fun_tree$)))
  (Nat_rat_fun_tree$ (node$q (selecum$ Nat_rat_fun$) (selecun$ Nat_rat_fun_tree$) (selecuo$ Nat_rat_fun_tree$)))
  (Nat_nat_fun_tree$ (node$r (selecup$ Nat_nat_fun$) (selecuq$ Nat_nat_fun_tree$) (selecur$ Nat_nat_fun_tree$)))
  (Nat_int_fun_tree$ (node$s (selecus$ Nat_int_fun$) (selecut$ Nat_int_fun_tree$) (selecuu$ Nat_int_fun_tree$)))
  (Int_rat_fun_tree$ (node$t (selecuv$ Int_rat_fun$) (selecuw$ Int_rat_fun_tree$) (selecux$ Int_rat_fun_tree$)))
  (Int_nat_fun_tree$ (node$u (selecuy$ Int_nat_fun$) (selecuz$ Int_nat_fun_tree$) (selecva$ Int_nat_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_tree$ (node$v (selecvb$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$) (selecvc$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_tree$) (selecvd$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ (node$w (selecve$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$) (selecvf$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$) (selecvg$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ (node$x (selecvh$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$) (selecvi$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$) (selecvj$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ (node$y (selecvk$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$) (selecvl$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$) (selecvm$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun_tree$ (node$z (selecvn$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun$) (selecvo$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun_tree$) (selecvp$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$ (node$aa (selecvq$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$) (selecvr$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$) (selecvs$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ (node$ab (selecvt$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$) (selecvu$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$) (selecvv$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ (node$ac (selecvw$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$) (selecvx$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$) (selecvy$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$ (node$ad (selecvz$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$) (selecwa$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$) (selecwb$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$)))
  (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$ (node$ae (selecwc$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$) (selecwd$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$) (selecwe$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$)))
  (Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$ (node$af (selecwf$ Nat_nat_prod_rat_fun_rat_fun_rat_fun$) (selecwg$ Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$) (selecwh$ Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)))
  (Nat_tree_tree$ (node$ag (root$d Nat_tree$) (left$d Nat_tree_tree$) (right$d Nat_tree_tree$)))
  (Rat_tree_tree$ (node$ah (root$e Rat_tree$) (left$e Rat_tree_tree$) (right$e Rat_tree_tree$)))
  (Int_tree_tree$ (node$ai (root$f Int_tree$) (left$f Int_tree_tree$) (right$f Int_tree_tree$)))
  (Int_tree_tree_tree$ (node$aj (root$g Int_tree_tree$) (left$g Int_tree_tree_tree$) (right$g Int_tree_tree_tree$)))
  (Nat_tree_tree_tree$ (node$ak (root$h Nat_tree_tree$) (left$h Nat_tree_tree_tree$) (right$h Nat_tree_tree_tree$)))))
(declare-fun m$ () Nat$)
(declare-fun n$ () Nat$)
(declare-fun uu$ () Nat_nat_rat_fun_fun$)
(declare-fun uua$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun$)
(declare-fun uub$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$)
(declare-fun uuc$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun uud$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$)
(declare-fun uue$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$)
(declare-fun uuf$ (Nat_nat_prod_rat_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun uug$ (Nat_nat_prod_rat_fun$) Nat_nat_prod_rat_fun_rat_fun_rat_fun$)
(declare-fun uuh$ (Rat$) Rat_rat_fun_rat_fun$)
(declare-fun uui$ (Nat_nat_prod$) Nat_nat_prod_rat_fun_rat_fun$)
(declare-fun uuj$ (Nat$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$)
(declare-fun uuk$ (Int) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$)
(declare-fun uul$ (Nat_nat_prod_rat_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun uum$ (Nat_nat_prod_rat_fun_rat_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$)
(declare-fun uun$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$)
(declare-fun uuo$ (Rat$) Rat_rat_fun$)
(declare-fun uup$ (Rat$) Nat_nat_prod_rat_fun_rat_fun$)
(declare-fun uuq$ (Nat_nat_prod_rat_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun uur$ (Rat$) Nat_nat_prod_rat_fun$)
(declare-fun less$ (Nat$ Nat$) Bool)
(declare-fun zero$ () Nat$)
(declare-fun fract$ (Int) Int_rat_fun$)
(declare-fun root$i (Rat_rat_fun_tree$) Rat_rat_fun$)
(declare-fun root$j (Nat_nat_prod_rat_fun_tree$) Nat_nat_prod_rat_fun$)
(declare-fun root$k (Rat_rat_fun_rat_fun_tree$) Rat_rat_fun_rat_fun$)
(declare-fun root$l (Rat_rat_rat_fun_fun_tree$) Rat_rat_rat_fun_fun$)
(declare-fun root$m (Rat_nat_nat_prod_fun_tree$ Rat$) Nat_nat_prod$)
(declare-fun root$n (Nat_nat_prod_rat_fun_rat_fun_tree$) Nat_nat_prod_rat_fun_rat_fun$)
(declare-fun root$o (Rat_rat_fun_rat_rat_fun_fun_tree$) Rat_rat_fun_rat_rat_fun_fun$)
(declare-fun root$p (Nat_nat_prod_rat_rat_fun_fun_tree$) Nat_nat_prod_rat_rat_fun_fun$)
(declare-fun root$q (Rat_nat_nat_prod_rat_fun_fun_tree$) Rat_nat_nat_prod_rat_fun_fun$)
(declare-fun root$r (Rat_rat_fun_nat_nat_prod_fun_tree$) Rat_rat_fun_nat_nat_prod_fun$)
(declare-fun root$s (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun zero$a () Int_tree_tree$)
(declare-fun zero$b () Int_tree$)
(declare-fun zero$c () Rat_tree_tree$)
(declare-fun zero$d () Rat_tree$)
(declare-fun zero$e () Nat_tree_tree_tree$)
(declare-fun zero$f () Nat_tree_tree$)
(declare-fun zero$g () Nat_tree$)
(declare-fun zero$h () Rat$)
(declare-fun mkPath$ (Nat$ Nat$) Dir_list$)
(declare-fun of_nat$ (Nat$) Int)
(declare-fun fun_app$ (Nat_rat_fun$ Nat$) Rat$)
(declare-fun of_nat$a (Nat$) Nat_tree_tree$)
(declare-fun of_nat$b (Nat$) Nat_tree$)
(declare-fun of_nat$c (Nat$) Rat_tree_tree$)
(declare-fun of_nat$d (Nat$) Rat_tree$)
(declare-fun of_nat$e (Nat$) Int_tree_tree_tree$)
(declare-fun of_nat$f (Nat$) Int_tree_tree$)
(declare-fun of_nat$g (Nat$) Int_tree$)
(declare-fun of_nat$h (Nat$) Rat$)
(declare-fun of_nat$i (Nat$) Nat$)
(declare-fun tree_ap$ (Nat_nat_prod_rat_fun_tree$ Nat_nat_prod_tree$) Rat_tree$)
(declare-fun fun_app$a (Nat_nat_rat_fun_fun$ Nat$) Nat_rat_fun$)
(declare-fun fun_app$b (Int_rat_fun$ Int) Rat$)
(declare-fun fun_app$c (Nat_nat_prod_rat_fun_rat_fun$ Nat_nat_prod_rat_fun$) Rat$)
(declare-fun fun_app$d (Nat_nat_prod_rat_fun$ Nat_nat_prod$) Rat$)
(declare-fun fun_app$e (Rat_rat_fun_rat_fun$ Rat_rat_fun$) Rat$)
(declare-fun fun_app$f (Rat_rat_fun$ Rat$) Rat$)
(declare-fun fun_app$g (Nat_nat_prod_rat_fun_rat_fun_rat_fun$ Nat_nat_prod_rat_fun_rat_fun$) Rat$)
(declare-fun fun_app$h (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun$)
(declare-fun fun_app$i (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun$) Nat_nat_prod_rat_fun$)
(declare-fun fun_app$j (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$) Nat$)
(declare-fun fun_app$k (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat$)
(declare-fun fun_app$l (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$) Int)
(declare-fun fun_app$m (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Int)
(declare-fun fun_app$n (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun$)
(declare-fun fun_app$o (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$) Nat_nat_prod_rat_fun_rat_fun$)
(declare-fun fun_app$p (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_rat_fun$)
(declare-fun fun_app$q (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun fun_app$r (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun fun_app$s (Rat_nat_fun$ Rat$) Nat$)
(declare-fun fun_app$t (Rat_int_fun$ Rat$) Int)
(declare-fun fun_app$u (Nat_nat_fun$ Nat$) Nat$)
(declare-fun fun_app$v (Nat_int_fun$ Nat$) Int)
(declare-fun fun_app$w (Int_nat_fun$ Int) Nat$)
(declare-fun fun_app$x (Rat_rat_rat_fun_fun$ Rat$) Rat_rat_fun$)
(declare-fun fun_app$y (Rat_rat_fun_rat_rat_fun_fun$ Rat_rat_fun$) Rat_rat_fun$)
(declare-fun fun_app$z (Nat_nat_prod_rat_rat_fun_fun$ Nat_nat_prod$) Rat_rat_fun$)
(declare-fun tree_ap$a (Rat_rat_fun_tree$ Rat_tree$) Rat_tree$)
(declare-fun tree_ap$b (Rat_rat_fun_rat_fun_tree$ Rat_rat_fun_tree$) Rat_tree$)
(declare-fun tree_ap$c (Rat_rat_rat_fun_fun_tree$ Rat_tree$) Rat_rat_fun_tree$)
(declare-fun tree_ap$d (Rat_nat_nat_prod_fun_tree$ Rat_tree$) Nat_nat_prod_tree$)
(declare-fun tree_ap$e (Nat_nat_prod_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_tree$) Rat_tree$)
(declare-fun tree_ap$f (Rat_rat_fun_rat_rat_fun_fun_tree$ Rat_rat_fun_tree$) Rat_rat_fun_tree$)
(declare-fun tree_ap$g (Nat_nat_prod_rat_rat_fun_fun_tree$ Nat_nat_prod_tree$) Rat_rat_fun_tree$)
(declare-fun tree_ap$h (Rat_nat_nat_prod_rat_fun_fun_tree$ Rat_tree$) Nat_nat_prod_rat_fun_tree$)
(declare-fun tree_ap$i (Rat_rat_fun_nat_nat_prod_fun_tree$ Rat_rat_fun_tree$) Nat_nat_prod_tree$)
(declare-fun tree_ap$j (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_tree$) Nat_nat_prod_rat_fun_tree$)
(declare-fun tree_ap$k (Rat_nat_fun_tree$ Rat_tree$) Nat_tree$)
(declare-fun tree_ap$l (Rat_int_fun_tree$ Rat_tree$) Int_tree$)
(declare-fun tree_ap$m (Nat_rat_fun_tree$ Nat_tree$) Rat_tree$)
(declare-fun tree_ap$n (Nat_nat_fun_tree$ Nat_tree$) Nat_tree$)
(declare-fun tree_ap$o (Nat_int_fun_tree$ Nat_tree$) Int_tree$)
(declare-fun tree_ap$p (Int_rat_fun_tree$ Int_tree$) Rat_tree$)
(declare-fun tree_ap$q (Int_nat_fun_tree$ Int_tree$) Nat_tree$)
(declare-fun tree_ap$r (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) Nat_tree$)
(declare-fun tree_ap$s (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_tree$) Nat_tree$)
(declare-fun tree_ap$t (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) Int_tree$)
(declare-fun tree_ap$u (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$) Int_tree$)
(declare-fun tree_ap$v (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) Nat_nat_prod_rat_fun_tree$)
(declare-fun tree_ap$w (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$) Nat_nat_prod_rat_fun_tree$)
(declare-fun tree_ap$x (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) Nat_nat_prod_rat_fun_rat_fun_tree$)
(declare-fun tree_ap$y (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$) Nat_nat_prod_rat_fun_rat_fun_tree$)
(declare-fun tree_ap$z (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun case_prod$ (Nat_nat_rat_fun_fun$) Nat_nat_prod_rat_fun$)
(declare-fun fun_app$aa (Rat_nat_nat_prod_rat_fun_fun$ Rat$) Nat_nat_prod_rat_fun$)
(declare-fun fun_app$ab (Rat_rat_fun_nat_nat_prod_fun$ Rat_rat_fun$) Nat_nat_prod$)
(declare-fun tree_ap$aa (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun tree_ap$ab (Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_rat_fun_tree$) Rat_tree$)
(declare-fun tree_pure$ (Nat_nat_prod_rat_fun$) Nat_nat_prod_rat_fun_tree$)
(declare-fun tree_pure$a (Rat$) Rat_tree$)
(declare-fun tree_pure$b (Nat$) Nat_tree$)
(declare-fun tree_pure$c (Int) Int_tree$)
(declare-fun tree_pure$d (Rat_rat_fun$) Rat_rat_fun_tree$)
(declare-fun tree_pure$e (Nat_nat_prod$) Nat_nat_prod_tree$)
(declare-fun tree_pure$f (Nat_nat_prod_rat_fun_rat_fun$) Nat_nat_prod_rat_fun_rat_fun_tree$)
(declare-fun tree_pure$g (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun tree_pure$h (Rat_rat_fun_rat_fun$) Rat_rat_fun_rat_fun_tree$)
(declare-fun tree_pure$i (Rat_rat_fun_nat_nat_prod_fun$) Rat_rat_fun_nat_nat_prod_fun_tree$)
(declare-fun tree_pure$j (Rat_nat_fun$) Rat_nat_fun_tree$)
(declare-fun tree_pure$k (Rat_int_fun$) Rat_int_fun_tree$)
(declare-fun tree_pure$l (Nat_rat_fun$) Nat_rat_fun_tree$)
(declare-fun tree_pure$m (Nat_nat_fun$) Nat_nat_fun_tree$)
(declare-fun tree_pure$n (Nat_int_fun$) Nat_int_fun_tree$)
(declare-fun tree_pure$o (Int_rat_fun$) Int_rat_fun_tree$)
(declare-fun tree_pure$p (Int_nat_fun$) Int_nat_fun_tree$)
(declare-fun tree_pure$q (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_tree$)
(declare-fun tree_pure$r (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)
(declare-fun tree_pure$s (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun tree_pure$t (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun tree_pure$u (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_nat_fun_tree$)
(declare-fun tree_pure$v (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)
(declare-fun tree_pure$w (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun tree_pure$x (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun tree_pure$y (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$)
(declare-fun tree_pure$z (Nat_nat_prod_rat_fun_rat_fun_rat_fun$) Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)
(declare-fun tree_pure$aa (Nat_tree$) Nat_tree_tree$)
(declare-fun tree_pure$ab (Rat_tree$) Rat_tree_tree$)
(declare-fun tree_pure$ac (Int_tree_tree$) Int_tree_tree_tree$)
(declare-fun tree_pure$ad (Int_tree$) Int_tree_tree$)
(declare-fun tree_pure$ae (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$)
(declare-fun tree_pure$af (Nat_tree_tree$) Nat_tree_tree_tree$)
(declare-fun stern_brocot$ () Nat_nat_prod_tree$)
(declare-fun traverse_tree$ (Dir_list$ Rat_tree$) Rat_tree$)
(declare-fun traverse_tree$a (Dir_list$ Rat_rat_fun_tree$) Rat_rat_fun_tree$)
(declare-fun traverse_tree$b (Dir_list$ Nat_nat_prod_rat_fun_tree$) Nat_nat_prod_rat_fun_tree$)
(declare-fun traverse_tree$c (Dir_list$ Nat_nat_prod_tree$) Nat_nat_prod_tree$)
(declare-fun traverse_tree$d (Dir_list$ Rat_rat_fun_rat_fun_tree$) Rat_rat_fun_rat_fun_tree$)
(declare-fun traverse_tree$e (Dir_list$ Rat_rat_rat_fun_fun_tree$) Rat_rat_rat_fun_fun_tree$)
(declare-fun traverse_tree$f (Dir_list$ Rat_nat_nat_prod_fun_tree$) Rat_nat_nat_prod_fun_tree$)
(declare-fun traverse_tree$g (Dir_list$ Nat_nat_prod_rat_fun_rat_fun_tree$) Nat_nat_prod_rat_fun_rat_fun_tree$)
(declare-fun traverse_tree$h (Dir_list$ Rat_rat_fun_rat_rat_fun_fun_tree$) Rat_rat_fun_rat_rat_fun_fun_tree$)
(declare-fun traverse_tree$i (Dir_list$ Nat_nat_prod_rat_rat_fun_fun_tree$) Nat_nat_prod_rat_rat_fun_fun_tree$)
(declare-fun traverse_tree$j (Dir_list$ Rat_nat_nat_prod_rat_fun_fun_tree$) Rat_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun traverse_tree$k (Dir_list$ Rat_rat_fun_nat_nat_prod_fun_tree$) Rat_rat_fun_nat_nat_prod_fun_tree$)
(declare-fun traverse_tree$l (Dir_list$ Nat_tree$) Nat_tree$)
(declare-fun traverse_tree$m (Dir_list$ Int_tree$) Int_tree$)
(declare-fun traverse_tree$n (Dir_list$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (! (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (fun_app$b (fract$ (of_nat$ ?v0)) (of_nat$ ?v1))) :pattern ((fun_app$ (fun_app$a uu$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 Nat_nat_prod$) (?v1 Nat_nat_prod_rat_fun$)) (! (= (fun_app$c (uui$ ?v0) ?v1) (fun_app$d ?v1 ?v0)) :pattern ((fun_app$c (uui$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 Rat$) (?v1 Rat_rat_fun$)) (! (= (fun_app$e (uuh$ ?v0) ?v1) (fun_app$f ?v1 ?v0)) :pattern ((fun_app$e (uuh$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod_rat_fun_rat_fun$)) (! (= (fun_app$g (uug$ ?v0) ?v1) (fun_app$c ?v1 ?v0)) :pattern ((fun_app$g (uug$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (! (= (fun_app$h (uuf$ ?v0) ?v1) (fun_app$i ?v1 ?v0)) :pattern ((fun_app$h (uuf$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$)) (! (= (fun_app$j (uua$ ?v0) ?v1) (fun_app$k ?v1 ?v0)) :pattern ((fun_app$j (uua$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$)) (! (= (fun_app$l (uub$ ?v0) ?v1) (fun_app$m ?v1 ?v0)) :pattern ((fun_app$l (uub$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$)) (! (= (fun_app$n (uuc$ ?v0) ?v1) (fun_app$h ?v1 ?v0)) :pattern ((fun_app$n (uuc$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$)) (! (= (fun_app$o (uud$ ?v0) ?v1) (fun_app$p ?v1 ?v0)) :pattern ((fun_app$o (uud$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun$)) (! (= (fun_app$q (uue$ ?v0) ?v1) (fun_app$r ?v1 ?v0)) :pattern ((fun_app$q (uue$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 Rat$) (?v1 Nat_nat_prod$)) (! (= (fun_app$d (uur$ ?v0) ?v1) ?v0) :pattern ((fun_app$d (uur$ ?v0) ?v1)))) :named a10))
(assert (! (forall ((?v0 Rat$) (?v1 Rat$)) (! (= (fun_app$f (uuo$ ?v0) ?v1) ?v0) :pattern ((fun_app$f (uuo$ ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 Rat$) (?v1 Nat_nat_prod_rat_fun$)) (! (= (fun_app$c (uup$ ?v0) ?v1) ?v0) :pattern ((fun_app$c (uup$ ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (! (= (fun_app$k (uuj$ ?v0) ?v1) ?v0) :pattern ((fun_app$k (uuj$ ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 Int) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (! (= (fun_app$m (uuk$ ?v0) ?v1) ?v0) :pattern ((fun_app$m (uuk$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod_rat_fun$)) (! (= (fun_app$i (uuq$ ?v0) ?v1) ?v0) :pattern ((fun_app$i (uuq$ ?v0) ?v1)))) :named a15))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (! (= (fun_app$h (uul$ ?v0) ?v1) ?v0) :pattern ((fun_app$h (uul$ ?v0) ?v1)))) :named a16))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (! (= (fun_app$p (uum$ ?v0) ?v1) ?v0) :pattern ((fun_app$p (uum$ ?v0) ?v1)))) :named a17))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (! (= (fun_app$r (uun$ ?v0) ?v1) ?v0) :pattern ((fun_app$r (uun$ ?v0) ?v1)))) :named a18))
(assert (! (not (= (root$ (traverse_tree$ (mkPath$ m$ n$) (tree_ap$ (tree_pure$ (case_prod$ uu$)) stern_brocot$))) (fun_app$b (fract$ (of_nat$ m$)) (of_nat$ n$)))) :named a19))
(assert (! (less$ zero$ m$) :named a20))
(assert (! (less$ zero$ n$) :named a21))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_fun_tree$) (?v2 Rat_tree$)) (= (traverse_tree$ ?v0 (tree_ap$a ?v1 ?v2)) (tree_ap$a (traverse_tree$a ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a22))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_rat_fun_tree$) (?v2 Nat_nat_prod_tree$)) (= (traverse_tree$ ?v0 (tree_ap$ ?v1 ?v2)) (tree_ap$ (traverse_tree$b ?v0 ?v1) (traverse_tree$c ?v0 ?v2)))) :named a23))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_fun_rat_fun_tree$) (?v2 Rat_rat_fun_tree$)) (= (traverse_tree$ ?v0 (tree_ap$b ?v1 ?v2)) (tree_ap$b (traverse_tree$d ?v0 ?v1) (traverse_tree$a ?v0 ?v2)))) :named a24))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_rat_fun_fun_tree$) (?v2 Rat_tree$)) (= (traverse_tree$a ?v0 (tree_ap$c ?v1 ?v2)) (tree_ap$c (traverse_tree$e ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a25))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_nat_nat_prod_fun_tree$) (?v2 Rat_tree$)) (= (traverse_tree$c ?v0 (tree_ap$d ?v1 ?v2)) (tree_ap$d (traverse_tree$f ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a26))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_rat_fun_rat_fun_tree$) (?v2 Nat_nat_prod_rat_fun_tree$)) (= (traverse_tree$ ?v0 (tree_ap$e ?v1 ?v2)) (tree_ap$e (traverse_tree$g ?v0 ?v1) (traverse_tree$b ?v0 ?v2)))) :named a27))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_fun_rat_rat_fun_fun_tree$) (?v2 Rat_rat_fun_tree$)) (= (traverse_tree$a ?v0 (tree_ap$f ?v1 ?v2)) (tree_ap$f (traverse_tree$h ?v0 ?v1) (traverse_tree$a ?v0 ?v2)))) :named a28))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_rat_rat_fun_fun_tree$) (?v2 Nat_nat_prod_tree$)) (= (traverse_tree$a ?v0 (tree_ap$g ?v1 ?v2)) (tree_ap$g (traverse_tree$i ?v0 ?v1) (traverse_tree$c ?v0 ?v2)))) :named a29))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_nat_nat_prod_rat_fun_fun_tree$) (?v2 Rat_tree$)) (= (traverse_tree$b ?v0 (tree_ap$h ?v1 ?v2)) (tree_ap$h (traverse_tree$j ?v0 ?v1) (traverse_tree$ ?v0 ?v2)))) :named a30))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_fun_nat_nat_prod_fun_tree$) (?v2 Rat_rat_fun_tree$)) (= (traverse_tree$c ?v0 (tree_ap$i ?v1 ?v2)) (tree_ap$i (traverse_tree$k ?v0 ?v1) (traverse_tree$a ?v0 ?v2)))) :named a31))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat$)) (= (traverse_tree$ ?v0 (tree_pure$a ?v1)) (tree_pure$a ?v1))) :named a32))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_rat_fun$)) (= (traverse_tree$b ?v0 (tree_pure$ ?v1)) (tree_pure$ ?v1))) :named a33))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat$)) (= (traverse_tree$l ?v0 (tree_pure$b ?v1)) (tree_pure$b ?v1))) :named a34))
(assert (! (forall ((?v0 Dir_list$) (?v1 Int)) (= (traverse_tree$m ?v0 (tree_pure$c ?v1)) (tree_pure$c ?v1))) :named a35))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_fun$)) (= (traverse_tree$a ?v0 (tree_pure$d ?v1)) (tree_pure$d ?v1))) :named a36))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod$)) (= (traverse_tree$c ?v0 (tree_pure$e ?v1)) (tree_pure$e ?v1))) :named a37))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_rat_fun_rat_fun$)) (= (traverse_tree$g ?v0 (tree_pure$f ?v1)) (tree_pure$f ?v1))) :named a38))
(assert (! (forall ((?v0 Dir_list$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (traverse_tree$n ?v0 (tree_pure$g ?v1)) (tree_pure$g ?v1))) :named a39))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_fun_rat_fun$)) (= (traverse_tree$d ?v0 (tree_pure$h ?v1)) (tree_pure$h ?v1))) :named a40))
(assert (! (forall ((?v0 Dir_list$) (?v1 Rat_rat_fun_nat_nat_prod_fun$)) (= (traverse_tree$k ?v0 (tree_pure$i ?v1)) (tree_pure$i ?v1))) :named a41))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod$)) (= (tree_ap$ (tree_pure$ ?v0) (tree_pure$e ?v1)) (tree_pure$a (fun_app$d ?v0 ?v1)))) :named a42))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun$)) (= (tree_ap$j (tree_pure$g ?v0) (tree_pure$ ?v1)) (tree_pure$ (fun_app$i ?v0 ?v1)))) :named a43))
(assert (! (forall ((?v0 Rat_rat_fun$) (?v1 Rat$)) (= (tree_ap$a (tree_pure$d ?v0) (tree_pure$a ?v1)) (tree_pure$a (fun_app$f ?v0 ?v1)))) :named a44))
(assert (! (forall ((?v0 Rat_nat_fun$) (?v1 Rat$)) (= (tree_ap$k (tree_pure$j ?v0) (tree_pure$a ?v1)) (tree_pure$b (fun_app$s ?v0 ?v1)))) :named a45))
(assert (! (forall ((?v0 Rat_int_fun$) (?v1 Rat$)) (= (tree_ap$l (tree_pure$k ?v0) (tree_pure$a ?v1)) (tree_pure$c (fun_app$t ?v0 ?v1)))) :named a46))
(assert (! (forall ((?v0 Nat_rat_fun$) (?v1 Nat$)) (= (tree_ap$m (tree_pure$l ?v0) (tree_pure$b ?v1)) (tree_pure$a (fun_app$ ?v0 ?v1)))) :named a47))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat$)) (= (tree_ap$n (tree_pure$m ?v0) (tree_pure$b ?v1)) (tree_pure$b (fun_app$u ?v0 ?v1)))) :named a48))
(assert (! (forall ((?v0 Nat_int_fun$) (?v1 Nat$)) (= (tree_ap$o (tree_pure$n ?v0) (tree_pure$b ?v1)) (tree_pure$c (fun_app$v ?v0 ?v1)))) :named a49))
(assert (! (forall ((?v0 Int_rat_fun$) (?v1 Int)) (= (tree_ap$p (tree_pure$o ?v0) (tree_pure$c ?v1)) (tree_pure$a (fun_app$b ?v0 ?v1)))) :named a50))
(assert (! (forall ((?v0 Int_nat_fun$) (?v1 Int)) (= (tree_ap$q (tree_pure$p ?v0) (tree_pure$c ?v1)) (tree_pure$b (fun_app$w ?v0 ?v1)))) :named a51))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod_rat_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a52))
(assert (! (forall ((?v0 Rat$) (?v1 Rat$)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a53))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (tree_pure$b ?v0) (tree_pure$b ?v1)) (= ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 Int) (?v1 Int)) (= (= (tree_pure$c ?v0) (tree_pure$c ?v1)) (= ?v0 ?v1))) :named a55))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$) (?v1 Nat_nat_prod_rat_fun_rat_fun$)) (= (= (tree_pure$f ?v0) (tree_pure$f ?v1)) (= ?v0 ?v1))) :named a56))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (= (tree_pure$g ?v0) (tree_pure$g ?v1)) (= ?v0 ?v1))) :named a57))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun$)) (= (= (tree_pure$q ?v0) (tree_pure$q ?v1)) (= ?v0 ?v1))) :named a58))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$)) (= (= (tree_pure$r ?v0) (tree_pure$r ?v1)) (= ?v0 ?v1))) :named a59))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$)) (= (= (tree_pure$s ?v0) (tree_pure$s ?v1)) (= ?v0 ?v1))) :named a60))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$)) (= (= (tree_pure$t ?v0) (tree_pure$t ?v1)) (= ?v0 ?v1))) :named a61))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (tree_ap$r ?v0 (tree_pure$g ?v1)) (tree_ap$s (tree_pure$u (uua$ ?v1)) ?v0))) :named a62))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (tree_ap$t ?v0 (tree_pure$g ?v1)) (tree_ap$u (tree_pure$v (uub$ ?v1)) ?v0))) :named a63))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (tree_ap$v ?v0 (tree_pure$g ?v1)) (tree_ap$w (tree_pure$w (uuc$ ?v1)) ?v0))) :named a64))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (tree_ap$x ?v0 (tree_pure$g ?v1)) (tree_ap$y (tree_pure$x (uud$ ?v1)) ?v0))) :named a65))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (tree_ap$z ?v0 (tree_pure$g ?v1)) (tree_ap$aa (tree_pure$y (uue$ ?v1)) ?v0))) :named a66))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) (?v1 Nat_nat_prod_rat_fun$)) (= (tree_ap$j ?v0 (tree_pure$ ?v1)) (tree_ap$v (tree_pure$s (uuf$ ?v1)) ?v0))) :named a67))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$) (?v1 Nat_nat_prod_rat_fun$)) (= (tree_ap$e ?v0 (tree_pure$ ?v1)) (tree_ap$ab (tree_pure$z (uug$ ?v1)) ?v0))) :named a68))
(assert (! (forall ((?v0 Rat_rat_fun_tree$) (?v1 Rat$)) (= (tree_ap$a ?v0 (tree_pure$a ?v1)) (tree_ap$b (tree_pure$h (uuh$ ?v1)) ?v0))) :named a69))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$) (?v1 Nat_nat_prod$)) (= (tree_ap$ ?v0 (tree_pure$e ?v1)) (tree_ap$e (tree_pure$f (uui$ ?v1)) ?v0))) :named a70))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$a ?v0) (tree_pure$aa (of_nat$b ?v0))) :pattern ((of_nat$a ?v0)))) :named a71))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$c ?v0) (tree_pure$ab (of_nat$d ?v0))) :pattern ((of_nat$c ?v0)))) :named a72))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$e ?v0) (tree_pure$ac (of_nat$f ?v0))) :pattern ((of_nat$e ?v0)))) :named a73))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$f ?v0) (tree_pure$ad (of_nat$g ?v0))) :pattern ((of_nat$f ?v0)))) :named a74))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$d ?v0) (tree_pure$a (of_nat$h ?v0))) :pattern ((of_nat$d ?v0)))) :named a75))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$b ?v0) (tree_pure$b (of_nat$i ?v0))) :pattern ((of_nat$b ?v0)))) :named a76))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$g ?v0) (tree_pure$c (of_nat$ ?v0))) :pattern ((of_nat$g ?v0)))) :named a77))
(assert (! (forall ((?v0 Rat_rat_fun_tree$) (?v1 Rat_tree$)) (= (root$ (tree_ap$a ?v0 ?v1)) (fun_app$f (root$i ?v0) (root$ ?v1)))) :named a78))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$) (?v1 Nat_nat_prod_tree$)) (= (root$ (tree_ap$ ?v0 ?v1)) (fun_app$d (root$j ?v0) (root$a ?v1)))) :named a79))
(assert (! (forall ((?v0 Rat_rat_fun_rat_fun_tree$) (?v1 Rat_rat_fun_tree$)) (= (root$ (tree_ap$b ?v0 ?v1)) (fun_app$e (root$k ?v0) (root$i ?v1)))) :named a80))
(assert (! (forall ((?v0 Rat_rat_rat_fun_fun_tree$) (?v1 Rat_tree$)) (= (root$i (tree_ap$c ?v0 ?v1)) (fun_app$x (root$l ?v0) (root$ ?v1)))) :named a81))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun_tree$) (?v1 Rat_tree$)) (= (root$a (tree_ap$d ?v0 ?v1)) (root$m ?v0 (root$ ?v1)))) :named a82))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$) (?v1 Nat_nat_prod_rat_fun_tree$)) (= (root$ (tree_ap$e ?v0 ?v1)) (fun_app$c (root$n ?v0) (root$j ?v1)))) :named a83))
(assert (! (forall ((?v0 Rat_rat_fun_rat_rat_fun_fun_tree$) (?v1 Rat_rat_fun_tree$)) (= (root$i (tree_ap$f ?v0 ?v1)) (fun_app$y (root$o ?v0) (root$i ?v1)))) :named a84))
(assert (! (forall ((?v0 Nat_nat_prod_rat_rat_fun_fun_tree$) (?v1 Nat_nat_prod_tree$)) (= (root$i (tree_ap$g ?v0 ?v1)) (fun_app$z (root$p ?v0) (root$a ?v1)))) :named a85))
(assert (! (forall ((?v0 Rat_nat_nat_prod_rat_fun_fun_tree$) (?v1 Rat_tree$)) (= (root$j (tree_ap$h ?v0 ?v1)) (fun_app$aa (root$q ?v0) (root$ ?v1)))) :named a86))
(assert (! (forall ((?v0 Rat_rat_fun_nat_nat_prod_fun_tree$) (?v1 Rat_rat_fun_tree$)) (= (root$a (tree_ap$i ?v0 ?v1)) (fun_app$ab (root$r ?v0) (root$i ?v1)))) :named a87))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)) (= (tree_ap$r (tree_pure$q (uuj$ ?v0)) ?v1) (tree_pure$b ?v0))) :named a88))
(assert (! (forall ((?v0 Int) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)) (= (tree_ap$t (tree_pure$r (uuk$ ?v0)) ?v1) (tree_pure$c ?v0))) :named a89))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)) (= (tree_ap$v (tree_pure$s (uul$ ?v0)) ?v1) (tree_pure$ ?v0))) :named a90))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)) (= (tree_ap$x (tree_pure$t (uum$ ?v0)) ?v1) (tree_pure$f ?v0))) :named a91))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)) (= (tree_ap$z (tree_pure$ae (uun$ ?v0)) ?v1) (tree_pure$g ?v0))) :named a92))
(assert (! (forall ((?v0 Rat$) (?v1 Rat_tree$)) (= (tree_ap$a (tree_pure$d (uuo$ ?v0)) ?v1) (tree_pure$a ?v0))) :named a93))
(assert (! (forall ((?v0 Rat$) (?v1 Nat_nat_prod_rat_fun_tree$)) (= (tree_ap$e (tree_pure$f (uup$ ?v0)) ?v1) (tree_pure$a ?v0))) :named a94))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$) (?v1 Nat_nat_prod_rat_fun_tree$)) (= (tree_ap$j (tree_pure$g (uuq$ ?v0)) ?v1) (tree_pure$ ?v0))) :named a95))
(assert (! (forall ((?v0 Rat$) (?v1 Nat_nat_prod_tree$)) (= (tree_ap$ (tree_pure$ (uur$ ?v0)) ?v1) (tree_pure$a ?v0))) :named a96))
(assert (! (forall ((?v0 Rat$)) (= (root$ (tree_pure$a ?v0)) ?v0)) :named a97))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$)) (= (root$j (tree_pure$ ?v0)) ?v0)) :named a98))
(assert (! (forall ((?v0 Nat$)) (= (root$b (tree_pure$b ?v0)) ?v0)) :named a99))
(assert (! (forall ((?v0 Int)) (= (root$c (tree_pure$c ?v0)) ?v0)) :named a100))
(assert (! (forall ((?v0 Rat_rat_fun$)) (= (root$i (tree_pure$d ?v0)) ?v0)) :named a101))
(assert (! (forall ((?v0 Nat_nat_prod$)) (= (root$a (tree_pure$e ?v0)) ?v0)) :named a102))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$)) (= (root$n (tree_pure$f ?v0)) ?v0)) :named a103))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (root$s (tree_pure$g ?v0)) ?v0)) :named a104))
(assert (! (forall ((?v0 Rat_rat_fun_rat_fun$)) (= (root$k (tree_pure$h ?v0)) ?v0)) :named a105))
(assert (! (forall ((?v0 Rat_rat_fun_nat_nat_prod_fun$)) (= (root$r (tree_pure$i ?v0)) ?v0)) :named a106))
(assert (! (= zero$a (tree_pure$ad zero$b)) :named a107))
(assert (! (= zero$c (tree_pure$ab zero$d)) :named a108))
(assert (! (= zero$e (tree_pure$af zero$f)) :named a109))
(assert (! (= zero$f (tree_pure$aa zero$g)) :named a110))
(assert (! (= zero$d (tree_pure$a zero$h)) :named a111))
(assert (! (= zero$b (tree_pure$c 0)) :named a112))
(assert (! (= zero$g (tree_pure$b zero$)) :named a113))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)) (= (tree_ap$z ?v0 (tree_pure$g ?v2)) (tree_ap$z ?v1 (tree_pure$g ?v2)))) (= ?v0 ?v1))) :named a114))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_rat_fun$)) (= (tree_ap$j ?v0 (tree_pure$ ?v2)) (tree_ap$j ?v1 (tree_pure$ ?v2)))) (= ?v0 ?v1))) :named a115))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$) (?v1 Nat_nat_prod_rat_fun_rat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_rat_fun$)) (= (tree_ap$e ?v0 (tree_pure$ ?v2)) (tree_ap$e ?v1 (tree_pure$ ?v2)))) (= ?v0 ?v1))) :named a116))
(assert (! (forall ((?v0 Rat_rat_fun_tree$) (?v1 Rat_rat_fun_tree$)) (=> (forall ((?v2 Rat$)) (= (tree_ap$a ?v0 (tree_pure$a ?v2)) (tree_ap$a ?v1 (tree_pure$a ?v2)))) (= ?v0 ?v1))) :named a117))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$) (?v1 Nat_nat_prod_rat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod$)) (= (tree_ap$ ?v0 (tree_pure$e ?v2)) (tree_ap$ ?v1 (tree_pure$e ?v2)))) (= ?v0 ?v1))) :named a118))
(assert (! (forall ((?v0 Rat_rat_fun_tree$) (?v1 Rat_rat_fun_tree$)) (=> (forall ((?v2 Rat_tree$)) (= (tree_ap$a ?v0 ?v2) (tree_ap$a ?v1 ?v2))) (= ?v0 ?v1))) :named a119))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$) (?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_rat_fun_tree$)) (= (tree_ap$j ?v0 ?v2) (tree_ap$j ?v1 ?v2))) (= ?v0 ?v1))) :named a120))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$) (?v1 Nat_nat_prod_rat_fun_rat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_rat_fun_tree$)) (= (tree_ap$e ?v0 ?v2) (tree_ap$e ?v1 ?v2))) (= ?v0 ?v1))) :named a121))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$) (?v1 Nat_nat_prod_rat_fun_tree$)) (=> (forall ((?v2 Nat_nat_prod_tree$)) (= (tree_ap$ ?v0 ?v2) (tree_ap$ ?v1 ?v2))) (= ?v0 ?v1))) :named a122))
(assert (! (forall ((?v0 Nat$)) (= (less$ zero$ (of_nat$i ?v0)) (less$ zero$ ?v0))) :named a123))
(assert (! (forall ((?v0 Nat$)) (= (< 0 (of_nat$ ?v0)) (less$ zero$ ?v0))) :named a124))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (less$ (of_nat$i ?v0) (of_nat$i ?v1)) (less$ ?v0 ?v1))) :named a125))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (< (of_nat$ ?v0) (of_nat$ ?v1)) (less$ ?v0 ?v1))) :named a126))
(assert (! (forall ((?v0 Nat$)) (= (= (of_nat$b ?v0) zero$g) (= ?v0 zero$))) :named a127))
(assert (! (forall ((?v0 Nat$)) (= (= (of_nat$g ?v0) zero$b) (= ?v0 zero$))) :named a128))
(assert (! (forall ((?v0 Nat$)) (= (= (of_nat$i ?v0) zero$) (= ?v0 zero$))) :named a129))
(assert (! (forall ((?v0 Nat$)) (= (= (of_nat$ ?v0) 0) (= ?v0 zero$))) :named a130))
(assert (! (forall ((?v0 Nat$)) (= (= zero$g (of_nat$b ?v0)) (= zero$ ?v0))) :named a131))
(assert (! (forall ((?v0 Nat$)) (= (= zero$b (of_nat$g ?v0)) (= zero$ ?v0))) :named a132))
(assert (! (forall ((?v0 Nat$)) (= (= zero$ (of_nat$i ?v0)) (= zero$ ?v0))) :named a133))
(assert (! (forall ((?v0 Nat$)) (= (= 0 (of_nat$ ?v0)) (= zero$ ?v0))) :named a134))
(assert (! (= (of_nat$b zero$) zero$g) :named a135))
(assert (! (= (of_nat$g zero$) zero$b) :named a136))
(assert (! (= (of_nat$i zero$) zero$) :named a137))
(assert (! (= (of_nat$ zero$) 0) :named a138))
(check-sat)
;(get-unsat-core)
