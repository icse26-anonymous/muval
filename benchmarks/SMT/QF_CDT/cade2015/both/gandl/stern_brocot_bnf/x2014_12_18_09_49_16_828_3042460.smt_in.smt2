; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 227
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_b_fun$ 0)
(declare-sort B_b_fun$ 0)
(declare-sort Bool_tree$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort B_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort Bool_b_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort A_b_b_fun_fun$ 0)
(declare-sort A_b_fun_a_fun$ 0)
(declare-sort A_b_fun_b_fun$ 0)
(declare-sort B_a_b_fun_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_b_bool_fun_fun$ 0)
(declare-sort A_b_fun_bool_fun$ 0)
(declare-sort A_bool_b_fun_fun$ 0)
(declare-sort Bool_a_b_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_bool_fun$ 0)
(declare-sort B_bool_fun_bool_fun$ 0)
(declare-sort Bool_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_bool_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_b_fun_fun$ 0)
(declare-sort A_b_bool_fun_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_b_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_b_bool_fun_fun_b_bool_fun_fun$ 0)
(declare-sort A_b_fun_a_fun_a_b_fun_b_fun_fun$ 0)
(declare-sort B_bool_fun_a_b_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_fun_a_b_fun_bool_fun_fun$ 0)
(declare-sort A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_bool_bool_fun_fun$ 0)
(declare-sort A_bool_fun_a_b_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ 0)
(declare-sort A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun$ 0)
(declare-sort Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_fun_a_b_fun_b_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_bool_fun_bool_fun_fun_a_b_bool_fun_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$ 0)
(declare-codatatypes () ((A_bool_fun_tree$ (node$ (select$ A_bool_fun$) (selecta$ A_bool_fun_tree$) (selectb$ A_bool_fun_tree$)))
  (A_tree$ (node$a (root$ A$) (left$ A_tree$) (right$ A_tree$)))
  (A_b_fun_a_bool_fun_fun_tree$ (node$b (selectc$ A_b_fun_a_bool_fun_fun$) (selectd$ A_b_fun_a_bool_fun_fun_tree$) (selecte$ A_b_fun_a_bool_fun_fun_tree$)))
  (A_b_fun_tree$ (node$c (selectf$ A_b_fun$) (selectg$ A_b_fun_tree$) (selecth$ A_b_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$d (selecti$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (selectj$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (selectk$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)))
  (Bool_bool_fun_tree$ (node$e (selectl$ Bool_bool_fun$) (selectm$ Bool_bool_fun_tree$) (selectn$ Bool_bool_fun_tree$)))
  (Bool_a_fun_tree$ (node$f (selecto$ Bool_a_fun$) (selectp$ Bool_a_fun_tree$) (selectq$ Bool_a_fun_tree$)))
  (A_a_fun_tree$ (node$g (selectr$ A_a_fun$) (selects$ A_a_fun_tree$) (selectt$ A_a_fun_tree$)))
  (B_tree$ (node$h (root$a B$) (left$a B_tree$) (right$a B_tree$)))
  (Bool_a_bool_fun_fun_tree$ (node$i (selectu$ Bool_a_bool_fun_fun$) (selectv$ Bool_a_bool_fun_fun_tree$) (selectw$ Bool_a_bool_fun_fun_tree$)))
  (Bool_a_b_fun_fun_tree$ (node$j (selectx$ Bool_a_b_fun_fun$) (selecty$ Bool_a_b_fun_fun_tree$) (selectz$ Bool_a_b_fun_fun_tree$)))
  (A_bool_fun_bool_fun_tree$ (node$k (selecua$ A_bool_fun_bool_fun$) (selecub$ A_bool_fun_bool_fun_tree$) (selecuc$ A_bool_fun_bool_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ (node$l (selecud$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$) (selecue$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$) (selecuf$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)))
  (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$m (selecug$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (selecuh$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (selecui$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$n (selecuj$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (selecuk$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (selecul$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_fun_tree$ (node$o (selecum$ A_b_fun_a_b_fun_fun$) (selecun$ A_b_fun_a_b_fun_fun_tree$) (selecuo$ A_b_fun_a_b_fun_fun_tree$)))
  (A_b_bool_fun_fun_tree$ (node$p (selecup$ A_b_bool_fun_fun$) (selecuq$ A_b_bool_fun_fun_tree$) (selecur$ A_b_bool_fun_fun_tree$)))
  (A_bool_bool_fun_fun_tree$ (node$q (selecus$ A_bool_bool_fun_fun$) (selecut$ A_bool_bool_fun_fun_tree$) (selecuu$ A_bool_bool_fun_fun_tree$)))
  (A_bool_bool_fun_fun_bool_bool_fun_fun_tree$ (node$r (selecuv$ A_bool_bool_fun_fun_bool_bool_fun_fun$) (selecuw$ A_bool_bool_fun_fun_bool_bool_fun_fun_tree$) (selecux$ A_bool_bool_fun_fun_bool_bool_fun_fun_tree$)))
  (B_bool_fun_tree$ (node$s (selecuy$ B_bool_fun$) (selecuz$ B_bool_fun_tree$) (selecva$ B_bool_fun_tree$)))
  (A_b_bool_fun_fun_b_bool_fun_fun_tree$ (node$t (selecvb$ A_b_bool_fun_fun_b_bool_fun_fun$) (selecvc$ A_b_bool_fun_fun_b_bool_fun_fun_tree$) (selecvd$ A_b_bool_fun_fun_b_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_tree$ (node$u (selecve$ A_a_bool_fun_fun$) (selecvf$ A_a_bool_fun_fun_tree$) (selecvg$ A_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_bool_fun_fun_tree$ (node$v (selecvh$ A_a_bool_fun_fun_a_bool_fun_fun$) (selecvi$ A_a_bool_fun_fun_a_bool_fun_fun_tree$) (selecvj$ A_a_bool_fun_fun_a_bool_fun_fun_tree$)))
  (A_b_fun_b_fun_tree$ (node$w (selecvk$ A_b_fun_b_fun$) (selecvl$ A_b_fun_b_fun_tree$) (selecvm$ A_b_fun_b_fun_tree$)))
  (A_a_fun_a_fun_tree$ (node$x (selecvn$ A_a_fun_a_fun$) (selecvo$ A_a_fun_a_fun_tree$) (selecvp$ A_a_fun_a_fun_tree$)))
  (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ (node$y (selecvq$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun$) (selecvr$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$) (selecvs$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$z (selecvt$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$) (selecvu$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (selecvv$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$aa (selecvw$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$) (selecvx$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (selecvy$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$ab (selecvz$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$) (selecwa$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (selecwb$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$ac (selecwc$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (selecwd$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (selecwe$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ (node$ad (selecwf$ A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$) (selecwg$ A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$) (selecwh$ A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$ae (selecwi$ A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (selecwj$ A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (selecwk$ A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_a_fun_a_bool_fun_fun_tree$ (node$af (selecwl$ A_a_fun_a_bool_fun_fun$) (selecwm$ A_a_fun_a_bool_fun_fun_tree$) (selecwn$ A_a_fun_a_bool_fun_fun_tree$)))
  (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ (node$ag (selecwo$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$) (selecwp$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$) (selecwq$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_bool_fun_fun_tree$ (node$ah (selecwr$ A_bool_fun_a_bool_fun_fun$) (selecws$ A_bool_fun_a_bool_fun_fun_tree$) (selecwt$ A_bool_fun_a_bool_fun_fun_tree$)))
  (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$ai (selecwu$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$) (selecwv$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (selecww$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_bool_fun_a_b_fun_fun_tree$ (node$aj (selecwx$ A_bool_fun_a_b_fun_fun$) (selecwy$ A_bool_fun_a_b_fun_fun_tree$) (selecwz$ A_bool_fun_a_b_fun_fun_tree$)))
  (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ (node$ak (selecxa$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun$) (selecxb$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$) (selecxc$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)))
  (A_bool_b_fun_fun_tree$ (node$al (selecxd$ A_bool_b_fun_fun$) (selecxe$ A_bool_b_fun_fun_tree$) (selecxf$ A_bool_b_fun_fun_tree$)))
  (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ (node$am (selecxg$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun$) (selecxh$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$) (selecxi$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)))
  (A_b_b_fun_fun_tree$ (node$an (selecxj$ A_b_b_fun_fun$) (selecxk$ A_b_b_fun_fun_tree$) (selecxl$ A_b_b_fun_fun_tree$)))
  (A_b_fun_bool_fun_tree$ (node$ao (selecxm$ A_b_fun_bool_fun$) (selecxn$ A_b_fun_bool_fun_tree$) (selecxo$ A_b_fun_bool_fun_tree$)))
  (A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ (node$ap (selecxp$ A_b_fun_a_fun_a_b_fun_bool_fun_fun$) (selecxq$ A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$) (selecxr$ A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)))
  (A_b_fun_a_fun_tree$ (node$aq (selecxs$ A_b_fun_a_fun$) (selecxt$ A_b_fun_a_fun_tree$) (selecxu$ A_b_fun_a_fun_tree$)))
  (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ (node$ar (selecxv$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun$) (selecxw$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$) (selecxx$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)))
  (A_b_fun_a_fun_a_b_fun_b_fun_fun_tree$ (node$as (selecxy$ A_b_fun_a_fun_a_b_fun_b_fun_fun$) (selecxz$ A_b_fun_a_fun_a_b_fun_b_fun_fun_tree$) (selecya$ A_b_fun_a_fun_a_b_fun_b_fun_fun_tree$)))
  (A_b_fun_a_b_fun_fun_a_b_fun_a_fun_a_b_fun_b_fun_fun_fun_tree$ (node$at (selecyb$ A_b_fun_a_b_fun_fun_a_b_fun_a_fun_a_b_fun_b_fun_fun_fun$) (selecyc$ A_b_fun_a_b_fun_fun_a_b_fun_a_fun_a_b_fun_b_fun_fun_fun_tree$) (selecyd$ A_b_fun_a_b_fun_fun_a_b_fun_a_fun_a_b_fun_b_fun_fun_fun_tree$)))
  (A_b_bool_fun_fun_a_bool_fun_fun_tree$ (node$au (selecye$ A_b_bool_fun_fun_a_bool_fun_fun$) (selecyf$ A_b_bool_fun_fun_a_bool_fun_fun_tree$) (selecyg$ A_b_bool_fun_fun_a_bool_fun_fun_tree$)))
  (A_b_bool_fun_bool_fun_fun_a_b_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$av (selecyh$ A_b_bool_fun_bool_fun_fun_a_b_bool_fun_fun_a_bool_fun_fun_fun$) (selecyi$ A_b_bool_fun_bool_fun_fun_a_b_bool_fun_fun_a_bool_fun_fun_fun_tree$) (selecyj$ A_b_bool_fun_bool_fun_fun_a_b_bool_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_bool_fun_bool_fun_fun_tree$ (node$aw (selecyk$ A_b_bool_fun_bool_fun_fun$) (selecyl$ A_b_bool_fun_bool_fun_fun_tree$) (selecym$ A_b_bool_fun_bool_fun_fun_tree$)))
  (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$ax (selecyn$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun$) (selecyo$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (selecyp$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$ay (selecyq$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$) (selecyr$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (selecys$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$az (selecyt$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (selecyu$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (selecyv$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$ba (selecyw$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun$) (selecyx$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) (selecyy$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$bb (selecyz$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (selecza$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (seleczb$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$bc (seleczc$ A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (seleczd$ A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (selecze$ A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$bd (seleczf$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (seleczg$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (seleczh$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ (node$be (seleczi$ A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$) (seleczj$ A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$) (seleczk$ A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)))
  (A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$bf (seleczl$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun$) (seleczm$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (seleczn$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$bg (seleczo$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (seleczp$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (seleczq$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$bh (seleczr$ A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (seleczs$ A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (seleczt$ A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)))
  (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ (node$bi (seleczu$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$) (seleczv$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$) (seleczw$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)))
  (B_bool_fun_a_b_bool_fun_fun_fun_tree$ (node$bj (seleczx$ B_bool_fun_a_b_bool_fun_fun_fun$) (seleczy$ B_bool_fun_a_b_bool_fun_fun_fun_tree$) (seleczz$ B_bool_fun_a_b_bool_fun_fun_fun_tree$)))
  (B_a_b_fun_fun_tree$ (node$bk (seledaa$ B_a_b_fun_fun$) (seledab$ B_a_b_fun_fun_tree$) (seledac$ B_a_b_fun_fun_tree$)))))
(declare-fun f$ () A_b_fun_tree$)
(declare-fun g$ () A_b_fun_tree$)
(declare-fun x$ () A_tree$)
(declare-fun y$ () A_tree$)
(declare-fun fa$ () A_b_fun_tree$)
(declare-fun ga$ () A_b_fun_tree$)
(declare-fun uu$ () A_b_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun ya$ () A_tree$)
(declare-fun uua$ (A$) A_bool_bool_fun_fun_bool_bool_fun_fun$)
(declare-fun uub$ (A$) A_b_bool_fun_fun_b_bool_fun_fun$)
(declare-fun uuc$ (A$) A_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uud$ (A$) A_b_fun_b_fun$)
(declare-fun uue$ (A$) A_a_fun_a_fun$)
(declare-fun uuf$ (A$) A_bool_fun_bool_fun$)
(declare-fun uug$ (A_b_fun$) A_b_fun_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun uuh$ (A_b_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun uui$ (Bool_bool_fun$) A_bool_bool_fun_fun$)
(declare-fun uuj$ (A_bool_fun$) A_a_bool_fun_fun$)
(declare-fun uuk$ (A$) A_a_fun$)
(declare-fun uul$ (A_b_fun$) A_b_fun_a_b_fun_fun$)
(declare-fun uum$ (B_bool_fun$) A_b_bool_fun_fun$)
(declare-fun uun$ (B$) A_b_fun$)
(declare-fun uuo$ (A_bool_fun$) A_b_fun_a_bool_fun_fun$)
(declare-fun uup$ (Bool) A_bool_fun$)
(declare-fun uuq$ (A_b_fun_a_bool_fun_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun uur$ (A_b_bool_fun_fun$) A_b_fun_a_bool_fun_fun$)
(declare-fun uus$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun$) A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun uut$ (A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun uuu$ (A_a_bool_fun_fun$) A_a_fun_a_bool_fun_fun$)
(declare-fun uuv$ (A_bool_bool_fun_fun$) A_bool_fun_a_bool_fun_fun$)
(declare-fun uuw$ (A_bool_b_fun_fun$) A_bool_fun_a_b_fun_fun$)
(declare-fun uux$ (A_b_b_fun_fun$) A_b_fun_a_b_fun_fun$)
(declare-fun uuy$ (A_b_fun_a_bool_fun_fun$ A_b_fun_a_fun$) A_b_fun_bool_fun$)
(declare-fun uuz$ (A_b_fun_a_b_fun_fun$ A_b_fun_a_fun$) A_b_fun_b_fun$)
(declare-fun uva$ (A_b_bool_fun_bool_fun_fun$) A_b_bool_fun_fun_a_bool_fun_fun$)
(declare-fun node$bl (Bool Bool_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_K$ () Bool_a_bool_fun_fun_tree$)
(declare-fun tree_S$ () A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun fun_app$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$) A_b_fun_a_bool_fun_fun$)
(declare-fun tree_K$a () B_bool_fun_a_b_bool_fun_fun_fun_tree$)
(declare-fun tree_K$b () B_a_b_fun_fun_tree$)
(declare-fun tree_K$c () A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$a () A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$b () A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun tree_S$c () A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$d () A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$e () A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)
(declare-fun tree_S$f () A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)
(declare-fun tree_S$g () A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)
(declare-fun tree_S$h () A_b_fun_a_b_fun_fun_a_b_fun_a_fun_a_b_fun_b_fun_fun_fun_tree$)
(declare-fun tree_S$i () A_b_bool_fun_bool_fun_fun_a_b_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_S$j () A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$k () A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_S$l () A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun tree_S$m () A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$ (A_bool_fun_tree$ A_tree$) Bool_tree$)
(declare-fun fun_app$a (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun$) A_b_fun_a_bool_fun_fun$)
(declare-fun fun_app$b (A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun$) A_bool_fun$)
(declare-fun fun_app$c (A_b_fun_a_bool_fun_fun$ A_b_fun$) A_bool_fun$)
(declare-fun fun_app$d (A_bool_fun_bool_fun$ A_bool_fun$) Bool)
(declare-fun fun_app$e (A_bool_fun$ A$) Bool)
(declare-fun fun_app$f (A_bool_bool_fun_fun_bool_bool_fun_fun$ A_bool_bool_fun_fun$) Bool_bool_fun$)
(declare-fun fun_app$g (A_bool_bool_fun_fun$ A$) Bool_bool_fun$)
(declare-fun fun_app$h (A_b_bool_fun_fun_b_bool_fun_fun$ A_b_bool_fun_fun$) B_bool_fun$)
(declare-fun fun_app$i (A_b_bool_fun_fun$ A$) B_bool_fun$)
(declare-fun fun_app$j (A_a_bool_fun_fun_a_bool_fun_fun$ A_a_bool_fun_fun$) A_bool_fun$)
(declare-fun fun_app$k (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$l (A_b_fun_b_fun$ A_b_fun$) B$)
(declare-fun fun_app$m (A_b_fun$ A$) B$)
(declare-fun fun_app$n (A_a_fun_a_fun$ A_a_fun$) A$)
(declare-fun fun_app$o (A_a_fun$ A$) A$)
(declare-fun fun_app$p (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun fun_app$q (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_bool_fun_fun$) A_b_fun_a_bool_fun_fun$)
(declare-fun fun_app$r (A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun$) A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun fun_app$s (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_fun$) A_b_fun_a_bool_fun_fun$)
(declare-fun fun_app$t (A_b_fun_a_b_fun_fun$ A_b_fun$) A_b_fun$)
(declare-fun fun_app$u (A_b_fun_bool_fun$ A_b_fun$) Bool)
(declare-fun fun_app$v (A_b_fun_a_fun$ A_b_fun$) A$)
(declare-fun fun_app$w (A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun$)
(declare-fun fun_app$x (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$y (A_bool_fun_a_b_fun_fun$ A_bool_fun$) A_b_fun$)
(declare-fun fun_app$z (Bool_b_fun$ Bool) B$)
(declare-fun tree_ap$a (A_b_fun_a_bool_fun_fun_tree$ A_b_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$b (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$) A_b_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$c (Bool_bool_fun_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_ap$d (Bool_a_fun_tree$ Bool_tree$) A_tree$)
(declare-fun tree_ap$e (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun tree_ap$f (A_b_fun_tree$ A_tree$) B_tree$)
(declare-fun tree_ap$g (Bool_a_bool_fun_fun_tree$ Bool_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$h (Bool_a_b_fun_fun_tree$ Bool_tree$) A_b_fun_tree$)
(declare-fun tree_ap$i (A_bool_fun_bool_fun_tree$ A_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$j (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) Bool_tree$)
(declare-fun tree_ap$k (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ Bool_tree$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$l (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$m (A_bool_bool_fun_fun_tree$ A_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$n (A_bool_bool_fun_fun_bool_bool_fun_fun_tree$ A_bool_bool_fun_fun_tree$) Bool_bool_fun_tree$)
(declare-fun tree_ap$o (A_b_bool_fun_fun_tree$ A_tree$) B_bool_fun_tree$)
(declare-fun tree_ap$p (A_b_bool_fun_fun_b_bool_fun_fun_tree$ A_b_bool_fun_fun_tree$) B_bool_fun_tree$)
(declare-fun tree_ap$q (A_a_bool_fun_fun_tree$ A_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$r (A_a_bool_fun_fun_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$s (A_b_fun_b_fun_tree$ A_b_fun_tree$) B_tree$)
(declare-fun tree_ap$t (A_a_fun_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun tree_ap$u (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$v (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) A_b_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$w (A_b_fun_a_b_fun_fun_tree$ A_b_fun_tree$) A_b_fun_tree$)
(declare-fun tree_ap$x (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_bool_fun_fun_tree$) A_b_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$y (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_fun_tree$) A_b_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$z (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun fun_app$aa (A_bool_b_fun_fun$ A$) Bool_b_fun$)
(declare-fun fun_app$ab (A_b_bool_fun_fun_a_bool_fun_fun$ A_b_bool_fun_fun$) A_bool_fun$)
(declare-fun fun_app$ac (B_bool_fun_bool_fun$ B_bool_fun$) Bool)
(declare-fun fun_app$ad (A_b_bool_fun_bool_fun_fun$ A$) B_bool_fun_bool_fun$)
(declare-fun fun_app$ae (B_bool_fun$ B$) Bool)
(declare-fun fun_app$af (B_b_fun$ B$) B$)
(declare-fun fun_app$ag (A_b_b_fun_fun$ A$) B_b_fun$)
(declare-fun fun_app$ah (A_a_fun_a_bool_fun_fun$ A_a_fun$) A_bool_fun$)
(declare-fun fun_app$ai (Bool_a_fun$ Bool) A$)
(declare-fun fun_app$aj (Bool_a_bool_fun_fun$ Bool) A_bool_fun$)
(declare-fun fun_app$ak (Bool_a_b_fun_fun$ Bool) A_b_fun$)
(declare-fun fun_app$al (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$) Bool)
(declare-fun fun_app$am (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool) A_b_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun tree_ap$aa (A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$ab (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$ac (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$) A_a_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ad (A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$ae (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$af (A_bool_fun_a_b_fun_fun_tree$ A_bool_fun_tree$) A_b_fun_tree$)
(declare-fun tree_ap$ag (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ A_bool_b_fun_fun_tree$) A_bool_fun_a_b_fun_fun_tree$)
(declare-fun tree_ap$ah (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ A_b_b_fun_fun_tree$) A_b_fun_a_b_fun_fun_tree$)
(declare-fun tree_ap$ai (A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ A_b_fun_a_fun_tree$) A_b_fun_bool_fun_tree$)
(declare-fun tree_ap$aj (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$) A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)
(declare-fun tree_ap$ak (A_b_fun_a_fun_a_b_fun_b_fun_fun_tree$ A_b_fun_a_fun_tree$) A_b_fun_b_fun_tree$)
(declare-fun tree_ap$al (A_b_fun_a_b_fun_fun_a_b_fun_a_fun_a_b_fun_b_fun_fun_fun_tree$ A_b_fun_a_b_fun_fun_tree$) A_b_fun_a_fun_a_b_fun_b_fun_fun_tree$)
(declare-fun tree_ap$am (A_b_bool_fun_fun_a_bool_fun_fun_tree$ A_b_bool_fun_fun_tree$) A_bool_fun_tree$)
(declare-fun tree_ap$an (A_b_bool_fun_bool_fun_fun_a_b_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_b_bool_fun_bool_fun_fun_tree$) A_b_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$ao (B_bool_fun_tree$ B_tree$) Bool_tree$)
(declare-fun tree_ap$ap (A_b_fun_bool_fun_tree$ A_b_fun_tree$) Bool_tree$)
(declare-fun tree_ap$aq (A_b_fun_a_fun_tree$ A_b_fun_tree$) A_tree$)
(declare-fun tree_ap$ar (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$) A_b_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$as (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$at (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$) A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$au (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$av (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$) A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$aw (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ax (A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$ay (A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$) A_b_fun_a_bool_fun_fun_tree$)
(declare-fun tree_ap$az (A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_tree$) A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ba (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_fun_tree$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bb (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$bc (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_tree$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$bd (A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_tree$) A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$be (B_bool_fun_a_b_bool_fun_fun_fun_tree$ B_bool_fun_tree$) A_b_bool_fun_fun_tree$)
(declare-fun tree_ap$bf (B_a_b_fun_fun_tree$ B_tree$) A_b_fun_tree$)
(declare-fun tree_pure$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$a (Bool) Bool_tree$)
(declare-fun tree_pure$b (A_bool_fun$) A_bool_fun_tree$)
(declare-fun tree_pure$c (A$) A_tree$)
(declare-fun tree_pure$d (Bool_bool_fun$) Bool_bool_fun_tree$)
(declare-fun tree_pure$e (A_b_fun_a_bool_fun_fun$) A_b_fun_a_bool_fun_fun_tree$)
(declare-fun tree_pure$f (A_b_fun$) A_b_fun_tree$)
(declare-fun tree_pure$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$h (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$i (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$j (Bool_a_fun$) Bool_a_fun_tree$)
(declare-fun tree_pure$k (A_a_fun$) A_a_fun_tree$)
(declare-fun tree_pure$l (B$) B_tree$)
(declare-fun tree_pure$m (Bool_a_bool_fun_fun$) Bool_a_bool_fun_fun_tree$)
(declare-fun tree_pure$n (Bool_a_b_fun_fun$) Bool_a_b_fun_fun_tree$)
(declare-fun tree_pure$o (A_bool_fun_bool_fun$) A_bool_fun_bool_fun_tree$)
(declare-fun tree_pure$p (A_b_fun_a_b_fun_fun$) A_b_fun_a_b_fun_fun_tree$)
(declare-fun tree_pure$q (A_b_bool_fun_fun$) A_b_bool_fun_fun_tree$)
(declare-fun tree_pure$r (A_bool_bool_fun_fun_bool_bool_fun_fun$) A_bool_bool_fun_fun_bool_bool_fun_fun_tree$)
(declare-fun tree_pure$s (A_b_bool_fun_fun_b_bool_fun_fun$) A_b_bool_fun_fun_b_bool_fun_fun_tree$)
(declare-fun tree_pure$t (A_a_bool_fun_fun_a_bool_fun_fun$) A_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_pure$u (A_b_fun_b_fun$) A_b_fun_b_fun_tree$)
(declare-fun tree_pure$v (A_a_fun_a_fun$) A_a_fun_a_fun_tree$)
(declare-fun tree_pure$w (A_b_fun_a_bool_fun_fun_a_bool_fun_fun$) A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun tree_pure$x (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$y (A_bool_bool_fun_fun$) A_bool_bool_fun_fun_tree$)
(declare-fun tree_pure$z (A_a_bool_fun_fun$) A_a_bool_fun_fun_tree$)
(declare-fun tree_pure$aa (B_bool_fun$) B_bool_fun_tree$)
(declare-fun tree_pure$ab (A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$ac (A_bool_b_fun_fun$) A_bool_b_fun_fun_tree$)
(declare-fun tree_pure$ad (A_b_b_fun_fun$) A_b_b_fun_fun_tree$)
(declare-fun tree_pure$ae (A_b_fun_bool_fun$) A_b_fun_bool_fun_tree$)
(declare-fun tree_pure$af (A_b_fun_a_fun$) A_b_fun_a_fun_tree$)
(declare-fun tree_pure$ag (A_b_bool_fun_bool_fun_fun$) A_b_bool_fun_bool_fun_fun_tree$)
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$)) (! (= (fun_app$ (uuh$ ?v0) ?v1) (fun_app$a ?v1 ?v0)) :pattern ((fun_app$ (uuh$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun_a_bool_fun_fun$)) (! (= (fun_app$b (uug$ ?v0) ?v1) (fun_app$c ?v1 ?v0)) :pattern ((fun_app$b (uug$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 A$) (?v1 A_bool_fun$)) (! (= (fun_app$d (uuf$ ?v0) ?v1) (fun_app$e ?v1 ?v0)) :pattern ((fun_app$d (uuf$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 A$) (?v1 A_bool_bool_fun_fun$)) (! (= (fun_app$f (uua$ ?v0) ?v1) (fun_app$g ?v1 ?v0)) :pattern ((fun_app$f (uua$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 A$) (?v1 A_b_bool_fun_fun$)) (! (= (fun_app$h (uub$ ?v0) ?v1) (fun_app$i ?v1 ?v0)) :pattern ((fun_app$h (uub$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 A$) (?v1 A_a_bool_fun_fun$)) (! (= (fun_app$j (uuc$ ?v0) ?v1) (fun_app$k ?v1 ?v0)) :pattern ((fun_app$j (uuc$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 A$) (?v1 A_b_fun$)) (! (= (fun_app$l (uud$ ?v0) ?v1) (fun_app$m ?v1 ?v0)) :pattern ((fun_app$l (uud$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun$)) (! (= (fun_app$n (uue$ ?v0) ?v1) (fun_app$o ?v1 ?v0)) :pattern ((fun_app$n (uue$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v2 A_b_fun$)) (! (= (fun_app$a (fun_app$p (uut$ ?v0) ?v1) ?v2) (fun_app$q (fun_app$r ?v0 ?v2) (fun_app$a ?v1 ?v2))) :pattern ((fun_app$a (fun_app$p (uut$ ?v0) ?v1) ?v2)))) :named a8))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_fun$) (?v2 A_b_fun$)) (! (= (fun_app$c (fun_app$s (uus$ ?v0) ?v1) ?v2) (fun_app$c (fun_app$a ?v0 ?v2) (fun_app$t ?v1 ?v2))) :pattern ((fun_app$c (fun_app$s (uus$ ?v0) ?v1) ?v2)))) :named a9))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun_a_fun$) (?v2 A_b_fun$)) (! (= (fun_app$u (uuy$ ?v0 ?v1) ?v2) (fun_app$e (fun_app$c ?v0 ?v2) (fun_app$v ?v1 ?v2))) :pattern ((fun_app$u (uuy$ ?v0 ?v1) ?v2)))) :named a10))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$) (?v1 A_b_fun_a_fun$) (?v2 A_b_fun$)) (! (= (fun_app$l (uuz$ ?v0 ?v1) ?v2) (fun_app$m (fun_app$t ?v0 ?v2) (fun_app$v ?v1 ?v2))) :pattern ((fun_app$l (uuz$ ?v0 ?v1) ?v2)))) :named a11))
(assert (! (forall ((?v0 A_bool_bool_fun_fun$) (?v1 A_bool_fun$) (?v2 A$)) (! (= (fun_app$e (fun_app$w (uuv$ ?v0) ?v1) ?v2) (fun_app$x (fun_app$g ?v0 ?v2) (fun_app$e ?v1 ?v2))) :pattern ((fun_app$e (fun_app$w (uuv$ ?v0) ?v1) ?v2)))) :named a12))
(assert (! (forall ((?v0 A_bool_b_fun_fun$) (?v1 A_bool_fun$) (?v2 A$)) (! (= (fun_app$m (fun_app$y (uuw$ ?v0) ?v1) ?v2) (fun_app$z (fun_app$aa ?v0 ?v2) (fun_app$e ?v1 ?v2))) :pattern ((fun_app$m (fun_app$y (uuw$ ?v0) ?v1) ?v2)))) :named a13))
(assert (! (forall ((?v0 A_b_bool_fun_bool_fun_fun$) (?v1 A_b_bool_fun_fun$) (?v2 A$)) (! (= (fun_app$e (fun_app$ab (uva$ ?v0) ?v1) ?v2) (fun_app$ac (fun_app$ad ?v0 ?v2) (fun_app$i ?v1 ?v2))) :pattern ((fun_app$e (fun_app$ab (uva$ ?v0) ?v1) ?v2)))) :named a14))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 A_b_fun$) (?v2 A$)) (! (= (fun_app$e (fun_app$c (uur$ ?v0) ?v1) ?v2) (fun_app$ae (fun_app$i ?v0 ?v2) (fun_app$m ?v1 ?v2))) :pattern ((fun_app$e (fun_app$c (uur$ ?v0) ?v1) ?v2)))) :named a15))
(assert (! (forall ((?v0 A_b_b_fun_fun$) (?v1 A_b_fun$) (?v2 A$)) (! (= (fun_app$m (fun_app$t (uux$ ?v0) ?v1) ?v2) (fun_app$af (fun_app$ag ?v0 ?v2) (fun_app$m ?v1 ?v2))) :pattern ((fun_app$m (fun_app$t (uux$ ?v0) ?v1) ?v2)))) :named a16))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$e (fun_app$ah (uuu$ ?v0) ?v1) ?v2) (fun_app$e (fun_app$k ?v0 ?v2) (fun_app$o ?v1 ?v2))) :pattern ((fun_app$e (fun_app$ah (uuu$ ?v0) ?v1) ?v2)))) :named a17))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun$) (?v2 A$)) (! (= (fun_app$e (fun_app$c (fun_app$a uu$ ?v0) ?v1) ?v2) (= (fun_app$m ?v0 ?v2) (fun_app$m ?v1 ?v2))) :pattern ((fun_app$e (fun_app$c (fun_app$a uu$ ?v0) ?v1) ?v2)))) :named a18))
(assert (! (forall ((?v0 Bool) (?v1 A$)) (! (= (fun_app$e (uup$ ?v0) ?v1) ?v0) :pattern ((fun_app$e (uup$ ?v0) ?v1)))) :named a19))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A$)) (! (= (fun_app$g (uui$ ?v0) ?v1) ?v0) :pattern ((fun_app$g (uui$ ?v0) ?v1)))) :named a20))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun$)) (! (= (fun_app$a (uuq$ ?v0) ?v1) ?v0) :pattern ((fun_app$a (uuq$ ?v0) ?v1)))) :named a21))
(assert (! (forall ((?v0 B_bool_fun$) (?v1 A$)) (! (= (fun_app$i (uum$ ?v0) ?v1) ?v0) :pattern ((fun_app$i (uum$ ?v0) ?v1)))) :named a22))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_fun$)) (! (= (fun_app$c (uuo$ ?v0) ?v1) ?v0) :pattern ((fun_app$c (uuo$ ?v0) ?v1)))) :named a23))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (! (= (fun_app$k (uuj$ ?v0) ?v1) ?v0) :pattern ((fun_app$k (uuj$ ?v0) ?v1)))) :named a24))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun$)) (! (= (fun_app$t (uul$ ?v0) ?v1) ?v0) :pattern ((fun_app$t (uul$ ?v0) ?v1)))) :named a25))
(assert (! (forall ((?v0 B$) (?v1 A$)) (! (= (fun_app$m (uun$ ?v0) ?v1) ?v0) :pattern ((fun_app$m (uun$ ?v0) ?v1)))) :named a26))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$o (uuk$ ?v0) ?v1) ?v0) :pattern ((fun_app$o (uuk$ ?v0) ?v1)))) :named a27))
(assert (! (not (= (tree_ap$ (tree_ap$a (tree_ap$b (tree_pure$ uu$) fa$) ga$) ya$) (node$bl true (tree_pure$a true) (tree_pure$a true)))) :named a28))
(assert (! (= x$ y$) :named a29))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v2 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v3 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v4 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v5 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)) (= (= (node$d ?v0 ?v1 ?v2) (node$d ?v3 ?v4 ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))) :named a30))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun_a_bool_fun_fun_tree$) (?v2 A_b_fun_a_bool_fun_fun_tree$) (?v3 A_b_fun_a_bool_fun_fun$) (?v4 A_b_fun_a_bool_fun_fun_tree$) (?v5 A_b_fun_a_bool_fun_fun_tree$)) (= (= (node$b ?v0 ?v1 ?v2) (node$b ?v3 ?v4 ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))) :named a31))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun_tree$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun$) (?v4 A_bool_fun_tree$) (?v5 A_bool_fun_tree$)) (= (= (node$ ?v0 ?v1 ?v2) (node$ ?v3 ?v4 ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))) :named a32))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun_tree$) (?v2 A_b_fun_tree$) (?v3 A_b_fun$) (?v4 A_b_fun_tree$) (?v5 A_b_fun_tree$)) (= (= (node$c ?v0 ?v1 ?v2) (node$c ?v3 ?v4 ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))) :named a33))
(assert (! (forall ((?v0 A$) (?v1 A_tree$) (?v2 A_tree$) (?v3 A$) (?v4 A_tree$) (?v5 A_tree$)) (= (= (node$a ?v0 ?v1 ?v2) (node$a ?v3 ?v4 ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))) :named a34))
(assert (! (forall ((?v0 Bool) (?v1 Bool_tree$) (?v2 Bool_tree$) (?v3 Bool) (?v4 Bool_tree$) (?v5 Bool_tree$)) (= (= (node$bl ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5)) (and (= ?v0 ?v3) (and (= ?v1 ?v4) (= ?v2 ?v5))))) :named a35))
(assert (! (= (tree_ap$ (tree_ap$a (tree_ap$b (tree_pure$ uu$) fa$) ga$) ya$) (tree_pure$a true)) :named a36))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun_tree$) (?v2 A_bool_fun_tree$) (?v3 A$) (?v4 A_tree$) (?v5 A_tree$)) (! (= (tree_ap$ (node$ ?v0 ?v1 ?v2) (node$a ?v3 ?v4 ?v5)) (node$bl (fun_app$e ?v0 ?v3) (tree_ap$ ?v1 ?v4) (tree_ap$ ?v2 ?v5))) :pattern ((tree_ap$ (node$ ?v0 ?v1 ?v2) (node$a ?v3 ?v4 ?v5))))) :named a37))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_bool_fun_tree$) (?v2 Bool_bool_fun_tree$) (?v3 Bool) (?v4 Bool_tree$) (?v5 Bool_tree$)) (! (= (tree_ap$c (node$e ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5)) (node$bl (fun_app$x ?v0 ?v3) (tree_ap$c ?v1 ?v4) (tree_ap$c ?v2 ?v5))) :pattern ((tree_ap$c (node$e ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5))))) :named a38))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun_a_bool_fun_fun_tree$) (?v2 A_b_fun_a_bool_fun_fun_tree$) (?v3 A_b_fun$) (?v4 A_b_fun_tree$) (?v5 A_b_fun_tree$)) (! (= (tree_ap$a (node$b ?v0 ?v1 ?v2) (node$c ?v3 ?v4 ?v5)) (node$ (fun_app$c ?v0 ?v3) (tree_ap$a ?v1 ?v4) (tree_ap$a ?v2 ?v5))) :pattern ((tree_ap$a (node$b ?v0 ?v1 ?v2) (node$c ?v3 ?v4 ?v5))))) :named a39))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v2 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v3 A_b_fun$) (?v4 A_b_fun_tree$) (?v5 A_b_fun_tree$)) (! (= (tree_ap$b (node$d ?v0 ?v1 ?v2) (node$c ?v3 ?v4 ?v5)) (node$b (fun_app$a ?v0 ?v3) (tree_ap$b ?v1 ?v4) (tree_ap$b ?v2 ?v5))) :pattern ((tree_ap$b (node$d ?v0 ?v1 ?v2) (node$c ?v3 ?v4 ?v5))))) :named a40))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool_a_fun_tree$) (?v2 Bool_a_fun_tree$) (?v3 Bool) (?v4 Bool_tree$) (?v5 Bool_tree$)) (! (= (tree_ap$d (node$f ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5)) (node$a (fun_app$ai ?v0 ?v3) (tree_ap$d ?v1 ?v4) (tree_ap$d ?v2 ?v5))) :pattern ((tree_ap$d (node$f ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5))))) :named a41))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun_tree$) (?v2 A_a_fun_tree$) (?v3 A$) (?v4 A_tree$) (?v5 A_tree$)) (! (= (tree_ap$e (node$g ?v0 ?v1 ?v2) (node$a ?v3 ?v4 ?v5)) (node$a (fun_app$o ?v0 ?v3) (tree_ap$e ?v1 ?v4) (tree_ap$e ?v2 ?v5))) :pattern ((tree_ap$e (node$g ?v0 ?v1 ?v2) (node$a ?v3 ?v4 ?v5))))) :named a42))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun_tree$) (?v2 A_b_fun_tree$) (?v3 A$) (?v4 A_tree$) (?v5 A_tree$)) (! (= (tree_ap$f (node$c ?v0 ?v1 ?v2) (node$a ?v3 ?v4 ?v5)) (node$h (fun_app$m ?v0 ?v3) (tree_ap$f ?v1 ?v4) (tree_ap$f ?v2 ?v5))) :pattern ((tree_ap$f (node$c ?v0 ?v1 ?v2) (node$a ?v3 ?v4 ?v5))))) :named a43))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool_a_bool_fun_fun_tree$) (?v2 Bool_a_bool_fun_fun_tree$) (?v3 Bool) (?v4 Bool_tree$) (?v5 Bool_tree$)) (! (= (tree_ap$g (node$i ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5)) (node$ (fun_app$aj ?v0 ?v3) (tree_ap$g ?v1 ?v4) (tree_ap$g ?v2 ?v5))) :pattern ((tree_ap$g (node$i ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5))))) :named a44))
(assert (! (forall ((?v0 Bool_a_b_fun_fun$) (?v1 Bool_a_b_fun_fun_tree$) (?v2 Bool_a_b_fun_fun_tree$) (?v3 Bool) (?v4 Bool_tree$) (?v5 Bool_tree$)) (! (= (tree_ap$h (node$j ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5)) (node$c (fun_app$ak ?v0 ?v3) (tree_ap$h ?v1 ?v4) (tree_ap$h ?v2 ?v5))) :pattern ((tree_ap$h (node$j ?v0 ?v1 ?v2) (node$bl ?v3 ?v4 ?v5))))) :named a45))
(assert (! (forall ((?v0 A_bool_fun_bool_fun$) (?v1 A_bool_fun_bool_fun_tree$) (?v2 A_bool_fun_bool_fun_tree$) (?v3 A_bool_fun$) (?v4 A_bool_fun_tree$) (?v5 A_bool_fun_tree$)) (! (= (tree_ap$i (node$k ?v0 ?v1 ?v2) (node$ ?v3 ?v4 ?v5)) (node$bl (fun_app$d ?v0 ?v3) (tree_ap$i ?v1 ?v4) (tree_ap$i ?v2 ?v5))) :pattern ((tree_ap$i (node$k ?v0 ?v1 ?v2) (node$ ?v3 ?v4 ?v5))))) :named a46))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (= (tree_ap$ (tree_pure$b ?v0) (tree_pure$c ?v1)) (tree_pure$a (fun_app$e ?v0 ?v1)))) :named a47))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool)) (= (tree_ap$c (tree_pure$d ?v0) (tree_pure$a ?v1)) (tree_pure$a (fun_app$x ?v0 ?v1)))) :named a48))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun$)) (= (tree_ap$a (tree_pure$e ?v0) (tree_pure$f ?v1)) (tree_pure$b (fun_app$c ?v0 ?v1)))) :named a49))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v1 A_b_fun$)) (= (tree_ap$b (tree_pure$ ?v0) (tree_pure$f ?v1)) (tree_pure$e (fun_app$a ?v0 ?v1)))) :named a50))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$)) (= (tree_ap$j (tree_pure$g ?v0) (tree_pure$ ?v1)) (tree_pure$a (fun_app$al ?v0 ?v1)))) :named a51))
(assert (! (forall ((?v0 Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$k (tree_pure$h ?v0) (tree_pure$a ?v1)) (tree_pure$ (fun_app$am ?v0 ?v1)))) :named a52))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$)) (= (tree_ap$l (tree_pure$i ?v0) (tree_pure$ ?v1)) (tree_pure$ (fun_app$p ?v0 ?v1)))) :named a53))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool)) (= (tree_ap$d (tree_pure$j ?v0) (tree_pure$a ?v1)) (tree_pure$c (fun_app$ai ?v0 ?v1)))) :named a54))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (= (tree_ap$e (tree_pure$k ?v0) (tree_pure$c ?v1)) (tree_pure$c (fun_app$o ?v0 ?v1)))) :named a55))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A$)) (= (tree_ap$f (tree_pure$f ?v0) (tree_pure$c ?v1)) (tree_pure$l (fun_app$m ?v0 ?v1)))) :named a56))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$ (tree_pure$b ?v0) (node$a ?v1 ?v2 ?v3)) (node$bl (fun_app$e ?v0 ?v1) (tree_ap$ (tree_pure$b ?v0) ?v2) (tree_ap$ (tree_pure$b ?v0) ?v3)))) :named a57))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$c (tree_pure$d ?v0) (node$bl ?v1 ?v2 ?v3)) (node$bl (fun_app$x ?v0 ?v1) (tree_ap$c (tree_pure$d ?v0) ?v2) (tree_ap$c (tree_pure$d ?v0) ?v3)))) :named a58))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun$) (?v2 A_b_fun_tree$) (?v3 A_b_fun_tree$)) (= (tree_ap$a (tree_pure$e ?v0) (node$c ?v1 ?v2 ?v3)) (node$ (fun_app$c ?v0 ?v1) (tree_ap$a (tree_pure$e ?v0) ?v2) (tree_ap$a (tree_pure$e ?v0) ?v3)))) :named a59))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v1 A_b_fun$) (?v2 A_b_fun_tree$) (?v3 A_b_fun_tree$)) (= (tree_ap$b (tree_pure$ ?v0) (node$c ?v1 ?v2 ?v3)) (node$b (fun_app$a ?v0 ?v1) (tree_ap$b (tree_pure$ ?v0) ?v2) (tree_ap$b (tree_pure$ ?v0) ?v3)))) :named a60))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$d (tree_pure$j ?v0) (node$bl ?v1 ?v2 ?v3)) (node$a (fun_app$ai ?v0 ?v1) (tree_ap$d (tree_pure$j ?v0) ?v2) (tree_ap$d (tree_pure$j ?v0) ?v3)))) :named a61))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$e (tree_pure$k ?v0) (node$a ?v1 ?v2 ?v3)) (node$a (fun_app$o ?v0 ?v1) (tree_ap$e (tree_pure$k ?v0) ?v2) (tree_ap$e (tree_pure$k ?v0) ?v3)))) :named a62))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (= (tree_ap$f (tree_pure$f ?v0) (node$a ?v1 ?v2 ?v3)) (node$h (fun_app$m ?v0 ?v1) (tree_ap$f (tree_pure$f ?v0) ?v2) (tree_ap$f (tree_pure$f ?v0) ?v3)))) :named a63))
(assert (! (forall ((?v0 Bool_a_bool_fun_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$g (tree_pure$m ?v0) (node$bl ?v1 ?v2 ?v3)) (node$ (fun_app$aj ?v0 ?v1) (tree_ap$g (tree_pure$m ?v0) ?v2) (tree_ap$g (tree_pure$m ?v0) ?v3)))) :named a64))
(assert (! (forall ((?v0 Bool_a_b_fun_fun$) (?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (= (tree_ap$h (tree_pure$n ?v0) (node$bl ?v1 ?v2 ?v3)) (node$c (fun_app$ak ?v0 ?v1) (tree_ap$h (tree_pure$n ?v0) ?v2) (tree_ap$h (tree_pure$n ?v0) ?v3)))) :named a65))
(assert (! (forall ((?v0 A_bool_fun_bool_fun$) (?v1 A_bool_fun$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun_tree$)) (= (tree_ap$i (tree_pure$o ?v0) (node$ ?v1 ?v2 ?v3)) (node$bl (fun_app$d ?v0 ?v1) (tree_ap$i (tree_pure$o ?v0) ?v2) (tree_ap$i (tree_pure$o ?v0) ?v3)))) :named a66))
(assert (! (= (tree_ap$ (tree_ap$a (tree_ap$b (tree_pure$ uu$) f$) g$) y$) (tree_pure$a true)) :named a67))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$) (?v1 A_b_fun_a_b_fun_fun$)) (= (= (tree_pure$p ?v0) (tree_pure$p ?v1)) (= ?v0 ?v1))) :named a68))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_bool_fun$)) (= (= (tree_pure$b ?v0) (tree_pure$b ?v1)) (= ?v0 ?v1))) :named a69))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 A_b_bool_fun_fun$)) (= (= (tree_pure$q ?v0) (tree_pure$q ?v1)) (= ?v0 ?v1))) :named a70))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun$)) (= (= (tree_pure$f ?v0) (tree_pure$f ?v1)) (= ?v0 ?v1))) :named a71))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (= (tree_pure$c ?v0) (tree_pure$c ?v1)) (= ?v0 ?v1))) :named a72))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a73))
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a74))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 A$)) (= (tree_ap$m ?v0 (tree_pure$c ?v1)) (tree_ap$n (tree_pure$r (uua$ ?v1)) ?v0))) :named a75))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$) (?v1 A$)) (= (tree_ap$o ?v0 (tree_pure$c ?v1)) (tree_ap$p (tree_pure$s (uub$ ?v1)) ?v0))) :named a76))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A$)) (= (tree_ap$q ?v0 (tree_pure$c ?v1)) (tree_ap$r (tree_pure$t (uuc$ ?v1)) ?v0))) :named a77))
(assert (! (forall ((?v0 A_b_fun_tree$) (?v1 A$)) (= (tree_ap$f ?v0 (tree_pure$c ?v1)) (tree_ap$s (tree_pure$u (uud$ ?v1)) ?v0))) :named a78))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A$)) (= (tree_ap$e ?v0 (tree_pure$c ?v1)) (tree_ap$t (tree_pure$v (uue$ ?v1)) ?v0))) :named a79))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A$)) (= (tree_ap$ ?v0 (tree_pure$c ?v1)) (tree_ap$i (tree_pure$o (uuf$ ?v1)) ?v0))) :named a80))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$) (?v1 A_b_fun$)) (= (tree_ap$a ?v0 (tree_pure$f ?v1)) (tree_ap$u (tree_pure$w (uug$ ?v1)) ?v0))) :named a81))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v1 A_b_fun$)) (= (tree_ap$b ?v0 (tree_pure$f ?v1)) (tree_ap$v (tree_pure$x (uuh$ ?v1)) ?v0))) :named a82))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$)) (! (= (tree_pure$e ?v0) (node$b ?v0 (tree_pure$e ?v0) (tree_pure$e ?v0))) :pattern ((tree_pure$e ?v0)))) :named a83))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$)) (! (= (tree_pure$p ?v0) (node$o ?v0 (tree_pure$p ?v0) (tree_pure$p ?v0))) :pattern ((tree_pure$p ?v0)))) :named a84))
(assert (! (forall ((?v0 A_bool_fun$)) (! (= (tree_pure$b ?v0) (node$ ?v0 (tree_pure$b ?v0) (tree_pure$b ?v0))) :pattern ((tree_pure$b ?v0)))) :named a85))
(assert (! (forall ((?v0 A_b_bool_fun_fun$)) (! (= (tree_pure$q ?v0) (node$p ?v0 (tree_pure$q ?v0) (tree_pure$q ?v0))) :pattern ((tree_pure$q ?v0)))) :named a86))
(assert (! (forall ((?v0 A_b_fun$)) (! (= (tree_pure$f ?v0) (node$c ?v0 (tree_pure$f ?v0) (tree_pure$f ?v0))) :pattern ((tree_pure$f ?v0)))) :named a87))
(assert (! (forall ((?v0 A$)) (! (= (tree_pure$c ?v0) (node$a ?v0 (tree_pure$c ?v0) (tree_pure$c ?v0))) :pattern ((tree_pure$c ?v0)))) :named a88))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$)) (! (= (tree_pure$ ?v0) (node$d ?v0 (tree_pure$ ?v0) (tree_pure$ ?v0))) :pattern ((tree_pure$ ?v0)))) :named a89))
(assert (! (forall ((?v0 Bool)) (! (= (tree_pure$a ?v0) (node$bl ?v0 (tree_pure$a ?v0) (tree_pure$a ?v0))) :pattern ((tree_pure$a ?v0)))) :named a90))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_tree$)) (= (tree_ap$m (tree_pure$y (uui$ ?v0)) ?v1) (tree_pure$d ?v0))) :named a91))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_tree$)) (= (tree_ap$q (tree_pure$z (uuj$ ?v0)) ?v1) (tree_pure$b ?v0))) :named a92))
(assert (! (forall ((?v0 A$) (?v1 A_tree$)) (= (tree_ap$e (tree_pure$k (uuk$ ?v0)) ?v1) (tree_pure$c ?v0))) :named a93))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_b_fun_tree$)) (= (tree_ap$w (tree_pure$p (uul$ ?v0)) ?v1) (tree_pure$f ?v0))) :named a94))
(assert (! (forall ((?v0 B_bool_fun$) (?v1 A_tree$)) (= (tree_ap$o (tree_pure$q (uum$ ?v0)) ?v1) (tree_pure$aa ?v0))) :named a95))
(assert (! (forall ((?v0 B$) (?v1 A_tree$)) (= (tree_ap$f (tree_pure$f (uun$ ?v0)) ?v1) (tree_pure$l ?v0))) :named a96))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_b_fun_tree$)) (= (tree_ap$a (tree_pure$e (uuo$ ?v0)) ?v1) (tree_pure$b ?v0))) :named a97))
(assert (! (forall ((?v0 Bool) (?v1 A_tree$)) (= (tree_ap$ (tree_pure$b (uup$ ?v0)) ?v1) (tree_pure$a ?v0))) :named a98))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun_tree$)) (= (tree_ap$b (tree_pure$ (uuq$ ?v0)) ?v1) (tree_pure$e ?v0))) :named a99))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 A_bool_bool_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$m ?v0 (tree_pure$c ?v2)) (tree_ap$m ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a100))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$) (?v1 A_b_bool_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$o ?v0 (tree_pure$c ?v2)) (tree_ap$o ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a101))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$q ?v0 (tree_pure$c ?v2)) (tree_ap$q ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a102))
(assert (! (forall ((?v0 A_b_fun_tree$) (?v1 A_b_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$f ?v0 (tree_pure$c ?v2)) (tree_ap$f ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a103))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$e ?v0 (tree_pure$c ?v2)) (tree_ap$e ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a104))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A$)) (= (tree_ap$ ?v0 (tree_pure$c ?v2)) (tree_ap$ ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a105))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$) (?v1 A_b_fun_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A_b_fun$)) (= (tree_ap$a ?v0 (tree_pure$f ?v2)) (tree_ap$a ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a106))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A_b_fun$)) (= (tree_ap$b ?v0 (tree_pure$f ?v2)) (tree_ap$b ?v1 (tree_pure$f ?v2)))) (= ?v0 ?v1))) :named a107))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 A_bool_bool_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$m ?v0 ?v2) (tree_ap$m ?v1 ?v2))) (= ?v0 ?v1))) :named a108))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$) (?v1 A_b_bool_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$o ?v0 ?v2) (tree_ap$o ?v1 ?v2))) (= ?v0 ?v1))) :named a109))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$q ?v0 ?v2) (tree_ap$q ?v1 ?v2))) (= ?v0 ?v1))) :named a110))
(assert (! (forall ((?v0 A_b_fun_tree$) (?v1 A_b_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$f ?v0 ?v2) (tree_ap$f ?v1 ?v2))) (= ?v0 ?v1))) :named a111))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$e ?v0 ?v2) (tree_ap$e ?v1 ?v2))) (= ?v0 ?v1))) :named a112))
(assert (! (forall ((?v0 A_bool_fun_tree$) (?v1 A_bool_fun_tree$)) (=> (forall ((?v2 A_tree$)) (= (tree_ap$ ?v0 ?v2) (tree_ap$ ?v1 ?v2))) (= ?v0 ?v1))) :named a113))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$) (?v1 A_b_fun_a_bool_fun_fun_tree$)) (=> (forall ((?v2 A_b_fun_tree$)) (= (tree_ap$a ?v0 ?v2) (tree_ap$a ?v1 ?v2))) (= ?v0 ?v1))) :named a114))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 A_b_fun_tree$)) (= (tree_ap$b ?v0 ?v2) (tree_ap$b ?v1 ?v2))) (= ?v0 ?v1))) :named a115))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)) (=> (forall ((?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v2 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v3 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)) (=> (= ?v0 (node$d ?v1 ?v2 ?v3)) false)) false)) :named a116))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$)) (=> (forall ((?v1 A_b_fun_a_bool_fun_fun$) (?v2 A_b_fun_a_bool_fun_fun_tree$) (?v3 A_b_fun_a_bool_fun_fun_tree$)) (=> (= ?v0 (node$b ?v1 ?v2 ?v3)) false)) false)) :named a117))
(assert (! (forall ((?v0 A_bool_fun_tree$)) (=> (forall ((?v1 A_bool_fun$) (?v2 A_bool_fun_tree$) (?v3 A_bool_fun_tree$)) (=> (= ?v0 (node$ ?v1 ?v2 ?v3)) false)) false)) :named a118))
(assert (! (forall ((?v0 A_b_fun_tree$)) (=> (forall ((?v1 A_b_fun$) (?v2 A_b_fun_tree$) (?v3 A_b_fun_tree$)) (=> (= ?v0 (node$c ?v1 ?v2 ?v3)) false)) false)) :named a119))
(assert (! (forall ((?v0 A_tree$)) (=> (forall ((?v1 A$) (?v2 A_tree$) (?v3 A_tree$)) (=> (= ?v0 (node$a ?v1 ?v2 ?v3)) false)) false)) :named a120))
(assert (! (forall ((?v0 Bool_tree$)) (=> (forall ((?v1 Bool) (?v2 Bool_tree$) (?v3 Bool_tree$)) (=> (= ?v0 (node$bl ?v1 ?v2 ?v3)) false)) false)) :named a121))
(assert (! (forall ((?v0 A_b_bool_fun_fun$) (?v1 A_b_fun$)) (= (tree_pure$b (fun_app$c (uur$ ?v0) ?v1)) (tree_ap$a (tree_ap$x tree_S$ (tree_pure$q ?v0)) (tree_pure$f ?v1)))) :named a122))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_fun$)) (= (tree_pure$e (fun_app$s (uus$ ?v0) ?v1)) (tree_ap$y (tree_ap$z tree_S$a (tree_pure$ ?v0)) (tree_pure$p ?v1)))) :named a123))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$)) (= (tree_pure$ (fun_app$p (uut$ ?v0) ?v1)) (tree_ap$l (tree_ap$aa tree_S$b (tree_pure$ab ?v0)) (tree_pure$ ?v1)))) :named a124))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_fun$)) (= (tree_pure$b (fun_app$ah (uuu$ ?v0) ?v1)) (tree_ap$ab (tree_ap$ac tree_S$c (tree_pure$z ?v0)) (tree_pure$k ?v1)))) :named a125))
(assert (! (forall ((?v0 A_bool_bool_fun_fun$) (?v1 A_bool_fun$)) (= (tree_pure$b (fun_app$w (uuv$ ?v0) ?v1)) (tree_ap$ad (tree_ap$ae tree_S$d (tree_pure$y ?v0)) (tree_pure$b ?v1)))) :named a126))
(assert (! (forall ((?v0 A_bool_b_fun_fun$) (?v1 A_bool_fun$)) (= (tree_pure$f (fun_app$y (uuw$ ?v0) ?v1)) (tree_ap$af (tree_ap$ag tree_S$e (tree_pure$ac ?v0)) (tree_pure$b ?v1)))) :named a127))
(assert (! (forall ((?v0 A_b_b_fun_fun$) (?v1 A_b_fun$)) (= (tree_pure$f (fun_app$t (uux$ ?v0) ?v1)) (tree_ap$w (tree_ap$ah tree_S$f (tree_pure$ad ?v0)) (tree_pure$f ?v1)))) :named a128))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$) (?v1 A_b_fun_a_fun$)) (= (tree_pure$ae (uuy$ ?v0 ?v1)) (tree_ap$ai (tree_ap$aj tree_S$g (tree_pure$e ?v0)) (tree_pure$af ?v1)))) :named a129))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$) (?v1 A_b_fun_a_fun$)) (= (tree_pure$u (uuz$ ?v0 ?v1)) (tree_ap$ak (tree_ap$al tree_S$h (tree_pure$p ?v0)) (tree_pure$af ?v1)))) :named a130))
(assert (! (forall ((?v0 A_b_bool_fun_bool_fun_fun$) (?v1 A_b_bool_fun_fun$)) (= (tree_pure$b (fun_app$ab (uva$ ?v0) ?v1)) (tree_ap$am (tree_ap$an tree_S$i (tree_pure$ag ?v0)) (tree_pure$q ?v1)))) :named a131))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$) (?v1 A_bool_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$ad (tree_ap$ae tree_S$d ?v0) ?v1) ?v2) (tree_ap$c (tree_ap$m ?v0 ?v2) (tree_ap$ ?v1 ?v2)))) :named a132))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$) (?v1 A_a_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$ab (tree_ap$ac tree_S$c ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$q ?v0 ?v2) (tree_ap$e ?v1 ?v2)))) :named a133))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$) (?v1 A_b_fun_tree$) (?v2 A_tree$)) (= (tree_ap$ (tree_ap$a (tree_ap$x tree_S$ ?v0) ?v1) ?v2) (tree_ap$ao (tree_ap$o ?v0 ?v2) (tree_ap$f ?v1 ?v2)))) :named a134))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$) (?v1 A_b_fun_a_fun_tree$) (?v2 A_b_fun_tree$)) (= (tree_ap$ap (tree_ap$ai (tree_ap$aj tree_S$g ?v0) ?v1) ?v2) (tree_ap$ (tree_ap$a ?v0 ?v2) (tree_ap$aq ?v1 ?v2)))) :named a135))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$) (?v1 A_b_fun_a_bool_fun_fun_tree$) (?v2 A_b_fun_tree$)) (= (tree_ap$a (tree_ap$ar (tree_ap$as tree_S$j ?v0) ?v1) ?v2) (tree_ap$ad (tree_ap$at ?v0 ?v2) (tree_ap$a ?v1 ?v2)))) :named a136))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v1 A_b_fun_a_b_fun_fun_tree$) (?v2 A_b_fun_tree$)) (= (tree_ap$a (tree_ap$y (tree_ap$z tree_S$a ?v0) ?v1) ?v2) (tree_ap$a (tree_ap$b ?v0 ?v2) (tree_ap$w ?v1 ?v2)))) :named a137))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v2 A_b_fun_tree$)) (= (tree_ap$a (tree_ap$v (tree_ap$au tree_S$k ?v0) ?v1) ?v2) (tree_ap$u (tree_ap$av ?v0 ?v2) (tree_ap$b ?v1 ?v2)))) :named a138))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (?v1 A_b_fun_a_bool_fun_fun_tree$) (?v2 A_b_fun_tree$)) (= (tree_ap$b (tree_ap$aw (tree_ap$ax tree_S$l ?v0) ?v1) ?v2) (tree_ap$ay (tree_ap$az ?v0 ?v2) (tree_ap$a ?v1 ?v2)))) :named a139))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (?v1 A_b_fun_a_b_fun_fun_tree$) (?v2 A_b_fun_tree$)) (= (tree_ap$b (tree_ap$ba (tree_ap$bb tree_S$m ?v0) ?v1) ?v2) (tree_ap$b (tree_ap$bc ?v0 ?v2) (tree_ap$w ?v1 ?v2)))) :named a140))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$) (?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$) (?v2 A_b_fun_tree$)) (= (tree_ap$b (tree_ap$l (tree_ap$aa tree_S$b ?v0) ?v1) ?v2) (tree_ap$ar (tree_ap$bd ?v0 ?v2) (tree_ap$b ?v1 ?v2)))) :named a141))
(assert (! (forall ((?v0 Bool)) (= (tree_pure$b (uup$ ?v0)) (tree_ap$g tree_K$ (tree_pure$a ?v0)))) :named a142))
(assert (! (forall ((?v0 B_bool_fun$)) (= (tree_pure$q (uum$ ?v0)) (tree_ap$be tree_K$a (tree_pure$aa ?v0)))) :named a143))
(assert (! (forall ((?v0 B$)) (= (tree_pure$f (uun$ ?v0)) (tree_ap$bf tree_K$b (tree_pure$l ?v0)))) :named a144))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$)) (= (tree_pure$ (uuq$ ?v0)) (tree_ap$aw tree_K$c (tree_pure$e ?v0)))) :named a145))
(check-sat)
;(get-unsat-core)
