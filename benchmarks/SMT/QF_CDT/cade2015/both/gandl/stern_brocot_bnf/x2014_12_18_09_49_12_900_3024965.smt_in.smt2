; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 479
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort Nat$ 0)
(declare-sort Nat_set$ 0)
(declare-sort Bool_tree$ 0)
(declare-sort Int_int_fun$ 0)
(declare-sort Nat_nat_fun$ 0)
(declare-sort Nat_bool_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort Int_int_int_fun_fun$ 0)
(declare-sort Nat_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun$ 0)
(declare-sort Int_tree_int_tree_fun$ 0)
(declare-sort Nat_bool_fun_bool_fun$ 0)
(declare-sort Nat_tree_nat_tree_fun$ 0)
(declare-sort Bool_int_int_int_fun_fun_fun$ 0)
(declare-sort Bool_nat_nat_bool_fun_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_bool_fun$ 0)
(declare-sort Bool_nat_bool_fun_bool_fun_fun$ 0)
(declare-sort Nat_bool_fun_bool_fun_bool_fun$ 0)
(declare-sort Int_tree_tree_int_tree_tree_fun$ 0)
(declare-sort Nat_tree_tree_nat_tree_tree_fun$ 0)
(declare-sort Int_tree_int_tree_int_tree_fun_fun$ 0)
(declare-sort Nat_tree_nat_tree_nat_tree_fun_fun$ 0)
(declare-sort Int_int_int_fun_fun_int_int_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_bool_fun_fun$ 0)
(declare-sort Nat_bool_fun_nat_bool_fun_bool_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_bool_fun_bool_fun$ 0)
(declare-sort Nat_tree_tree_tree_nat_tree_tree_tree_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ 0)
(declare-sort Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun$ 0)
(declare-sort Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun$ 0)
(declare-sort Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun$ 0)
(declare-codatatypes () ((Nat_bool_fun_tree$ (node$ (select$ Nat_bool_fun$) (selecta$ Nat_bool_fun_tree$) (selectb$ Nat_bool_fun_tree$)))
  (Nat_tree$ (node$a (root$ Nat$) (left$ Nat_tree$) (right$ Nat_tree$)))
  (Nat_nat_bool_fun_fun_tree$ (node$b (selectc$ Nat_nat_bool_fun_fun$) (selectd$ Nat_nat_bool_fun_fun_tree$) (selecte$ Nat_nat_bool_fun_fun_tree$)))))
(declare-datatypes () ((Num$ (one$) (bit0$ (selectf$ Num$)) (bit1$ (selectg$ Num$)))))
(declare-codatatypes () ((Bool_bool_fun_tree$ (node$c (selecth$ Bool_bool_fun$) (selecti$ Bool_bool_fun_tree$) (selectj$ Bool_bool_fun_tree$)))
  (Nat_nat_bool_fun_fun_bool_fun_tree$ (node$d (selectk$ Nat_nat_bool_fun_fun_bool_fun$) (selectl$ Nat_nat_bool_fun_fun_bool_fun_tree$) (selectm$ Nat_nat_bool_fun_fun_bool_fun_tree$)))
  (Bool_nat_nat_bool_fun_fun_fun_tree$ (node$e (selectn$ Bool_nat_nat_bool_fun_fun_fun$) (selecto$ Bool_nat_nat_bool_fun_fun_fun_tree$) (selectp$ Bool_nat_nat_bool_fun_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ (node$f (selectq$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) (selectr$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) (selects$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)))
  (Int_int_fun_tree$ (node$g (selectt$ Int_int_fun$) (selectu$ Int_int_fun_tree$) (selectv$ Int_int_fun_tree$)))
  (Int_int_int_fun_fun_tree$ (node$h (selectw$ Int_int_int_fun_fun$) (selectx$ Int_int_int_fun_fun_tree$) (selecty$ Int_int_int_fun_fun_tree$)))
  (Int_tree$ (node$i (root$a Int) (left$a Int_tree$) (right$a Int_tree$)))
  (Nat_bool_fun_bool_fun_tree$ (node$j (selectz$ Nat_bool_fun_bool_fun$) (selecua$ Nat_bool_fun_bool_fun_tree$) (selecub$ Nat_bool_fun_bool_fun_tree$)))
  (Bool_int_int_int_fun_fun_fun_tree$ (node$k (selecuc$ Bool_int_int_int_fun_fun_fun$) (selecud$ Bool_int_int_int_fun_fun_fun_tree$) (selecue$ Bool_int_int_int_fun_fun_fun_tree$)))
  (Bool_nat_bool_fun_bool_fun_fun_tree$ (node$l (selecuf$ Bool_nat_bool_fun_bool_fun_fun$) (selecug$ Bool_nat_bool_fun_bool_fun_fun_tree$) (selecuh$ Bool_nat_bool_fun_bool_fun_fun_tree$)))
  (Nat_bool_fun_nat_bool_fun_bool_fun_fun_tree$ (node$m (selecui$ Nat_bool_fun_nat_bool_fun_bool_fun_fun$) (selecuj$ Nat_bool_fun_nat_bool_fun_bool_fun_fun_tree$) (selecuk$ Nat_bool_fun_nat_bool_fun_bool_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ (node$n (selecul$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) (selecum$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$) (selecun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$ (node$o (selecuo$ Nat_nat_bool_fun_fun_nat_bool_fun_fun$) (selecup$ Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$) (selecuq$ Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$ (node$p (selecur$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$) (selecus$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$) (selecut$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$ (node$q (selecuu$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$) (selecuv$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$) (selecuw$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ (node$r (selecux$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) (selecuy$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$) (selecuz$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)))
  (Int_tree_tree$ (node$s (root$b Int_tree$) (left$b Int_tree_tree$) (right$b Int_tree_tree$)))
  (Int_tree_int_tree_fun_tree$ (node$t (selecva$ Int_tree_int_tree_fun$) (selecvb$ Int_tree_int_tree_fun_tree$) (selecvc$ Int_tree_int_tree_fun_tree$)))
  (Int_tree_int_tree_int_tree_fun_fun_tree$ (node$u (selecvd$ Int_tree_int_tree_int_tree_fun_fun$) (selecve$ Int_tree_int_tree_int_tree_fun_fun_tree$) (selecvf$ Int_tree_int_tree_int_tree_fun_fun_tree$)))
  (Nat_tree_tree$ (node$v (root$c Nat_tree$) (left$c Nat_tree_tree$) (right$c Nat_tree_tree$)))
  (Nat_tree_tree_tree$ (node$w (root$d Nat_tree_tree$) (left$d Nat_tree_tree_tree$) (right$d Nat_tree_tree_tree$)))
  (Nat_tree_tree_tree_tree$ (node$x (root$e Nat_tree_tree_tree$) (left$e Nat_tree_tree_tree_tree$) (right$e Nat_tree_tree_tree_tree$)))
  (Nat_tree_tree_tree_nat_tree_tree_tree_fun_tree$ (node$y (selecvg$ Nat_tree_tree_tree_nat_tree_tree_tree_fun$) (selecvh$ Nat_tree_tree_tree_nat_tree_tree_tree_fun_tree$) (selecvi$ Nat_tree_tree_tree_nat_tree_tree_tree_fun_tree$)))
  (Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun_tree$ (node$z (selecvj$ Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun$) (selecvk$ Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun_tree$) (selecvl$ Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun_tree$)))
  (Nat_tree_tree_nat_tree_tree_fun_tree$ (node$aa (selecvm$ Nat_tree_tree_nat_tree_tree_fun$) (selecvn$ Nat_tree_tree_nat_tree_tree_fun_tree$) (selecvo$ Nat_tree_tree_nat_tree_tree_fun_tree$)))
  (Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun_tree$ (node$ab (selecvp$ Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$) (selecvq$ Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun_tree$) (selecvr$ Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun_tree$)))
  (Nat_tree_nat_tree_fun_tree$ (node$ac (selecvs$ Nat_tree_nat_tree_fun$) (selecvt$ Nat_tree_nat_tree_fun_tree$) (selecvu$ Nat_tree_nat_tree_fun_tree$)))
  (Nat_tree_nat_tree_nat_tree_fun_fun_tree$ (node$ad (selecvv$ Nat_tree_nat_tree_nat_tree_fun_fun$) (selecvw$ Nat_tree_nat_tree_nat_tree_fun_fun_tree$) (selecvx$ Nat_tree_nat_tree_nat_tree_fun_fun_tree$)))
  (Nat_nat_fun_tree$ (node$ae (selecvy$ Nat_nat_fun$) (selecvz$ Nat_nat_fun_tree$) (selecwa$ Nat_nat_fun_tree$)))
  (Nat_nat_nat_fun_fun_tree$ (node$af (selecwb$ Nat_nat_nat_fun_fun$) (selecwc$ Nat_nat_nat_fun_fun_tree$) (selecwd$ Nat_nat_nat_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_tree_tree$ (node$ag (root$f Nat_nat_bool_fun_fun_tree$) (left$f Nat_nat_bool_fun_fun_tree_tree$) (right$f Nat_nat_bool_fun_fun_tree_tree$)))
  (Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_tree$ (node$ah (selecwe$ Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun$) (selecwf$ Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_tree$) (selecwg$ Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_tree$)))
  (Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun_tree$ (node$ai (selecwh$ Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun$) (selecwi$ Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun_tree$) (selecwj$ Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun_tree$)))
  (Int_tree_tree_tree$ (node$aj (root$g Int_tree_tree$) (left$g Int_tree_tree_tree$) (right$g Int_tree_tree_tree$)))
  (Int_tree_tree_int_tree_tree_fun_tree$ (node$ak (selecwk$ Int_tree_tree_int_tree_tree_fun$) (selecwl$ Int_tree_tree_int_tree_tree_fun_tree$) (selecwm$ Int_tree_tree_int_tree_tree_fun_tree$)))
  (Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun_tree$ (node$al (selecwn$ Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun$) (selecwo$ Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun_tree$) (selecwp$ Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$ (node$am (selecwq$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun$) (selecwr$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$) (selecws$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun_tree$ (node$an (selecwt$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun$) (selecwu$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun_tree$) (selecwv$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$ (node$ao (selecww$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun$) (selecwx$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$) (selecwy$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$)))
  (Int_int_int_fun_fun_int_int_fun_fun_tree$ (node$ap (selecwz$ Int_int_int_fun_fun_int_int_fun_fun$) (selecxa$ Int_int_int_fun_fun_int_int_fun_fun_tree$) (selecxb$ Int_int_int_fun_fun_int_int_fun_fun_tree$)))
  (Nat_bool_fun_bool_fun_bool_fun_tree$ (node$aq (selecxc$ Nat_bool_fun_bool_fun_bool_fun$) (selecxd$ Nat_bool_fun_bool_fun_bool_fun_tree$) (selecxe$ Nat_bool_fun_bool_fun_bool_fun_tree$)))
  (Nat_nat_bool_fun_fun_bool_fun_bool_fun_tree$ (node$ar (selecxf$ Nat_nat_bool_fun_fun_bool_fun_bool_fun$) (selecxg$ Nat_nat_bool_fun_fun_bool_fun_bool_fun_tree$) (selecxh$ Nat_nat_bool_fun_fun_bool_fun_bool_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun_tree$ (node$as (selecxi$ Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun$) (selecxj$ Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun_tree$) (selecxk$ Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$ (node$at (selecxl$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$) (selecxm$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$) (selecxn$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun_tree$ (node$au (selecxo$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun$) (selecxp$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun_tree$) (selecxq$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun_tree$ (node$av (selecxr$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun$) (selecxs$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun_tree$) (selecxt$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun_tree$)))
  (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ (node$aw (selecxu$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) (selecxv$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$) (selecxw$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)))))
(declare-fun t$ () Nat_tree$)
(declare-fun t$a () Nat_tree$)
(declare-fun uu$ () Nat_nat_bool_fun_fun$)
(declare-fun mod$ () Nat_tree_nat_tree_nat_tree_fun_fun$)
(declare-fun uua$ () Nat_bool_fun_nat_bool_fun_bool_fun_fun$)
(declare-fun uub$ () Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$)
(declare-fun uuc$ () Nat_nat_bool_fun_fun$)
(declare-fun uud$ () Int_int_int_fun_fun$)
(declare-fun uue$ () Int_int_int_fun_fun$)
(declare-fun uuf$ (Nat$) Nat_bool_fun_bool_fun$)
(declare-fun uug$ (Nat$) Nat_nat_bool_fun_fun_nat_bool_fun_fun$)
(declare-fun uuh$ (Int) Int_int_int_fun_fun_int_int_fun_fun$)
(declare-fun uui$ (Nat_bool_fun$) Nat_bool_fun_bool_fun_bool_fun$)
(declare-fun uuj$ (Nat_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_bool_fun_bool_fun$)
(declare-fun uuk$ (Nat_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun$)
(declare-fun uul$ (Nat_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$)
(declare-fun uum$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun$)
(declare-fun uun$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun$)
(declare-fun uuo$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$)
(declare-fun uup$ (Bool) Nat_bool_fun$)
(declare-fun uuq$ (Nat_bool_fun$) Nat_nat_bool_fun_fun$)
(declare-fun uur$ (Int_int_fun$) Int_int_int_fun_fun$)
(declare-fun uus$ (Bool) Nat_bool_fun_bool_fun$)
(declare-fun uut$ (Bool) Nat_nat_bool_fun_fun_bool_fun$)
(declare-fun uuu$ (Nat_bool_fun$) Nat_nat_bool_fun_fun_nat_bool_fun_fun$)
(declare-fun uuv$ (Nat_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)
(declare-fun uuw$ (Int_int_int_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$)
(declare-fun uux$ (Nat_bool_fun_bool_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$)
(declare-fun uuy$ (Nat_nat_bool_fun_fun_bool_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$)
(declare-fun less$ (Nat$) Nat_bool_fun$)
(declare-fun mod$a () Int_tree_int_tree_int_tree_fun_fun$)
(declare-fun mod$b (Int_tree_tree$ Int_tree_tree$) Int_tree_tree$)
(declare-fun mod$c (Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$) Nat_tree_tree_tree_tree$)
(declare-fun mod$d () Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun$)
(declare-fun mod$e () Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$)
(declare-fun mod$f () Int_int_int_fun_fun$)
(declare-fun mod$g () Nat_nat_nat_fun_fun$)
(declare-fun plus$ () Nat_tree_nat_tree_nat_tree_fun_fun$)
(declare-fun zero$ () Nat$)
(declare-fun minus$ () Nat_nat_nat_fun_fun$)
(declare-fun plus$a () Int_tree_int_tree_int_tree_fun_fun$)
(declare-fun plus$b (Int_tree_tree$ Int_tree_tree$) Int_tree_tree$)
(declare-fun plus$c (Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$) Nat_tree_tree_tree_tree$)
(declare-fun plus$d () Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun$)
(declare-fun plus$e () Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$)
(declare-fun plus$f () Nat_nat_nat_fun_fun$)
(declare-fun times$ () Nat_tree_nat_tree_nat_tree_fun_fun$)
(declare-fun member$ (Nat$ Nat_set$) Bool)
(declare-fun minus$a (Nat_nat_bool_fun_fun_tree_tree$ Nat_nat_bool_fun_fun_tree_tree$) Nat_nat_bool_fun_fun_tree_tree$)
(declare-fun minus$b () Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun$)
(declare-fun minus$c (Nat_tree_tree_tree$ Nat_tree_tree_tree$) Nat_tree_tree_tree$)
(declare-fun minus$d () Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$)
(declare-fun minus$e (Int_tree_tree_tree$ Int_tree_tree_tree$) Int_tree_tree_tree$)
(declare-fun minus$f () Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun$)
(declare-fun minus$g (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun minus$h () Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun$)
(declare-fun minus$i () Int_tree_int_tree_int_tree_fun_fun$)
(declare-fun minus$j () Nat_tree_nat_tree_nat_tree_fun_fun$)
(declare-fun minus$k () Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun$)
(declare-fun of_nat$ (Nat$) Int)
(declare-fun times$a (Int_tree_tree$ Int_tree_tree$) Int_tree_tree$)
(declare-fun times$b () Int_tree_int_tree_int_tree_fun_fun$)
(declare-fun times$c (Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$) Nat_tree_tree_tree_tree$)
(declare-fun times$d () Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun$)
(declare-fun times$e () Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$)
(declare-fun times$f () Int_int_int_fun_fun$)
(declare-fun times$g () Nat_nat_nat_fun_fun$)
(declare-fun fun_app$ (Nat_bool_fun$ Nat$) Bool)
(declare-fun numeral$ (Num$) Nat_tree$)
(declare-fun of_nat$a (Nat$) Int_tree_tree_tree$)
(declare-fun of_nat$b (Nat$) Int_tree_tree$)
(declare-fun of_nat$c (Nat$) Int_tree$)
(declare-fun tree_ap$ (Nat_bool_fun_tree$ Nat_tree$) Bool_tree$)
(declare-fun fun_app$a (Nat_nat_bool_fun_fun$ Nat$) Nat_bool_fun$)
(declare-fun fun_app$b (Nat_nat_fun$ Nat$) Nat$)
(declare-fun fun_app$c (Nat_nat_nat_fun_fun$ Nat$) Nat_nat_fun$)
(declare-fun fun_app$d (Int_int_fun$ Int) Int)
(declare-fun fun_app$e (Int_int_int_fun_fun$ Int) Int_int_fun$)
(declare-fun fun_app$f (Nat_bool_fun_bool_fun$ Nat_bool_fun$) Bool)
(declare-fun fun_app$g (Nat_bool_fun_nat_bool_fun_bool_fun_fun$ Nat_bool_fun$) Nat_bool_fun_bool_fun$)
(declare-fun fun_app$h (Nat_nat_bool_fun_fun_bool_fun$ Nat_nat_bool_fun_fun$) Bool)
(declare-fun fun_app$i (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ Nat_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_bool_fun$)
(declare-fun fun_app$j (Nat_nat_bool_fun_fun_nat_bool_fun_fun$ Nat_nat_bool_fun_fun$) Nat_bool_fun$)
(declare-fun fun_app$k (Int_int_int_fun_fun_int_int_fun_fun$ Int_int_int_fun_fun$) Int_int_fun$)
(declare-fun fun_app$l (Nat_bool_fun_bool_fun_bool_fun$ Nat_bool_fun_bool_fun$) Bool)
(declare-fun fun_app$m (Nat_nat_bool_fun_fun_bool_fun_bool_fun$ Nat_nat_bool_fun_fun_bool_fun$) Bool)
(declare-fun fun_app$n (Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun$ Nat_nat_bool_fun_fun_nat_bool_fun_fun$) Nat_bool_fun$)
(declare-fun fun_app$o (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_nat_bool_fun_fun$)
(declare-fun fun_app$p (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_bool_fun_fun$) Nat_nat_bool_fun_fun$)
(declare-fun fun_app$q (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$) Int_int_int_fun_fun$)
(declare-fun fun_app$r (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Int_int_int_fun_fun$)
(declare-fun fun_app$s (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$) Nat_bool_fun_bool_fun$)
(declare-fun fun_app$t (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_bool_fun_bool_fun$)
(declare-fun fun_app$u (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) Nat_nat_bool_fun_fun_bool_fun$)
(declare-fun fun_app$v (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_nat_bool_fun_fun_bool_fun$)
(declare-fun fun_app$w (Nat_tree_nat_tree_fun$ Nat_tree$) Nat_tree$)
(declare-fun fun_app$x (Nat_tree_nat_tree_nat_tree_fun_fun$ Nat_tree$) Nat_tree_nat_tree_fun$)
(declare-fun fun_app$y (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$z (Bool_nat_nat_bool_fun_fun_fun$ Bool) Nat_nat_bool_fun_fun$)
(declare-fun set_tree$ (Nat_tree$) Nat_set$)
(declare-fun tree_ap$a (Nat_nat_bool_fun_fun_tree$ Nat_tree$) Nat_bool_fun_tree$)
(declare-fun tree_ap$b (Bool_bool_fun_tree$ Bool_tree$) Bool_tree$)
(declare-fun tree_ap$c (Nat_nat_bool_fun_fun_bool_fun_tree$ Nat_nat_bool_fun_fun_tree$) Bool_tree$)
(declare-fun tree_ap$d (Bool_nat_nat_bool_fun_fun_fun_tree$ Bool_tree$) Nat_nat_bool_fun_fun_tree$)
(declare-fun tree_ap$e (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_tree$) Nat_nat_bool_fun_fun_tree$)
(declare-fun tree_ap$f (Int_int_int_fun_fun_tree$ Int_tree$) Int_int_fun_tree$)
(declare-fun tree_ap$g (Nat_bool_fun_bool_fun_tree$ Nat_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$h (Bool_int_int_int_fun_fun_fun_tree$ Bool_tree$) Int_int_int_fun_fun_tree$)
(declare-fun tree_ap$i (Bool_nat_bool_fun_bool_fun_fun_tree$ Bool_tree$) Nat_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$j (Nat_bool_fun_nat_bool_fun_bool_fun_fun_tree$ Nat_bool_fun_tree$) Nat_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$k (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_tree$) Nat_nat_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_ap$l (Int_tree_int_tree_fun_tree$ Int_tree_tree$) Int_tree_tree$)
(declare-fun tree_ap$m (Int_tree_int_tree_int_tree_fun_fun_tree$ Int_tree_tree$) Int_tree_int_tree_fun_tree$)
(declare-fun tree_ap$n (Nat_tree_tree_tree_nat_tree_tree_tree_fun_tree$ Nat_tree_tree_tree_tree$) Nat_tree_tree_tree_tree$)
(declare-fun tree_ap$o (Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun_tree$ Nat_tree_tree_tree_tree$) Nat_tree_tree_tree_nat_tree_tree_tree_fun_tree$)
(declare-fun tree_ap$p (Nat_tree_tree_nat_tree_tree_fun_tree$ Nat_tree_tree_tree$) Nat_tree_tree_tree$)
(declare-fun tree_ap$q (Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun_tree$ Nat_tree_tree_tree$) Nat_tree_tree_nat_tree_tree_fun_tree$)
(declare-fun tree_ap$r (Int_int_fun_tree$ Int_tree$) Int_tree$)
(declare-fun tree_ap$s (Nat_tree_nat_tree_fun_tree$ Nat_tree_tree$) Nat_tree_tree$)
(declare-fun tree_ap$t (Nat_tree_nat_tree_nat_tree_fun_fun_tree$ Nat_tree_tree$) Nat_tree_nat_tree_fun_tree$)
(declare-fun tree_ap$u (Nat_nat_fun_tree$ Nat_tree$) Nat_tree$)
(declare-fun tree_ap$v (Nat_nat_nat_fun_fun_tree$ Nat_tree$) Nat_nat_fun_tree$)
(declare-fun tree_ap$w (Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_tree$ Nat_nat_bool_fun_fun_tree_tree$) Nat_nat_bool_fun_fun_tree_tree$)
(declare-fun tree_ap$x (Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun_tree$ Nat_nat_bool_fun_fun_tree_tree$) Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_tree$)
(declare-fun tree_ap$y (Int_tree_tree_int_tree_tree_fun_tree$ Int_tree_tree_tree$) Int_tree_tree_tree$)
(declare-fun tree_ap$z (Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun_tree$ Int_tree_tree_tree$) Int_tree_tree_int_tree_tree_fun_tree$)
(declare-fun fun_app$aa (Bool_int_int_int_fun_fun_fun$ Bool) Int_int_int_fun_fun$)
(declare-fun fun_app$ab (Bool_nat_bool_fun_bool_fun_fun$ Bool) Nat_bool_fun_bool_fun$)
(declare-fun fun_app$ac (Int_tree_int_tree_fun$ Int_tree$) Int_tree$)
(declare-fun fun_app$ad (Int_tree_int_tree_int_tree_fun_fun$ Int_tree$) Int_tree_int_tree_fun$)
(declare-fun fun_app$ae (Nat_tree_tree_tree_nat_tree_tree_tree_fun$ Nat_tree_tree_tree$) Nat_tree_tree_tree$)
(declare-fun fun_app$af (Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun$ Nat_tree_tree_tree$) Nat_tree_tree_tree_nat_tree_tree_tree_fun$)
(declare-fun fun_app$ag (Nat_tree_tree_nat_tree_tree_fun$ Nat_tree_tree$) Nat_tree_tree$)
(declare-fun fun_app$ah (Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$ Nat_tree_tree$) Nat_tree_tree_nat_tree_tree_fun$)
(declare-fun fun_app$ai (Int_tree_tree_int_tree_tree_fun$ Int_tree_tree$) Int_tree_tree$)
(declare-fun fun_app$aj (Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun$ Int_tree_tree$) Int_tree_tree_int_tree_tree_fun$)
(declare-fun fun_app$ak (Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun$ Nat_nat_bool_fun_fun_tree$) Nat_nat_bool_fun_fun_tree$)
(declare-fun fun_app$al (Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun$ Nat_nat_bool_fun_fun_tree$) Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun$)
(declare-fun tree_ap$aa (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ab (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_ap$ac (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_tree$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun tree_ap$ad (Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_tree$) Nat_bool_fun_tree$)
(declare-fun tree_ap$ae (Int_int_int_fun_fun_int_int_fun_fun_tree$ Int_int_int_fun_fun_tree$) Int_int_fun_tree$)
(declare-fun tree_ap$af (Nat_bool_fun_bool_fun_bool_fun_tree$ Nat_bool_fun_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$ag (Nat_nat_bool_fun_fun_bool_fun_bool_fun_tree$ Nat_nat_bool_fun_fun_bool_fun_tree$) Bool_tree$)
(declare-fun tree_ap$ah (Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$) Nat_bool_fun_tree$)
(declare-fun tree_ap$ai (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) Nat_nat_bool_fun_fun_tree$)
(declare-fun tree_ap$aj (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) Int_int_int_fun_fun_tree$)
(declare-fun tree_ap$ak (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$) Int_int_int_fun_fun_tree$)
(declare-fun tree_ap$al (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) Nat_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$am (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$) Nat_bool_fun_bool_fun_tree$)
(declare-fun tree_ap$an (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) Nat_nat_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_ap$ao (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$) Nat_nat_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$ (Nat_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_tree$)
(declare-fun tree_pure$a (Bool) Bool_tree$)
(declare-fun tree_pure$b (Nat_bool_fun$) Nat_bool_fun_tree$)
(declare-fun tree_pure$c (Nat$) Nat_tree$)
(declare-fun tree_pure$d (Bool_bool_fun$) Bool_bool_fun_tree$)
(declare-fun tree_pure$e (Nat_nat_bool_fun_fun_bool_fun$) Nat_nat_bool_fun_fun_bool_fun_tree$)
(declare-fun tree_pure$f (Bool_nat_nat_bool_fun_fun_fun$) Bool_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$g (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$h (Int_int_int_fun_fun$) Int_int_int_fun_fun_tree$)
(declare-fun tree_pure$i (Int) Int_tree$)
(declare-fun tree_pure$j (Int_int_fun$) Int_int_fun_tree$)
(declare-fun tree_pure$k (Nat_bool_fun_bool_fun$) Nat_bool_fun_bool_fun_tree$)
(declare-fun tree_pure$l (Bool_int_int_int_fun_fun_fun$) Bool_int_int_int_fun_fun_fun_tree$)
(declare-fun tree_pure$m (Bool_nat_bool_fun_bool_fun_fun$) Bool_nat_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$n (Nat_bool_fun_nat_bool_fun_bool_fun_fun$) Nat_bool_fun_nat_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$o (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$p (Nat_nat_bool_fun_fun_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$)
(declare-fun tree_pure$q (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$)
(declare-fun tree_pure$r (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$s (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$t (Int_tree_int_tree_int_tree_fun_fun$) Int_tree_int_tree_int_tree_fun_fun_tree$)
(declare-fun tree_pure$u (Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun$) Nat_tree_tree_tree_nat_tree_tree_tree_nat_tree_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$v (Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun$) Nat_tree_tree_nat_tree_tree_nat_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$w (Nat_tree_nat_tree_nat_tree_fun_fun$) Nat_tree_nat_tree_nat_tree_fun_fun_tree$)
(declare-fun tree_pure$x (Nat_nat_nat_fun_fun$) Nat_nat_nat_fun_fun_tree$)
(declare-fun tree_pure$y (Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun$) Nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_nat_nat_bool_fun_fun_tree_fun_fun_tree$)
(declare-fun tree_pure$z (Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun$) Int_tree_tree_int_tree_tree_int_tree_tree_fun_fun_tree$)
(declare-fun tree_pure$aa (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$ab (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_fun_tree$)
(declare-fun tree_pure$ac (Int_int_int_fun_fun_int_int_fun_fun$) Int_int_int_fun_fun_int_int_fun_fun_tree$)
(declare-fun tree_pure$ad (Nat_bool_fun_bool_fun_bool_fun$) Nat_bool_fun_bool_fun_bool_fun_tree$)
(declare-fun tree_pure$ae (Nat_nat_bool_fun_fun_bool_fun_bool_fun$) Nat_nat_bool_fun_fun_bool_fun_bool_fun_tree$)
(declare-fun tree_pure$af (Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_bool_fun_fun_nat_bool_fun_fun_tree$)
(declare-fun tree_pure$ag (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun tree_pure$ah (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_int_int_int_fun_fun_fun_tree$)
(declare-fun tree_pure$ai (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_nat_bool_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$aj (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun tree_pure$ak (Int_tree_tree$) Int_tree_tree_tree$)
(declare-fun tree_pure$al (Int_tree$) Int_tree_tree$)
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (! (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (= (of_nat$ (fun_app$b (fun_app$c minus$ ?v0) ?v1)) (- (of_nat$ ?v0) (of_nat$ ?v1)))) :pattern ((fun_app$ (fun_app$a uu$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 Int) (?v1 Int)) (! (= (fun_app$d (fun_app$e uue$ ?v0) ?v1) (- ?v0 ?v1)) :pattern ((fun_app$d (fun_app$e uue$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 Int) (?v1 Int)) (! (= (fun_app$d (fun_app$e uud$ ?v0) ?v1) (+ ?v0 ?v1)) :pattern ((fun_app$d (fun_app$e uud$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (! (= (fun_app$ (fun_app$a uuc$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uuc$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_bool_fun$)) (! (= (fun_app$f (fun_app$g uua$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$f (fun_app$g uua$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun$)) (! (= (fun_app$h (fun_app$i uub$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$h (fun_app$i uub$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_bool_fun$)) (! (= (fun_app$f (uuf$ ?v0) ?v1) (fun_app$ ?v1 ?v0)) :pattern ((fun_app$f (uuf$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_nat_bool_fun_fun$)) (! (= (fun_app$j (uug$ ?v0) ?v1) (fun_app$a ?v1 ?v0)) :pattern ((fun_app$j (uug$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 Int) (?v1 Int_int_int_fun_fun$)) (! (= (fun_app$k (uuh$ ?v0) ?v1) (fun_app$e ?v1 ?v0)) :pattern ((fun_app$k (uuh$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_bool_fun_bool_fun$)) (! (= (fun_app$l (uui$ ?v0) ?v1) (fun_app$f ?v1 ?v0)) :pattern ((fun_app$l (uui$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun_bool_fun$)) (! (= (fun_app$m (uuj$ ?v0) ?v1) (fun_app$h ?v1 ?v0)) :pattern ((fun_app$m (uuj$ ?v0) ?v1)))) :named a10))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_bool_fun_fun$)) (! (= (fun_app$n (uuk$ ?v0) ?v1) (fun_app$j ?v1 ?v0)) :pattern ((fun_app$n (uuk$ ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (! (= (fun_app$o (uul$ ?v0) ?v1) (fun_app$p ?v1 ?v0)) :pattern ((fun_app$o (uul$ ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$)) (! (= (fun_app$q (uum$ ?v0) ?v1) (fun_app$r ?v1 ?v0)) :pattern ((fun_app$q (uum$ ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$)) (! (= (fun_app$s (uun$ ?v0) ?v1) (fun_app$t ?v1 ?v0)) :pattern ((fun_app$s (uun$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$)) (! (= (fun_app$u (uuo$ ?v0) ?v1) (fun_app$v ?v1 ?v0)) :pattern ((fun_app$u (uuo$ ?v0) ?v1)))) :named a15))
(assert (! (forall ((?v0 Bool) (?v1 Nat$)) (! (= (fun_app$ (uup$ ?v0) ?v1) ?v0) :pattern ((fun_app$ (uup$ ?v0) ?v1)))) :named a16))
(assert (! (forall ((?v0 Bool) (?v1 Nat_bool_fun$)) (! (= (fun_app$f (uus$ ?v0) ?v1) ?v0) :pattern ((fun_app$f (uus$ ?v0) ?v1)))) :named a17))
(assert (! (forall ((?v0 Bool) (?v1 Nat_nat_bool_fun_fun$)) (! (= (fun_app$h (uut$ ?v0) ?v1) ?v0) :pattern ((fun_app$h (uut$ ?v0) ?v1)))) :named a18))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat$)) (! (= (fun_app$a (uuq$ ?v0) ?v1) ?v0) :pattern ((fun_app$a (uuq$ ?v0) ?v1)))) :named a19))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_nat_bool_fun_fun$)) (! (= (fun_app$j (uuu$ ?v0) ?v1) ?v0) :pattern ((fun_app$j (uuu$ ?v0) ?v1)))) :named a20))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun$)) (! (= (fun_app$p (uuv$ ?v0) ?v1) ?v0) :pattern ((fun_app$p (uuv$ ?v0) ?v1)))) :named a21))
(assert (! (forall ((?v0 Int_int_fun$) (?v1 Int)) (! (= (fun_app$e (uur$ ?v0) ?v1) ?v0) :pattern ((fun_app$e (uur$ ?v0) ?v1)))) :named a22))
(assert (! (forall ((?v0 Int_int_int_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (! (= (fun_app$r (uuw$ ?v0) ?v1) ?v0) :pattern ((fun_app$r (uuw$ ?v0) ?v1)))) :named a23))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (! (= (fun_app$t (uux$ ?v0) ?v1) ?v0) :pattern ((fun_app$t (uux$ ?v0) ?v1)))) :named a24))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (! (= (fun_app$v (uuy$ ?v0) ?v1) ?v0) :pattern ((fun_app$v (uuy$ ?v0) ?v1)))) :named a25))
(assert (! (not (= (tree_ap$ (tree_ap$a (tree_pure$ uu$) (fun_app$w (fun_app$x plus$ t$) t$a)) (fun_app$w (fun_app$x times$ (numeral$ (bit0$ one$))) (fun_app$w (fun_app$x mod$ t$) t$a))) (tree_pure$a true))) :named a26))
(assert (! (forall ((?v0 Nat$)) (=> (member$ ?v0 (set_tree$ t$a)) (fun_app$ (less$ zero$) ?v0))) :named a27))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat$)) (= (tree_ap$ (tree_pure$b ?v0) (tree_pure$c ?v1)) (tree_pure$a (fun_app$ ?v0 ?v1)))) :named a28))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool)) (= (tree_ap$b (tree_pure$d ?v0) (tree_pure$a ?v1)) (tree_pure$a (fun_app$y ?v0 ?v1)))) :named a29))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat$)) (= (tree_ap$a (tree_pure$ ?v0) (tree_pure$c ?v1)) (tree_pure$b (fun_app$a ?v0 ?v1)))) :named a30))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun$) (?v1 Nat_nat_bool_fun_fun$)) (= (tree_ap$c (tree_pure$e ?v0) (tree_pure$ ?v1)) (tree_pure$a (fun_app$h ?v0 ?v1)))) :named a31))
(assert (! (forall ((?v0 Bool_nat_nat_bool_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$d (tree_pure$f ?v0) (tree_pure$a ?v1)) (tree_pure$ (fun_app$z ?v0 ?v1)))) :named a32))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) (?v1 Nat_nat_bool_fun_fun$)) (= (tree_ap$e (tree_pure$g ?v0) (tree_pure$ ?v1)) (tree_pure$ (fun_app$p ?v0 ?v1)))) :named a33))
(assert (! (forall ((?v0 Int_int_int_fun_fun$) (?v1 Int)) (= (tree_ap$f (tree_pure$h ?v0) (tree_pure$i ?v1)) (tree_pure$j (fun_app$e ?v0 ?v1)))) :named a34))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun$) (?v1 Nat_bool_fun$)) (= (tree_ap$g (tree_pure$k ?v0) (tree_pure$b ?v1)) (tree_pure$a (fun_app$f ?v0 ?v1)))) :named a35))
(assert (! (forall ((?v0 Bool_int_int_int_fun_fun_fun$) (?v1 Bool)) (= (tree_ap$h (tree_pure$l ?v0) (tree_pure$a ?v1)) (tree_pure$h (fun_app$aa ?v0 ?v1)))) :named a36))
(assert (! (forall ((?v0 Bool_nat_bool_fun_bool_fun_fun$) (?v1 Bool)) (= (tree_ap$i (tree_pure$m ?v0) (tree_pure$a ?v1)) (tree_pure$k (fun_app$ab ?v0 ?v1)))) :named a37))
(assert (! (forall ((?v0 Nat_bool_fun_tree$) (?v1 Nat_bool_fun_tree$)) (= (= ?v0 ?v1) (= (tree_ap$g (tree_ap$j (tree_pure$n uua$) ?v0) ?v1) (tree_pure$a true)))) :named a38))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_tree$)) (= (= ?v0 ?v1) (= (tree_ap$c (tree_ap$k (tree_pure$o uub$) ?v0) ?v1) (tree_pure$a true)))) :named a39))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (= (= ?v0 ?v1) (= (tree_ap$ (tree_ap$a (tree_pure$ uuc$) ?v0) ?v1) (tree_pure$a true)))) :named a40))
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (= (= (tree_pure$a ?v0) (tree_pure$a ?v1)) (= ?v0 ?v1))) :named a41))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun$)) (= (= (tree_pure$ ?v0) (tree_pure$ ?v1)) (= ?v0 ?v1))) :named a42))
(assert (! (forall ((?v0 Int_int_int_fun_fun$) (?v1 Int_int_int_fun_fun$)) (= (= (tree_pure$h ?v0) (tree_pure$h ?v1)) (= ?v0 ?v1))) :named a43))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun$) (?v1 Nat_bool_fun_bool_fun$)) (= (= (tree_pure$k ?v0) (tree_pure$k ?v1)) (= ?v0 ?v1))) :named a44))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun$) (?v1 Nat_nat_bool_fun_fun_bool_fun$)) (= (= (tree_pure$e ?v0) (tree_pure$e ?v1)) (= ?v0 ?v1))) :named a45))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_bool_fun_fun$)) (= (= (tree_pure$p ?v0) (tree_pure$p ?v1)) (= ?v0 ?v1))) :named a46))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (= (= (tree_pure$g ?v0) (tree_pure$g ?v1)) (= ?v0 ?v1))) :named a47))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun$)) (= (= (tree_pure$q ?v0) (tree_pure$q ?v1)) (= ?v0 ?v1))) :named a48))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun$)) (= (= (tree_pure$r ?v0) (tree_pure$r ?v1)) (= ?v0 ?v1))) :named a49))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$)) (= (= (tree_pure$s ?v0) (tree_pure$s ?v1)) (= ?v0 ?v1))) :named a50))
(assert (! (forall ((?v0 Int_tree$) (?v1 Int_tree$)) (= (fun_app$ac (fun_app$ad mod$a (fun_app$ac (fun_app$ad plus$a ?v0) ?v1)) ?v1) (fun_app$ac (fun_app$ad mod$a ?v0) ?v1))) :named a51))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (= (fun_app$w (fun_app$x mod$ (fun_app$w (fun_app$x plus$ ?v0) ?v1)) ?v1) (fun_app$w (fun_app$x mod$ ?v0) ?v1))) :named a52))
(assert (! (forall ((?v0 Int_tree_tree$) (?v1 Int_tree_tree$)) (! (= (mod$b ?v0 ?v1) (tree_ap$l (tree_ap$m (tree_pure$t mod$a) ?v0) ?v1)) :pattern ((mod$b ?v0 ?v1)))) :named a53))
(assert (! (forall ((?v0 Nat_tree_tree_tree_tree$) (?v1 Nat_tree_tree_tree_tree$)) (! (= (mod$c ?v0 ?v1) (tree_ap$n (tree_ap$o (tree_pure$u mod$d) ?v0) ?v1)) :pattern ((mod$c ?v0 ?v1)))) :named a54))
(assert (! (forall ((?v0 Nat_tree_tree_tree$) (?v1 Nat_tree_tree_tree$)) (! (= (fun_app$ae (fun_app$af mod$d ?v0) ?v1) (tree_ap$p (tree_ap$q (tree_pure$v mod$e) ?v0) ?v1)) :pattern ((fun_app$ae (fun_app$af mod$d ?v0) ?v1)))) :named a55))
(assert (! (forall ((?v0 Int_tree$) (?v1 Int_tree$)) (! (= (fun_app$ac (fun_app$ad mod$a ?v0) ?v1) (tree_ap$r (tree_ap$f (tree_pure$h mod$f) ?v0) ?v1)) :pattern ((fun_app$ac (fun_app$ad mod$a ?v0) ?v1)))) :named a56))
(assert (! (forall ((?v0 Nat_tree_tree$) (?v1 Nat_tree_tree$)) (! (= (fun_app$ag (fun_app$ah mod$e ?v0) ?v1) (tree_ap$s (tree_ap$t (tree_pure$w mod$) ?v0) ?v1)) :pattern ((fun_app$ag (fun_app$ah mod$e ?v0) ?v1)))) :named a57))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (! (= (fun_app$w (fun_app$x mod$ ?v0) ?v1) (tree_ap$u (tree_ap$v (tree_pure$x mod$g) ?v0) ?v1)) :pattern ((fun_app$w (fun_app$x mod$ ?v0) ?v1)))) :named a58))
(assert (! (forall ((?v0 Int_tree_tree$) (?v1 Int_tree_tree$)) (! (= (plus$b ?v0 ?v1) (tree_ap$l (tree_ap$m (tree_pure$t plus$a) ?v0) ?v1)) :pattern ((plus$b ?v0 ?v1)))) :named a59))
(assert (! (forall ((?v0 Nat_tree_tree_tree_tree$) (?v1 Nat_tree_tree_tree_tree$)) (! (= (plus$c ?v0 ?v1) (tree_ap$n (tree_ap$o (tree_pure$u plus$d) ?v0) ?v1)) :pattern ((plus$c ?v0 ?v1)))) :named a60))
(assert (! (forall ((?v0 Nat_tree_tree_tree$) (?v1 Nat_tree_tree_tree$)) (! (= (fun_app$ae (fun_app$af plus$d ?v0) ?v1) (tree_ap$p (tree_ap$q (tree_pure$v plus$e) ?v0) ?v1)) :pattern ((fun_app$ae (fun_app$af plus$d ?v0) ?v1)))) :named a61))
(assert (! (forall ((?v0 Int_tree$) (?v1 Int_tree$)) (! (= (fun_app$ac (fun_app$ad plus$a ?v0) ?v1) (tree_ap$r (tree_ap$f (tree_pure$h uud$) ?v0) ?v1)) :pattern ((fun_app$ac (fun_app$ad plus$a ?v0) ?v1)))) :named a62))
(assert (! (forall ((?v0 Nat_tree_tree$) (?v1 Nat_tree_tree$)) (! (= (fun_app$ag (fun_app$ah plus$e ?v0) ?v1) (tree_ap$s (tree_ap$t (tree_pure$w plus$) ?v0) ?v1)) :pattern ((fun_app$ag (fun_app$ah plus$e ?v0) ?v1)))) :named a63))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (! (= (fun_app$w (fun_app$x plus$ ?v0) ?v1) (tree_ap$u (tree_ap$v (tree_pure$x plus$f) ?v0) ?v1)) :pattern ((fun_app$w (fun_app$x plus$ ?v0) ?v1)))) :named a64))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_tree_tree$) (?v1 Nat_nat_bool_fun_fun_tree_tree$)) (! (= (minus$a ?v0 ?v1) (tree_ap$w (tree_ap$x (tree_pure$y minus$b) ?v0) ?v1)) :pattern ((minus$a ?v0 ?v1)))) :named a65))
(assert (! (forall ((?v0 Nat_tree_tree_tree$) (?v1 Nat_tree_tree_tree$)) (! (= (minus$c ?v0 ?v1) (tree_ap$p (tree_ap$q (tree_pure$v minus$d) ?v0) ?v1)) :pattern ((minus$c ?v0 ?v1)))) :named a66))
(assert (! (forall ((?v0 Int_tree_tree_tree$) (?v1 Int_tree_tree_tree$)) (! (= (minus$e ?v0 ?v1) (tree_ap$y (tree_ap$z (tree_pure$z minus$f) ?v0) ?v1)) :pattern ((minus$e ?v0 ?v1)))) :named a67))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (! (= (minus$g ?v0 ?v1) (tree_ap$aa (tree_ap$ab (tree_pure$aa minus$h) ?v0) ?v1)) :pattern ((minus$g ?v0 ?v1)))) :named a68))
(assert (! (forall ((?v0 Int_tree_tree$) (?v1 Int_tree_tree$)) (! (= (fun_app$ai (fun_app$aj minus$f ?v0) ?v1) (tree_ap$l (tree_ap$m (tree_pure$t minus$i) ?v0) ?v1)) :pattern ((fun_app$ai (fun_app$aj minus$f ?v0) ?v1)))) :named a69))
(assert (! (forall ((?v0 Nat_tree_tree$) (?v1 Nat_tree_tree$)) (! (= (fun_app$ag (fun_app$ah minus$d ?v0) ?v1) (tree_ap$s (tree_ap$t (tree_pure$w minus$j) ?v0) ?v1)) :pattern ((fun_app$ag (fun_app$ah minus$d ?v0) ?v1)))) :named a70))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_tree$)) (! (= (fun_app$ak (fun_app$al minus$b ?v0) ?v1) (tree_ap$e (tree_ap$ac (tree_pure$ab minus$k) ?v0) ?v1)) :pattern ((fun_app$ak (fun_app$al minus$b ?v0) ?v1)))) :named a71))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (! (= (fun_app$w (fun_app$x minus$j ?v0) ?v1) (tree_ap$u (tree_ap$v (tree_pure$x minus$) ?v0) ?v1)) :pattern ((fun_app$w (fun_app$x minus$j ?v0) ?v1)))) :named a72))
(assert (! (forall ((?v0 Int_tree$) (?v1 Int_tree$)) (! (= (fun_app$ac (fun_app$ad minus$i ?v0) ?v1) (tree_ap$r (tree_ap$f (tree_pure$h uue$) ?v0) ?v1)) :pattern ((fun_app$ac (fun_app$ad minus$i ?v0) ?v1)))) :named a73))
(assert (! (forall ((?v0 Int_tree_tree$) (?v1 Int_tree_tree$)) (! (= (times$a ?v0 ?v1) (tree_ap$l (tree_ap$m (tree_pure$t times$b) ?v0) ?v1)) :pattern ((times$a ?v0 ?v1)))) :named a74))
(assert (! (forall ((?v0 Nat_tree_tree_tree_tree$) (?v1 Nat_tree_tree_tree_tree$)) (! (= (times$c ?v0 ?v1) (tree_ap$n (tree_ap$o (tree_pure$u times$d) ?v0) ?v1)) :pattern ((times$c ?v0 ?v1)))) :named a75))
(assert (! (forall ((?v0 Nat_tree_tree_tree$) (?v1 Nat_tree_tree_tree$)) (! (= (fun_app$ae (fun_app$af times$d ?v0) ?v1) (tree_ap$p (tree_ap$q (tree_pure$v times$e) ?v0) ?v1)) :pattern ((fun_app$ae (fun_app$af times$d ?v0) ?v1)))) :named a76))
(assert (! (forall ((?v0 Int_tree$) (?v1 Int_tree$)) (! (= (fun_app$ac (fun_app$ad times$b ?v0) ?v1) (tree_ap$r (tree_ap$f (tree_pure$h times$f) ?v0) ?v1)) :pattern ((fun_app$ac (fun_app$ad times$b ?v0) ?v1)))) :named a77))
(assert (! (forall ((?v0 Nat_tree_tree$) (?v1 Nat_tree_tree$)) (! (= (fun_app$ag (fun_app$ah times$e ?v0) ?v1) (tree_ap$s (tree_ap$t (tree_pure$w times$) ?v0) ?v1)) :pattern ((fun_app$ag (fun_app$ah times$e ?v0) ?v1)))) :named a78))
(assert (! (forall ((?v0 Nat_tree$) (?v1 Nat_tree$)) (! (= (fun_app$w (fun_app$x times$ ?v0) ?v1) (tree_ap$u (tree_ap$v (tree_pure$x times$g) ?v0) ?v1)) :pattern ((fun_app$w (fun_app$x times$ ?v0) ?v1)))) :named a79))
(assert (! (forall ((?v0 Nat_bool_fun_tree$) (?v1 Nat$)) (= (tree_ap$ ?v0 (tree_pure$c ?v1)) (tree_ap$g (tree_pure$k (uuf$ ?v1)) ?v0))) :named a80))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_tree$) (?v1 Nat$)) (= (tree_ap$a ?v0 (tree_pure$c ?v1)) (tree_ap$ad (tree_pure$p (uug$ ?v1)) ?v0))) :named a81))
(assert (! (forall ((?v0 Int_int_int_fun_fun_tree$) (?v1 Int)) (= (tree_ap$f ?v0 (tree_pure$i ?v1)) (tree_ap$ae (tree_pure$ac (uuh$ ?v1)) ?v0))) :named a82))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun_tree$) (?v1 Nat_bool_fun$)) (= (tree_ap$g ?v0 (tree_pure$b ?v1)) (tree_ap$af (tree_pure$ad (uui$ ?v1)) ?v0))) :named a83))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun_tree$) (?v1 Nat_nat_bool_fun_fun$)) (= (tree_ap$c ?v0 (tree_pure$ ?v1)) (tree_ap$ag (tree_pure$ae (uuj$ ?v1)) ?v0))) :named a84))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun$)) (= (tree_ap$ad ?v0 (tree_pure$ ?v1)) (tree_ap$ah (tree_pure$af (uuk$ ?v1)) ?v0))) :named a85))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun$)) (= (tree_ap$e ?v0 (tree_pure$ ?v1)) (tree_ap$ai (tree_pure$ag (uul$ ?v1)) ?v0))) :named a86))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (= (tree_ap$aj ?v0 (tree_pure$g ?v1)) (tree_ap$ak (tree_pure$ah (uum$ ?v1)) ?v0))) :named a87))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (= (tree_ap$al ?v0 (tree_pure$g ?v1)) (tree_ap$am (tree_pure$ai (uun$ ?v1)) ?v0))) :named a88))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (= (tree_ap$an ?v0 (tree_pure$g ?v1)) (tree_ap$ao (tree_pure$aj (uuo$ ?v1)) ?v0))) :named a89))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$a ?v0) (tree_pure$ak (of_nat$b ?v0))) :pattern ((of_nat$a ?v0)))) :named a90))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$b ?v0) (tree_pure$al (of_nat$c ?v0))) :pattern ((of_nat$b ?v0)))) :named a91))
(assert (! (forall ((?v0 Nat$)) (! (= (of_nat$c ?v0) (tree_pure$i (of_nat$ ?v0))) :pattern ((of_nat$c ?v0)))) :named a92))
(assert (! (forall ((?v0 Bool) (?v1 Nat_tree$)) (= (tree_ap$ (tree_pure$b (uup$ ?v0)) ?v1) (tree_pure$a ?v0))) :named a93))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_tree$)) (= (tree_ap$a (tree_pure$ (uuq$ ?v0)) ?v1) (tree_pure$b ?v0))) :named a94))
(assert (! (forall ((?v0 Int_int_fun$) (?v1 Int_tree$)) (= (tree_ap$f (tree_pure$h (uur$ ?v0)) ?v1) (tree_pure$j ?v0))) :named a95))
(assert (! (forall ((?v0 Bool) (?v1 Nat_bool_fun_tree$)) (= (tree_ap$g (tree_pure$k (uus$ ?v0)) ?v1) (tree_pure$a ?v0))) :named a96))
(assert (! (forall ((?v0 Bool) (?v1 Nat_nat_bool_fun_fun_tree$)) (= (tree_ap$c (tree_pure$e (uut$ ?v0)) ?v1) (tree_pure$a ?v0))) :named a97))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_nat_bool_fun_fun_tree$)) (= (tree_ap$ad (tree_pure$p (uuu$ ?v0)) ?v1) (tree_pure$b ?v0))) :named a98))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat_nat_bool_fun_fun_tree$)) (= (tree_ap$e (tree_pure$g (uuv$ ?v0)) ?v1) (tree_pure$ ?v0))) :named a99))
(assert (! (forall ((?v0 Int_int_int_fun_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (= (tree_ap$aj (tree_pure$q (uuw$ ?v0)) ?v1) (tree_pure$h ?v0))) :named a100))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (= (tree_ap$al (tree_pure$r (uux$ ?v0)) ?v1) (tree_pure$k ?v0))) :named a101))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (= (tree_ap$an (tree_pure$s (uuy$ ?v0)) ?v1) (tree_pure$e ?v0))) :named a102))
(assert (! (forall ((?v0 Nat_bool_fun_tree$) (?v1 Nat_bool_fun_tree$)) (=> (forall ((?v2 Nat$)) (= (tree_ap$ ?v0 (tree_pure$c ?v2)) (tree_ap$ ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a103))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat$)) (= (tree_ap$a ?v0 (tree_pure$c ?v2)) (tree_ap$a ?v1 (tree_pure$c ?v2)))) (= ?v0 ?v1))) :named a104))
(assert (! (forall ((?v0 Int_int_int_fun_fun_tree$) (?v1 Int_int_int_fun_fun_tree$)) (=> (forall ((?v2 Int)) (= (tree_ap$f ?v0 (tree_pure$i ?v2)) (tree_ap$f ?v1 (tree_pure$i ?v2)))) (= ?v0 ?v1))) :named a105))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun_tree$) (?v1 Nat_bool_fun_bool_fun_tree$)) (=> (forall ((?v2 Nat_bool_fun$)) (= (tree_ap$g ?v0 (tree_pure$b ?v2)) (tree_ap$g ?v1 (tree_pure$b ?v2)))) (= ?v0 ?v1))) :named a106))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun_tree$) (?v1 Nat_nat_bool_fun_fun_bool_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun$)) (= (tree_ap$c ?v0 (tree_pure$ ?v2)) (tree_ap$c ?v1 (tree_pure$ ?v2)))) (= ?v0 ?v1))) :named a107))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun$)) (= (tree_ap$ad ?v0 (tree_pure$ ?v2)) (tree_ap$ad ?v1 (tree_pure$ ?v2)))) (= ?v0 ?v1))) :named a108))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun$)) (= (tree_ap$e ?v0 (tree_pure$ ?v2)) (tree_ap$e ?v1 (tree_pure$ ?v2)))) (= ?v0 ?v1))) :named a109))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (= (tree_ap$aj ?v0 (tree_pure$g ?v2)) (tree_ap$aj ?v1 (tree_pure$g ?v2)))) (= ?v0 ?v1))) :named a110))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (= (tree_ap$al ?v0 (tree_pure$g ?v2)) (tree_ap$al ?v1 (tree_pure$g ?v2)))) (= ?v0 ?v1))) :named a111))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)) (= (tree_ap$an ?v0 (tree_pure$g ?v2)) (tree_ap$an ?v1 (tree_pure$g ?v2)))) (= ?v0 ?v1))) :named a112))
(assert (! (forall ((?v0 Nat_bool_fun_tree$) (?v1 Nat_bool_fun_tree$)) (=> (forall ((?v2 Nat_tree$)) (= (tree_ap$ ?v0 ?v2) (tree_ap$ ?v1 ?v2))) (= ?v0 ?v1))) :named a113))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat_tree$)) (= (tree_ap$a ?v0 ?v2) (tree_ap$a ?v1 ?v2))) (= ?v0 ?v1))) :named a114))
(assert (! (forall ((?v0 Int_int_int_fun_fun_tree$) (?v1 Int_int_int_fun_fun_tree$)) (=> (forall ((?v2 Int_tree$)) (= (tree_ap$f ?v0 ?v2) (tree_ap$f ?v1 ?v2))) (= ?v0 ?v1))) :named a115))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun_tree$) (?v1 Nat_bool_fun_bool_fun_tree$)) (=> (forall ((?v2 Nat_bool_fun_tree$)) (= (tree_ap$g ?v0 ?v2) (tree_ap$g ?v1 ?v2))) (= ?v0 ?v1))) :named a116))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun_tree$) (?v1 Nat_nat_bool_fun_fun_bool_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_tree$)) (= (tree_ap$c ?v0 ?v2) (tree_ap$c ?v1 ?v2))) (= ?v0 ?v1))) :named a117))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_tree$)) (= (tree_ap$ad ?v0 ?v2) (tree_ap$ad ?v1 ?v2))) (= ?v0 ?v1))) :named a118))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_tree$)) (= (tree_ap$e ?v0 ?v2) (tree_ap$e ?v1 ?v2))) (= ?v0 ?v1))) :named a119))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_int_int_int_fun_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (= (tree_ap$aj ?v0 ?v2) (tree_ap$aj ?v1 ?v2))) (= ?v0 ?v1))) :named a120))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (= (tree_ap$al ?v0 ?v2) (tree_ap$al ?v1 ?v2))) (= ?v0 ?v1))) :named a121))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$) (?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)) (=> (forall ((?v2 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)) (= (tree_ap$an ?v0 ?v2) (tree_ap$an ?v1 ?v2))) (= ?v0 ?v1))) :named a122))
(assert (! (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (fun_app$d (fun_app$e mod$f (+ (fun_app$d (fun_app$e times$f ?v0) ?v1) ?v2)) ?v0) (fun_app$d (fun_app$e mod$f ?v2) ?v0))) :named a123))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$b (fun_app$c mod$g (fun_app$b (fun_app$c plus$f (fun_app$b (fun_app$c times$g ?v0) ?v1)) ?v2)) ?v0) (fun_app$b (fun_app$c mod$g ?v2) ?v0))) :named a124))
(assert (! (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (fun_app$d (fun_app$e mod$f (+ (fun_app$d (fun_app$e times$f ?v0) ?v1) ?v2)) ?v1) (fun_app$d (fun_app$e mod$f ?v2) ?v1))) :named a125))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$b (fun_app$c mod$g (fun_app$b (fun_app$c plus$f (fun_app$b (fun_app$c times$g ?v0) ?v1)) ?v2)) ?v1) (fun_app$b (fun_app$c mod$g ?v2) ?v1))) :named a126))
(assert (! (forall ((?v0 Int) (?v1 Int) (?v2 Int)) (= (fun_app$d (fun_app$e mod$f (+ ?v0 (fun_app$d (fun_app$e times$f ?v1) ?v2))) ?v1) (fun_app$d (fun_app$e mod$f ?v0) ?v1))) :named a127))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$b (fun_app$c mod$g (fun_app$b (fun_app$c plus$f ?v0) (fun_app$b (fun_app$c times$g ?v1) ?v2))) ?v1) (fun_app$b (fun_app$c mod$g ?v0) ?v1))) :named a128))
(check-sat)
;(get-unsat-core)
