; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 451
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_a_tree_fun$ 0)
(declare-sort A_tree_a_fun$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort A_a_stream_fun$ 0)
(declare-sort A_stream_a_fun$ 0)
(declare-sort A_tree_a_tree_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_a_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_a_fun$ 0)
(declare-sort A_stream_a_tree_fun$ 0)
(declare-sort A_tree_a_stream_fun$ 0)
(declare-sort A_stream_a_stream_fun$ 0)
(declare-codatatypes () ((A_stream$ (sCons$ (shd$ A$) (stl$ A_stream$)))
  (A_tree$ (node$ (root$ A$) (left$ A_tree$) (right$ A_tree$)))
  (A_tree_tree$ (node$a (root$a A_tree$) (left$a A_tree_tree$) (right$a A_tree_tree$)))
  (A_stream_tree$ (node$b (root$b A_stream$) (left$b A_stream_tree$) (right$b A_stream_tree$)))
  (A_stream_tree_tree$ (node$c (root$c A_stream_tree$) (left$c A_stream_tree_tree$) (right$c A_stream_tree_tree$)))
  (A_tree_tree_tree$ (node$d (root$d A_tree_tree$) (left$d A_tree_tree_tree$) (right$d A_tree_tree_tree$)))
  (A_stream_stream$ (sCons$a (shd$a A_stream$) (stl$a A_stream_stream$)))
  (A_stream_stream_tree$ (node$e (root$e A_stream_stream$) (left$e A_stream_stream_tree$) (right$e A_stream_stream_tree$)))
  (A_tree_stream$ (sCons$b (shd$b A_tree$) (stl$b A_tree_stream$)))
  (A_tree_stream_tree$ (node$f (root$f A_tree_stream$) (left$f A_tree_stream_tree$) (right$f A_tree_stream_tree$)))
  (A_a_fun_tree$ (node$g (select$ A_a_fun$) (selecta$ A_a_fun_tree$) (selectb$ A_a_fun_tree$)))
  (A_stream_stream_tree_tree$ (node$h (root$g A_stream_stream_tree$) (left$g A_stream_stream_tree_tree$) (right$g A_stream_stream_tree_tree$)))
  (A_tree_tree_stream$ (sCons$c (shd$c A_tree_tree$) (stl$c A_tree_tree_stream$)))
  (A_tree_tree_stream_tree$ (node$i (root$h A_tree_tree_stream$) (left$h A_tree_tree_stream_tree$) (right$h A_tree_tree_stream_tree$)))
  (A_stream_tree_stream$ (sCons$d (shd$d A_stream_tree$) (stl$d A_stream_tree_stream$)))
  (A_stream_stream_stream$ (sCons$e (shd$e A_stream_stream$) (stl$e A_stream_stream_stream$)))
  (A_tree_stream_stream$ (sCons$f (shd$f A_tree_stream$) (stl$f A_tree_stream_stream$)))
  (A_a_fun_stream$ (sCons$g (selectc$ A_a_fun$) (selectd$ A_a_fun_stream$)))
  (A_stream_a_fun_stream$ (sCons$h (selecte$ A_stream_a_fun$) (selectf$ A_stream_a_fun_stream$)))
  (A_a_tree_fun_stream$ (sCons$i (selectg$ A_a_tree_fun$) (selecth$ A_a_tree_fun_stream$)))
  (A_a_fun_a_fun_tree$ (node$j (selecti$ A_a_fun_a_fun$) (selectj$ A_a_fun_a_fun_tree$) (selectk$ A_a_fun_a_fun_tree$)))
  (A_a_fun_a_fun_stream$ (sCons$j (selectl$ A_a_fun_a_fun$) (selectm$ A_a_fun_a_fun_stream$)))
  (A_a_a_fun_fun_tree$ (node$k (selectn$ A_a_a_fun_fun$) (selecto$ A_a_a_fun_fun_tree$) (selectp$ A_a_a_fun_fun_tree$)))
  (A_a_a_fun_fun_stream$ (sCons$k (selectq$ A_a_a_fun_fun$) (selectr$ A_a_a_fun_fun_stream$)))
  (A_a_fun_a_a_fun_fun_tree$ (node$l (selects$ A_a_fun_a_a_fun_fun$) (selectt$ A_a_fun_a_a_fun_fun_tree$) (selectu$ A_a_fun_a_a_fun_fun_tree$)))
  (A_a_fun_a_a_fun_fun_stream$ (sCons$l (selectv$ A_a_fun_a_a_fun_fun$) (selectw$ A_a_fun_a_a_fun_fun_stream$)))
  (A_a_tree_fun_tree$ (node$m (selectx$ A_a_tree_fun$) (selecty$ A_a_tree_fun_tree$) (selectz$ A_a_tree_fun_tree$)))
  (A_a_stream_fun_tree$ (node$n (selecua$ A_a_stream_fun$) (selecub$ A_a_stream_fun_tree$) (selecuc$ A_a_stream_fun_tree$)))
  (A_a_stream_fun_stream$ (sCons$m (selecud$ A_a_stream_fun$) (selecue$ A_a_stream_fun_stream$)))
  (A_a_a_fun_fun_a_fun_tree$ (node$o (selecuf$ A_a_a_fun_fun_a_fun$) (selecug$ A_a_a_fun_fun_a_fun_tree$) (selecuh$ A_a_a_fun_fun_a_fun_tree$)))
  (A_a_a_fun_fun_a_fun_stream$ (sCons$n (selecui$ A_a_a_fun_fun_a_fun$) (selecuj$ A_a_a_fun_fun_a_fun_stream$)))
  (A_a_fun_a_fun_a_fun_tree$ (node$p (selecuk$ A_a_fun_a_fun_a_fun$) (selecul$ A_a_fun_a_fun_a_fun_tree$) (selecum$ A_a_fun_a_fun_a_fun_tree$)))
  (A_a_fun_a_fun_a_fun_stream$ (sCons$o (selecun$ A_a_fun_a_fun_a_fun$) (selecuo$ A_a_fun_a_fun_a_fun_stream$)))
  (A_a_a_a_fun_fun_fun_tree$ (node$q (selecup$ A_a_a_a_fun_fun_fun$) (selecuq$ A_a_a_a_fun_fun_fun_tree$) (selecur$ A_a_a_a_fun_fun_fun_tree$)))
  (A_a_a_a_fun_fun_fun_stream$ (sCons$p (selecus$ A_a_a_a_fun_fun_fun$) (selecut$ A_a_a_a_fun_fun_fun_stream$)))
  (A_a_a_fun_a_fun_fun_tree$ (node$r (selecuu$ A_a_a_fun_a_fun_fun$) (selecuv$ A_a_a_fun_a_fun_fun_tree$) (selecuw$ A_a_a_fun_a_fun_fun_tree$)))
  (A_a_a_fun_a_fun_fun_stream$ (sCons$q (selecux$ A_a_a_fun_a_fun_fun$) (selecuy$ A_a_a_fun_a_fun_fun_stream$)))
  (A_tree_a_fun_stream$ (sCons$r (selecuz$ A_tree_a_fun$) (selecva$ A_tree_a_fun_stream$)))
  (A_stream_a_stream_fun_stream$ (sCons$s (selecvb$ A_stream_a_stream_fun$) (selecvc$ A_stream_a_stream_fun_stream$)))
  (A_tree_a_stream_fun_stream$ (sCons$t (selecvd$ A_tree_a_stream_fun$) (selecve$ A_tree_a_stream_fun_stream$)))
  (A_stream_a_tree_fun_stream$ (sCons$u (selecvf$ A_stream_a_tree_fun$) (selecvg$ A_stream_a_tree_fun_stream$)))
  (A_tree_a_tree_fun_stream$ (sCons$v (selecvh$ A_tree_a_tree_fun$) (selecvi$ A_tree_a_tree_fun_stream$)))
  (A_tree_a_fun_tree$ (node$s (selecvj$ A_tree_a_fun$) (selecvk$ A_tree_a_fun_tree$) (selecvl$ A_tree_a_fun_tree$)))
  (A_stream_a_fun_tree$ (node$t (selecvm$ A_stream_a_fun$) (selecvn$ A_stream_a_fun_tree$) (selecvo$ A_stream_a_fun_tree$)))
  (A_tree_a_tree_fun_tree$ (node$u (selecvp$ A_tree_a_tree_fun$) (selecvq$ A_tree_a_tree_fun_tree$) (selecvr$ A_tree_a_tree_fun_tree$)))
  (A_stream_a_tree_fun_tree$ (node$v (selecvs$ A_stream_a_tree_fun$) (selecvt$ A_stream_a_tree_fun_tree$) (selecvu$ A_stream_a_tree_fun_tree$)))
  (A_tree_a_stream_fun_tree$ (node$w (selecvv$ A_tree_a_stream_fun$) (selecvw$ A_tree_a_stream_fun_tree$) (selecvx$ A_tree_a_stream_fun_tree$)))
  (A_stream_a_stream_fun_tree$ (node$x (selecvy$ A_stream_a_stream_fun$) (selecvz$ A_stream_a_stream_fun_tree$) (selecwa$ A_stream_a_stream_fun_tree$)))))
(declare-fun t$ () A_tree$)
(declare-fun t$a () A_tree$)
(declare-fun shd$g (A_a_fun_stream$) A_a_fun$)
(declare-fun shd$h (A_stream_a_fun_stream$) A_stream_a_fun$)
(declare-fun shd$i (A_a_tree_fun_stream$) A_a_tree_fun$)
(declare-fun shd$j (A_tree_a_fun_stream$ A_tree$) A$)
(declare-fun shd$k (A_a_stream_fun_stream$ A$) A_stream$)
(declare-fun shd$l (A_stream_a_stream_fun_stream$ A_stream$) A_stream$)
(declare-fun shd$m (A_tree_a_stream_fun_stream$ A_tree$) A_stream$)
(declare-fun shd$n (A_stream_a_tree_fun_stream$ A_stream$) A_tree$)
(declare-fun shd$o (A_tree_a_tree_fun_stream$ A_tree$) A_tree$)
(declare-fun shd$p (A_a_fun_a_fun_stream$ A_a_fun$) A$)
(declare-fun stl$g (A_a_fun_stream$) A_a_fun_stream$)
(declare-fun stl$h (A_a_fun_a_a_fun_fun_stream$) A_a_fun_a_a_fun_fun_stream$)
(declare-fun stl$i (A_a_a_fun_fun_stream$) A_a_a_fun_fun_stream$)
(declare-fun stl$j (A_a_fun_a_fun_stream$) A_a_fun_a_fun_stream$)
(declare-fun stl$k (A_tree_a_fun_stream$) A_tree_a_fun_stream$)
(declare-fun stl$l (A_stream_a_fun_stream$) A_stream_a_fun_stream$)
(declare-fun stl$m (A_a_tree_fun_stream$) A_a_tree_fun_stream$)
(declare-fun stl$n (A_a_stream_fun_stream$) A_a_stream_fun_stream$)
(declare-fun stl$o (A_tree_a_tree_fun_stream$) A_tree_a_tree_fun_stream$)
(declare-fun stl$p (A_stream_a_tree_fun_stream$) A_stream_a_tree_fun_stream$)
(declare-fun stl$q (A_tree_a_stream_fun_stream$) A_tree_a_stream_fun_stream$)
(declare-fun stl$r (A_stream_a_stream_fun_stream$) A_stream_a_stream_fun_stream$)
(declare-fun left$i (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun left$j (A_tree_a_fun_tree$) A_tree_a_fun_tree$)
(declare-fun left$k (A_stream_a_fun_tree$) A_stream_a_fun_tree$)
(declare-fun left$l (A_a_tree_fun_tree$) A_a_tree_fun_tree$)
(declare-fun left$m (A_a_stream_fun_tree$) A_a_stream_fun_tree$)
(declare-fun left$n (A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun left$o (A_tree_a_tree_fun_tree$) A_tree_a_tree_fun_tree$)
(declare-fun left$p (A_stream_a_tree_fun_tree$) A_stream_a_tree_fun_tree$)
(declare-fun left$q (A_tree_a_stream_fun_tree$) A_tree_a_stream_fun_tree$)
(declare-fun left$r (A_stream_a_stream_fun_tree$) A_stream_a_stream_fun_tree$)
(declare-fun minus$ (A_tree$ A_tree$) A_tree$)
(declare-fun root$i (A_a_fun_tree$) A_a_fun$)
(declare-fun root$j (A_stream_a_fun_tree$ A_stream$) A$)
(declare-fun root$k (A_tree_a_fun_tree$ A_tree$) A$)
(declare-fun root$l (A_a_stream_fun_tree$ A$) A_stream$)
(declare-fun root$m (A_a_tree_fun_tree$ A$) A_tree$)
(declare-fun root$n (A_stream_a_stream_fun_tree$ A_stream$) A_stream$)
(declare-fun root$o (A_tree_a_stream_fun_tree$ A_tree$) A_stream$)
(declare-fun root$p (A_stream_a_tree_fun_tree$ A_stream$) A_tree$)
(declare-fun root$q (A_tree_a_tree_fun_tree$ A_tree$) A_tree$)
(declare-fun root$r (A_a_fun_a_fun_tree$ A_a_fun$) A$)
(declare-fun st_ap$ (A_a_fun_stream$ A_stream$) A_stream$)
(declare-fun minus$a (A_stream$ A_stream$) A_stream$)
(declare-fun minus$b (A$ A$) A$)
(declare-fun minus$c (A_tree_tree$ A_tree_tree$) A_tree_tree$)
(declare-fun minus$d (A_stream_tree$ A_stream_tree$) A_stream_tree$)
(declare-fun minus$e (A_stream_tree_tree$ A_stream_tree_tree$) A_stream_tree_tree$)
(declare-fun minus$f (A_tree_tree_tree$ A_tree_tree_tree$) A_tree_tree_tree$)
(declare-fun minus$g (A_stream_stream_tree$ A_stream_stream_tree$) A_stream_stream_tree$)
(declare-fun minus$h (A_stream_stream$ A_stream_stream$) A_stream_stream$)
(declare-fun minus$i (A_tree_stream_tree$ A_tree_stream_tree$) A_tree_stream_tree$)
(declare-fun minus$j (A_tree_stream$ A_tree_stream$) A_tree_stream$)
(declare-fun minus$k (A_a_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun minus$l (A_a_fun$ A_a_fun$) A_a_fun$)
(declare-fun minus$m (A_stream_stream_tree_tree$ A_stream_stream_tree_tree$) A_stream_stream_tree_tree$)
(declare-fun minus$n (A_tree_tree_stream_tree$ A_tree_tree_stream_tree$) A_tree_tree_stream_tree$)
(declare-fun minus$o (A_tree_tree_stream$ A_tree_tree_stream$) A_tree_tree_stream$)
(declare-fun minus$p (A_stream_tree_stream$ A_stream_tree_stream$) A_stream_tree_stream$)
(declare-fun minus$q (A_stream_stream_stream$ A_stream_stream_stream$) A_stream_stream_stream$)
(declare-fun minus$r (A_tree_stream_stream$ A_tree_stream_stream$) A_tree_stream_stream$)
(declare-fun minus$s (A_a_fun_stream$ A_a_fun_stream$) A_a_fun_stream$)
(declare-fun minus$t (A_stream_a_fun_stream$ A_stream_a_fun_stream$) A_stream_a_fun_stream$)
(declare-fun minus$u (A_stream_a_fun$ A_stream_a_fun$) A_stream_a_fun$)
(declare-fun minus$v (A_a_tree_fun_stream$ A_a_tree_fun_stream$) A_a_tree_fun_stream$)
(declare-fun minus$w (A_a_tree_fun$ A_a_tree_fun$) A_a_tree_fun$)
(declare-fun st_ap$a (A_a_fun_a_fun_stream$ A_a_fun_stream$) A_stream$)
(declare-fun st_ap$b (A_a_a_fun_fun_stream$ A_stream$) A_a_fun_stream$)
(declare-fun st_ap$c (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$) A_a_fun_stream$)
(declare-fun st_ap$d (A_a_tree_fun_stream$ A_stream$) A_tree_stream$)
(declare-fun st_ap$e (A_a_stream_fun_stream$ A_stream$) A_stream_stream$)
(declare-fun st_ap$f (A_a_a_fun_fun_a_fun_stream$ A_a_a_fun_fun_stream$) A_stream$)
(declare-fun st_ap$g (A_a_fun_a_fun_a_fun_stream$ A_a_fun_a_fun_stream$) A_stream$)
(declare-fun st_ap$h (A_a_a_a_fun_fun_fun_stream$ A_stream$) A_a_a_fun_fun_stream$)
(declare-fun st_ap$i (A_a_a_fun_a_fun_fun_stream$ A_stream$) A_a_fun_a_fun_stream$)
(declare-fun st_ap$j (A_stream_a_fun_stream$ A_stream_stream$) A_stream$)
(declare-fun st_ap$k (A_tree_a_fun_stream$ A_tree_stream$) A_stream$)
(declare-fun st_ap$l (A_stream_a_stream_fun_stream$ A_stream_stream$) A_stream_stream$)
(declare-fun st_ap$m (A_tree_a_stream_fun_stream$ A_tree_stream$) A_stream_stream$)
(declare-fun st_ap$n (A_stream_a_tree_fun_stream$ A_stream_stream$) A_tree_stream$)
(declare-fun st_ap$o (A_tree_a_tree_fun_stream$ A_tree_stream$) A_tree_stream$)
(declare-fun stream$ (A_tree$) A_stream$)
(declare-fun fun_app$ (A_a_fun$ A$) A$)
(declare-fun stream$a (A_a_fun_tree$) A_a_fun_stream$)
(declare-fun stream$b (A_a_fun_a_fun_tree$) A_a_fun_a_fun_stream$)
(declare-fun stream$c (A_a_a_fun_fun_tree$) A_a_a_fun_fun_stream$)
(declare-fun stream$d (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_stream$)
(declare-fun stream$e (A_tree_tree$) A_tree_stream$)
(declare-fun stream$f (A_a_tree_fun_tree$) A_a_tree_fun_stream$)
(declare-fun stream$g (A_stream_tree$) A_stream_stream$)
(declare-fun stream$h (A_a_stream_fun_tree$) A_a_stream_fun_stream$)
(declare-fun stream$i (A_a_a_fun_fun_a_fun_tree$) A_a_a_fun_fun_a_fun_stream$)
(declare-fun stream$j (A_a_fun_a_fun_a_fun_tree$) A_a_fun_a_fun_a_fun_stream$)
(declare-fun stream$k (A_a_a_a_fun_fun_fun_tree$) A_a_a_a_fun_fun_fun_stream$)
(declare-fun stream$l (A_a_a_fun_a_fun_fun_tree$) A_a_a_fun_a_fun_fun_stream$)
(declare-fun tree_ap$ (A_a_fun_tree$ A_tree$) A_tree$)
(declare-fun fun_app$a (A_stream_a_fun$ A_stream$) A$)
(declare-fun fun_app$b (A_a_tree_fun$ A$) A_tree$)
(declare-fun tree_ap$a (A_a_fun_a_fun_tree$ A_a_fun_tree$) A_tree$)
(declare-fun tree_ap$b (A_a_a_fun_fun_tree$ A_tree$) A_a_fun_tree$)
(declare-fun tree_ap$c (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_ap$d (A_a_tree_fun_tree$ A_tree$) A_tree_tree$)
(declare-fun tree_ap$e (A_a_stream_fun_tree$ A_tree$) A_stream_tree$)
(declare-fun tree_ap$f (A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_tree$) A_tree$)
(declare-fun tree_ap$g (A_a_fun_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$) A_tree$)
(declare-fun tree_ap$h (A_a_a_a_fun_fun_fun_tree$ A_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_ap$i (A_a_a_fun_a_fun_fun_tree$ A_tree$) A_a_fun_a_fun_tree$)
(declare-fun tree_ap$j (A_tree_a_fun_tree$ A_tree_tree$) A_tree$)
(declare-fun tree_ap$k (A_stream_a_fun_tree$ A_stream_tree$) A_tree$)
(declare-fun tree_ap$l (A_tree_a_tree_fun_tree$ A_tree_tree$) A_tree_tree$)
(declare-fun tree_ap$m (A_stream_a_tree_fun_tree$ A_stream_tree$) A_tree_tree$)
(declare-fun tree_ap$n (A_tree_a_stream_fun_tree$ A_tree_tree$) A_stream_tree$)
(declare-fun tree_ap$o (A_stream_a_stream_fun_tree$ A_stream_tree$) A_stream_tree$)
(declare-fun tree_chop$ (A_tree_tree$) A_tree_tree$)
(declare-fun tree_chop$a (A_stream_tree$) A_stream_tree$)
(declare-fun tree_chop$b (A_a_fun_a_a_fun_fun_tree$) A_a_fun_a_a_fun_fun_tree$)
(declare-fun tree_chop$c (A_a_a_fun_fun_tree$) A_a_a_fun_fun_tree$)
(declare-fun tree_chop$d (A_a_fun_a_fun_tree$) A_a_fun_a_fun_tree$)
(declare-fun tree_chop$e (A_a_fun_tree$) A_a_fun_tree$)
(declare-fun tree_chop$f (A_tree$) A_tree$)
(declare-fun tree_chop$g (A_a_tree_fun_tree$) A_a_tree_fun_tree$)
(declare-fun tree_chop$h (A_a_stream_fun_tree$) A_a_stream_fun_tree$)
(assert (! (not (= (stream$ (minus$ t$ t$a)) (minus$a (stream$ t$) (stream$ t$a)))) :named a0))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (root$ (minus$ ?v0 ?v1)) (minus$b (root$ ?v0) (root$ ?v1)))) :named a1))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (= (root$a (minus$c ?v0 ?v1)) (minus$ (root$a ?v0) (root$a ?v1)))) :named a2))
(assert (! (forall ((?v0 A_stream_tree$) (?v1 A_stream_tree$)) (= (root$b (minus$d ?v0 ?v1)) (minus$a (root$b ?v0) (root$b ?v1)))) :named a3))
(assert (! (forall ((?v0 A_stream_tree_tree$) (?v1 A_stream_tree_tree$)) (= (root$c (minus$e ?v0 ?v1)) (minus$d (root$c ?v0) (root$c ?v1)))) :named a4))
(assert (! (forall ((?v0 A_tree_tree_tree$) (?v1 A_tree_tree_tree$)) (= (root$d (minus$f ?v0 ?v1)) (minus$c (root$d ?v0) (root$d ?v1)))) :named a5))
(assert (! (forall ((?v0 A_stream_stream_tree$) (?v1 A_stream_stream_tree$)) (= (root$e (minus$g ?v0 ?v1)) (minus$h (root$e ?v0) (root$e ?v1)))) :named a6))
(assert (! (forall ((?v0 A_tree_stream_tree$) (?v1 A_tree_stream_tree$)) (= (root$f (minus$i ?v0 ?v1)) (minus$j (root$f ?v0) (root$f ?v1)))) :named a7))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (root$i (minus$k ?v0 ?v1)) (minus$l (root$i ?v0) (root$i ?v1)))) :named a8))
(assert (! (forall ((?v0 A_stream_stream_tree_tree$) (?v1 A_stream_stream_tree_tree$)) (= (root$g (minus$m ?v0 ?v1)) (minus$g (root$g ?v0) (root$g ?v1)))) :named a9))
(assert (! (forall ((?v0 A_tree_tree_stream_tree$) (?v1 A_tree_tree_stream_tree$)) (= (root$h (minus$n ?v0 ?v1)) (minus$o (root$h ?v0) (root$h ?v1)))) :named a10))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (= (shd$ (minus$a ?v0 ?v1)) (minus$b (shd$ ?v0) (shd$ ?v1)))) :named a11))
(assert (! (forall ((?v0 A_tree_stream$) (?v1 A_tree_stream$)) (= (shd$b (minus$j ?v0 ?v1)) (minus$ (shd$b ?v0) (shd$b ?v1)))) :named a12))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (= (shd$a (minus$h ?v0 ?v1)) (minus$a (shd$a ?v0) (shd$a ?v1)))) :named a13))
(assert (! (forall ((?v0 A_stream_tree_stream$) (?v1 A_stream_tree_stream$)) (= (shd$d (minus$p ?v0 ?v1)) (minus$d (shd$d ?v0) (shd$d ?v1)))) :named a14))
(assert (! (forall ((?v0 A_tree_tree_stream$) (?v1 A_tree_tree_stream$)) (= (shd$c (minus$o ?v0 ?v1)) (minus$c (shd$c ?v0) (shd$c ?v1)))) :named a15))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (= (shd$e (minus$q ?v0 ?v1)) (minus$h (shd$e ?v0) (shd$e ?v1)))) :named a16))
(assert (! (forall ((?v0 A_tree_stream_stream$) (?v1 A_tree_stream_stream$)) (= (shd$f (minus$r ?v0 ?v1)) (minus$j (shd$f ?v0) (shd$f ?v1)))) :named a17))
(assert (! (forall ((?v0 A_a_fun_stream$) (?v1 A_a_fun_stream$)) (= (shd$g (minus$s ?v0 ?v1)) (minus$l (shd$g ?v0) (shd$g ?v1)))) :named a18))
(assert (! (forall ((?v0 A_stream_a_fun_stream$) (?v1 A_stream_a_fun_stream$)) (= (shd$h (minus$t ?v0 ?v1)) (minus$u (shd$h ?v0) (shd$h ?v1)))) :named a19))
(assert (! (forall ((?v0 A_a_tree_fun_stream$) (?v1 A_a_tree_fun_stream$)) (= (shd$i (minus$v ?v0 ?v1)) (minus$w (shd$i ?v0) (shd$i ?v1)))) :named a20))
(assert (! (forall ((?v0 A_stream_stream_tree$) (?v1 A_stream_stream_tree$)) (= (right$e (minus$g ?v0 ?v1)) (minus$g (right$e ?v0) (right$e ?v1)))) :named a21))
(assert (! (forall ((?v0 A_stream_tree$) (?v1 A_stream_tree$)) (= (right$b (minus$d ?v0 ?v1)) (minus$d (right$b ?v0) (right$b ?v1)))) :named a22))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (= (right$a (minus$c ?v0 ?v1)) (minus$c (right$a ?v0) (right$a ?v1)))) :named a23))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (right$ (minus$ ?v0 ?v1)) (minus$ (right$ ?v0) (right$ ?v1)))) :named a24))
(assert (! (forall ((?v0 A_stream_stream_tree$) (?v1 A_stream_stream_tree$)) (= (left$e (minus$g ?v0 ?v1)) (minus$g (left$e ?v0) (left$e ?v1)))) :named a25))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (left$i (minus$k ?v0 ?v1)) (minus$k (left$i ?v0) (left$i ?v1)))) :named a26))
(assert (! (forall ((?v0 A_stream_tree$) (?v1 A_stream_tree$)) (= (left$b (minus$d ?v0 ?v1)) (minus$d (left$b ?v0) (left$b ?v1)))) :named a27))
(assert (! (forall ((?v0 A_tree_tree$) (?v1 A_tree_tree$)) (= (left$a (minus$c ?v0 ?v1)) (minus$c (left$a ?v0) (left$a ?v1)))) :named a28))
(assert (! (forall ((?v0 A_tree$) (?v1 A_tree$)) (= (left$ (minus$ ?v0 ?v1)) (minus$ (left$ ?v0) (left$ ?v1)))) :named a29))
(assert (! (forall ((?v0 A_a_fun_stream$) (?v1 A_a_fun_stream$)) (= (stl$g (minus$s ?v0 ?v1)) (minus$s (stl$g ?v0) (stl$g ?v1)))) :named a30))
(assert (! (forall ((?v0 A_tree_tree_stream$) (?v1 A_tree_tree_stream$)) (= (stl$c (minus$o ?v0 ?v1)) (minus$o (stl$c ?v0) (stl$c ?v1)))) :named a31))
(assert (! (forall ((?v0 A_stream_tree_stream$) (?v1 A_stream_tree_stream$)) (= (stl$d (minus$p ?v0 ?v1)) (minus$p (stl$d ?v0) (stl$d ?v1)))) :named a32))
(assert (! (forall ((?v0 A_tree_stream_stream$) (?v1 A_tree_stream_stream$)) (= (stl$f (minus$r ?v0 ?v1)) (minus$r (stl$f ?v0) (stl$f ?v1)))) :named a33))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (= (stl$e (minus$q ?v0 ?v1)) (minus$q (stl$e ?v0) (stl$e ?v1)))) :named a34))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (= (stl$a (minus$h ?v0 ?v1)) (minus$h (stl$a ?v0) (stl$a ?v1)))) :named a35))
(assert (! (forall ((?v0 A_tree_stream$) (?v1 A_tree_stream$)) (= (stl$b (minus$j ?v0 ?v1)) (minus$j (stl$b ?v0) (stl$b ?v1)))) :named a36))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (= (stl$ (minus$a ?v0 ?v1)) (minus$a (stl$ ?v0) (stl$ ?v1)))) :named a37))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (stream$ (tree_ap$ ?v0 ?v1)) (st_ap$ (stream$a ?v0) (stream$ ?v1)))) :named a38))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (stream$ (tree_ap$a ?v0 ?v1)) (st_ap$a (stream$b ?v0) (stream$a ?v1)))) :named a39))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$)) (= (stream$a (tree_ap$b ?v0 ?v1)) (st_ap$b (stream$c ?v0) (stream$ ?v1)))) :named a40))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$) (?v1 A_a_fun_tree$)) (= (stream$a (tree_ap$c ?v0 ?v1)) (st_ap$c (stream$d ?v0) (stream$a ?v1)))) :named a41))
(assert (! (forall ((?v0 A_a_tree_fun_tree$) (?v1 A_tree$)) (= (stream$e (tree_ap$d ?v0 ?v1)) (st_ap$d (stream$f ?v0) (stream$ ?v1)))) :named a42))
(assert (! (forall ((?v0 A_a_stream_fun_tree$) (?v1 A_tree$)) (= (stream$g (tree_ap$e ?v0 ?v1)) (st_ap$e (stream$h ?v0) (stream$ ?v1)))) :named a43))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun_tree$) (?v1 A_a_a_fun_fun_tree$)) (= (stream$ (tree_ap$f ?v0 ?v1)) (st_ap$f (stream$i ?v0) (stream$c ?v1)))) :named a44))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun_tree$) (?v1 A_a_fun_a_fun_tree$)) (= (stream$ (tree_ap$g ?v0 ?v1)) (st_ap$g (stream$j ?v0) (stream$b ?v1)))) :named a45))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$) (?v1 A_tree$)) (= (stream$c (tree_ap$h ?v0 ?v1)) (st_ap$h (stream$k ?v0) (stream$ ?v1)))) :named a46))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$) (?v1 A_tree$)) (= (stream$b (tree_ap$i ?v0 ?v1)) (st_ap$i (stream$l ?v0) (stream$ ?v1)))) :named a47))
(assert (! (forall ((?v0 A_tree_tree$)) (= (stl$b (stream$e ?v0)) (stream$e (tree_chop$ ?v0)))) :named a48))
(assert (! (forall ((?v0 A_stream_tree$)) (= (stl$a (stream$g ?v0)) (stream$g (tree_chop$a ?v0)))) :named a49))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$)) (= (stl$h (stream$d ?v0)) (stream$d (tree_chop$b ?v0)))) :named a50))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$)) (= (stl$i (stream$c ?v0)) (stream$c (tree_chop$c ?v0)))) :named a51))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$)) (= (stl$j (stream$b ?v0)) (stream$b (tree_chop$d ?v0)))) :named a52))
(assert (! (forall ((?v0 A_a_fun_tree$)) (= (stl$g (stream$a ?v0)) (stream$a (tree_chop$e ?v0)))) :named a53))
(assert (! (forall ((?v0 A_tree$)) (= (stl$ (stream$ ?v0)) (stream$ (tree_chop$f ?v0)))) :named a54))
(assert (! (forall ((?v0 A_a_tree_fun_tree$) (?v1 A_tree$)) (= (tree_chop$ (tree_ap$d ?v0 ?v1)) (tree_ap$d (tree_chop$g ?v0) (tree_chop$f ?v1)))) :named a55))
(assert (! (forall ((?v0 A_a_stream_fun_tree$) (?v1 A_tree$)) (= (tree_chop$a (tree_ap$e ?v0 ?v1)) (tree_ap$e (tree_chop$h ?v0) (tree_chop$f ?v1)))) :named a56))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (tree_chop$f (tree_ap$a ?v0 ?v1)) (tree_ap$a (tree_chop$d ?v0) (tree_chop$e ?v1)))) :named a57))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$) (?v1 A_tree$)) (= (tree_chop$e (tree_ap$b ?v0 ?v1)) (tree_ap$b (tree_chop$c ?v0) (tree_chop$f ?v1)))) :named a58))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$) (?v1 A_a_fun_tree$)) (= (tree_chop$e (tree_ap$c ?v0 ?v1)) (tree_ap$c (tree_chop$b ?v0) (tree_chop$e ?v1)))) :named a59))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (tree_chop$f (tree_ap$ ?v0 ?v1)) (tree_ap$ (tree_chop$e ?v0) (tree_chop$f ?v1)))) :named a60))
(assert (! (forall ((?v0 A_a_fun_stream$) (?v1 A_stream$)) (= (shd$ (st_ap$ ?v0 ?v1)) (fun_app$ (shd$g ?v0) (shd$ ?v1)))) :named a61))
(assert (! (forall ((?v0 A_stream_a_fun_stream$) (?v1 A_stream_stream$)) (= (shd$ (st_ap$j ?v0 ?v1)) (fun_app$a (shd$h ?v0) (shd$a ?v1)))) :named a62))
(assert (! (forall ((?v0 A_tree_a_fun_stream$) (?v1 A_tree_stream$)) (= (shd$ (st_ap$k ?v0 ?v1)) (shd$j ?v0 (shd$b ?v1)))) :named a63))
(assert (! (forall ((?v0 A_a_stream_fun_stream$) (?v1 A_stream$)) (= (shd$a (st_ap$e ?v0 ?v1)) (shd$k ?v0 (shd$ ?v1)))) :named a64))
(assert (! (forall ((?v0 A_a_tree_fun_stream$) (?v1 A_stream$)) (= (shd$b (st_ap$d ?v0 ?v1)) (fun_app$b (shd$i ?v0) (shd$ ?v1)))) :named a65))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$) (?v1 A_stream_stream$)) (= (shd$a (st_ap$l ?v0 ?v1)) (shd$l ?v0 (shd$a ?v1)))) :named a66))
(assert (! (forall ((?v0 A_tree_a_stream_fun_stream$) (?v1 A_tree_stream$)) (= (shd$a (st_ap$m ?v0 ?v1)) (shd$m ?v0 (shd$b ?v1)))) :named a67))
(assert (! (forall ((?v0 A_stream_a_tree_fun_stream$) (?v1 A_stream_stream$)) (= (shd$b (st_ap$n ?v0 ?v1)) (shd$n ?v0 (shd$a ?v1)))) :named a68))
(assert (! (forall ((?v0 A_tree_a_tree_fun_stream$) (?v1 A_tree_stream$)) (= (shd$b (st_ap$o ?v0 ?v1)) (shd$o ?v0 (shd$b ?v1)))) :named a69))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$) (?v1 A_a_fun_stream$)) (= (shd$ (st_ap$a ?v0 ?v1)) (shd$p ?v0 (shd$g ?v1)))) :named a70))
(assert (! (forall ((?v0 A_a_fun_stream$) (?v1 A_stream$)) (= (stl$ (st_ap$ ?v0 ?v1)) (st_ap$ (stl$g ?v0) (stl$ ?v1)))) :named a71))
(assert (! (forall ((?v0 A_tree_a_fun_stream$) (?v1 A_tree_stream$)) (= (stl$ (st_ap$k ?v0 ?v1)) (st_ap$k (stl$k ?v0) (stl$b ?v1)))) :named a72))
(assert (! (forall ((?v0 A_stream_a_fun_stream$) (?v1 A_stream_stream$)) (= (stl$ (st_ap$j ?v0 ?v1)) (st_ap$j (stl$l ?v0) (stl$a ?v1)))) :named a73))
(assert (! (forall ((?v0 A_a_tree_fun_stream$) (?v1 A_stream$)) (= (stl$b (st_ap$d ?v0 ?v1)) (st_ap$d (stl$m ?v0) (stl$ ?v1)))) :named a74))
(assert (! (forall ((?v0 A_a_stream_fun_stream$) (?v1 A_stream$)) (= (stl$a (st_ap$e ?v0 ?v1)) (st_ap$e (stl$n ?v0) (stl$ ?v1)))) :named a75))
(assert (! (forall ((?v0 A_tree_a_tree_fun_stream$) (?v1 A_tree_stream$)) (= (stl$b (st_ap$o ?v0 ?v1)) (st_ap$o (stl$o ?v0) (stl$b ?v1)))) :named a76))
(assert (! (forall ((?v0 A_stream_a_tree_fun_stream$) (?v1 A_stream_stream$)) (= (stl$b (st_ap$n ?v0 ?v1)) (st_ap$n (stl$p ?v0) (stl$a ?v1)))) :named a77))
(assert (! (forall ((?v0 A_tree_a_stream_fun_stream$) (?v1 A_tree_stream$)) (= (stl$a (st_ap$m ?v0 ?v1)) (st_ap$m (stl$q ?v0) (stl$b ?v1)))) :named a78))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$) (?v1 A_stream_stream$)) (= (stl$a (st_ap$l ?v0 ?v1)) (st_ap$l (stl$r ?v0) (stl$a ?v1)))) :named a79))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$) (?v1 A_a_fun_stream$)) (= (stl$ (st_ap$a ?v0 ?v1)) (st_ap$a (stl$j ?v0) (stl$g ?v1)))) :named a80))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (left$ (tree_ap$ ?v0 ?v1)) (tree_ap$ (left$i ?v0) (left$ ?v1)))) :named a81))
(assert (! (forall ((?v0 A_tree_a_fun_tree$) (?v1 A_tree_tree$)) (= (left$ (tree_ap$j ?v0 ?v1)) (tree_ap$j (left$j ?v0) (left$a ?v1)))) :named a82))
(assert (! (forall ((?v0 A_stream_a_fun_tree$) (?v1 A_stream_tree$)) (= (left$ (tree_ap$k ?v0 ?v1)) (tree_ap$k (left$k ?v0) (left$b ?v1)))) :named a83))
(assert (! (forall ((?v0 A_a_tree_fun_tree$) (?v1 A_tree$)) (= (left$a (tree_ap$d ?v0 ?v1)) (tree_ap$d (left$l ?v0) (left$ ?v1)))) :named a84))
(assert (! (forall ((?v0 A_a_stream_fun_tree$) (?v1 A_tree$)) (= (left$b (tree_ap$e ?v0 ?v1)) (tree_ap$e (left$m ?v0) (left$ ?v1)))) :named a85))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (left$ (tree_ap$a ?v0 ?v1)) (tree_ap$a (left$n ?v0) (left$i ?v1)))) :named a86))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$) (?v1 A_tree_tree$)) (= (left$a (tree_ap$l ?v0 ?v1)) (tree_ap$l (left$o ?v0) (left$a ?v1)))) :named a87))
(assert (! (forall ((?v0 A_stream_a_tree_fun_tree$) (?v1 A_stream_tree$)) (= (left$a (tree_ap$m ?v0 ?v1)) (tree_ap$m (left$p ?v0) (left$b ?v1)))) :named a88))
(assert (! (forall ((?v0 A_tree_a_stream_fun_tree$) (?v1 A_tree_tree$)) (= (left$b (tree_ap$n ?v0 ?v1)) (tree_ap$n (left$q ?v0) (left$a ?v1)))) :named a89))
(assert (! (forall ((?v0 A_stream_a_stream_fun_tree$) (?v1 A_stream_tree$)) (= (left$b (tree_ap$o ?v0 ?v1)) (tree_ap$o (left$r ?v0) (left$b ?v1)))) :named a90))
(assert (! (forall ((?v0 A_a_fun_tree$) (?v1 A_tree$)) (= (root$ (tree_ap$ ?v0 ?v1)) (fun_app$ (root$i ?v0) (root$ ?v1)))) :named a91))
(assert (! (forall ((?v0 A_stream_a_fun_tree$) (?v1 A_stream_tree$)) (= (root$ (tree_ap$k ?v0 ?v1)) (root$j ?v0 (root$b ?v1)))) :named a92))
(assert (! (forall ((?v0 A_tree_a_fun_tree$) (?v1 A_tree_tree$)) (= (root$ (tree_ap$j ?v0 ?v1)) (root$k ?v0 (root$a ?v1)))) :named a93))
(assert (! (forall ((?v0 A_a_stream_fun_tree$) (?v1 A_tree$)) (= (root$b (tree_ap$e ?v0 ?v1)) (root$l ?v0 (root$ ?v1)))) :named a94))
(assert (! (forall ((?v0 A_a_tree_fun_tree$) (?v1 A_tree$)) (= (root$a (tree_ap$d ?v0 ?v1)) (root$m ?v0 (root$ ?v1)))) :named a95))
(assert (! (forall ((?v0 A_stream_a_stream_fun_tree$) (?v1 A_stream_tree$)) (= (root$b (tree_ap$o ?v0 ?v1)) (root$n ?v0 (root$b ?v1)))) :named a96))
(assert (! (forall ((?v0 A_tree_a_stream_fun_tree$) (?v1 A_tree_tree$)) (= (root$b (tree_ap$n ?v0 ?v1)) (root$o ?v0 (root$a ?v1)))) :named a97))
(assert (! (forall ((?v0 A_stream_a_tree_fun_tree$) (?v1 A_stream_tree$)) (= (root$a (tree_ap$m ?v0 ?v1)) (root$p ?v0 (root$b ?v1)))) :named a98))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$) (?v1 A_tree_tree$)) (= (root$a (tree_ap$l ?v0 ?v1)) (root$q ?v0 (root$a ?v1)))) :named a99))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$) (?v1 A_a_fun_tree$)) (= (root$ (tree_ap$a ?v0 ?v1)) (root$r ?v0 (root$i ?v1)))) :named a100))
(check-sat)
;(get-unsat-core)
