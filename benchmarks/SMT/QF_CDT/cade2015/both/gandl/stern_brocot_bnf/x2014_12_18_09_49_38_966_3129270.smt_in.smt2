; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 366
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort A_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun$ 0)
(declare-sort A_a_a_prod_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_a_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun$ 0)
(declare-sort A_a_a_prod_fun_a_fun$ 0)
(declare-sort A_a_prod_a_a_prod_fun$ 0)
(declare-sort A_stream_a_stream_fun$ 0)
(declare-sort A_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_fun$ 0)
(declare-sort A_a_a_prod_fun_a_a_prod_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0)
(declare-sort A_a_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_prod_fun$ 0)
(declare-sort A_a_a_prod_fun_a_a_a_prod_fun_fun$ 0)
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0)
(declare-sort A_stream_stream_a_stream_stream_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_fun_a_fun_a_a_fun_a_fun_a_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_prod_fun_a_fun_a_a_a_prod_fun_a_fun_fun$ 0)
(declare-sort A_stream_stream_stream_a_stream_stream_stream_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$ 0)
(declare-sort A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_fun_a_a_a_a_prod_fun_fun_a_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$ 0)
(declare-sort A_a_a_prod_fun_a_a_prod_fun_a_a_a_prod_fun_a_a_prod_fun_fun$ 0)
(declare-sort A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_prod_fun_a_a_a_a_prod_fun_fun_a_a_prod_fun_fun$ 0)
(declare-sort A_a_a_prod_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ 0)
(declare-sort A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_a_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_a_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_a_stream_stream_a_stream_stream_a_stream_stream_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ 0)
(declare-sort A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_a_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_fun$ 0)
(declare-sort A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-sort A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$ 0)
(declare-datatypes () ((A_a_prod$ (pair$ (fst$ A$) (snd$ A$)))))
(declare-codatatypes () ((A_a_prod_stream$ (sCons$ (shd$ A_a_prod$) (stl$ A_a_prod_stream$)))
  (A_a_a_prod_fun_stream$ (sCons$a (select$ A_a_a_prod_fun$) (selecta$ A_a_a_prod_fun_stream$)))
  (A_stream$ (sCons$b (shd$a A$) (stl$a A_stream$)))
  (A_a_a_a_prod_fun_fun_stream$ (sCons$c (selectb$ A_a_a_a_prod_fun_fun$) (selectc$ A_a_a_a_prod_fun_fun_stream$)))))
(declare-datatypes () ((Num$ (one$) (bit0$ (selectd$ Num$)) (bit1$ (selecte$ Num$)))))
(declare-codatatypes () ((A_a_a_fun_fun_stream$ (sCons$d (selectf$ A_a_a_fun_fun$) (selectg$ A_a_a_fun_fun_stream$)))
  (A_a_a_a_a_prod_fun_fun_fun_stream$ (sCons$e (selecth$ A_a_a_a_a_prod_fun_fun_fun$) (selecti$ A_a_a_a_a_prod_fun_fun_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$ (sCons$f (selectj$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) (selectk$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)))
  (A_a_fun_stream$ (sCons$g (selectl$ A_a_fun$) (selectm$ A_a_fun_stream$)))
  (A_a_a_a_fun_fun_fun_stream$ (sCons$h (selectn$ A_a_a_a_fun_fun_fun$) (selecto$ A_a_a_a_fun_fun_fun_stream$)))
  (A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$i (selectp$ A_a_a_a_a_a_prod_fun_fun_fun_fun$) (selectq$ A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)))
  (A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$ (sCons$j (selectr$ A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) (selects$ A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$)))
  (A_a_a_prod_fun_a_fun_stream$ (sCons$k (selectt$ A_a_a_prod_fun_a_fun$) (selectu$ A_a_a_prod_fun_a_fun_stream$)))
  (A_a_a_fun_fun_a_fun_stream$ (sCons$l (selectv$ A_a_a_fun_fun_a_fun$) (selectw$ A_a_a_fun_fun_a_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_fun_stream$ (sCons$m (selectx$ A_a_a_a_prod_fun_fun_a_fun$) (selecty$ A_a_a_a_prod_fun_fun_a_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$ (sCons$n (selectz$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) (selecua$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$)))
  (A_a_fun_a_fun_stream$ (sCons$o (selecub$ A_a_fun_a_fun$) (selecuc$ A_a_fun_a_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$ (sCons$p (selecud$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) (selecue$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$q (selecuf$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) (selecug$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$)))
  (A_a_fun_a_a_fun_a_fun_fun_stream$ (sCons$r (selecuh$ A_a_fun_a_a_fun_a_fun_fun$) (selecui$ A_a_fun_a_a_fun_a_fun_fun_stream$)))
  (A_a_a_a_a_fun_fun_fun_fun_stream$ (sCons$s (selecuj$ A_a_a_a_a_fun_fun_fun_fun$) (selecuk$ A_a_a_a_a_fun_fun_fun_fun_stream$)))
  (A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$ (sCons$t (selecul$ A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$) (selecum$ A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$)))
  (A_stream_stream$ (sCons$u (shd$b A_stream$) (stl$b A_stream_stream$)))
  (A_stream_stream_stream$ (sCons$v (shd$c A_stream_stream$) (stl$c A_stream_stream_stream$)))
  (A_stream_stream_stream_stream$ (sCons$w (shd$d A_stream_stream_stream$) (stl$d A_stream_stream_stream_stream$)))
  (A_stream_stream_stream_a_stream_stream_stream_fun_stream$ (sCons$x (selecun$ A_stream_stream_stream_a_stream_stream_stream_fun$) (selecuo$ A_stream_stream_stream_a_stream_stream_stream_fun_stream$)))
  (A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_stream$ (sCons$y (selecup$ A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$) (selecuq$ A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_stream$)))
  (A_stream_stream_a_stream_stream_fun_stream$ (sCons$z (selecur$ A_stream_stream_a_stream_stream_fun$) (selecus$ A_stream_stream_a_stream_stream_fun_stream$)))
  (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$ (sCons$aa (selecut$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$) (selecuu$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$)))
  (A_stream_a_stream_fun_stream$ (sCons$ab (selecuv$ A_stream_a_stream_fun$) (selecuw$ A_stream_a_stream_fun_stream$)))
  (A_stream_a_stream_a_stream_fun_fun_stream$ (sCons$ac (selecux$ A_stream_a_stream_a_stream_fun_fun$) (selecuy$ A_stream_a_stream_a_stream_fun_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_prod_fun_stream$ (sCons$ad (selecuz$ A_a_a_a_prod_fun_fun_a_a_prod_fun$) (selecva$ A_a_a_a_prod_fun_fun_a_a_prod_fun_stream$)))
  (A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$ae (selecvb$ A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) (selecvc$ A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$af (selecvd$ A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$) (selecve$ A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)))
  (A_a_a_prod_fun_a_a_prod_fun_stream$ (sCons$ag (selecvf$ A_a_a_prod_fun_a_a_prod_fun$) (selecvg$ A_a_a_prod_fun_a_a_prod_fun_stream$)))
  (A_a_a_fun_fun_a_a_fun_fun_stream$ (sCons$ah (selecvh$ A_a_a_fun_fun_a_a_fun_fun$) (selecvi$ A_a_a_fun_fun_a_a_fun_fun_stream$)))
  (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$ (sCons$ai (selecvj$ A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$) (selecvk$ A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$ (sCons$aj (selecvl$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) (selecvm$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$ (sCons$ak (selecvn$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$) (selecvo$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)))
  (A_a_fun_a_fun_a_fun_stream$ (sCons$al (selecvp$ A_a_fun_a_fun_a_fun$) (selecvq$ A_a_fun_a_fun_a_fun_stream$)))
  (A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_stream$ (sCons$am (selecvr$ A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun$) (selecvs$ A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_stream$)))
  (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$an (selecvt$ A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$) (selecvu$ A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)))
  (A_a_a_prod_fun_a_a_a_prod_fun_fun_stream$ (sCons$ao (selecvv$ A_a_a_prod_fun_a_a_a_prod_fun_fun$) (selecvw$ A_a_a_prod_fun_a_a_a_prod_fun_fun_stream$)))
  (A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ (sCons$ap (selecvx$ A_a_a_fun_fun_a_a_a_fun_fun_fun$) (selecvy$ A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$)))
  (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$aq (selecvz$ A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$) (selecwa$ A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)))
  (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$ar (selecwb$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) (selecwc$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$)))
  (A_a_fun_a_a_fun_fun_stream$ (sCons$as (selecwd$ A_a_fun_a_a_fun_fun$) (selecwe$ A_a_fun_a_a_fun_fun_stream$)))
  (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_stream$ (sCons$at (selecwf$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$) (selecwg$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_stream$)))
  (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$ (sCons$au (selecwh$ A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$) (selecwi$ A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$)))
  (A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_stream$ (sCons$av (selecwj$ A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$) (selecwk$ A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_stream$)))))
(declare-fun id$ () A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uu$ () A_a_a_a_prod_fun_fun$)
(declare-fun xs$ () A_stream$)
(declare-fun ys$ () A_stream$)
(declare-fun id$a () A_a_fun$)
(declare-fun id$b () A_a_a_prod_fun_a_a_a_prod_fun_fun$)
(declare-fun id$c () A_a_a_fun_fun_a_a_a_fun_fun_fun$)
(declare-fun id$d () A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun id$e () A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun id$f () A_a_fun_a_a_fun_fun$)
(declare-fun id$g () A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$)
(declare-fun id$h () A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun id$i () A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun id$j () A_a_prod_a_a_prod_fun$)
(declare-fun id$k () A_a_a_prod_fun_a_fun_a_a_a_prod_fun_a_fun_fun$)
(declare-fun id$l () A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$)
(declare-fun id$m () A_a_a_a_prod_fun_fun_a_fun_a_a_a_a_prod_fun_fun_a_fun_fun$)
(declare-fun id$n () A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$)
(declare-fun id$o () A_a_fun_a_fun_a_a_fun_a_fun_fun$)
(declare-fun id$p () A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun id$q () A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun id$r () A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$)
(declare-fun id$s () A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun$)
(declare-fun id$t () A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_a_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_fun$)
(declare-fun id$u () A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_a_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_fun$)
(declare-fun id$v () A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_a_stream_stream_a_stream_stream_a_stream_stream_fun_fun_fun$)
(declare-fun id$w () A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$)
(declare-fun id$x () A_a_a_a_prod_fun_fun_a_a_prod_fun_a_a_a_a_prod_fun_fun_a_a_prod_fun_fun$)
(declare-fun id$y () A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun id$z () A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun mod$ () A_a_a_fun_fun$)
(declare-fun uua$ () A_a_a_a_prod_fun_fun$)
(declare-fun uub$ () A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uuc$ () A_a_fun$)
(declare-fun uud$ (A_a_prod$) A_a_a_prod_fun$)
(declare-fun uue$ (A_a_a_prod_fun$) A_a_a_a_prod_fun_fun$)
(declare-fun uuf$ (A$) A_a_fun$)
(declare-fun uug$ (A_a_fun$) A_a_a_fun_fun$)
(declare-fun uuh$ (A_a_a_a_prod_fun_fun$) A_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uui$ (A_a_a_prod_fun$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)
(declare-fun uuj$ (A_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uuk$ (A$) A_a_fun_a_fun$)
(declare-fun uul$ (A_a_a_fun_fun$) A_a_a_a_fun_fun_fun$)
(declare-fun uum$ (A_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun uun$ (A_a_a_a_prod_fun_fun$) A_a_a_prod_fun$)
(declare-fun uuo$ (A_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun$)
(declare-fun uup$ (A_a_a_fun_fun$) A_a_fun$)
(declare-fun uuq$ (A_a_a_a_fun_fun_fun$) A_a_a_fun_fun$)
(declare-fun uur$ (A_a_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uus$ (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)
(declare-fun uut$ (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uuu$ (A_a_fun_a_a_fun_a_fun_fun$) A_a_fun_a_fun$)
(declare-fun uuv$ (A_a_a_a_a_fun_fun_fun_fun$) A_a_a_a_fun_fun_fun$)
(declare-fun uuw$ (A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$) A_a_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun uux$ (A_a_a_prod_fun$) A_a_a_a_prod_fun_fun$)
(declare-fun uuy$ (A_a_a_a_prod_fun_fun$) A_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uuz$ (A_a_fun$) A_a_a_fun_fun$)
(declare-fun uva$ (A_a_a_fun_fun$) A_a_a_a_fun_fun_fun$)
(declare-fun uvb$ (A_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun uvc$ (A_a_a_a_prod_fun_fun_a_a_prod_fun$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)
(declare-fun uvd$ (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uve$ (A_a_a_a_prod_fun_fun$) A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$)
(declare-fun uvf$ (A_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun uvg$ (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun uvh$ (A$) A_a_a_prod_fun_a_a_prod_fun$)
(declare-fun uvi$ (A$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)
(declare-fun uvj$ (A$) A_a_fun_a_fun$)
(declare-fun uvk$ (A$) A_a_a_fun_fun_a_a_fun_fun$)
(declare-fun uvl$ (A$) A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uvm$ (A_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)
(declare-fun uvn$ (A_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun uvo$ (A_a_fun$) A_a_fun_a_fun_a_fun$)
(declare-fun uvp$ (A$) A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun$)
(declare-fun uvq$ (A$) A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun id$aa () A_a_a_prod_fun_a_a_prod_fun_a_a_a_prod_fun_a_a_prod_fun_fun$)
(declare-fun id$ab () A_a_a_fun_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$)
(declare-fun id$ac () A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun id$ad () A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$)
(declare-fun id$ae () A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun id$af () A_a_fun_a_fun_a_fun_a_a_fun_a_fun_a_fun_fun$)
(declare-fun id$ag () A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_fun$)
(declare-fun id$ah () A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun id$ai () A_stream_stream_stream_a_stream_stream_stream_fun$)
(declare-fun id$aj () A_stream_stream_a_stream_stream_fun$)
(declare-fun id$ak () A_stream_a_stream_fun$)
(declare-fun id$al () A_a_a_prod_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_a_a_a_prod_fun_fun_fun$)
(declare-fun id$am () A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$)
(declare-fun id$an () A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun id$ao () A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun id$ap () A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun id$aq () A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_a_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_fun$)
(declare-fun id$ar () A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_fun$)
(declare-fun id$as () A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_fun$)
(declare-fun mod$a () A_stream_a_stream_a_stream_fun_fun$)
(declare-fun mod$b (A_stream_stream_stream_stream$ A_stream_stream_stream_stream$) A_stream_stream_stream_stream$)
(declare-fun mod$c () A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$)
(declare-fun mod$d () A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$)
(declare-fun plus$ () A_a_a_fun_fun$)
(declare-fun minus$ () A_a_a_fun_fun$)
(declare-fun plus$a () A_stream_a_stream_a_stream_fun_fun$)
(declare-fun plus$b (A_stream_stream_stream_stream$ A_stream_stream_stream_stream$) A_stream_stream_stream_stream$)
(declare-fun plus$c () A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$)
(declare-fun plus$d () A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$)
(declare-fun st_ap$ (A_a_a_prod_fun_stream$ A_stream$) A_a_prod_stream$)
(declare-fun times$ () A_a_a_fun_fun$)
(declare-fun minus$a () A_stream_a_stream_a_stream_fun_fun$)
(declare-fun minus$b (A_stream_stream_stream_stream$ A_stream_stream_stream_stream$) A_stream_stream_stream_stream$)
(declare-fun minus$c () A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$)
(declare-fun minus$d () A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$)
(declare-fun st_ap$a (A_a_a_a_prod_fun_fun_stream$ A_stream$) A_a_a_prod_fun_stream$)
(declare-fun st_ap$b (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$ A_a_a_a_prod_fun_fun_stream$) A_a_a_a_prod_fun_fun_stream$)
(declare-fun st_ap$c (A_a_fun_stream$ A_stream$) A_stream$)
(declare-fun st_ap$d (A_a_a_fun_fun_stream$ A_stream$) A_a_fun_stream$)
(declare-fun st_ap$e (A_a_a_prod_fun_a_fun_stream$ A_a_a_prod_fun_stream$) A_stream$)
(declare-fun st_ap$f (A_a_a_fun_fun_a_fun_stream$ A_a_a_fun_fun_stream$) A_stream$)
(declare-fun st_ap$g (A_a_a_a_fun_fun_fun_stream$ A_stream$) A_a_a_fun_fun_stream$)
(declare-fun st_ap$h (A_a_a_a_prod_fun_fun_a_fun_stream$ A_a_a_a_prod_fun_fun_stream$) A_stream$)
(declare-fun st_ap$i (A_a_a_a_a_prod_fun_fun_fun_stream$ A_stream$) A_a_a_a_prod_fun_fun_stream$)
(declare-fun st_ap$j (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$ A_a_a_a_prod_fun_fun_stream$) A_a_a_prod_fun_stream$)
(declare-fun st_ap$k (A_a_fun_a_fun_stream$ A_a_fun_stream$) A_stream$)
(declare-fun st_ap$l (A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ A_stream$) A_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun st_ap$m (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$ A_a_a_a_prod_fun_fun_stream$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$)
(declare-fun st_ap$n (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$ A_a_a_a_prod_fun_fun_stream$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun st_ap$o (A_a_fun_a_a_fun_a_fun_fun_stream$ A_a_fun_stream$) A_a_fun_a_fun_stream$)
(declare-fun st_ap$p (A_a_a_a_a_fun_fun_fun_fun_stream$ A_stream$) A_a_a_a_fun_fun_fun_stream$)
(declare-fun st_ap$q (A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$ A_stream$) A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun st_ap$r (A_stream_stream_stream_a_stream_stream_stream_fun_stream$ A_stream_stream_stream_stream$) A_stream_stream_stream_stream$)
(declare-fun st_ap$s (A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_stream$ A_stream_stream_stream_stream$) A_stream_stream_stream_a_stream_stream_stream_fun_stream$)
(declare-fun st_ap$t (A_stream_stream_a_stream_stream_fun_stream$ A_stream_stream_stream$) A_stream_stream_stream$)
(declare-fun st_ap$u (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$ A_stream_stream_stream$) A_stream_stream_a_stream_stream_fun_stream$)
(declare-fun st_ap$v (A_stream_a_stream_fun_stream$ A_stream_stream$) A_stream_stream$)
(declare-fun st_ap$w (A_stream_a_stream_a_stream_fun_fun_stream$ A_stream_stream$) A_stream_a_stream_fun_stream$)
(declare-fun st_ap$x (A_a_a_a_prod_fun_fun_a_a_prod_fun_stream$ A_a_a_a_prod_fun_fun_stream$) A_a_prod_stream$)
(declare-fun st_ap$y (A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$ A_stream$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$)
(declare-fun st_ap$z (A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$ A_stream$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun times$a () A_stream_a_stream_a_stream_fun_fun$)
(declare-fun times$b (A_stream_stream_stream_stream$ A_stream_stream_stream_stream$) A_stream_stream_stream_stream$)
(declare-fun times$c () A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$)
(declare-fun times$d () A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$)
(declare-fun fun_app$ (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$ A_a_a_a_prod_fun_fun$) A_a_a_prod_fun$)
(declare-fun numeral$ (Num$) A$)
(declare-fun st_ap$aa (A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ A_a_a_a_prod_fun_fun_stream$) A_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun st_ap$ab (A_a_a_prod_fun_a_a_prod_fun_stream$ A_a_a_prod_fun_stream$) A_a_prod_stream$)
(declare-fun st_ap$ac (A_a_a_fun_fun_a_a_fun_fun_stream$ A_a_a_fun_fun_stream$) A_a_fun_stream$)
(declare-fun st_ap$ad (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$ A_a_a_a_a_prod_fun_fun_fun_stream$) A_a_a_a_prod_fun_fun_stream$)
(declare-fun st_ap$ae (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$) A_a_a_prod_fun_stream$)
(declare-fun st_ap$af (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$) A_a_a_a_prod_fun_fun_stream$)
(declare-fun st_ap$ag (A_a_fun_a_fun_a_fun_stream$ A_a_fun_a_fun_stream$) A_stream$)
(declare-fun st_ap$ah (A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_stream$ A_a_a_a_fun_fun_fun_stream$) A_a_a_fun_fun_stream$)
(declare-fun st_ap$ai (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$) A_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun st_ap$aj (A_a_a_prod_fun_a_a_a_prod_fun_fun_stream$ A_a_a_prod_fun_stream$) A_a_a_prod_fun_stream$)
(declare-fun st_ap$ak (A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ A_a_a_fun_fun_stream$) A_a_a_fun_fun_stream$)
(declare-fun st_ap$al (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$ A_a_a_a_a_prod_fun_fun_fun_stream$) A_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun st_ap$am (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun st_ap$an (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$) A_a_fun_stream$)
(declare-fun st_ap$ao (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_stream$ A_a_a_a_fun_fun_fun_stream$) A_a_a_a_fun_fun_fun_stream$)
(declare-fun st_ap$ap (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$ A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$) A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun st_ap$aq (A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_stream$ A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$) A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun fun_app$a (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ A_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)
(declare-fun fun_app$b (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$ A_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun$)
(declare-fun fun_app$c (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun fun_app$d (A_a_fun_a_fun$ A_a_fun$) A$)
(declare-fun fun_app$e (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun$) A_a_fun_a_fun$)
(declare-fun fun_app$f (A_a_a_prod_fun$ A$) A_a_prod$)
(declare-fun fun_app$g (A_a_a_a_prod_fun_fun$ A$) A_a_a_prod_fun$)
(declare-fun fun_app$h (A_a_a_a_a_prod_fun_fun_fun$ A$) A_a_a_a_prod_fun_fun$)
(declare-fun fun_app$i (A_a_a_a_a_a_prod_fun_fun_fun_fun$ A$) A_a_a_a_a_prod_fun_fun_fun$)
(declare-fun fun_app$j (A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ A$) A_a_a_a_a_a_prod_fun_fun_fun_fun$)
(declare-fun fun_app$k (A_a_a_a_fun_fun_fun$ A$) A_a_a_fun_fun$)
(declare-fun fun_app$l (A_a_a_a_a_fun_fun_fun_fun$ A$) A_a_a_a_fun_fun_fun$)
(declare-fun fun_app$m (A_a_a_fun_fun$ A$) A_a_fun$)
(declare-fun fun_app$n (A_a_fun$ A$) A$)
(declare-fun fun_app$o (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) A_a_a_prod_fun$)
(declare-fun fun_app$p (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun$)
(declare-fun fun_app$q (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun$) A$)
(declare-fun fun_app$r (A_a_a_prod_fun_a_a_prod_fun$ A_a_a_prod_fun$) A_a_prod$)
(declare-fun fun_app$s (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$ A_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun$)
(declare-fun fun_app$t (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_fun$)
(declare-fun fun_app$u (A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun$ A_a_a_a_fun_fun_fun$) A_a_a_fun_fun$)
(declare-fun fun_app$v (A_a_a_fun_fun_a_a_fun_fun$ A_a_a_fun_fun$) A_a_fun$)
(declare-fun fun_app$w (A_a_a_a_prod_fun_fun_a_a_prod_fun$ A_a_a_a_prod_fun_fun$) A_a_prod$)
(declare-fun fun_app$x (A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun$) A_a_a_a_a_prod_fun_fun_fun$)
(declare-fun fun_app$y (A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ A$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)
(declare-fun fun_app$z (A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ A$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)
(declare-fun numeral$a (Num$) A_stream$)
(declare-fun numeral$b (Num$) A_stream_stream_stream$)
(declare-fun numeral$c (Num$) A_stream_stream_stream_stream$)
(declare-fun numeral$d (Num$) A_stream_stream$)
(declare-fun siterate$ (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$ A_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_stream$)
(declare-fun fun_app$aa (A_stream_a_stream_fun$ A_stream$) A_stream$)
(declare-fun fun_app$ab (A_stream_a_stream_a_stream_fun_fun$ A_stream$) A_stream_a_stream_fun$)
(declare-fun fun_app$ac (A_a_a_prod_fun_a_fun$ A_a_a_prod_fun$) A$)
(declare-fun fun_app$ad (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun$) A$)
(declare-fun fun_app$ae (A_a_a_a_prod_fun_fun_a_fun$ A_a_a_a_prod_fun_fun$) A$)
(declare-fun fun_app$af (A_stream_stream_stream_a_stream_stream_stream_fun$ A_stream_stream_stream$) A_stream_stream_stream$)
(declare-fun fun_app$ag (A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$ A_stream_stream_stream$) A_stream_stream_stream_a_stream_stream_stream_fun$)
(declare-fun fun_app$ah (A_stream_stream_a_stream_stream_fun$ A_stream_stream$) A_stream_stream$)
(declare-fun fun_app$ai (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ A_stream_stream$) A_stream_stream_a_stream_stream_fun$)
(declare-fun siterate$a (A_a_fun$ A$) A_stream$)
(declare-fun siterate$b (A_a_a_prod_fun_a_a_a_prod_fun_fun$ A_a_a_prod_fun$) A_a_a_prod_fun_stream$)
(declare-fun siterate$c (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$) A_a_a_fun_fun_stream$)
(declare-fun siterate$d (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun siterate$e (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun siterate$f (A_a_fun_a_a_fun_fun$ A_a_fun$) A_a_fun_stream$)
(declare-fun siterate$g (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ A_a_a_a_fun_fun_fun$) A_a_a_a_fun_fun_fun_stream$)
(declare-fun siterate$h (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun siterate$i (A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun siterate$j (A_a_prod_a_a_prod_fun$ A_a_prod$) A_a_prod_stream$)
(declare-fun siterate$k (A_a_a_prod_fun_a_fun_a_a_a_prod_fun_a_fun_fun$ A_a_a_prod_fun_a_fun$) A_a_a_prod_fun_a_fun_stream$)
(declare-fun siterate$l (A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ A_a_a_fun_fun_a_fun$) A_a_a_fun_fun_a_fun_stream$)
(declare-fun siterate$m (A_a_a_a_prod_fun_fun_a_fun_a_a_a_a_prod_fun_fun_a_fun_fun$ A_a_a_a_prod_fun_fun_a_fun$) A_a_a_a_prod_fun_fun_a_fun_stream$)
(declare-fun siterate$n (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$)
(declare-fun siterate$o (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$) A_a_fun_a_fun_stream$)
(declare-fun siterate$p (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun siterate$q (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun siterate$r (A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$ A_a_fun_a_a_fun_a_fun_fun$) A_a_fun_a_a_fun_a_fun_fun_stream$)
(declare-fun siterate$s (A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun$ A_a_a_a_a_fun_fun_fun_fun$) A_a_a_a_a_fun_fun_fun_fun_stream$)
(declare-fun siterate$t (A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_a_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_fun$ A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$) A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$)
(declare-fun siterate$u (A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_a_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_fun$ A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun$) A_stream_stream_stream_a_stream_stream_stream_a_stream_stream_stream_fun_fun_stream$)
(declare-fun siterate$v (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_a_stream_stream_a_stream_stream_a_stream_stream_fun_fun_fun$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$) A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$)
(declare-fun siterate$w (A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream_a_stream_a_stream_fun_fun$) A_stream_a_stream_a_stream_fun_fun_stream$)
(declare-fun siterate$x (A_a_a_a_prod_fun_fun_a_a_prod_fun_a_a_a_a_prod_fun_fun_a_a_prod_fun_fun$ A_a_a_a_prod_fun_fun_a_a_prod_fun$) A_a_a_a_prod_fun_fun_a_a_prod_fun_stream$)
(declare-fun siterate$y (A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun siterate$z (A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun siterate$aa (A_a_a_prod_fun_a_a_prod_fun_a_a_a_prod_fun_a_a_prod_fun_fun$ A_a_a_prod_fun_a_a_prod_fun$) A_a_a_prod_fun_a_a_prod_fun_stream$)
(declare-fun siterate$ab (A_a_a_fun_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ A_a_a_fun_fun_a_a_fun_fun$) A_a_a_fun_fun_a_a_fun_fun_stream$)
(declare-fun siterate$ac (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun siterate$ad (A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$)
(declare-fun siterate$ae (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)
(declare-fun siterate$af (A_a_fun_a_fun_a_fun_a_a_fun_a_fun_a_fun_fun$ A_a_fun_a_fun_a_fun$) A_a_fun_a_fun_a_fun_stream$)
(declare-fun siterate$ag (A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun$) A_a_a_a_fun_fun_fun_a_a_a_fun_fun_fun_stream$)
(declare-fun siterate$ah (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun siterate$ai (A_stream_stream_stream_a_stream_stream_stream_fun$ A_stream_stream_stream$) A_stream_stream_stream_stream$)
(declare-fun siterate$aj (A_stream_stream_a_stream_stream_fun$ A_stream_stream$) A_stream_stream_stream$)
(declare-fun siterate$ak (A_stream_a_stream_fun$ A_stream$) A_stream_stream$)
(declare-fun siterate$al (A_a_a_prod_fun_a_a_a_prod_fun_fun_a_a_a_prod_fun_a_a_a_prod_fun_fun_fun$ A_a_a_prod_fun_a_a_a_prod_fun_fun$) A_a_a_prod_fun_a_a_a_prod_fun_fun_stream$)
(declare-fun siterate$am (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$) A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$)
(declare-fun siterate$an (A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun siterate$ao (A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun_stream$)
(declare-fun siterate$ap (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$) A_a_fun_a_a_fun_fun_stream$)
(declare-fun siterate$aq (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_a_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_fun$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$) A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_stream$)
(declare-fun siterate$ar (A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_fun$ A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$) A_a_a_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun_stream$)
(declare-fun siterate$as (A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_fun$ A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun$) A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_a_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_fun_stream$)
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$ (uus$ ?v0) ?v1) (fun_app$ (fun_app$a ?v0 ?v1) ?v1)) :pattern ((fun_app$ (uus$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$b (uut$ ?v0) ?v1) (fun_app$b (fun_app$c ?v0 ?v1) ?v1)) :pattern ((fun_app$b (uut$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$) (?v1 A_a_fun$)) (! (= (fun_app$d (uuu$ ?v0) ?v1) (fun_app$d (fun_app$e ?v0 ?v1) ?v1)) :pattern ((fun_app$d (uuu$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A$)) (! (= (fun_app$f (uun$ ?v0) ?v1) (fun_app$f (fun_app$g ?v0 ?v1) ?v1)) :pattern ((fun_app$f (uun$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A$)) (! (= (fun_app$g (uuo$ ?v0) ?v1) (fun_app$g (fun_app$h ?v0 ?v1) ?v1)) :pattern ((fun_app$g (uuo$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 A_a_a_a_a_a_prod_fun_fun_fun_fun$) (?v1 A$)) (! (= (fun_app$h (uur$ ?v0) ?v1) (fun_app$h (fun_app$i ?v0 ?v1) ?v1)) :pattern ((fun_app$h (uur$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$) (?v1 A$)) (! (= (fun_app$i (uuw$ ?v0) ?v1) (fun_app$i (fun_app$j ?v0 ?v1) ?v1)) :pattern ((fun_app$i (uuw$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 A_a_a_a_a_fun_fun_fun_fun$) (?v1 A$)) (! (= (fun_app$k (uuv$ ?v0) ?v1) (fun_app$k (fun_app$l ?v0 ?v1) ?v1)) :pattern ((fun_app$k (uuv$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$) (?v1 A$)) (! (= (fun_app$m (uuq$ ?v0) ?v1) (fun_app$m (fun_app$k ?v0 ?v1) ?v1)) :pattern ((fun_app$m (uuq$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$)) (! (= (fun_app$n (uup$ ?v0) ?v1) (fun_app$n (fun_app$m ?v0 ?v1) ?v1)) :pattern ((fun_app$n (uup$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$f (fun_app$g uua$ ?v0) ?v1) (pair$ ?v1 (fun_app$n (fun_app$m minus$ (fun_app$n (fun_app$m plus$ ?v0) ?v1)) (fun_app$n (fun_app$m times$ (numeral$ (bit0$ one$))) (fun_app$n (fun_app$m mod$ ?v0) ?v1))))) :pattern ((fun_app$f (fun_app$g uua$ ?v0) ?v1)))) :named a10))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$f (fun_app$g uu$ ?v0) ?v1) (pair$ ?v0 ?v1)) :pattern ((fun_app$f (fun_app$g uu$ ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$)) (! (= (fun_app$o (uvm$ ?v0) ?v1) (fun_app$ ?v1 ?v0)) :pattern ((fun_app$o (uvm$ ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)) (! (= (fun_app$p (uvn$ ?v0) ?v1) (fun_app$b ?v1 ?v0)) :pattern ((fun_app$p (uvn$ ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun_a_fun$)) (! (= (fun_app$q (uvo$ ?v0) ?v1) (fun_app$d ?v1 ?v0)) :pattern ((fun_app$q (uvo$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 A$) (?v1 A_a_a_prod_fun$)) (! (= (fun_app$r (uvh$ ?v0) ?v1) (fun_app$f ?v1 ?v0)) :pattern ((fun_app$r (uvh$ ?v0) ?v1)))) :named a15))
(assert (! (forall ((?v0 A$) (?v1 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$ (uvi$ ?v0) ?v1) (fun_app$g ?v1 ?v0)) :pattern ((fun_app$ (uvi$ ?v0) ?v1)))) :named a16))
(assert (! (forall ((?v0 A$) (?v1 A_a_a_a_a_prod_fun_fun_fun$)) (! (= (fun_app$s (uvl$ ?v0) ?v1) (fun_app$h ?v1 ?v0)) :pattern ((fun_app$s (uvl$ ?v0) ?v1)))) :named a17))
(assert (! (forall ((?v0 A$) (?v1 A_a_a_a_a_a_prod_fun_fun_fun_fun$)) (! (= (fun_app$t (uvq$ ?v0) ?v1) (fun_app$i ?v1 ?v0)) :pattern ((fun_app$t (uvq$ ?v0) ?v1)))) :named a18))
(assert (! (forall ((?v0 A$) (?v1 A_a_a_a_fun_fun_fun$)) (! (= (fun_app$u (uvp$ ?v0) ?v1) (fun_app$k ?v1 ?v0)) :pattern ((fun_app$u (uvp$ ?v0) ?v1)))) :named a19))
(assert (! (forall ((?v0 A$) (?v1 A_a_a_fun_fun$)) (! (= (fun_app$v (uvk$ ?v0) ?v1) (fun_app$m ?v1 ?v0)) :pattern ((fun_app$v (uvk$ ?v0) ?v1)))) :named a20))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun$)) (! (= (fun_app$d (uvj$ ?v0) ?v1) (fun_app$n ?v1 ?v0)) :pattern ((fun_app$d (uvj$ ?v0) ?v1)))) :named a21))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_prod_fun$) (?v1 A_a_a_a_prod_fun_fun$) (?v2 A$)) (! (= (fun_app$f (fun_app$ (uvc$ ?v0) ?v1) ?v2) (fun_app$w ?v0 ?v1)) :pattern ((fun_app$f (fun_app$ (uvc$ ?v0) ?v1) ?v2)))) :named a22))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) (?v1 A_a_a_a_prod_fun_fun$) (?v2 A$)) (! (= (fun_app$g (fun_app$b (uvd$ ?v0) ?v1) ?v2) (fun_app$ ?v0 ?v1)) :pattern ((fun_app$g (fun_app$b (uvd$ ?v0) ?v1) ?v2)))) :named a23))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun$) (?v2 A$)) (! (= (fun_app$h (fun_app$x (uvg$ ?v0) ?v1) ?v2) (fun_app$b ?v0 ?v1)) :pattern ((fun_app$h (fun_app$x (uvg$ ?v0) ?v1) ?v2)))) :named a24))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$f (fun_app$g (uux$ ?v0) ?v1) ?v2) (fun_app$f ?v0 ?v1)) :pattern ((fun_app$f (fun_app$g (uux$ ?v0) ?v1) ?v2)))) :named a25))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A$) (?v2 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$ (fun_app$y (uve$ ?v0) ?v1) ?v2) (fun_app$g ?v0 ?v1)) :pattern ((fun_app$ (fun_app$y (uve$ ?v0) ?v1) ?v2)))) :named a26))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$g (fun_app$h (uuy$ ?v0) ?v1) ?v2) (fun_app$g ?v0 ?v1)) :pattern ((fun_app$g (fun_app$h (uuy$ ?v0) ?v1) ?v2)))) :named a27))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A$) (?v2 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$b (fun_app$z (uvf$ ?v0) ?v1) ?v2) (fun_app$h ?v0 ?v1)) :pattern ((fun_app$b (fun_app$z (uvf$ ?v0) ?v1) ?v2)))) :named a28))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$h (fun_app$i (uvb$ ?v0) ?v1) ?v2) (fun_app$h ?v0 ?v1)) :pattern ((fun_app$h (fun_app$i (uvb$ ?v0) ?v1) ?v2)))) :named a29))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$m (fun_app$k (uva$ ?v0) ?v1) ?v2) (fun_app$m ?v0 ?v1)) :pattern ((fun_app$m (fun_app$k (uva$ ?v0) ?v1) ?v2)))) :named a30))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A$)) (! (= (fun_app$n (fun_app$m (uuz$ ?v0) ?v1) ?v2) (fun_app$n ?v0 ?v1)) :pattern ((fun_app$n (fun_app$m (uuz$ ?v0) ?v1) ?v2)))) :named a31))
(assert (! (forall ((?v0 A_a_prod$) (?v1 A$)) (! (= (fun_app$f (uud$ ?v0) ?v1) ?v0) :pattern ((fun_app$f (uud$ ?v0) ?v1)))) :named a32))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$ (uui$ ?v0) ?v1) ?v0) :pattern ((fun_app$ (uui$ ?v0) ?v1)))) :named a33))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A$)) (! (= (fun_app$g (uue$ ?v0) ?v1) ?v0) :pattern ((fun_app$g (uue$ ?v0) ?v1)))) :named a34))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$b (uuj$ ?v0) ?v1) ?v0) :pattern ((fun_app$b (uuj$ ?v0) ?v1)))) :named a35))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A$)) (! (= (fun_app$h (uuh$ ?v0) ?v1) ?v0) :pattern ((fun_app$h (uuh$ ?v0) ?v1)))) :named a36))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A$)) (! (= (fun_app$i (uum$ ?v0) ?v1) ?v0) :pattern ((fun_app$i (uum$ ?v0) ?v1)))) :named a37))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$)) (! (= (fun_app$k (uul$ ?v0) ?v1) ?v0) :pattern ((fun_app$k (uul$ ?v0) ?v1)))) :named a38))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (! (= (fun_app$m (uug$ ?v0) ?v1) ?v0) :pattern ((fun_app$m (uug$ ?v0) ?v1)))) :named a39))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun$)) (! (= (fun_app$d (uuk$ ?v0) ?v1) ?v0) :pattern ((fun_app$d (uuk$ ?v0) ?v1)))) :named a40))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$n (uuf$ ?v0) ?v1) ?v0) :pattern ((fun_app$n (uuf$ ?v0) ?v1)))) :named a41))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$)) (! (= (fun_app$b uub$ ?v0) ?v0) :pattern ((fun_app$b uub$ ?v0)))) :named a42))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$n uuc$ ?v0) ?v0) :pattern ((fun_app$n uuc$ ?v0)))) :named a43))
(assert (! (not (= (st_ap$ (st_ap$a (siterate$ id$ uu$) ys$) (fun_app$aa (fun_app$ab minus$a (fun_app$aa (fun_app$ab plus$a xs$) ys$)) (fun_app$aa (fun_app$ab times$a (numeral$a (bit0$ one$))) (fun_app$aa (fun_app$ab mod$a xs$) ys$)))) (st_ap$ (st_ap$a (siterate$ id$ uua$) xs$) ys$))) :named a44))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_a_a_a_prod_fun_fun$)) (= (= (siterate$ id$ ?v0) (siterate$ id$ ?v1)) (= ?v0 ?v1))) :named a45))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (= (siterate$a id$a ?v0) (siterate$a id$a ?v1)) (= ?v0 ?v1))) :named a46))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A_a_a_prod_fun$)) (= (= (siterate$b id$b ?v0) (siterate$b id$b ?v1)) (= ?v0 ?v1))) :named a47))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_a_a_fun_fun$)) (= (= (siterate$c id$c ?v0) (siterate$c id$c ?v1)) (= ?v0 ?v1))) :named a48))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_a_prod_fun_fun_fun$)) (= (= (siterate$d id$d ?v0) (siterate$d id$d ?v1)) (= ?v0 ?v1))) :named a49))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$)) (= (= (siterate$e id$e ?v0) (siterate$e id$e ?v1)) (= ?v0 ?v1))) :named a50))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$)) (= (= (siterate$f id$f ?v0) (siterate$f id$f ?v1)) (= ?v0 ?v1))) :named a51))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$) (?v1 A_a_a_a_fun_fun_fun$)) (= (= (siterate$g id$g ?v0) (siterate$g id$g ?v1)) (= ?v0 ?v1))) :named a52))
(assert (! (forall ((?v0 A_a_a_a_a_a_prod_fun_fun_fun_fun$) (?v1 A_a_a_a_a_a_prod_fun_fun_fun_fun$)) (= (= (siterate$h id$h ?v0) (siterate$h id$h ?v1)) (= ?v0 ?v1))) :named a53))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$)) (= (= (siterate$i id$i ?v0) (siterate$i id$i ?v1)) (= ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$b (siterate$e id$e uub$) ?v0) ?v0)) :named a55))
(assert (! (forall ((?v0 A_stream$)) (= (st_ap$c (siterate$f id$f uuc$) ?v0) ?v0)) :named a56))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A$)) (= (st_ap$ (siterate$b id$b ?v0) (siterate$a id$a ?v1)) (siterate$j id$j (fun_app$f ?v0 ?v1)))) :named a57))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A$)) (= (st_ap$a (siterate$ id$ ?v0) (siterate$a id$a ?v1)) (siterate$b id$b (fun_app$g ?v0 ?v1)))) :named a58))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun$)) (= (st_ap$b (siterate$e id$e ?v0) (siterate$ id$ ?v1)) (siterate$ id$ (fun_app$b ?v0 ?v1)))) :named a59))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (= (st_ap$c (siterate$f id$f ?v0) (siterate$a id$a ?v1)) (siterate$a id$a (fun_app$n ?v0 ?v1)))) :named a60))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A$)) (= (st_ap$d (siterate$c id$c ?v0) (siterate$a id$a ?v1)) (siterate$f id$f (fun_app$m ?v0 ?v1)))) :named a61))
(assert (! (forall ((?v0 A_a_a_prod_fun_a_fun$) (?v1 A_a_a_prod_fun$)) (= (st_ap$e (siterate$k id$k ?v0) (siterate$b id$b ?v1)) (siterate$a id$a (fun_app$ac ?v0 ?v1)))) :named a62))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$) (?v1 A_a_a_fun_fun$)) (= (st_ap$f (siterate$l id$l ?v0) (siterate$c id$c ?v1)) (siterate$a id$a (fun_app$ad ?v0 ?v1)))) :named a63))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$) (?v1 A$)) (= (st_ap$g (siterate$g id$g ?v0) (siterate$a id$a ?v1)) (siterate$c id$c (fun_app$k ?v0 ?v1)))) :named a64))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_fun$) (?v1 A_a_a_a_prod_fun_fun$)) (= (st_ap$h (siterate$m id$m ?v0) (siterate$ id$ ?v1)) (siterate$a id$a (fun_app$ae ?v0 ?v1)))) :named a65))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A$)) (= (st_ap$i (siterate$d id$d ?v0) (siterate$a id$a ?v1)) (siterate$ id$ (fun_app$h ?v0 ?v1)))) :named a66))
(assert (! (forall ((?v0 A_a_prod$) (?v1 A_stream$)) (= (st_ap$ (siterate$b id$b (uud$ ?v0)) ?v1) (siterate$j id$j ?v0))) :named a67))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A_stream$)) (= (st_ap$a (siterate$ id$ (uue$ ?v0)) ?v1) (siterate$b id$b ?v0))) :named a68))
(assert (! (forall ((?v0 A$) (?v1 A_stream$)) (= (st_ap$c (siterate$f id$f (uuf$ ?v0)) ?v1) (siterate$a id$a ?v0))) :named a69))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_stream$)) (= (st_ap$d (siterate$c id$c (uug$ ?v0)) ?v1) (siterate$f id$f ?v0))) :named a70))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_stream$)) (= (st_ap$i (siterate$d id$d (uuh$ ?v0)) ?v1) (siterate$ id$ ?v0))) :named a71))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$j (siterate$n id$n (uui$ ?v0)) ?v1) (siterate$b id$b ?v0))) :named a72))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$b (siterate$e id$e (uuj$ ?v0)) ?v1) (siterate$ id$ ?v0))) :named a73))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun_stream$)) (= (st_ap$k (siterate$o id$o (uuk$ ?v0)) ?v1) (siterate$a id$a ?v0))) :named a74))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_stream$)) (= (st_ap$g (siterate$g id$g (uul$ ?v0)) ?v1) (siterate$c id$c ?v0))) :named a75))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A_stream$)) (= (st_ap$l (siterate$h id$h (uum$ ?v0)) ?v1) (siterate$d id$d ?v0))) :named a76))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_stream$)) (= (st_ap$ (st_ap$a (siterate$ id$ ?v0) ?v1) ?v1) (st_ap$ (siterate$b id$b (uun$ ?v0)) ?v1))) :named a77))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A_stream$)) (= (st_ap$a (st_ap$i (siterate$d id$d ?v0) ?v1) ?v1) (st_ap$a (siterate$ id$ (uuo$ ?v0)) ?v1))) :named a78))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_stream$)) (= (st_ap$c (st_ap$d (siterate$c id$c ?v0) ?v1) ?v1) (st_ap$c (siterate$f id$f (uup$ ?v0)) ?v1))) :named a79))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$) (?v1 A_stream$)) (= (st_ap$d (st_ap$g (siterate$g id$g ?v0) ?v1) ?v1) (st_ap$d (siterate$c id$c (uuq$ ?v0)) ?v1))) :named a80))
(assert (! (forall ((?v0 A_a_a_a_a_a_prod_fun_fun_fun_fun$) (?v1 A_stream$)) (= (st_ap$i (st_ap$l (siterate$h id$h ?v0) ?v1) ?v1) (st_ap$i (siterate$d id$d (uur$ ?v0)) ?v1))) :named a81))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$j (st_ap$m (siterate$p id$p ?v0) ?v1) ?v1) (st_ap$j (siterate$n id$n (uus$ ?v0)) ?v1))) :named a82))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$b (st_ap$n (siterate$q id$q ?v0) ?v1) ?v1) (st_ap$b (siterate$e id$e (uut$ ?v0)) ?v1))) :named a83))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$) (?v1 A_a_fun_stream$)) (= (st_ap$k (st_ap$o (siterate$r id$r ?v0) ?v1) ?v1) (st_ap$k (siterate$o id$o (uuu$ ?v0)) ?v1))) :named a84))
(assert (! (forall ((?v0 A_a_a_a_a_fun_fun_fun_fun$) (?v1 A_stream$)) (= (st_ap$g (st_ap$p (siterate$s id$s ?v0) ?v1) ?v1) (st_ap$g (siterate$g id$g (uuv$ ?v0)) ?v1))) :named a85))
(assert (! (forall ((?v0 A_a_a_a_a_a_a_prod_fun_fun_fun_fun_fun$) (?v1 A_stream$)) (= (st_ap$l (st_ap$q (siterate$t id$t ?v0) ?v1) ?v1) (st_ap$l (siterate$h id$h (uuw$ ?v0)) ?v1))) :named a86))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$) (?v1 A_stream_stream_stream_stream$)) (! (= (mod$b ?v0 ?v1) (st_ap$r (st_ap$s (siterate$u id$u mod$c) ?v0) ?v1)) :pattern ((mod$b ?v0 ?v1)))) :named a87))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (! (= (fun_app$af (fun_app$ag mod$c ?v0) ?v1) (st_ap$t (st_ap$u (siterate$v id$v mod$d) ?v0) ?v1)) :pattern ((fun_app$af (fun_app$ag mod$c ?v0) ?v1)))) :named a88))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (! (= (fun_app$ah (fun_app$ai mod$d ?v0) ?v1) (st_ap$v (st_ap$w (siterate$w id$w mod$a) ?v0) ?v1)) :pattern ((fun_app$ah (fun_app$ai mod$d ?v0) ?v1)))) :named a89))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (! (= (fun_app$aa (fun_app$ab mod$a ?v0) ?v1) (st_ap$c (st_ap$d (siterate$c id$c mod$) ?v0) ?v1)) :pattern ((fun_app$aa (fun_app$ab mod$a ?v0) ?v1)))) :named a90))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$) (?v1 A_stream_stream_stream_stream$)) (! (= (plus$b ?v0 ?v1) (st_ap$r (st_ap$s (siterate$u id$u plus$c) ?v0) ?v1)) :pattern ((plus$b ?v0 ?v1)))) :named a91))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (! (= (fun_app$af (fun_app$ag plus$c ?v0) ?v1) (st_ap$t (st_ap$u (siterate$v id$v plus$d) ?v0) ?v1)) :pattern ((fun_app$af (fun_app$ag plus$c ?v0) ?v1)))) :named a92))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (! (= (fun_app$ah (fun_app$ai plus$d ?v0) ?v1) (st_ap$v (st_ap$w (siterate$w id$w plus$a) ?v0) ?v1)) :pattern ((fun_app$ah (fun_app$ai plus$d ?v0) ?v1)))) :named a93))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (! (= (fun_app$aa (fun_app$ab plus$a ?v0) ?v1) (st_ap$c (st_ap$d (siterate$c id$c plus$) ?v0) ?v1)) :pattern ((fun_app$aa (fun_app$ab plus$a ?v0) ?v1)))) :named a94))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$) (?v1 A_stream_stream_stream_stream$)) (! (= (minus$b ?v0 ?v1) (st_ap$r (st_ap$s (siterate$u id$u minus$c) ?v0) ?v1)) :pattern ((minus$b ?v0 ?v1)))) :named a95))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (! (= (fun_app$af (fun_app$ag minus$c ?v0) ?v1) (st_ap$t (st_ap$u (siterate$v id$v minus$d) ?v0) ?v1)) :pattern ((fun_app$af (fun_app$ag minus$c ?v0) ?v1)))) :named a96))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (! (= (fun_app$ah (fun_app$ai minus$d ?v0) ?v1) (st_ap$v (st_ap$w (siterate$w id$w minus$a) ?v0) ?v1)) :pattern ((fun_app$ah (fun_app$ai minus$d ?v0) ?v1)))) :named a97))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (! (= (fun_app$aa (fun_app$ab minus$a ?v0) ?v1) (st_ap$c (st_ap$d (siterate$c id$c minus$) ?v0) ?v1)) :pattern ((fun_app$aa (fun_app$ab minus$a ?v0) ?v1)))) :named a98))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$) (?v1 A_stream_stream_stream_stream$)) (! (= (times$b ?v0 ?v1) (st_ap$r (st_ap$s (siterate$u id$u times$c) ?v0) ?v1)) :pattern ((times$b ?v0 ?v1)))) :named a99))
(assert (! (forall ((?v0 A_stream_stream_stream$) (?v1 A_stream_stream_stream$)) (! (= (fun_app$af (fun_app$ag times$c ?v0) ?v1) (st_ap$t (st_ap$u (siterate$v id$v times$d) ?v0) ?v1)) :pattern ((fun_app$af (fun_app$ag times$c ?v0) ?v1)))) :named a100))
(assert (! (forall ((?v0 A_stream_stream$) (?v1 A_stream_stream$)) (! (= (fun_app$ah (fun_app$ai times$d ?v0) ?v1) (st_ap$v (st_ap$w (siterate$w id$w times$a) ?v0) ?v1)) :pattern ((fun_app$ah (fun_app$ai times$d ?v0) ?v1)))) :named a101))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (! (= (fun_app$aa (fun_app$ab times$a ?v0) ?v1) (st_ap$c (st_ap$d (siterate$c id$c times$) ?v0) ?v1)) :pattern ((fun_app$aa (fun_app$ab times$a ?v0) ?v1)))) :named a102))
(assert (! (forall ((?v0 A_a_a_prod_fun$) (?v1 A_stream$) (?v2 A_stream$)) (= (st_ap$ (st_ap$a (siterate$ id$ (uux$ ?v0)) ?v1) ?v2) (st_ap$ (siterate$b id$b ?v0) ?v1))) :named a103))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_stream$) (?v2 A_stream$)) (= (st_ap$a (st_ap$i (siterate$d id$d (uuy$ ?v0)) ?v1) ?v2) (st_ap$a (siterate$ id$ ?v0) ?v1))) :named a104))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_stream$) (?v2 A_stream$)) (= (st_ap$c (st_ap$d (siterate$c id$c (uuz$ ?v0)) ?v1) ?v2) (st_ap$c (siterate$f id$f ?v0) ?v1))) :named a105))
(assert (! (forall ((?v0 A_a_a_fun_fun$) (?v1 A_stream$) (?v2 A_stream$)) (= (st_ap$d (st_ap$g (siterate$g id$g (uva$ ?v0)) ?v1) ?v2) (st_ap$d (siterate$c id$c ?v0) ?v1))) :named a106))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A_stream$) (?v2 A_stream$)) (= (st_ap$i (st_ap$l (siterate$h id$h (uvb$ ?v0)) ?v1) ?v2) (st_ap$i (siterate$d id$d ?v0) ?v1))) :named a107))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_prod_fun$) (?v1 A_a_a_a_prod_fun_fun_stream$) (?v2 A_stream$)) (= (st_ap$ (st_ap$j (siterate$n id$n (uvc$ ?v0)) ?v1) ?v2) (st_ap$x (siterate$x id$x ?v0) ?v1))) :named a108))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_stream$) (?v2 A_stream$)) (= (st_ap$a (st_ap$b (siterate$e id$e (uvd$ ?v0)) ?v1) ?v2) (st_ap$j (siterate$n id$n ?v0) ?v1))) :named a109))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$) (?v1 A_stream$) (?v2 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$j (st_ap$y (siterate$i id$i (uve$ ?v0)) ?v1) ?v2) (st_ap$a (siterate$ id$ ?v0) ?v1))) :named a110))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun$) (?v1 A_stream$) (?v2 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$b (st_ap$z (siterate$y id$y (uvf$ ?v0)) ?v1) ?v2) (st_ap$i (siterate$d id$d ?v0) ?v1))) :named a111))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun$) (?v1 A_a_a_a_prod_fun_fun_stream$) (?v2 A_stream$)) (= (st_ap$i (st_ap$aa (siterate$z id$z (uvg$ ?v0)) ?v1) ?v2) (st_ap$b (siterate$e id$e ?v0) ?v1))) :named a112))
(assert (! (forall ((?v0 A_a_a_prod_fun_stream$) (?v1 A$)) (= (st_ap$ ?v0 (siterate$a id$a ?v1)) (st_ap$ab (siterate$aa id$aa (uvh$ ?v1)) ?v0))) :named a113))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_stream$) (?v1 A$)) (= (st_ap$a ?v0 (siterate$a id$a ?v1)) (st_ap$j (siterate$n id$n (uvi$ ?v1)) ?v0))) :named a114))
(assert (! (forall ((?v0 A_a_fun_stream$) (?v1 A$)) (= (st_ap$c ?v0 (siterate$a id$a ?v1)) (st_ap$k (siterate$o id$o (uvj$ ?v1)) ?v0))) :named a115))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$) (?v1 A$)) (= (st_ap$d ?v0 (siterate$a id$a ?v1)) (st_ap$ac (siterate$ab id$ab (uvk$ ?v1)) ?v0))) :named a116))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun_stream$) (?v1 A$)) (= (st_ap$i ?v0 (siterate$a id$a ?v1)) (st_ap$ad (siterate$ac id$ac (uvl$ ?v1)) ?v0))) :named a117))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_stream$) (?v1 A_a_a_a_prod_fun_fun$)) (= (st_ap$j ?v0 (siterate$ id$ ?v1)) (st_ap$ae (siterate$ad id$ad (uvm$ ?v1)) ?v0))) :named a118))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$) (?v1 A_a_a_a_prod_fun_fun$)) (= (st_ap$b ?v0 (siterate$ id$ ?v1)) (st_ap$af (siterate$ae id$ae (uvn$ ?v1)) ?v0))) :named a119))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$) (?v1 A_a_fun$)) (= (st_ap$k ?v0 (siterate$f id$f ?v1)) (st_ap$ag (siterate$af id$af (uvo$ ?v1)) ?v0))) :named a120))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_stream$) (?v1 A$)) (= (st_ap$g ?v0 (siterate$a id$a ?v1)) (st_ap$ah (siterate$ag id$ag (uvp$ ?v1)) ?v0))) :named a121))
(assert (! (forall ((?v0 A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$) (?v1 A$)) (= (st_ap$l ?v0 (siterate$a id$a ?v1)) (st_ap$ai (siterate$ah id$ah (uvq$ ?v1)) ?v0))) :named a122))
(assert (! (forall ((?v0 Num$)) (= (siterate$ai id$ai (numeral$b ?v0)) (numeral$c ?v0))) :named a123))
(assert (! (forall ((?v0 Num$)) (= (siterate$aj id$aj (numeral$d ?v0)) (numeral$b ?v0))) :named a124))
(assert (! (forall ((?v0 Num$)) (= (siterate$ak id$ak (numeral$a ?v0)) (numeral$d ?v0))) :named a125))
(assert (! (forall ((?v0 Num$)) (= (siterate$a id$a (numeral$ ?v0)) (numeral$a ?v0))) :named a126))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_stream$)) (= (st_ap$b (siterate$e id$e id$) ?v0) ?v0)) :named a127))
(assert (! (forall ((?v0 A_stream$)) (= (st_ap$c (siterate$f id$f id$a) ?v0) ?v0)) :named a128))
(assert (! (forall ((?v0 A_a_a_prod_fun_stream$)) (= (st_ap$aj (siterate$al id$al id$b) ?v0) ?v0)) :named a129))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$)) (= (st_ap$ak (siterate$am id$am id$c) ?v0) ?v0)) :named a130))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_fun_stream$)) (= (st_ap$al (siterate$an id$an id$d) ?v0) ?v0)) :named a131))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun_a_a_a_a_prod_fun_fun_fun_stream$)) (= (st_ap$am (siterate$ao id$ao id$e) ?v0) ?v0)) :named a132))
(assert (! (forall ((?v0 A_a_fun_stream$)) (= (st_ap$an (siterate$ap id$ap id$f) ?v0) ?v0)) :named a133))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_stream$)) (= (st_ap$ao (siterate$aq id$aq id$g) ?v0) ?v0)) :named a134))
(assert (! (forall ((?v0 A_a_a_a_a_a_prod_fun_fun_fun_fun_stream$)) (= (st_ap$ap (siterate$ar id$ar id$h) ?v0) ?v0)) :named a135))
(assert (! (forall ((?v0 A_a_a_a_a_prod_fun_fun_a_a_a_prod_fun_fun_fun_stream$)) (= (st_ap$aq (siterate$as id$as id$i) ?v0) ?v0)) :named a136))
(check-sat)
;(get-unsat-core)
