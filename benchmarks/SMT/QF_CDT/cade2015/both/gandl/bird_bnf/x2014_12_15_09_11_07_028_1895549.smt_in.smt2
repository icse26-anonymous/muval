; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 695
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort Nat$ 0)
(declare-fun n$ () Nat$)
(declare-fun min$ (Nat$ Nat$) Nat$)
(declare-fun suc$ (Nat$) Nat$)
(declare-fun zero$ () Nat$)
(assert (! (not (= (min$ n$ (suc$ n$)) n$)) :named a0))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (min$ (suc$ ?v0) (suc$ ?v1)) (suc$ (min$ ?v0 ?v1)))) :named a1))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (min$ (min$ ?v0 ?v1) ?v1) (min$ ?v0 ?v1))) :named a2))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (min$ ?v0 (min$ ?v0 ?v1)) (min$ ?v0 ?v1))) :named a3))
(assert (! (forall ((?v0 Nat$)) (= (min$ ?v0 ?v0) ?v0)) :named a4))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (suc$ ?v0) (suc$ ?v1)) (= ?v0 ?v1))) :named a5))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (suc$ ?v0) (suc$ ?v1)) (= ?v0 ?v1))) :named a6))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (min$ (min$ ?v0 ?v1) ?v2) (min$ ?v0 (min$ ?v1 ?v2)))) :named a7))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (min$ ?v0 (min$ ?v1 ?v2)) (min$ ?v1 (min$ ?v0 ?v2)))) :named a8))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (min$ ?v0 ?v1) (min$ ?v1 ?v0))) :named a9))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (=> (= (suc$ ?v0) (suc$ ?v1)) (= ?v0 ?v1))) :named a10))
(assert (! (forall ((?v0 Nat$)) (not (= ?v0 (suc$ ?v0)))) :named a11))
(assert (! (forall ((?v0 Nat$)) (= (min$ zero$ ?v0) zero$)) :named a12))
(assert (! (forall ((?v0 Nat$)) (= (min$ ?v0 zero$) zero$)) :named a13))
(check-sat)
;(get-unsat-core)
