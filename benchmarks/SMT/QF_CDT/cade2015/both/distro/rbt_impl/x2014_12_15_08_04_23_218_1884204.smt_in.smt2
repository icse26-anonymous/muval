; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 299
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort A_set$ 0)
(declare-datatypes () ((A_list$ (nil$) (cons$ (hd$ A$) (tl$ A_list$)))
  (Color$ (r$) (b$))
  (A_b_rbt$ (empty$) (branch$ (select$ Color$) (selecta$ A_b_rbt$) (selectb$ A$) (selectc$ B$) (selectd$ A_b_rbt$)))))
(declare-fun k$ () A$)
(declare-fun t2$ () A_b_rbt$)
(declare-fun set$ (A_list$) A_set$)
(declare-fun keys$ (A_b_rbt$) A_list$)
(declare-fun less$ (A$ A$) Bool)
(declare-fun member$ (A$ A_set$) Bool)
(assert (! (not (forall ((?v0 A$)) (=> (member$ ?v0 (set$ (keys$ t2$))) (less$ k$ ?v0)))) :named a0))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (not (less$ ?v0 ?v1)) (or (less$ ?v1 ?v0) (= ?v0 ?v1)))) :named a1))
(assert (! (forall ((?v0 A$) (?v1 A$)) (= (not (= ?v0 ?v1)) (or (less$ ?v0 ?v1) (less$ ?v1 ?v0)))) :named a2))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (and (=> (less$ ?v0 ?v1) false) (and (=> (= ?v0 ?v1) false) (=> (less$ ?v1 ?v0) false))) false)) :named a3))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (and (less$ ?v0 ?v1) (=> (not false) (less$ ?v1 ?v0))) false)) :named a4))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (less$ ?v0 ?v1) (less$ ?v1 ?v2)) (less$ ?v0 ?v2))) :named a5))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (less$ ?v0 ?v1) (less$ ?v1 ?v2)) (less$ ?v0 ?v2))) :named a6))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (less$ ?v0 ?v1) (less$ ?v2 ?v0)) (less$ ?v2 ?v1))) :named a7))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (and (less$ ?v0 ?v1) (less$ ?v1 ?v0)) false)) :named a8))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (and (less$ ?v0 ?v1) (less$ ?v1 ?v0)) false)) :named a9))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (and (less$ ?v0 ?v1) (less$ ?v1 ?v0)) false)) :named a10))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A$)) (=> (and (less$ ?v0 ?v1) (= ?v1 ?v2)) (less$ ?v0 ?v2))) :named a11))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (less$ ?v0 ?v1) (= (= ?v1 ?v0) false))) :named a12))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (less$ ?v0 ?v1) (= (= ?v0 ?v1) false))) :named a13))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 Bool)) (=> (less$ ?v0 ?v1) (= (=> (less$ ?v1 ?v0) ?v2) true))) :named a14))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (less$ ?v0 ?v1) (= (not (less$ ?v1 ?v0)) true))) :named a15))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (less$ ?v0 ?v1) (not (less$ ?v1 ?v0)))) :named a16))
(assert (! (forall ((?v0 A$) (?v1 A$)) (=> (less$ ?v0 ?v1) (not (= ?v0 ?v1)))) :named a17))
(check-sat)
;(get-unsat-core)
