; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 344
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort N$ 0)
(declare-sort T$ 0)
(declare-sort Dtree$ 0)
(declare-sort N_set$ 0)
(declare-sort T_set$ 0)
(declare-sort N_N_fun$ 0)
(declare-sort N_T_fun$ 0)
(declare-sort T_N_fun$ 0)
(declare-sort T_T_fun$ 0)
(declare-sort N_set_set$ 0)
(declare-sort T_set_set$ 0)
(declare-sort N_bool_fun$ 0)
(declare-sort T_bool_fun$ 0)
(declare-sort N_T_set_fun$ 0)
(declare-sort N_set_N_fun$ 0)
(declare-sort T_T_set_fun$ 0)
(declare-sort T_set_N_fun$ 0)
(declare-sort T_set_T_fun$ 0)
(declare-sort N_set_set_set$ 0)
(declare-sort T_set_set_set$ 0)
(declare-sort N_set_bool_fun$ 0)
(declare-sort T_set_bool_fun$ 0)
(declare-sort T_dtree_sum_set$ 0)
(declare-sort T_set_T_set_fun$ 0)
(declare-sort N_set_set_set_set$ 0)
(declare-sort T_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_T_fun$ 0)
(declare-sort T_set_set_set_set$ 0)
(declare-sort T_set_set_bool_fun$ 0)
(declare-sort T_dtree_sum_set_set$ 0)
(declare-sort Dtree_N_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_bool_fun$ 0)
(declare-sort T_dtree_sum_T_set_fun$ 0)
(declare-sort T_set_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_set_set_set$ 0)
(declare-sort Dtree_T_set_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_set_bool_fun$ 0)
(declare-sort N_bool_fun_N_bool_fun_fun$ 0)
(declare-sort T_bool_fun_T_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_set_set_set_set$ 0)
(declare-sort T_dtree_sum_set_set_bool_fun$ 0)
(declare-sort T_bool_fun_T_set_bool_fun_fun$ 0)
(declare-sort T_set_bool_fun_T_bool_fun_fun$ 0)
(declare-sort T_set_bool_fun_T_set_bool_fun_fun$ 0)
(declare-sort T_bool_fun_T_dtree_sum_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_bool_fun_T_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_bool_fun_T_set_bool_fun_fun$ 0)
(declare-sort T_set_bool_fun_T_dtree_sum_bool_fun_fun$ 0)
(declare-sort T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0)
(declare-datatypes () ((T_dtree_sum$ (inl$ (projl$ T$)) (inr$ (projr$ Dtree$)))))
(declare-fun n$ () N$)
(declare-fun t$ () T$)
(declare-fun fr$ (N_set$ Dtree$) T_set$)
(declare-fun tr$ () Dtree$)
(declare-fun uu$ () T_T_dtree_sum_fun$)
(declare-fun sup$ (T_set_set$) T_set$)
(declare-fun top$ () N_set$)
(declare-fun tr0$ () Dtree$)
(declare-fun uua$ () T_set_bool_fun$)
(declare-fun uub$ (N_set$) Dtree_T_set_bool_fun_fun$)
(declare-fun uuc$ (T_T_dtree_sum_fun$) T_dtree_sum_bool_fun_T_bool_fun_fun$)
(declare-fun uud$ (T_set_T_set_fun$) T_set_bool_fun_T_set_bool_fun_fun$)
(declare-fun uue$ (N_N_fun$) N_bool_fun_N_bool_fun_fun$)
(declare-fun uuf$ (T_T_fun$) T_bool_fun_T_bool_fun_fun$)
(declare-fun uug$ (T_T_set_fun$) T_set_bool_fun_T_bool_fun_fun$)
(declare-fun uuh$ (T_set_T_fun$) T_bool_fun_T_set_bool_fun_fun$)
(declare-fun uui$ (T_dtree_sum_T_fun$) T_bool_fun_T_dtree_sum_bool_fun_fun$)
(declare-fun uuj$ (T_dtree_sum_T_set_fun$) T_set_bool_fun_T_dtree_sum_bool_fun_fun$)
(declare-fun uuk$ (T_set_T_dtree_sum_fun$) T_dtree_sum_bool_fun_T_set_bool_fun_fun$)
(declare-fun uul$ (T_dtree_sum_T_dtree_sum_fun$) T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$)
(declare-fun uum$ () N_N_fun$)
(declare-fun uun$ () T_set_T_set_fun$)
(declare-fun uuo$ (N_set$) Dtree_T_set_bool_fun_fun$)
(declare-fun cont$ (Dtree$) T_dtree_sum_set$)
(declare-fun pick$ (Dtree$ N$) Dtree$)
(declare-fun rcut$ (Dtree$) Dtree$)
(declare-fun sup$a (N_set_set_set_set$) N_set_set_set$)
(declare-fun sup$b (T_set_set_set_set$) T_set_set_set$)
(declare-fun sup$c (T_dtree_sum_set_set_set$) T_dtree_sum_set_set$)
(declare-fun sup$d (T_set_set_set$) T_set_set$)
(declare-fun sup$e (N_set_set_set$) N_set_set$)
(declare-fun sup$f (T_dtree_sum_set_set$) T_dtree_sum_set$)
(declare-fun sup$g (N_set_set$) N_set$)
(declare-fun sup$h (T_dtree_sum_set_set_set_set$) T_dtree_sum_set_set_set$)
(declare-fun top$a () N_set_set_set_set$)
(declare-fun top$b () N_set_set_set$)
(declare-fun top$c () T_set_set_set_set$)
(declare-fun top$d () T_set_set_set$)
(declare-fun top$e () T_dtree_sum_set_set_set$)
(declare-fun top$f () T_dtree_sum_set_set$)
(declare-fun top$g () T_set_set$)
(declare-fun top$h () N_set_set$)
(declare-fun top$i () T_dtree_sum_set$)
(declare-fun top$j () T_set$)
(declare-fun inItr$ (N_set$) Dtree_N_bool_fun_fun$)
(declare-fun subtr$ (N_set$ Dtree$ Dtree$) Bool)
(declare-fun member$ (T$) T_set_bool_fun$)
(declare-fun vimage$ (T_T_dtree_sum_fun$ T_dtree_sum_set$) T_set$)
(declare-fun collect$ (T_set_bool_fun$) T_set_set$)
(declare-fun fun_app$ (T_set_bool_fun$ T_set$) Bool)
(declare-fun member$a (T_dtree_sum$) T_dtree_sum_set_bool_fun$)
(declare-fun member$b (T_dtree_sum_set_set$ T_dtree_sum_set_set_set$) Bool)
(declare-fun member$c (T_dtree_sum_set_set_set$ T_dtree_sum_set_set_set_set$) Bool)
(declare-fun member$d (T_set_set$ T_set_set_set$) Bool)
(declare-fun member$e (T_set_set_set$ T_set_set_set_set$) Bool)
(declare-fun member$f (N_set$ N_set_set$) Bool)
(declare-fun member$g (N_set_set$ N_set_set_set$) Bool)
(declare-fun member$h (T_set$) T_set_set_bool_fun$)
(declare-fun member$i (T_dtree_sum_set$) T_dtree_sum_set_set_bool_fun$)
(declare-fun member$j (N$) N_set_bool_fun$)
(declare-fun vimage$a (N_N_fun$ N_set$) N_set$)
(declare-fun vimage$b (T_N_fun$ N_set$) T_set$)
(declare-fun vimage$c (N_T_fun$ T_set$) N_set$)
(declare-fun vimage$d (T_T_fun$) T_set_T_set_fun$)
(declare-fun vimage$e (T_set_N_fun$ N_set$) T_set_set$)
(declare-fun vimage$f (N_set_N_fun$ N_set$) N_set_set$)
(declare-fun vimage$g (N_T_set_fun$ T_set_set$) N_set$)
(declare-fun vimage$h (T_T_set_fun$ T_set_set$) T_set$)
(declare-fun vimage$i (T_set_T_fun$ T_set$) T_set_set$)
(declare-fun vimage$j (T_set_T_set_fun$ T_set_set$) T_set_set$)
(declare-fun vimage$k (T_dtree_sum_T_fun$ T_set$) T_dtree_sum_set$)
(declare-fun vimage$l (T_dtree_sum_T_set_fun$ T_set_set$) T_dtree_sum_set$)
(declare-fun vimage$m (T_set_T_dtree_sum_fun$ T_dtree_sum_set$) T_set_set$)
(declare-fun vimage$n (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$) T_dtree_sum_set$)
(declare-fun collect$a (T_dtree_sum_bool_fun$) T_dtree_sum_set$)
(declare-fun collect$b (T_bool_fun$) T_set$)
(declare-fun collect$c (N_bool_fun$) N_set$)
(declare-fun fun_app$a (T_T_dtree_sum_fun$ T$) T_dtree_sum$)
(declare-fun fun_app$b (T_dtree_sum_bool_fun$ T_dtree_sum$) Bool)
(declare-fun fun_app$c (T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_sum_bool_fun$) T_dtree_sum_bool_fun$)
(declare-fun fun_app$d (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$) T_dtree_sum$)
(declare-fun fun_app$e (T_set_bool_fun_T_dtree_sum_bool_fun_fun$ T_set_bool_fun$) T_dtree_sum_bool_fun$)
(declare-fun fun_app$f (T_dtree_sum_T_set_fun$ T_dtree_sum$) T_set$)
(declare-fun fun_app$g (T_bool_fun_T_dtree_sum_bool_fun_fun$ T_bool_fun$) T_dtree_sum_bool_fun$)
(declare-fun fun_app$h (T_bool_fun$ T$) Bool)
(declare-fun fun_app$i (T_dtree_sum_T_fun$ T_dtree_sum$) T$)
(declare-fun fun_app$j (T_dtree_sum_bool_fun_T_set_bool_fun_fun$ T_dtree_sum_bool_fun$) T_set_bool_fun$)
(declare-fun fun_app$k (T_set_T_dtree_sum_fun$ T_set$) T_dtree_sum$)
(declare-fun fun_app$l (T_set_bool_fun_T_set_bool_fun_fun$ T_set_bool_fun$) T_set_bool_fun$)
(declare-fun fun_app$m (T_set_T_set_fun$ T_set$) T_set$)
(declare-fun fun_app$n (T_bool_fun_T_set_bool_fun_fun$ T_bool_fun$) T_set_bool_fun$)
(declare-fun fun_app$o (T_set_T_fun$ T_set$) T$)
(declare-fun fun_app$p (T_dtree_sum_bool_fun_T_bool_fun_fun$ T_dtree_sum_bool_fun$) T_bool_fun$)
(declare-fun fun_app$q (T_set_bool_fun_T_bool_fun_fun$ T_set_bool_fun$) T_bool_fun$)
(declare-fun fun_app$r (T_T_set_fun$ T$) T_set$)
(declare-fun fun_app$s (T_bool_fun_T_bool_fun_fun$ T_bool_fun$) T_bool_fun$)
(declare-fun fun_app$t (T_T_fun$ T$) T$)
(declare-fun fun_app$u (N_bool_fun$ N$) Bool)
(declare-fun fun_app$v (N_bool_fun_N_bool_fun_fun$ N_bool_fun$) N_bool_fun$)
(declare-fun fun_app$w (N_N_fun$ N$) N$)
(declare-fun fun_app$x (Dtree_T_set_bool_fun_fun$ Dtree$) T_set_bool_fun$)
(declare-fun fun_app$y (T_dtree_sum_set_bool_fun$ T_dtree_sum_set$) Bool)
(declare-fun fun_app$z (Dtree_N_bool_fun_fun$ Dtree$) N_bool_fun$)
(declare-fun fun_app$aa (T_dtree_sum_set_set_bool_fun$ T_dtree_sum_set_set$) Bool)
(declare-fun fun_app$ab (T_set_set_bool_fun$ T_set_set$) Bool)
(declare-fun fun_app$ac (N_set_bool_fun$ N_set$) Bool)
(assert (! (forall ((?v0 T_set$)) (! (= (fun_app$ uua$ ?v0) (exists ((?v1 Dtree$)) (and (= ?v0 (vimage$ uu$ (cont$ ?v1))) (subtr$ top$ ?v1 tr0$)))) :pattern ((fun_app$ uua$ ?v0)))) :named a0))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$a uu$ ?v0) (inl$ ?v0)) :pattern ((fun_app$a uu$ ?v0)))) :named a1))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum_bool_fun$) (?v2 T_dtree_sum$)) (! (= (fun_app$b (fun_app$c (uul$ ?v0) ?v1) ?v2) (fun_app$b ?v1 (fun_app$d ?v0 ?v2))) :pattern ((fun_app$b (fun_app$c (uul$ ?v0) ?v1) ?v2)))) :named a2))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$) (?v1 T_set_bool_fun$) (?v2 T_dtree_sum$)) (! (= (fun_app$b (fun_app$e (uuj$ ?v0) ?v1) ?v2) (fun_app$ ?v1 (fun_app$f ?v0 ?v2))) :pattern ((fun_app$b (fun_app$e (uuj$ ?v0) ?v1) ?v2)))) :named a3))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$) (?v1 T_bool_fun$) (?v2 T_dtree_sum$)) (! (= (fun_app$b (fun_app$g (uui$ ?v0) ?v1) ?v2) (fun_app$h ?v1 (fun_app$i ?v0 ?v2))) :pattern ((fun_app$b (fun_app$g (uui$ ?v0) ?v1) ?v2)))) :named a4))
(assert (! (forall ((?v0 T_set_T_dtree_sum_fun$) (?v1 T_dtree_sum_bool_fun$) (?v2 T_set$)) (! (= (fun_app$ (fun_app$j (uuk$ ?v0) ?v1) ?v2) (fun_app$b ?v1 (fun_app$k ?v0 ?v2))) :pattern ((fun_app$ (fun_app$j (uuk$ ?v0) ?v1) ?v2)))) :named a5))
(assert (! (forall ((?v0 T_set_T_set_fun$) (?v1 T_set_bool_fun$) (?v2 T_set$)) (! (= (fun_app$ (fun_app$l (uud$ ?v0) ?v1) ?v2) (fun_app$ ?v1 (fun_app$m ?v0 ?v2))) :pattern ((fun_app$ (fun_app$l (uud$ ?v0) ?v1) ?v2)))) :named a6))
(assert (! (forall ((?v0 T_set_T_fun$) (?v1 T_bool_fun$) (?v2 T_set$)) (! (= (fun_app$ (fun_app$n (uuh$ ?v0) ?v1) ?v2) (fun_app$h ?v1 (fun_app$o ?v0 ?v2))) :pattern ((fun_app$ (fun_app$n (uuh$ ?v0) ?v1) ?v2)))) :named a7))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T_dtree_sum_bool_fun$) (?v2 T$)) (! (= (fun_app$h (fun_app$p (uuc$ ?v0) ?v1) ?v2) (fun_app$b ?v1 (fun_app$a ?v0 ?v2))) :pattern ((fun_app$h (fun_app$p (uuc$ ?v0) ?v1) ?v2)))) :named a8))
(assert (! (forall ((?v0 T_T_set_fun$) (?v1 T_set_bool_fun$) (?v2 T$)) (! (= (fun_app$h (fun_app$q (uug$ ?v0) ?v1) ?v2) (fun_app$ ?v1 (fun_app$r ?v0 ?v2))) :pattern ((fun_app$h (fun_app$q (uug$ ?v0) ?v1) ?v2)))) :named a9))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T_bool_fun$) (?v2 T$)) (! (= (fun_app$h (fun_app$s (uuf$ ?v0) ?v1) ?v2) (fun_app$h ?v1 (fun_app$t ?v0 ?v2))) :pattern ((fun_app$h (fun_app$s (uuf$ ?v0) ?v1) ?v2)))) :named a10))
(assert (! (forall ((?v0 N_N_fun$) (?v1 N_bool_fun$) (?v2 N$)) (! (= (fun_app$u (fun_app$v (uue$ ?v0) ?v1) ?v2) (fun_app$u ?v1 (fun_app$w ?v0 ?v2))) :pattern ((fun_app$u (fun_app$v (uue$ ?v0) ?v1) ?v2)))) :named a11))
(assert (! (forall ((?v0 N_set$) (?v1 Dtree$) (?v2 T_set$)) (! (= (fun_app$ (fun_app$x (uuo$ ?v0) ?v1) ?v2) (exists ((?v3 Dtree$)) (and (= ?v2 (fr$ ?v0 ?v3)) (subtr$ ?v0 ?v3 ?v1)))) :pattern ((fun_app$ (fun_app$x (uuo$ ?v0) ?v1) ?v2)))) :named a12))
(assert (! (forall ((?v0 N_set$) (?v1 Dtree$) (?v2 T_set$)) (! (= (fun_app$ (fun_app$x (uub$ ?v0) ?v1) ?v2) (exists ((?v3 Dtree$)) (and (= ?v2 (vimage$ uu$ (cont$ ?v3))) (subtr$ ?v0 ?v3 ?v1)))) :pattern ((fun_app$ (fun_app$x (uub$ ?v0) ?v1) ?v2)))) :named a13))
(assert (! (forall ((?v0 T_set$)) (! (= (fun_app$m uun$ ?v0) ?v0) :pattern ((fun_app$m uun$ ?v0)))) :named a14))
(assert (! (forall ((?v0 N$)) (! (= (fun_app$w uum$ ?v0) ?v0) :pattern ((fun_app$w uum$ ?v0)))) :named a15))
(assert (! (not (fun_app$ (member$ t$) (sup$ (collect$ uua$)))) :named a16))
(assert (! (subtr$ top$ (pick$ tr0$ n$) tr0$) :named a17))
(assert (! (fun_app$y (member$a (inl$ t$)) (cont$ (pick$ tr0$ n$))) :named a18))
(assert (! (fun_app$y (member$a (inl$ t$)) (cont$ tr$)) :named a19))
(assert (! (fun_app$u (fun_app$z (inItr$ top$) tr0$) n$) :named a20))
(assert (! (fun_app$ (member$ t$) (fr$ top$ (rcut$ tr0$))) :named a21))
(assert (! (forall ((?v0 N_set$) (?v1 Dtree$) (?v2 Dtree$) (?v3 Dtree$)) (=> (and (subtr$ ?v0 ?v1 ?v2) (subtr$ ?v0 ?v2 ?v3)) (subtr$ ?v0 ?v1 ?v3))) :named a22))
(assert (! (= (sup$a top$a) top$b) :named a23))
(assert (! (= (sup$b top$c) top$d) :named a24))
(assert (! (= (sup$c top$e) top$f) :named a25))
(assert (! (= (sup$d top$d) top$g) :named a26))
(assert (! (= (sup$e top$b) top$h) :named a27))
(assert (! (= (sup$f top$f) top$i) :named a28))
(assert (! (= (sup$g top$h) top$) :named a29))
(assert (! (= (sup$ top$g) top$j) :named a30))
(assert (! (forall ((?v0 N_N_fun$)) (= (vimage$a ?v0 top$) top$)) :named a31))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$)) (= (vimage$ ?v0 top$i) top$j)) :named a32))
(assert (! (forall ((?v0 T_N_fun$)) (= (vimage$b ?v0 top$) top$j)) :named a33))
(assert (! (forall ((?v0 N_T_fun$)) (= (vimage$c ?v0 top$j) top$)) :named a34))
(assert (! (forall ((?v0 T_T_fun$)) (= (fun_app$m (vimage$d ?v0) top$j) top$j)) :named a35))
(assert (! (forall ((?v0 T_set_N_fun$)) (= (vimage$e ?v0 top$) top$g)) :named a36))
(assert (! (forall ((?v0 N_set_N_fun$)) (= (vimage$f ?v0 top$) top$h)) :named a37))
(assert (! (forall ((?v0 N_T_set_fun$)) (= (vimage$g ?v0 top$g) top$)) :named a38))
(assert (! (forall ((?v0 T_T_set_fun$)) (= (vimage$h ?v0 top$g) top$j)) :named a39))
(assert (! (forall ((?v0 T_set_T_fun$)) (= (vimage$i ?v0 top$j) top$g)) :named a40))
(assert (! (forall ((?v0 N_set$) (?v1 Dtree$)) (= (fr$ ?v0 ?v1) (sup$ (collect$ (fun_app$x (uub$ ?v0) ?v1))))) :named a41))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T_dtree_sum_bool_fun$)) (= (vimage$ ?v0 (collect$a ?v1)) (collect$b (fun_app$p (uuc$ ?v0) ?v1)))) :named a42))
(assert (! (forall ((?v0 T_set_T_set_fun$) (?v1 T_set_bool_fun$)) (= (vimage$j ?v0 (collect$ ?v1)) (collect$ (fun_app$l (uud$ ?v0) ?v1)))) :named a43))
(assert (! (forall ((?v0 N_N_fun$) (?v1 N_bool_fun$)) (= (vimage$a ?v0 (collect$c ?v1)) (collect$c (fun_app$v (uue$ ?v0) ?v1)))) :named a44))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T_bool_fun$)) (= (fun_app$m (vimage$d ?v0) (collect$b ?v1)) (collect$b (fun_app$s (uuf$ ?v0) ?v1)))) :named a45))
(assert (! (forall ((?v0 T_T_set_fun$) (?v1 T_set_bool_fun$)) (= (vimage$h ?v0 (collect$ ?v1)) (collect$b (fun_app$q (uug$ ?v0) ?v1)))) :named a46))
(assert (! (forall ((?v0 T_set_T_fun$) (?v1 T_bool_fun$)) (= (vimage$i ?v0 (collect$b ?v1)) (collect$ (fun_app$n (uuh$ ?v0) ?v1)))) :named a47))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$) (?v1 T_bool_fun$)) (= (vimage$k ?v0 (collect$b ?v1)) (collect$a (fun_app$g (uui$ ?v0) ?v1)))) :named a48))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$) (?v1 T_set_bool_fun$)) (= (vimage$l ?v0 (collect$ ?v1)) (collect$a (fun_app$e (uuj$ ?v0) ?v1)))) :named a49))
(assert (! (forall ((?v0 T_set_T_dtree_sum_fun$) (?v1 T_dtree_sum_bool_fun$)) (= (vimage$m ?v0 (collect$a ?v1)) (collect$ (fun_app$j (uuk$ ?v0) ?v1)))) :named a50))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum_bool_fun$)) (= (vimage$n ?v0 (collect$a ?v1)) (collect$a (fun_app$c (uul$ ?v0) ?v1)))) :named a51))
(assert (! (forall ((?v0 N_set$)) (= (vimage$a uum$ ?v0) ?v0)) :named a52))
(assert (! (forall ((?v0 T_set_set$)) (= (vimage$j uun$ ?v0) ?v0)) :named a53))
(assert (! (forall ((?v0 N_set$) (?v1 Dtree$)) (= (fr$ ?v0 ?v1) (sup$ (collect$ (fun_app$x (uuo$ ?v0) ?v1))))) :named a54))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1))) :named a55))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1))) :named a56))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set_set$) (?v1 T_dtree_sum_set_set_bool_fun$)) (= (exists ((?v2 T_dtree_sum_set_set$)) (and (member$b ?v2 (sup$h ?v0)) (fun_app$aa ?v1 ?v2))) (exists ((?v2 T_dtree_sum_set_set_set$)) (and (member$c ?v2 ?v0) (exists ((?v3 T_dtree_sum_set_set$)) (and (member$b ?v3 ?v2) (fun_app$aa ?v1 ?v3))))))) :named a57))
(assert (! (forall ((?v0 T_set_set_set_set$) (?v1 T_set_set_bool_fun$)) (= (exists ((?v2 T_set_set$)) (and (member$d ?v2 (sup$b ?v0)) (fun_app$ab ?v1 ?v2))) (exists ((?v2 T_set_set_set$)) (and (member$e ?v2 ?v0) (exists ((?v3 T_set_set$)) (and (member$d ?v3 ?v2) (fun_app$ab ?v1 ?v3))))))) :named a58))
(assert (! (forall ((?v0 N_set_set_set$) (?v1 N_set_bool_fun$)) (= (exists ((?v2 N_set$)) (and (member$f ?v2 (sup$e ?v0)) (fun_app$ac ?v1 ?v2))) (exists ((?v2 N_set_set$)) (and (member$g ?v2 ?v0) (exists ((?v3 N_set$)) (and (member$f ?v3 ?v2) (fun_app$ac ?v1 ?v3))))))) :named a59))
(assert (! (forall ((?v0 T_set_set_set$) (?v1 T_set_bool_fun$)) (= (exists ((?v2 T_set$)) (and (fun_app$ab (member$h ?v2) (sup$d ?v0)) (fun_app$ ?v1 ?v2))) (exists ((?v2 T_set_set$)) (and (member$d ?v2 ?v0) (exists ((?v3 T_set$)) (and (fun_app$ab (member$h ?v3) ?v2) (fun_app$ ?v1 ?v3))))))) :named a60))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set$) (?v1 T_dtree_sum_set_bool_fun$)) (= (exists ((?v2 T_dtree_sum_set$)) (and (fun_app$aa (member$i ?v2) (sup$c ?v0)) (fun_app$y ?v1 ?v2))) (exists ((?v2 T_dtree_sum_set_set$)) (and (member$b ?v2 ?v0) (exists ((?v3 T_dtree_sum_set$)) (and (fun_app$aa (member$i ?v3) ?v2) (fun_app$y ?v1 ?v3))))))) :named a61))
(assert (! (forall ((?v0 N_set_set$) (?v1 N_bool_fun$)) (= (exists ((?v2 N$)) (and (fun_app$ac (member$j ?v2) (sup$g ?v0)) (fun_app$u ?v1 ?v2))) (exists ((?v2 N_set$)) (and (member$f ?v2 ?v0) (exists ((?v3 N$)) (and (fun_app$ac (member$j ?v3) ?v2) (fun_app$u ?v1 ?v3))))))) :named a62))
(assert (! (forall ((?v0 T_dtree_sum_set_set$) (?v1 T_dtree_sum_bool_fun$)) (= (exists ((?v2 T_dtree_sum$)) (and (fun_app$y (member$a ?v2) (sup$f ?v0)) (fun_app$b ?v1 ?v2))) (exists ((?v2 T_dtree_sum_set$)) (and (fun_app$aa (member$i ?v2) ?v0) (exists ((?v3 T_dtree_sum$)) (and (fun_app$y (member$a ?v3) ?v2) (fun_app$b ?v1 ?v3))))))) :named a63))
(assert (! (forall ((?v0 T_set_set$) (?v1 T_bool_fun$)) (= (exists ((?v2 T$)) (and (fun_app$ (member$ ?v2) (sup$ ?v0)) (fun_app$h ?v1 ?v2))) (exists ((?v2 T_set$)) (and (fun_app$ab (member$h ?v2) ?v0) (exists ((?v3 T$)) (and (fun_app$ (member$ ?v3) ?v2) (fun_app$h ?v1 ?v3))))))) :named a64))
(assert (! (forall ((?v0 T_dtree_sum_set_set$) (?v1 T_dtree_sum_set_set_set_set$)) (= (member$b ?v0 (sup$h ?v1)) (exists ((?v2 T_dtree_sum_set_set_set$)) (and (member$c ?v2 ?v1) (member$b ?v0 ?v2))))) :named a65))
(assert (! (forall ((?v0 T_set_set$) (?v1 T_set_set_set_set$)) (= (member$d ?v0 (sup$b ?v1)) (exists ((?v2 T_set_set_set$)) (and (member$e ?v2 ?v1) (member$d ?v0 ?v2))))) :named a66))
(assert (! (forall ((?v0 N_set$) (?v1 N_set_set_set$)) (= (member$f ?v0 (sup$e ?v1)) (exists ((?v2 N_set_set$)) (and (member$g ?v2 ?v1) (member$f ?v0 ?v2))))) :named a67))
(assert (! (forall ((?v0 T_set$) (?v1 T_set_set_set$)) (= (fun_app$ab (member$h ?v0) (sup$d ?v1)) (exists ((?v2 T_set_set$)) (and (member$d ?v2 ?v1) (fun_app$ab (member$h ?v0) ?v2))))) :named a68))
(assert (! (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set_set_set$)) (= (fun_app$aa (member$i ?v0) (sup$c ?v1)) (exists ((?v2 T_dtree_sum_set_set$)) (and (member$b ?v2 ?v1) (fun_app$aa (member$i ?v0) ?v2))))) :named a69))
(assert (! (forall ((?v0 N$) (?v1 N_set_set$)) (= (fun_app$ac (member$j ?v0) (sup$g ?v1)) (exists ((?v2 N_set$)) (and (member$f ?v2 ?v1) (fun_app$ac (member$j ?v0) ?v2))))) :named a70))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set_set$)) (= (fun_app$y (member$a ?v0) (sup$f ?v1)) (exists ((?v2 T_dtree_sum_set$)) (and (fun_app$aa (member$i ?v2) ?v1) (fun_app$y (member$a ?v0) ?v2))))) :named a71))
(assert (! (forall ((?v0 T$) (?v1 T_set_set$)) (= (fun_app$ (member$ ?v0) (sup$ ?v1)) (exists ((?v2 T_set$)) (and (fun_app$ab (member$h ?v2) ?v1) (fun_app$ (member$ ?v0) ?v2))))) :named a72))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set_set$) (?v1 T_dtree_sum_set_set_bool_fun$)) (= (forall ((?v2 T_dtree_sum_set_set$)) (=> (member$b ?v2 (sup$h ?v0)) (fun_app$aa ?v1 ?v2))) (forall ((?v2 T_dtree_sum_set_set_set$)) (=> (member$c ?v2 ?v0) (forall ((?v3 T_dtree_sum_set_set$)) (=> (member$b ?v3 ?v2) (fun_app$aa ?v1 ?v3))))))) :named a73))
(assert (! (forall ((?v0 T_set_set_set_set$) (?v1 T_set_set_bool_fun$)) (= (forall ((?v2 T_set_set$)) (=> (member$d ?v2 (sup$b ?v0)) (fun_app$ab ?v1 ?v2))) (forall ((?v2 T_set_set_set$)) (=> (member$e ?v2 ?v0) (forall ((?v3 T_set_set$)) (=> (member$d ?v3 ?v2) (fun_app$ab ?v1 ?v3))))))) :named a74))
(assert (! (forall ((?v0 N_set_set_set$) (?v1 N_set_bool_fun$)) (= (forall ((?v2 N_set$)) (=> (member$f ?v2 (sup$e ?v0)) (fun_app$ac ?v1 ?v2))) (forall ((?v2 N_set_set$)) (=> (member$g ?v2 ?v0) (forall ((?v3 N_set$)) (=> (member$f ?v3 ?v2) (fun_app$ac ?v1 ?v3))))))) :named a75))
(assert (! (forall ((?v0 T_set_set_set$) (?v1 T_set_bool_fun$)) (= (forall ((?v2 T_set$)) (=> (fun_app$ab (member$h ?v2) (sup$d ?v0)) (fun_app$ ?v1 ?v2))) (forall ((?v2 T_set_set$)) (=> (member$d ?v2 ?v0) (forall ((?v3 T_set$)) (=> (fun_app$ab (member$h ?v3) ?v2) (fun_app$ ?v1 ?v3))))))) :named a76))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set$) (?v1 T_dtree_sum_set_bool_fun$)) (= (forall ((?v2 T_dtree_sum_set$)) (=> (fun_app$aa (member$i ?v2) (sup$c ?v0)) (fun_app$y ?v1 ?v2))) (forall ((?v2 T_dtree_sum_set_set$)) (=> (member$b ?v2 ?v0) (forall ((?v3 T_dtree_sum_set$)) (=> (fun_app$aa (member$i ?v3) ?v2) (fun_app$y ?v1 ?v3))))))) :named a77))
(assert (! (forall ((?v0 N_set_set$) (?v1 N_bool_fun$)) (= (forall ((?v2 N$)) (=> (fun_app$ac (member$j ?v2) (sup$g ?v0)) (fun_app$u ?v1 ?v2))) (forall ((?v2 N_set$)) (=> (member$f ?v2 ?v0) (forall ((?v3 N$)) (=> (fun_app$ac (member$j ?v3) ?v2) (fun_app$u ?v1 ?v3))))))) :named a78))
(assert (! (forall ((?v0 T_dtree_sum_set_set$) (?v1 T_dtree_sum_bool_fun$)) (= (forall ((?v2 T_dtree_sum$)) (=> (fun_app$y (member$a ?v2) (sup$f ?v0)) (fun_app$b ?v1 ?v2))) (forall ((?v2 T_dtree_sum_set$)) (=> (fun_app$aa (member$i ?v2) ?v0) (forall ((?v3 T_dtree_sum$)) (=> (fun_app$y (member$a ?v3) ?v2) (fun_app$b ?v1 ?v3))))))) :named a79))
(assert (! (forall ((?v0 T_set_set$) (?v1 T_bool_fun$)) (= (forall ((?v2 T$)) (=> (fun_app$ (member$ ?v2) (sup$ ?v0)) (fun_app$h ?v1 ?v2))) (forall ((?v2 T_set$)) (=> (fun_app$ab (member$h ?v2) ?v0) (forall ((?v3 T$)) (=> (fun_app$ (member$ ?v3) ?v2) (fun_app$h ?v1 ?v3))))))) :named a80))
(check-sat)
;(get-unsat-core)
