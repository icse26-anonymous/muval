; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 29
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort N$ 0)
(declare-sort T$ 0)
(declare-sort Dtree$ 0)
(declare-sort T_set$ 0)
(declare-sort N_N_fun$ 0)
(declare-sort T_T_fun$ 0)
(declare-sort T_bool_fun$ 0)
(declare-sort Dtree_N_fun$ 0)
(declare-sort N_dtree_fun$ 0)
(declare-sort T_N_sum_set$ 0)
(declare-sort T_N_sum_T_fun$ 0)
(declare-sort T_T_N_sum_fun$ 0)
(declare-sort Dtree_dtree_fun$ 0)
(declare-sort T_dtree_sum_set$ 0)
(declare-sort T_set_T_set_fun$ 0)
(declare-sort T_N_sum_bool_fun$ 0)
(declare-sort T_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_T_fun$ 0)
(declare-sort T_N_sum_T_N_sum_fun$ 0)
(declare-sort T_dtree_sum_bool_fun$ 0)
(declare-sort T_N_sum_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_T_N_sum_fun$ 0)
(declare-sort T_set_set_T_set_set_fun$ 0)
(declare-sort T_N_sum_set_T_N_sum_set_fun$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0)
(declare-sort N_N_fun_T_N_sum_T_N_sum_fun_fun$ 0)
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0)
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0)
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0)
(declare-datatypes () ((T_N_sum$ (inl$ (projl$ T$)) (inr$ (projr$ N$)))
  (T_dtree_sum$ (inl$a (projl$a T$)) (inr$a (projr$a Dtree$)))))
(declare-fun id$ () T_T_fun$)
(declare-fun tr$ () Dtree$)
(declare-fun uu$ () T_T_N_sum_fun$)
(declare-fun id$a () T_set_T_set_fun$)
(declare-fun id$b () T_set_set_T_set_set_fun$)
(declare-fun id$c () T_dtree_sum_T_dtree_sum_fun$)
(declare-fun id$d () T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun id$e () T_N_sum_T_N_sum_fun$)
(declare-fun id$f () T_N_sum_set_T_N_sum_set_fun$)
(declare-fun uua$ () T_T_dtree_sum_fun$)
(declare-fun cont$ (Dtree$) T_dtree_sum_set$)
(declare-fun root$ () Dtree_N_fun$)
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$) T_N_sum_set$)
(declare-fun image$a (T_N_sum_T_N_sum_fun$) T_N_sum_set_T_N_sum_set_fun$)
(declare-fun image$b (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$) T_dtree_sum_set$)
(declare-fun image$c (T_dtree_sum_T_dtree_sum_fun$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun image$d (T_set_T_set_fun$) T_set_set_T_set_set_fun$)
(declare-fun image$e (T_T_fun$) T_set_T_set_fun$)
(declare-fun image$f (T_N_sum_T_fun$ T_N_sum_set$) T_set$)
(declare-fun image$g (T_dtree_sum_T_fun$ T_dtree_sum_set$) T_set$)
(declare-fun image$h (T_T_N_sum_fun$ T_set$) T_N_sum_set$)
(declare-fun image$i (T_T_dtree_sum_fun$ T_set$) T_dtree_sum_set$)
(declare-fun member$ (T_N_sum$ T_N_sum_set$) Bool)
(declare-fun vimage$ (T_T_N_sum_fun$ T_N_sum_set$) T_set$)
(declare-fun collect$ (T_N_sum_bool_fun$) T_N_sum_set$)
(declare-fun fun_app$ (T_T_dtree_sum_fun$ T$) T_dtree_sum$)
(declare-fun map_sum$ (T_T_fun$) Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$)
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$) Bool)
(declare-fun member$b (T$ T_set$) Bool)
(declare-fun vimage$a (T_T_dtree_sum_fun$ T_dtree_sum_set$) T_set$)
(declare-fun vimage$b (T_set_T_set_fun$) T_set_set_T_set_set_fun$)
(declare-fun vimage$c (T_T_fun$) T_set_T_set_fun$)
(declare-fun vimage$d (T_N_sum_T_N_sum_fun$ T_N_sum_set$) T_N_sum_set$)
(declare-fun vimage$e (T_N_sum_T_dtree_sum_fun$ T_dtree_sum_set$) T_N_sum_set$)
(declare-fun vimage$f (T_N_sum_T_fun$ T_set$) T_N_sum_set$)
(declare-fun vimage$g (T_dtree_sum_T_N_sum_fun$ T_N_sum_set$) T_dtree_sum_set$)
(declare-fun vimage$h (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$) T_dtree_sum_set$)
(declare-fun vimage$i (T_dtree_sum_T_fun$ T_set$) T_dtree_sum_set$)
(declare-fun collect$a (T_bool_fun$) T_set$)
(declare-fun collect$b (T_dtree_sum_bool_fun$) T_dtree_sum_set$)
(declare-fun fun_app$a (T_T_N_sum_fun$ T$) T_N_sum$)
(declare-fun fun_app$b (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$) T_dtree_sum_T_N_sum_fun$)
(declare-fun fun_app$c (T_N_sum_set_T_N_sum_set_fun$ T_N_sum_set$) T_N_sum_set$)
(declare-fun fun_app$d (N_N_fun_T_N_sum_T_N_sum_fun_fun$ N_N_fun$) T_N_sum_T_N_sum_fun$)
(declare-fun fun_app$e (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$) T_N_sum_T_dtree_sum_fun$)
(declare-fun fun_app$f (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set$) T_dtree_sum_set$)
(declare-fun fun_app$g (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$) T_dtree_sum_T_dtree_sum_fun$)
(declare-fun fun_app$h (T_N_sum_T_N_sum_fun$ T_N_sum$) T_N_sum$)
(declare-fun fun_app$i (T_N_sum_T_dtree_sum_fun$ T_N_sum$) T_dtree_sum$)
(declare-fun fun_app$j (T_N_sum_T_fun$ T_N_sum$) T$)
(declare-fun fun_app$k (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$) T_N_sum$)
(declare-fun fun_app$l (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$) T_dtree_sum$)
(declare-fun fun_app$m (T_dtree_sum_T_fun$ T_dtree_sum$) T$)
(declare-fun fun_app$n (T_set_T_set_fun$ T_set$) T_set$)
(declare-fun fun_app$o (T_T_fun$ T$) T$)
(declare-fun fun_app$p (Dtree_N_fun$ Dtree$) N$)
(declare-fun fun_app$q (T_N_sum_bool_fun$ T_N_sum$) Bool)
(declare-fun fun_app$r (T_dtree_sum_bool_fun$ T_dtree_sum$) Bool)
(declare-fun fun_app$s (T_bool_fun$ T$) Bool)
(declare-fun map_sum$a (T_T_fun$) N_N_fun_T_N_sum_T_N_sum_fun_fun$)
(declare-fun map_sum$b (T_T_fun$) N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$)
(declare-fun map_sum$c (T_T_fun$) Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$)
(assert (! (forall ((?v0 T$)) (! (= (fun_app$ uua$ ?v0) (inl$a ?v0)) :pattern ((fun_app$ uua$ ?v0)))) :named a0))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$a uu$ ?v0) (inl$ ?v0)) :pattern ((fun_app$a uu$ ?v0)))) :named a1))
(assert (! (not (= (vimage$ uu$ (image$ (fun_app$b (map_sum$ id$) root$) (cont$ tr$))) (vimage$a uua$ (cont$ tr$)))) :named a2))
(assert (! (forall ((?v0 N_N_fun$) (?v1 T_N_sum_set$)) (= (vimage$ uu$ (fun_app$c (image$a (fun_app$d (map_sum$a id$) ?v0)) ?v1)) (vimage$ uu$ ?v1))) :named a3))
(assert (! (forall ((?v0 N_dtree_fun$) (?v1 T_N_sum_set$)) (= (vimage$a uua$ (image$b (fun_app$e (map_sum$b id$) ?v0) ?v1)) (vimage$ uu$ ?v1))) :named a4))
(assert (! (forall ((?v0 Dtree_dtree_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$a uua$ (fun_app$f (image$c (fun_app$g (map_sum$c id$) ?v0)) ?v1)) (vimage$a uua$ ?v1))) :named a5))
(assert (! (forall ((?v0 Dtree_N_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$ uu$ (image$ (fun_app$b (map_sum$ id$) ?v0) ?v1)) (vimage$a uua$ ?v1))) :named a6))
(assert (! (forall ((?v0 T$) (?v1 N_N_fun$) (?v2 T_N_sum_set$)) (= (member$ (inl$ ?v0) (fun_app$c (image$a (fun_app$d (map_sum$a id$) ?v1)) ?v2)) (member$ (inl$ ?v0) ?v2))) :named a7))
(assert (! (forall ((?v0 T$) (?v1 N_dtree_fun$) (?v2 T_N_sum_set$)) (= (member$a (inl$a ?v0) (image$b (fun_app$e (map_sum$b id$) ?v1) ?v2)) (member$ (inl$ ?v0) ?v2))) :named a8))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set$)) (= (member$a (inl$a ?v0) (fun_app$f (image$c (fun_app$g (map_sum$c id$) ?v1)) ?v2)) (member$a (inl$a ?v0) ?v2))) :named a9))
(assert (! (forall ((?v0 T$) (?v1 Dtree_N_fun$) (?v2 T_dtree_sum_set$)) (= (member$ (inl$ ?v0) (image$ (fun_app$b (map_sum$ id$) ?v1) ?v2)) (member$a (inl$a ?v0) ?v2))) :named a10))
(assert (! (= (vimage$b id$a) id$b) :named a11))
(assert (! (= (vimage$c id$) id$a) :named a12))
(assert (! (= (image$d id$a) id$b) :named a13))
(assert (! (= (image$c id$c) id$d) :named a14))
(assert (! (= (image$a id$e) id$f) :named a15))
(assert (! (= (image$e id$) id$a) :named a16))
(assert (! (forall ((?v0 T$) (?v1 N_N_fun$) (?v2 T_N_sum_set$)) (=> (member$ (inl$ ?v0) (fun_app$c (image$a (fun_app$d (map_sum$a id$) ?v1)) ?v2)) (member$ (inl$ ?v0) ?v2))) :named a17))
(assert (! (forall ((?v0 T$) (?v1 N_dtree_fun$) (?v2 T_N_sum_set$)) (=> (member$a (inl$a ?v0) (image$b (fun_app$e (map_sum$b id$) ?v1) ?v2)) (member$ (inl$ ?v0) ?v2))) :named a18))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set$)) (=> (member$a (inl$a ?v0) (fun_app$f (image$c (fun_app$g (map_sum$c id$) ?v1)) ?v2)) (member$a (inl$a ?v0) ?v2))) :named a19))
(assert (! (forall ((?v0 T$) (?v1 Dtree_N_fun$) (?v2 T_dtree_sum_set$)) (=> (member$ (inl$ ?v0) (image$ (fun_app$b (map_sum$ id$) ?v1) ?v2)) (member$a (inl$a ?v0) ?v2))) :named a20))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_T_N_sum_fun$) (?v2 T_N_sum_set$)) (= (member$ ?v0 (vimage$d ?v1 ?v2)) (member$ (fun_app$h ?v1 ?v0) ?v2))) :named a21))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_T_dtree_sum_fun$) (?v2 T_dtree_sum_set$)) (= (member$ ?v0 (vimage$e ?v1 ?v2)) (member$a (fun_app$i ?v1 ?v0) ?v2))) :named a22))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_T_fun$) (?v2 T_set$)) (= (member$ ?v0 (vimage$f ?v1 ?v2)) (member$b (fun_app$j ?v1 ?v0) ?v2))) :named a23))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_T_N_sum_fun$) (?v2 T_N_sum_set$)) (= (member$a ?v0 (vimage$g ?v1 ?v2)) (member$ (fun_app$k ?v1 ?v0) ?v2))) :named a24))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_T_dtree_sum_fun$) (?v2 T_dtree_sum_set$)) (= (member$a ?v0 (vimage$h ?v1 ?v2)) (member$a (fun_app$l ?v1 ?v0) ?v2))) :named a25))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_T_fun$) (?v2 T_set$)) (= (member$a ?v0 (vimage$i ?v1 ?v2)) (member$b (fun_app$m ?v1 ?v0) ?v2))) :named a26))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T_set$)) (= (member$b ?v0 (fun_app$n (vimage$c ?v1) ?v2)) (member$b (fun_app$o ?v1 ?v0) ?v2))) :named a27))
(assert (! (forall ((?v0 T$) (?v1 T_T_N_sum_fun$) (?v2 T_N_sum_set$)) (= (member$b ?v0 (vimage$ ?v1 ?v2)) (member$ (fun_app$a ?v1 ?v0) ?v2))) :named a28))
(assert (! (forall ((?v0 T$) (?v1 T_T_dtree_sum_fun$) (?v2 T_dtree_sum_set$)) (= (member$b ?v0 (vimage$a ?v1 ?v2)) (member$a (fun_app$ ?v1 ?v0) ?v2))) :named a29))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$) (?v1 T_N_sum$) (?v2 T_N_sum$) (?v3 T_N_sum_set$)) (=> (and (= (fun_app$h ?v0 ?v1) ?v2) (member$ ?v2 ?v3)) (member$ ?v1 (vimage$d ?v0 ?v3)))) :named a30))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$) (?v1 T_dtree_sum$) (?v2 T_N_sum$) (?v3 T_N_sum_set$)) (=> (and (= (fun_app$k ?v0 ?v1) ?v2) (member$ ?v2 ?v3)) (member$a ?v1 (vimage$g ?v0 ?v3)))) :named a31))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$) (?v1 T_N_sum$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= (fun_app$i ?v0 ?v1) ?v2) (member$a ?v2 ?v3)) (member$ ?v1 (vimage$e ?v0 ?v3)))) :named a32))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= (fun_app$l ?v0 ?v1) ?v2) (member$a ?v2 ?v3)) (member$a ?v1 (vimage$h ?v0 ?v3)))) :named a33))
(assert (! (forall ((?v0 T_N_sum_T_fun$) (?v1 T_N_sum$) (?v2 T$) (?v3 T_set$)) (=> (and (= (fun_app$j ?v0 ?v1) ?v2) (member$b ?v2 ?v3)) (member$ ?v1 (vimage$f ?v0 ?v3)))) :named a34))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$) (?v1 T_dtree_sum$) (?v2 T$) (?v3 T_set$)) (=> (and (= (fun_app$m ?v0 ?v1) ?v2) (member$b ?v2 ?v3)) (member$a ?v1 (vimage$i ?v0 ?v3)))) :named a35))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T$) (?v2 T$) (?v3 T_set$)) (=> (and (= (fun_app$o ?v0 ?v1) ?v2) (member$b ?v2 ?v3)) (member$b ?v1 (fun_app$n (vimage$c ?v0) ?v3)))) :named a36))
(assert (! (forall ((?v0 T_T_N_sum_fun$) (?v1 T$) (?v2 T_N_sum$) (?v3 T_N_sum_set$)) (=> (and (= (fun_app$a ?v0 ?v1) ?v2) (member$ ?v2 ?v3)) (member$b ?v1 (vimage$ ?v0 ?v3)))) :named a37))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= (fun_app$ ?v0 ?v1) ?v2) (member$a ?v2 ?v3)) (member$b ?v1 (vimage$a ?v0 ?v3)))) :named a38))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1))) :named a39))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inl$a ?v0) (inl$a ?v1)) (= ?v0 ?v1))) :named a40))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1))) :named a41))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inl$a ?v0) (inl$a ?v1)) (= ?v0 ?v1))) :named a42))
(assert (! (forall ((?v0 T_set$)) (! (= (fun_app$n id$a ?v0) ?v0) :pattern ((fun_app$n id$a ?v0)))) :named a43))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$o id$ ?v0) ?v0) :pattern ((fun_app$o id$ ?v0)))) :named a44))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_T_N_sum_fun$) (?v2 T_N_sum$) (?v3 T_N_sum_set$)) (=> (and (= ?v0 (fun_app$h ?v1 ?v2)) (member$ ?v2 ?v3)) (member$ ?v0 (fun_app$c (image$a ?v1) ?v3)))) :named a45))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_N_sum_T_dtree_sum_fun$) (?v2 T_N_sum$) (?v3 T_N_sum_set$)) (=> (and (= ?v0 (fun_app$i ?v1 ?v2)) (member$ ?v2 ?v3)) (member$a ?v0 (image$b ?v1 ?v3)))) :named a46))
(assert (! (forall ((?v0 T$) (?v1 T_N_sum_T_fun$) (?v2 T_N_sum$) (?v3 T_N_sum_set$)) (=> (and (= ?v0 (fun_app$j ?v1 ?v2)) (member$ ?v2 ?v3)) (member$b ?v0 (image$f ?v1 ?v3)))) :named a47))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_T_dtree_sum_fun$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= ?v0 (fun_app$l ?v1 ?v2)) (member$a ?v2 ?v3)) (member$a ?v0 (fun_app$f (image$c ?v1) ?v3)))) :named a48))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_sum_T_fun$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= ?v0 (fun_app$m ?v1 ?v2)) (member$a ?v2 ?v3)) (member$b ?v0 (image$g ?v1 ?v3)))) :named a49))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_T_N_sum_fun$) (?v2 T$) (?v3 T_set$)) (=> (and (= ?v0 (fun_app$a ?v1 ?v2)) (member$b ?v2 ?v3)) (member$ ?v0 (image$h ?v1 ?v3)))) :named a50))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_T_dtree_sum_fun$) (?v2 T$) (?v3 T_set$)) (=> (and (= ?v0 (fun_app$ ?v1 ?v2)) (member$b ?v2 ?v3)) (member$a ?v0 (image$i ?v1 ?v3)))) :named a51))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T$) (?v3 T_set$)) (=> (and (= ?v0 (fun_app$o ?v1 ?v2)) (member$b ?v2 ?v3)) (member$b ?v0 (fun_app$n (image$e ?v1) ?v3)))) :named a52))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_dtree_sum_T_N_sum_fun$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= ?v0 (fun_app$k ?v1 ?v2)) (member$a ?v2 ?v3)) (member$ ?v0 (image$ ?v1 ?v3)))) :named a53))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree$)) (=> (and (= (fun_app$p root$ ?v0) (fun_app$p root$ ?v1)) (= (cont$ ?v0) (cont$ ?v1))) (= ?v0 ?v1))) :named a54))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_set$) (?v2 T_N_sum_T_N_sum_fun$)) (=> (member$ ?v0 ?v1) (member$ (fun_app$h ?v2 ?v0) (fun_app$c (image$a ?v2) ?v1)))) :named a55))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_set$) (?v2 T_N_sum_T_dtree_sum_fun$)) (=> (member$ ?v0 ?v1) (member$a (fun_app$i ?v2 ?v0) (image$b ?v2 ?v1)))) :named a56))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_set$) (?v2 T_N_sum_T_fun$)) (=> (member$ ?v0 ?v1) (member$b (fun_app$j ?v2 ?v0) (image$f ?v2 ?v1)))) :named a57))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_T_dtree_sum_fun$)) (=> (member$a ?v0 ?v1) (member$a (fun_app$l ?v2 ?v0) (fun_app$f (image$c ?v2) ?v1)))) :named a58))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_T_fun$)) (=> (member$a ?v0 ?v1) (member$b (fun_app$m ?v2 ?v0) (image$g ?v2 ?v1)))) :named a59))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T_T_N_sum_fun$)) (=> (member$b ?v0 ?v1) (member$ (fun_app$a ?v2 ?v0) (image$h ?v2 ?v1)))) :named a60))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T_T_dtree_sum_fun$)) (=> (member$b ?v0 ?v1) (member$a (fun_app$ ?v2 ?v0) (image$i ?v2 ?v1)))) :named a61))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T_T_fun$)) (=> (member$b ?v0 ?v1) (member$b (fun_app$o ?v2 ?v0) (fun_app$n (image$e ?v2) ?v1)))) :named a62))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_T_N_sum_fun$)) (=> (member$a ?v0 ?v1) (member$ (fun_app$k ?v2 ?v0) (image$ ?v2 ?v1)))) :named a63))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_set$) (?v2 T_N_sum$) (?v3 T_N_sum_T_N_sum_fun$)) (=> (and (member$ ?v0 ?v1) (= ?v2 (fun_app$h ?v3 ?v0))) (member$ ?v2 (fun_app$c (image$a ?v3) ?v1)))) :named a64))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_set$) (?v2 T_dtree_sum$) (?v3 T_N_sum_T_dtree_sum_fun$)) (=> (and (member$ ?v0 ?v1) (= ?v2 (fun_app$i ?v3 ?v0))) (member$a ?v2 (image$b ?v3 ?v1)))) :named a65))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_set$) (?v2 T$) (?v3 T_N_sum_T_fun$)) (=> (and (member$ ?v0 ?v1) (= ?v2 (fun_app$j ?v3 ?v0))) (member$b ?v2 (image$f ?v3 ?v1)))) :named a66))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_T_dtree_sum_fun$)) (=> (and (member$a ?v0 ?v1) (= ?v2 (fun_app$l ?v3 ?v0))) (member$a ?v2 (fun_app$f (image$c ?v3) ?v1)))) :named a67))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T$) (?v3 T_dtree_sum_T_fun$)) (=> (and (member$a ?v0 ?v1) (= ?v2 (fun_app$m ?v3 ?v0))) (member$b ?v2 (image$g ?v3 ?v1)))) :named a68))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T_N_sum$) (?v3 T_T_N_sum_fun$)) (=> (and (member$b ?v0 ?v1) (= ?v2 (fun_app$a ?v3 ?v0))) (member$ ?v2 (image$h ?v3 ?v1)))) :named a69))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T_dtree_sum$) (?v3 T_T_dtree_sum_fun$)) (=> (and (member$b ?v0 ?v1) (= ?v2 (fun_app$ ?v3 ?v0))) (member$a ?v2 (image$i ?v3 ?v1)))) :named a70))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T$) (?v3 T_T_fun$)) (=> (and (member$b ?v0 ?v1) (= ?v2 (fun_app$o ?v3 ?v0))) (member$b ?v2 (fun_app$n (image$e ?v3) ?v1)))) :named a71))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_N_sum$) (?v3 T_dtree_sum_T_N_sum_fun$)) (=> (and (member$a ?v0 ?v1) (= ?v2 (fun_app$k ?v3 ?v0))) (member$ ?v2 (image$ ?v3 ?v1)))) :named a72))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$) (?v1 T_N_sum_set$) (?v2 T_N_sum_bool_fun$)) (=> (forall ((?v3 T_N_sum$)) (=> (member$ ?v3 (fun_app$c (image$a ?v0) ?v1)) (fun_app$q ?v2 ?v3))) (forall ((?v3 T_N_sum$)) (=> (member$ ?v3 ?v1) (fun_app$q ?v2 (fun_app$h ?v0 ?v3)))))) :named a73))
(assert (! (forall ((?v0 T_T_N_sum_fun$) (?v1 T_set$) (?v2 T_N_sum_bool_fun$)) (=> (forall ((?v3 T_N_sum$)) (=> (member$ ?v3 (image$h ?v0 ?v1)) (fun_app$q ?v2 ?v3))) (forall ((?v3 T$)) (=> (member$b ?v3 ?v1) (fun_app$q ?v2 (fun_app$a ?v0 ?v3)))))) :named a74))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$) (?v1 T_N_sum_set$) (?v2 T_dtree_sum_bool_fun$)) (=> (forall ((?v3 T_dtree_sum$)) (=> (member$a ?v3 (image$b ?v0 ?v1)) (fun_app$r ?v2 ?v3))) (forall ((?v3 T_N_sum$)) (=> (member$ ?v3 ?v1) (fun_app$r ?v2 (fun_app$i ?v0 ?v3)))))) :named a75))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_bool_fun$)) (=> (forall ((?v3 T_dtree_sum$)) (=> (member$a ?v3 (fun_app$f (image$c ?v0) ?v1)) (fun_app$r ?v2 ?v3))) (forall ((?v3 T_dtree_sum$)) (=> (member$a ?v3 ?v1) (fun_app$r ?v2 (fun_app$l ?v0 ?v3)))))) :named a76))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T_set$) (?v2 T_dtree_sum_bool_fun$)) (=> (forall ((?v3 T_dtree_sum$)) (=> (member$a ?v3 (image$i ?v0 ?v1)) (fun_app$r ?v2 ?v3))) (forall ((?v3 T$)) (=> (member$b ?v3 ?v1) (fun_app$r ?v2 (fun_app$ ?v0 ?v3)))))) :named a77))
(assert (! (forall ((?v0 T_N_sum_T_fun$) (?v1 T_N_sum_set$) (?v2 T_bool_fun$)) (=> (forall ((?v3 T$)) (=> (member$b ?v3 (image$f ?v0 ?v1)) (fun_app$s ?v2 ?v3))) (forall ((?v3 T_N_sum$)) (=> (member$ ?v3 ?v1) (fun_app$s ?v2 (fun_app$j ?v0 ?v3)))))) :named a78))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$) (?v1 T_dtree_sum_set$) (?v2 T_bool_fun$)) (=> (forall ((?v3 T$)) (=> (member$b ?v3 (image$g ?v0 ?v1)) (fun_app$s ?v2 ?v3))) (forall ((?v3 T_dtree_sum$)) (=> (member$a ?v3 ?v1) (fun_app$s ?v2 (fun_app$m ?v0 ?v3)))))) :named a79))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T_set$) (?v2 T_bool_fun$)) (=> (forall ((?v3 T$)) (=> (member$b ?v3 (fun_app$n (image$e ?v0) ?v1)) (fun_app$s ?v2 ?v3))) (forall ((?v3 T$)) (=> (member$b ?v3 ?v1) (fun_app$s ?v2 (fun_app$o ?v0 ?v3)))))) :named a80))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_N_sum_bool_fun$)) (=> (forall ((?v3 T_N_sum$)) (=> (member$ ?v3 (image$ ?v0 ?v1)) (fun_app$q ?v2 ?v3))) (forall ((?v3 T_dtree_sum$)) (=> (member$a ?v3 ?v1) (fun_app$q ?v2 (fun_app$k ?v0 ?v3)))))) :named a81))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$) (?v1 T_N_sum_set$) (?v2 T_N_sum_bool_fun$)) (=> (exists ((?v3 T_N_sum$)) (and (member$ ?v3 (fun_app$c (image$a ?v0) ?v1)) (fun_app$q ?v2 ?v3))) (exists ((?v3 T_N_sum$)) (and (member$ ?v3 ?v1) (fun_app$q ?v2 (fun_app$h ?v0 ?v3)))))) :named a82))
(assert (! (forall ((?v0 T_T_N_sum_fun$) (?v1 T_set$) (?v2 T_N_sum_bool_fun$)) (=> (exists ((?v3 T_N_sum$)) (and (member$ ?v3 (image$h ?v0 ?v1)) (fun_app$q ?v2 ?v3))) (exists ((?v3 T$)) (and (member$b ?v3 ?v1) (fun_app$q ?v2 (fun_app$a ?v0 ?v3)))))) :named a83))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$) (?v1 T_N_sum_set$) (?v2 T_dtree_sum_bool_fun$)) (=> (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 (image$b ?v0 ?v1)) (fun_app$r ?v2 ?v3))) (exists ((?v3 T_N_sum$)) (and (member$ ?v3 ?v1) (fun_app$r ?v2 (fun_app$i ?v0 ?v3)))))) :named a84))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_bool_fun$)) (=> (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 (fun_app$f (image$c ?v0) ?v1)) (fun_app$r ?v2 ?v3))) (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 ?v1) (fun_app$r ?v2 (fun_app$l ?v0 ?v3)))))) :named a85))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T_set$) (?v2 T_dtree_sum_bool_fun$)) (=> (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 (image$i ?v0 ?v1)) (fun_app$r ?v2 ?v3))) (exists ((?v3 T$)) (and (member$b ?v3 ?v1) (fun_app$r ?v2 (fun_app$ ?v0 ?v3)))))) :named a86))
(assert (! (forall ((?v0 T_N_sum_T_fun$) (?v1 T_N_sum_set$) (?v2 T_bool_fun$)) (=> (exists ((?v3 T$)) (and (member$b ?v3 (image$f ?v0 ?v1)) (fun_app$s ?v2 ?v3))) (exists ((?v3 T_N_sum$)) (and (member$ ?v3 ?v1) (fun_app$s ?v2 (fun_app$j ?v0 ?v3)))))) :named a87))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$) (?v1 T_dtree_sum_set$) (?v2 T_bool_fun$)) (=> (exists ((?v3 T$)) (and (member$b ?v3 (image$g ?v0 ?v1)) (fun_app$s ?v2 ?v3))) (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 ?v1) (fun_app$s ?v2 (fun_app$m ?v0 ?v3)))))) :named a88))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T_set$) (?v2 T_bool_fun$)) (=> (exists ((?v3 T$)) (and (member$b ?v3 (fun_app$n (image$e ?v0) ?v1)) (fun_app$s ?v2 ?v3))) (exists ((?v3 T$)) (and (member$b ?v3 ?v1) (fun_app$s ?v2 (fun_app$o ?v0 ?v3)))))) :named a89))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_N_sum_bool_fun$)) (=> (exists ((?v3 T_N_sum$)) (and (member$ ?v3 (image$ ?v0 ?v1)) (fun_app$q ?v2 ?v3))) (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 ?v1) (fun_app$q ?v2 (fun_app$k ?v0 ?v3)))))) :named a90))
(assert (! (forall ((?v0 T_N_sum_set$) (?v1 T_N_sum_set$) (?v2 T_N_sum_T_dtree_sum_fun$) (?v3 T_N_sum_T_dtree_sum_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 T_N_sum$)) (=> (member$ ?v4 ?v1) (= (fun_app$i ?v2 ?v4) (fun_app$i ?v3 ?v4))))) (= (image$b ?v2 ?v0) (image$b ?v3 ?v1)))) :named a91))
(assert (! (forall ((?v0 T_N_sum_set$) (?v1 T_N_sum_set$) (?v2 T_N_sum_T_N_sum_fun$) (?v3 T_N_sum_T_N_sum_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 T_N_sum$)) (=> (member$ ?v4 ?v1) (= (fun_app$h ?v2 ?v4) (fun_app$h ?v3 ?v4))))) (= (fun_app$c (image$a ?v2) ?v0) (fun_app$c (image$a ?v3) ?v1)))) :named a92))
(assert (! (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_T_dtree_sum_fun$) (?v3 T_dtree_sum_T_dtree_sum_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 T_dtree_sum$)) (=> (member$a ?v4 ?v1) (= (fun_app$l ?v2 ?v4) (fun_app$l ?v3 ?v4))))) (= (fun_app$f (image$c ?v2) ?v0) (fun_app$f (image$c ?v3) ?v1)))) :named a93))
(assert (! (forall ((?v0 T_set$) (?v1 T_set$) (?v2 T_T_fun$) (?v3 T_T_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 T$)) (=> (member$b ?v4 ?v1) (= (fun_app$o ?v2 ?v4) (fun_app$o ?v3 ?v4))))) (= (fun_app$n (image$e ?v2) ?v0) (fun_app$n (image$e ?v3) ?v1)))) :named a94))
(assert (! (forall ((?v0 T_dtree_sum_set$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_T_N_sum_fun$) (?v3 T_dtree_sum_T_N_sum_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 T_dtree_sum$)) (=> (member$a ?v4 ?v1) (= (fun_app$k ?v2 ?v4) (fun_app$k ?v3 ?v4))))) (= (image$ ?v2 ?v0) (image$ ?v3 ?v1)))) :named a95))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_N_sum_T_N_sum_fun$) (?v2 T_N_sum_set$)) (= (member$ ?v0 (fun_app$c (image$a ?v1) ?v2)) (exists ((?v3 T_N_sum$)) (and (member$ ?v3 ?v2) (= ?v0 (fun_app$h ?v1 ?v3)))))) :named a96))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_T_N_sum_fun$) (?v2 T_set$)) (= (member$ ?v0 (image$h ?v1 ?v2)) (exists ((?v3 T$)) (and (member$b ?v3 ?v2) (= ?v0 (fun_app$a ?v1 ?v3)))))) :named a97))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_N_sum_T_dtree_sum_fun$) (?v2 T_N_sum_set$)) (= (member$a ?v0 (image$b ?v1 ?v2)) (exists ((?v3 T_N_sum$)) (and (member$ ?v3 ?v2) (= ?v0 (fun_app$i ?v1 ?v3)))))) :named a98))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_T_dtree_sum_fun$) (?v2 T_dtree_sum_set$)) (= (member$a ?v0 (fun_app$f (image$c ?v1) ?v2)) (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 ?v2) (= ?v0 (fun_app$l ?v1 ?v3)))))) :named a99))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_T_dtree_sum_fun$) (?v2 T_set$)) (= (member$a ?v0 (image$i ?v1 ?v2)) (exists ((?v3 T$)) (and (member$b ?v3 ?v2) (= ?v0 (fun_app$ ?v1 ?v3)))))) :named a100))
(assert (! (forall ((?v0 T$) (?v1 T_N_sum_T_fun$) (?v2 T_N_sum_set$)) (= (member$b ?v0 (image$f ?v1 ?v2)) (exists ((?v3 T_N_sum$)) (and (member$ ?v3 ?v2) (= ?v0 (fun_app$j ?v1 ?v3)))))) :named a101))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_sum_T_fun$) (?v2 T_dtree_sum_set$)) (= (member$b ?v0 (image$g ?v1 ?v2)) (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 ?v2) (= ?v0 (fun_app$m ?v1 ?v3)))))) :named a102))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T_set$)) (= (member$b ?v0 (fun_app$n (image$e ?v1) ?v2)) (exists ((?v3 T$)) (and (member$b ?v3 ?v2) (= ?v0 (fun_app$o ?v1 ?v3)))))) :named a103))
(assert (! (forall ((?v0 T_N_sum$) (?v1 T_dtree_sum_T_N_sum_fun$) (?v2 T_dtree_sum_set$)) (= (member$ ?v0 (image$ ?v1 ?v2)) (exists ((?v3 T_dtree_sum$)) (and (member$a ?v3 ?v2) (= ?v0 (fun_app$k ?v1 ?v3)))))) :named a104))
(assert (! (forall ((?v0 T_set$)) (! (= (fun_app$n id$a ?v0) ?v0) :pattern ((fun_app$n id$a ?v0)))) :named a105))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$o id$ ?v0) ?v0) :pattern ((fun_app$o id$ ?v0)))) :named a106))
(assert (! (forall ((?v0 T$) (?v1 T$)) (=> (= (inl$ ?v0) (inl$ ?v1)) (= ?v0 ?v1))) :named a107))
(assert (! (forall ((?v0 T$) (?v1 T$)) (=> (= (inl$a ?v0) (inl$a ?v1)) (= ?v0 ?v1))) :named a108))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$) (?v1 T_N_sum$) (?v2 T_N_sum_set$)) (=> (member$ (fun_app$h ?v0 ?v1) ?v2) (member$ ?v1 (vimage$d ?v0 ?v2)))) :named a109))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$) (?v1 T_dtree_sum$) (?v2 T_N_sum_set$)) (=> (member$ (fun_app$k ?v0 ?v1) ?v2) (member$a ?v1 (vimage$g ?v0 ?v2)))) :named a110))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$) (?v1 T_N_sum$) (?v2 T_dtree_sum_set$)) (=> (member$a (fun_app$i ?v0 ?v1) ?v2) (member$ ?v1 (vimage$e ?v0 ?v2)))) :named a111))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum$) (?v2 T_dtree_sum_set$)) (=> (member$a (fun_app$l ?v0 ?v1) ?v2) (member$a ?v1 (vimage$h ?v0 ?v2)))) :named a112))
(assert (! (forall ((?v0 T_N_sum_T_fun$) (?v1 T_N_sum$) (?v2 T_set$)) (=> (member$b (fun_app$j ?v0 ?v1) ?v2) (member$ ?v1 (vimage$f ?v0 ?v2)))) :named a113))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$) (?v1 T_dtree_sum$) (?v2 T_set$)) (=> (member$b (fun_app$m ?v0 ?v1) ?v2) (member$a ?v1 (vimage$i ?v0 ?v2)))) :named a114))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T$) (?v2 T_set$)) (=> (member$b (fun_app$o ?v0 ?v1) ?v2) (member$b ?v1 (fun_app$n (vimage$c ?v0) ?v2)))) :named a115))
(assert (! (forall ((?v0 T_T_N_sum_fun$) (?v1 T$) (?v2 T_N_sum_set$)) (=> (member$ (fun_app$a ?v0 ?v1) ?v2) (member$b ?v1 (vimage$ ?v0 ?v2)))) :named a116))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T$) (?v2 T_dtree_sum_set$)) (=> (member$a (fun_app$ ?v0 ?v1) ?v2) (member$b ?v1 (vimage$a ?v0 ?v2)))) :named a117))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_T_dtree_sum_fun$) (?v2 T_dtree_sum_set$)) (=> (member$a ?v0 (vimage$h ?v1 ?v2)) (member$a (fun_app$l ?v1 ?v0) ?v2))) :named a118))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_T_fun$) (?v2 T_set$)) (=> (member$a ?v0 (vimage$i ?v1 ?v2)) (member$b (fun_app$m ?v1 ?v0) ?v2))) :named a119))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T_set$)) (=> (member$b ?v0 (fun_app$n (vimage$c ?v1) ?v2)) (member$b (fun_app$o ?v1 ?v0) ?v2))) :named a120))
(assert (! (forall ((?v0 T$) (?v1 T_T_N_sum_fun$) (?v2 T_N_sum_set$)) (=> (member$b ?v0 (vimage$ ?v1 ?v2)) (member$ (fun_app$a ?v1 ?v0) ?v2))) :named a121))
(assert (! (forall ((?v0 T$) (?v1 T_T_dtree_sum_fun$) (?v2 T_dtree_sum_set$)) (=> (member$b ?v0 (vimage$a ?v1 ?v2)) (member$a (fun_app$ ?v1 ?v0) ?v2))) :named a122))
(assert (! (forall ((?v0 T$) (?v1 T_T_N_sum_fun$) (?v2 T_N_sum_set$)) (=> (and (member$b ?v0 (vimage$ ?v1 ?v2)) (forall ((?v3 T_N_sum$)) (=> (and (= (fun_app$a ?v1 ?v0) ?v3) (member$ ?v3 ?v2)) false))) false)) :named a123))
(assert (! (forall ((?v0 T$) (?v1 T_T_dtree_sum_fun$) (?v2 T_dtree_sum_set$)) (=> (and (member$b ?v0 (vimage$a ?v1 ?v2)) (forall ((?v3 T_dtree_sum$)) (=> (and (= (fun_app$ ?v1 ?v0) ?v3) (member$a ?v3 ?v2)) false))) false)) :named a124))
(assert (! (forall ((?v0 T_N_sum_bool_fun$) (?v1 T_T_N_sum_fun$) (?v2 T_bool_fun$)) (=> (forall ((?v3 T$)) (= (fun_app$q ?v0 (fun_app$a ?v1 ?v3)) (fun_app$s ?v2 ?v3))) (= (vimage$ ?v1 (collect$ ?v0)) (collect$a ?v2)))) :named a125))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$) (?v1 T_T_dtree_sum_fun$) (?v2 T_bool_fun$)) (=> (forall ((?v3 T$)) (= (fun_app$r ?v0 (fun_app$ ?v1 ?v3)) (fun_app$s ?v2 ?v3))) (= (vimage$a ?v1 (collect$b ?v0)) (collect$a ?v2)))) :named a126))
(check-sat)
;(get-unsat-core)
