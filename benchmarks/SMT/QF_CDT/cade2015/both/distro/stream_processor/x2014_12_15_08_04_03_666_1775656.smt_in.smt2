; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 1000
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort C$ 0)
(declare-sort Nat$ 0)
(declare-sort A_b_fun$ 0)
(declare-sort A_c_fun$ 0)
(declare-sort B_b_fun$ 0)
(declare-sort B_c_fun$ 0)
(declare-sort C_b_fun$ 0)
(declare-sort C_c_fun$ 0)
(declare-sort A_b_sp_nu$ 0)
(declare-sort A_c_sp_nu$ 0)
(declare-sort C_b_sp_nu$ 0)
(declare-sort A_stream_a_fun$ 0)
(declare-sort A_stream_b_fun$ 0)
(declare-sort A_stream_c_fun$ 0)
(declare-sort B_a_stream_fun$ 0)
(declare-sort B_b_stream_fun$ 0)
(declare-sort B_c_stream_fun$ 0)
(declare-sort B_stream_b_fun$ 0)
(declare-sort B_stream_c_fun$ 0)
(declare-sort C_a_stream_fun$ 0)
(declare-sort C_b_b_prod_fun$ 0)
(declare-sort C_b_stream_fun$ 0)
(declare-sort C_c_stream_fun$ 0)
(declare-sort C_stream_b_fun$ 0)
(declare-sort C_stream_c_fun$ 0)
(declare-sort A_stream_nat_fun$ 0)
(declare-sort B_stream_nat_fun$ 0)
(declare-sort C_stream_nat_fun$ 0)
(declare-sort A_stream_bool_fun$ 0)
(declare-sort B_stream_bool_fun$ 0)
(declare-sort C_stream_bool_fun$ 0)
(declare-sort C_b_fun_c_b_fun_fun$ 0)
(declare-sort C_c_fun_c_b_fun_fun$ 0)
(declare-sort B_a_stream_b_fun_fun$ 0)
(declare-sort C_a_stream_c_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun$ 0)
(declare-sort A_stream_b_b_prod_fun$ 0)
(declare-sort A_stream_b_stream_fun$ 0)
(declare-sort A_stream_c_c_prod_fun$ 0)
(declare-sort A_stream_c_stream_fun$ 0)
(declare-sort B_stream_a_stream_fun$ 0)
(declare-sort B_stream_b_stream_fun$ 0)
(declare-sort B_stream_c_stream_fun$ 0)
(declare-sort C_c_prod_b_b_prod_fun$ 0)
(declare-sort C_stream_a_stream_fun$ 0)
(declare-sort C_stream_b_stream_fun$ 0)
(declare-sort C_stream_c_stream_fun$ 0)
(declare-sort B_a_stream_fun_c_c_fun_fun$ 0)
(declare-sort C_b_fun_c_b_stream_fun_fun$ 0)
(declare-sort C_b_stream_fun_c_b_fun_fun$ 0)
(declare-sort C_c_fun_a_stream_b_fun_fun$ 0)
(declare-sort C_c_stream_fun_c_b_fun_fun$ 0)
(declare-sort A_stream_a_stream_c_prod_fun$ 0)
(declare-sort A_stream_b_b_stream_prod_fun$ 0)
(declare-sort A_stream_b_c_stream_prod_fun$ 0)
(declare-sort A_stream_b_stream_b_prod_fun$ 0)
(declare-sort A_stream_b_stream_c_prod_fun$ 0)
(declare-sort A_stream_b_stream_stream_fun$ 0)
(declare-sort A_stream_c_a_stream_prod_fun$ 0)
(declare-sort A_stream_c_b_stream_prod_fun$ 0)
(declare-sort A_stream_c_c_stream_prod_fun$ 0)
(declare-sort A_stream_c_stream_b_prod_fun$ 0)
(declare-sort A_stream_c_stream_c_prod_fun$ 0)
(declare-sort A_stream_c_stream_stream_fun$ 0)
(declare-sort B_stream_c_stream_stream_fun$ 0)
(declare-sort C_stream_b_stream_stream_fun$ 0)
(declare-sort C_stream_c_stream_stream_fun$ 0)
(declare-sort A_stream_a_stream_bool_fun_fun$ 0)
(declare-sort A_stream_a_stream_prod_nat_fun$ 0)
(declare-sort B_stream_b_stream_bool_fun_fun$ 0)
(declare-sort B_stream_b_stream_prod_nat_fun$ 0)
(declare-sort C_stream_c_stream_bool_fun_fun$ 0)
(declare-sort C_stream_c_stream_prod_nat_fun$ 0)
(declare-sort A_stream_a_fun_a_stream_b_fun_fun$ 0)
(declare-sort A_stream_a_fun_a_stream_c_fun_fun$ 0)
(declare-sort A_stream_b_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_b_fun_a_stream_b_fun_fun$ 0)
(declare-sort A_stream_b_fun_a_stream_c_fun_fun$ 0)
(declare-sort A_stream_c_a_stream_c_fun_fun_fun$ 0)
(declare-sort A_stream_c_fun_a_stream_b_fun_fun$ 0)
(declare-sort A_stream_c_fun_a_stream_c_fun_fun$ 0)
(declare-sort A_stream_c_fun_b_stream_c_fun_fun$ 0)
(declare-sort B_a_stream_fun_a_stream_b_fun_fun$ 0)
(declare-sort B_a_stream_fun_c_a_stream_fun_fun$ 0)
(declare-sort B_a_stream_fun_c_b_stream_fun_fun$ 0)
(declare-sort B_a_stream_fun_c_c_stream_fun_fun$ 0)
(declare-sort B_stream_b_fun_a_stream_b_fun_fun$ 0)
(declare-sort B_stream_c_fun_a_stream_b_fun_fun$ 0)
(declare-sort B_stream_c_fun_b_stream_b_fun_fun$ 0)
(declare-sort C_b_stream_fun_c_b_stream_fun_fun$ 0)
(declare-sort C_c_stream_fun_c_b_stream_fun_fun$ 0)
(declare-sort C_stream_c_fun_a_stream_b_fun_fun$ 0)
(declare-sort C_stream_c_fun_c_stream_b_fun_fun$ 0)
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0)
(declare-sort B_stream_a_stream_b_stream_fun_fun$ 0)
(declare-sort C_stream_a_stream_c_stream_fun_fun$ 0)
(declare-sort A_stream_a_stream_b_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_c_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_b_b_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_c_c_prod_fun$ 0)
(declare-sort A_stream_b_stream_b_stream_prod_fun$ 0)
(declare-sort A_stream_b_stream_c_stream_prod_fun$ 0)
(declare-sort A_stream_c_prod_b_stream_b_prod_fun$ 0)
(declare-sort A_stream_c_prod_c_stream_b_prod_fun$ 0)
(declare-sort A_stream_c_stream_b_stream_prod_fun$ 0)
(declare-sort A_stream_c_stream_c_stream_prod_fun$ 0)
(declare-sort B_stream_b_stream_b_stream_prod_fun$ 0)
(declare-sort B_stream_c_prod_b_stream_b_prod_fun$ 0)
(declare-sort B_stream_stream_b_stream_stream_fun$ 0)
(declare-sort C_a_stream_prod_b_b_stream_prod_fun$ 0)
(declare-sort C_a_stream_prod_b_c_stream_prod_fun$ 0)
(declare-sort C_b_stream_prod_b_b_stream_prod_fun$ 0)
(declare-sort C_c_stream_prod_b_b_stream_prod_fun$ 0)
(declare-sort C_stream_b_stream_b_stream_prod_fun$ 0)
(declare-sort C_stream_c_prod_b_stream_b_prod_fun$ 0)
(declare-sort C_stream_c_stream_b_stream_prod_fun$ 0)
(declare-sort C_stream_stream_b_stream_stream_fun$ 0)
(declare-sort C_b_fun_c_c_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_b_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_c_fun_fun$ 0)
(declare-sort A_stream_b_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort A_stream_b_fun_a_stream_c_stream_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_b_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_c_fun_fun$ 0)
(declare-sort A_stream_c_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort A_stream_c_fun_a_stream_c_stream_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_b_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_c_fun_fun$ 0)
(declare-sort B_a_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort B_a_stream_fun_a_stream_c_stream_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_a_stream_b_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_a_stream_c_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_b_stream_c_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_c_stream_c_fun_fun$ 0)
(declare-sort B_stream_b_stream_fun_b_stream_b_fun_fun$ 0)
(declare-sort C_a_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort C_a_stream_fun_a_stream_c_stream_fun_fun$ 0)
(declare-sort C_b_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort C_c_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort C_stream_a_stream_fun_a_stream_b_fun_fun$ 0)
(declare-sort C_stream_a_stream_fun_a_stream_c_fun_fun$ 0)
(declare-sort C_stream_b_stream_fun_c_stream_b_fun_fun$ 0)
(declare-sort A_stream_a_stream_prod_a_stream_c_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_b_b_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_b_c_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_b_stream_b_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_b_stream_c_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_c_a_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_c_b_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_c_c_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_c_stream_b_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_c_stream_c_prod_fun$ 0)
(declare-sort C_stream_b_stream_fun_c_stream_nat_fun_fun$ 0)
(declare-sort A_stream_c_fun_b_a_stream_fun_c_c_fun_fun_fun$ 0)
(declare-sort B_b_fun_b_stream_b_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort C_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort C_b_fun_b_stream_c_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort C_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun$ 0)
(declare-sort C_b_fun_c_stream_c_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort C_c_fun_a_stream_c_fun_b_stream_c_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_b_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_c_fun_a_stream_c_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ 0)
(declare-sort A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ 0)
(declare-sort A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ 0)
(declare-sort B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ 0)
(declare-sort B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ 0)
(declare-sort B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ 0)
(declare-sort C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ 0)
(declare-sort C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ 0)
(declare-sort C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ 0)
(declare-sort C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ 0)
(declare-sort A_stream_a_stream_prod_b_stream_b_stream_prod_fun$ 0)
(declare-sort A_stream_a_stream_prod_c_stream_c_stream_prod_fun$ 0)
(declare-sort A_stream_b_stream_prod_b_stream_b_stream_prod_fun$ 0)
(declare-sort A_stream_c_stream_prod_c_stream_c_stream_prod_fun$ 0)
(declare-sort B_stream_b_stream_prod_b_stream_b_stream_prod_fun$ 0)
(declare-sort C_stream_b_stream_prod_b_stream_b_stream_prod_fun$ 0)
(declare-sort C_stream_c_stream_prod_b_stream_b_stream_prod_fun$ 0)
(declare-sort A_stream_b_fun_b_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_c_stream_stream_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_b_stream_stream_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_c_stream_stream_fun_fun$ 0)
(declare-sort A_stream_b_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_b_fun_c_stream_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_b_a_stream_fun_c_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_fun_b_stream_a_stream_fun_a_stream_c_fun_fun_fun$ 0)
(declare-sort A_stream_c_fun_b_stream_a_stream_fun_b_stream_c_fun_fun_fun$ 0)
(declare-sort A_stream_c_fun_b_stream_a_stream_fun_c_stream_c_fun_fun_fun$ 0)
(declare-sort A_stream_c_fun_c_stream_a_stream_fun_a_stream_c_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_b_a_stream_fun_c_c_stream_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_stream_fun_a_stream_b_stream_stream_fun_fun$ 0)
(declare-sort B_a_stream_fun_c_c_fun_fun_b_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_bool_fun_fun_a_stream_a_stream_bool_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_c_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_b_a_stream_fun_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_c_a_stream_fun_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort B_stream_b_stream_fun_c_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort C_stream_b_stream_fun_c_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_a_stream_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ 0)
(declare-sort B_stream_b_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_stream_b_stream_fun_b_stream_b_stream_fun_b_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_stream_b_stream_fun_c_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ 0)
(declare-sort C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort C_stream_b_stream_fun_c_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort C_stream_c_stream_fun_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort C_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ 0)
(declare-sort C_stream_c_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ 0)
(declare-sort B_a_stream_fun_c_a_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_a_stream_fun_c_a_stream_fun_fun_b_a_stream_fun_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort B_a_stream_fun_c_b_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_a_stream_fun_c_c_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_a_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_b_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_c_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort C_stream_a_stream_fun_a_stream_c_fun_fun_c_stream_a_stream_fun_a_stream_b_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun_fun$ 0)
(declare-sort A_stream_bool_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun_fun$ 0)
(declare-sort A_stream_bool_fun_a_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ 0)
(declare-sort A_stream_bool_fun_a_stream_c_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun_fun$ 0)
(declare-sort C_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun_c_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_b_stream_fun_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_c_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_c_stream_fun_fun_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ 0)
(declare-sort A_stream_bool_fun_a_stream_b_stream_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun_fun_fun$ 0)
(declare-sort A_stream_bool_fun_a_stream_c_stream_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun_fun_fun$ 0)
(declare-sort B_stream_b_fun_a_stream_b_fun_fun_b_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ 0)
(declare-sort B_stream_a_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$ 0)
(declare-sort C_stream_b_stream_fun_c_stream_b_stream_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ 0)
(declare-sort A_stream_b_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ 0)
(declare-sort C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ 0)
(declare-sort B_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_c_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun_c_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun_fun$ 0)
(declare-sort A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun_fun$ 0)
(declare-codatatypes () ((B_stream$ (sCons$ (shd$ B$) (stl$ B_stream$)))
  (A_stream$ (sCons$a (shd$a A$) (stl$a A_stream$)))
  (C_stream$ (sCons$b (shd$b C$) (stl$b C_stream$)))))
(declare-datatypes () ((C_stream_b_stream_prod$ (pair$ (fst$ C_stream$) (snd$ B_stream$)))
  (B_stream_c_stream_prod$ (pair$a (fst$a B_stream$) (snd$a C_stream$)))
  (A_stream_b_stream_fun_a_stream_b_stream_fun_prod$ (pair$b (select$ A_stream_b_stream_fun$) (selecta$ A_stream_b_stream_fun$)))
  (B_b_prod$ (pair$c (fst$b B$) (snd$b B$)))
  (B_stream_b_stream_prod$ (pair$d (fst$c B_stream$) (snd$c B_stream$)))
  (C_stream_c_stream_prod$ (pair$e (fst$d C_stream$) (snd$d C_stream$)))))
(declare-codatatypes () ((C_stream_stream$ (sCons$c (shd$c C_stream$) (stl$c C_stream_stream$)))
  (B_stream_stream$ (sCons$d (shd$d B_stream$) (stl$d B_stream_stream$)))
  (A_stream_stream$ (sCons$e (shd$e A_stream$) (stl$e A_stream_stream$)))))
(declare-datatypes () ((C_c_prod$ (pair$f (fst$e C$) (snd$e C$)))
  (B_stream_b_prod$ (pair$g (fst$f B_stream$) (snd$f B$)))
  (C_stream_c_prod$ (pair$h (fst$g C_stream$) (snd$g C$)))
  (B_stream_c_prod$ (pair$i (fst$h B_stream$) (snd$h C$)))
  (C_stream_b_prod$ (pair$j (fst$i C_stream$) (snd$i B$)))
  (A_stream_c_prod$ (pair$k (fst$j A_stream$) (snd$j C$)))
  (B_b_stream_prod$ (pair$l (fst$k B$) (snd$k B_stream$)))
  (C_c_stream_prod$ (pair$m (fst$l C$) (snd$l C_stream$)))
  (C_b_stream_prod$ (pair$n (fst$m C$) (snd$m B_stream$)))
  (B_c_stream_prod$ (pair$o (fst$n B$) (snd$n C_stream$)))
  (C_a_stream_prod$ (pair$p (fst$o C$) (snd$o A_stream$)))
  (A_stream_b_stream_prod$ (pair$q (fst$p A_stream$) (snd$p B_stream$)))
  (A_stream_c_stream_prod$ (pair$r (fst$q A_stream$) (snd$q C_stream$)))
  (A_stream_a_stream_prod$ (pair$s (fst$r A_stream$) (snd$r A_stream$)))))
(declare-fun id$ () A_stream_c_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun sp$ () C_b_sp_nu$)
(declare-fun uu$ () C_stream_c_stream_bool_fun_fun$)
(declare-fun id$a () A_stream_b_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun id$b () B_stream_b_stream_fun$)
(declare-fun id$c () A_stream_a_stream_fun$)
(declare-fun id$d () B_b_fun$)
(declare-fun id$e () B_stream_stream_b_stream_stream_fun$)
(declare-fun id$f () B_stream_b_stream_prod_b_stream_b_stream_prod_fun$)
(declare-fun id$g () C_stream_c_stream_fun$)
(declare-fun id$h () B_stream_b_stream_fun_b_stream_b_stream_fun_fun$)
(declare-fun id$i () C_stream_b_stream_fun_c_stream_b_stream_fun_fun$)
(declare-fun id$j () A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun id$k () C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun id$l () C_b_fun_c_b_fun_fun$)
(declare-fun id$m () C_c_fun$)
(declare-fun sp$a () A_c_sp_nu$)
(declare-fun uua$ () B_stream_b_stream_bool_fun_fun$)
(declare-fun uub$ () A_stream_a_stream_bool_fun_fun$)
(declare-fun comp$ () C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun smap$ (C_b_fun$) C_stream_b_stream_fun$)
(declare-fun swap$ (B_stream_a_stream_fun$) B_stream_a_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$)
(declare-fun comp$a (B_stream_b_stream_fun$) A_stream_b_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun comp$b (A_stream_c_stream_fun$) A_stream_a_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun comp$c (A_stream_b_stream_fun$) A_stream_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun comp$d (C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$e () C_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$)
(declare-fun comp$f (B_stream_b_stream_fun$) C_stream_b_stream_fun_c_stream_b_stream_fun_fun$)
(declare-fun comp$g (C_stream_c_stream_fun$) A_stream_c_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun comp$h (C_stream_b_stream_fun$) C_stream_c_stream_fun_c_stream_b_stream_fun_fun$)
(declare-fun comp$i (B_b_fun$) A_stream_b_fun_a_stream_b_fun_fun$)
(declare-fun comp$j (B_b_fun$) C_b_fun_c_b_fun_fun$)
(declare-fun comp$k (C_c_fun$) A_stream_c_fun_a_stream_c_fun_fun$)
(declare-fun comp$l (C_b_fun$) C_c_fun_c_b_fun_fun$)
(declare-fun comp$m (A_stream_c_fun$) A_stream_a_stream_fun_a_stream_c_fun_fun$)
(declare-fun comp$n (A_stream_b_fun$) A_stream_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun comp$o (B_stream_c_stream_fun$) A_stream_b_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun comp$p (C_stream_b_stream_fun$) B_stream_c_stream_fun_b_stream_b_stream_fun_fun$)
(declare-fun comp$q (B_stream_b_stream_fun$) B_stream_b_stream_fun_b_stream_b_stream_fun_fun$)
(declare-fun comp$r (A_stream_b_stream_fun$) C_stream_a_stream_fun_c_stream_b_stream_fun_fun$)
(declare-fun comp$s (C_stream_a_stream_fun$) A_stream_c_stream_fun_a_stream_a_stream_fun_fun$)
(declare-fun comp$t (A_stream_b_stream_fun$) B_stream_a_stream_fun_b_stream_b_stream_fun_fun$)
(declare-fun comp$u (B_stream_a_stream_fun$) A_stream_b_stream_fun_a_stream_a_stream_fun_fun$)
(declare-fun comp$v (C_b_stream_fun$) A_stream_c_fun_a_stream_b_stream_fun_fun$)
(declare-fun comp$w (B_stream_b_fun$) C_stream_b_stream_fun_c_stream_b_fun_fun$)
(declare-fun comp$x (B_stream_b_fun$) C_b_stream_fun_c_b_fun_fun$)
(declare-fun comp$y (C_stream_b_fun$) A_stream_c_stream_fun_a_stream_b_fun_fun$)
(declare-fun comp$z (B_stream_b_fun$) B_stream_b_stream_fun_b_stream_b_fun_fun$)
(declare-fun sdrop$ (Nat$) B_stream_b_stream_fun$)
(declare-fun smap$a (C_stream_b_stream_fun$) C_stream_stream_b_stream_stream_fun$)
(declare-fun smap$b (A_c_fun$) A_stream_c_stream_fun$)
(declare-fun smap$c (A_b_fun$) A_stream_b_stream_fun$)
(declare-fun smap$d (C_c_fun$) C_stream_c_stream_fun$)
(declare-fun smap$e (B_c_fun$) B_stream_c_stream_fun$)
(declare-fun smap$f (B_b_fun$) B_stream_b_stream_fun$)
(declare-fun smap$g (C_c_stream_fun$) C_stream_c_stream_stream_fun$)
(declare-fun smap$h (C_b_stream_fun$) C_stream_b_stream_stream_fun$)
(declare-fun smap$i (B_c_stream_fun$) B_stream_c_stream_stream_fun$)
(declare-fun smap$j (A_stream_c_stream_fun$ A_stream_stream$) C_stream_stream$)
(declare-fun smap$k (A_stream_b_stream_fun$ A_stream_stream$) B_stream_stream$)
(declare-fun smap$l (A_stream_c_fun$ A_stream_stream$) C_stream$)
(declare-fun smap$m (A_stream_b_fun$ A_stream_stream$) B_stream$)
(declare-fun smap$n (B_stream_b_stream_fun$) B_stream_stream_b_stream_stream_fun$)
(declare-fun smap$o (C_stream_c_stream_fun$ C_stream_stream$) C_stream_stream$)
(declare-fun smap$p (B_stream_c_stream_fun$ B_stream_stream$) C_stream_stream$)
(declare-fun smap$q (A_stream_a_stream_fun$ A_stream_stream$) A_stream_stream$)
(declare-fun swap$a (B_stream_a_stream_fun$) B_stream_a_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun swap$b (A_stream$) A_stream_a_stream_c_fun_a_stream_c_fun_fun_fun$)
(declare-fun swap$c (A_stream$) A_stream_a_stream_b_fun_a_stream_b_fun_fun_fun$)
(declare-fun swap$d (A_stream$) A_stream_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$)
(declare-fun swap$e (A_stream$) A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun swap$f (A_stream$) A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$aa (B_stream_b_fun$) A_stream_b_stream_fun_a_stream_b_fun_fun$)
(declare-fun comp$ab (C_c_stream_fun$) A_stream_c_fun_a_stream_c_stream_fun_fun$)
(declare-fun comp$ac (C_stream_b_fun$) C_c_stream_fun_c_b_fun_fun$)
(declare-fun comp$ad (C_b_fun$) C_stream_c_fun_c_stream_b_fun_fun$)
(declare-fun comp$ae (C_stream_c_fun$) A_stream_c_stream_fun_a_stream_c_fun_fun$)
(declare-fun comp$af () C_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun$)
(declare-fun comp$ag (B_stream_c_fun$) A_stream_b_stream_fun_a_stream_c_fun_fun$)
(declare-fun comp$ah (B_b_stream_fun$) C_b_fun_c_b_stream_fun_fun$)
(declare-fun comp$ai (C_stream_b_stream_fun$) C_c_stream_fun_c_b_stream_fun_fun$)
(declare-fun comp$aj (B_b_stream_fun$) A_stream_b_fun_a_stream_b_stream_fun_fun$)
(declare-fun comp$ak (B_stream_b_stream_fun$) C_b_stream_fun_c_b_stream_fun_fun$)
(declare-fun comp$al (A_stream_a_stream_fun$) A_stream_a_stream_fun_a_stream_a_stream_fun_fun$)
(declare-fun comp$am (A_stream_c_stream_b_stream_prod_fun$ A_stream_a_stream_fun$) A_stream_c_stream_b_stream_prod_fun$)
(declare-fun comp$an (A_stream_b_stream_c_stream_prod_fun$ A_stream_a_stream_fun$) A_stream_b_stream_c_stream_prod_fun$)
(declare-fun comp$ao (C_stream_c_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$)
(declare-fun comp$ap (C_b_b_prod_fun$ A_stream_c_fun$) A_stream_b_b_prod_fun$)
(declare-fun comp$aq (B_stream_b_stream_b_stream_prod_fun$ A_stream_b_stream_fun$) A_stream_b_stream_b_stream_prod_fun$)
(declare-fun comp$ar (C_stream_b_stream_b_stream_prod_fun$ C_stream_c_stream_fun$) C_stream_b_stream_b_stream_prod_fun$)
(declare-fun comp$as (A_stream_b_stream_b_stream_prod_fun$ C_stream_a_stream_fun$) C_stream_b_stream_b_stream_prod_fun$)
(declare-fun comp$at (A_stream_b_stream_b_stream_prod_fun$ A_stream_a_stream_fun$) A_stream_b_stream_b_stream_prod_fun$)
(declare-fun comp$au (A_stream_c_stream_c_stream_prod_fun$ A_stream_a_stream_fun$) A_stream_c_stream_c_stream_prod_fun$)
(declare-fun comp$av (C_stream_b_stream_b_stream_prod_fun$ A_stream_c_stream_fun$) A_stream_b_stream_b_stream_prod_fun$)
(declare-fun comp$aw (C_stream_stream_b_stream_stream_fun$) A_stream_c_stream_stream_fun_a_stream_b_stream_stream_fun_fun$)
(declare-fun comp$ax (A_c_fun$) A_stream_a_fun_a_stream_c_fun_fun$)
(declare-fun comp$ay (A_b_fun$) A_stream_a_fun_a_stream_b_fun_fun$)
(declare-fun comp$az (B_c_fun$) A_stream_b_fun_a_stream_c_fun_fun$)
(declare-fun comp$ba (C_stream_c_stream_stream_fun$) A_stream_c_stream_fun_a_stream_c_stream_stream_fun_fun$)
(declare-fun comp$bb (C_stream_b_stream_stream_fun$) A_stream_c_stream_fun_a_stream_b_stream_stream_fun_fun$)
(declare-fun comp$bc (B_stream_c_stream_stream_fun$) A_stream_b_stream_fun_a_stream_c_stream_stream_fun_fun$)
(declare-fun comp$bd (B_c_stream_fun$) A_stream_b_fun_a_stream_c_stream_fun_fun$)
(declare-fun comp$be (C_c_fun_a_stream_b_fun_fun$) B_a_stream_fun_c_c_fun_fun_b_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun comp$bf (C_stream_c_fun_a_stream_b_fun_fun$) B_stream_a_stream_fun_c_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun comp$bg (B_stream_c_fun_a_stream_b_fun_fun$) B_stream_a_stream_fun_b_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun comp$bh (A_stream_c_fun_a_stream_b_fun_fun$) C_stream_a_stream_fun_a_stream_c_fun_fun_c_stream_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun comp$bi (A_stream_c_fun_a_stream_b_fun_fun$) B_stream_a_stream_fun_a_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun comp$bj (C_c_stream_fun_a_stream_b_stream_fun_fun$) B_a_stream_fun_c_c_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$bk (C_b_stream_fun_a_stream_b_stream_fun_fun$) B_a_stream_fun_c_b_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$bl (C_a_stream_fun_a_stream_c_stream_fun_fun$) B_a_stream_fun_c_a_stream_fun_fun_b_a_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun comp$bm (C_a_stream_fun_a_stream_b_stream_fun_fun$) B_a_stream_fun_c_a_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$bn (A_stream_c_stream_fun_a_stream_c_stream_fun_fun$) A_stream_c_stream_fun_a_stream_c_stream_fun_fun_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun comp$bo (A_stream_b_stream_fun_a_stream_b_stream_fun_fun$) A_stream_b_stream_fun_a_stream_b_stream_fun_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$bp (C_stream_c_stream_prod_b_stream_b_stream_prod_fun$ A_stream_c_stream_c_stream_prod_fun$) A_stream_b_stream_b_stream_prod_fun$)
(declare-fun comp$bq (C_c_prod_b_b_prod_fun$ A_stream_c_c_prod_fun$) A_stream_b_b_prod_fun$)
(declare-fun comp$br (C_stream_c_prod_b_stream_b_prod_fun$ A_stream_c_stream_c_prod_fun$) A_stream_b_stream_b_prod_fun$)
(declare-fun comp$bs (B_stream_c_prod_b_stream_b_prod_fun$ A_stream_b_stream_c_prod_fun$) A_stream_b_stream_b_prod_fun$)
(declare-fun comp$bt (A_stream_c_prod_c_stream_b_prod_fun$ A_stream_a_stream_c_prod_fun$) A_stream_c_stream_b_prod_fun$)
(declare-fun comp$bu (A_stream_c_prod_b_stream_b_prod_fun$ A_stream_a_stream_c_prod_fun$) A_stream_b_stream_b_prod_fun$)
(declare-fun comp$bv (C_c_stream_prod_b_b_stream_prod_fun$ A_stream_c_c_stream_prod_fun$) A_stream_b_b_stream_prod_fun$)
(declare-fun comp$bw (C_b_stream_prod_b_b_stream_prod_fun$ A_stream_c_b_stream_prod_fun$) A_stream_b_b_stream_prod_fun$)
(declare-fun comp$bx (C_a_stream_prod_b_c_stream_prod_fun$ A_stream_c_a_stream_prod_fun$) A_stream_b_c_stream_prod_fun$)
(declare-fun comp$by (C_a_stream_prod_b_b_stream_prod_fun$ A_stream_c_a_stream_prod_fun$) A_stream_b_b_stream_prod_fun$)
(declare-fun comp$bz (A_stream_b_stream_fun_a_stream_b_stream_fun_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$ca (B_stream_b_stream_prod_b_stream_b_stream_prod_fun$ B_stream_b_stream_b_stream_prod_fun$ B_stream$) B_stream_b_stream_prod$)
(declare-fun comp$cb (C_stream_b_stream_prod_b_stream_b_stream_prod_fun$ C_stream_c_stream_b_stream_prod_fun$ C_stream$) B_stream_b_stream_prod$)
(declare-fun comp$cc (A_stream_b_stream_prod_b_stream_b_stream_prod_fun$ A_stream_a_stream_b_stream_prod_fun$ A_stream$) B_stream_b_stream_prod$)
(declare-fun comp$cd (A_stream_c_stream_prod_c_stream_c_stream_prod_fun$ A_stream_a_stream_c_stream_prod_fun$ A_stream$) C_stream_c_stream_prod$)
(declare-fun comp$ce (C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$) C_stream_b_stream_fun_c_stream_b_stream_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun comp$cf (A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$) C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun comp$cg (A_stream_c_stream_fun_a_stream_b_stream_fun_fun$) A_stream_c_stream_fun_a_stream_c_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$ch (A_stream_b_stream_fun_a_stream_b_stream_fun_fun$) A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun comp$ci (C_stream_c_stream_prod_b_stream_b_stream_prod_fun$ A_stream_a_stream_prod_c_stream_c_stream_prod_fun$) A_stream_a_stream_prod_b_stream_b_stream_prod_fun$)
(declare-fun comp$cj (C_c_prod_b_b_prod_fun$ A_stream_a_stream_prod_c_c_prod_fun$) A_stream_a_stream_prod_b_b_prod_fun$)
(declare-fun comp$ck (C_stream_c_prod_b_stream_b_prod_fun$ A_stream_a_stream_prod_c_stream_c_prod_fun$) A_stream_a_stream_prod_b_stream_b_prod_fun$)
(declare-fun comp$cl (B_stream_c_prod_b_stream_b_prod_fun$ A_stream_a_stream_prod_b_stream_c_prod_fun$) A_stream_a_stream_prod_b_stream_b_prod_fun$)
(declare-fun comp$cm (A_stream_c_prod_c_stream_b_prod_fun$ A_stream_a_stream_prod_a_stream_c_prod_fun$) A_stream_a_stream_prod_c_stream_b_prod_fun$)
(declare-fun comp$cn (A_stream_c_prod_b_stream_b_prod_fun$ A_stream_a_stream_prod_a_stream_c_prod_fun$) A_stream_a_stream_prod_b_stream_b_prod_fun$)
(declare-fun comp$co (C_c_stream_prod_b_b_stream_prod_fun$ A_stream_a_stream_prod_c_c_stream_prod_fun$) A_stream_a_stream_prod_b_b_stream_prod_fun$)
(declare-fun comp$cp (C_b_stream_prod_b_b_stream_prod_fun$ A_stream_a_stream_prod_c_b_stream_prod_fun$) A_stream_a_stream_prod_b_b_stream_prod_fun$)
(declare-fun comp$cq (C_a_stream_prod_b_c_stream_prod_fun$ A_stream_a_stream_prod_c_a_stream_prod_fun$) A_stream_a_stream_prod_b_c_stream_prod_fun$)
(declare-fun comp$cr (C_a_stream_prod_b_b_stream_prod_fun$ A_stream_a_stream_prod_c_a_stream_prod_fun$) A_stream_a_stream_prod_b_b_stream_prod_fun$)
(declare-fun comp$cs (B_stream_b_stream_prod_nat_fun$ C_stream_c_stream_prod_b_stream_b_stream_prod_fun$) C_stream_c_stream_prod_nat_fun$)
(declare-fun comp$ct (B_stream_nat_fun$) C_stream_b_stream_fun_c_stream_nat_fun_fun$)
(declare-fun comp$cu (C_stream_c_stream_prod_nat_fun$ A_stream_a_stream_prod_c_stream_c_stream_prod_fun$) A_stream_a_stream_prod_nat_fun$)
(declare-fun comp$cv (C_stream_nat_fun$ A_stream_c_stream_fun$) A_stream_nat_fun$)
(declare-fun comp$cw (B_stream_b_stream_prod_nat_fun$ A_stream_a_stream_prod_b_stream_b_stream_prod_fun$) A_stream_a_stream_prod_nat_fun$)
(declare-fun comp$cx (B_stream_nat_fun$ A_stream_b_stream_fun$) A_stream_nat_fun$)
(declare-fun comp$cy (C_stream_a_stream_fun$) B_stream_c_stream_fun_b_stream_a_stream_fun_fun$)
(declare-fun convol$ (A_stream_c_stream_fun$ A_stream_b_stream_fun$) A_stream_c_stream_b_stream_prod_fun$)
(declare-fun run_nu$ (A_b_sp_nu$) A_stream_b_stream_fun$)
(declare-fun sdrop$a (Nat$) C_stream_c_stream_fun$)
(declare-fun sdrop$b (Nat$ B_stream_stream$) B_stream_stream$)
(declare-fun sdrop$c (Nat$ C_stream_stream$) C_stream_stream$)
(declare-fun sdrop$d (Nat$ A_stream_stream$) A_stream_stream$)
(declare-fun convol$a (A_stream_b_stream_fun$ A_stream_c_stream_fun$) A_stream_b_stream_c_stream_prod_fun$)
(declare-fun convol$b (C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) C_stream_c_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$)
(declare-fun convol$c (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ B_stream_a_stream_fun_a_stream_b_stream_fun_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$)
(declare-fun convol$d (C_b_fun$ C_b_fun$) C_b_b_prod_fun$)
(declare-fun convol$e (A_stream_b_fun$ A_stream_b_fun$) A_stream_b_b_prod_fun$)
(declare-fun convol$f (B_stream_b_stream_fun$ B_stream_b_stream_fun$) B_stream_b_stream_b_stream_prod_fun$)
(declare-fun convol$g (A_stream_b_stream_fun$ A_stream_b_stream_fun$) A_stream_b_stream_b_stream_prod_fun$)
(declare-fun convol$h (C_stream_b_stream_fun$ C_stream_b_stream_fun$) C_stream_b_stream_b_stream_prod_fun$)
(declare-fun convol$i (A_stream_c_stream_fun$ A_stream_c_stream_fun$) A_stream_c_stream_c_stream_prod_fun$)
(declare-fun convol$j (A_stream_c_fun$ A_stream_c_fun$) A_stream_c_c_prod_fun$)
(declare-fun convol$k (A_stream_c_stream_fun$ A_stream_c_fun$) A_stream_c_stream_c_prod_fun$)
(declare-fun convol$l (A_stream_b_stream_fun$ A_stream_b_fun$) A_stream_b_stream_b_prod_fun$)
(declare-fun convol$m (A_stream_b_stream_fun$ A_stream_c_fun$) A_stream_b_stream_c_prod_fun$)
(declare-fun convol$n (A_stream_a_stream_fun$ A_stream_c_fun$) A_stream_a_stream_c_prod_fun$)
(declare-fun convol$o (A_stream_c_stream_fun$ A_stream_b_fun$) A_stream_c_stream_b_prod_fun$)
(declare-fun convol$p (A_stream_c_fun$ A_stream_c_stream_fun$) A_stream_c_c_stream_prod_fun$)
(declare-fun convol$q (A_stream_b_fun$ A_stream_b_stream_fun$) A_stream_b_b_stream_prod_fun$)
(declare-fun convol$r (A_stream_c_fun$ A_stream_b_stream_fun$) A_stream_c_b_stream_prod_fun$)
(declare-fun convol$s (A_stream_c_fun$ A_stream_a_stream_fun$) A_stream_c_a_stream_prod_fun$)
(declare-fun convol$t (A_stream_b_fun$ A_stream_c_stream_fun$) A_stream_b_c_stream_prod_fun$)
(declare-fun convol$u (C_stream_c_stream_fun$ C_stream_b_stream_fun$) C_stream_c_stream_b_stream_prod_fun$)
(declare-fun convol$v (A_stream_a_stream_fun$ A_stream_b_stream_fun$) A_stream_a_stream_b_stream_prod_fun$)
(declare-fun convol$w (A_stream_a_stream_fun$ A_stream_c_stream_fun$) A_stream_a_stream_c_stream_prod_fun$)
(declare-fun fun_app$ (C_stream_bool_fun$ C_stream$) Bool)
(declare-fun fun_upd$ (B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) B_stream_a_stream_fun_c_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$)
(declare-fun map_fun$ (A_stream_c_stream_fun$) C_stream_b_stream_fun_c_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun run_nu$a (C_b_sp_nu$) C_stream_b_stream_fun$)
(declare-fun run_nu$b (A_c_sp_nu$) A_stream_c_stream_fun$)
(declare-fun fun_app$a (C_stream_c_stream_bool_fun_fun$ C_stream$) C_stream_bool_fun$)
(declare-fun fun_app$b (B_stream_bool_fun$ B_stream$) Bool)
(declare-fun fun_app$c (B_stream_b_stream_bool_fun_fun$ B_stream$) B_stream_bool_fun$)
(declare-fun fun_app$d (A_stream_bool_fun$ A_stream$) Bool)
(declare-fun fun_app$e (A_stream_a_stream_bool_fun_fun$ A_stream$) A_stream_bool_fun$)
(declare-fun fun_app$f (A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ A_stream_c_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$g (C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ C_stream_b_stream_fun$) A_stream_c_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$h (A_stream_b_stream_fun$ A_stream$) B_stream$)
(declare-fun fun_app$i (A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ A_stream_b_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$j (B_stream_b_stream_fun$ B_stream$) B_stream$)
(declare-fun fun_app$k (A_stream_c_stream_fun$ A_stream$) C_stream$)
(declare-fun fun_app$l (A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ A_stream_a_stream_fun$) A_stream_c_stream_fun$)
(declare-fun fun_app$m (A_stream_a_stream_fun$ A_stream$) A_stream$)
(declare-fun fun_app$n (A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ A_stream_a_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$o (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ B_stream_a_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$p (B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$q (C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ C_stream_c_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$r (B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ B_stream_a_stream_fun$) C_stream_c_stream_fun$)
(declare-fun fun_app$s (A_stream_b_fun$ A_stream$) B$)
(declare-fun fun_app$t (A_stream_c_fun_a_stream_b_fun_fun$ A_stream_c_fun$) A_stream_b_fun$)
(declare-fun fun_app$u (C_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$ C_b_fun$) A_stream_c_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$v (C_b_fun$ C$) B$)
(declare-fun fun_app$w (A_stream_c_fun$ A_stream$) C$)
(declare-fun fun_app$x (C_stream_b_stream_fun$ C_stream$) B_stream$)
(declare-fun fun_app$y (C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ C_stream_b_stream_fun$) C_stream_b_stream_fun$)
(declare-fun fun_app$z (A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ A_stream_c_stream_fun$) A_stream_c_stream_fun$)
(declare-fun fun_upd$a (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun fun_upd$b (A_stream_c_fun$) A_stream_c_a_stream_c_fun_fun_fun$)
(declare-fun fun_upd$c (A_stream_b_fun$) A_stream_b_a_stream_b_fun_fun_fun$)
(declare-fun fun_upd$d (A_stream_a_stream_fun$) A_stream_a_stream_a_stream_a_stream_fun_fun_fun$)
(declare-fun fun_upd$e (A_stream_c_stream_fun$) A_stream_c_stream_a_stream_c_stream_fun_fun_fun$)
(declare-fun fun_upd$f (A_stream_b_stream_fun$) A_stream_b_stream_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$a (C_stream_b_stream_fun$) A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$)
(declare-fun map_fun$b (A_stream_b_stream_fun$) A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$c (A_stream_c_fun$) C_b_fun_c_c_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$d (C_b_fun$) A_stream_c_fun_b_a_stream_fun_c_c_fun_fun_fun$)
(declare-fun map_fun$e (A_stream_b_fun$) A_stream_b_fun_b_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$f (A_stream_c_stream_fun$) C_b_fun_c_stream_c_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$g (C_stream_b_stream_fun$) A_stream_c_fun_b_stream_a_stream_fun_c_stream_c_fun_fun_fun$)
(declare-fun map_fun$h (A_stream_b_stream_fun$) A_stream_b_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$i (A_stream_b_stream_fun$) C_b_fun_b_stream_c_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$j (B_stream_b_stream_fun$) A_stream_c_fun_b_stream_a_stream_fun_b_stream_c_fun_fun_fun$)
(declare-fun map_fun$k (A_stream_a_stream_fun$) C_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$l (A_stream_c_stream_fun$) A_stream_c_fun_c_stream_a_stream_fun_a_stream_c_fun_fun_fun$)
(declare-fun map_fun$m (A_stream_c_stream_fun$) A_stream_b_fun_c_stream_a_stream_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$n (A_stream_b_stream_fun$) A_stream_c_fun_b_stream_a_stream_fun_a_stream_c_fun_fun_fun$)
(declare-fun map_fun$o (A_stream_c_fun$) C_stream_b_stream_fun_c_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$p (C_b_fun$) A_stream_c_stream_fun_b_a_stream_fun_c_c_stream_fun_fun_fun$)
(declare-fun map_fun$q (A_stream_b_fun$) A_stream_b_stream_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$r (A_stream_c_fun$) B_stream_b_stream_fun_c_b_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$s (C_b_fun$) A_stream_b_stream_fun_b_a_stream_fun_c_b_stream_fun_fun_fun$)
(declare-fun map_fun$t (A_stream_c_fun$) A_stream_c_stream_fun_c_a_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun map_fun$u (C_b_fun$ A_stream_a_stream_fun$) B_a_stream_fun_c_a_stream_fun_fun$)
(declare-fun map_fun$v (A_stream_b_fun$) A_stream_c_stream_fun_b_a_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun map_fun$w (A_stream_c_fun$) A_stream_b_stream_fun_c_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$x (A_stream_a_stream_fun$) C_stream_c_stream_fun_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun map_fun$y (A_stream_a_stream_fun$) B_stream_b_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$z (C_stream_b_stream_fun_c_stream_b_stream_fun_fun$) A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun_fun$)
(declare-fun map_prod$ (C_stream_b_stream_fun$ C_stream_b_stream_fun$) C_stream_c_stream_prod_b_stream_b_stream_prod_fun$)
(declare-fun relcompp$ (B_stream_b_stream_bool_fun_fun$ B_stream_b_stream_bool_fun_fun$) B_stream_b_stream_bool_fun_fun$)
(declare-fun siterate$ (A_stream_a_stream_fun$ A_stream$) A_stream_stream$)
(declare-fun fun_app$aa (C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ C_stream_c_stream_fun$) C_stream_b_stream_fun$)
(declare-fun fun_app$ab (A_stream_b_fun_a_stream_b_fun_fun$ A_stream_b_fun$) A_stream_b_fun$)
(declare-fun fun_app$ac (C_b_fun_c_b_fun_fun$ C_b_fun$) C_b_fun$)
(declare-fun fun_app$ad (A_stream_c_fun_a_stream_c_fun_fun$ A_stream_c_fun$) A_stream_c_fun$)
(declare-fun fun_app$ae (C_c_fun_c_b_fun_fun$ C_c_fun$) C_b_fun$)
(declare-fun fun_app$af (A_stream_a_stream_fun_a_stream_c_fun_fun$ A_stream_a_stream_fun$) A_stream_c_fun$)
(declare-fun fun_app$ag (A_stream_a_stream_fun_a_stream_b_fun_fun$ A_stream_a_stream_fun$) A_stream_b_fun$)
(declare-fun fun_app$ah (A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ A_stream_b_stream_fun$) A_stream_c_stream_fun$)
(declare-fun fun_app$ai (B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ B_stream_c_stream_fun$) B_stream_b_stream_fun$)
(declare-fun fun_app$aj (B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ B_stream_b_stream_fun$) B_stream_b_stream_fun$)
(declare-fun fun_app$ak (C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ C_stream_a_stream_fun$) C_stream_b_stream_fun$)
(declare-fun fun_app$al (A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ A_stream_c_stream_fun$) A_stream_a_stream_fun$)
(declare-fun fun_app$am (B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ B_stream_a_stream_fun$) B_stream_b_stream_fun$)
(declare-fun fun_app$an (A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ A_stream_b_stream_fun$) A_stream_a_stream_fun$)
(declare-fun fun_app$ao (A_stream_c_fun_a_stream_b_stream_fun_fun$ A_stream_c_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$ap (C_stream_b_stream_fun_c_stream_b_fun_fun$ C_stream_b_stream_fun$) C_stream_b_fun$)
(declare-fun fun_app$aq (C_b_stream_fun_c_b_fun_fun$ C_b_stream_fun$) C_b_fun$)
(declare-fun fun_app$ar (A_stream_c_stream_fun_a_stream_b_fun_fun$ A_stream_c_stream_fun$) A_stream_b_fun$)
(declare-fun fun_app$as (B_stream_b_stream_fun_b_stream_b_fun_fun$ B_stream_b_stream_fun$) B_stream_b_fun$)
(declare-fun fun_app$at (A_stream_b_stream_fun_a_stream_b_fun_fun$ A_stream_b_stream_fun$) A_stream_b_fun$)
(declare-fun fun_app$au (A_stream_c_fun_a_stream_c_stream_fun_fun$ A_stream_c_fun$) A_stream_c_stream_fun$)
(declare-fun fun_app$av (C_c_stream_fun_c_b_fun_fun$ C_c_stream_fun$) C_b_fun$)
(declare-fun fun_app$aw (C_stream_c_fun_c_stream_b_fun_fun$ C_stream_c_fun$) C_stream_b_fun$)
(declare-fun fun_app$ax (A_stream_c_stream_fun_a_stream_c_fun_fun$ A_stream_c_stream_fun$) A_stream_c_fun$)
(declare-fun fun_app$ay (B_stream_c_fun_b_stream_b_fun_fun$ B_stream_c_fun$) B_stream_b_fun$)
(declare-fun fun_app$az (C_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun$ C_b_fun$) B_stream_c_fun_b_stream_b_fun_fun$)
(declare-fun fun_app$ba (A_stream_b_stream_fun_a_stream_c_fun_fun$ A_stream_b_stream_fun$) A_stream_c_fun$)
(declare-fun fun_app$bb (C_b_fun_c_b_stream_fun_fun$ C_b_fun$) C_b_stream_fun$)
(declare-fun fun_app$bc (C_c_stream_fun_c_b_stream_fun_fun$ C_c_stream_fun$) C_b_stream_fun$)
(declare-fun fun_app$bd (A_stream_b_fun_a_stream_b_stream_fun_fun$ A_stream_b_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$be (C_b_stream_fun_c_b_stream_fun_fun$ C_b_stream_fun$) C_b_stream_fun$)
(declare-fun fun_app$bf (A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ A_stream_a_stream_fun$) A_stream_a_stream_fun$)
(declare-fun fun_app$bg (C_stream_c_stream_fun$ C_stream$) C_stream$)
(declare-fun fun_app$bh (C_c_fun$ C$) C$)
(declare-fun fun_app$bi (C_stream_a_stream_fun$ C_stream$) A_stream$)
(declare-fun fun_app$bj (B_stream_c_stream_fun$ B_stream$) C_stream$)
(declare-fun fun_app$bk (B_stream_a_stream_fun$ B_stream$) A_stream$)
(declare-fun fun_app$bl (C_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ C_stream_c_stream_fun$) B_stream_a_stream_fun_c_stream_c_stream_fun_fun$)
(declare-fun fun_app$bm (B_stream_a_stream_fun_c_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$ B_stream_a_stream_fun$) C_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$)
(declare-fun fun_app$bn (A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$bo (B_stream_a_stream_fun_a_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ B_stream_a_stream_fun$) A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun fun_app$bp (C_a_stream_c_fun_fun$ C$) A_stream_c_fun$)
(declare-fun fun_app$bq (A_stream_c_a_stream_c_fun_fun_fun$ A_stream$) C_a_stream_c_fun_fun$)
(declare-fun fun_app$br (B_a_stream_b_fun_fun$ B$) A_stream_b_fun$)
(declare-fun fun_app$bs (A_stream_b_a_stream_b_fun_fun_fun$ A_stream$) B_a_stream_b_fun_fun$)
(declare-fun fun_app$bt (A_stream_a_stream_a_stream_fun_fun$ A_stream$) A_stream_a_stream_fun$)
(declare-fun fun_app$bu (A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream$) A_stream_a_stream_a_stream_fun_fun$)
(declare-fun fun_app$bv (C_stream_a_stream_c_stream_fun_fun$ C_stream$) A_stream_c_stream_fun$)
(declare-fun fun_app$bw (A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ A_stream$) C_stream_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$bx (B_stream_a_stream_b_stream_fun_fun$ B_stream$) A_stream_b_stream_fun$)
(declare-fun fun_app$by (A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ A_stream$) B_stream_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$bz (B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) B_stream_a_stream_fun_c_stream_c_stream_fun_fun$)
(declare-fun fun_app$ca (B_stream_a_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$ B_stream_a_stream_fun$) B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$)
(declare-fun fun_app$cb (B_stream_a_stream_fun_a_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_a_stream_fun_a_stream_b_stream_fun_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$cc (B_stream_a_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ B_stream_a_stream_fun$) B_stream_a_stream_fun_a_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun fun_app$cd (A_stream_a_stream_c_fun_a_stream_c_fun_fun_fun$ A_stream$) A_stream_c_fun_a_stream_c_fun_fun$)
(declare-fun fun_app$ce (A_stream_a_stream_b_fun_a_stream_b_fun_fun_fun$ A_stream$) A_stream_b_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$cf (A_stream_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$ A_stream$) A_stream_a_stream_fun_a_stream_a_stream_fun_fun$)
(declare-fun fun_app$cg (A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream$) A_stream_c_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$ch (A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream$) A_stream_b_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$ci (A_stream_c_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun$) A_stream_a_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$cj (A_stream_bool_fun_a_stream_c_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun_fun$ A_stream_bool_fun$) A_stream_c_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun fun_app$ck (A_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$) A_stream_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$cl (A_stream_bool_fun_a_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ A_stream_bool_fun$) A_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun fun_app$cm (A_stream_c_stream_stream_fun_a_stream_b_stream_stream_fun_fun$ A_stream_c_stream_stream_fun$) A_stream_b_stream_stream_fun$)
(declare-fun fun_app$cn (A_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun$ A_stream_a_stream_fun$) A_stream_c_stream_stream_fun$)
(declare-fun fun_app$co (A_stream_c_stream_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun_fun$ A_stream_c_stream_stream_fun$) A_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun$)
(declare-fun fun_app$cp (A_stream_bool_fun_a_stream_c_stream_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun_fun_fun$ A_stream_bool_fun$) A_stream_c_stream_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun_fun$)
(declare-fun fun_app$cq (A_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun$ A_stream_a_stream_fun$) A_stream_b_stream_stream_fun$)
(declare-fun fun_app$cr (A_stream_b_stream_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun_fun$ A_stream_b_stream_stream_fun$) A_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun$)
(declare-fun fun_app$cs (A_stream_bool_fun_a_stream_b_stream_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun_fun_fun$ A_stream_bool_fun$) A_stream_b_stream_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun_fun$)
(declare-fun fun_app$ct (A_stream_a_stream_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$ A_stream_a_stream_fun$) A_stream_a_stream_fun_a_stream_a_stream_fun_fun$)
(declare-fun fun_app$cu (A_stream_bool_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun_fun$ A_stream_bool_fun$) A_stream_a_stream_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$)
(declare-fun fun_app$cv (A_stream_a_fun_a_stream_c_fun_fun$ A_stream_a_fun$) A_stream_c_fun$)
(declare-fun fun_app$cw (A_stream_a_fun_a_stream_b_fun_fun$ A_stream_a_fun$) A_stream_b_fun$)
(declare-fun fun_app$cx (A_stream_b_fun_a_stream_c_fun_fun$ A_stream_b_fun$) A_stream_c_fun$)
(declare-fun fun_app$cy (A_stream_c_stream_fun_a_stream_c_stream_stream_fun_fun$ A_stream_c_stream_fun$) A_stream_c_stream_stream_fun$)
(declare-fun fun_app$cz (A_stream_c_stream_fun_a_stream_b_stream_stream_fun_fun$ A_stream_c_stream_fun$) A_stream_b_stream_stream_fun$)
(declare-fun fun_app$da (A_stream_b_stream_fun_a_stream_c_stream_stream_fun_fun$ A_stream_b_stream_fun$) A_stream_c_stream_stream_fun$)
(declare-fun fun_app$db (A_stream_b_fun_a_stream_c_stream_fun_fun$ A_stream_b_fun$) A_stream_c_stream_fun$)
(declare-fun fun_app$dc (A_stream_c_stream_stream_fun$ A_stream$) C_stream_stream$)
(declare-fun fun_app$dd (A_stream_b_stream_stream_fun$ A_stream$) B_stream_stream$)
(declare-fun fun_app$de (C_stream_stream_b_stream_stream_fun$ C_stream_stream$) B_stream_stream$)
(declare-fun fun_app$df (B_stream_stream_b_stream_stream_fun$ B_stream_stream$) B_stream_stream$)
(declare-fun fun_app$dg (C_stream_b_stream_fun_c_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ C_stream_b_stream_fun$) C_stream_c_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$dh (A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun$) B_stream_a_stream_fun_c_stream_c_stream_fun_fun$)
(declare-fun fun_app$di (B_a_stream_fun_c_c_fun_fun_b_a_stream_fun_a_stream_b_fun_fun_fun$ B_a_stream_fun_c_c_fun_fun$) B_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dj (C_b_fun_c_c_fun_a_stream_b_fun_fun_fun$ C_b_fun$) C_c_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dk (A_stream_c_fun_b_a_stream_fun_c_c_fun_fun_fun$ A_stream_c_fun$) B_a_stream_fun_c_c_fun_fun$)
(declare-fun fun_app$dl (A_stream_b_fun_b_a_stream_fun_a_stream_b_fun_fun_fun$ A_stream_b_fun$) B_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dm (B_stream_a_stream_fun_c_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ B_stream_a_stream_fun_c_stream_c_fun_fun$) B_stream_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dn (C_b_fun_c_stream_c_fun_a_stream_b_fun_fun_fun$ C_b_fun$) C_stream_c_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$do (A_stream_c_fun_b_stream_a_stream_fun_c_stream_c_fun_fun_fun$ A_stream_c_fun$) B_stream_a_stream_fun_c_stream_c_fun_fun$)
(declare-fun fun_app$dp (A_stream_b_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ A_stream_b_fun$) B_stream_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dq (B_stream_a_stream_fun_b_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ B_stream_a_stream_fun_b_stream_c_fun_fun$) B_stream_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dr (C_b_fun_b_stream_c_fun_a_stream_b_fun_fun_fun$ C_b_fun$) B_stream_c_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$ds (A_stream_c_fun_b_stream_a_stream_fun_b_stream_c_fun_fun_fun$ A_stream_c_fun$) B_stream_a_stream_fun_b_stream_c_fun_fun$)
(declare-fun fun_app$dt (C_stream_a_stream_fun_a_stream_c_fun_fun_c_stream_a_stream_fun_a_stream_b_fun_fun_fun$ C_stream_a_stream_fun_a_stream_c_fun_fun$) C_stream_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$du (A_stream_c_fun_c_stream_a_stream_fun_a_stream_c_fun_fun_fun$ A_stream_c_fun$) C_stream_a_stream_fun_a_stream_c_fun_fun$)
(declare-fun fun_app$dv (A_stream_b_fun_c_stream_a_stream_fun_a_stream_b_fun_fun_fun$ A_stream_b_fun$) C_stream_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dw (B_stream_a_stream_fun_a_stream_c_fun_fun_b_stream_a_stream_fun_a_stream_b_fun_fun_fun$ B_stream_a_stream_fun_a_stream_c_fun_fun$) B_stream_a_stream_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$dx (A_stream_c_fun_b_stream_a_stream_fun_a_stream_c_fun_fun_fun$ A_stream_c_fun$) B_stream_a_stream_fun_a_stream_c_fun_fun$)
(declare-fun fun_app$dy (B_a_stream_fun_c_c_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_a_stream_fun_c_c_stream_fun_fun$) B_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$dz (C_stream_b_stream_fun_c_c_stream_fun_a_stream_b_stream_fun_fun_fun$ C_stream_b_stream_fun$) C_c_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$ea (A_stream_c_stream_fun_b_a_stream_fun_c_c_stream_fun_fun_fun$ A_stream_c_stream_fun$) B_a_stream_fun_c_c_stream_fun_fun$)
(declare-fun fun_app$eb (A_stream_b_stream_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$) B_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$ec (B_a_stream_fun_c_b_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_a_stream_fun_c_b_stream_fun_fun$) B_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$ed (B_stream_b_stream_fun_c_b_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$) C_b_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$ee (A_stream_b_stream_fun_b_a_stream_fun_c_b_stream_fun_fun_fun$ A_stream_b_stream_fun$) B_a_stream_fun_c_b_stream_fun_fun$)
(declare-fun fun_app$ef (B_a_stream_fun_c_a_stream_fun_fun_b_a_stream_fun_a_stream_c_stream_fun_fun_fun$ B_a_stream_fun_c_a_stream_fun_fun$) B_a_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$eg (A_stream_c_stream_fun_c_a_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun$) C_a_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$eh (A_stream_c_stream_fun_b_a_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun$) B_a_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$ei (B_a_stream_fun_c_a_stream_fun_fun_b_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_a_stream_fun_c_a_stream_fun_fun$) B_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$ej (A_stream_b_stream_fun_c_a_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$) C_a_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$ek (A_stream_c_stream_fun_a_stream_c_stream_fun_fun_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun_a_stream_c_stream_fun_fun$) A_stream_c_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$el (A_stream_b_stream_fun_a_stream_b_stream_fun_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun_a_stream_b_stream_fun_fun$) A_stream_b_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$em (C_stream_c_stream_fun_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ C_stream_c_stream_fun$) A_stream_c_stream_fun_a_stream_c_stream_fun_fun$)
(declare-fun fun_app$en (B_stream_b_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$) A_stream_b_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$eo (C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$) C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun fun_app$ep (A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun_fun$ A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$) C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun fun_app$eq (A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_c_stream_fun_a_stream_b_stream_fun_fun$) A_stream_c_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$er (A_stream_b_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ A_stream_b_stream_fun_a_stream_b_stream_fun_fun$) A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun fun_app$es (B_stream_b_stream_prod_b_stream_b_stream_prod_fun$ B_stream_b_stream_prod$) B_stream_b_stream_prod$)
(declare-fun fun_app$et (B_stream_b_stream_b_stream_prod_fun$ B_stream$) B_stream_b_stream_prod$)
(declare-fun fun_app$eu (C_stream_b_stream_b_stream_prod_fun$ C_stream$) B_stream_b_stream_prod$)
(declare-fun fun_app$ev (A_stream_b_stream_b_stream_prod_fun$ A_stream$) B_stream_b_stream_prod$)
(declare-fun fun_app$ew (A_stream_c_stream_c_stream_prod_fun$ A_stream$) C_stream_c_stream_prod$)
(declare-fun fun_app$ex (C_stream_c_stream_prod_b_stream_b_stream_prod_fun$ C_stream_c_stream_prod$) B_stream_b_stream_prod$)
(declare-fun fun_app$ey (A_stream_a_stream_prod_c_stream_c_stream_prod_fun$ A_stream_a_stream_prod$) C_stream_c_stream_prod$)
(declare-fun fun_app$ez (A_stream_a_stream_prod_b_stream_b_stream_prod_fun$ A_stream_a_stream_prod$) B_stream_b_stream_prod$)
(declare-fun fun_app$fa (C_c_prod_b_b_prod_fun$ C_c_prod$) B_b_prod$)
(declare-fun fun_app$fb (A_stream_a_stream_prod_c_c_prod_fun$ A_stream_a_stream_prod$) C_c_prod$)
(declare-fun fun_app$fc (A_stream_a_stream_prod_b_b_prod_fun$ A_stream_a_stream_prod$) B_b_prod$)
(declare-fun fun_app$fd (C_stream_c_prod_b_stream_b_prod_fun$ C_stream_c_prod$) B_stream_b_prod$)
(declare-fun fun_app$fe (A_stream_a_stream_prod_c_stream_c_prod_fun$ A_stream_a_stream_prod$) C_stream_c_prod$)
(declare-fun fun_app$ff (A_stream_a_stream_prod_b_stream_b_prod_fun$ A_stream_a_stream_prod$) B_stream_b_prod$)
(declare-fun fun_app$fg (B_stream_c_prod_b_stream_b_prod_fun$ B_stream_c_prod$) B_stream_b_prod$)
(declare-fun fun_app$fh (A_stream_a_stream_prod_b_stream_c_prod_fun$ A_stream_a_stream_prod$) B_stream_c_prod$)
(declare-fun fun_app$fi (A_stream_c_prod_c_stream_b_prod_fun$ A_stream_c_prod$) C_stream_b_prod$)
(declare-fun fun_app$fj (A_stream_a_stream_prod_a_stream_c_prod_fun$ A_stream_a_stream_prod$) A_stream_c_prod$)
(declare-fun fun_app$fk (A_stream_a_stream_prod_c_stream_b_prod_fun$ A_stream_a_stream_prod$) C_stream_b_prod$)
(declare-fun fun_app$fl (A_stream_c_prod_b_stream_b_prod_fun$ A_stream_c_prod$) B_stream_b_prod$)
(declare-fun fun_app$fm (C_c_stream_prod_b_b_stream_prod_fun$ C_c_stream_prod$) B_b_stream_prod$)
(declare-fun fun_app$fn (A_stream_a_stream_prod_c_c_stream_prod_fun$ A_stream_a_stream_prod$) C_c_stream_prod$)
(declare-fun fun_app$fo (A_stream_a_stream_prod_b_b_stream_prod_fun$ A_stream_a_stream_prod$) B_b_stream_prod$)
(declare-fun fun_app$fp (C_b_stream_prod_b_b_stream_prod_fun$ C_b_stream_prod$) B_b_stream_prod$)
(declare-fun fun_app$fq (A_stream_a_stream_prod_c_b_stream_prod_fun$ A_stream_a_stream_prod$) C_b_stream_prod$)
(declare-fun fun_app$fr (C_a_stream_prod_b_c_stream_prod_fun$ C_a_stream_prod$) B_c_stream_prod$)
(declare-fun fun_app$fs (A_stream_a_stream_prod_c_a_stream_prod_fun$ A_stream_a_stream_prod$) C_a_stream_prod$)
(declare-fun fun_app$ft (A_stream_a_stream_prod_b_c_stream_prod_fun$ A_stream_a_stream_prod$) B_c_stream_prod$)
(declare-fun fun_app$fu (C_a_stream_prod_b_b_stream_prod_fun$ C_a_stream_prod$) B_b_stream_prod$)
(declare-fun fun_app$fv (C_stream_b_stream_fun_c_stream_b_stream_fun_fun_c_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ C_stream_b_stream_fun_c_stream_b_stream_fun_fun$) C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun fun_app$fw (A_stream_c_stream_fun_a_stream_c_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_c_stream_fun_a_stream_c_stream_fun_fun$) A_stream_c_stream_fun_a_stream_b_stream_fun_fun$)
(declare-fun fun_app$fx (C_c_fun_a_stream_b_fun_fun$ C_c_fun$) A_stream_b_fun$)
(declare-fun fun_app$fy (B_a_stream_fun_c_c_fun_fun$ B_a_stream_fun$) C_c_fun$)
(declare-fun fun_app$fz (B_a_stream_fun_a_stream_b_fun_fun$ B_a_stream_fun$) A_stream_b_fun$)
(declare-fun fun_app$ga (C_stream_c_fun_a_stream_b_fun_fun$ C_stream_c_fun$) A_stream_b_fun$)
(declare-fun fun_app$gb (B_stream_a_stream_fun_c_stream_c_fun_fun$ B_stream_a_stream_fun$) C_stream_c_fun$)
(declare-fun fun_app$gc (B_stream_a_stream_fun_a_stream_b_fun_fun$ B_stream_a_stream_fun$) A_stream_b_fun$)
(declare-fun fun_app$gd (B_stream_c_fun_a_stream_b_fun_fun$ B_stream_c_fun$) A_stream_b_fun$)
(declare-fun fun_app$ge (B_stream_a_stream_fun_b_stream_c_fun_fun$ B_stream_a_stream_fun$) B_stream_c_fun$)
(declare-fun fun_app$gf (C_stream_a_stream_fun_a_stream_c_fun_fun$ C_stream_a_stream_fun$) A_stream_c_fun$)
(declare-fun fun_app$gg (C_stream_a_stream_fun_a_stream_b_fun_fun$ C_stream_a_stream_fun$) A_stream_b_fun$)
(declare-fun fun_app$gh (B_stream_a_stream_fun_a_stream_c_fun_fun$ B_stream_a_stream_fun$) A_stream_c_fun$)
(declare-fun fun_app$gi (C_c_stream_fun_a_stream_b_stream_fun_fun$ C_c_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$gj (B_a_stream_fun_c_c_stream_fun_fun$ B_a_stream_fun$) C_c_stream_fun$)
(declare-fun fun_app$gk (B_a_stream_fun_a_stream_b_stream_fun_fun$ B_a_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$gl (C_b_stream_fun_a_stream_b_stream_fun_fun$ C_b_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$gm (B_a_stream_fun_c_b_stream_fun_fun$ B_a_stream_fun$) C_b_stream_fun$)
(declare-fun fun_app$gn (C_a_stream_fun_a_stream_c_stream_fun_fun$ C_a_stream_fun$) A_stream_c_stream_fun$)
(declare-fun fun_app$go (B_a_stream_fun_c_a_stream_fun_fun$ B_a_stream_fun$) C_a_stream_fun$)
(declare-fun fun_app$gp (B_a_stream_fun_a_stream_c_stream_fun_fun$ B_a_stream_fun$) A_stream_c_stream_fun$)
(declare-fun fun_app$gq (C_a_stream_fun_a_stream_b_stream_fun_fun$ C_a_stream_fun$) A_stream_b_stream_fun$)
(declare-fun fun_app$gr (B_stream_b_stream_fun_b_stream_b_stream_fun_b_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$) B_stream_b_stream_fun_b_stream_b_stream_fun_fun$)
(declare-fun fun_app$gs (C_stream_b_stream_fun_c_stream_nat_fun_fun$ C_stream_b_stream_fun$) C_stream_nat_fun$)
(declare-fun fun_app$gt (C_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun_c_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun$ C_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun$) C_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$)
(declare-fun fun_app$gu (B_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_c_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun_c_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun_fun$ B_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$) C_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun_c_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun$)
(declare-fun fun_app$gv (B_stream_b_fun_a_stream_b_fun_fun_b_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun$ B_stream_b_fun_a_stream_b_fun_fun$) B_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun$)
(declare-fun fun_app$gw (C_c_fun_a_stream_c_fun_b_stream_c_fun_fun_fun$ C_c_fun$) A_stream_c_fun_b_stream_c_fun_fun$)
(declare-fun fun_app$gx (B_b_fun_b_stream_b_fun_a_stream_b_fun_fun_fun$ B_b_fun$) B_stream_b_fun_a_stream_b_fun_fun$)
(declare-fun fun_app$gy (B_stream_b_stream_fun_c_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$) C_stream_b_stream_fun_c_stream_b_stream_fun_fun$)
(declare-fun fun_app$gz (B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ B_stream_c_stream_fun$) B_stream_a_stream_fun$)
(declare-fun fun_app$ha (A_stream_a_stream_bool_fun_fun_a_stream_a_stream_bool_fun_fun_fun$ A_stream_a_stream_bool_fun_fun$) A_stream_a_stream_bool_fun_fun$)
(declare-fun map_fun$aa (A_stream_c_stream_fun_a_stream_c_stream_fun_fun$) A_stream_b_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun map_fun$ab (A_stream_a_stream_fun$) A_stream_c_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$)
(declare-fun map_fun$ac (A_stream_a_stream_fun$) C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$ad (A_stream_a_stream_fun$) A_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$ae (B_stream_b_stream_fun$) B_stream_b_stream_fun_b_stream_b_stream_fun_b_stream_b_stream_fun_fun_fun$)
(declare-fun map_fun$af (C_b_fun_c_b_fun_fun$) B_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_c_b_fun_b_stream_c_fun_b_stream_b_fun_fun_fun_c_b_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun_fun$)
(declare-fun map_fun$ag (A_stream_c_fun_b_stream_c_fun_fun$) B_stream_b_fun_a_stream_b_fun_fun_b_stream_c_fun_b_stream_b_fun_fun_a_stream_c_fun_a_stream_b_fun_fun_fun_fun$)
(declare-fun map_fun$ah (B_stream_a_stream_fun$) C_c_fun_a_stream_c_fun_b_stream_c_fun_fun_fun$)
(declare-fun map_fun$ai (A_stream_b_stream_fun$) B_b_fun_b_stream_b_fun_a_stream_b_fun_fun_fun$)
(declare-fun map_fun$aj (C_stream_c_stream_fun$) B_stream_b_stream_fun_c_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$)
(declare-fun map_prod$a (C_b_fun$ C_b_fun$) C_c_prod_b_b_prod_fun$)
(declare-fun map_prod$b (C_stream_b_stream_fun$ C_b_fun$) C_stream_c_prod_b_stream_b_prod_fun$)
(declare-fun map_prod$c (B_stream_b_stream_fun$ C_b_fun$) B_stream_c_prod_b_stream_b_prod_fun$)
(declare-fun map_prod$d (A_stream_c_stream_fun$ C_b_fun$) A_stream_c_prod_c_stream_b_prod_fun$)
(declare-fun map_prod$e (A_stream_b_stream_fun$ C_b_fun$) A_stream_c_prod_b_stream_b_prod_fun$)
(declare-fun map_prod$f (C_b_fun$ C_stream_b_stream_fun$) C_c_stream_prod_b_b_stream_prod_fun$)
(declare-fun map_prod$g (C_b_fun$ B_stream_b_stream_fun$) C_b_stream_prod_b_b_stream_prod_fun$)
(declare-fun map_prod$h (C_b_fun$ A_stream_c_stream_fun$) C_a_stream_prod_b_c_stream_prod_fun$)
(declare-fun map_prod$i (C_b_fun$ A_stream_b_stream_fun$) C_a_stream_prod_b_b_stream_prod_fun$)
(declare-fun map_prod$j (B_stream_b_stream_fun$ B_stream_b_stream_fun$) B_stream_b_stream_prod_b_stream_b_stream_prod_fun$)
(declare-fun map_prod$k (C_stream_b_stream_fun$ B_stream_b_stream_fun$) C_stream_b_stream_prod_b_stream_b_stream_prod_fun$)
(declare-fun map_prod$l (A_stream_b_stream_fun$ B_stream_b_stream_fun$) A_stream_b_stream_prod_b_stream_b_stream_prod_fun$)
(declare-fun map_prod$m (A_stream_c_stream_fun$ C_stream_c_stream_fun$) A_stream_c_stream_prod_c_stream_c_stream_prod_fun$)
(declare-fun map_prod$n (A_stream_c_stream_fun$ A_stream_c_stream_fun$) A_stream_a_stream_prod_c_stream_c_stream_prod_fun$)
(declare-fun map_prod$o (A_stream_b_stream_fun$ A_stream_b_stream_fun$) A_stream_a_stream_prod_b_stream_b_stream_prod_fun$)
(declare-fun map_prod$p (A_stream_c_fun$ A_stream_c_fun$) A_stream_a_stream_prod_c_c_prod_fun$)
(declare-fun map_prod$q (A_stream_b_fun$ A_stream_b_fun$) A_stream_a_stream_prod_b_b_prod_fun$)
(declare-fun map_prod$r (A_stream_c_stream_fun$ A_stream_c_fun$) A_stream_a_stream_prod_c_stream_c_prod_fun$)
(declare-fun map_prod$s (A_stream_b_stream_fun$ A_stream_b_fun$) A_stream_a_stream_prod_b_stream_b_prod_fun$)
(declare-fun map_prod$t (A_stream_b_stream_fun$ A_stream_c_fun$) A_stream_a_stream_prod_b_stream_c_prod_fun$)
(declare-fun map_prod$u (A_stream_a_stream_fun$ A_stream_c_fun$) A_stream_a_stream_prod_a_stream_c_prod_fun$)
(declare-fun map_prod$v (A_stream_c_stream_fun$ A_stream_b_fun$) A_stream_a_stream_prod_c_stream_b_prod_fun$)
(declare-fun map_prod$w (A_stream_c_fun$ A_stream_c_stream_fun$) A_stream_a_stream_prod_c_c_stream_prod_fun$)
(declare-fun map_prod$x (A_stream_b_fun$ A_stream_b_stream_fun$) A_stream_a_stream_prod_b_b_stream_prod_fun$)
(declare-fun map_prod$y (A_stream_c_fun$ A_stream_b_stream_fun$) A_stream_a_stream_prod_c_b_stream_prod_fun$)
(declare-fun map_prod$z (A_stream_c_fun$ A_stream_a_stream_fun$) A_stream_a_stream_prod_c_a_stream_prod_fun$)
(declare-fun quotient3$ (B_stream_b_stream_bool_fun_fun$ B_stream_a_stream_fun$ A_stream_b_stream_fun$) Bool)
(declare-fun relcompp$a (A_stream_a_stream_bool_fun_fun$) A_stream_a_stream_bool_fun_fun_a_stream_a_stream_bool_fun_fun_fun$)
(declare-fun siterate$a (B_stream_b_stream_fun$ B_stream$) B_stream_stream$)
(declare-fun size_prod$ (B_stream_nat_fun$ B_stream_nat_fun$) B_stream_b_stream_prod_nat_fun$)
(declare-fun map_prod$aa (A_stream_b_fun$ A_stream_c_stream_fun$) A_stream_a_stream_prod_b_c_stream_prod_fun$)
(declare-fun quotient3$a (B_stream_b_stream_bool_fun_fun$ B_stream_b_stream_fun$ B_stream_b_stream_fun$) Bool)
(declare-fun quotient3$b (A_stream_a_stream_bool_fun_fun$ A_stream_c_stream_fun$ C_stream_a_stream_fun$) Bool)
(declare-fun quotient3$c (A_stream_a_stream_bool_fun_fun$ A_stream_b_stream_fun$ B_stream_a_stream_fun$) Bool)
(declare-fun quotient3$d (A_stream_a_stream_bool_fun_fun$ A_stream_a_stream_fun$ A_stream_a_stream_fun$) Bool)
(declare-fun quotient3$e (C_stream_c_stream_bool_fun_fun$ C_stream_c_stream_fun$ C_stream_c_stream_fun$) Bool)
(declare-fun quotient3$f (B_stream_b_stream_bool_fun_fun$ B_stream_c_stream_fun$ C_stream_b_stream_fun$) Bool)
(declare-fun quotient3$g (C_stream_c_stream_bool_fun_fun$ C_stream_a_stream_fun$ A_stream_c_stream_fun$) Bool)
(declare-fun quotient3$h (C_stream_c_stream_bool_fun_fun$ C_stream_b_stream_fun$ B_stream_c_stream_fun$) Bool)
(declare-fun size_prod$a (C_stream_nat_fun$ C_stream_nat_fun$) C_stream_c_stream_prod_nat_fun$)
(declare-fun size_prod$b (A_stream_nat_fun$ A_stream_nat_fun$) A_stream_a_stream_prod_nat_fun$)
(declare-fun sp_nu_comp$ (C_b_sp_nu$ A_c_sp_nu$) A_b_sp_nu$)
(declare-fun corec_stream$ (A_stream_c_fun$) A_stream_bool_fun_a_stream_c_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun_fun$)
(declare-fun corec_stream$a (A_stream_b_fun$) A_stream_bool_fun_a_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$)
(declare-fun corec_stream$b (A_stream_c_stream_fun$) A_stream_bool_fun_a_stream_c_stream_stream_fun_a_stream_a_stream_fun_a_stream_c_stream_stream_fun_fun_fun_fun$)
(declare-fun corec_stream$c (A_stream_b_stream_fun$) A_stream_bool_fun_a_stream_b_stream_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_stream_fun_fun_fun_fun$)
(declare-fun corec_stream$d (A_stream_a_fun$) A_stream_bool_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun_fun$)
(assert (! (forall ((?v0 C_stream$) (?v1 C_stream$)) (! (= (fun_app$ (fun_app$a uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uu$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 B_stream$) (?v1 B_stream$)) (! (= (fun_app$b (fun_app$c uua$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$b (fun_app$c uua$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (! (= (fun_app$d (fun_app$e uub$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$d (fun_app$e uub$ ?v0) ?v1)))) :named a2))
(assert (! (not (= (run_nu$ (sp_nu_comp$ sp$ sp$a)) (fun_app$f (fun_app$g comp$ (run_nu$a sp$)) (run_nu$b sp$a)))) :named a3))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$j ?v0 (fun_app$h ?v1 ?v2))) :pattern ((fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2)))) :named a4))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$k (fun_app$l (comp$b ?v0) ?v1) ?v2) (fun_app$k ?v0 (fun_app$m ?v1 ?v2))) :pattern ((fun_app$k (fun_app$l (comp$b ?v0) ?v1) ?v2)))) :named a5))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2) (fun_app$h ?v0 (fun_app$m ?v1 ?v2))) :pattern ((fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2)))) :named a6))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) (?v2 B_stream_a_stream_fun$)) (! (= (fun_app$o (fun_app$p (comp$d ?v0) ?v1) ?v2) (fun_app$q ?v0 (fun_app$r ?v1 ?v2))) :pattern ((fun_app$o (fun_app$p (comp$d ?v0) ?v1) ?v2)))) :named a7))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream$)) (! (= (fun_app$s (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2) (fun_app$v ?v0 (fun_app$w ?v1 ?v2))) :pattern ((fun_app$s (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2)))) :named a8))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$x ?v0 (fun_app$k ?v1 ?v2))) :pattern ((fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2)))) :named a9))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$)) (= (fun_app$i (comp$a ?v0) (fun_app$f (fun_app$g comp$ ?v1) ?v2)) (fun_app$f (fun_app$g comp$ (fun_app$y (comp$f ?v0) ?v1)) ?v2))) :named a10))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$l (comp$b ?v1) ?v2)) (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v0) ?v1)) ?v2))) :named a11))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_c_stream_fun$) (?v2 A_stream_c_stream_fun$)) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$z (comp$g ?v1) ?v2)) (fun_app$f (fun_app$g comp$ (fun_app$aa (comp$h ?v0) ?v1)) ?v2))) :named a12))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_fun$)) (= (fun_app$ab (comp$i ?v0) (fun_app$t (fun_app$u comp$e ?v1) ?v2)) (fun_app$t (fun_app$u comp$e (fun_app$ac (comp$j ?v0) ?v1)) ?v2))) :named a13))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_c_fun$) (?v2 A_stream_c_fun$)) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$ad (comp$k ?v1) ?v2)) (fun_app$t (fun_app$u comp$e (fun_app$ae (comp$l ?v0) ?v1)) ?v2))) :named a14))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_a_stream_fun$)) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$af (comp$m ?v1) ?v2)) (fun_app$ag (comp$n (fun_app$t (fun_app$u comp$e ?v0) ?v1)) ?v2))) :named a15))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (fun_app$z (comp$g ?v0) (fun_app$l (comp$b ?v1) ?v2)) (fun_app$l (comp$b (fun_app$z (comp$g ?v0) ?v1)) ?v2))) :named a16))
(assert (! (forall ((?v0 B_stream_c_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (fun_app$ah (comp$o ?v0) (fun_app$n (comp$c ?v1) ?v2)) (fun_app$l (comp$b (fun_app$ah (comp$o ?v0) ?v1)) ?v2))) :named a17))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 B_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$)) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$ah (comp$o ?v1) ?v2)) (fun_app$i (comp$a (fun_app$ai (comp$p ?v0) ?v1)) ?v2))) :named a18))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$)) (= (fun_app$i (comp$a ?v0) (fun_app$i (comp$a ?v1) ?v2)) (fun_app$i (comp$a (fun_app$aj (comp$q ?v0) ?v1)) ?v2))) :named a19))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v0) ?v1)) ?v2) (fun_app$f (fun_app$g comp$ ?v0) (fun_app$l (comp$b ?v1) ?v2)))) :named a20))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$)) (= (fun_app$f (fun_app$g comp$ (fun_app$y (comp$f ?v0) ?v1)) ?v2) (fun_app$i (comp$a ?v0) (fun_app$f (fun_app$g comp$ ?v1) ?v2)))) :named a21))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_c_stream_fun$) (?v2 A_stream_c_stream_fun$)) (= (fun_app$f (fun_app$g comp$ (fun_app$aa (comp$h ?v0) ?v1)) ?v2) (fun_app$f (fun_app$g comp$ ?v0) (fun_app$z (comp$g ?v1) ?v2)))) :named a22))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_fun$)) (= (fun_app$t (fun_app$u comp$e (fun_app$ac (comp$j ?v0) ?v1)) ?v2) (fun_app$ab (comp$i ?v0) (fun_app$t (fun_app$u comp$e ?v1) ?v2)))) :named a23))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_c_fun$) (?v2 A_stream_c_fun$)) (= (fun_app$t (fun_app$u comp$e (fun_app$ae (comp$l ?v0) ?v1)) ?v2) (fun_app$t (fun_app$u comp$e ?v0) (fun_app$ad (comp$k ?v1) ?v2)))) :named a24))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_a_stream_fun$)) (= (fun_app$ag (comp$n (fun_app$t (fun_app$u comp$e ?v0) ?v1)) ?v2) (fun_app$t (fun_app$u comp$e ?v0) (fun_app$af (comp$m ?v1) ?v2)))) :named a25))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 C_stream_a_stream_fun$) (?v2 A_stream_c_stream_fun$)) (= (fun_app$f (fun_app$g comp$ (fun_app$ak (comp$r ?v0) ?v1)) ?v2) (fun_app$n (comp$c ?v0) (fun_app$al (comp$s ?v1) ?v2)))) :named a26))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 B_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$)) (= (fun_app$i (comp$a (fun_app$ai (comp$p ?v0) ?v1)) ?v2) (fun_app$f (fun_app$g comp$ ?v0) (fun_app$ah (comp$o ?v1) ?v2)))) :named a27))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$)) (= (fun_app$i (comp$a (fun_app$aj (comp$q ?v0) ?v1)) ?v2) (fun_app$i (comp$a ?v0) (fun_app$i (comp$a ?v1) ?v2)))) :named a28))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$)) (= (fun_app$i (comp$a (fun_app$am (comp$t ?v0) ?v1)) ?v2) (fun_app$n (comp$c ?v0) (fun_app$an (comp$u ?v1) ?v2)))) :named a29))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$j ?v0 (fun_app$h ?v1 ?v2))) :pattern ((fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2)))) :named a30))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$k (fun_app$l (comp$b ?v0) ?v1) ?v2) (fun_app$k ?v0 (fun_app$m ?v1 ?v2))) :pattern ((fun_app$k (fun_app$l (comp$b ?v0) ?v1) ?v2)))) :named a31))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2) (fun_app$h ?v0 (fun_app$m ?v1 ?v2))) :pattern ((fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2)))) :named a32))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) (?v2 B_stream_a_stream_fun$)) (! (= (fun_app$o (fun_app$p (comp$d ?v0) ?v1) ?v2) (fun_app$q ?v0 (fun_app$r ?v1 ?v2))) :pattern ((fun_app$o (fun_app$p (comp$d ?v0) ?v1) ?v2)))) :named a33))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream$)) (! (= (fun_app$s (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2) (fun_app$v ?v0 (fun_app$w ?v1 ?v2))) :pattern ((fun_app$s (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2)))) :named a34))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$)) (! (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$x ?v0 (fun_app$k ?v1 ?v2))) :pattern ((fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2)))) :named a35))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (=> (and (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v4)) (fun_app$x ?v2 (fun_app$k ?v3 ?v4)))) false)) false)) :named a36))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (=> (and (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$v ?v0 (fun_app$w ?v1 ?v4)) (fun_app$v ?v2 (fun_app$w ?v3 ?v4)))) false)) false)) :named a37))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$)) (=> (and (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v4)) (fun_app$j ?v2 (fun_app$h ?v3 ?v4)))) false)) false)) :named a38))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$)) (=> (and (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$n (comp$c ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v4)) (fun_app$h ?v2 (fun_app$m ?v3 ?v4)))) false)) false)) :named a39))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (=> (and (= (fun_app$i (comp$a ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v4)) (fun_app$x ?v2 (fun_app$k ?v3 ?v4)))) false)) false)) :named a40))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$)) (=> (and (= (fun_app$i (comp$a ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v4)) (fun_app$j ?v2 (fun_app$h ?v3 ?v4)))) false)) false)) :named a41))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$)) (=> (and (= (fun_app$i (comp$a ?v0) ?v1) (fun_app$n (comp$c ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v4)) (fun_app$h ?v2 (fun_app$m ?v3 ?v4)))) false)) false)) :named a42))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$)) (=> (and (= (fun_app$l (comp$b ?v0) ?v1) (fun_app$l (comp$b ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$k ?v0 (fun_app$m ?v1 ?v4)) (fun_app$k ?v2 (fun_app$m ?v3 ?v4)))) false)) false)) :named a43))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (=> (and (= (fun_app$n (comp$c ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$h ?v0 (fun_app$m ?v1 ?v4)) (fun_app$x ?v2 (fun_app$k ?v3 ?v4)))) false)) false)) :named a44))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$)) (=> (and (= (fun_app$n (comp$c ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (=> (forall ((?v4 A_stream$)) (= (fun_app$h ?v0 (fun_app$m ?v1 ?v4)) (fun_app$j ?v2 (fun_app$h ?v3 ?v4)))) false)) false)) :named a45))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 C_stream_c_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 C_stream_b_stream_fun$) (?v5 C_stream_b_stream_fun$)) (=> (and (= (fun_app$l (comp$b ?v0) ?v1) (fun_app$z (comp$g ?v2) ?v3)) (= (fun_app$aa (comp$h ?v4) ?v2) ?v5)) (= (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v4) ?v0)) ?v1) (fun_app$f (fun_app$g comp$ ?v5) ?v3)))) :named a46))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 C_stream_b_stream_fun$) (?v5 A_stream_b_stream_fun$)) (=> (and (= (fun_app$z (comp$g ?v0) ?v1) (fun_app$l (comp$b ?v2) ?v3)) (= (fun_app$f (fun_app$g comp$ ?v4) ?v2) ?v5)) (= (fun_app$f (fun_app$g comp$ (fun_app$aa (comp$h ?v4) ?v0)) ?v1) (fun_app$n (comp$c ?v5) ?v3)))) :named a47))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 B_stream_b_stream_fun$) (?v5 C_stream_b_stream_fun$)) (=> (and (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (= (fun_app$y (comp$f ?v4) ?v2) ?v5)) (= (fun_app$f (fun_app$g comp$ (fun_app$y (comp$f ?v4) ?v0)) ?v1) (fun_app$f (fun_app$g comp$ ?v5) ?v3)))) :named a48))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$) (?v4 B_b_fun$) (?v5 C_b_fun$)) (=> (and (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (= (fun_app$ac (comp$j ?v4) ?v2) ?v5)) (= (fun_app$t (fun_app$u comp$e (fun_app$ac (comp$j ?v4) ?v0)) ?v1) (fun_app$t (fun_app$u comp$e ?v5) ?v3)))) :named a49))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_a_stream_fun$) (?v2 C_c_fun$) (?v3 A_stream_c_fun$) (?v4 C_b_fun$) (?v5 C_b_fun$)) (=> (and (= (fun_app$af (comp$m ?v0) ?v1) (fun_app$ad (comp$k ?v2) ?v3)) (= (fun_app$ae (comp$l ?v4) ?v2) ?v5)) (= (fun_app$ag (comp$n (fun_app$t (fun_app$u comp$e ?v4) ?v0)) ?v1) (fun_app$t (fun_app$u comp$e ?v5) ?v3)))) :named a50))
(assert (! (forall ((?v0 C_c_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$) (?v4 C_b_fun$) (?v5 A_stream_b_fun$)) (=> (and (= (fun_app$ad (comp$k ?v0) ?v1) (fun_app$af (comp$m ?v2) ?v3)) (= (fun_app$t (fun_app$u comp$e ?v4) ?v2) ?v5)) (= (fun_app$t (fun_app$u comp$e (fun_app$ae (comp$l ?v4) ?v0)) ?v1) (fun_app$ag (comp$n ?v5) ?v3)))) :named a51))
(assert (! (forall ((?v0 C_b_stream_fun$) (?v1 A_stream_c_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 B_stream_b_fun$) (?v5 C_stream_b_fun$)) (=> (and (= (fun_app$ao (comp$v ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (= (fun_app$ap (comp$w ?v4) ?v2) ?v5)) (= (fun_app$t (fun_app$u comp$e (fun_app$aq (comp$x ?v4) ?v0)) ?v1) (fun_app$ar (comp$y ?v5) ?v3)))) :named a52))
(assert (! (forall ((?v0 C_b_stream_fun$) (?v1 A_stream_c_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$) (?v4 B_stream_b_fun$) (?v5 B_stream_b_fun$)) (=> (and (= (fun_app$ao (comp$v ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (= (fun_app$as (comp$z ?v4) ?v2) ?v5)) (= (fun_app$t (fun_app$u comp$e (fun_app$aq (comp$x ?v4) ?v0)) ?v1) (fun_app$at (comp$aa ?v5) ?v3)))) :named a53))
(assert (! (forall ((?v0 C_c_stream_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 C_stream_b_fun$) (?v5 A_stream_b_fun$)) (=> (and (= (fun_app$au (comp$ab ?v0) ?v1) (fun_app$l (comp$b ?v2) ?v3)) (= (fun_app$ar (comp$y ?v4) ?v2) ?v5)) (= (fun_app$t (fun_app$u comp$e (fun_app$av (comp$ac ?v4) ?v0)) ?v1) (fun_app$ag (comp$n ?v5) ?v3)))) :named a54))
(assert (! (forall ((?v0 C_b_stream_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 B_stream_b_fun$) (?v5 A_stream_b_fun$)) (=> (and (= (fun_app$ao (comp$v ?v0) ?v1) (fun_app$n (comp$c ?v2) ?v3)) (= (fun_app$at (comp$aa ?v4) ?v2) ?v5)) (= (fun_app$t (fun_app$u comp$e (fun_app$aq (comp$x ?v4) ?v0)) ?v1) (fun_app$ag (comp$n ?v5) ?v3)))) :named a55))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 C_stream_c_stream_fun$) (?v4 A_stream_c_stream_fun$) (?v5 A_stream_c_stream_fun$)) (=> (and (= (fun_app$y (comp$f ?v0) ?v1) (fun_app$aa (comp$h ?v2) ?v3)) (= (fun_app$z (comp$g ?v3) ?v4) ?v5)) (= (fun_app$i (comp$a ?v0) (fun_app$f (fun_app$g comp$ ?v1) ?v4)) (fun_app$f (fun_app$g comp$ ?v2) ?v5)))) :named a56))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_c_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 C_stream_b_stream_fun$) (?v4 A_stream_c_stream_fun$) (?v5 A_stream_b_stream_fun$)) (=> (and (= (fun_app$aa (comp$h ?v0) ?v1) (fun_app$y (comp$f ?v2) ?v3)) (= (fun_app$f (fun_app$g comp$ ?v3) ?v4) ?v5)) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$z (comp$g ?v1) ?v4)) (fun_app$i (comp$a ?v2) ?v5)))) :named a57))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream_c_stream_fun$)) (=> (and (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (= (fun_app$l (comp$b ?v3) ?v4) ?v5)) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$l (comp$b ?v1) ?v4)) (fun_app$f (fun_app$g comp$ ?v2) ?v5)))) :named a58))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_b_fun$) (?v2 C_b_fun$) (?v3 C_c_fun$) (?v4 A_stream_c_fun$) (?v5 A_stream_c_fun$)) (=> (and (= (fun_app$ac (comp$j ?v0) ?v1) (fun_app$ae (comp$l ?v2) ?v3)) (= (fun_app$ad (comp$k ?v3) ?v4) ?v5)) (= (fun_app$ab (comp$i ?v0) (fun_app$t (fun_app$u comp$e ?v1) ?v4)) (fun_app$t (fun_app$u comp$e ?v2) ?v5)))) :named a59))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_c_fun$) (?v2 B_b_fun$) (?v3 C_b_fun$) (?v4 A_stream_c_fun$) (?v5 A_stream_b_fun$)) (=> (and (= (fun_app$ae (comp$l ?v0) ?v1) (fun_app$ac (comp$j ?v2) ?v3)) (= (fun_app$t (fun_app$u comp$e ?v3) ?v4) ?v5)) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$ad (comp$k ?v1) ?v4)) (fun_app$ab (comp$i ?v2) ?v5)))) :named a60))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream_c_fun$)) (=> (and (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (= (fun_app$af (comp$m ?v3) ?v4) ?v5)) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$af (comp$m ?v1) ?v4)) (fun_app$t (fun_app$u comp$e ?v2) ?v5)))) :named a61))
(assert (! (forall ((?v0 B_stream_b_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 C_stream_c_fun$) (?v4 A_stream_c_stream_fun$) (?v5 A_stream_c_fun$)) (=> (and (= (fun_app$ap (comp$w ?v0) ?v1) (fun_app$aw (comp$ad ?v2) ?v3)) (= (fun_app$ax (comp$ae ?v3) ?v4) ?v5)) (= (fun_app$at (comp$aa ?v0) (fun_app$f (fun_app$g comp$ ?v1) ?v4)) (fun_app$t (fun_app$u comp$e ?v2) ?v5)))) :named a62))
(assert (! (forall ((?v0 B_stream_b_fun$) (?v1 B_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 B_stream_c_fun$) (?v4 A_stream_b_stream_fun$) (?v5 A_stream_c_fun$)) (=> (and (= (fun_app$as (comp$z ?v0) ?v1) (fun_app$ay (fun_app$az comp$af ?v2) ?v3)) (= (fun_app$ba (comp$ag ?v3) ?v4) ?v5)) (= (fun_app$at (comp$aa ?v0) (fun_app$i (comp$a ?v1) ?v4)) (fun_app$t (fun_app$u comp$e ?v2) ?v5)))) :named a63))
(assert (! (forall ((?v0 B_b_stream_fun$) (?v1 C_b_fun$) (?v2 C_stream_b_stream_fun$) (?v3 C_c_stream_fun$) (?v4 A_stream_c_fun$) (?v5 A_stream_c_stream_fun$)) (=> (and (= (fun_app$bb (comp$ah ?v0) ?v1) (fun_app$bc (comp$ai ?v2) ?v3)) (= (fun_app$au (comp$ab ?v3) ?v4) ?v5)) (= (fun_app$bd (comp$aj ?v0) (fun_app$t (fun_app$u comp$e ?v1) ?v4)) (fun_app$f (fun_app$g comp$ ?v2) ?v5)))) :named a64))
(assert (! (forall ((?v0 B_b_stream_fun$) (?v1 C_b_fun$) (?v2 B_stream_b_stream_fun$) (?v3 C_b_stream_fun$) (?v4 A_stream_c_fun$) (?v5 A_stream_b_stream_fun$)) (=> (and (= (fun_app$bb (comp$ah ?v0) ?v1) (fun_app$be (comp$ak ?v2) ?v3)) (= (fun_app$ao (comp$v ?v3) ?v4) ?v5)) (= (fun_app$bd (comp$aj ?v0) (fun_app$t (fun_app$u comp$e ?v1) ?v4)) (fun_app$i (comp$a ?v2) ?v5)))) :named a65))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v4)) (fun_app$x ?v2 (fun_app$k ?v3 ?v4))))) :named a66))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream$)) (=> (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (= (fun_app$v ?v0 (fun_app$w ?v1 ?v4)) (fun_app$v ?v2 (fun_app$w ?v3 ?v4))))) :named a67))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v4)) (fun_app$j ?v2 (fun_app$h ?v3 ?v4))))) :named a68))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$n (comp$c ?v2) ?v3)) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v4)) (fun_app$h ?v2 (fun_app$m ?v3 ?v4))))) :named a69))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$i (comp$a ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v4)) (fun_app$x ?v2 (fun_app$k ?v3 ?v4))))) :named a70))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$i (comp$a ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v4)) (fun_app$j ?v2 (fun_app$h ?v3 ?v4))))) :named a71))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$i (comp$a ?v0) ?v1) (fun_app$n (comp$c ?v2) ?v3)) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v4)) (fun_app$h ?v2 (fun_app$m ?v3 ?v4))))) :named a72))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$l (comp$b ?v0) ?v1) (fun_app$l (comp$b ?v2) ?v3)) (= (fun_app$k ?v0 (fun_app$m ?v1 ?v4)) (fun_app$k ?v2 (fun_app$m ?v3 ?v4))))) :named a73))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$n (comp$c ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (= (fun_app$h ?v0 (fun_app$m ?v1 ?v4)) (fun_app$x ?v2 (fun_app$k ?v3 ?v4))))) :named a74))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream$)) (=> (= (fun_app$n (comp$c ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (= (fun_app$h ?v0 (fun_app$m ?v1 ?v4)) (fun_app$j ?v2 (fun_app$h ?v3 ?v4))))) :named a75))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 C_stream_b_stream_fun$)) (=> (= (fun_app$l (comp$b ?v0) ?v1) ?v2) (= (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v3) ?v0)) ?v1) (fun_app$f (fun_app$g comp$ ?v3) ?v2)))) :named a76))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 C_stream_b_stream_fun$)) (=> (= (fun_app$z (comp$g ?v0) ?v1) ?v2) (= (fun_app$f (fun_app$g comp$ (fun_app$aa (comp$h ?v3) ?v0)) ?v1) (fun_app$f (fun_app$g comp$ ?v3) ?v2)))) :named a77))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_fun$)) (=> (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (= (fun_app$f (fun_app$g comp$ (fun_app$y (comp$f ?v3) ?v0)) ?v1) (fun_app$i (comp$a ?v3) ?v2)))) :named a78))
(assert (! (forall ((?v0 C_c_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_c_fun$) (?v3 C_b_fun$)) (=> (= (fun_app$ad (comp$k ?v0) ?v1) ?v2) (= (fun_app$t (fun_app$u comp$e (fun_app$ae (comp$l ?v3) ?v0)) ?v1) (fun_app$t (fun_app$u comp$e ?v3) ?v2)))) :named a79))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_b_fun$) (?v3 B_b_fun$)) (=> (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2) (= (fun_app$t (fun_app$u comp$e (fun_app$ac (comp$j ?v3) ?v0)) ?v1) (fun_app$ab (comp$i ?v3) ?v2)))) :named a80))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_c_fun$) (?v3 C_b_fun$)) (=> (= (fun_app$af (comp$m ?v0) ?v1) ?v2) (= (fun_app$ag (comp$n (fun_app$t (fun_app$u comp$e ?v3) ?v0)) ?v1) (fun_app$t (fun_app$u comp$e ?v3) ?v2)))) :named a81))
(assert (! (forall ((?v0 C_stream_a_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_b_stream_fun$)) (=> (= (fun_app$al (comp$s ?v0) ?v1) ?v2) (= (fun_app$f (fun_app$g comp$ (fun_app$ak (comp$r ?v3) ?v0)) ?v1) (fun_app$n (comp$c ?v3) ?v2)))) :named a82))
(assert (! (forall ((?v0 B_stream_c_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 C_stream_b_stream_fun$)) (=> (= (fun_app$ah (comp$o ?v0) ?v1) ?v2) (= (fun_app$i (comp$a (fun_app$ai (comp$p ?v3) ?v0)) ?v1) (fun_app$f (fun_app$g comp$ ?v3) ?v2)))) :named a83))
(assert (! (forall ((?v0 B_stream_a_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_b_stream_fun$)) (=> (= (fun_app$an (comp$u ?v0) ?v1) ?v2) (= (fun_app$i (comp$a (fun_app$am (comp$t ?v3) ?v0)) ?v1) (fun_app$n (comp$c ?v3) ?v2)))) :named a84))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_stream_fun$)) (=> (= (fun_app$bf (comp$al ?v0) ?v1) ?v2) (= (fun_app$l (comp$b (fun_app$l (comp$b ?v3) ?v0)) ?v1) (fun_app$l (comp$b ?v3) ?v2)))) :named a85))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (=> (= (fun_app$y (comp$f ?v0) ?v1) ?v2) (= (fun_app$i (comp$a ?v0) (fun_app$f (fun_app$g comp$ ?v1) ?v3)) (fun_app$f (fun_app$g comp$ ?v2) ?v3)))) :named a86))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (=> (= (fun_app$aa (comp$h ?v0) ?v1) ?v2) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$z (comp$g ?v1) ?v3)) (fun_app$f (fun_app$g comp$ ?v2) ?v3)))) :named a87))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$)) (=> (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$l (comp$b ?v1) ?v3)) (fun_app$n (comp$c ?v2) ?v3)))) :named a88))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_b_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (=> (= (fun_app$ac (comp$j ?v0) ?v1) ?v2) (= (fun_app$ab (comp$i ?v0) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) (fun_app$t (fun_app$u comp$e ?v2) ?v3)))) :named a89))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_c_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (=> (= (fun_app$ae (comp$l ?v0) ?v1) ?v2) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$ad (comp$k ?v1) ?v3)) (fun_app$t (fun_app$u comp$e ?v2) ?v3)))) :named a90))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_b_fun$) (?v3 A_stream_a_stream_fun$)) (=> (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$af (comp$m ?v1) ?v3)) (fun_app$ag (comp$n ?v2) ?v3)))) :named a91))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$)) (=> (= (fun_app$z (comp$g ?v0) ?v1) ?v2) (= (fun_app$z (comp$g ?v0) (fun_app$l (comp$b ?v1) ?v3)) (fun_app$l (comp$b ?v2) ?v3)))) :named a92))
(assert (! (forall ((?v0 B_stream_c_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$)) (=> (= (fun_app$ah (comp$o ?v0) ?v1) ?v2) (= (fun_app$ah (comp$o ?v0) (fun_app$n (comp$c ?v1) ?v3)) (fun_app$l (comp$b ?v2) ?v3)))) :named a93))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 B_stream_c_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$)) (=> (= (fun_app$ai (comp$p ?v0) ?v1) ?v2) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$ah (comp$o ?v1) ?v3)) (fun_app$i (comp$a ?v2) ?v3)))) :named a94))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 B_stream_b_stream_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$)) (=> (= (fun_app$aj (comp$q ?v0) ?v1) ?v2) (= (fun_app$i (comp$a ?v0) (fun_app$i (comp$a ?v1) ?v3)) (fun_app$i (comp$a ?v2) ?v3)))) :named a95))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$i (comp$a ?v0) ?v1) ?v2) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v3)) (fun_app$h ?v2 ?v3)))) :named a96))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$l (comp$b ?v0) ?v1) ?v2) (= (fun_app$k ?v0 (fun_app$m ?v1 ?v3)) (fun_app$k ?v2 ?v3)))) :named a97))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$n (comp$c ?v0) ?v1) ?v2) (= (fun_app$h ?v0 (fun_app$m ?v1 ?v3)) (fun_app$h ?v2 ?v3)))) :named a98))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) (?v2 B_stream_a_stream_fun_a_stream_b_stream_fun_fun$) (?v3 B_stream_a_stream_fun$)) (=> (= (fun_app$p (comp$d ?v0) ?v1) ?v2) (= (fun_app$q ?v0 (fun_app$r ?v1 ?v3)) (fun_app$o ?v2 ?v3)))) :named a99))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_b_fun$) (?v3 A_stream$)) (=> (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2) (= (fun_app$v ?v0 (fun_app$w ?v1 ?v3)) (fun_app$s ?v2 ?v3)))) :named a100))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v3)) (fun_app$h ?v2 ?v3)))) :named a101))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 C_stream_b_stream_fun$) (?v4 A_stream_c_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$x ?v0 (fun_app$k ?v1 ?v2)) (fun_app$x ?v3 (fun_app$k ?v4 ?v5))) (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$h (fun_app$f (fun_app$g comp$ ?v3) ?v4) ?v5)))) :named a102))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream$) (?v3 C_b_fun$) (?v4 A_stream_c_fun$) (?v5 A_stream$)) (=> (= (fun_app$v ?v0 (fun_app$w ?v1 ?v2)) (fun_app$v ?v3 (fun_app$w ?v4 ?v5))) (= (fun_app$s (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2) (fun_app$s (fun_app$t (fun_app$u comp$e ?v3) ?v4) ?v5)))) :named a103))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 B_stream_b_stream_fun$) (?v4 A_stream_b_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$x ?v0 (fun_app$k ?v1 ?v2)) (fun_app$j ?v3 (fun_app$h ?v4 ?v5))) (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$h (fun_app$i (comp$a ?v3) ?v4) ?v5)))) :named a104))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$x ?v0 (fun_app$k ?v1 ?v2)) (fun_app$h ?v3 (fun_app$m ?v4 ?v5))) (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c ?v3) ?v4) ?v5)))) :named a105))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 C_stream_b_stream_fun$) (?v4 A_stream_c_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$j ?v0 (fun_app$h ?v1 ?v2)) (fun_app$x ?v3 (fun_app$k ?v4 ?v5))) (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$h (fun_app$f (fun_app$g comp$ ?v3) ?v4) ?v5)))) :named a106))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 B_stream_b_stream_fun$) (?v4 A_stream_b_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$j ?v0 (fun_app$h ?v1 ?v2)) (fun_app$j ?v3 (fun_app$h ?v4 ?v5))) (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$h (fun_app$i (comp$a ?v3) ?v4) ?v5)))) :named a107))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$j ?v0 (fun_app$h ?v1 ?v2)) (fun_app$h ?v3 (fun_app$m ?v4 ?v5))) (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c ?v3) ?v4) ?v5)))) :named a108))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$k ?v0 (fun_app$m ?v1 ?v2)) (fun_app$k ?v3 (fun_app$m ?v4 ?v5))) (= (fun_app$k (fun_app$l (comp$b ?v0) ?v1) ?v2) (fun_app$k (fun_app$l (comp$b ?v3) ?v4) ?v5)))) :named a109))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 C_stream_b_stream_fun$) (?v4 A_stream_c_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$h ?v0 (fun_app$m ?v1 ?v2)) (fun_app$x ?v3 (fun_app$k ?v4 ?v5))) (= (fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2) (fun_app$h (fun_app$f (fun_app$g comp$ ?v3) ?v4) ?v5)))) :named a110))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 B_stream_b_stream_fun$) (?v4 A_stream_b_stream_fun$) (?v5 A_stream$)) (=> (= (fun_app$h ?v0 (fun_app$m ?v1 ?v2)) (fun_app$j ?v3 (fun_app$h ?v4 ?v5))) (= (fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2) (fun_app$h (fun_app$i (comp$a ?v3) ?v4) ?v5)))) :named a111))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 C_stream_b_stream_fun$) (?v4 A_stream_c_stream_fun$)) (=> (= (fun_app$x ?v0 (fun_app$k ?v1 ?v2)) (fun_app$x ?v3 (fun_app$k ?v4 ?v2))) (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$h (fun_app$f (fun_app$g comp$ ?v3) ?v4) ?v2)))) :named a112))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream$) (?v3 C_b_fun$) (?v4 A_stream_c_fun$)) (=> (= (fun_app$v ?v0 (fun_app$w ?v1 ?v2)) (fun_app$v ?v3 (fun_app$w ?v4 ?v2))) (= (fun_app$s (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2) (fun_app$s (fun_app$t (fun_app$u comp$e ?v3) ?v4) ?v2)))) :named a113))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 B_stream_b_stream_fun$) (?v4 A_stream_b_stream_fun$)) (=> (= (fun_app$x ?v0 (fun_app$k ?v1 ?v2)) (fun_app$j ?v3 (fun_app$h ?v4 ?v2))) (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$h (fun_app$i (comp$a ?v3) ?v4) ?v2)))) :named a114))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$)) (=> (= (fun_app$x ?v0 (fun_app$k ?v1 ?v2)) (fun_app$h ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c ?v3) ?v4) ?v2)))) :named a115))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 C_stream_b_stream_fun$) (?v4 A_stream_c_stream_fun$)) (=> (= (fun_app$j ?v0 (fun_app$h ?v1 ?v2)) (fun_app$x ?v3 (fun_app$k ?v4 ?v2))) (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$h (fun_app$f (fun_app$g comp$ ?v3) ?v4) ?v2)))) :named a116))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 B_stream_b_stream_fun$) (?v4 A_stream_b_stream_fun$)) (=> (= (fun_app$j ?v0 (fun_app$h ?v1 ?v2)) (fun_app$j ?v3 (fun_app$h ?v4 ?v2))) (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$h (fun_app$i (comp$a ?v3) ?v4) ?v2)))) :named a117))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$)) (=> (= (fun_app$j ?v0 (fun_app$h ?v1 ?v2)) (fun_app$h ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$i (comp$a ?v0) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c ?v3) ?v4) ?v2)))) :named a118))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$)) (=> (= (fun_app$k ?v0 (fun_app$m ?v1 ?v2)) (fun_app$k ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$k (fun_app$l (comp$b ?v0) ?v1) ?v2) (fun_app$k (fun_app$l (comp$b ?v3) ?v4) ?v2)))) :named a119))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 C_stream_b_stream_fun$) (?v4 A_stream_c_stream_fun$)) (=> (= (fun_app$h ?v0 (fun_app$m ?v1 ?v2)) (fun_app$x ?v3 (fun_app$k ?v4 ?v2))) (= (fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2) (fun_app$h (fun_app$f (fun_app$g comp$ ?v3) ?v4) ?v2)))) :named a120))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 B_stream_b_stream_fun$) (?v4 A_stream_b_stream_fun$)) (=> (= (fun_app$h ?v0 (fun_app$m ?v1 ?v2)) (fun_app$j ?v3 (fun_app$h ?v4 ?v2))) (= (fun_app$h (fun_app$n (comp$c ?v0) ?v1) ?v2) (fun_app$h (fun_app$i (comp$a ?v3) ?v4) ?v2)))) :named a121))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 C_stream_c_stream_fun$) (?v4 A_stream_c_stream_fun$) (?v5 C_stream_b_stream_fun$)) (=> (= (fun_app$k ?v0 (fun_app$m ?v1 ?v2)) (fun_app$bg ?v3 (fun_app$k ?v4 ?v2))) (= (fun_app$h (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v5) ?v0)) ?v1) ?v2) (fun_app$h (fun_app$f (fun_app$g comp$ (fun_app$aa (comp$h ?v5) ?v3)) ?v4) ?v2)))) :named a122))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 C_stream_b_stream_fun$)) (=> (= (fun_app$bg ?v0 (fun_app$k ?v1 ?v2)) (fun_app$k ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$f (fun_app$g comp$ (fun_app$aa (comp$h ?v5) ?v0)) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v5) ?v3)) ?v4) ?v2)))) :named a123))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 C_c_fun$) (?v4 A_stream_c_fun$) (?v5 C_b_fun$)) (=> (= (fun_app$w ?v0 (fun_app$m ?v1 ?v2)) (fun_app$bh ?v3 (fun_app$w ?v4 ?v2))) (= (fun_app$s (fun_app$ag (comp$n (fun_app$t (fun_app$u comp$e ?v5) ?v0)) ?v1) ?v2) (fun_app$s (fun_app$t (fun_app$u comp$e (fun_app$ae (comp$l ?v5) ?v3)) ?v4) ?v2)))) :named a124))
(assert (! (forall ((?v0 C_c_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_fun$) (?v5 C_b_fun$)) (=> (= (fun_app$bh ?v0 (fun_app$w ?v1 ?v2)) (fun_app$w ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$s (fun_app$t (fun_app$u comp$e (fun_app$ae (comp$l ?v5) ?v0)) ?v1) ?v2) (fun_app$s (fun_app$ag (comp$n (fun_app$t (fun_app$u comp$e ?v5) ?v3)) ?v4) ?v2)))) :named a125))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 B_stream_b_stream_fun$)) (=> (= (fun_app$x ?v0 (fun_app$k ?v1 ?v2)) (fun_app$h ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$f (fun_app$g comp$ (fun_app$y (comp$f ?v5) ?v0)) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c (fun_app$i (comp$a ?v5) ?v3)) ?v4) ?v2)))) :named a126))
(assert (! (forall ((?v0 C_stream_a_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream_b_stream_fun$)) (=> (= (fun_app$bi ?v0 (fun_app$k ?v1 ?v2)) (fun_app$m ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$f (fun_app$g comp$ (fun_app$ak (comp$r ?v5) ?v0)) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c (fun_app$n (comp$c ?v5) ?v3)) ?v4) ?v2)))) :named a127))
(assert (! (forall ((?v0 B_stream_c_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 C_stream_b_stream_fun$)) (=> (= (fun_app$bj ?v0 (fun_app$h ?v1 ?v2)) (fun_app$k ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$i (comp$a (fun_app$ai (comp$p ?v5) ?v0)) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v5) ?v3)) ?v4) ?v2)))) :named a128))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 B_stream_b_stream_fun$)) (=> (= (fun_app$j ?v0 (fun_app$h ?v1 ?v2)) (fun_app$h ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$i (comp$a (fun_app$aj (comp$q ?v5) ?v0)) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c (fun_app$i (comp$a ?v5) ?v3)) ?v4) ?v2)))) :named a129))
(assert (! (forall ((?v0 B_stream_a_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream_b_stream_fun$)) (=> (= (fun_app$bk ?v0 (fun_app$h ?v1 ?v2)) (fun_app$m ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$h (fun_app$i (comp$a (fun_app$am (comp$t ?v5) ?v0)) ?v1) ?v2) (fun_app$h (fun_app$n (comp$c (fun_app$n (comp$c ?v5) ?v3)) ?v4) ?v2)))) :named a130))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_fun$) (?v5 A_stream_c_stream_fun$)) (=> (= (fun_app$m ?v0 (fun_app$m ?v1 ?v2)) (fun_app$m ?v3 (fun_app$m ?v4 ?v2))) (= (fun_app$k (fun_app$l (comp$b (fun_app$l (comp$b ?v5) ?v0)) ?v1) ?v2) (fun_app$k (fun_app$l (comp$b (fun_app$l (comp$b ?v5) ?v3)) ?v4) ?v2)))) :named a131))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (comp$am (convol$ ?v0 ?v1) ?v2) (convol$ (fun_app$l (comp$b ?v0) ?v2) (fun_app$n (comp$c ?v1) ?v2)))) :named a132))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (comp$an (convol$a ?v0 ?v1) ?v2) (convol$a (fun_app$n (comp$c ?v0) ?v2) (fun_app$l (comp$b ?v1) ?v2)))) :named a133))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v1 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v2 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$)) (= (comp$ao (convol$b ?v0 ?v1) ?v2) (convol$c (fun_app$p (comp$d ?v0) ?v2) (fun_app$p (comp$d ?v1) ?v2)))) :named a134))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_fun$)) (= (comp$ap (convol$d ?v0 ?v1) ?v2) (convol$e (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v2)))) :named a135))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$)) (= (comp$aq (convol$f ?v0 ?v1) ?v2) (convol$g (fun_app$i (comp$a ?v0) ?v2) (fun_app$i (comp$a ?v1) ?v2)))) :named a136))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream_c_stream_fun$)) (= (comp$ar (convol$h ?v0 ?v1) ?v2) (convol$h (fun_app$aa (comp$h ?v0) ?v2) (fun_app$aa (comp$h ?v1) ?v2)))) :named a137))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 C_stream_a_stream_fun$)) (= (comp$as (convol$g ?v0 ?v1) ?v2) (convol$h (fun_app$ak (comp$r ?v0) ?v2) (fun_app$ak (comp$r ?v1) ?v2)))) :named a138))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (comp$at (convol$g ?v0 ?v1) ?v2) (convol$g (fun_app$n (comp$c ?v0) ?v2) (fun_app$n (comp$c ?v1) ?v2)))) :named a139))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_a_stream_fun$)) (= (comp$au (convol$i ?v0 ?v1) ?v2) (convol$i (fun_app$l (comp$b ?v0) ?v2) (fun_app$l (comp$b ?v1) ?v2)))) :named a140))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$)) (= (comp$av (convol$h ?v0 ?v1) ?v2) (convol$g (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v2)))) :named a141))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) (?v2 B_stream_a_stream_fun$) (?v3 C_stream_c_stream_fun$)) (= (fun_app$p (comp$d ?v0) (fun_app$bl (fun_app$bm (fun_upd$ ?v1) ?v2) ?v3)) (fun_app$bn (fun_app$bo (fun_upd$a (fun_app$p (comp$d ?v0) ?v1)) ?v2) (fun_app$q ?v0 ?v3)))) :named a142))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream$) (?v3 C$)) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$bp (fun_app$bq (fun_upd$b ?v1) ?v2) ?v3)) (fun_app$br (fun_app$bs (fun_upd$c (fun_app$t (fun_app$u comp$e ?v0) ?v1)) ?v2) (fun_app$v ?v0 ?v3)))) :named a143))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 A_stream$)) (= (fun_app$l (comp$b ?v0) (fun_app$bt (fun_app$bu (fun_upd$d ?v1) ?v2) ?v3)) (fun_app$bv (fun_app$bw (fun_upd$e (fun_app$l (comp$b ?v0) ?v1)) ?v2) (fun_app$k ?v0 ?v3)))) :named a144))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream$) (?v3 A_stream$)) (= (fun_app$n (comp$c ?v0) (fun_app$bt (fun_app$bu (fun_upd$d ?v1) ?v2) ?v3)) (fun_app$bx (fun_app$by (fun_upd$f (fun_app$n (comp$c ?v0) ?v1)) ?v2) (fun_app$h ?v0 ?v3)))) :named a145))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 C_stream$)) (= (fun_app$z (comp$g ?v0) (fun_app$bv (fun_app$bw (fun_upd$e ?v1) ?v2) ?v3)) (fun_app$bv (fun_app$bw (fun_upd$e (fun_app$z (comp$g ?v0) ?v1)) ?v2) (fun_app$bg ?v0 ?v3)))) :named a146))
(assert (! (forall ((?v0 B_stream_c_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 B_stream$)) (= (fun_app$ah (comp$o ?v0) (fun_app$bx (fun_app$by (fun_upd$f ?v1) ?v2) ?v3)) (fun_app$bv (fun_app$bw (fun_upd$e (fun_app$ah (comp$o ?v0) ?v1)) ?v2) (fun_app$bj ?v0 ?v3)))) :named a147))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$) (?v3 B_stream$)) (= (fun_app$i (comp$a ?v0) (fun_app$bx (fun_app$by (fun_upd$f ?v1) ?v2) ?v3)) (fun_app$bx (fun_app$by (fun_upd$f (fun_app$i (comp$a ?v0) ?v1)) ?v2) (fun_app$j ?v0 ?v3)))) :named a148))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$) (?v3 C_stream$)) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$bv (fun_app$bw (fun_upd$e ?v1) ?v2) ?v3)) (fun_app$bx (fun_app$by (fun_upd$f (fun_app$f (fun_app$g comp$ ?v0) ?v1)) ?v2) (fun_app$x ?v0 ?v3)))) :named a149))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 B_stream_a_stream_fun$) (?v3 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$)) (= (fun_app$p (comp$d ?v0) (fun_app$bz (fun_app$ca (swap$ ?v1) ?v2) ?v3)) (fun_app$cb (fun_app$cc (swap$a ?v1) ?v2) (fun_app$p (comp$d ?v0) ?v3)))) :named a150))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_c_fun$)) (= (fun_app$t (fun_app$u comp$e ?v0) (fun_app$ad (fun_app$cd (swap$b ?v1) ?v2) ?v3)) (fun_app$ab (fun_app$ce (swap$c ?v1) ?v2) (fun_app$t (fun_app$u comp$e ?v0) ?v3)))) :named a151))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_a_stream_fun$)) (= (fun_app$l (comp$b ?v0) (fun_app$bf (fun_app$cf (swap$d ?v1) ?v2) ?v3)) (fun_app$z (fun_app$cg (swap$e ?v1) ?v2) (fun_app$l (comp$b ?v0) ?v3)))) :named a152))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_a_stream_fun$)) (= (fun_app$n (comp$c ?v0) (fun_app$bf (fun_app$cf (swap$d ?v1) ?v2) ?v3)) (fun_app$i (fun_app$ch (swap$f ?v1) ?v2) (fun_app$n (comp$c ?v0) ?v3)))) :named a153))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$)) (= (fun_app$z (comp$g ?v0) (fun_app$z (fun_app$cg (swap$e ?v1) ?v2) ?v3)) (fun_app$z (fun_app$cg (swap$e ?v1) ?v2) (fun_app$z (comp$g ?v0) ?v3)))) :named a154))
(assert (! (forall ((?v0 B_stream_c_stream_fun$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$)) (= (fun_app$ah (comp$o ?v0) (fun_app$i (fun_app$ch (swap$f ?v1) ?v2) ?v3)) (fun_app$z (fun_app$cg (swap$e ?v1) ?v2) (fun_app$ah (comp$o ?v0) ?v3)))) :named a155))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$)) (= (fun_app$i (comp$a ?v0) (fun_app$i (fun_app$ch (swap$f ?v1) ?v2) ?v3)) (fun_app$i (fun_app$ch (swap$f ?v1) ?v2) (fun_app$i (comp$a ?v0) ?v3)))) :named a156))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$)) (= (fun_app$f (fun_app$g comp$ ?v0) (fun_app$z (fun_app$cg (swap$e ?v1) ?v2) ?v3)) (fun_app$i (fun_app$ch (swap$f ?v1) ?v2) (fun_app$f (fun_app$g comp$ ?v0) ?v3)))) :named a157))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$f (fun_app$g comp$ (smap$ ?v0)) (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ ?v1) ?v2) ?v3) ?v4)) (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a (fun_app$t (fun_app$u comp$e ?v0) ?v1)) ?v2) (fun_app$f (fun_app$g comp$ (smap$ ?v0)) ?v3)) ?v4))) :named a158))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_c_stream_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$cm (comp$aw (smap$a ?v0)) (fun_app$cn (fun_app$co (fun_app$cp (corec_stream$b ?v1) ?v2) ?v3) ?v4)) (fun_app$cq (fun_app$cr (fun_app$cs (corec_stream$c (fun_app$f (fun_app$g comp$ ?v0) ?v1)) ?v2) (fun_app$cm (comp$aw (smap$a ?v0)) ?v3)) ?v4))) :named a159))
(assert (! (forall ((?v0 A_c_fun$) (?v1 A_stream_a_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$l (comp$b (smap$b ?v0)) (fun_app$bf (fun_app$ct (fun_app$cu (corec_stream$d ?v1) ?v2) ?v3) ?v4)) (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ (fun_app$cv (comp$ax ?v0) ?v1)) ?v2) (fun_app$l (comp$b (smap$b ?v0)) ?v3)) ?v4))) :named a160))
(assert (! (forall ((?v0 A_b_fun$) (?v1 A_stream_a_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$n (comp$c (smap$c ?v0)) (fun_app$bf (fun_app$ct (fun_app$cu (corec_stream$d ?v1) ?v2) ?v3) ?v4)) (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a (fun_app$cw (comp$ay ?v0) ?v1)) ?v2) (fun_app$n (comp$c (smap$c ?v0)) ?v3)) ?v4))) :named a161))
(assert (! (forall ((?v0 C_c_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$z (comp$g (smap$d ?v0)) (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ ?v1) ?v2) ?v3) ?v4)) (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ (fun_app$ad (comp$k ?v0) ?v1)) ?v2) (fun_app$z (comp$g (smap$d ?v0)) ?v3)) ?v4))) :named a162))
(assert (! (forall ((?v0 B_c_fun$) (?v1 A_stream_b_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$ah (comp$o (smap$e ?v0)) (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a ?v1) ?v2) ?v3) ?v4)) (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ (fun_app$cx (comp$az ?v0) ?v1)) ?v2) (fun_app$ah (comp$o (smap$e ?v0)) ?v3)) ?v4))) :named a163))
(assert (! (forall ((?v0 B_b_fun$) (?v1 A_stream_b_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$i (comp$a (smap$f ?v0)) (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a ?v1) ?v2) ?v3) ?v4)) (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a (fun_app$ab (comp$i ?v0) ?v1)) ?v2) (fun_app$i (comp$a (smap$f ?v0)) ?v3)) ?v4))) :named a164))
(assert (! (forall ((?v0 C_c_stream_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$cy (comp$ba (smap$g ?v0)) (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ ?v1) ?v2) ?v3) ?v4)) (fun_app$cn (fun_app$co (fun_app$cp (corec_stream$b (fun_app$au (comp$ab ?v0) ?v1)) ?v2) (fun_app$cy (comp$ba (smap$g ?v0)) ?v3)) ?v4))) :named a165))
(assert (! (forall ((?v0 C_b_stream_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$cz (comp$bb (smap$h ?v0)) (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ ?v1) ?v2) ?v3) ?v4)) (fun_app$cq (fun_app$cr (fun_app$cs (corec_stream$c (fun_app$ao (comp$v ?v0) ?v1)) ?v2) (fun_app$cz (comp$bb (smap$h ?v0)) ?v3)) ?v4))) :named a166))
(assert (! (forall ((?v0 B_c_stream_fun$) (?v1 A_stream_b_fun$) (?v2 A_stream_bool_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_fun$)) (= (fun_app$da (comp$bc (smap$i ?v0)) (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a ?v1) ?v2) ?v3) ?v4)) (fun_app$cn (fun_app$co (fun_app$cp (corec_stream$b (fun_app$db (comp$bd ?v0) ?v1)) ?v2) (fun_app$da (comp$bc (smap$i ?v0)) ?v3)) ?v4))) :named a167))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$) (?v2 C_stream$) (?v3 A_stream$)) (! (= (fun_app$k (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2) ?v3) (ite (= ?v3 ?v1) ?v2 (fun_app$k ?v0 ?v3))) :pattern ((fun_app$k (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2) ?v3)))) :named a168))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$) (?v2 B_stream$) (?v3 A_stream$)) (! (= (fun_app$h (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2) ?v3) (ite (= ?v3 ?v1) ?v2 (fun_app$h ?v0 ?v3))) :pattern ((fun_app$h (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2) ?v3)))) :named a169))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$) (?v2 C_stream$) (?v3 C_stream$)) (= (fun_app$bv (fun_app$bw (fun_upd$e (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2)) ?v1) ?v3) (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v3))) :named a170))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$) (?v2 B_stream$) (?v3 B_stream$)) (= (fun_app$bx (fun_app$by (fun_upd$f (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2)) ?v1) ?v3) (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v3))) :named a171))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$)) (= (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) (fun_app$k ?v0 ?v1)) ?v0)) :named a172))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$)) (= (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) (fun_app$h ?v0 ?v1)) ?v0)) :named a173))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_c_stream_fun$)) (! (= (fun_app$k (fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2) ?v0) (fun_app$k ?v2 ?v1)) :pattern ((fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2)))) :named a174))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_b_stream_fun$)) (! (= (fun_app$h (fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2) ?v0) (fun_app$h ?v2 ?v1)) :pattern ((fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2)))) :named a175))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_c_stream_fun$)) (! (= (fun_app$k (fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2) ?v1) (fun_app$k ?v2 ?v0)) :pattern ((fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2)))) :named a176))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_b_stream_fun$)) (! (= (fun_app$h (fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2) ?v1) (fun_app$h ?v2 ?v0)) :pattern ((fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2)))) :named a177))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_c_stream_fun$)) (= (fun_app$z (fun_app$cg (swap$e ?v0) ?v1) (fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2)) ?v2)) :named a178))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_b_stream_fun$)) (= (fun_app$i (fun_app$ch (swap$f ?v0) ?v1) (fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2)) ?v2)) :named a179))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream_c_stream_fun$)) (! (= (fun_app$z (fun_app$cg (swap$e ?v0) ?v0) ?v1) ?v1) :pattern ((fun_app$z (fun_app$cg (swap$e ?v0) ?v0) ?v1)))) :named a180))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream_b_stream_fun$)) (! (= (fun_app$i (fun_app$ch (swap$f ?v0) ?v0) ?v1) ?v1) :pattern ((fun_app$i (fun_app$ch (swap$f ?v0) ?v0) ?v1)))) :named a181))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$)) (! (=> (and (not (= ?v0 ?v1)) (not (= ?v0 ?v2))) (= (fun_app$k (fun_app$z (fun_app$cg (swap$e ?v1) ?v2) ?v3) ?v0) (fun_app$k ?v3 ?v0))) :pattern ((fun_app$k (fun_app$z (fun_app$cg (swap$e ?v1) ?v2) ?v3) ?v0)))) :named a182))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$)) (! (=> (and (not (= ?v0 ?v1)) (not (= ?v0 ?v2))) (= (fun_app$h (fun_app$i (fun_app$ch (swap$f ?v1) ?v2) ?v3) ?v0) (fun_app$h ?v3 ?v0))) :pattern ((fun_app$h (fun_app$i (fun_app$ch (swap$f ?v1) ?v2) ?v3) ?v0)))) :named a183))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_c_stream_fun$)) (= (fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2) (fun_app$z (fun_app$cg (swap$e ?v1) ?v0) ?v2))) :named a184))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_b_stream_fun$)) (= (fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2) (fun_app$i (fun_app$ch (swap$f ?v1) ?v0) ?v2))) :named a185))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_c_stream_fun$)) (! (= (fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2) (fun_app$bv (fun_app$bw (fun_upd$e (fun_app$bv (fun_app$bw (fun_upd$e ?v2) ?v0) (fun_app$k ?v2 ?v1))) ?v1) (fun_app$k ?v2 ?v0))) :pattern ((fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v2)))) :named a186))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_b_stream_fun$)) (! (= (fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2) (fun_app$bx (fun_app$by (fun_upd$f (fun_app$bx (fun_app$by (fun_upd$f ?v2) ?v0) (fun_app$h ?v2 ?v1))) ?v1) (fun_app$h ?v2 ?v0))) :pattern ((fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v2)))) :named a187))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$) (?v2 C_stream$)) (= (= (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2) ?v0) (= (fun_app$k ?v0 ?v1) ?v2))) :named a188))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$) (?v2 B_stream$)) (= (= (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2) ?v0) (= (fun_app$h ?v0 ?v1) ?v2))) :named a189))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$) (?v2 C_stream$)) (! (= (fun_app$k (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2) ?v1) ?v2) :pattern ((fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2)))) :named a190))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$) (?v2 B_stream$)) (! (= (fun_app$h (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2) ?v1) ?v2) :pattern ((fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2)))) :named a191))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$) (?v2 C_stream$) (?v3 A_stream$)) (! (= (fun_app$k (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2) ?v3) (ite (= ?v3 ?v1) ?v2 (fun_app$k ?v0 ?v3))) :pattern ((fun_app$k (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2) ?v3)))) :named a192))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$) (?v2 B_stream$) (?v3 A_stream$)) (! (= (fun_app$h (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2) ?v3) (ite (= ?v3 ?v1) ?v2 (fun_app$h ?v0 ?v3))) :pattern ((fun_app$h (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2) ?v3)))) :named a193))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream$) (?v2 C_stream$)) (! (=> (= (fun_app$k ?v0 ?v1) ?v2) (= (fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2) ?v0)) :pattern ((fun_app$bv (fun_app$bw (fun_upd$e ?v0) ?v1) ?v2)))) :named a194))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$) (?v2 B_stream$)) (! (=> (= (fun_app$h ?v0 ?v1) ?v2) (= (fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2) ?v0)) :pattern ((fun_app$bx (fun_app$by (fun_upd$f ?v0) ?v1) ?v2)))) :named a195))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_c_stream_fun$)) (=> (and (not (= ?v0 ?v1)) (not (= ?v2 ?v1))) (= (fun_app$z (fun_app$cg (swap$e ?v0) ?v2) (fun_app$z (fun_app$cg (swap$e ?v2) ?v1) (fun_app$z (fun_app$cg (swap$e ?v0) ?v2) ?v3))) (fun_app$z (fun_app$cg (swap$e ?v0) ?v1) ?v3)))) :named a196))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream$) (?v3 A_stream_b_stream_fun$)) (=> (and (not (= ?v0 ?v1)) (not (= ?v2 ?v1))) (= (fun_app$i (fun_app$ch (swap$f ?v0) ?v2) (fun_app$i (fun_app$ch (swap$f ?v2) ?v1) (fun_app$i (fun_app$ch (swap$f ?v0) ?v2) ?v3))) (fun_app$i (fun_app$ch (swap$f ?v0) ?v1) ?v3)))) :named a197))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_c_stream_fun$) (?v3 C_stream$)) (! (=> (not (= ?v0 ?v1)) (= (fun_app$k (fun_app$bv (fun_app$bw (fun_upd$e ?v2) ?v1) ?v3) ?v0) (fun_app$k ?v2 ?v0))) :pattern ((fun_app$k (fun_app$bv (fun_app$bw (fun_upd$e ?v2) ?v1) ?v3) ?v0)))) :named a198))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream$)) (! (=> (not (= ?v0 ?v1)) (= (fun_app$h (fun_app$bx (fun_app$by (fun_upd$f ?v2) ?v1) ?v3) ?v0) (fun_app$h ?v2 ?v0))) :pattern ((fun_app$h (fun_app$bx (fun_app$by (fun_upd$f ?v2) ?v1) ?v3) ?v0)))) :named a199))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_c_stream_fun$) (?v3 C_stream$) (?v4 C_stream$)) (=> (not (= ?v0 ?v1)) (= (fun_app$bv (fun_app$bw (fun_upd$e (fun_app$bv (fun_app$bw (fun_upd$e ?v2) ?v0) ?v3)) ?v1) ?v4) (fun_app$bv (fun_app$bw (fun_upd$e (fun_app$bv (fun_app$bw (fun_upd$e ?v2) ?v1) ?v4)) ?v0) ?v3)))) :named a200))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream$) (?v4 B_stream$)) (=> (not (= ?v0 ?v1)) (= (fun_app$bx (fun_app$by (fun_upd$f (fun_app$bx (fun_app$by (fun_upd$f ?v2) ?v0) ?v3)) ?v1) ?v4) (fun_app$bx (fun_app$by (fun_upd$f (fun_app$bx (fun_app$by (fun_upd$f ?v2) ?v1) ?v4)) ?v0) ?v3)))) :named a201))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_bool_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream$)) (! (= (fun_app$k (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ ?v0) ?v1) ?v2) ?v3) ?v4) (fun_app$k (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ ?v0) ?v1) ?v2) ?v3) ?v4)) :pattern ((fun_app$k (fun_app$l (fun_app$ci (fun_app$cj (corec_stream$ ?v0) ?v1) ?v2) ?v3) ?v4)))) :named a202))
(assert (! (forall ((?v0 A_stream_b_fun$) (?v1 A_stream_bool_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream$)) (! (= (fun_app$h (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a ?v0) ?v1) ?v2) ?v3) ?v4) (fun_app$h (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a ?v0) ?v1) ?v2) ?v3) ?v4)) :pattern ((fun_app$h (fun_app$n (fun_app$ck (fun_app$cl (corec_stream$a ?v0) ?v1) ?v2) ?v3) ?v4)))) :named a203))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_bool_fun$) (?v2 A_stream_c_stream_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream$)) (! (= (fun_app$dc (fun_app$cn (fun_app$co (fun_app$cp (corec_stream$b ?v0) ?v1) ?v2) ?v3) ?v4) (fun_app$dc (fun_app$cn (fun_app$co (fun_app$cp (corec_stream$b ?v0) ?v1) ?v2) ?v3) ?v4)) :pattern ((fun_app$dc (fun_app$cn (fun_app$co (fun_app$cp (corec_stream$b ?v0) ?v1) ?v2) ?v3) ?v4)))) :named a204))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_bool_fun$) (?v2 A_stream_b_stream_stream_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream$)) (! (= (fun_app$dd (fun_app$cq (fun_app$cr (fun_app$cs (corec_stream$c ?v0) ?v1) ?v2) ?v3) ?v4) (fun_app$dd (fun_app$cq (fun_app$cr (fun_app$cs (corec_stream$c ?v0) ?v1) ?v2) ?v3) ?v4)) :pattern ((fun_app$dd (fun_app$cq (fun_app$cr (fun_app$cs (corec_stream$c ?v0) ?v1) ?v2) ?v3) ?v4)))) :named a205))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_stream$)) (= (fun_app$de (smap$a ?v0) (smap$j ?v1 ?v2)) (smap$k (fun_app$f (fun_app$g comp$ ?v0) ?v1) ?v2))) :named a206))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_b_fun$) (?v2 C_stream$)) (= (fun_app$j (smap$f ?v0) (fun_app$x (smap$ ?v1) ?v2)) (fun_app$x (smap$ (fun_app$ac (comp$j ?v0) ?v1)) ?v2))) :named a207))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_c_fun$) (?v2 C_stream$)) (= (fun_app$x (smap$ ?v0) (fun_app$bg (smap$d ?v1) ?v2)) (fun_app$x (smap$ (fun_app$ae (comp$l ?v0) ?v1)) ?v2))) :named a208))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_stream$)) (= (fun_app$x (smap$ ?v0) (smap$l ?v1 ?v2)) (smap$m (fun_app$t (fun_app$u comp$e ?v0) ?v1) ?v2))) :named a209))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream_stream$)) (= (fun_app$df (smap$n ?v0) (fun_app$de (smap$a ?v1) ?v2)) (fun_app$de (smap$a (fun_app$y (comp$f ?v0) ?v1)) ?v2))) :named a210))
(assert (! (forall ((?v0 C_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_stream$)) (= (smap$o ?v0 (smap$j ?v1 ?v2)) (smap$j (fun_app$z (comp$g ?v0) ?v1) ?v2))) :named a211))
(assert (! (forall ((?v0 B_stream_c_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_stream$)) (= (smap$p ?v0 (smap$k ?v1 ?v2)) (smap$j (fun_app$ah (comp$o ?v0) ?v1) ?v2))) :named a212))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_stream$)) (= (fun_app$df (smap$n ?v0) (smap$k ?v1 ?v2)) (smap$k (fun_app$i (comp$a ?v0) ?v1) ?v2))) :named a213))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_c_stream_fun$) (?v2 C_stream_stream$)) (= (fun_app$de (smap$a ?v0) (smap$o ?v1 ?v2)) (fun_app$de (smap$a (fun_app$aa (comp$h ?v0) ?v1)) ?v2))) :named a214))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_stream$)) (= (smap$j ?v0 (smap$q ?v1 ?v2)) (smap$j (fun_app$l (comp$b ?v0) ?v1) ?v2))) :named a215))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (= (fun_app$p (comp$d (fun_app$dg (map_fun$ ?v0) ?v1)) (fun_app$dh (map_fun$a ?v2) ?v3)) (fun_app$bn (map_fun$b (fun_app$f (fun_app$g comp$ ?v2) ?v0)) (fun_app$f (fun_app$g comp$ ?v1) ?v3)))) :named a216))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 C_b_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (= (fun_app$di (comp$be (fun_app$dj (map_fun$c ?v0) ?v1)) (fun_app$dk (map_fun$d ?v2) ?v3)) (fun_app$dl (map_fun$e (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a217))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_b_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_fun$)) (= (fun_app$dm (comp$bf (fun_app$dn (map_fun$f ?v0) ?v1)) (fun_app$do (map_fun$g ?v2) ?v3)) (fun_app$dp (map_fun$h (fun_app$f (fun_app$g comp$ ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a218))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_c_fun$)) (= (fun_app$dq (comp$bg (fun_app$dr (map_fun$i ?v0) ?v1)) (fun_app$ds (map_fun$j ?v2) ?v3)) (fun_app$dp (map_fun$h (fun_app$i (comp$a ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a219))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_fun$)) (= (fun_app$dt (comp$bh (fun_app$u (map_fun$k ?v0) ?v1)) (fun_app$du (map_fun$l ?v2) ?v3)) (fun_app$dv (map_fun$m (fun_app$l (comp$b ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a220))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_c_fun$)) (= (fun_app$dw (comp$bi (fun_app$u (map_fun$k ?v0) ?v1)) (fun_app$dx (map_fun$n ?v2) ?v3)) (fun_app$dp (map_fun$h (fun_app$n (comp$c ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a221))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_stream_fun$)) (= (fun_app$dy (comp$bj (fun_app$dz (map_fun$o ?v0) ?v1)) (fun_app$ea (map_fun$p ?v2) ?v3)) (fun_app$eb (map_fun$q (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$f (fun_app$g comp$ ?v1) ?v3)))) :named a222))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 B_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_b_stream_fun$)) (= (fun_app$ec (comp$bk (fun_app$ed (map_fun$r ?v0) ?v1)) (fun_app$ee (map_fun$s ?v2) ?v3)) (fun_app$eb (map_fun$q (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$i (comp$a ?v1) ?v3)))) :named a223))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_a_stream_fun$)) (= (fun_app$ef (comp$bl (fun_app$eg (map_fun$t ?v0) ?v1)) (map_fun$u ?v2 ?v3)) (fun_app$eh (map_fun$v (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$l (comp$b ?v1) ?v3)))) :named a224))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_a_stream_fun$)) (= (fun_app$ei (comp$bm (fun_app$ej (map_fun$w ?v0) ?v1)) (map_fun$u ?v2 ?v3)) (fun_app$eb (map_fun$q (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$n (comp$c ?v1) ?v3)))) :named a225))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (= (fun_app$ek (comp$bn (fun_app$cg (swap$e ?v0) ?v1)) (fun_app$cg (swap$e ?v0) ?v1)) id$)) :named a226))
(assert (! (forall ((?v0 A_stream$) (?v1 A_stream$)) (= (fun_app$el (comp$bo (fun_app$ch (swap$f ?v0) ?v1)) (fun_app$ch (swap$f ?v0) ?v1)) id$a)) :named a227))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_stream_fun$)) (= (comp$bp (map_prod$ ?v0 ?v1) (convol$i ?v2 ?v3)) (convol$g (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)))) :named a228))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_fun$)) (= (comp$bq (map_prod$a ?v0 ?v1) (convol$j ?v2 ?v3)) (convol$e (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a229))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$br (map_prod$b ?v0 ?v1) (convol$k ?v2 ?v3)) (convol$l (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a230))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$bs (map_prod$c ?v0 ?v1) (convol$m ?v2 ?v3)) (convol$l (fun_app$i (comp$a ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a231))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$bt (map_prod$d ?v0 ?v1) (convol$n ?v2 ?v3)) (convol$o (fun_app$l (comp$b ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a232))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$bu (map_prod$e ?v0 ?v1) (convol$n ?v2 ?v3)) (convol$l (fun_app$n (comp$c ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a233))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_stream_fun$)) (= (comp$bv (map_prod$f ?v0 ?v1) (convol$p ?v2 ?v3)) (convol$q (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)))) :named a234))
(assert (! (forall ((?v0 C_b_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_b_stream_fun$)) (= (comp$bw (map_prod$g ?v0 ?v1) (convol$r ?v2 ?v3)) (convol$q (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$i (comp$a ?v1) ?v3)))) :named a235))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$)) (= (comp$bx (map_prod$h ?v0 ?v1) (convol$s ?v2 ?v3)) (convol$t (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$l (comp$b ?v1) ?v3)))) :named a236))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$)) (= (comp$by (map_prod$i ?v0 ?v1) (convol$s ?v2 ?v3)) (convol$q (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$n (comp$c ?v1) ?v3)))) :named a237))
(assert (! (forall ((?v0 Nat$) (?v1 C_b_fun$) (?v2 C_stream$)) (= (fun_app$j (sdrop$ ?v0) (fun_app$x (smap$ ?v1) ?v2)) (fun_app$x (smap$ ?v1) (fun_app$bg (sdrop$a ?v0) ?v2)))) :named a238))
(assert (! (forall ((?v0 Nat$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream_stream$)) (= (sdrop$b ?v0 (fun_app$de (smap$a ?v1) ?v2)) (fun_app$de (smap$a ?v1) (sdrop$c ?v0 ?v2)))) :named a239))
(assert (! (forall ((?v0 Nat$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_stream$)) (= (sdrop$c ?v0 (smap$j ?v1 ?v2)) (smap$j ?v1 (sdrop$d ?v0 ?v2)))) :named a240))
(assert (! (forall ((?v0 Nat$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_stream$)) (= (sdrop$b ?v0 (smap$k ?v1 ?v2)) (smap$k ?v1 (sdrop$d ?v0 ?v2)))) :named a241))
(assert (! (forall ((?v0 B_stream$)) (! (= (fun_app$j id$b ?v0) ?v0) :pattern ((fun_app$j id$b ?v0)))) :named a242))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 B_stream_a_stream_fun$) (?v3 A_stream$)) (! (= (fun_app$h (fun_app$o (fun_app$bn (map_fun$b ?v0) ?v1) ?v2) ?v3) (fun_app$h ?v1 (fun_app$bk ?v2 (fun_app$h ?v0 ?v3)))) :pattern ((fun_app$h (fun_app$o (fun_app$bn (map_fun$b ?v0) ?v1) ?v2) ?v3)))) :named a243))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 C_stream_c_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream$)) (! (= (fun_app$k (fun_app$z (fun_app$em (map_fun$x ?v0) ?v1) ?v2) ?v3) (fun_app$bg ?v1 (fun_app$k ?v2 (fun_app$m ?v0 ?v3)))) :pattern ((fun_app$k (fun_app$z (fun_app$em (map_fun$x ?v0) ?v1) ?v2) ?v3)))) :named a244))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream$)) (! (= (fun_app$h (fun_app$i (fun_app$en (map_fun$y ?v0) ?v1) ?v2) ?v3) (fun_app$j ?v1 (fun_app$h ?v2 (fun_app$m ?v0 ?v3)))) :pattern ((fun_app$h (fun_app$i (fun_app$en (map_fun$y ?v0) ?v1) ?v2) ?v3)))) :named a245))
(assert (! (forall ((?v0 C_stream_b_stream_fun_c_stream_b_stream_fun_fun$) (?v1 A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$) (?v2 C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$) (?v3 C_stream_b_stream_fun$)) (! (= (fun_app$g (fun_app$eo (fun_app$ep (map_fun$z ?v0) ?v1) ?v2) ?v3) (fun_app$eq ?v1 (fun_app$g ?v2 (fun_app$y ?v0 ?v3)))) :pattern ((fun_app$g (fun_app$eo (fun_app$ep (map_fun$z ?v0) ?v1) ?v2) ?v3)))) :named a246))
(assert (! (forall ((?v0 A_stream_c_stream_fun_a_stream_c_stream_fun_fun$) (?v1 A_stream_b_stream_fun_a_stream_b_stream_fun_fun$) (?v2 A_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v3 A_stream_c_stream_fun$)) (! (= (fun_app$f (fun_app$eq (fun_app$er (map_fun$aa ?v0) ?v1) ?v2) ?v3) (fun_app$i ?v1 (fun_app$f ?v2 (fun_app$z ?v0 ?v3)))) :pattern ((fun_app$f (fun_app$eq (fun_app$er (map_fun$aa ?v0) ?v1) ?v2) ?v3)))) :named a247))
(assert (! (forall ((?v0 A_stream_b_stream_fun$)) (= (fun_app$i (comp$a id$b) ?v0) ?v0)) :named a248))
(assert (! (forall ((?v0 A_stream_b_stream_fun$)) (= (fun_app$i (comp$a id$b) ?v0) ?v0)) :named a249))
(assert (! (forall ((?v0 A_stream_c_stream_fun$)) (= (fun_app$l (comp$b ?v0) id$c) ?v0)) :named a250))
(assert (! (forall ((?v0 A_stream_b_stream_fun$)) (= (fun_app$n (comp$c ?v0) id$c) ?v0)) :named a251))
(assert (! (= (comp$a id$b) id$a) :named a252))
(assert (! (= (smap$f id$d) id$b) :named a253))
(assert (! (= (smap$n id$b) id$e) :named a254))
(assert (! (forall ((?v0 B_stream$)) (! (= (fun_app$j id$b ?v0) ?v0) :pattern ((fun_app$j id$b ?v0)))) :named a255))
(assert (! (= (map_prod$j id$b id$b) id$f) :named a256))
(assert (! (forall ((?v0 B_stream_b_stream_prod$)) (= (fun_app$es (map_prod$j id$b id$b) ?v0) ?v0)) :named a257))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$i (comp$a ?v0) ?v1) (fun_app$i (comp$a id$b) ?v2)) (= (fun_app$j ?v0 (fun_app$h ?v1 ?v3)) (fun_app$h ?v2 ?v3)))) :named a258))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$l (comp$b ?v0) ?v1) (fun_app$z (comp$g id$g) ?v2)) (= (fun_app$k ?v0 (fun_app$m ?v1 ?v3)) (fun_app$k ?v2 ?v3)))) :named a259))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$n (comp$c ?v0) ?v1) (fun_app$i (comp$a id$b) ?v2)) (= (fun_app$h ?v0 (fun_app$m ?v1 ?v3)) (fun_app$h ?v2 ?v3)))) :named a260))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$) (?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$) (?v2 B_stream_a_stream_fun_a_stream_b_stream_fun_fun$) (?v3 B_stream_a_stream_fun$)) (=> (= (fun_app$p (comp$d ?v0) ?v1) (fun_app$cb (comp$bz id$a) ?v2)) (= (fun_app$q ?v0 (fun_app$r ?v1 ?v3)) (fun_app$o ?v2 ?v3)))) :named a261))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_b_fun$) (?v3 A_stream$)) (=> (= (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$ab (comp$i id$d) ?v2)) (= (fun_app$v ?v0 (fun_app$w ?v1 ?v3)) (fun_app$s ?v2 ?v3)))) :named a262))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream$)) (=> (= (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$i (comp$a id$b) ?v2)) (= (fun_app$x ?v0 (fun_app$k ?v1 ?v3)) (fun_app$h ?v2 ?v3)))) :named a263))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 B_stream_b_stream_fun$) (?v2 B_stream$)) (= (comp$ca (map_prod$j ?v0 id$b) (convol$f id$b ?v1) ?v2) (fun_app$et (convol$f (fun_app$aj (comp$q id$b) ?v0) ?v1) ?v2))) :named a264))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream$)) (= (comp$cb (map_prod$k ?v0 id$b) (convol$u id$g ?v1) ?v2) (fun_app$eu (convol$h (fun_app$y (comp$f id$b) ?v0) ?v1) ?v2))) :named a265))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream$)) (= (comp$cc (map_prod$l ?v0 id$b) (convol$v id$c ?v1) ?v2) (fun_app$ev (convol$g (fun_app$i (comp$a id$b) ?v0) ?v1) ?v2))) :named a266))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream$)) (= (comp$cd (map_prod$m ?v0 id$g) (convol$w id$c ?v1) ?v2) (fun_app$ew (convol$i (fun_app$z (comp$g id$g) ?v0) ?v1) ?v2))) :named a267))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$ex (map_prod$ ?v0 ?v1) (fun_app$ey (map_prod$n ?v2 ?v3) ?v4)) (fun_app$ez (map_prod$o (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)) ?v4))) :named a268))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fa (map_prod$a ?v0 ?v1) (fun_app$fb (map_prod$p ?v2 ?v3) ?v4)) (fun_app$fc (map_prod$q (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a269))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fd (map_prod$b ?v0 ?v1) (fun_app$fe (map_prod$r ?v2 ?v3) ?v4)) (fun_app$ff (map_prod$s (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a270))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fg (map_prod$c ?v0 ?v1) (fun_app$fh (map_prod$t ?v2 ?v3) ?v4)) (fun_app$ff (map_prod$s (fun_app$i (comp$a ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a271))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fi (map_prod$d ?v0 ?v1) (fun_app$fj (map_prod$u ?v2 ?v3) ?v4)) (fun_app$fk (map_prod$v (fun_app$l (comp$b ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a272))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fl (map_prod$e ?v0 ?v1) (fun_app$fj (map_prod$u ?v2 ?v3) ?v4)) (fun_app$ff (map_prod$s (fun_app$n (comp$c ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a273))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fm (map_prod$f ?v0 ?v1) (fun_app$fn (map_prod$w ?v2 ?v3) ?v4)) (fun_app$fo (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)) ?v4))) :named a274))
(assert (! (forall ((?v0 C_b_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fp (map_prod$g ?v0 ?v1) (fun_app$fq (map_prod$y ?v2 ?v3) ?v4)) (fun_app$fo (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$i (comp$a ?v1) ?v3)) ?v4))) :named a275))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fr (map_prod$h ?v0 ?v1) (fun_app$fs (map_prod$z ?v2 ?v3) ?v4)) (fun_app$ft (map_prod$aa (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$l (comp$b ?v1) ?v3)) ?v4))) :named a276))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fu (map_prod$i ?v0 ?v1) (fun_app$fs (map_prod$z ?v2 ?v3) ?v4)) (fun_app$fo (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$n (comp$c ?v1) ?v3)) ?v4))) :named a277))
(assert (! (forall ((?v0 B_stream_stream$)) (= (fun_app$df (smap$n id$b) ?v0) ?v0)) :named a278))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_a_stream_fun$)) (! (= (fun_app$l (fun_app$ci (map_fun$ab ?v0) ?v1) ?v2) (fun_app$l (comp$b (fun_app$l (comp$b ?v1) ?v2)) ?v0)) :pattern ((fun_app$l (fun_app$ci (map_fun$ab ?v0) ?v1) ?v2)))) :named a279))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$)) (! (= (fun_app$f (fun_app$g (map_fun$ac ?v0) ?v1) ?v2) (fun_app$n (comp$c (fun_app$f (fun_app$g comp$ ?v1) ?v2)) ?v0)) :pattern ((fun_app$f (fun_app$g (map_fun$ac ?v0) ?v1) ?v2)))) :named a280))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_a_stream_fun$)) (! (= (fun_app$n (fun_app$ck (map_fun$ad ?v0) ?v1) ?v2) (fun_app$n (comp$c (fun_app$n (comp$c ?v1) ?v2)) ?v0)) :pattern ((fun_app$n (fun_app$ck (map_fun$ad ?v0) ?v1) ?v2)))) :named a281))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 B_stream_a_stream_fun$)) (! (= (fun_app$o (fun_app$bn (map_fun$b ?v0) ?v1) ?v2) (fun_app$i (comp$a (fun_app$am (comp$t ?v1) ?v2)) ?v0)) :pattern ((fun_app$o (fun_app$bn (map_fun$b ?v0) ?v1) ?v2)))) :named a282))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 C_stream_c_stream_fun$) (?v2 A_stream_c_stream_fun$)) (! (= (fun_app$z (fun_app$em (map_fun$x ?v0) ?v1) ?v2) (fun_app$l (comp$b (fun_app$z (comp$g ?v1) ?v2)) ?v0)) :pattern ((fun_app$z (fun_app$em (map_fun$x ?v0) ?v1) ?v2)))) :named a283))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_b_stream_fun$)) (! (= (fun_app$i (fun_app$en (map_fun$y ?v0) ?v1) ?v2) (fun_app$n (comp$c (fun_app$i (comp$a ?v1) ?v2)) ?v0)) :pattern ((fun_app$i (fun_app$en (map_fun$y ?v0) ?v1) ?v2)))) :named a284))
(assert (! (forall ((?v0 C_stream_b_stream_fun_c_stream_b_stream_fun_fun$) (?v1 A_stream_c_stream_fun_a_stream_b_stream_fun_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$) (?v2 C_stream_b_stream_fun_a_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$)) (! (= (fun_app$eo (fun_app$ep (map_fun$z ?v0) ?v1) ?v2) (fun_app$fv (comp$ce (fun_app$eo (comp$cf ?v1) ?v2)) ?v0)) :pattern ((fun_app$eo (fun_app$ep (map_fun$z ?v0) ?v1) ?v2)))) :named a285))
(assert (! (forall ((?v0 A_stream_c_stream_fun_a_stream_c_stream_fun_fun$) (?v1 A_stream_b_stream_fun_a_stream_b_stream_fun_fun$) (?v2 A_stream_c_stream_fun_a_stream_b_stream_fun_fun$)) (! (= (fun_app$eq (fun_app$er (map_fun$aa ?v0) ?v1) ?v2) (fun_app$fw (comp$cg (fun_app$eq (comp$ch ?v1) ?v2)) ?v0)) :pattern ((fun_app$eq (fun_app$er (map_fun$aa ?v0) ?v1) ?v2)))) :named a286))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 B_stream_a_stream_fun$)) (= (fun_app$q (fun_app$dg (map_fun$ ?v0) ?v1) (fun_app$r (fun_app$dh (map_fun$a ?v2) ?v3) ?v4)) (fun_app$o (fun_app$bn (map_fun$b (fun_app$f (fun_app$g comp$ ?v2) ?v0)) (fun_app$f (fun_app$g comp$ ?v1) ?v3)) ?v4))) :named a287))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 C_b_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$) (?v4 B_a_stream_fun$)) (= (fun_app$fx (fun_app$dj (map_fun$c ?v0) ?v1) (fun_app$fy (fun_app$dk (map_fun$d ?v2) ?v3) ?v4)) (fun_app$fz (fun_app$dl (map_fun$e (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a288))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_b_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_fun$) (?v4 B_stream_a_stream_fun$)) (= (fun_app$ga (fun_app$dn (map_fun$f ?v0) ?v1) (fun_app$gb (fun_app$do (map_fun$g ?v2) ?v3) ?v4)) (fun_app$gc (fun_app$dp (map_fun$h (fun_app$f (fun_app$g comp$ ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a289))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_c_fun$) (?v4 B_stream_a_stream_fun$)) (= (fun_app$gd (fun_app$dr (map_fun$i ?v0) ?v1) (fun_app$ge (fun_app$ds (map_fun$j ?v2) ?v3) ?v4)) (fun_app$gc (fun_app$dp (map_fun$h (fun_app$i (comp$a ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a290))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_fun$) (?v4 C_stream_a_stream_fun$)) (= (fun_app$t (fun_app$u (map_fun$k ?v0) ?v1) (fun_app$gf (fun_app$du (map_fun$l ?v2) ?v3) ?v4)) (fun_app$gg (fun_app$dv (map_fun$m (fun_app$l (comp$b ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a291))
(assert (! (forall ((?v0 A_stream_a_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_c_fun$) (?v4 B_stream_a_stream_fun$)) (= (fun_app$t (fun_app$u (map_fun$k ?v0) ?v1) (fun_app$gh (fun_app$dx (map_fun$n ?v2) ?v3) ?v4)) (fun_app$gc (fun_app$dp (map_fun$h (fun_app$n (comp$c ?v2) ?v0)) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a292))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 C_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_stream_fun$) (?v4 B_a_stream_fun$)) (= (fun_app$gi (fun_app$dz (map_fun$o ?v0) ?v1) (fun_app$gj (fun_app$ea (map_fun$p ?v2) ?v3) ?v4)) (fun_app$gk (fun_app$eb (map_fun$q (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$f (fun_app$g comp$ ?v1) ?v3)) ?v4))) :named a293))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 B_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_b_stream_fun$) (?v4 B_a_stream_fun$)) (= (fun_app$gl (fun_app$ed (map_fun$r ?v0) ?v1) (fun_app$gm (fun_app$ee (map_fun$s ?v2) ?v3) ?v4)) (fun_app$gk (fun_app$eb (map_fun$q (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$i (comp$a ?v1) ?v3)) ?v4))) :named a294))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_a_stream_fun$) (?v4 B_a_stream_fun$)) (= (fun_app$gn (fun_app$eg (map_fun$t ?v0) ?v1) (fun_app$go (map_fun$u ?v2 ?v3) ?v4)) (fun_app$gp (fun_app$eh (map_fun$v (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$l (comp$b ?v1) ?v3)) ?v4))) :named a295))
(assert (! (forall ((?v0 A_stream_c_fun$) (?v1 A_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_a_stream_fun$) (?v4 B_a_stream_fun$)) (= (fun_app$gq (fun_app$ej (map_fun$w ?v0) ?v1) (fun_app$go (map_fun$u ?v2 ?v3) ?v4)) (fun_app$gk (fun_app$eb (map_fun$q (fun_app$t (fun_app$u comp$e ?v2) ?v0)) (fun_app$n (comp$c ?v1) ?v3)) ?v4))) :named a296))
(assert (! (= (fun_app$gr (map_fun$ae id$b) id$b) id$h) :named a297))
(assert (! (= (fun_app$em (map_fun$x id$c) id$g) id$) :named a298))
(assert (! (= (fun_app$en (map_fun$y id$c) id$b) id$a) :named a299))
(assert (! (= (fun_app$ep (map_fun$z id$i) id$j) id$k) :named a300))
(assert (! (= (fun_app$er (map_fun$aa id$) id$a) id$j) :named a301))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_stream_fun$)) (= (comp$ci (map_prod$ ?v0 ?v1) (map_prod$n ?v2 ?v3)) (map_prod$o (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)))) :named a302))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_fun$)) (= (comp$cj (map_prod$a ?v0 ?v1) (map_prod$p ?v2 ?v3)) (map_prod$q (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a303))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$ck (map_prod$b ?v0 ?v1) (map_prod$r ?v2 ?v3)) (map_prod$s (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a304))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$cl (map_prod$c ?v0 ?v1) (map_prod$t ?v2 ?v3)) (map_prod$s (fun_app$i (comp$a ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a305))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$cm (map_prod$d ?v0 ?v1) (map_prod$u ?v2 ?v3)) (map_prod$v (fun_app$l (comp$b ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a306))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$)) (= (comp$cn (map_prod$e ?v0 ?v1) (map_prod$u ?v2 ?v3)) (map_prod$s (fun_app$n (comp$c ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)))) :named a307))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_stream_fun$)) (= (comp$co (map_prod$f ?v0 ?v1) (map_prod$w ?v2 ?v3)) (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)))) :named a308))
(assert (! (forall ((?v0 C_b_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_b_stream_fun$)) (= (comp$cp (map_prod$g ?v0 ?v1) (map_prod$y ?v2 ?v3)) (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$i (comp$a ?v1) ?v3)))) :named a309))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$)) (= (comp$cq (map_prod$h ?v0 ?v1) (map_prod$z ?v2 ?v3)) (map_prod$aa (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$l (comp$b ?v1) ?v3)))) :named a310))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$)) (= (comp$cr (map_prod$i ?v0 ?v1) (map_prod$z ?v2 ?v3)) (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$n (comp$c ?v1) ?v3)))) :named a311))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (= (map_prod$o (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (comp$ci (map_prod$ ?v0 ?v2) (map_prod$n ?v1 ?v3)))) :named a312))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (= (map_prod$q (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (comp$cj (map_prod$a ?v0 ?v2) (map_prod$p ?v1 ?v3)))) :named a313))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (= (map_prod$s (fun_app$f (fun_app$g comp$ ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (comp$ck (map_prod$b ?v0 ?v2) (map_prod$r ?v1 ?v3)))) :named a314))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 A_stream_b_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (= (map_prod$s (fun_app$i (comp$a ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (comp$cl (map_prod$c ?v0 ?v2) (map_prod$t ?v1 ?v3)))) :named a315))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (= (map_prod$v (fun_app$l (comp$b ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (comp$cm (map_prod$d ?v0 ?v2) (map_prod$u ?v1 ?v3)))) :named a316))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream_a_stream_fun$) (?v2 C_b_fun$) (?v3 A_stream_c_fun$)) (= (map_prod$s (fun_app$n (comp$c ?v0) ?v1) (fun_app$t (fun_app$u comp$e ?v2) ?v3)) (comp$cn (map_prod$e ?v0 ?v2) (map_prod$u ?v1 ?v3)))) :named a317))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 C_stream_b_stream_fun$) (?v3 A_stream_c_stream_fun$)) (= (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v3)) (comp$co (map_prod$f ?v0 ?v2) (map_prod$w ?v1 ?v3)))) :named a318))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 B_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$)) (= (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$i (comp$a ?v2) ?v3)) (comp$cp (map_prod$g ?v0 ?v2) (map_prod$y ?v1 ?v3)))) :named a319))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_a_stream_fun$)) (= (map_prod$aa (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$l (comp$b ?v2) ?v3)) (comp$cq (map_prod$h ?v0 ?v2) (map_prod$z ?v1 ?v3)))) :named a320))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_a_stream_fun$)) (= (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v1) (fun_app$n (comp$c ?v2) ?v3)) (comp$cr (map_prod$i ?v0 ?v2) (map_prod$z ?v1 ?v3)))) :named a321))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$ex (map_prod$ ?v0 ?v1) (fun_app$ey (map_prod$n ?v2 ?v3) ?v4)) (fun_app$ez (map_prod$o (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)) ?v4))) :named a322))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fa (map_prod$a ?v0 ?v1) (fun_app$fb (map_prod$p ?v2 ?v3) ?v4)) (fun_app$fc (map_prod$q (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a323))
(assert (! (forall ((?v0 C_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fd (map_prod$b ?v0 ?v1) (fun_app$fe (map_prod$r ?v2 ?v3) ?v4)) (fun_app$ff (map_prod$s (fun_app$f (fun_app$g comp$ ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a324))
(assert (! (forall ((?v0 B_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fg (map_prod$c ?v0 ?v1) (fun_app$fh (map_prod$t ?v2 ?v3) ?v4)) (fun_app$ff (map_prod$s (fun_app$i (comp$a ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a325))
(assert (! (forall ((?v0 A_stream_c_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fi (map_prod$d ?v0 ?v1) (fun_app$fj (map_prod$u ?v2 ?v3) ?v4)) (fun_app$fk (map_prod$v (fun_app$l (comp$b ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a326))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 C_b_fun$) (?v2 A_stream_a_stream_fun$) (?v3 A_stream_c_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fl (map_prod$e ?v0 ?v1) (fun_app$fj (map_prod$u ?v2 ?v3) ?v4)) (fun_app$ff (map_prod$s (fun_app$n (comp$c ?v0) ?v2) (fun_app$t (fun_app$u comp$e ?v1) ?v3)) ?v4))) :named a327))
(assert (! (forall ((?v0 C_b_fun$) (?v1 C_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_c_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fm (map_prod$f ?v0 ?v1) (fun_app$fn (map_prod$w ?v2 ?v3) ?v4)) (fun_app$fo (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$f (fun_app$g comp$ ?v1) ?v3)) ?v4))) :named a328))
(assert (! (forall ((?v0 C_b_fun$) (?v1 B_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_b_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fp (map_prod$g ?v0 ?v1) (fun_app$fq (map_prod$y ?v2 ?v3) ?v4)) (fun_app$fo (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$i (comp$a ?v1) ?v3)) ?v4))) :named a329))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_c_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fr (map_prod$h ?v0 ?v1) (fun_app$fs (map_prod$z ?v2 ?v3) ?v4)) (fun_app$ft (map_prod$aa (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$l (comp$b ?v1) ?v3)) ?v4))) :named a330))
(assert (! (forall ((?v0 C_b_fun$) (?v1 A_stream_b_stream_fun$) (?v2 A_stream_c_fun$) (?v3 A_stream_a_stream_fun$) (?v4 A_stream_a_stream_prod$)) (= (fun_app$fu (map_prod$i ?v0 ?v1) (fun_app$fs (map_prod$z ?v2 ?v3) ?v4)) (fun_app$fo (map_prod$x (fun_app$t (fun_app$u comp$e ?v0) ?v2) (fun_app$n (comp$c ?v1) ?v3)) ?v4))) :named a331))
(assert (! (forall ((?v0 B_stream_nat_fun$) (?v1 B_stream_nat_fun$) (?v2 C_stream_b_stream_fun$) (?v3 C_stream_b_stream_fun$)) (= (comp$cs (size_prod$ ?v0 ?v1) (map_prod$ ?v2 ?v3)) (size_prod$a (fun_app$gs (comp$ct ?v0) ?v2) (fun_app$gs (comp$ct ?v1) ?v3)))) :named a332))
(assert (! (forall ((?v0 C_stream_nat_fun$) (?v1 C_stream_nat_fun$) (?v2 A_stream_c_stream_fun$) (?v3 A_stream_c_stream_fun$)) (= (comp$cu (size_prod$a ?v0 ?v1) (map_prod$n ?v2 ?v3)) (size_prod$b (comp$cv ?v0 ?v2) (comp$cv ?v1 ?v3)))) :named a333))
(assert (! (forall ((?v0 B_stream_nat_fun$) (?v1 B_stream_nat_fun$) (?v2 A_stream_b_stream_fun$) (?v3 A_stream_b_stream_fun$)) (= (comp$cw (size_prod$ ?v0 ?v1) (map_prod$o ?v2 ?v3)) (size_prod$b (comp$cx ?v0 ?v2) (comp$cx ?v1 ?v3)))) :named a334))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_b_stream_fun$) (?v5 B_stream_b_stream_fun$) (?v6 B_stream_b_stream_bool_fun_fun$) (?v7 B_stream_b_stream_fun$) (?v8 B_stream_b_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$a ?v3 ?v4 ?v5) (quotient3$a ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a335))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_b_stream_fun$) (?v5 B_stream_b_stream_fun$) (?v6 B_stream_b_stream_bool_fun_fun$) (?v7 B_stream_a_stream_fun$) (?v8 A_stream_b_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$a ?v3 ?v4 ?v5) (quotient3$ ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a336))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_b_stream_fun$) (?v5 B_stream_b_stream_fun$) (?v6 A_stream_a_stream_bool_fun_fun$) (?v7 A_stream_c_stream_fun$) (?v8 C_stream_a_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$a ?v3 ?v4 ?v5) (quotient3$b ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a337))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_b_stream_fun$) (?v5 B_stream_b_stream_fun$) (?v6 A_stream_a_stream_bool_fun_fun$) (?v7 A_stream_b_stream_fun$) (?v8 B_stream_a_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$a ?v3 ?v4 ?v5) (quotient3$c ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a338))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_b_stream_fun$) (?v5 B_stream_b_stream_fun$) (?v6 A_stream_a_stream_bool_fun_fun$) (?v7 A_stream_a_stream_fun$) (?v8 A_stream_a_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$a ?v3 ?v4 ?v5) (quotient3$d ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a339))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_a_stream_fun$) (?v5 A_stream_b_stream_fun$) (?v6 B_stream_b_stream_bool_fun_fun$) (?v7 B_stream_b_stream_fun$) (?v8 B_stream_b_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$ ?v3 ?v4 ?v5) (quotient3$a ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a340))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_a_stream_fun$) (?v5 A_stream_b_stream_fun$) (?v6 B_stream_b_stream_bool_fun_fun$) (?v7 B_stream_a_stream_fun$) (?v8 A_stream_b_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$ ?v3 ?v4 ?v5) (quotient3$ ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a341))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_a_stream_fun$) (?v5 A_stream_b_stream_fun$) (?v6 A_stream_a_stream_bool_fun_fun$) (?v7 A_stream_c_stream_fun$) (?v8 C_stream_a_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$ ?v3 ?v4 ?v5) (quotient3$b ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a342))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_a_stream_fun$) (?v5 A_stream_b_stream_fun$) (?v6 A_stream_a_stream_bool_fun_fun$) (?v7 A_stream_b_stream_fun$) (?v8 B_stream_a_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$ ?v3 ?v4 ?v5) (quotient3$c ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a343))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_a_stream_fun$) (?v2 A_stream_b_stream_fun$) (?v3 B_stream_b_stream_bool_fun_fun$) (?v4 B_stream_a_stream_fun$) (?v5 A_stream_b_stream_fun$) (?v6 A_stream_a_stream_bool_fun_fun$) (?v7 A_stream_a_stream_fun$) (?v8 A_stream_a_stream_fun$)) (=> (and (quotient3$ ?v0 ?v1 ?v2) (and (quotient3$ ?v3 ?v4 ?v5) (quotient3$d ?v6 ?v7 ?v8))) (= (fun_app$gt (fun_app$gu (map_fun$af id$l) (fun_app$gv (map_fun$ag (fun_app$gw (map_fun$ah ?v1) id$m)) (fun_app$gx (map_fun$ai ?v2) id$d))) comp$af) comp$e))) :named a344))
(assert (! (forall ((?v0 A_stream_b_stream_fun$) (?v1 A_stream$)) (= (smap$k ?v0 (siterate$ id$c ?v1)) (siterate$a id$b (fun_app$h ?v0 ?v1)))) :named a345))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$) (?v1 A_stream_a_stream_fun$) (?v2 A_stream_a_stream_fun$) (?v3 C_stream_c_stream_bool_fun_fun$) (?v4 C_stream_c_stream_fun$) (?v5 C_stream_c_stream_fun$) (?v6 B_stream_b_stream_bool_fun_fun$) (?v7 B_stream_b_stream_fun$) (?v8 B_stream_b_stream_fun$)) (=> (and (quotient3$d ?v0 ?v1 ?v2) (and (quotient3$e ?v3 ?v4 ?v5) (quotient3$a ?v6 ?v7 ?v8))) (= (fun_app$eo (fun_app$ep (map_fun$z (fun_app$gy (map_fun$aj ?v4) ?v8)) (fun_app$er (map_fun$aa (fun_app$em (map_fun$x ?v1) ?v5)) (fun_app$en (map_fun$y ?v2) ?v7))) comp$) comp$))) :named a346))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 C_stream_c_stream_bool_fun_fun$) (?v4 C_stream_a_stream_fun$) (?v5 A_stream_c_stream_fun$) (?v6 B_stream_b_stream_bool_fun_fun$)) (=> (and (quotient3$f ?v0 ?v1 ?v2) (and (quotient3$g ?v3 ?v4 ?v5) (and (forall ((?v7 B_stream$) (?v8 B_stream$)) (=> (and (fun_app$b (fun_app$c ?v6 ?v7) ?v8) (and (fun_app$b (fun_app$c ?v0 ?v7) ?v7) (fun_app$b (fun_app$c ?v0 ?v8) ?v8))) (fun_app$ (fun_app$a ?v3 (fun_app$bj ?v1 ?v7)) (fun_app$bj ?v1 ?v8)))) (forall ((?v7 C_stream$) (?v8 C_stream$)) (=> (fun_app$ (fun_app$a ?v3 ?v7) ?v8) (fun_app$b (fun_app$c ?v6 (fun_app$x ?v2 ?v7)) (fun_app$x ?v2 ?v8))))))) (quotient3$ (relcompp$ ?v0 (relcompp$ ?v6 ?v0)) (fun_app$gz (comp$cy ?v4) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v5)))) :named a347))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_stream_a_stream_fun$) (?v3 C_stream_c_stream_bool_fun_fun$) (?v4 C_stream_b_stream_fun$) (?v5 B_stream_c_stream_fun$) (?v6 A_stream_a_stream_bool_fun_fun$)) (=> (and (quotient3$b ?v0 ?v1 ?v2) (and (quotient3$h ?v3 ?v4 ?v5) (and (forall ((?v7 A_stream$) (?v8 A_stream$)) (=> (and (fun_app$d (fun_app$e ?v6 ?v7) ?v8) (and (fun_app$d (fun_app$e ?v0 ?v7) ?v7) (fun_app$d (fun_app$e ?v0 ?v8) ?v8))) (fun_app$ (fun_app$a ?v3 (fun_app$k ?v1 ?v7)) (fun_app$k ?v1 ?v8)))) (forall ((?v7 C_stream$) (?v8 C_stream$)) (=> (fun_app$ (fun_app$a ?v3 ?v7) ?v8) (fun_app$d (fun_app$e ?v6 (fun_app$bi ?v2 ?v7)) (fun_app$bi ?v2 ?v8))))))) (quotient3$c (fun_app$ha (relcompp$a ?v0) (fun_app$ha (relcompp$a ?v6) ?v0)) (fun_app$f (fun_app$g comp$ ?v4) ?v1) (fun_app$gz (comp$cy ?v2) ?v5)))) :named a348))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$) (?v1 B_stream_c_stream_fun$) (?v2 C_stream_b_stream_fun$) (?v3 C_stream_a_stream_fun$) (?v4 A_stream_c_stream_fun$)) (=> (and (quotient3$f ?v0 ?v1 ?v2) (quotient3$g uu$ ?v3 ?v4)) (quotient3$ (relcompp$ ?v0 (relcompp$ uua$ ?v0)) (fun_app$gz (comp$cy ?v3) ?v1) (fun_app$f (fun_app$g comp$ ?v2) ?v4)))) :named a349))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$) (?v1 A_stream_c_stream_fun$) (?v2 C_stream_a_stream_fun$) (?v3 C_stream_b_stream_fun$) (?v4 B_stream_c_stream_fun$)) (=> (and (quotient3$b ?v0 ?v1 ?v2) (quotient3$h uu$ ?v3 ?v4)) (quotient3$c (fun_app$ha (relcompp$a ?v0) (fun_app$ha (relcompp$a uub$) ?v0)) (fun_app$f (fun_app$g comp$ ?v3) ?v1) (fun_app$gz (comp$cy ?v2) ?v4)))) :named a350))
(check-sat)
;(get-unsat-core)
