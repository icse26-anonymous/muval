; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 431
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort B$ 0)
(declare-sort C$ 0)
(declare-sort Nat$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort B_b_fun$ 0)
(declare-sort C_c_fun$ 0)
(declare-sort A_nat_fun$ 0)
(declare-sort B_nat_fun$ 0)
(declare-sort C_nat_fun$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort B_bool_fun$ 0)
(declare-sort C_bool_fun$ 0)
(declare-sort A_b_c_sp_mu$ 0)
(declare-sort Nat_nat_fun$ 0)
(declare-sort Nat_bool_fun$ 0)
(declare-sort A_nat_c_sp_mu$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_bool_fun_fun$ 0)
(declare-sort A_a_fun_bool_fun$ 0)
(declare-sort B_b_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun$ 0)
(declare-sort B_c_prod_bool_fun$ 0)
(declare-sort C_a_b_c_sp_mu_fun$ 0)
(declare-sort A_b_c_sp_mu_nat_fun$ 0)
(declare-sort B_b_fun_b_b_fun_fun$ 0)
(declare-sort C_c_fun_c_c_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_bool_fun$ 0)
(declare-sort Nat_nat_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_nat_fun_fun$ 0)
(declare-sort C_c_fun_c_nat_fun_fun$ 0)
(declare-sort Bool_bool_bool_fun_fun$ 0)
(declare-sort A_a_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun$ 0)
(declare-sort A_a_fun_a_a_fun_bool_fun_fun$ 0)
(declare-sort B_b_fun_b_b_fun_bool_fun_fun$ 0)
(declare-sort C_c_fun_c_c_fun_bool_fun_fun$ 0)
(declare-sort A_a_fun_a_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort B_c_prod_a_stream_prod_bool_fun$ 0)
(declare-sort A_a_a_b_c_sp_mu_fun_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_bool_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$ 0)
(declare-sort B_bool_fun_b_bool_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ 0)
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun$ 0)
(declare-sort C_bool_fun_a_b_c_sp_mu_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$ 0)
(declare-sort A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort C_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ 0)
(declare-sort B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort B_b_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_bool_fun_a_b_c_sp_mu_bool_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort A_a_a_b_c_sp_mu_fun_fun_a_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ 0)
(declare-sort A_b_c_sp_mu_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_bool_fun_a_a_b_c_sp_mu_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_a_fun_a_a_b_c_sp_mu_fun_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort B_b_bool_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_a_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort C_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ 0)
(declare-sort A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-sort B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$ 0)
(declare-datatypes () ((A_b_c_sp_mu_a_b_c_sp_mu_prod$ (pair$ (fst$ A_b_c_sp_mu$) (snd$ A_b_c_sp_mu$)))
  (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod$ (pair$a (select$ A_b_c_sp_mu$) (selecta$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)))
  (B_c_prod$ (pair$b (fst$a B$) (snd$a C$)))))
(declare-codatatypes () ((A_stream$ (sCons$ (shd$ A$) (stl$ A_stream$)))))
(declare-datatypes () ((B_c_prod_a_stream_prod$ (pair$c (fst$b B_c_prod$) (snd$b A_stream$)))
  (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod$ (pair$d (fst$c A_b_c_sp_mu$) (snd$c A_b_c_sp_mu_a_b_c_sp_mu_prod$)))))
(declare-fun p$ (A_b_c_sp_mu$) Bool)
(declare-fun uu$ () A_a_bool_fun_fun$)
(declare-fun xa$ () A_b_c_sp_mu$)
(declare-fun get$ () A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$)
(declare-fun put$ () B_c_a_b_c_sp_mu_fun_fun$)
(declare-fun sub$ () A_b_c_sp_mu_a_b_c_sp_mu_prod_set$)
(declare-fun suc$ (Nat$) Nat$)
(declare-fun uua$ () B_b_bool_fun_fun$)
(declare-fun uub$ () C_c_bool_fun_fun$)
(declare-fun uuc$ () A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)
(declare-fun uud$ () Bool_bool_bool_fun_fun$)
(declare-fun uue$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$) A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$)
(declare-fun uuf$ () A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun uug$ () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun uuh$ () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun uui$ () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun uuj$ () A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)
(declare-fun uuk$ () A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun uul$ () A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun uum$ () A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun uun$ () A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$)
(declare-fun uuo$ () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun uup$ () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)
(declare-fun uuq$ () A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$)
(declare-fun uur$ () A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun uus$ () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun uut$ () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)
(declare-fun comp$ () A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun plus$ (Nat$) Nat_nat_fun$)
(declare-fun size$ (A_b_c_sp_mu$) Nat$)
(declare-fun zero$ () Nat$)
(declare-fun comp$a (B_nat_fun$) B_b_fun_b_nat_fun_fun$)
(declare-fun comp$b (C_c_fun$) C_c_fun_c_c_fun_fun$)
(declare-fun comp$c (B_b_fun$) B_b_fun_b_b_fun_fun$)
(declare-fun comp$d () A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun comp$e () A_a_b_c_sp_mu_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun comp$f (A_b_c_sp_mu_nat_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun$) A_b_c_sp_mu_nat_fun$)
(declare-fun comp$g (C_nat_fun$) C_c_fun_c_nat_fun_fun$)
(declare-fun comp$h (A_b_c_sp_mu_a_b_c_sp_mu_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$)
(declare-fun comp$i () A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun comp$j () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$)
(declare-fun comp$k () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun comp$l () A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$)
(declare-fun comp$m () A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun comp$n () A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun comp$o () A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun comp$p () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun comp$q () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun comp$r () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun comp$s () A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$)
(declare-fun member$ (A_b_c_sp_mu_a_b_c_sp_mu_prod$ A_b_c_sp_mu_a_b_c_sp_mu_prod_set$) Bool)
(declare-fun run_mu$ (A_b_c_sp_mu$ A_stream$) B_c_prod_a_stream_prod$)
(declare-fun collect$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_set$)
(declare-fun fun_app$ (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ A_b_c_sp_mu$) A_b_c_sp_mu_a_b_c_sp_mu_prod$)
(declare-fun rel_fun$ (A_a_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_fun$)
(declare-fun fun_app$a (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ A_b_c_sp_mu$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$b (A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod$) Bool)
(declare-fun fun_app$c (A_b_c_sp_mu_bool_fun$ A_b_c_sp_mu$) Bool)
(declare-fun fun_app$d (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu$) A_b_c_sp_mu_bool_fun$)
(declare-fun fun_app$e (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod$) A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$)
(declare-fun fun_app$f (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$g (Bool_bool_bool_fun_fun$ Bool) Bool_bool_fun$)
(declare-fun fun_app$h (A_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun$) Bool)
(declare-fun fun_app$i (A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun$)
(declare-fun fun_app$j (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) Bool)
(declare-fun fun_app$k (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$)
(declare-fun fun_app$l (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) Bool)
(declare-fun fun_app$m (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$)
(declare-fun fun_app$n (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) Bool)
(declare-fun fun_app$o (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$)
(declare-fun fun_app$p (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) Bool)
(declare-fun fun_app$q (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$)
(declare-fun fun_app$r (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) Bool)
(declare-fun fun_app$s (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun$)
(declare-fun fun_app$t (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) Bool)
(declare-fun fun_app$u (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$)
(declare-fun fun_app$v (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) Bool)
(declare-fun fun_app$w (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun$)
(declare-fun fun_app$x (A_a_b_c_sp_mu_fun_bool_fun$ A_a_b_c_sp_mu_fun$) Bool)
(declare-fun fun_app$y (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun$) A_a_b_c_sp_mu_fun_bool_fun$)
(declare-fun fun_app$z (C_bool_fun$ C$) Bool)
(declare-fun pred_fun$ (A_b_c_sp_mu_bool_fun$ A_a_b_c_sp_mu_fun$) Bool)
(declare-fun rel_fun$a (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$b (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$c (B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$d (B_b_bool_fun_fun$ C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$e (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$f (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$g (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$h (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$i (B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$j (B_b_bool_fun_fun$ C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$k (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$l (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$m (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$n (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$o (B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$p (B_b_bool_fun_fun$ C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$q (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_bool_fun_fun$) C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$r (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$s (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$t (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$u (B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$v (B_b_bool_fun_fun$ C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$w (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$x (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$y (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$z (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_prod$ (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun_fun$)
(declare-fun triangle$ (Nat$) Nat$)
(declare-fun fun_app$aa (C_c_bool_fun_fun$ C$) C_bool_fun$)
(declare-fun fun_app$ab (B_bool_fun$ B$) Bool)
(declare-fun fun_app$ac (B_b_bool_fun_fun$ B$) B_bool_fun$)
(declare-fun fun_app$ad (A_bool_fun$ A$) Bool)
(declare-fun fun_app$ae (A_a_bool_fun_fun$ A$) A_bool_fun$)
(declare-fun fun_app$af (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod$)
(declare-fun fun_app$ag (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ A_b_c_sp_mu$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$ah (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$ai (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_b_c_sp_mu$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)
(declare-fun fun_app$aj (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) A_b_c_sp_mu$)
(declare-fun fun_app$ak (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ A_a_b_c_sp_mu_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$)
(declare-fun fun_app$al (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$ A_a_b_c_sp_mu_fun$) A_b_c_sp_mu$)
(declare-fun fun_app$am (A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ A$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$)
(declare-fun fun_app$an (A_a_b_c_sp_mu_fun$ A$) A_b_c_sp_mu$)
(declare-fun fun_app$ao (A_b_c_sp_mu_a_b_c_sp_mu_fun$ A_b_c_sp_mu$) A_b_c_sp_mu$)
(declare-fun fun_app$ap (B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$ B_c_a_b_c_sp_mu_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun$)
(declare-fun fun_app$aq (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$)
(declare-fun fun_app$ar (B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$as (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)
(declare-fun fun_app$at (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ A_a_b_c_sp_mu_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod$)
(declare-fun fun_app$au (B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)
(declare-fun fun_app$av (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun fun_app$aw (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ A_a_b_c_sp_mu_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$ax (C_bool_fun_a_b_c_sp_mu_bool_fun_fun$ C_bool_fun$) A_b_c_sp_mu_bool_fun$)
(declare-fun fun_app$ay (C_a_b_c_sp_mu_fun$ C$) A_b_c_sp_mu$)
(declare-fun fun_app$az (B_c_a_b_c_sp_mu_fun_fun$ B$) C_a_b_c_sp_mu_fun$)
(declare-fun fun_app$ba (C_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun$ C_c_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)
(declare-fun fun_app$bb (B_b_bool_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_fun$ B_b_bool_fun_fun$) C_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun$)
(declare-fun fun_app$bc (C_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$ C_c_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun$)
(declare-fun fun_app$bd (B_b_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ B_b_fun$) C_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$)
(declare-fun fun_app$be (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun$ A_a_b_c_sp_mu_fun$) A_a_b_c_sp_mu_fun$)
(declare-fun fun_app$bf (A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun$) A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun$)
(declare-fun fun_app$bg (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun fun_app$bh (B_b_fun_b_nat_fun_fun$ B_b_fun$) B_nat_fun$)
(declare-fun fun_app$bi (C_c_fun_c_c_fun_fun$ C_c_fun$) C_c_fun$)
(declare-fun fun_app$bj (B_b_fun_b_b_fun_fun$ B_b_fun$) B_b_fun$)
(declare-fun fun_app$bk (B_b_fun$ B$) B$)
(declare-fun fun_app$bl (C_c_fun$ C$) C$)
(declare-fun fun_app$bm (C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ C$) A_b_c_sp_mu_a_b_c_sp_mu_prod$)
(declare-fun fun_app$bn (B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ B$) C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$bo (C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ C$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$bp (B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ B$) C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)
(declare-fun fun_app$bq (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun fun_app$br (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun fun_app$bs (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun fun_app$bt (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun fun_app$bu (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun fun_app$bv (B_nat_fun$ B$) Nat$)
(declare-fun fun_app$bw (A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ A_a_b_c_sp_mu_fun_a_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$)
(declare-fun fun_app$bx (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun$) A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$)
(declare-fun fun_app$by (A_a_b_c_sp_mu_fun_a_fun$ A_a_b_c_sp_mu_fun$) A$)
(declare-fun fun_app$bz (A_a_fun_a_a_b_c_sp_mu_fun_fun$ A_a_fun$) A_a_b_c_sp_mu_fun$)
(declare-fun fun_app$ca (A_a_b_c_sp_mu_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun$) A_a_fun_a_a_b_c_sp_mu_fun_fun$)
(declare-fun fun_app$cb (A_a_fun$ A$) A$)
(declare-fun fun_app$cc (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod$) Bool)
(declare-fun fun_app$cd (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun$)
(declare-fun fun_app$ce (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$ A$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod$)
(declare-fun fun_app$cf (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_bool_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$) Bool)
(declare-fun fun_app$cg (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_bool_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_bool_fun$)
(declare-fun fun_app$ch (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ A$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)
(declare-fun fun_app$ci (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) Bool)
(declare-fun fun_app$cj (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun$)
(declare-fun fun_app$ck (A_a_a_b_c_sp_mu_fun_fun$ A$) A_a_b_c_sp_mu_fun$)
(declare-fun fun_app$cl (A_a_a_b_c_sp_mu_fun_fun_bool_fun$ A_a_a_b_c_sp_mu_fun_fun$) Bool)
(declare-fun fun_app$cm (A_a_a_b_c_sp_mu_fun_fun_a_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_a_b_c_sp_mu_fun_fun$) A_a_a_b_c_sp_mu_fun_fun_bool_fun$)
(declare-fun fun_app$cn (A_a_fun_bool_fun$ A_a_fun$) Bool)
(declare-fun fun_app$co (A_a_fun_a_a_fun_bool_fun_fun$ A_a_fun$) A_a_fun_bool_fun$)
(declare-fun fun_app$cp (A_b_c_sp_mu_nat_fun$ A_b_c_sp_mu$) Nat$)
(declare-fun fun_app$cq (C_c_fun_c_nat_fun_fun$ C_c_fun$) C_nat_fun$)
(declare-fun fun_app$cr (B_c_a_b_c_sp_mu_fun_fun_bool_fun$ B_c_a_b_c_sp_mu_fun_fun$) Bool)
(declare-fun fun_app$cs (B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_fun_fun$) B_c_a_b_c_sp_mu_fun_fun_bool_fun$)
(declare-fun fun_app$ct (B_c_prod_a_stream_prod_bool_fun$ B_c_prod_a_stream_prod$) Bool)
(declare-fun fun_app$cu (B_c_prod_bool_fun$ B_c_prod$) Bool)
(declare-fun fun_app$cv (A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun$)
(declare-fun fun_app$cw (Nat_bool_fun$ Nat$) Bool)
(declare-fun fun_app$cx (Nat_nat_bool_fun_fun$ Nat$) Nat_bool_fun$)
(declare-fun fun_app$cy (A_b_c_sp_mu_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ A_b_c_sp_mu_bool_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$)
(declare-fun fun_app$cz (Nat_nat_fun$ Nat$) Nat$)
(declare-fun fun_app$da (C_nat_fun$ C$) Nat$)
(declare-fun fun_app$db (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)
(declare-fun fun_app$dc (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun$)
(declare-fun map_sp_mu$ () B_b_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun pred_prod$ (A_b_c_sp_mu_bool_fun$) A_b_c_sp_mu_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)
(declare-fun rec_sp_mu$ () A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$)
(declare-fun rel_fun$aa (B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ab (B_b_bool_fun_fun$ C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ac (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_bool_fun_fun$) C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$ad (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$ae (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$af (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$ag (B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ah (B_b_bool_fun_fun$ C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ai (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$aj (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$ak (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$al (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$am (B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$an (B_b_bool_fun_fun$ C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ao (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) C_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ap (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$aq (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$ar (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$as (B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$at (B_b_bool_fun_fun$ C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$au (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) C_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$av (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$aw (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$ax (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_fun$)
(declare-fun rel_fun$ay (B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$az (B_b_bool_fun_fun$ C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$) B_c_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ba (C_c_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) C_a_b_c_sp_mu_fun_c_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$bb (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$bc (B_b_fun_b_b_fun_bool_fun_fun$ C_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ B_b_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ B_b_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$bd (B_b_bool_fun_fun$ B_b_bool_fun_fun$) B_b_fun_b_b_fun_bool_fun_fun$)
(declare-fun rel_fun$be (C_c_fun_c_c_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$) C_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_c_c_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bf (C_c_bool_fun_fun$ C_c_bool_fun_fun$) C_c_fun_c_c_fun_bool_fun_fun$)
(declare-fun rel_fun$bg (A_a_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$bh (A_a_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bi (A_a_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$) Bool)
(declare-fun rel_fun$bj (A_a_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) A_a_a_b_c_sp_mu_fun_fun_a_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bk (A_a_bool_fun_fun$ A_a_bool_fun_fun$) A_a_fun_a_a_fun_bool_fun_fun$)
(declare-fun rel_fun$bl (B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_bool_fun_fun$ B_b_bool_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_fun$ B_b_bool_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$bm (B_b_bool_fun_fun$ B_bool_fun_b_bool_fun_bool_fun_fun$) B_b_bool_fun_fun_b_b_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bn (B_b_bool_fun_fun$ Bool_bool_bool_fun_fun$) B_bool_fun_b_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$bo (C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_bool_fun_fun$) C_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bp (C_c_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$) C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bq (C_c_bool_fun_fun$ Bool_bool_bool_fun_fun$) C_bool_fun_c_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$br (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_bool_fun_a_b_c_sp_mu_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bs (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_bool_fun_a_b_c_sp_mu_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$bt (A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$bu (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bv (A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$bw (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bx (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$by (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$bz (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$ca (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cb (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$cc (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cd (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$ce (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cf (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_fun_a_a_b_c_sp_mu_fun_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$cg (A_a_fun_a_a_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) A_a_fun_a_a_b_c_sp_mu_fun_fun_a_a_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ch (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$ci (A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cj (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_fun_a_a_b_c_sp_mu_fun_a_fun_bool_fun_fun$)
(declare-fun rel_fun$ck (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_a_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$cl (A_a_a_b_c_sp_mu_fun_fun_a_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) A_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_a_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cm (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$cn (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$co (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$cp (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cq (A_a_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$cr (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$cs (A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ct (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$cu (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cv (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$cw (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$cx (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$) Bool)
(declare-fun rel_fun$cy (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$cz (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$da (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) Bool)
(declare-fun rel_fun$db (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$dc (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dd (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$de (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$df (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dg (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dh (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$di (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dj (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dk (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dl (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dm (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dn (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_bool_fun_a_a_b_c_sp_mu_fun_bool_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_a_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$do (A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_a_b_c_sp_mu_fun_bool_fun_a_a_b_c_sp_mu_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dp (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dq (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dr (A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ds (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dt (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$du (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dv (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dw (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$dx (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$dy (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$dz (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ Bool_bool_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_bool_fun_fun$)
(declare-fun rel_fun$ea (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$eb (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ec (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ed (A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ee (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun_fun$) Bool)
(declare-fun rel_fun$ef (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$eg (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$eh (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$)
(declare-fun rel_fun$ei (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) Bool)
(declare-fun rel_fun$ej (A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$ek (A_a_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_bool_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_bool_fun_fun$)
(declare-fun rel_fun$el (A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_bool_fun_fun$ B_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_bool_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$) Bool)
(declare-fun rel_fun$em (A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_bool_fun_fun$)
(declare-fun rel_fun$en (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_fun$) Bool)
(declare-fun rel_fun$eo (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_bool_fun_fun$)
(declare-fun rel_prod$a (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_bool_fun_fun$)
(declare-fun rel_prod$b () A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun_fun_fun$)
(declare-fun rel_sp_mu$ () B_b_bool_fun_fun_c_c_bool_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun_fun_fun$)
(declare-fun case_sp_mu$ () A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun map_sp_mu$a (B_nat_fun$ C_c_fun$ A_b_c_sp_mu$) A_nat_c_sp_mu$)
(declare-fun pred_sp_mu$ (B_bool_fun$) C_bool_fun_a_b_c_sp_mu_bool_fun_fun$)
(declare-fun rec_sp_mu$a () A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun rec_sp_mu$b () A_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_fun_b_c_a_b_c_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_fun_fun_fun$)
(declare-fun size_sp_mu$ (A_nat_fun$ B_nat_fun$ C_nat_fun$) A_b_c_sp_mu_nat_fun$)
(declare-fun case_sp_mu$a () A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$)
(declare-fun case_sp_mu$b () A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_b_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun_fun$)
(assert (! (forall ((?v0 A_b_c_sp_mu$) (?v1 A_b_c_sp_mu$)) (! (= (fun_app$ (fun_app$a uut$ ?v0) ?v1) (pair$ ?v0 ?v1)) :pattern ((fun_app$ (fun_app$a uut$ ?v0) ?v1)))) :named a0))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (! (= (fun_app$b (uue$ ?v0) ?v1) (member$ ?v1 ?v0)) :pattern ((fun_app$b (uue$ ?v0) ?v1)))) :named a1))
(assert (! (forall ((?v0 A_b_c_sp_mu$) (?v1 A_b_c_sp_mu$)) (! (= (fun_app$c (fun_app$d uuc$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$c (fun_app$d uuc$ ?v0) ?v1)))) :named a2))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (! (= (fun_app$b (fun_app$e uuj$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$b (fun_app$e uuj$ ?v0) ?v1)))) :named a3))
(assert (! (forall ((?v0 Bool) (?v1 Bool)) (! (= (fun_app$f (fun_app$g uud$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$f (fun_app$g uud$ ?v0) ?v1)))) :named a4))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_fun$)) (! (= (fun_app$h (fun_app$i uuf$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$h (fun_app$i uuf$ ?v0) ?v1)))) :named a5))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)) (! (= (fun_app$j (fun_app$k uuh$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$j (fun_app$k uuh$ ?v0) ?v1)))) :named a6))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)) (! (= (fun_app$l (fun_app$m uus$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$l (fun_app$m uus$ ?v0) ?v1)))) :named a7))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)) (! (= (fun_app$n (fun_app$o uul$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$n (fun_app$o uul$ ?v0) ?v1)))) :named a8))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)) (! (= (fun_app$p (fun_app$q uuk$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$p (fun_app$q uuk$ ?v0) ?v1)))) :named a9))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)) (! (= (fun_app$r (fun_app$s uui$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$r (fun_app$s uui$ ?v0) ?v1)))) :named a10))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)) (! (= (fun_app$t (fun_app$u uug$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$t (fun_app$u uug$ ?v0) ?v1)))) :named a11))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$)) (! (= (fun_app$v (fun_app$w uur$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$v (fun_app$w uur$ ?v0) ?v1)))) :named a12))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$x (fun_app$y uum$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$x (fun_app$y uum$ ?v0) ?v1)))) :named a13))
(assert (! (forall ((?v0 C$) (?v1 C$)) (! (= (fun_app$z (fun_app$aa uub$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$z (fun_app$aa uub$ ?v0) ?v1)))) :named a14))
(assert (! (forall ((?v0 B$) (?v1 B$)) (! (= (fun_app$ab (fun_app$ac uua$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ab (fun_app$ac uua$ ?v0) ?v1)))) :named a15))
(assert (! (forall ((?v0 A$) (?v1 A$)) (! (= (fun_app$ad (fun_app$ae uu$ ?v0) ?v1) (= ?v0 ?v1)) :pattern ((fun_app$ad (fun_app$ae uu$ ?v0) ?v1)))) :named a16))
(assert (! (forall ((?v0 A_b_c_sp_mu$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)) (! (= (fun_app$af (fun_app$ag uup$ ?v0) ?v1) (fun_app$ ?v1 ?v0)) :pattern ((fun_app$af (fun_app$ag uup$ ?v0) ?v1)))) :named a17))
(assert (! (forall ((?v0 A_b_c_sp_mu$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)) (! (= (fun_app$ah (fun_app$ai uuo$ ?v0) ?v1) (fun_app$a ?v1 ?v0)) :pattern ((fun_app$ah (fun_app$ai uuo$ ?v0) ?v1)))) :named a18))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$)) (! (= (fun_app$aj (fun_app$ak uun$ ?v0) ?v1) (fun_app$al ?v1 ?v0)) :pattern ((fun_app$aj (fun_app$ak uun$ ?v0) ?v1)))) :named a19))
(assert (! (forall ((?v0 A$) (?v1 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$al (fun_app$am uuq$ ?v0) ?v1) (fun_app$an ?v1 ?v0)) :pattern ((fun_app$al (fun_app$am uuq$ ?v0) ?v1)))) :named a20))
(assert (! (not (p$ xa$)) :named a21))
(assert (! (forall ((?v0 A_b_c_sp_mu$)) (=> (exists ((?v1 A$) (?v2 A_a_b_c_sp_mu_fun$)) (and (= ?v0 (fun_app$an ?v2 ?v1)) (= xa$ (fun_app$al get$ ?v2)))) (p$ ?v0))) :named a22))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$)) (= (= (fun_app$al get$ ?v0) (fun_app$al get$ ?v1)) (= ?v0 ?v1))) :named a23))
(assert (! (forall ((?v0 A_b_c_sp_mu$)) (=> (forall ((?v1 A_b_c_sp_mu$)) (=> (member$ (pair$ ?v1 ?v0) sub$) (p$ ?v1))) (p$ ?v0))) :named a24))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v1 B_c_a_b_c_sp_mu_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$ao (fun_app$ap (fun_app$aq case_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$al ?v0 ?v2)) :pattern ((fun_app$ao (fun_app$ap (fun_app$aq case_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2))))) :named a25))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v1 B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$ (fun_app$ar (fun_app$as case_sp_mu$a ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$at ?v0 ?v2)) :pattern ((fun_app$ (fun_app$ar (fun_app$as case_sp_mu$a ?v0) ?v1) (fun_app$al get$ ?v2))))) :named a26))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v1 B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$a (fun_app$au (fun_app$av case_sp_mu$b ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$aw ?v0 ?v2)) :pattern ((fun_app$a (fun_app$au (fun_app$av case_sp_mu$b ?v0) ?v1) (fun_app$al get$ ?v2))))) :named a27))
(assert (! (forall ((?v0 B_bool_fun$) (?v1 C_bool_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$c (fun_app$ax (pred_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2)) (pred_fun$ (fun_app$ax (pred_sp_mu$ ?v0) ?v1) ?v2)) :pattern ((fun_app$c (fun_app$ax (pred_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2))))) :named a28))
(assert (! (forall ((?v0 A_b_c_sp_mu$)) (=> (and (forall ((?v1 A_a_b_c_sp_mu_fun$)) (=> (= ?v0 (fun_app$al get$ ?v1)) false)) (forall ((?v1 B$) (?v2 C$)) (=> (= ?v0 (fun_app$ay (fun_app$az put$ ?v1) ?v2)) false))) false)) :named a29))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 B$) (?v2 C$)) (not (= (fun_app$al get$ ?v0) (fun_app$ay (fun_app$az put$ ?v1) ?v2)))) :named a30))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A$)) (member$ (pair$ (fun_app$an ?v0 ?v1) (fun_app$al get$ ?v0)) sub$)) :named a31))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 B$) (?v3 C$) (?v4 A_a_b_c_sp_mu_fun$)) (not (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (fun_app$al get$ ?v4)))) :named a32))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 B$) (?v4 C$)) (not (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$ay (fun_app$az put$ ?v3) ?v4)))) :named a33))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_c_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$al get$ (fun_app$be (fun_app$bf comp$ (fun_app$bc (fun_app$bd map_sp_mu$ ?v0) ?v1)) ?v2))) :pattern ((fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2))))) :named a34))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$al get$ ?v3)) (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) ?v3)) :pattern ((fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$al get$ ?v3))))) :named a35))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (=> (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) ?v3) (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) (fun_app$al get$ ?v2)) (fun_app$al get$ ?v3)))) :named a36))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$)) (! (= (size$ (fun_app$al get$ ?v0)) (suc$ zero$)) :pattern ((fun_app$al get$ ?v0)))) :named a37))
(assert (! (forall ((?v0 B$) (?v1 C$) (?v2 B$) (?v3 C$)) (= (= (fun_app$ay (fun_app$az put$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a38))
(assert (! (forall ((?v0 B_bool_fun$) (?v1 C_bool_fun$) (?v2 B$) (?v3 C$)) (! (= (fun_app$c (fun_app$ax (pred_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (and (fun_app$ab ?v0 ?v2) (fun_app$z ?v1 ?v3))) :pattern ((fun_app$c (fun_app$ax (pred_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3))))) :named a39))
(assert (! (forall ((?v0 B$) (?v1 C$)) (! (= (size$ (fun_app$ay (fun_app$az put$ ?v0) ?v1)) (suc$ zero$)) :pattern ((fun_app$ay (fun_app$az put$ ?v0) ?v1)))) :named a40))
(assert (! (forall ((?v0 B_nat_fun$) (?v1 C_c_fun$) (?v2 B_b_fun$) (?v3 C_c_fun$) (?v4 A_b_c_sp_mu$)) (= (map_sp_mu$a ?v0 ?v1 (fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ ?v2) ?v3) ?v4)) (map_sp_mu$a (fun_app$bh (comp$a ?v0) ?v2) (fun_app$bi (comp$b ?v1) ?v3) ?v4))) :named a41))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_c_fun$) (?v2 B_b_fun$) (?v3 C_c_fun$) (?v4 A_b_c_sp_mu$)) (= (fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ ?v0) ?v1) (fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ ?v2) ?v3) ?v4)) (fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ (fun_app$bj (comp$c ?v0) ?v2)) (fun_app$bi (comp$b ?v1) ?v3)) ?v4))) :named a42))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 B$) (?v3 C$) (?v4 B$) (?v5 C$)) (! (= (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (fun_app$ay (fun_app$az put$ ?v4) ?v5)) (and (fun_app$ab (fun_app$ac ?v0 ?v2) ?v4) (fun_app$z (fun_app$aa ?v1 ?v3) ?v5))) :pattern ((fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (fun_app$ay (fun_app$az put$ ?v4) ?v5))))) :named a43))
(assert (! (forall ((?v0 B_b_fun$) (?v1 C_c_fun$) (?v2 B$) (?v3 C$)) (! (= (fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (fun_app$ay (fun_app$az put$ (fun_app$bk ?v0 ?v2)) (fun_app$bl ?v1 ?v3))) :pattern ((fun_app$ao (fun_app$bc (fun_app$bd map_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3))))) :named a44))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v1 B_c_a_b_c_sp_mu_fun_fun$) (?v2 B$) (?v3 C$)) (! (= (fun_app$ao (fun_app$ap (fun_app$aq case_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (fun_app$ay (fun_app$az ?v1 ?v2) ?v3)) :pattern ((fun_app$ao (fun_app$ap (fun_app$aq case_sp_mu$ ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3))))) :named a45))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v1 B_c_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v2 B$) (?v3 C$)) (! (= (fun_app$ (fun_app$ar (fun_app$as case_sp_mu$a ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (fun_app$bm (fun_app$bn ?v1 ?v2) ?v3)) :pattern ((fun_app$ (fun_app$ar (fun_app$as case_sp_mu$a ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3))))) :named a46))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v1 B_c_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun_fun$) (?v2 B$) (?v3 C$)) (! (= (fun_app$a (fun_app$au (fun_app$av case_sp_mu$b ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3)) (fun_app$bo (fun_app$bp ?v1 ?v2) ?v3)) :pattern ((fun_app$a (fun_app$au (fun_app$av case_sp_mu$b ?v0) ?v1) (fun_app$ay (fun_app$az put$ ?v2) ?v3))))) :named a47))
(assert (! (= (fun_app$ba (fun_app$bb rel_sp_mu$ uua$) uub$) uuc$) :named a48))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$) (?v4 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (=> (and (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2) ?v3) (and (forall ((?v5 A_a_b_c_sp_mu_fun$) (?v6 A_a_b_c_sp_mu_fun$)) (=> (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ uu$) ?v4) ?v5) ?v6) (fun_app$c (fun_app$d ?v4 (fun_app$al get$ ?v5)) (fun_app$al get$ ?v6)))) (forall ((?v5 B$) (?v6 C$) (?v7 B$) (?v8 C$)) (=> (and (fun_app$ab (fun_app$ac ?v0 ?v5) ?v7) (fun_app$z (fun_app$aa ?v1 ?v6) ?v8)) (fun_app$c (fun_app$d ?v4 (fun_app$ay (fun_app$az put$ ?v5) ?v6)) (fun_app$ay (fun_app$az put$ ?v7) ?v8)))))) (fun_app$c (fun_app$d ?v4 ?v2) ?v3))) :named a49))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$)) (=> (and (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2) ?v3) (and (forall ((?v4 A_a_b_c_sp_mu_fun$) (?v5 A_a_b_c_sp_mu_fun$)) (=> (and (= ?v2 (fun_app$al get$ ?v4)) (and (= ?v3 (fun_app$al get$ ?v5)) (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v4) ?v5))) false)) (forall ((?v4 B$) (?v5 C$) (?v6 B$) (?v7 C$)) (=> (and (= ?v2 (fun_app$ay (fun_app$az put$ ?v4) ?v5)) (and (= ?v3 (fun_app$ay (fun_app$az put$ ?v6) ?v7)) (and (fun_app$ab (fun_app$ac ?v0 ?v4) ?v6) (fun_app$z (fun_app$aa ?v1 ?v5) ?v7)))) false)))) false)) :named a50))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B$) (?v2 B$) (?v3 C_c_bool_fun_fun$) (?v4 C$) (?v5 C$)) (=> (and (fun_app$ab (fun_app$ac ?v0 ?v1) ?v2) (fun_app$z (fun_app$aa ?v3 ?v4) ?v5)) (fun_app$c (fun_app$d (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v3) (fun_app$ay (fun_app$az put$ ?v1) ?v4)) (fun_app$ay (fun_app$az put$ ?v2) ?v5)))) :named a51))
(assert (! (forall ((?v0 A_b_c_sp_mu$)) (not (= (size$ ?v0) zero$))) :named a52))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$a (rel_fun$b (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$c (rel_fun$d ?v0 (rel_fun$e ?v1 ?v2)) (rel_fun$f (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) case_sp_mu$ case_sp_mu$a)) :named a53))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$g (rel_fun$h (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$i (rel_fun$j ?v0 (rel_fun$k ?v1 ?v2)) (rel_fun$l (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) case_sp_mu$ case_sp_mu$b)) :named a54))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$m (rel_fun$n (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$o (rel_fun$p ?v0 (rel_fun$q ?v1 ?v2)) (rel_fun$r (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) case_sp_mu$a case_sp_mu$)) :named a55))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$s (rel_fun$t (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$u (rel_fun$v ?v0 (rel_fun$w ?v1 ?v2)) (fun_app$bq (rel_fun$x (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2)) case_sp_mu$a case_sp_mu$b)) :named a56))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$y (rel_fun$z (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$aa (rel_fun$ab ?v0 (rel_fun$ac ?v1 ?v2)) (rel_fun$ad (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) case_sp_mu$b case_sp_mu$)) :named a57))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$ae (rel_fun$af (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$ag (rel_fun$ah ?v0 (rel_fun$ai ?v1 ?v2)) (fun_app$br (rel_fun$aj (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2)) case_sp_mu$b case_sp_mu$a)) :named a58))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$ak (rel_fun$al (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$am (rel_fun$an ?v0 (rel_fun$ao ?v1 ?v2)) (fun_app$bs (rel_fun$ap (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2)) case_sp_mu$b case_sp_mu$b)) :named a59))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$aq (rel_fun$ar (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2) (rel_fun$as (rel_fun$at ?v0 (rel_fun$au ?v1 ?v2)) (fun_app$bt (rel_fun$av (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2)) case_sp_mu$a case_sp_mu$a)) :named a60))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$aw (fun_app$bu (rel_fun$ax (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1))) ?v2) (rel_fun$ay (rel_fun$az ?v0 (rel_fun$ba ?v1 ?v2)) (rel_fun$bb (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) case_sp_mu$ case_sp_mu$)) :named a61))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 C_c_bool_fun_fun$) (?v3 C_c_bool_fun_fun$)) (rel_fun$bc (rel_fun$bd ?v0 ?v1) (rel_fun$be (rel_fun$bf ?v2 ?v3) (rel_fun$bb (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v2) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v1) ?v3))) map_sp_mu$ map_sp_mu$)) :named a62))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (fun_app$v (fun_app$w (fun_app$bu (rel_fun$ax (fun_app$bg (rel_fun$ uu$) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1))) (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) get$) get$)) :named a63))
(assert (! (forall ((?v0 C_c_fun$) (?v1 C_c_fun$) (?v2 C$)) (! (= (fun_app$bl (fun_app$bi (comp$b ?v0) ?v1) ?v2) (fun_app$bl ?v0 (fun_app$bl ?v1 ?v2))) :pattern ((fun_app$bl (fun_app$bi (comp$b ?v0) ?v1) ?v2)))) :named a64))
(assert (! (forall ((?v0 B_nat_fun$) (?v1 B_b_fun$) (?v2 B$)) (! (= (fun_app$bv (fun_app$bh (comp$a ?v0) ?v1) ?v2) (fun_app$bv ?v0 (fun_app$bk ?v1 ?v2))) :pattern ((fun_app$bv (fun_app$bh (comp$a ?v0) ?v1) ?v2)))) :named a65))
(assert (! (forall ((?v0 B_b_fun$) (?v1 B_b_fun$) (?v2 B$)) (! (= (fun_app$bk (fun_app$bj (comp$c ?v0) ?v1) ?v2) (fun_app$bk ?v0 (fun_app$bk ?v1 ?v2))) :pattern ((fun_app$bk (fun_app$bj (comp$c ?v0) ?v1) ?v2)))) :named a66))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun_a_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$al (fun_app$bw (fun_app$bx comp$d ?v0) ?v1) ?v2) (fun_app$an ?v0 (fun_app$by ?v1 ?v2))) :pattern ((fun_app$al (fun_app$bw (fun_app$bx comp$d ?v0) ?v1) ?v2)))) :named a67))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A$)) (! (= (fun_app$an (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) ?v2) (fun_app$an ?v0 (fun_app$cb ?v1 ?v2))) :pattern ((fun_app$an (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) ?v2)))) :named a68))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A$)) (! (= (fun_app$an (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2) (fun_app$ao ?v0 (fun_app$an ?v1 ?v2))) :pattern ((fun_app$an (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2)))) :named a69))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (suc$ ?v0) (suc$ ?v1)) (= ?v0 ?v1))) :named a70))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (suc$ ?v0) (suc$ ?v1)) (= ?v0 ?v1))) :named a71))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$) (?v3 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5) (fun_app$cc (fun_app$cd ?v1 (fun_app$ce ?v2 ?v4)) (fun_app$ce ?v3 ?v5)))) (fun_app$cf (fun_app$cg (rel_fun$bg ?v0 ?v1) ?v2) ?v3))) :named a72))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v3 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5) (fun_app$j (fun_app$k ?v1 (fun_app$ch ?v2 ?v4)) (fun_app$ch ?v3 ?v5)))) (fun_app$ci (fun_app$cj (rel_fun$bh ?v0 ?v1) ?v2) ?v3))) :named a73))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$) (?v2 A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$) (?v3 A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5) (fun_app$v (fun_app$w ?v1 (fun_app$am ?v2 ?v4)) (fun_app$am ?v3 ?v5)))) (rel_fun$bi ?v0 ?v1 ?v2 ?v3))) :named a74))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v2 A_a_a_b_c_sp_mu_fun_fun$) (?v3 A_a_a_b_c_sp_mu_fun_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5) (fun_app$x (fun_app$y ?v1 (fun_app$ck ?v2 ?v4)) (fun_app$ck ?v3 ?v5)))) (fun_app$cl (fun_app$cm (rel_fun$bj ?v0 ?v1) ?v2) ?v3))) :named a75))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A_a_fun$) (?v3 A_a_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5) (fun_app$ad (fun_app$ae ?v1 (fun_app$cb ?v2 ?v4)) (fun_app$cb ?v3 ?v5)))) (fun_app$cn (fun_app$co (rel_fun$bk ?v0 ?v1) ?v2) ?v3))) :named a76))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (=> (forall ((?v4 A$) (?v5 A$)) (=> (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5) (fun_app$c (fun_app$d ?v1 (fun_app$an ?v2 ?v4)) (fun_app$an ?v3 ?v5)))) (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ ?v0) ?v1) ?v2) ?v3))) :named a77))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$)) (=> (forall ((?v4 A_a_b_c_sp_mu_fun$) (?v5 A_a_b_c_sp_mu_fun$)) (=> (fun_app$x (fun_app$y ?v0 ?v4) ?v5) (fun_app$c (fun_app$d ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) (fun_app$v (fun_app$w (fun_app$bu (rel_fun$ax ?v0) ?v1) ?v2) ?v3))) :named a78))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)) (=> (forall ((?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (=> (fun_app$c (fun_app$d ?v0 ?v4) ?v5) (fun_app$j (fun_app$k ?v1 (fun_app$a ?v2 ?v4)) (fun_app$a ?v3 ?v5)))) (fun_app$l (fun_app$m (fun_app$bs (rel_fun$ap ?v0) ?v1) ?v2) ?v3))) :named a79))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$)) (=> (forall ((?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (=> (fun_app$c (fun_app$d ?v0 ?v4) ?v5) (fun_app$b (fun_app$e ?v1 (fun_app$ ?v2 ?v4)) (fun_app$ ?v3 ?v5)))) (fun_app$j (fun_app$k (fun_app$bt (rel_fun$av ?v0) ?v1) ?v2) ?v3))) :named a80))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 B_nat_fun$) (?v2 C_nat_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (! (= (fun_app$cp (size_sp_mu$ ?v0 ?v1 ?v2) (fun_app$al get$ ?v3)) (suc$ zero$)) :pattern ((fun_app$cp (size_sp_mu$ ?v0 ?v1 ?v2) (fun_app$al get$ ?v3))))) :named a81))
(assert (! (forall ((?v0 B_c_prod$) (?v1 A_stream$) (?v2 B_c_prod$) (?v3 A_stream$)) (= (= (pair$c ?v0 ?v1) (pair$c ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a82))
(assert (! (forall ((?v0 B$) (?v1 C$) (?v2 B$) (?v3 C$)) (= (= (pair$b ?v0 ?v1) (pair$b ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a83))
(assert (! (forall ((?v0 A_b_c_sp_mu$) (?v1 A_b_c_sp_mu$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$)) (= (= (pair$ ?v0 ?v1) (pair$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a84))
(assert (! (forall ((?v0 B_c_prod$) (?v1 A_stream$) (?v2 B_c_prod$) (?v3 A_stream$)) (= (= (pair$c ?v0 ?v1) (pair$c ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a85))
(assert (! (forall ((?v0 B$) (?v1 C$) (?v2 B$) (?v3 C$)) (= (= (pair$b ?v0 ?v1) (pair$b ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a86))
(assert (! (forall ((?v0 A_b_c_sp_mu$) (?v1 A_b_c_sp_mu$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$)) (= (= (pair$ ?v0 ?v1) (pair$ ?v2 ?v3)) (and (= ?v0 ?v2) (= ?v1 ?v3)))) :named a87))
(assert (! (forall ((?v0 B$) (?v1 C$) (?v2 A_stream$)) (! (= (run_mu$ (fun_app$ay (fun_app$az put$ ?v0) ?v1) ?v2) (pair$c (pair$b ?v0 ?v1) ?v2)) :pattern ((run_mu$ (fun_app$ay (fun_app$az put$ ?v0) ?v1) ?v2)))) :named a88))
(assert (! (forall ((?v0 Nat$)) (=> (and (=> (= ?v0 zero$) false) (forall ((?v1 Nat$)) (=> (= ?v0 (suc$ ?v1)) false))) false)) :named a89))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 B_nat_fun$) (?v2 C_nat_fun$) (?v3 B_b_fun$) (?v4 C_c_fun$)) (= (comp$f (size_sp_mu$ ?v0 ?v1 ?v2) (fun_app$bc (fun_app$bd map_sp_mu$ ?v3) ?v4)) (size_sp_mu$ ?v0 (fun_app$bh (comp$a ?v1) ?v3) (fun_app$cq (comp$g ?v2) ?v4)))) :named a90))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 B_b_bool_fun_fun$) (?v2 C_c_bool_fun_fun$) (?v3 C_c_bool_fun_fun$)) (rel_fun$bl (rel_fun$bm ?v0 (rel_fun$bn ?v1 uud$)) (rel_fun$bo (rel_fun$bp ?v2 (rel_fun$bq ?v3 uud$)) (rel_fun$br (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v2) (rel_fun$bs (fun_app$ba (fun_app$bb rel_sp_mu$ ?v1) ?v3) uud$))) rel_sp_mu$ rel_sp_mu$)) :named a91))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$)) (fun_app$cr (fun_app$cs (rel_fun$az ?v0 (rel_fun$ba ?v1 (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1))) put$) put$)) :named a92))
(assert (! (forall ((?v0 Nat$)) (= (= zero$ ?v0) (= ?v0 zero$))) :named a93))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod$)) (exists ((?v1 B_c_prod$) (?v2 A_stream$)) (= ?v0 (pair$c ?v1 ?v2)))) :named a94))
(assert (! (forall ((?v0 B_c_prod$)) (exists ((?v1 B$) (?v2 C$)) (= ?v0 (pair$b ?v1 ?v2)))) :named a95))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (exists ((?v1 A_b_c_sp_mu$) (?v2 A_b_c_sp_mu$)) (= ?v0 (pair$ ?v1 ?v2)))) :named a96))
(assert (! (forall ((?v0 B_c_prod$) (?v1 A_stream$) (?v2 B_c_prod$) (?v3 A_stream$)) (=> (and (= (pair$c ?v0 ?v1) (pair$c ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)) :named a97))
(assert (! (forall ((?v0 B$) (?v1 C$) (?v2 B$) (?v3 C$)) (=> (and (= (pair$b ?v0 ?v1) (pair$b ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)) :named a98))
(assert (! (forall ((?v0 A_b_c_sp_mu$) (?v1 A_b_c_sp_mu$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$)) (=> (and (= (pair$ ?v0 ?v1) (pair$ ?v2 ?v3)) (=> (and (= ?v0 ?v2) (= ?v1 ?v3)) false)) false)) :named a99))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$)) (=> (forall ((?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (= (fun_app$b ?v0 ?v2) (fun_app$b ?v1 ?v2))) (= (collect$ ?v0) (collect$ ?v1)))) :named a100))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$)) (= (collect$ (uue$ ?v0)) ?v0)) :named a101))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$)) (= (member$ ?v0 (collect$ ?v1)) (fun_app$b ?v1 ?v0))) :named a102))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod$)) (=> (forall ((?v1 B_c_prod$) (?v2 A_stream$)) (=> (= ?v0 (pair$c ?v1 ?v2)) false)) false)) :named a103))
(assert (! (forall ((?v0 B_c_prod$)) (=> (forall ((?v1 B$) (?v2 C$)) (=> (= ?v0 (pair$b ?v1 ?v2)) false)) false)) :named a104))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (=> (forall ((?v1 A_b_c_sp_mu$) (?v2 A_b_c_sp_mu$)) (=> (= ?v0 (pair$ ?v1 ?v2)) false)) false)) :named a105))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod_bool_fun$) (?v1 B_c_prod_a_stream_prod$)) (=> (forall ((?v2 B_c_prod$) (?v3 A_stream$)) (fun_app$ct ?v0 (pair$c ?v2 ?v3))) (fun_app$ct ?v0 ?v1))) :named a106))
(assert (! (forall ((?v0 B_c_prod_bool_fun$) (?v1 B_c_prod$)) (=> (forall ((?v2 B$) (?v3 C$)) (fun_app$cu ?v0 (pair$b ?v2 ?v3))) (fun_app$cu ?v0 ?v1))) :named a107))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (=> (forall ((?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$)) (fun_app$b ?v0 (pair$ ?v2 ?v3))) (fun_app$b ?v0 ?v1))) :named a108))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod$)) (=> (forall ((?v1 B_c_prod$) (?v2 A_stream$)) (=> (= ?v0 (pair$c ?v1 ?v2)) false)) false)) :named a109))
(assert (! (forall ((?v0 B_c_prod$)) (=> (forall ((?v1 B$) (?v2 C$)) (=> (= ?v0 (pair$b ?v1 ?v2)) false)) false)) :named a110))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (=> (forall ((?v1 A_b_c_sp_mu$) (?v2 A_b_c_sp_mu$)) (=> (= ?v0 (pair$ ?v1 ?v2)) false)) false)) :named a111))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$) (?v3 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_prod_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$cf (fun_app$cg (rel_fun$bg ?v0 ?v1) ?v2) ?v3) (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5)) (fun_app$cc (fun_app$cd ?v1 (fun_app$ce ?v2 ?v4)) (fun_app$ce ?v3 ?v5)))) :named a112))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v3 A_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$ci (fun_app$cj (rel_fun$bh ?v0 ?v1) ?v2) ?v3) (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5)) (fun_app$j (fun_app$k ?v1 (fun_app$ch ?v2 ?v4)) (fun_app$ch ?v3 ?v5)))) :named a113))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_bool_fun_fun$) (?v2 A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$) (?v3 A_a_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun_fun$) (?v4 A$) (?v5 A$)) (=> (and (rel_fun$bi ?v0 ?v1 ?v2 ?v3) (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5)) (fun_app$v (fun_app$w ?v1 (fun_app$am ?v2 ?v4)) (fun_app$am ?v3 ?v5)))) :named a114))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v2 A_a_a_b_c_sp_mu_fun_fun$) (?v3 A_a_a_b_c_sp_mu_fun_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$cl (fun_app$cm (rel_fun$bj ?v0 ?v1) ?v2) ?v3) (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5)) (fun_app$x (fun_app$y ?v1 (fun_app$ck ?v2 ?v4)) (fun_app$ck ?v3 ?v5)))) :named a115))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_a_bool_fun_fun$) (?v2 A_a_fun$) (?v3 A_a_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$cn (fun_app$co (rel_fun$bk ?v0 ?v1) ?v2) ?v3) (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5)) (fun_app$ad (fun_app$ae ?v1 (fun_app$cb ?v2 ?v4)) (fun_app$cb ?v3 ?v5)))) :named a116))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ ?v0) ?v1) ?v2) ?v3) (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5)) (fun_app$c (fun_app$d ?v1 (fun_app$an ?v2 ?v4)) (fun_app$an ?v3 ?v5)))) :named a117))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v4 A_a_b_c_sp_mu_fun$) (?v5 A_a_b_c_sp_mu_fun$)) (=> (and (fun_app$v (fun_app$w (fun_app$bu (rel_fun$ax ?v0) ?v1) ?v2) ?v3) (fun_app$x (fun_app$y ?v0 ?v4) ?v5)) (fun_app$c (fun_app$d ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)))) :named a118))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (=> (and (fun_app$l (fun_app$m (fun_app$bs (rel_fun$ap ?v0) ?v1) ?v2) ?v3) (fun_app$c (fun_app$d ?v0 ?v4) ?v5)) (fun_app$j (fun_app$k ?v1 (fun_app$a ?v2 ?v4)) (fun_app$a ?v3 ?v5)))) :named a119))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (=> (and (fun_app$j (fun_app$k (fun_app$bt (rel_fun$av ?v0) ?v1) ?v2) ?v3) (fun_app$c (fun_app$d ?v0 ?v4) ?v5)) (fun_app$b (fun_app$e ?v1 (fun_app$ ?v2 ?v4)) (fun_app$ ?v3 ?v5)))) :named a120))
(assert (! (forall ((?v0 Nat$)) (=> (and (=> (= ?v0 zero$) false) (=> (not (= ?v0 zero$)) false)) false)) :named a121))
(assert (! (forall ((?v0 Nat$)) (not (= ?v0 (suc$ ?v0)))) :named a122))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (=> (= (suc$ ?v0) (suc$ ?v1)) (= ?v0 ?v1))) :named a123))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A_a_fun$)) (=> (= (fun_app$ao ?v0 (fun_app$an ?v1 ?v2)) (fun_app$an ?v3 (fun_app$cb ?v4 ?v2))) (= (fun_app$an (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2) (fun_app$an (fun_app$bz (fun_app$ca comp$e ?v3) ?v4) ?v2)))) :named a124))
(assert (! (forall ((?v0 C_c_fun$) (?v1 C_c_fun$) (?v2 C$) (?v3 C_c_fun$) (?v4 C_c_fun$)) (=> (= (fun_app$bl ?v0 (fun_app$bl ?v1 ?v2)) (fun_app$bl ?v3 (fun_app$bl ?v4 ?v2))) (= (fun_app$bl (fun_app$bi (comp$b ?v0) ?v1) ?v2) (fun_app$bl (fun_app$bi (comp$b ?v3) ?v4) ?v2)))) :named a125))
(assert (! (forall ((?v0 B_nat_fun$) (?v1 B_b_fun$) (?v2 B$) (?v3 B_nat_fun$) (?v4 B_b_fun$)) (=> (= (fun_app$bv ?v0 (fun_app$bk ?v1 ?v2)) (fun_app$bv ?v3 (fun_app$bk ?v4 ?v2))) (= (fun_app$bv (fun_app$bh (comp$a ?v0) ?v1) ?v2) (fun_app$bv (fun_app$bh (comp$a ?v3) ?v4) ?v2)))) :named a126))
(assert (! (forall ((?v0 B_b_fun$) (?v1 B_b_fun$) (?v2 B$) (?v3 B_b_fun$) (?v4 B_b_fun$)) (=> (= (fun_app$bk ?v0 (fun_app$bk ?v1 ?v2)) (fun_app$bk ?v3 (fun_app$bk ?v4 ?v2))) (= (fun_app$bk (fun_app$bj (comp$c ?v0) ?v1) ?v2) (fun_app$bk (fun_app$bj (comp$c ?v3) ?v4) ?v2)))) :named a127))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun_a_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A_a_b_c_sp_mu_fun_a_fun$)) (=> (= (fun_app$an ?v0 (fun_app$by ?v1 ?v2)) (fun_app$an ?v3 (fun_app$by ?v4 ?v2))) (= (fun_app$al (fun_app$bw (fun_app$bx comp$d ?v0) ?v1) ?v2) (fun_app$al (fun_app$bw (fun_app$bx comp$d ?v3) ?v4) ?v2)))) :named a128))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v4 A_a_b_c_sp_mu_fun$)) (=> (= (fun_app$an ?v0 (fun_app$cb ?v1 ?v2)) (fun_app$ao ?v3 (fun_app$an ?v4 ?v2))) (= (fun_app$an (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) ?v2) (fun_app$an (fun_app$be (fun_app$bf comp$ ?v3) ?v4) ?v2)))) :named a129))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A_a_fun$)) (=> (= (fun_app$an ?v0 (fun_app$cb ?v1 ?v2)) (fun_app$an ?v3 (fun_app$cb ?v4 ?v2))) (= (fun_app$an (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) ?v2) (fun_app$an (fun_app$bz (fun_app$ca comp$e ?v3) ?v4) ?v2)))) :named a130))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v4 A_a_b_c_sp_mu_fun$)) (=> (= (fun_app$ao ?v0 (fun_app$an ?v1 ?v2)) (fun_app$ao ?v3 (fun_app$an ?v4 ?v2))) (= (fun_app$an (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2) (fun_app$an (fun_app$be (fun_app$bf comp$ ?v3) ?v4) ?v2)))) :named a131))
(assert (! (forall ((?v0 C_c_fun$) (?v1 C_c_fun$) (?v2 C_c_fun$) (?v3 C$)) (=> (= (fun_app$bi (comp$b ?v0) ?v1) ?v2) (= (fun_app$bl ?v0 (fun_app$bl ?v1 ?v3)) (fun_app$bl ?v2 ?v3)))) :named a132))
(assert (! (forall ((?v0 B_nat_fun$) (?v1 B_b_fun$) (?v2 B_nat_fun$) (?v3 B$)) (=> (= (fun_app$bh (comp$a ?v0) ?v1) ?v2) (= (fun_app$bv ?v0 (fun_app$bk ?v1 ?v3)) (fun_app$bv ?v2 ?v3)))) :named a133))
(assert (! (forall ((?v0 B_b_fun$) (?v1 B_b_fun$) (?v2 B_b_fun$) (?v3 B$)) (=> (= (fun_app$bj (comp$c ?v0) ?v1) ?v2) (= (fun_app$bk ?v0 (fun_app$bk ?v1 ?v3)) (fun_app$bk ?v2 ?v3)))) :named a134))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun_a_fun$) (?v2 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (=> (= (fun_app$bw (fun_app$bx comp$d ?v0) ?v1) ?v2) (= (fun_app$an ?v0 (fun_app$by ?v1 ?v3)) (fun_app$al ?v2 ?v3)))) :named a135))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A$)) (=> (= (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) ?v2) (= (fun_app$an ?v0 (fun_app$cb ?v1 ?v3)) (fun_app$an ?v2 ?v3)))) :named a136))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A$)) (=> (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2) (= (fun_app$ao ?v0 (fun_app$an ?v1 ?v3)) (fun_app$an ?v2 ?v3)))) :named a137))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_fun$) (?v4 A$)) (=> (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) (fun_app$bz (fun_app$ca comp$e ?v2) ?v3)) (= (fun_app$ao ?v0 (fun_app$an ?v1 ?v4)) (fun_app$an ?v2 (fun_app$cb ?v3 ?v4))))) :named a138))
(assert (! (forall ((?v0 C_c_fun$) (?v1 C_c_fun$) (?v2 C_c_fun$) (?v3 C_c_fun$) (?v4 C$)) (=> (= (fun_app$bi (comp$b ?v0) ?v1) (fun_app$bi (comp$b ?v2) ?v3)) (= (fun_app$bl ?v0 (fun_app$bl ?v1 ?v4)) (fun_app$bl ?v2 (fun_app$bl ?v3 ?v4))))) :named a139))
(assert (! (forall ((?v0 B_nat_fun$) (?v1 B_b_fun$) (?v2 B_nat_fun$) (?v3 B_b_fun$) (?v4 B$)) (=> (= (fun_app$bh (comp$a ?v0) ?v1) (fun_app$bh (comp$a ?v2) ?v3)) (= (fun_app$bv ?v0 (fun_app$bk ?v1 ?v4)) (fun_app$bv ?v2 (fun_app$bk ?v3 ?v4))))) :named a140))
(assert (! (forall ((?v0 B_b_fun$) (?v1 B_b_fun$) (?v2 B_b_fun$) (?v3 B_b_fun$) (?v4 B$)) (=> (= (fun_app$bj (comp$c ?v0) ?v1) (fun_app$bj (comp$c ?v2) ?v3)) (= (fun_app$bk ?v0 (fun_app$bk ?v1 ?v4)) (fun_app$bk ?v2 (fun_app$bk ?v3 ?v4))))) :named a141))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun_a_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun_a_fun$) (?v4 A_a_b_c_sp_mu_fun$)) (=> (= (fun_app$bw (fun_app$bx comp$d ?v0) ?v1) (fun_app$bw (fun_app$bx comp$d ?v2) ?v3)) (= (fun_app$an ?v0 (fun_app$by ?v1 ?v4)) (fun_app$an ?v2 (fun_app$by ?v3 ?v4))))) :named a142))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A$)) (=> (= (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)) (= (fun_app$an ?v0 (fun_app$cb ?v1 ?v4)) (fun_app$ao ?v2 (fun_app$an ?v3 ?v4))))) :named a143))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_fun$) (?v4 A$)) (=> (= (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) (fun_app$bz (fun_app$ca comp$e ?v2) ?v3)) (= (fun_app$an ?v0 (fun_app$cb ?v1 ?v4)) (fun_app$an ?v2 (fun_app$cb ?v3 ?v4))))) :named a144))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A$)) (=> (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)) (= (fun_app$ao ?v0 (fun_app$an ?v1 ?v4)) (fun_app$ao ?v2 (fun_app$an ?v3 ?v4))))) :named a145))
(assert (! (forall ((?v0 B_b_fun$) (?v1 B_b_fun$) (?v2 B_b_fun$) (?v3 B_b_fun$)) (=> (and (= (fun_app$bj (comp$c ?v0) ?v1) (fun_app$bj (comp$c ?v2) ?v3)) (=> (forall ((?v4 B$)) (= (fun_app$bk ?v0 (fun_app$bk ?v1 ?v4)) (fun_app$bk ?v2 (fun_app$bk ?v3 ?v4)))) false)) false)) :named a146))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun_a_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun_a_fun$)) (=> (and (= (fun_app$bw (fun_app$bx comp$d ?v0) ?v1) (fun_app$bw (fun_app$bx comp$d ?v2) ?v3)) (=> (forall ((?v4 A_a_b_c_sp_mu_fun$)) (= (fun_app$an ?v0 (fun_app$by ?v1 ?v4)) (fun_app$an ?v2 (fun_app$by ?v3 ?v4)))) false)) false)) :named a147))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (=> (and (= (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)) (=> (forall ((?v4 A$)) (= (fun_app$an ?v0 (fun_app$cb ?v1 ?v4)) (fun_app$ao ?v2 (fun_app$an ?v3 ?v4)))) false)) false)) :named a148))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_fun$)) (=> (and (= (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) (fun_app$bz (fun_app$ca comp$e ?v2) ?v3)) (=> (forall ((?v4 A$)) (= (fun_app$an ?v0 (fun_app$cb ?v1 ?v4)) (fun_app$an ?v2 (fun_app$cb ?v3 ?v4)))) false)) false)) :named a149))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (=> (and (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)) (=> (forall ((?v4 A$)) (= (fun_app$ao ?v0 (fun_app$an ?v1 ?v4)) (fun_app$ao ?v2 (fun_app$an ?v3 ?v4)))) false)) false)) :named a150))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A$)) (! (= (fun_app$an (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2) (fun_app$ao ?v0 (fun_app$an ?v1 ?v2))) :pattern ((fun_app$an (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2)))) :named a151))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_a_fun$)) (= (fun_app$bz (fun_app$ca comp$e (fun_app$be (fun_app$bf comp$ ?v0) ?v1)) ?v2) (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$bz (fun_app$ca comp$e ?v1) ?v2)))) :named a152))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (= (fun_app$be (fun_app$bf comp$ (fun_app$cv (comp$h ?v0) ?v1)) ?v2) (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$be (fun_app$bf comp$ ?v1) ?v2)))) :named a153))
(assert (! (forall ((?v0 Nat$)) (not (= zero$ (suc$ ?v0)))) :named a154))
(assert (! (forall ((?v0 Nat$)) (not (= (suc$ ?v0) zero$))) :named a155))
(assert (! (forall ((?v0 Nat$)) (not (= zero$ (suc$ ?v0)))) :named a156))
(assert (! (forall ((?v0 Nat$)) (not (= zero$ (suc$ ?v0)))) :named a157))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat$)) (=> (and (fun_app$cw ?v0 zero$) (forall ((?v2 Nat$)) (=> (fun_app$cw ?v0 ?v2) (fun_app$cw ?v0 (suc$ ?v2))))) (fun_app$cw ?v0 ?v1))) :named a158))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat$)) (=> (and (fun_app$cw ?v0 ?v1) (forall ((?v2 Nat$)) (=> (fun_app$cw ?v0 (suc$ ?v2)) (fun_app$cw ?v0 ?v2)))) (fun_app$cw ?v0 zero$))) :named a159))
(assert (! (forall ((?v0 Nat$)) (=> (not (= ?v0 zero$)) (exists ((?v1 Nat$)) (= ?v0 (suc$ ?v1))))) :named a160))
(assert (! (forall ((?v0 Nat$)) (=> (= zero$ (suc$ ?v0)) false)) :named a161))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (=> (= ?v0 (suc$ ?v1)) (not (= ?v0 zero$)))) :named a162))
(assert (! (forall ((?v0 Nat$)) (=> (= (suc$ ?v0) zero$) false)) :named a163))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$) (?v1 Nat$) (?v2 Nat$)) (=> (and (forall ((?v3 Nat$)) (fun_app$cw (fun_app$cx ?v0 ?v3) zero$)) (and (forall ((?v3 Nat$)) (fun_app$cw (fun_app$cx ?v0 zero$) (suc$ ?v3))) (forall ((?v3 Nat$) (?v4 Nat$)) (=> (fun_app$cw (fun_app$cx ?v0 ?v3) ?v4) (fun_app$cw (fun_app$cx ?v0 (suc$ ?v3)) (suc$ ?v4)))))) (fun_app$cw (fun_app$cx ?v0 ?v1) ?v2))) :named a164))
(assert (! (forall ((?v0 Nat$)) (=> (and (=> (= ?v0 zero$) false) (forall ((?v1 Nat$)) (=> (= ?v0 (suc$ ?v1)) false))) false)) :named a165))
(assert (! (forall ((?v0 A_a_bool_fun_fun$)) (rel_fun$bt uuf$ (rel_fun$bu (fun_app$bg (rel_fun$ ?v0) uuc$) (fun_app$bg (rel_fun$ ?v0) uuc$)) comp$ comp$)) :named a166))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$bv uuf$ (rel_fun$bw (fun_app$bu (rel_fun$ax ?v0) uuc$) (fun_app$bu (rel_fun$ax ?v0) uuc$)) comp$i comp$i)) :named a167))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$bx uug$ (rel_fun$by (fun_app$bs (rel_fun$ap ?v0) uuh$) (fun_app$bs (rel_fun$ap ?v0) uuh$)) comp$j comp$j)) :named a168))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$bz uui$ (rel_fun$ca (fun_app$bs (rel_fun$ap ?v0) uuh$) (fun_app$bt (rel_fun$av ?v0) uuj$)) comp$k comp$k)) :named a169))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cb uuk$ (rel_fun$cc (fun_app$bt (rel_fun$av ?v0) uuj$) (fun_app$bs (rel_fun$ap ?v0) uuh$)) comp$l comp$l)) :named a170))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cd uul$ (rel_fun$ce (fun_app$bt (rel_fun$av ?v0) uuj$) (fun_app$bt (rel_fun$av ?v0) uuj$)) comp$m comp$m)) :named a171))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cf (fun_app$bg (rel_fun$ ?v0) ?v1) (rel_fun$cg (rel_fun$bk uu$ ?v0) (fun_app$bg (rel_fun$ uu$) ?v1)) comp$e comp$e)) :named a172))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$ch (fun_app$bg (rel_fun$ ?v0) ?v1) (rel_fun$ci (rel_fun$cj uum$ ?v0) (fun_app$bu (rel_fun$ax uum$) ?v1)) comp$d comp$d)) :named a173))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$bt (rel_fun$bb ?v0 ?v1) (rel_fun$bu (fun_app$bg (rel_fun$ uu$) ?v0) (fun_app$bg (rel_fun$ uu$) ?v1)) comp$ comp$)) :named a174))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$ck (fun_app$bu (rel_fun$ax ?v0) ?v1) (rel_fun$cl (rel_fun$bj uu$ ?v0) (fun_app$bg (rel_fun$ uu$) ?v1)) comp$n comp$n)) :named a175))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$bv (rel_fun$bb ?v0 ?v1) (rel_fun$bw (fun_app$bu (rel_fun$ax uum$) ?v0) (fun_app$bu (rel_fun$ax uum$) ?v1)) comp$i comp$i)) :named a176))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cm (fun_app$bu (rel_fun$ax ?v0) ?v1) (rel_fun$cn (rel_fun$bu uum$ ?v0) (fun_app$bu (rel_fun$ax uum$) ?v1)) comp$o comp$o)) :named a177))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$co (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cp (fun_app$bg (rel_fun$ uu$) ?v0) (rel_fun$cq uu$ ?v1)) comp$p comp$p)) :named a178))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$cr (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cs (rel_fun$bb uuc$ ?v0) (fun_app$bt (rel_fun$av uuc$) ?v1)) comp$q comp$q)) :named a179))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$ct (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cu (fun_app$bu (rel_fun$ax uum$) ?v0) (rel_fun$ar uum$ ?v1)) comp$r comp$r)) :named a180))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$cv (fun_app$bs (rel_fun$ap ?v0) ?v1) (rel_fun$cw (fun_app$bg (rel_fun$ uu$) ?v0) (rel_fun$bh uu$ ?v1)) comp$s comp$s)) :named a181))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$cf (fun_app$bg (rel_fun$ ?v0) ?v1) (rel_fun$cg (rel_fun$bk ?v2 ?v0) (fun_app$bg (rel_fun$ ?v2) ?v1)) comp$e comp$e)) :named a182))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$bt (rel_fun$bb ?v0 ?v1) (rel_fun$bu (fun_app$bg (rel_fun$ ?v2) ?v0) (fun_app$bg (rel_fun$ ?v2) ?v1)) comp$ comp$)) :named a183))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$ch (fun_app$bg (rel_fun$ ?v0) ?v1) (rel_fun$ci (rel_fun$cj ?v2 ?v0) (fun_app$bu (rel_fun$ax ?v2) ?v1)) comp$d comp$d)) :named a184))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$ck (fun_app$bu (rel_fun$ax ?v0) ?v1) (rel_fun$cl (rel_fun$bj ?v2 ?v0) (fun_app$bg (rel_fun$ ?v2) ?v1)) comp$n comp$n)) :named a185))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$bv (rel_fun$bb ?v0 ?v1) (rel_fun$bw (fun_app$bu (rel_fun$ax ?v2) ?v0) (fun_app$bu (rel_fun$ax ?v2) ?v1)) comp$i comp$i)) :named a186))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$co (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cp (fun_app$bg (rel_fun$ ?v2) ?v0) (rel_fun$cq ?v2 ?v1)) comp$p comp$p)) :named a187))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$cm (fun_app$bu (rel_fun$ax ?v0) ?v1) (rel_fun$cn (rel_fun$bu ?v2 ?v0) (fun_app$bu (rel_fun$ax ?v2) ?v1)) comp$o comp$o)) :named a188))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cr (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cs (rel_fun$bb ?v2 ?v0) (fun_app$bt (rel_fun$av ?v2) ?v1)) comp$q comp$q)) :named a189))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$cv (fun_app$bs (rel_fun$ap ?v0) ?v1) (rel_fun$cw (fun_app$bg (rel_fun$ ?v2) ?v0) (rel_fun$bh ?v2 ?v1)) comp$s comp$s)) :named a190))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$ct (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cu (fun_app$bu (rel_fun$ax ?v2) ?v0) (rel_fun$ar ?v2 ?v1)) comp$r comp$r)) :named a191))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$cf (fun_app$bg (rel_fun$ ?v0) ?v1) (rel_fun$cg (rel_fun$bk ?v2 ?v0) (fun_app$bg (rel_fun$ ?v2) ?v1)) comp$e comp$e)) :named a192))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$bt (rel_fun$bb ?v0 ?v1) (rel_fun$bu (fun_app$bg (rel_fun$ ?v2) ?v0) (fun_app$bg (rel_fun$ ?v2) ?v1)) comp$ comp$)) :named a193))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$ch (fun_app$bg (rel_fun$ ?v0) ?v1) (rel_fun$ci (rel_fun$cj ?v2 ?v0) (fun_app$bu (rel_fun$ax ?v2) ?v1)) comp$d comp$d)) :named a194))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$ck (fun_app$bu (rel_fun$ax ?v0) ?v1) (rel_fun$cl (rel_fun$bj ?v2 ?v0) (fun_app$bg (rel_fun$ ?v2) ?v1)) comp$n comp$n)) :named a195))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$bv (rel_fun$bb ?v0 ?v1) (rel_fun$bw (fun_app$bu (rel_fun$ax ?v2) ?v0) (fun_app$bu (rel_fun$ax ?v2) ?v1)) comp$i comp$i)) :named a196))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$co (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cp (fun_app$bg (rel_fun$ ?v2) ?v0) (rel_fun$cq ?v2 ?v1)) comp$p comp$p)) :named a197))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$cm (fun_app$bu (rel_fun$ax ?v0) ?v1) (rel_fun$cn (rel_fun$bu ?v2 ?v0) (fun_app$bu (rel_fun$ax ?v2) ?v1)) comp$o comp$o)) :named a198))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cr (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cs (rel_fun$bb ?v2 ?v0) (fun_app$bt (rel_fun$av ?v2) ?v1)) comp$q comp$q)) :named a199))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_a_bool_fun_fun$)) (rel_fun$cv (fun_app$bs (rel_fun$ap ?v0) ?v1) (rel_fun$cw (fun_app$bg (rel_fun$ ?v2) ?v0) (rel_fun$bh ?v2 ?v1)) comp$s comp$s)) :named a200))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$)) (rel_fun$ct (fun_app$bt (rel_fun$av ?v0) ?v1) (rel_fun$cu (fun_app$bu (rel_fun$ax ?v2) ?v0) (rel_fun$ar ?v2 ?v1)) comp$r comp$r)) :named a201))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cx ?v0 (rel_fun$cy (fun_app$bu (rel_fun$ax ?v0) ?v1) ?v1) uun$ uun$)) :named a202))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$cz ?v0 (rel_fun$ca (fun_app$bs (rel_fun$ap ?v0) ?v1) ?v1) uuo$ uuo$)) :named a203))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$da ?v0 (rel_fun$db (fun_app$bt (rel_fun$av ?v0) ?v1) ?v1) uup$ uup$)) :named a204))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$bi ?v0 (fun_app$bu (rel_fun$ax (fun_app$bg (rel_fun$ ?v0) ?v1)) ?v1) uuq$ uuq$)) :named a205))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$cx ?v0 (rel_fun$cy (fun_app$bu (rel_fun$ax ?v0) ?v1) ?v1) uun$ uun$)) :named a206))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$cz ?v0 (rel_fun$ca (fun_app$bs (rel_fun$ap ?v0) ?v1) ?v1) uuo$ uuo$)) :named a207))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$da ?v0 (rel_fun$db (fun_app$bt (rel_fun$av ?v0) ?v1) ?v1) uup$ uup$)) :named a208))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$bi ?v0 (fun_app$bu (rel_fun$ax (fun_app$bg (rel_fun$ ?v0) ?v1)) ?v1) uuq$ uuq$)) :named a209))
(assert (! (= (fun_app$bg (rel_fun$ uu$) uuc$) uum$) :named a210))
(assert (! (= (fun_app$bu (rel_fun$ax uum$) uuc$) uur$) :named a211))
(assert (! (= (fun_app$bs (rel_fun$ap uuc$) uuh$) uus$) :named a212))
(assert (! (= (fun_app$bt (rel_fun$av uuc$) uuj$) uuh$) :named a213))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A$) (?v5 A$)) (=> (and (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ ?v0) ?v1) ?v2) ?v3) (and (fun_app$ad (fun_app$ae ?v0 ?v4) ?v5) (=> (fun_app$c (fun_app$d ?v1 (fun_app$an ?v2 ?v4)) (fun_app$an ?v3 ?v5)) false))) false)) :named a214))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v4 A_a_b_c_sp_mu_fun$) (?v5 A_a_b_c_sp_mu_fun$)) (=> (and (fun_app$v (fun_app$w (fun_app$bu (rel_fun$ax ?v0) ?v1) ?v2) ?v3) (and (fun_app$x (fun_app$y ?v0 ?v4) ?v5) (=> (fun_app$c (fun_app$d ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v5)) false))) false)) :named a215))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (=> (and (fun_app$l (fun_app$m (fun_app$bs (rel_fun$ap ?v0) ?v1) ?v2) ?v3) (and (fun_app$c (fun_app$d ?v0 ?v4) ?v5) (=> (fun_app$j (fun_app$k ?v1 (fun_app$a ?v2 ?v4)) (fun_app$a ?v3 ?v5)) false))) false)) :named a216))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (=> (and (fun_app$j (fun_app$k (fun_app$bt (rel_fun$av ?v0) ?v1) ?v2) ?v3) (and (fun_app$c (fun_app$d ?v0 ?v4) ?v5) (=> (fun_app$b (fun_app$e ?v1 (fun_app$ ?v2 ?v4)) (fun_app$ ?v3 ?v5)) false))) false)) :named a217))
(assert (! (forall ((?v0 A_a_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A$)) (=> (and (fun_app$x (fun_app$y (fun_app$bg (rel_fun$ ?v0) ?v1) ?v2) ?v3) (fun_app$ad (fun_app$ae ?v0 ?v4) ?v4)) (fun_app$c (fun_app$d ?v1 (fun_app$an ?v2 ?v4)) (fun_app$an ?v3 ?v4)))) :named a218))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun_a_a_b_c_sp_mu_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun_a_b_c_sp_mu_fun$) (?v4 A_a_b_c_sp_mu_fun$)) (=> (and (fun_app$v (fun_app$w (fun_app$bu (rel_fun$ax ?v0) ?v1) ?v2) ?v3) (fun_app$x (fun_app$y ?v0 ?v4) ?v4)) (fun_app$c (fun_app$d ?v1 (fun_app$al ?v2 ?v4)) (fun_app$al ?v3 ?v4)))) :named a219))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v4 A_b_c_sp_mu$)) (=> (and (fun_app$l (fun_app$m (fun_app$bs (rel_fun$ap ?v0) ?v1) ?v2) ?v3) (fun_app$c (fun_app$d ?v0 ?v4) ?v4)) (fun_app$j (fun_app$k ?v1 (fun_app$a ?v2 ?v4)) (fun_app$a ?v3 ?v4)))) :named a220))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$) (?v4 A_b_c_sp_mu$)) (=> (and (fun_app$j (fun_app$k (fun_app$bt (rel_fun$av ?v0) ?v1) ?v2) ?v3) (fun_app$c (fun_app$d ?v0 ?v4) ?v4)) (fun_app$b (fun_app$e ?v1 (fun_app$ ?v2 ?v4)) (fun_app$ ?v3 ?v4)))) :named a221))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$dc (rel_fun$dd ?v0 (rel_fun$de ?v1 uud$)) (rel_fun$df (fun_app$br (rel_fun$aj uuc$) ?v0) (rel_fun$dg (fun_app$br (rel_fun$aj uuc$) ?v1) uud$)) (rel_fun$ap uuc$) (rel_fun$av uuc$))) :named a222))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$dh (rel_fun$di ?v0 (rel_fun$dj ?v1 uud$)) (rel_fun$dk (fun_app$bq (rel_fun$x uuc$) ?v0) (rel_fun$dl (fun_app$bq (rel_fun$x uuc$) ?v1) uud$)) (rel_fun$av uuc$) (rel_fun$ap uuc$))) :named a223))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$dm (rel_fun$br ?v0 (rel_fun$bs ?v1 uud$)) (rel_fun$dn (fun_app$bg (rel_fun$ uu$) ?v0) (rel_fun$do (fun_app$bg (rel_fun$ uu$) ?v1) uud$)) (rel_fun$ uu$) (rel_fun$ uu$))) :named a224))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$dp (rel_fun$br ?v0 (rel_fun$bs ?v1 uud$)) (rel_fun$dq (fun_app$bu (rel_fun$ax uum$) ?v0) (rel_fun$dr (fun_app$bu (rel_fun$ax uum$) ?v1) uud$)) (rel_fun$ax uum$) (rel_fun$ax uum$))) :named a225))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$ds (rel_fun$dt ?v0 (rel_fun$du ?v1 uud$)) (rel_fun$dv (fun_app$bs (rel_fun$ap uuc$) ?v0) (rel_fun$dw (fun_app$bs (rel_fun$ap uuc$) ?v1) uud$)) (rel_fun$ap uuc$) (rel_fun$ap uuc$))) :named a226))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$dx (rel_fun$dy ?v0 (rel_fun$dz ?v1 uud$)) (rel_fun$ea (fun_app$bs (rel_fun$ap uuc$) ?v0) (rel_fun$du (fun_app$bt (rel_fun$av uuc$) ?v1) uud$)) (rel_fun$aj uuc$) (rel_fun$aj uuc$))) :named a227))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$eb (rel_fun$ec ?v0 (rel_fun$du ?v1 uud$)) (rel_fun$ed (fun_app$bt (rel_fun$av uuc$) ?v0) (rel_fun$dw (fun_app$bs (rel_fun$ap uuc$) ?v1) uud$)) (rel_fun$x uuc$) (rel_fun$x uuc$))) :named a228))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$ee (rel_fun$ef ?v0 (rel_fun$dz ?v1 uud$)) (rel_fun$dt (fun_app$bt (rel_fun$av uuc$) ?v0) (rel_fun$du (fun_app$bt (rel_fun$av uuc$) ?v1) uud$)) (rel_fun$av uuc$) (rel_fun$av uuc$))) :named a229))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_a_fun$)) (= (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$bz (fun_app$ca comp$e ?v1) ?v2)) (fun_app$bz (fun_app$ca comp$e (fun_app$be (fun_app$bf comp$ ?v0) ?v1)) ?v2))) :named a230))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v2 A_a_b_c_sp_mu_fun$)) (= (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$be (fun_app$bf comp$ ?v1) ?v2)) (fun_app$be (fun_app$bf comp$ (fun_app$cv (comp$h ?v0) ?v1)) ?v2))) :named a231))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v5 A_b_c_sp_mu_a_b_c_sp_mu_fun$)) (=> (and (= (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)) (= (fun_app$cv (comp$h ?v4) ?v2) ?v5)) (= (fun_app$bz (fun_app$ca comp$e (fun_app$be (fun_app$bf comp$ ?v4) ?v0)) ?v1) (fun_app$be (fun_app$bf comp$ ?v5) ?v3)))) :named a232))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_fun$) (?v4 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v5 A_a_b_c_sp_mu_fun$)) (=> (and (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) (fun_app$bz (fun_app$ca comp$e ?v2) ?v3)) (= (fun_app$be (fun_app$bf comp$ ?v4) ?v2) ?v5)) (= (fun_app$be (fun_app$bf comp$ (fun_app$cv (comp$h ?v4) ?v0)) ?v1) (fun_app$bz (fun_app$ca comp$e ?v5) ?v3)))) :named a233))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v5 A_b_c_sp_mu_a_b_c_sp_mu_fun$)) (=> (and (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)) (= (fun_app$cv (comp$h ?v4) ?v2) ?v5)) (= (fun_app$be (fun_app$bf comp$ (fun_app$cv (comp$h ?v4) ?v0)) ?v1) (fun_app$be (fun_app$bf comp$ ?v5) ?v3)))) :named a234))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v4 A_a_b_c_sp_mu_fun$) (?v5 A_a_b_c_sp_mu_fun$)) (=> (and (= (fun_app$cv (comp$h ?v0) ?v1) (fun_app$cv (comp$h ?v2) ?v3)) (= (fun_app$be (fun_app$bf comp$ ?v3) ?v4) ?v5)) (= (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$be (fun_app$bf comp$ ?v1) ?v4)) (fun_app$be (fun_app$bf comp$ ?v2) ?v5)))) :named a235))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$) (?v4 A_a_fun$) (?v5 A_a_b_c_sp_mu_fun$)) (=> (and (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)) (= (fun_app$bz (fun_app$ca comp$e ?v3) ?v4) ?v5)) (= (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$bz (fun_app$ca comp$e ?v1) ?v4)) (fun_app$be (fun_app$bf comp$ ?v2) ?v5)))) :named a236))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$) (?v1 A_a_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_fun$)) (=> (= (fun_app$bz (fun_app$ca comp$e ?v0) ?v1) ?v2) (= (fun_app$bz (fun_app$ca comp$e (fun_app$be (fun_app$bf comp$ ?v3) ?v0)) ?v1) (fun_app$be (fun_app$bf comp$ ?v3) ?v2)))) :named a237))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_fun$)) (=> (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2) (= (fun_app$be (fun_app$bf comp$ (fun_app$cv (comp$h ?v3) ?v0)) ?v1) (fun_app$be (fun_app$bf comp$ ?v3) ?v2)))) :named a238))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v3 A_a_b_c_sp_mu_fun$)) (=> (= (fun_app$cv (comp$h ?v0) ?v1) ?v2) (= (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$be (fun_app$bf comp$ ?v1) ?v3)) (fun_app$be (fun_app$bf comp$ ?v2) ?v3)))) :named a239))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_fun$) (?v1 A_a_b_c_sp_mu_fun$) (?v2 A_a_b_c_sp_mu_fun$) (?v3 A_a_fun$)) (=> (= (fun_app$be (fun_app$bf comp$ ?v0) ?v1) ?v2) (= (fun_app$be (fun_app$bf comp$ ?v0) (fun_app$bz (fun_app$ca comp$e ?v1) ?v3)) (fun_app$bz (fun_app$ca comp$e ?v2) ?v3)))) :named a240))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$) (?v4 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_fun$)) (= (fun_app$l (fun_app$m (fun_app$bs (rel_fun$ap ?v0) (fun_app$bt (rel_fun$av ?v1) ?v2)) ?v3) ?v4) (forall ((?v5 A_b_c_sp_mu$) (?v6 A_b_c_sp_mu$)) (=> (fun_app$c (fun_app$d ?v0 ?v5) ?v6) (fun_app$j (fun_app$k (fun_app$bt (rel_fun$av ?v1) ?v2) (fun_app$a ?v3 ?v5)) (fun_app$a ?v4 ?v6)))))) :named a241))
(assert (! (forall ((?v0 A_b_c_sp_mu_bool_fun$) (?v1 A_b_c_sp_mu_bool_fun$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$)) (! (= (fun_app$b (fun_app$cy (pred_prod$ ?v0) ?v1) (pair$ ?v2 ?v3)) (and (fun_app$c ?v0 ?v2) (fun_app$c ?v1 ?v3))) :pattern ((fun_app$b (fun_app$cy (pred_prod$ ?v0) ?v1) (pair$ ?v2 ?v3))))) :named a242))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 B_nat_fun$) (?v2 C_nat_fun$) (?v3 B$) (?v4 C$)) (! (= (fun_app$cp (size_sp_mu$ ?v0 ?v1 ?v2) (fun_app$ay (fun_app$az put$ ?v3) ?v4)) (fun_app$cz (plus$ (fun_app$cz (plus$ (fun_app$bv ?v1 ?v3)) (fun_app$da ?v2 ?v4))) (suc$ zero$))) :pattern ((fun_app$cp (size_sp_mu$ ?v0 ?v1 ?v2) (fun_app$ay (fun_app$az put$ ?v3) ?v4))))) :named a243))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v2) ?v1)) (= ?v0 ?v2))) :named a244))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v0) ?v2)) (= ?v1 ?v2))) :named a245))
(assert (! (forall ((?v0 Nat$)) (= (fun_app$cz (plus$ zero$) ?v0) ?v0)) :named a246))
(assert (! (forall ((?v0 Nat$)) (= (fun_app$cz (plus$ zero$) ?v0) ?v0)) :named a247))
(assert (! (forall ((?v0 Nat$)) (= (fun_app$cz (plus$ ?v0) zero$) ?v0)) :named a248))
(assert (! (forall ((?v0 Nat$)) (= (fun_app$cz (plus$ ?v0) zero$) ?v0)) :named a249))
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$cz (plus$ ?v0) zero$) ?v0) :pattern ((plus$ ?v0)))) :named a250))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (fun_app$cz (plus$ ?v0) ?v1) zero$) (and (= ?v0 zero$) (= ?v1 zero$)))) :named a251))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (! (= (fun_app$cz (plus$ ?v0) (suc$ ?v1)) (suc$ (fun_app$cz (plus$ ?v0) ?v1))) :pattern ((fun_app$cz (plus$ ?v0) (suc$ ?v1))))) :named a252))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v2) ?v1)) (= ?v0 ?v2))) :named a253))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v0) ?v2)) (= ?v1 ?v2))) :named a254))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v1)) ?v2) (fun_app$cz (plus$ ?v0) (fun_app$cz (plus$ ?v1) ?v2)))) :named a255))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v1)) ?v2) (fun_app$cz (plus$ ?v0) (fun_app$cz (plus$ ?v1) ?v2)))) :named a256))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$cz (plus$ ?v0) (fun_app$cz (plus$ ?v1) ?v2)) (fun_app$cz (plus$ ?v1) (fun_app$cz (plus$ ?v0) ?v2)))) :named a257))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v1) ?v0))) :named a258))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (=> (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v2) ?v1)) (= ?v0 ?v2))) :named a259))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (=> (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v0) ?v2)) (= ?v1 ?v2))) :named a260))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (=> (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v0) ?v2)) (= ?v1 ?v2))) :named a261))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$) (?v3 Nat$)) (=> (and (= ?v0 ?v1) (= ?v2 ?v3)) (= (fun_app$cz (plus$ ?v0) ?v2) (fun_app$cz (plus$ ?v1) ?v3)))) :named a262))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (=> (= (fun_app$cz (plus$ ?v0) ?v1) ?v0) (= ?v1 zero$))) :named a263))
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$cz (plus$ zero$) ?v0) ?v0) :pattern ((fun_app$cz (plus$ zero$) ?v0)))) :named a264))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (! (= (fun_app$cz (plus$ (suc$ ?v0)) ?v1) (suc$ (fun_app$cz (plus$ ?v0) ?v1))) :pattern ((fun_app$cz (plus$ (suc$ ?v0)) ?v1)))) :named a265))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (! (= (fun_app$cz (plus$ (suc$ ?v0)) ?v1) (fun_app$cz (plus$ ?v0) (suc$ ?v1))) :pattern ((fun_app$cz (plus$ (suc$ ?v0)) ?v1)))) :named a266))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (suc$ zero$) (fun_app$cz (plus$ ?v0) ?v1)) (or (and (= ?v0 (suc$ zero$)) (= ?v1 zero$)) (and (= ?v0 zero$) (= ?v1 (suc$ zero$)))))) :named a267))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= (fun_app$cz (plus$ ?v0) ?v1) (suc$ zero$)) (or (and (= ?v0 (suc$ zero$)) (= ?v1 zero$)) (and (= ?v0 zero$) (= ?v1 (suc$ zero$)))))) :named a268))
(assert (! (forall ((?v0 Nat$)) (! (= (triangle$ (suc$ ?v0)) (fun_app$cz (plus$ (triangle$ ?v0)) (suc$ ?v0))) :pattern ((suc$ ?v0)))) :named a269))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (= ?v0 (fun_app$cz (plus$ ?v0) ?v1)) (= ?v1 zero$))) :named a270))
(assert (! (forall ((?v0 Nat$)) (= (fun_app$cz (plus$ ?v0) zero$) ?v0)) :named a271))
(assert (! (forall ((?v0 Nat$)) (= (fun_app$cz (plus$ zero$) ?v0) ?v0)) :named a272))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_a_b_c_sp_mu_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun_bool_fun_fun$)) (rel_fun$eg (rel_fun$eh (rel_fun$bg uu$ (rel_prod$ (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) ?v2) (rel_fun$am (rel_fun$an ?v0 (rel_fun$ao ?v1 ?v2)) (fun_app$bs (rel_fun$ap (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2)) rec_sp_mu$ rec_sp_mu$)) :named a273))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun_fun$)) (rel_fun$ei (rel_fun$ej (rel_fun$ek uu$ (rel_prod$a (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) ?v2) (rel_fun$as (rel_fun$at ?v0 (rel_fun$au ?v1 ?v2)) (fun_app$bt (rel_fun$av (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2)) rec_sp_mu$a rec_sp_mu$a)) :named a274))
(assert (! (forall ((?v0 B_b_bool_fun_fun$) (?v1 C_c_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$el (rel_fun$em (rel_fun$cq uu$ (fun_app$db (fun_app$dc rel_prod$b (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1)) ?v2)) ?v2) (rel_fun$ay (rel_fun$az ?v0 (rel_fun$ba ?v1 ?v2)) (rel_fun$bb (fun_app$ba (fun_app$bb rel_sp_mu$ ?v0) ?v1) ?v2)) rec_sp_mu$b rec_sp_mu$b)) :named a275))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu$) (?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (! (= (fun_app$b (fun_app$e (fun_app$db (fun_app$dc rel_prod$b ?v0) ?v1) (pair$ ?v2 ?v3)) (pair$ ?v4 ?v5)) (and (fun_app$c (fun_app$d ?v0 ?v2) ?v4) (fun_app$c (fun_app$d ?v1 ?v3) ?v5))) :pattern ((fun_app$b (fun_app$e (fun_app$db (fun_app$dc rel_prod$b ?v0) ?v1) (pair$ ?v2 ?v3)) (pair$ ?v4 ?v5))))) :named a276))
(assert (! (= (triangle$ zero$) zero$) :named a277))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (= (fun_app$b (fun_app$e (fun_app$db (fun_app$dc rel_prod$b ?v0) ?v1) ?v2) ?v3) (exists ((?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$) (?v6 A_b_c_sp_mu$) (?v7 A_b_c_sp_mu$)) (and (= ?v2 (pair$ ?v4 ?v6)) (and (= ?v3 (pair$ ?v5 ?v7)) (and (fun_app$c (fun_app$d ?v0 ?v4) ?v5) (fun_app$c (fun_app$d ?v1 ?v6) ?v7))))))) :named a278))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_prod$)) (=> (and (fun_app$b (fun_app$e (fun_app$db (fun_app$dc rel_prod$b ?v0) ?v1) ?v2) ?v3) (forall ((?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$) (?v6 A_b_c_sp_mu$) (?v7 A_b_c_sp_mu$)) (=> (and (= ?v2 (pair$ ?v4 ?v6)) (and (= ?v3 (pair$ ?v5 ?v7)) (and (fun_app$c (fun_app$d ?v0 ?v4) ?v5) (fun_app$c (fun_app$d ?v1 ?v6) ?v7)))) false))) false)) :named a279))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu$) (?v2 A_b_c_sp_mu$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v4 A_b_c_sp_mu$) (?v5 A_b_c_sp_mu$)) (=> (and (fun_app$c (fun_app$d ?v0 ?v1) ?v2) (fun_app$c (fun_app$d ?v3 ?v4) ?v5)) (fun_app$b (fun_app$e (fun_app$db (fun_app$dc rel_prod$b ?v0) ?v3) (pair$ ?v1 ?v4)) (pair$ ?v2 ?v5)))) :named a280))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (fun_app$l (fun_app$m (fun_app$bs (rel_fun$ap ?v0) (fun_app$bt (rel_fun$av ?v1) (fun_app$db (fun_app$dc rel_prod$b ?v0) ?v1))) uut$) uut$)) :named a281))
(assert (! (= (fun_app$db (fun_app$dc rel_prod$b uuc$) uuc$) uuj$) :named a282))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v1 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v2 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$) (?v3 A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$)) (rel_fun$en (rel_fun$br ?v0 (rel_fun$bs ?v1 uud$)) (rel_fun$eo (rel_fun$br ?v2 (rel_fun$bs ?v3 uud$)) (rel_fun$ef (fun_app$db (fun_app$dc rel_prod$b ?v0) ?v2) (rel_fun$dz (fun_app$db (fun_app$dc rel_prod$b ?v1) ?v3) uud$))) rel_prod$b rel_prod$b)) :named a283))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$) (?v3 Nat$)) (= (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v1)) (fun_app$cz (plus$ ?v2) ?v3)) (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v2)) (fun_app$cz (plus$ ?v1) ?v3)))) :named a284))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v1)) ?v2) (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v2)) ?v1))) :named a285))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v1)) ?v2) (fun_app$cz (plus$ ?v0) (fun_app$cz (plus$ ?v1) ?v2)))) :named a286))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$cz (plus$ ?v0) (fun_app$cz (plus$ ?v1) ?v2)) (fun_app$cz (plus$ (fun_app$cz (plus$ ?v0) ?v1)) ?v2))) :named a287))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat$)) (= (fun_app$cz (plus$ ?v0) (fun_app$cz (plus$ ?v1) ?v2)) (fun_app$cz (plus$ ?v1) (fun_app$cz (plus$ ?v0) ?v2)))) :named a288))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$)) (= (fun_app$cz (plus$ ?v0) ?v1) (fun_app$cz (plus$ ?v1) ?v0))) :named a289))
(check-sat)
;(get-unsat-core)
