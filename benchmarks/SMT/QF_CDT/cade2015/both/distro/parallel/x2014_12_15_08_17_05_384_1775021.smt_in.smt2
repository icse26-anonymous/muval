; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 326
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort T$ 0)
(declare-sort Dtree$ 0)
(declare-sort T_set$ 0)
(declare-sort T_T_fun$ 0)
(declare-sort Dtree_set$ 0)
(declare-sort Dtree_T_fun$ 0)
(declare-sort T_T_sum_set$ 0)
(declare-sort T_dtree_fun$ 0)
(declare-sort T_T_T_sum_fun$ 0)
(declare-sort Dtree_dtree_fun$ 0)
(declare-sort T_dtree_sum_set$ 0)
(declare-sort T_set_T_set_fun$ 0)
(declare-sort T_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_T_fun$ 0)
(declare-sort Dtree_dtree_set_fun$ 0)
(declare-sort T_T_sum_T_T_sum_fun$ 0)
(declare-sort Dtree_dtree_prod_set$ 0)
(declare-sort Dtree_T_dtree_sum_fun$ 0)
(declare-sort T_T_dtree_sum_sum_set$ 0)
(declare-sort T_dtree_sum_dtree_fun$ 0)
(declare-sort Dtree_dtree_prod_T_fun$ 0)
(declare-sort T_dtree_dtree_prod_fun$ 0)
(declare-sort Dtree_set_dtree_set_fun$ 0)
(declare-sort T_T_sum_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_T_T_sum_fun$ 0)
(declare-sort T_set_set_T_set_set_fun$ 0)
(declare-sort Dtree_dtree_dtree_prod_fun$ 0)
(declare-sort Dtree_dtree_prod_dtree_fun$ 0)
(declare-sort T_dtree_dtree_prod_sum_set$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0)
(declare-sort T_T_dtree_dtree_prod_sum_fun$ 0)
(declare-sort T_T_sum_T_T_dtree_sum_sum_fun$ 0)
(declare-sort T_T_dtree_dtree_prod_sum_sum_set$ 0)
(declare-sort T_T_dtree_sum_sum_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_T_T_dtree_sum_sum_fun$ 0)
(declare-sort T_T_T_dtree_dtree_prod_sum_sum_fun$ 0)
(declare-sort T_T_sum_T_dtree_dtree_prod_sum_fun$ 0)
(declare-sort T_dtree_dtree_prod_sum_T_T_sum_fun$ 0)
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun$ 0)
(declare-sort Dtree_dtree_prod_dtree_dtree_prod_fun$ 0)
(declare-sort T_dtree_dtree_prod_sum_T_dtree_sum_fun$ 0)
(declare-sort T_dtree_sum_T_dtree_dtree_prod_sum_fun$ 0)
(declare-sort T_T_sum_T_T_dtree_dtree_prod_sum_sum_fun$ 0)
(declare-sort Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ 0)
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0)
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ 0)
(declare-sort T_T_dtree_dtree_prod_sum_sum_T_T_dtree_sum_sum_fun$ 0)
(declare-sort T_dtree_dtree_prod_sum_T_T_dtree_dtree_prod_sum_sum_fun$ 0)
(declare-sort Dtree_dtree_dtree_prod_fun_T_dtree_sum_T_dtree_dtree_prod_sum_fun_fun$ 0)
(declare-sort Dtree_dtree_prod_dtree_fun_T_dtree_dtree_prod_sum_T_dtree_sum_fun_fun$ 0)
(declare-sort Dtree_dtree_prod_dtree_dtree_prod_fun_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun_fun$ 0)
(declare-datatypes () ((T_dtree_sum$ (inl$ (projl$ T$)) (inr$ (projr$ Dtree$)))
  (Dtree_dtree_prod$ (pair$ (fst$ Dtree$) (snd$ Dtree$)))
  (T_dtree_dtree_prod_sum$ (inl$a (projl$a T$)) (inr$a (projr$a Dtree_dtree_prod$)))
  (T_T_dtree_dtree_prod_sum_sum$ (inl$b (projl$b T$)) (inr$b (projr$b T_dtree_dtree_prod_sum$)))
  (T_T_sum$ (inl$c (projl$c T$)) (inr$c (projr$c T$)))
  (T_T_dtree_sum_sum$ (inl$d (projl$d T$)) (inr$d (projr$d T_dtree_sum$)))))
(declare-fun id$ () T_T_fun$)
(declare-fun uu$ () T_T_dtree_sum_fun$)
(declare-fun id$a () T_set_T_set_fun$)
(declare-fun id$b () T_set_set_T_set_set_fun$)
(declare-fun id$c () T_dtree_sum_T_dtree_sum_fun$)
(declare-fun id$d () T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun id$e () Dtree_dtree_fun$)
(declare-fun id$f () Dtree_set_dtree_set_fun$)
(declare-fun par$ () Dtree_dtree_prod_dtree_fun$)
(declare-fun sup$ (T_dtree_dtree_prod_sum_set$ T_dtree_dtree_prod_sum_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun tr1$ () Dtree$)
(declare-fun tr2$ () Dtree$)
(declare-fun uua$ () T_T_dtree_dtree_prod_sum_fun$)
(declare-fun uub$ () Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$)
(declare-fun uuc$ () Dtree_T_dtree_sum_fun$)
(declare-fun uud$ () Dtree_dtree_set_fun$)
(declare-fun uue$ () T_dtree_dtree_prod_sum_T_T_dtree_dtree_prod_sum_sum_fun$)
(declare-fun uuf$ () T_T_T_sum_fun$)
(declare-fun uug$ () T_dtree_sum_T_T_dtree_sum_sum_fun$)
(declare-fun uuh$ () T_T_T_sum_fun$)
(declare-fun uui$ () T_T_T_dtree_dtree_prod_sum_sum_fun$)
(declare-fun uuj$ (Dtree$) Dtree_dtree_set_fun$)
(declare-fun cont$ (Dtree$) T_dtree_sum_set$)
(declare-fun sup$a (T_dtree_sum_set$ T_dtree_sum_set$) T_dtree_sum_set$)
(declare-fun sup$b (T_set$ T_set$) T_set$)
(declare-fun sup$c (Dtree_set$ Dtree_set$) Dtree_set$)
(declare-fun sup$d (Dtree_dtree_prod_set$ Dtree_dtree_prod_set$) Dtree_dtree_prod_set$)
(declare-fun image$ (T_dtree_dtree_prod_sum_T_dtree_sum_fun$ T_dtree_dtree_prod_sum_set$) T_dtree_sum_set$)
(declare-fun par_c$ (Dtree_dtree_prod$) T_dtree_dtree_prod_sum_set$)
(declare-fun sigma$ (Dtree_set$ Dtree_dtree_set_fun$) Dtree_dtree_prod_set$)
(declare-fun image$a (T_T_dtree_dtree_prod_sum_fun$ T_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun image$b (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ Dtree_dtree_prod_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun image$c (T_dtree_sum_T_dtree_sum_fun$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun image$d (Dtree_dtree_fun$) Dtree_set_dtree_set_fun$)
(declare-fun image$e (T_dtree_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_sum_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun image$f (Dtree_dtree_dtree_prod_fun$ Dtree_set$) Dtree_dtree_prod_set$)
(declare-fun image$g (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod_set$) Dtree_set$)
(declare-fun image$h (T_T_sum_T_T_dtree_dtree_prod_sum_sum_fun$ T_T_sum_set$) T_T_dtree_dtree_prod_sum_sum_set$)
(declare-fun image$i (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun image$j (Dtree_dtree_prod_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$) Dtree_dtree_prod_set$)
(declare-fun image$k (T_T_dtree_dtree_prod_sum_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_dtree_prod_sum_sum_set$) T_T_dtree_sum_sum_set$)
(declare-fun image$l (T_dtree_dtree_prod_sum_T_T_dtree_dtree_prod_sum_sum_fun$ T_dtree_dtree_prod_sum_set$) T_T_dtree_dtree_prod_sum_sum_set$)
(declare-fun image$m (T_T_sum_T_dtree_sum_fun$ T_T_sum_set$) T_dtree_sum_set$)
(declare-fun image$n (T_dtree_fun$ T_set$) Dtree_set$)
(declare-fun image$o (T_dtree_sum_T_T_sum_fun$ T_dtree_sum_set$) T_T_sum_set$)
(declare-fun image$p (Dtree_T_fun$ Dtree_set$) T_set$)
(declare-fun image$q (T_T_sum_T_T_sum_fun$ T_T_sum_set$) T_T_sum_set$)
(declare-fun image$r (T_T_fun$) T_set_T_set_fun$)
(declare-fun image$s (T_dtree_dtree_prod_sum_T_T_sum_fun$ T_dtree_dtree_prod_sum_set$) T_T_sum_set$)
(declare-fun image$t (T_T_sum_T_dtree_dtree_prod_sum_fun$ T_T_sum_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun image$u (T_T_sum_T_T_dtree_sum_sum_fun$ T_T_sum_set$) T_T_dtree_sum_sum_set$)
(declare-fun image$v (T_T_dtree_sum_sum_T_dtree_sum_fun$ T_T_dtree_sum_sum_set$) T_dtree_sum_set$)
(declare-fun image$w (T_set_T_set_fun$) T_set_set_T_set_set_fun$)
(declare-fun image$x (T_dtree_sum_T_fun$ T_dtree_sum_set$) T_set$)
(declare-fun image$y (T_dtree_sum_dtree_fun$ T_dtree_sum_set$) Dtree_set$)
(declare-fun image$z (Dtree_dtree_prod_T_fun$ Dtree_dtree_prod_set$) T_set$)
(declare-fun member$ (T_T_dtree_sum_sum$ T_T_dtree_sum_sum_set$) Bool)
(declare-fun vimage$ (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$) Dtree_set$)
(declare-fun fun_app$ (Dtree_dtree_set_fun$ Dtree$) Dtree_set$)
(declare-fun map_sum$ (T_T_fun$) Dtree_dtree_prod_dtree_fun_T_dtree_dtree_prod_sum_T_dtree_sum_fun_fun$)
(declare-fun member$a (T_T_sum$ T_T_sum_set$) Bool)
(declare-fun member$b (T_dtree_sum$ T_dtree_sum_set$) Bool)
(declare-fun member$c (T_T_dtree_dtree_prod_sum_sum$ T_T_dtree_dtree_prod_sum_sum_set$) Bool)
(declare-fun member$d (T_dtree_dtree_prod_sum$ T_dtree_dtree_prod_sum_set$) Bool)
(declare-fun member$e (T$ T_set$) Bool)
(declare-fun member$f (Dtree_dtree_prod$ Dtree_dtree_prod_set$) Bool)
(declare-fun member$g (Dtree$ Dtree_set$) Bool)
(declare-fun vimage$a (T_T_dtree_sum_fun$ T_dtree_sum_set$) T_set$)
(declare-fun vimage$b (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$) Dtree_dtree_prod_set$)
(declare-fun vimage$c (T_dtree_dtree_prod_sum_T_T_dtree_dtree_prod_sum_sum_fun$ T_T_dtree_dtree_prod_sum_sum_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun vimage$d (T_T_T_sum_fun$ T_T_sum_set$) T_set$)
(declare-fun vimage$e (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$) T_dtree_sum_set$)
(declare-fun vimage$f (T_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$) T_set$)
(declare-fun vimage$g (T_T_T_dtree_dtree_prod_sum_sum_fun$ T_T_dtree_dtree_prod_sum_sum_set$) T_set$)
(declare-fun vimage$h (T_set_T_set_fun$) T_set_set_T_set_set_fun$)
(declare-fun vimage$i (T_dtree_sum_T_dtree_sum_fun$) T_dtree_sum_set_T_dtree_sum_set_fun$)
(declare-fun vimage$j (T_T_fun$) T_set_T_set_fun$)
(declare-fun vimage$k (T_dtree_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$) T_dtree_sum_set$)
(declare-fun vimage$l (T_dtree_dtree_prod_sum_T_dtree_sum_fun$ T_dtree_sum_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun vimage$m (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$) T_dtree_dtree_prod_sum_set$)
(declare-fun vimage$n (Dtree_dtree_fun$ Dtree_set$) Dtree_set$)
(declare-fun vimage$o (T_dtree_fun$ Dtree_set$) T_set$)
(declare-fun vimage$p (Dtree_T_fun$ T_set$) Dtree_set$)
(declare-fun vimage$q (T_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$) T_set$)
(declare-fun vimage$r (Dtree_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$) Dtree_set$)
(declare-fun vimage$s (T_dtree_sum_T_fun$ T_set$) T_dtree_sum_set$)
(declare-fun vimage$t (Dtree_dtree_prod_T_fun$ T_set$) Dtree_dtree_prod_set$)
(declare-fun fun_app$a (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ Dtree_dtree_prod$) T_dtree_dtree_prod_sum$)
(declare-fun fun_app$b (T_dtree_dtree_prod_sum_T_T_dtree_dtree_prod_sum_sum_fun$ T_dtree_dtree_prod_sum$) T_T_dtree_dtree_prod_sum_sum$)
(declare-fun fun_app$c (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum$) T_T_dtree_sum_sum$)
(declare-fun fun_app$d (Dtree_T_dtree_sum_fun$ Dtree$) T_dtree_sum$)
(declare-fun fun_app$e (T_T_T_sum_fun$ T$) T_T_sum$)
(declare-fun fun_app$f (T_T_dtree_dtree_prod_sum_fun$ T$) T_dtree_dtree_prod_sum$)
(declare-fun fun_app$g (T_T_T_dtree_dtree_prod_sum_sum_fun$ T$) T_T_dtree_dtree_prod_sum_sum$)
(declare-fun fun_app$h (T_T_dtree_sum_fun$ T$) T_dtree_sum$)
(declare-fun fun_app$i (Dtree_dtree_prod_dtree_fun_T_dtree_dtree_prod_sum_T_dtree_sum_fun_fun$ Dtree_dtree_prod_dtree_fun$) T_dtree_dtree_prod_sum_T_dtree_sum_fun$)
(declare-fun fun_app$j (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set$) T_dtree_sum_set$)
(declare-fun fun_app$k (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$) T_dtree_sum_T_dtree_sum_fun$)
(declare-fun fun_app$l (Dtree_set_dtree_set_fun$ Dtree_set$) Dtree_set$)
(declare-fun fun_app$m (Dtree_dtree_dtree_prod_fun_T_dtree_sum_T_dtree_dtree_prod_sum_fun_fun$ Dtree_dtree_dtree_prod_fun$) T_dtree_sum_T_dtree_dtree_prod_sum_fun$)
(declare-fun fun_app$n (Dtree_dtree_prod_dtree_dtree_prod_fun_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun_fun$ Dtree_dtree_prod_dtree_dtree_prod_fun$) T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$)
(declare-fun fun_app$o (T_set_T_set_fun$ T_set$) T_set$)
(declare-fun fun_app$p (Dtree_dtree_fun$ Dtree$) Dtree$)
(declare-fun fun_app$q (Dtree_dtree_dtree_prod_fun$ Dtree$) Dtree_dtree_prod$)
(declare-fun fun_app$r (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod$) Dtree$)
(declare-fun fun_app$s (Dtree_dtree_prod_dtree_dtree_prod_fun$ Dtree_dtree_prod$) Dtree_dtree_prod$)
(declare-fun fun_app$t (T_dtree_fun$ T$) Dtree$)
(declare-fun fun_app$u (Dtree_T_fun$ Dtree$) T$)
(declare-fun fun_app$v (T_T_fun$ T$) T$)
(declare-fun fun_app$w (T_dtree_dtree_prod_fun$ T$) Dtree_dtree_prod$)
(declare-fun fun_app$x (T_dtree_sum_dtree_fun$ T_dtree_sum$) Dtree$)
(declare-fun fun_app$y (Dtree_dtree_prod_T_fun$ Dtree_dtree_prod$) T$)
(declare-fun fun_app$z (T_dtree_dtree_prod_sum_T_dtree_sum_fun$ T_dtree_dtree_prod_sum$) T_dtree_sum$)
(declare-fun map_sum$a (T_T_fun$) Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$)
(declare-fun map_sum$b (T_T_fun$) Dtree_dtree_dtree_prod_fun_T_dtree_sum_T_dtree_dtree_prod_sum_fun_fun$)
(declare-fun map_sum$c (T_T_fun$ T_T_dtree_dtree_prod_sum_fun$) T_T_sum_T_T_dtree_dtree_prod_sum_sum_fun$)
(declare-fun map_sum$d (T_T_fun$) Dtree_dtree_prod_dtree_dtree_prod_fun_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun_fun$)
(declare-fun map_sum$e (T_T_fun$ T_dtree_dtree_prod_sum_T_dtree_sum_fun$) T_T_dtree_dtree_prod_sum_sum_T_T_dtree_sum_sum_fun$)
(declare-fun map_sum$f (T_T_fun$ Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$) T_dtree_dtree_prod_sum_T_T_dtree_dtree_prod_sum_sum_fun$)
(declare-fun map_sum$g (T_T_fun$ T_dtree_fun$) T_T_sum_T_dtree_sum_fun$)
(declare-fun map_sum$h (T_T_fun$ Dtree_T_fun$) T_dtree_sum_T_T_sum_fun$)
(declare-fun map_sum$i (T_T_fun$ T_T_fun$) T_T_sum_T_T_sum_fun$)
(declare-fun map_sum$j (T_T_fun$ Dtree_dtree_prod_T_fun$) T_dtree_dtree_prod_sum_T_T_sum_fun$)
(declare-fun map_sum$k (T_T_fun$ T_dtree_dtree_prod_fun$) T_T_sum_T_dtree_dtree_prod_sum_fun$)
(declare-fun map_sum$l (T_T_fun$ T_T_dtree_sum_fun$) T_T_sum_T_T_dtree_sum_sum_fun$)
(declare-fun map_sum$m (T_T_fun$ T_dtree_sum_dtree_fun$) T_T_dtree_sum_sum_T_dtree_sum_fun$)
(declare-fun fun_app$aa (T_dtree_sum_T_fun$ T_dtree_sum$) T$)
(assert (! (forall ((?v0 Dtree$)) (! (= (fun_app$ uud$ ?v0) (vimage$ uuc$ (cont$ tr2$))) :pattern ((fun_app$ uud$ ?v0)))) :named a0))
(assert (! (forall ((?v0 Dtree_dtree_prod$)) (! (= (fun_app$a uub$ ?v0) (inr$a ?v0)) :pattern ((fun_app$a uub$ ?v0)))) :named a1))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$)) (! (= (fun_app$b uue$ ?v0) (inr$b ?v0)) :pattern ((fun_app$b uue$ ?v0)))) :named a2))
(assert (! (forall ((?v0 T_dtree_sum$)) (! (= (fun_app$c uug$ ?v0) (inr$d ?v0)) :pattern ((fun_app$c uug$ ?v0)))) :named a3))
(assert (! (forall ((?v0 Dtree$)) (! (= (fun_app$d uuc$ ?v0) (inr$ ?v0)) :pattern ((fun_app$d uuc$ ?v0)))) :named a4))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$e uuf$ ?v0) (inr$c ?v0)) :pattern ((fun_app$e uuf$ ?v0)))) :named a5))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$f uua$ ?v0) (inl$a ?v0)) :pattern ((fun_app$f uua$ ?v0)))) :named a6))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$g uui$ ?v0) (inl$b ?v0)) :pattern ((fun_app$g uui$ ?v0)))) :named a7))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$h uu$ ?v0) (inl$ ?v0)) :pattern ((fun_app$h uu$ ?v0)))) :named a8))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$e uuh$ ?v0) (inl$c ?v0)) :pattern ((fun_app$e uuh$ ?v0)))) :named a9))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree$)) (! (= (fun_app$ (uuj$ ?v0) ?v1) (vimage$ uuc$ (cont$ ?v0))) :pattern ((fun_app$ (uuj$ ?v0) ?v1)))) :named a10))
(assert (! (not (= (vimage$a uu$ (image$ (fun_app$i (map_sum$ id$) par$) (sup$ (image$a uua$ (vimage$a uu$ (sup$a (cont$ tr1$) (cont$ tr2$)))) (image$b uub$ (sigma$ (vimage$ uuc$ (cont$ tr1$)) uud$))))) (vimage$a uu$ (sup$a (cont$ tr1$) (cont$ tr2$))))) :named a11))
(assert (! (forall ((?v0 Dtree_dtree_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$ uuc$ (fun_app$j (image$c (fun_app$k (map_sum$a id$) ?v0)) ?v1)) (fun_app$l (image$d ?v0) (vimage$ uuc$ ?v1)))) :named a12))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$b uub$ (image$e (fun_app$m (map_sum$b id$) ?v0) ?v1)) (image$f ?v0 (vimage$ uuc$ ?v1)))) :named a13))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_fun$) (?v1 T_dtree_dtree_prod_sum_set$)) (= (vimage$ uuc$ (image$ (fun_app$i (map_sum$ id$) ?v0) ?v1)) (image$g ?v0 (vimage$b uub$ ?v1)))) :named a14))
(assert (! (forall ((?v0 T_T_dtree_dtree_prod_sum_fun$) (?v1 T_T_sum_set$)) (= (vimage$c uue$ (image$h (map_sum$c id$ ?v0) ?v1)) (image$a ?v0 (vimage$d uuf$ ?v1)))) :named a15))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_dtree_prod_fun$) (?v1 T_dtree_dtree_prod_sum_set$)) (= (vimage$b uub$ (image$i (fun_app$n (map_sum$d id$) ?v0) ?v1)) (image$j ?v0 (vimage$b uub$ ?v1)))) :named a16))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_sum_fun$) (?v1 T_T_dtree_dtree_prod_sum_sum_set$)) (= (vimage$e uug$ (image$k (map_sum$e id$ ?v0) ?v1)) (image$ ?v0 (vimage$c uue$ ?v1)))) :named a17))
(assert (! (forall ((?v0 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$) (?v1 T_dtree_dtree_prod_sum_set$)) (= (vimage$c uue$ (image$l (map_sum$f id$ ?v0) ?v1)) (image$b ?v0 (vimage$b uub$ ?v1)))) :named a18))
(assert (! (forall ((?v0 T_dtree_fun$) (?v1 T_T_sum_set$)) (= (vimage$ uuc$ (image$m (map_sum$g id$ ?v0) ?v1)) (image$n ?v0 (vimage$d uuf$ ?v1)))) :named a19))
(assert (! (forall ((?v0 Dtree_T_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$d uuf$ (image$o (map_sum$h id$ ?v0) ?v1)) (image$p ?v0 (vimage$ uuc$ ?v1)))) :named a20))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T_T_sum_set$)) (= (vimage$d uuf$ (image$q (map_sum$i id$ ?v0) ?v1)) (fun_app$o (image$r ?v0) (vimage$d uuf$ ?v1)))) :named a21))
(assert (! (forall ((?v0 Dtree_dtree_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$a uu$ (fun_app$j (image$c (fun_app$k (map_sum$a id$) ?v0)) ?v1)) (vimage$a uu$ ?v1))) :named a22))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$f uua$ (image$e (fun_app$m (map_sum$b id$) ?v0) ?v1)) (vimage$a uu$ ?v1))) :named a23))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_fun$) (?v1 T_dtree_dtree_prod_sum_set$)) (= (vimage$a uu$ (image$ (fun_app$i (map_sum$ id$) ?v0) ?v1)) (vimage$f uua$ ?v1))) :named a24))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_dtree_prod_fun$) (?v1 T_dtree_dtree_prod_sum_set$)) (= (vimage$f uua$ (image$i (fun_app$n (map_sum$d id$) ?v0) ?v1)) (vimage$f uua$ ?v1))) :named a25))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T_T_sum_set$)) (= (vimage$d uuh$ (image$q (map_sum$i id$ ?v0) ?v1)) (vimage$d uuh$ ?v1))) :named a26))
(assert (! (forall ((?v0 Dtree_T_fun$) (?v1 T_dtree_sum_set$)) (= (vimage$d uuh$ (image$o (map_sum$h id$ ?v0) ?v1)) (vimage$a uu$ ?v1))) :named a27))
(assert (! (forall ((?v0 T_dtree_fun$) (?v1 T_T_sum_set$)) (= (vimage$a uu$ (image$m (map_sum$g id$ ?v0) ?v1)) (vimage$d uuh$ ?v1))) :named a28))
(assert (! (forall ((?v0 Dtree_dtree_prod_T_fun$) (?v1 T_dtree_dtree_prod_sum_set$)) (= (vimage$d uuh$ (image$s (map_sum$j id$ ?v0) ?v1)) (vimage$f uua$ ?v1))) :named a29))
(assert (! (forall ((?v0 T_dtree_dtree_prod_fun$) (?v1 T_T_sum_set$)) (= (vimage$f uua$ (image$t (map_sum$k id$ ?v0) ?v1)) (vimage$d uuh$ ?v1))) :named a30))
(assert (! (forall ((?v0 T_T_dtree_dtree_prod_sum_fun$) (?v1 T_T_sum_set$)) (= (vimage$g uui$ (image$h (map_sum$c id$ ?v0) ?v1)) (vimage$d uuh$ ?v1))) :named a31))
(assert (! (forall ((?v0 T$) (?v1 T_T_dtree_sum_fun$) (?v2 T_T_sum_set$)) (= (member$ (inl$d ?v0) (image$u (map_sum$l id$ ?v1) ?v2)) (member$a (inl$c ?v0) ?v2))) :named a32))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_fun$) (?v2 T_T_sum_set$)) (= (member$b (inl$ ?v0) (image$m (map_sum$g id$ ?v1) ?v2)) (member$a (inl$c ?v0) ?v2))) :named a33))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T_T_sum_set$)) (= (member$a (inl$c ?v0) (image$q (map_sum$i id$ ?v1) ?v2)) (member$a (inl$c ?v0) ?v2))) :named a34))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (member$c (inl$b ?v0) (image$l (map_sum$f id$ ?v1) ?v2)) (member$d (inl$a ?v0) ?v2))) :named a35))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_dtree_prod_sum_T_dtree_sum_fun$) (?v2 T_T_dtree_dtree_prod_sum_sum_set$)) (= (member$ (inl$d ?v0) (image$k (map_sum$e id$ ?v1) ?v2)) (member$c (inl$b ?v0) ?v2))) :named a36))
(assert (! (forall ((?v0 T$) (?v1 T_T_dtree_dtree_prod_sum_fun$) (?v2 T_T_sum_set$)) (= (member$c (inl$b ?v0) (image$h (map_sum$c id$ ?v1) ?v2)) (member$a (inl$c ?v0) ?v2))) :named a37))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set$)) (= (member$b (inl$ ?v0) (fun_app$j (image$c (fun_app$k (map_sum$a id$) ?v1)) ?v2)) (member$b (inl$ ?v0) ?v2))) :named a38))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_dtree_prod_fun$) (?v2 T_dtree_sum_set$)) (= (member$d (inl$a ?v0) (image$e (fun_app$m (map_sum$b id$) ?v1) ?v2)) (member$b (inl$ ?v0) ?v2))) :named a39))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_dtree_dtree_prod_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (member$d (inl$a ?v0) (image$i (fun_app$n (map_sum$d id$) ?v1) ?v2)) (member$d (inl$a ?v0) ?v2))) :named a40))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_dtree_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (member$b (inl$ ?v0) (image$ (fun_app$i (map_sum$ id$) ?v1) ?v2)) (member$d (inl$a ?v0) ?v2))) :named a41))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set$)) (= (member$b (inr$ ?v0) (fun_app$j (image$c (fun_app$k (map_sum$a id$) ?v1)) ?v2)) (exists ((?v3 Dtree$)) (and (member$b (inr$ ?v3) ?v2) (= (fun_app$p ?v1 ?v3) ?v0))))) :named a42))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 Dtree_dtree_dtree_prod_fun$) (?v2 T_dtree_sum_set$)) (= (member$d (inr$a ?v0) (image$e (fun_app$m (map_sum$b id$) ?v1) ?v2)) (exists ((?v3 Dtree$)) (and (member$b (inr$ ?v3) ?v2) (= (fun_app$q ?v1 ?v3) ?v0))))) :named a43))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree_dtree_prod_dtree_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (member$b (inr$ ?v0) (image$ (fun_app$i (map_sum$ id$) ?v1) ?v2)) (exists ((?v3 Dtree_dtree_prod$)) (and (member$d (inr$a ?v3) ?v2) (= (fun_app$r ?v1 ?v3) ?v0))))) :named a44))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 Dtree_dtree_prod_dtree_dtree_prod_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (member$d (inr$a ?v0) (image$i (fun_app$n (map_sum$d id$) ?v1) ?v2)) (exists ((?v3 Dtree_dtree_prod$)) (and (member$d (inr$a ?v3) ?v2) (= (fun_app$s ?v1 ?v3) ?v0))))) :named a45))
(assert (! (forall ((?v0 Dtree$) (?v1 T_dtree_fun$) (?v2 T_T_sum_set$)) (= (member$b (inr$ ?v0) (image$m (map_sum$g id$ ?v1) ?v2)) (exists ((?v3 T$)) (and (member$a (inr$c ?v3) ?v2) (= (fun_app$t ?v1 ?v3) ?v0))))) :named a46))
(assert (! (forall ((?v0 T$) (?v1 Dtree_T_fun$) (?v2 T_dtree_sum_set$)) (= (member$a (inr$c ?v0) (image$o (map_sum$h id$ ?v1) ?v2)) (exists ((?v3 Dtree$)) (and (member$b (inr$ ?v3) ?v2) (= (fun_app$u ?v1 ?v3) ?v0))))) :named a47))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T_T_sum_set$)) (= (member$a (inr$c ?v0) (image$q (map_sum$i id$ ?v1) ?v2)) (exists ((?v3 T$)) (and (member$a (inr$c ?v3) ?v2) (= (fun_app$v ?v1 ?v3) ?v0))))) :named a48))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 T_dtree_dtree_prod_fun$) (?v2 T_T_sum_set$)) (= (member$d (inr$a ?v0) (image$t (map_sum$k id$ ?v1) ?v2)) (exists ((?v3 T$)) (and (member$a (inr$c ?v3) ?v2) (= (fun_app$w ?v1 ?v3) ?v0))))) :named a49))
(assert (! (forall ((?v0 Dtree$) (?v1 T_dtree_sum_dtree_fun$) (?v2 T_T_dtree_sum_sum_set$)) (= (member$b (inr$ ?v0) (image$v (map_sum$m id$ ?v1) ?v2)) (exists ((?v3 T_dtree_sum$)) (and (member$ (inr$d ?v3) ?v2) (= (fun_app$x ?v1 ?v3) ?v0))))) :named a50))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_T_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (member$a (inr$c ?v0) (image$s (map_sum$j id$ ?v1) ?v2)) (exists ((?v3 Dtree_dtree_prod$)) (and (member$d (inr$a ?v3) ?v2) (= (fun_app$y ?v1 ?v3) ?v0))))) :named a51))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_dtree_prod_sum$)) (= (= (inl$b ?v0) (inr$b ?v1)) false)) :named a52))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inl$c ?v0) (inr$c ?v1)) false)) :named a53))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_sum$)) (= (= (inl$d ?v0) (inr$d ?v1)) false)) :named a54))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod$)) (= (= (inl$a ?v0) (inr$a ?v1)) false)) :named a55))
(assert (! (forall ((?v0 T$) (?v1 Dtree$)) (= (= (inl$ ?v0) (inr$ ?v1)) false)) :named a56))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$) (?v1 T$)) (= (= (inr$b ?v0) (inl$b ?v1)) false)) :named a57))
(assert (! (forall ((?v0 T$) (?v1 T$)) (= (= (inr$c ?v0) (inl$c ?v1)) false)) :named a58))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T$)) (= (= (inr$d ?v0) (inl$d ?v1)) false)) :named a59))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 T$)) (= (= (inr$a ?v0) (inl$a ?v1)) false)) :named a60))
(assert (! (forall ((?v0 Dtree$) (?v1 T$)) (= (= (inr$ ?v0) (inl$ ?v1)) false)) :named a61))
(assert (! (= (vimage$h id$a) id$b) :named a62))
(assert (! (= (vimage$i id$c) id$d) :named a63))
(assert (! (= (vimage$j id$) id$a) :named a64))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (= (vimage$a ?v0 (sup$a ?v1 ?v2)) (sup$b (vimage$a ?v0 ?v1) (vimage$a ?v0 ?v2)))) :named a65))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (= (vimage$ ?v0 (sup$a ?v1 ?v2)) (sup$c (vimage$ ?v0 ?v1) (vimage$ ?v0 ?v2)))) :named a66))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (= (fun_app$j (vimage$i ?v0) (sup$a ?v1 ?v2)) (sup$a (fun_app$j (vimage$i ?v0) ?v1) (fun_app$j (vimage$i ?v0) ?v2)))) :named a67))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_dtree_prod_sum_fun$) (?v1 T_dtree_dtree_prod_sum_set$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (vimage$k ?v0 (sup$ ?v1 ?v2)) (sup$a (vimage$k ?v0 ?v1) (vimage$k ?v0 ?v2)))) :named a68))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_sum_fun$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (= (vimage$l ?v0 (sup$a ?v1 ?v2)) (sup$ (vimage$l ?v0 ?v1) (vimage$l ?v0 ?v2)))) :named a69))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$) (?v1 T_dtree_dtree_prod_sum_set$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (vimage$m ?v0 (sup$ ?v1 ?v2)) (sup$ (vimage$m ?v0 ?v1) (vimage$m ?v0 ?v2)))) :named a70))
(assert (! (forall ((?v0 Dtree_dtree_fun$) (?v1 Dtree_set$) (?v2 Dtree_set$)) (= (vimage$n ?v0 (sup$c ?v1 ?v2)) (sup$c (vimage$n ?v0 ?v1) (vimage$n ?v0 ?v2)))) :named a71))
(assert (! (forall ((?v0 T_dtree_fun$) (?v1 Dtree_set$) (?v2 Dtree_set$)) (= (vimage$o ?v0 (sup$c ?v1 ?v2)) (sup$b (vimage$o ?v0 ?v1) (vimage$o ?v0 ?v2)))) :named a72))
(assert (! (forall ((?v0 Dtree_T_fun$) (?v1 T_set$) (?v2 T_set$)) (= (vimage$p ?v0 (sup$b ?v1 ?v2)) (sup$c (vimage$p ?v0 ?v1) (vimage$p ?v0 ?v2)))) :named a73))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T_set$) (?v2 T_set$)) (= (fun_app$o (vimage$j ?v0) (sup$b ?v1 ?v2)) (sup$b (fun_app$o (vimage$j ?v0) ?v1) (fun_app$o (vimage$j ?v0) ?v2)))) :named a74))
(assert (! (= (image$w id$a) id$b) :named a75))
(assert (! (= (image$c id$c) id$d) :named a76))
(assert (! (= (image$d id$e) id$f) :named a77))
(assert (! (= (image$r id$) id$a) :named a78))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (=> (member$c (inl$b ?v0) (image$l (map_sum$f id$ ?v1) ?v2)) (member$d (inl$a ?v0) ?v2))) :named a79))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_dtree_prod_sum_T_dtree_sum_fun$) (?v2 T_T_dtree_dtree_prod_sum_sum_set$)) (=> (member$ (inl$d ?v0) (image$k (map_sum$e id$ ?v1) ?v2)) (member$c (inl$b ?v0) ?v2))) :named a80))
(assert (! (forall ((?v0 T$) (?v1 T_T_dtree_dtree_prod_sum_fun$) (?v2 T_T_sum_set$)) (=> (member$c (inl$b ?v0) (image$h (map_sum$c id$ ?v1) ?v2)) (member$a (inl$c ?v0) ?v2))) :named a81))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set$)) (=> (member$b (inl$ ?v0) (fun_app$j (image$c (fun_app$k (map_sum$a id$) ?v1)) ?v2)) (member$b (inl$ ?v0) ?v2))) :named a82))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_dtree_prod_fun$) (?v2 T_dtree_sum_set$)) (=> (member$d (inl$a ?v0) (image$e (fun_app$m (map_sum$b id$) ?v1) ?v2)) (member$b (inl$ ?v0) ?v2))) :named a83))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_dtree_dtree_prod_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (=> (member$d (inl$a ?v0) (image$i (fun_app$n (map_sum$d id$) ?v1) ?v2)) (member$d (inl$a ?v0) ?v2))) :named a84))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_dtree_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (=> (member$b (inl$ ?v0) (image$ (fun_app$i (map_sum$ id$) ?v1) ?v2)) (member$d (inl$a ?v0) ?v2))) :named a85))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree_dtree_fun$) (?v2 T_dtree_sum_set$)) (=> (member$b (inr$ ?v0) (fun_app$j (image$c (fun_app$k (map_sum$a id$) ?v1)) ?v2)) (exists ((?v3 Dtree$)) (and (member$b (inr$ ?v3) ?v2) (= (fun_app$p ?v1 ?v3) ?v0))))) :named a86))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 Dtree_dtree_dtree_prod_fun$) (?v2 T_dtree_sum_set$)) (=> (member$d (inr$a ?v0) (image$e (fun_app$m (map_sum$b id$) ?v1) ?v2)) (exists ((?v3 Dtree$)) (and (member$b (inr$ ?v3) ?v2) (= (fun_app$q ?v1 ?v3) ?v0))))) :named a87))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree_dtree_prod_dtree_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (=> (member$b (inr$ ?v0) (image$ (fun_app$i (map_sum$ id$) ?v1) ?v2)) (exists ((?v3 Dtree_dtree_prod$)) (and (member$d (inr$a ?v3) ?v2) (= (fun_app$r ?v1 ?v3) ?v0))))) :named a88))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 Dtree_dtree_prod_dtree_dtree_prod_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (=> (member$d (inr$a ?v0) (image$i (fun_app$n (map_sum$d id$) ?v1) ?v2)) (exists ((?v3 Dtree_dtree_prod$)) (and (member$d (inr$a ?v3) ?v2) (= (fun_app$s ?v1 ?v3) ?v0))))) :named a89))
(assert (! (forall ((?v0 Dtree$) (?v1 T_dtree_fun$) (?v2 T_T_sum_set$)) (=> (member$b (inr$ ?v0) (image$m (map_sum$g id$ ?v1) ?v2)) (exists ((?v3 T$)) (and (member$a (inr$c ?v3) ?v2) (= (fun_app$t ?v1 ?v3) ?v0))))) :named a90))
(assert (! (forall ((?v0 T$) (?v1 Dtree_T_fun$) (?v2 T_dtree_sum_set$)) (=> (member$a (inr$c ?v0) (image$o (map_sum$h id$ ?v1) ?v2)) (exists ((?v3 Dtree$)) (and (member$b (inr$ ?v3) ?v2) (= (fun_app$u ?v1 ?v3) ?v0))))) :named a91))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T_T_sum_set$)) (=> (member$a (inr$c ?v0) (image$q (map_sum$i id$ ?v1) ?v2)) (exists ((?v3 T$)) (and (member$a (inr$c ?v3) ?v2) (= (fun_app$v ?v1 ?v3) ?v0))))) :named a92))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 T_dtree_dtree_prod_fun$) (?v2 T_T_sum_set$)) (=> (member$d (inr$a ?v0) (image$t (map_sum$k id$ ?v1) ?v2)) (exists ((?v3 T$)) (and (member$a (inr$c ?v3) ?v2) (= (fun_app$w ?v1 ?v3) ?v0))))) :named a93))
(assert (! (forall ((?v0 Dtree$) (?v1 T_dtree_sum_dtree_fun$) (?v2 T_T_dtree_sum_sum_set$)) (=> (member$b (inr$ ?v0) (image$v (map_sum$m id$ ?v1) ?v2)) (exists ((?v3 T_dtree_sum$)) (and (member$ (inr$d ?v3) ?v2) (= (fun_app$x ?v1 ?v3) ?v0))))) :named a94))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_T_fun$) (?v2 T_dtree_dtree_prod_sum_set$)) (=> (member$a (inr$c ?v0) (image$s (map_sum$j id$ ?v1) ?v2)) (exists ((?v3 Dtree_dtree_prod$)) (and (member$d (inr$a ?v3) ?v2) (= (fun_app$y ?v1 ?v3) ?v0))))) :named a95))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree$)) (! (= (par_c$ (pair$ ?v0 ?v1)) (sup$ (image$a uua$ (vimage$a uu$ (sup$a (cont$ ?v0) (cont$ ?v1)))) (image$b uub$ (sigma$ (vimage$ uuc$ (cont$ ?v0)) (uuj$ ?v1))))) :pattern ((pair$ ?v0 ?v1)))) :named a96))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$) (?v1 T_T_dtree_dtree_prod_sum_fun$) (?v2 T$) (?v3 T_set$)) (=> (and (= ?v0 (fun_app$f ?v1 ?v2)) (member$e ?v2 ?v3)) (member$d ?v0 (image$a ?v1 ?v3)))) :named a97))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_dtree_prod_sum_T_dtree_sum_fun$) (?v2 T_dtree_dtree_prod_sum$) (?v3 T_dtree_dtree_prod_sum_set$)) (=> (and (= ?v0 (fun_app$z ?v1 ?v2)) (member$d ?v2 ?v3)) (member$b ?v0 (image$ ?v1 ?v3)))) :named a98))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$) (?v1 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$) (?v2 Dtree_dtree_prod$) (?v3 Dtree_dtree_prod_set$)) (=> (and (= ?v0 (fun_app$a ?v1 ?v2)) (member$f ?v2 ?v3)) (member$d ?v0 (image$b ?v1 ?v3)))) :named a99))
(assert (! (forall ((?v0 T$) (?v1 T_T_fun$) (?v2 T$) (?v3 T_set$)) (=> (and (= ?v0 (fun_app$v ?v1 ?v2)) (member$e ?v2 ?v3)) (member$e ?v0 (fun_app$o (image$r ?v1) ?v3)))) :named a100))
(assert (! (forall ((?v0 Dtree$) (?v1 T_dtree_fun$) (?v2 T$) (?v3 T_set$)) (=> (and (= ?v0 (fun_app$t ?v1 ?v2)) (member$e ?v2 ?v3)) (member$g ?v0 (image$n ?v1 ?v3)))) :named a101))
(assert (! (forall ((?v0 T$) (?v1 Dtree_T_fun$) (?v2 Dtree$) (?v3 Dtree_set$)) (=> (and (= ?v0 (fun_app$u ?v1 ?v2)) (member$g ?v2 ?v3)) (member$e ?v0 (image$p ?v1 ?v3)))) :named a102))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree_dtree_fun$) (?v2 Dtree$) (?v3 Dtree_set$)) (=> (and (= ?v0 (fun_app$p ?v1 ?v2)) (member$g ?v2 ?v3)) (member$g ?v0 (fun_app$l (image$d ?v1) ?v3)))) :named a103))
(assert (! (forall ((?v0 T$) (?v1 T_dtree_sum_T_fun$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= ?v0 (fun_app$aa ?v1 ?v2)) (member$b ?v2 ?v3)) (member$e ?v0 (image$x ?v1 ?v3)))) :named a104))
(assert (! (forall ((?v0 Dtree$) (?v1 T_dtree_sum_dtree_fun$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= ?v0 (fun_app$x ?v1 ?v2)) (member$b ?v2 ?v3)) (member$g ?v0 (image$y ?v1 ?v3)))) :named a105))
(assert (! (forall ((?v0 T$) (?v1 Dtree_dtree_prod_T_fun$) (?v2 Dtree_dtree_prod$) (?v3 Dtree_dtree_prod_set$)) (=> (and (= ?v0 (fun_app$y ?v1 ?v2)) (member$f ?v2 ?v3)) (member$e ?v0 (image$z ?v1 ?v3)))) :named a106))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 Dtree_dtree_prod_set$) (?v2 Dtree_dtree_prod_set$)) (=> (=> (not (member$f ?v0 ?v1)) (member$f ?v0 ?v2)) (member$f ?v0 (sup$d ?v2 ?v1)))) :named a107))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree_set$) (?v2 Dtree_set$)) (=> (=> (not (member$g ?v0 ?v1)) (member$g ?v0 ?v2)) (member$g ?v0 (sup$c ?v2 ?v1)))) :named a108))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T_set$)) (=> (=> (not (member$e ?v0 ?v1)) (member$e ?v0 ?v2)) (member$e ?v0 (sup$b ?v2 ?v1)))) :named a109))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$) (?v1 T_dtree_dtree_prod_sum_set$) (?v2 T_dtree_dtree_prod_sum_set$)) (=> (=> (not (member$d ?v0 ?v1)) (member$d ?v0 ?v2)) (member$d ?v0 (sup$ ?v2 ?v1)))) :named a110))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (=> (=> (not (member$b ?v0 ?v1)) (member$b ?v0 ?v2)) (member$b ?v0 (sup$a ?v2 ?v1)))) :named a111))
(assert (! (forall ((?v0 Dtree_dtree_prod$) (?v1 Dtree_dtree_prod_set$) (?v2 Dtree_dtree_prod_set$)) (= (member$f ?v0 (sup$d ?v1 ?v2)) (or (member$f ?v0 ?v1) (member$f ?v0 ?v2)))) :named a112))
(assert (! (forall ((?v0 Dtree$) (?v1 Dtree_set$) (?v2 Dtree_set$)) (= (member$g ?v0 (sup$c ?v1 ?v2)) (or (member$g ?v0 ?v1) (member$g ?v0 ?v2)))) :named a113))
(assert (! (forall ((?v0 T$) (?v1 T_set$) (?v2 T_set$)) (= (member$e ?v0 (sup$b ?v1 ?v2)) (or (member$e ?v0 ?v1) (member$e ?v0 ?v2)))) :named a114))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$) (?v1 T_dtree_dtree_prod_sum_set$) (?v2 T_dtree_dtree_prod_sum_set$)) (= (member$d ?v0 (sup$ ?v1 ?v2)) (or (member$d ?v0 ?v1) (member$d ?v0 ?v2)))) :named a115))
(assert (! (forall ((?v0 T_dtree_sum$) (?v1 T_dtree_sum_set$) (?v2 T_dtree_sum_set$)) (= (member$b ?v0 (sup$a ?v1 ?v2)) (or (member$b ?v0 ?v1) (member$b ?v0 ?v2)))) :named a116))
(assert (! (forall ((?v0 T_set$)) (! (= (fun_app$o id$a ?v0) ?v0) :pattern ((fun_app$o id$a ?v0)))) :named a117))
(assert (! (forall ((?v0 T$)) (! (= (fun_app$v id$ ?v0) ?v0) :pattern ((fun_app$v id$ ?v0)))) :named a118))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$) (?v1 T$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= (fun_app$h ?v0 ?v1) ?v2) (member$b ?v2 ?v3)) (member$e ?v1 (vimage$a ?v0 ?v3)))) :named a119))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$) (?v1 Dtree$) (?v2 T_dtree_sum$) (?v3 T_dtree_sum_set$)) (=> (and (= (fun_app$d ?v0 ?v1) ?v2) (member$b ?v2 ?v3)) (member$g ?v1 (vimage$ ?v0 ?v3)))) :named a120))
(assert (! (forall ((?v0 Dtree_T_fun$) (?v1 Dtree$) (?v2 T$) (?v3 T_set$)) (=> (and (= (fun_app$u ?v0 ?v1) ?v2) (member$e ?v2 ?v3)) (member$g ?v1 (vimage$p ?v0 ?v3)))) :named a121))
(assert (! (forall ((?v0 T_dtree_fun$) (?v1 T$) (?v2 Dtree$) (?v3 Dtree_set$)) (=> (and (= (fun_app$t ?v0 ?v1) ?v2) (member$g ?v2 ?v3)) (member$e ?v1 (vimage$o ?v0 ?v3)))) :named a122))
(assert (! (forall ((?v0 Dtree_dtree_fun$) (?v1 Dtree$) (?v2 Dtree$) (?v3 Dtree_set$)) (=> (and (= (fun_app$p ?v0 ?v1) ?v2) (member$g ?v2 ?v3)) (member$g ?v1 (vimage$n ?v0 ?v3)))) :named a123))
(assert (! (forall ((?v0 T_T_fun$) (?v1 T$) (?v2 T$) (?v3 T_set$)) (=> (and (= (fun_app$v ?v0 ?v1) ?v2) (member$e ?v2 ?v3)) (member$e ?v1 (fun_app$o (vimage$j ?v0) ?v3)))) :named a124))
(assert (! (forall ((?v0 T_dtree_dtree_prod_fun$) (?v1 T$) (?v2 Dtree_dtree_prod$) (?v3 Dtree_dtree_prod_set$)) (=> (and (= (fun_app$w ?v0 ?v1) ?v2) (member$f ?v2 ?v3)) (member$e ?v1 (vimage$q ?v0 ?v3)))) :named a125))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$) (?v1 Dtree$) (?v2 Dtree_dtree_prod$) (?v3 Dtree_dtree_prod_set$)) (=> (and (= (fun_app$q ?v0 ?v1) ?v2) (member$f ?v2 ?v3)) (member$g ?v1 (vimage$r ?v0 ?v3)))) :named a126))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$) (?v1 T_dtree_sum$) (?v2 T$) (?v3 T_set$)) (=> (and (= (fun_app$aa ?v0 ?v1) ?v2) (member$e ?v2 ?v3)) (member$b ?v1 (vimage$s ?v0 ?v3)))) :named a127))
(assert (! (forall ((?v0 Dtree_dtree_prod_T_fun$) (?v1 Dtree_dtree_prod$) (?v2 T$) (?v3 T_set$)) (=> (and (= (fun_app$y ?v0 ?v1) ?v2) (member$e ?v2 ?v3)) (member$f ?v1 (vimage$t ?v0 ?v3)))) :named a128))
(check-sat)
;(get-unsat-core)
