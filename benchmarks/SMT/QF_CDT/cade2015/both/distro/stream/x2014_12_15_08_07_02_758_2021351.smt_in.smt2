; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 38
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort Nat$ 0)
(declare-sort A_set$ 0)
(declare-sort A_a_fun$ 0)
(declare-sort Nat_set$ 0)
(declare-sort Bool_set$ 0)
(declare-sort A_nat_fun$ 0)
(declare-sort Nat_a_fun$ 0)
(declare-sort A_bool_fun$ 0)
(declare-sort Bool_a_fun$ 0)
(declare-sort Nat_nat_fun$ 0)
(declare-sort Bool_nat_fun$ 0)
(declare-sort Nat_bool_fun$ 0)
(declare-sort Bool_bool_fun$ 0)
(declare-sort A_a_fun_a_a_fun_fun$ 0)
(declare-sort A_nat_fun_a_nat_fun_fun$ 0)
(declare-sort Nat_a_fun_nat_a_fun_fun$ 0)
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun$ 0)
(declare-sort Nat_a_fun_nat_nat_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_a_fun_fun$ 0)
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0)
(declare-sort A_a_nat_fun_a_nat_fun_fun_fun$ 0)
(declare-sort A_a_bool_fun_a_bool_fun_fun_fun$ 0)
(declare-sort Nat_nat_a_fun_nat_a_fun_fun_fun$ 0)
(declare-sort Nat_nat_nat_fun_nat_nat_fun_fun_fun$ 0)
(declare-codatatypes () ((A_stream$ (sCons$ (shd$ A$) (stl$ A_stream$)))
  (Nat_stream$ (sCons$a (shd$a Nat$) (stl$a Nat_stream$)))))
(declare-fun p$ (A$) Bool)
(declare-fun s$ () A_stream$)
(declare-fun id$ () Nat_nat_fun$)
(declare-fun uu$ (A_set$) A_bool_fun$)
(declare-fun top$ () Nat_set$)
(declare-fun comp$ (A_a_fun$) Nat_a_fun_nat_a_fun_fun$)
(declare-fun snth$ (A_stream$) Nat_a_fun$)
(declare-fun sset$ (Nat_stream$) Nat_set$)
(declare-fun swap$ (A$) A_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun top$a () Bool_set$)
(declare-fun top$b () A_set$)
(declare-fun top$c () Nat_bool_fun$)
(declare-fun top$d () Bool)
(declare-fun top$e () A_bool_fun$)
(declare-fun top$f (Bool) Bool)
(declare-fun comp$a (A_nat_fun$) Nat_a_fun_nat_nat_fun_fun$)
(declare-fun comp$b (Nat_a_fun$) Nat_nat_fun_nat_a_fun_fun$)
(declare-fun comp$c (Nat_nat_fun$) Nat_nat_fun_nat_nat_fun_fun$)
(declare-fun image$ (Nat_a_fun$ Nat_set$) A_set$)
(declare-fun snth$a (Nat_stream$) Nat_nat_fun$)
(declare-fun sset$a (A_stream$) A_set$)
(declare-fun swap$a (A$) A_a_nat_fun_a_nat_fun_fun_fun$)
(declare-fun swap$b (A$) A_a_a_fun_a_a_fun_fun_fun$)
(declare-fun swap$c (Nat$) Nat_nat_a_fun_nat_a_fun_fun_fun$)
(declare-fun swap$d (Nat$) Nat_nat_nat_fun_nat_nat_fun_fun_fun$)
(declare-fun image$a (A_nat_fun$ A_set$) Nat_set$)
(declare-fun image$b (A_bool_fun$ A_set$) Bool_set$)
(declare-fun image$c (Nat_nat_fun$ Nat_set$) Nat_set$)
(declare-fun image$d (Nat_bool_fun$ Nat_set$) Bool_set$)
(declare-fun image$e (Bool_a_fun$ Bool_set$) A_set$)
(declare-fun image$f (Bool_nat_fun$ Bool_set$) Nat_set$)
(declare-fun image$g (Bool_bool_fun$ Bool_set$) Bool_set$)
(declare-fun image$h (A_a_fun$ A_set$) A_set$)
(declare-fun member$ (A$ A_set$) Bool)
(declare-fun vimage$ (Nat_a_fun$ A_set$) Nat_set$)
(declare-fun collect$ (A_bool_fun$) A_set$)
(declare-fun fun_app$ (A_bool_fun$ A$) Bool)
(declare-fun member$a (Nat$ Nat_set$) Bool)
(declare-fun member$b (Bool Bool_set$) Bool)
(declare-fun vimage$a (Nat_nat_fun$ Nat_set$) Nat_set$)
(declare-fun vimage$b (A_a_fun$ A_set$) A_set$)
(declare-fun collect$a (Nat_bool_fun$) Nat_set$)
(declare-fun fun_app$a (Nat_a_fun$ Nat$) A$)
(declare-fun fun_app$b (A_nat_fun$ A$) Nat$)
(declare-fun fun_app$c (Nat_nat_fun$ Nat$) Nat$)
(declare-fun fun_app$d (Nat_bool_fun$ Nat$) Bool)
(declare-fun fun_app$e (Bool_a_fun$ Bool) A$)
(declare-fun fun_app$f (Bool_nat_fun$ Bool) Nat$)
(declare-fun fun_app$g (Bool_bool_fun$ Bool) Bool)
(declare-fun fun_app$h (A_a_fun$ A$) A$)
(declare-fun fun_app$i (A_bool_fun_a_bool_fun_fun$ A_bool_fun$) A_bool_fun$)
(declare-fun fun_app$j (A_a_bool_fun_a_bool_fun_fun_fun$ A$) A_bool_fun_a_bool_fun_fun$)
(declare-fun fun_app$k (A_nat_fun_a_nat_fun_fun$ A_nat_fun$) A_nat_fun$)
(declare-fun fun_app$l (A_a_nat_fun_a_nat_fun_fun_fun$ A$) A_nat_fun_a_nat_fun_fun$)
(declare-fun fun_app$m (A_a_fun_a_a_fun_fun$ A_a_fun$) A_a_fun$)
(declare-fun fun_app$n (A_a_a_fun_a_a_fun_fun_fun$ A$) A_a_fun_a_a_fun_fun$)
(declare-fun fun_app$o (Nat_a_fun_nat_a_fun_fun$ Nat_a_fun$) Nat_a_fun$)
(declare-fun fun_app$p (Nat_nat_a_fun_nat_a_fun_fun_fun$ Nat$) Nat_a_fun_nat_a_fun_fun$)
(declare-fun fun_app$q (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$) Nat_nat_fun$)
(declare-fun fun_app$r (Nat_nat_nat_fun_nat_nat_fun_fun_fun$ Nat$) Nat_nat_fun_nat_nat_fun_fun$)
(declare-fun fun_app$s (Nat_a_fun_nat_nat_fun_fun$ Nat_a_fun$) Nat_nat_fun$)
(declare-fun fun_app$t (Nat_nat_fun_nat_a_fun_fun$ Nat_nat_fun$) Nat_a_fun$)
(declare-fun pred_fun$ (Nat_bool_fun$ Nat_nat_fun$) Bool)
(declare-fun pred_fun$a (Bool_bool_fun$ Nat_bool_fun$) Bool)
(declare-fun pred_fun$b (A_bool_fun$ A_a_fun$) Bool)
(declare-fun pred_fun$c (Nat_bool_fun$ A_nat_fun$) Bool)
(declare-fun pred_fun$d (Bool_bool_fun$ A_bool_fun$) Bool)
(declare-fun pred_fun$e (A_bool_fun$ Nat_a_fun$) Bool)
(declare-fun stream_all$ (A_bool_fun$ A_stream$) Bool)
(assert (! (forall ((?v0 A_set$) (?v1 A$)) (! (= (fun_app$ (uu$ ?v0) ?v1) (member$ ?v1 ?v0)) :pattern ((fun_app$ (uu$ ?v0) ?v1)))) :named a0))
(assert (! (not (= (forall ((?v0 Nat$)) (p$ (fun_app$a (snth$ s$) ?v0))) (forall ((?v0 A$)) (=> (member$ ?v0 (image$ (snth$ s$) top$)) (p$ ?v0))))) :named a1))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_stream$)) (= (stream_all$ ?v0 ?v1) (forall ((?v2 Nat$)) (fun_app$ ?v0 (fun_app$a (snth$ ?v1) ?v2))))) :named a2))
(assert (! (forall ((?v0 Nat$) (?v1 A_nat_fun$) (?v2 A$) (?v3 A_set$)) (=> (and (= ?v0 (fun_app$b ?v1 ?v2)) (member$ ?v2 ?v3)) (member$a ?v0 (image$a ?v1 ?v3)))) :named a3))
(assert (! (forall ((?v0 Bool) (?v1 A_bool_fun$) (?v2 A$) (?v3 A_set$)) (=> (and (= ?v0 (fun_app$ ?v1 ?v2)) (member$ ?v2 ?v3)) (member$b ?v0 (image$b ?v1 ?v3)))) :named a4))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_nat_fun$) (?v2 Nat$) (?v3 Nat_set$)) (=> (and (= ?v0 (fun_app$c ?v1 ?v2)) (member$a ?v2 ?v3)) (member$a ?v0 (image$c ?v1 ?v3)))) :named a5))
(assert (! (forall ((?v0 Bool) (?v1 Nat_bool_fun$) (?v2 Nat$) (?v3 Nat_set$)) (=> (and (= ?v0 (fun_app$d ?v1 ?v2)) (member$a ?v2 ?v3)) (member$b ?v0 (image$d ?v1 ?v3)))) :named a6))
(assert (! (forall ((?v0 A$) (?v1 Bool_a_fun$) (?v2 Bool) (?v3 Bool_set$)) (=> (and (= ?v0 (fun_app$e ?v1 ?v2)) (member$b ?v2 ?v3)) (member$ ?v0 (image$e ?v1 ?v3)))) :named a7))
(assert (! (forall ((?v0 Nat$) (?v1 Bool_nat_fun$) (?v2 Bool) (?v3 Bool_set$)) (=> (and (= ?v0 (fun_app$f ?v1 ?v2)) (member$b ?v2 ?v3)) (member$a ?v0 (image$f ?v1 ?v3)))) :named a8))
(assert (! (forall ((?v0 Bool) (?v1 Bool_bool_fun$) (?v2 Bool) (?v3 Bool_set$)) (=> (and (= ?v0 (fun_app$g ?v1 ?v2)) (member$b ?v2 ?v3)) (member$b ?v0 (image$g ?v1 ?v3)))) :named a9))
(assert (! (forall ((?v0 A$) (?v1 Nat_a_fun$) (?v2 Nat$) (?v3 Nat_set$)) (=> (and (= ?v0 (fun_app$a ?v1 ?v2)) (member$a ?v2 ?v3)) (member$ ?v0 (image$ ?v1 ?v3)))) :named a10))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun$) (?v2 A$) (?v3 A_set$)) (=> (and (= ?v0 (fun_app$h ?v1 ?v2)) (member$ ?v2 ?v3)) (member$ ?v0 (image$h ?v1 ?v3)))) :named a11))
(assert (! (forall ((?v0 Bool)) (= (member$b ?v0 top$a) true)) :named a12))
(assert (! (forall ((?v0 A$)) (= (member$ ?v0 top$b) true)) :named a13))
(assert (! (forall ((?v0 Nat$)) (= (member$a ?v0 top$) true)) :named a14))
(assert (! (forall ((?v0 Bool)) (member$b ?v0 top$a)) :named a15))
(assert (! (forall ((?v0 A$)) (member$ ?v0 top$b)) :named a16))
(assert (! (forall ((?v0 Nat$)) (member$a ?v0 top$)) :named a17))
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$d top$c ?v0) top$d) :pattern ((fun_app$d top$c ?v0)))) :named a18))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$ top$e ?v0) top$d) :pattern ((fun_app$ top$e ?v0)))) :named a19))
(assert (! (forall ((?v0 A_bool_fun$)) (= (= (image$b ?v0 top$b) top$a) (forall ((?v1 Bool)) (exists ((?v2 A$)) (= ?v1 (fun_app$ ?v0 ?v2)))))) :named a20))
(assert (! (forall ((?v0 A_nat_fun$)) (= (= (image$a ?v0 top$b) top$) (forall ((?v1 Nat$)) (exists ((?v2 A$)) (= ?v1 (fun_app$b ?v0 ?v2)))))) :named a21))
(assert (! (forall ((?v0 A_a_fun$)) (= (= (image$h ?v0 top$b) top$b) (forall ((?v1 A$)) (exists ((?v2 A$)) (= ?v1 (fun_app$h ?v0 ?v2)))))) :named a22))
(assert (! (forall ((?v0 Nat_a_fun$)) (= (= (image$ ?v0 top$) top$b) (forall ((?v1 A$)) (exists ((?v2 Nat$)) (= ?v1 (fun_app$a ?v0 ?v2)))))) :named a23))
(assert (! (forall ((?v0 Nat_nat_fun$)) (= (= (image$c ?v0 top$) top$) (forall ((?v1 Nat$)) (exists ((?v2 Nat$)) (= ?v1 (fun_app$c ?v0 ?v2)))))) :named a24))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool_a_fun$)) (=> (forall ((?v2 Bool)) (= (fun_app$ ?v0 (fun_app$e ?v1 ?v2)) ?v2)) (= (image$b ?v0 top$b) top$a))) :named a25))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 Nat_a_fun$)) (=> (forall ((?v2 Nat$)) (= (fun_app$b ?v0 (fun_app$a ?v1 ?v2)) ?v2)) (= (image$a ?v0 top$b) top$))) :named a26))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_a_fun$)) (=> (forall ((?v2 A$)) (= (fun_app$h ?v0 (fun_app$h ?v1 ?v2)) ?v2)) (= (image$h ?v0 top$b) top$b))) :named a27))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 A_nat_fun$)) (=> (forall ((?v2 A$)) (= (fun_app$a ?v0 (fun_app$b ?v1 ?v2)) ?v2)) (= (image$ ?v0 top$) top$b))) :named a28))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat_nat_fun$)) (=> (forall ((?v2 Nat$)) (= (fun_app$c ?v0 (fun_app$c ?v1 ?v2)) ?v2)) (= (image$c ?v0 top$) top$))) :named a29))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool)) (=> (and (= (image$b ?v0 top$b) top$a) (forall ((?v2 A$)) (=> (= ?v1 (fun_app$ ?v0 ?v2)) false))) false)) :named a30))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 Nat$)) (=> (and (= (image$a ?v0 top$b) top$) (forall ((?v2 A$)) (=> (= ?v1 (fun_app$b ?v0 ?v2)) false))) false)) :named a31))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (=> (and (= (image$h ?v0 top$b) top$b) (forall ((?v2 A$)) (=> (= ?v1 (fun_app$h ?v0 ?v2)) false))) false)) :named a32))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 A$)) (=> (and (= (image$ ?v0 top$) top$b) (forall ((?v2 Nat$)) (=> (= ?v1 (fun_app$a ?v0 ?v2)) false))) false)) :named a33))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat$)) (=> (and (= (image$c ?v0 top$) top$) (forall ((?v2 Nat$)) (=> (= ?v1 (fun_app$c ?v0 ?v2)) false))) false)) :named a34))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Bool)) (=> (= (image$b ?v0 top$b) top$a) (exists ((?v2 A$)) (= ?v1 (fun_app$ ?v0 ?v2))))) :named a35))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 Nat$)) (=> (= (image$a ?v0 top$b) top$) (exists ((?v2 A$)) (= ?v1 (fun_app$b ?v0 ?v2))))) :named a36))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (=> (= (image$h ?v0 top$b) top$b) (exists ((?v2 A$)) (= ?v1 (fun_app$h ?v0 ?v2))))) :named a37))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 A$)) (=> (= (image$ ?v0 top$) top$b) (exists ((?v2 Nat$)) (= ?v1 (fun_app$a ?v0 ?v2))))) :named a38))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat$)) (=> (= (image$c ?v0 top$) top$) (exists ((?v2 Nat$)) (= ?v1 (fun_app$c ?v0 ?v2))))) :named a39))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_nat_fun$) (?v2 Nat$)) (=> (= ?v0 (fun_app$c ?v1 ?v2)) (member$a ?v0 (image$c ?v1 top$)))) :named a40))
(assert (! (forall ((?v0 Bool) (?v1 Nat_bool_fun$) (?v2 Nat$)) (=> (= ?v0 (fun_app$d ?v1 ?v2)) (member$b ?v0 (image$d ?v1 top$)))) :named a41))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun$) (?v2 A$)) (=> (= ?v0 (fun_app$h ?v1 ?v2)) (member$ ?v0 (image$h ?v1 top$b)))) :named a42))
(assert (! (forall ((?v0 Nat$) (?v1 A_nat_fun$) (?v2 A$)) (=> (= ?v0 (fun_app$b ?v1 ?v2)) (member$a ?v0 (image$a ?v1 top$b)))) :named a43))
(assert (! (forall ((?v0 Bool) (?v1 A_bool_fun$) (?v2 A$)) (=> (= ?v0 (fun_app$ ?v1 ?v2)) (member$b ?v0 (image$b ?v1 top$b)))) :named a44))
(assert (! (forall ((?v0 A$) (?v1 Nat_a_fun$) (?v2 Nat$)) (=> (= ?v0 (fun_app$a ?v1 ?v2)) (member$ ?v0 (image$ ?v1 top$)))) :named a45))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat$)) (member$a (fun_app$c ?v0 ?v1) (image$c ?v0 top$))) :named a46))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat$)) (member$b (fun_app$d ?v0 ?v1) (image$d ?v0 top$))) :named a47))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$)) (member$ (fun_app$h ?v0 ?v1) (image$h ?v0 top$b))) :named a48))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 A$)) (member$a (fun_app$b ?v0 ?v1) (image$a ?v0 top$b))) :named a49))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A$)) (member$b (fun_app$ ?v0 ?v1) (image$b ?v0 top$b))) :named a50))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 Nat$)) (member$ (fun_app$a ?v0 ?v1) (image$ ?v0 top$))) :named a51))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_nat_fun$)) (= (pred_fun$ ?v0 ?v1) (forall ((?v2 Nat$)) (=> (member$a ?v2 (image$c ?v1 top$)) (fun_app$d ?v0 ?v2))))) :named a52))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Nat_bool_fun$)) (= (pred_fun$a ?v0 ?v1) (forall ((?v2 Bool)) (=> (member$b ?v2 (image$d ?v1 top$)) (fun_app$g ?v0 ?v2))))) :named a53))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_a_fun$)) (= (pred_fun$b ?v0 ?v1) (forall ((?v2 A$)) (=> (member$ ?v2 (image$h ?v1 top$b)) (fun_app$ ?v0 ?v2))))) :named a54))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 A_nat_fun$)) (= (pred_fun$c ?v0 ?v1) (forall ((?v2 Nat$)) (=> (member$a ?v2 (image$a ?v1 top$b)) (fun_app$d ?v0 ?v2))))) :named a55))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 A_bool_fun$)) (= (pred_fun$d ?v0 ?v1) (forall ((?v2 Bool)) (=> (member$b ?v2 (image$b ?v1 top$b)) (fun_app$g ?v0 ?v2))))) :named a56))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 Nat_a_fun$)) (= (pred_fun$e ?v0 ?v1) (forall ((?v2 A$)) (=> (member$ ?v2 (image$ ?v1 top$)) (fun_app$ ?v0 ?v2))))) :named a57))
(assert (! (= top$b (collect$ top$e)) :named a58))
(assert (! (= top$ (collect$a top$c)) :named a59))
(assert (! (exists ((?v0 Bool)) (member$b ?v0 top$a)) :named a60))
(assert (! (exists ((?v0 A$)) (member$ ?v0 top$b)) :named a61))
(assert (! (exists ((?v0 Nat$)) (member$a ?v0 top$)) :named a62))
(assert (! (forall ((?v0 Bool_set$)) (=> (forall ((?v1 Bool)) (member$b ?v1 ?v0)) (= top$a ?v0))) :named a63))
(assert (! (forall ((?v0 A_set$)) (=> (forall ((?v1 A$)) (member$ ?v1 ?v0)) (= top$b ?v0))) :named a64))
(assert (! (forall ((?v0 Nat_set$)) (=> (forall ((?v1 Nat$)) (member$a ?v1 ?v0)) (= top$ ?v0))) :named a65))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_nat_fun$)) (=> (member$ ?v0 ?v1) (member$a (fun_app$b ?v2 ?v0) (image$a ?v2 ?v1)))) :named a66))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_bool_fun$)) (=> (member$ ?v0 ?v1) (member$b (fun_app$ ?v2 ?v0) (image$b ?v2 ?v1)))) :named a67))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_nat_fun$)) (=> (member$a ?v0 ?v1) (member$a (fun_app$c ?v2 ?v0) (image$c ?v2 ?v1)))) :named a68))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_bool_fun$)) (=> (member$a ?v0 ?v1) (member$b (fun_app$d ?v2 ?v0) (image$d ?v2 ?v1)))) :named a69))
(assert (! (forall ((?v0 Bool) (?v1 Bool_set$) (?v2 Bool_a_fun$)) (=> (member$b ?v0 ?v1) (member$ (fun_app$e ?v2 ?v0) (image$e ?v2 ?v1)))) :named a70))
(assert (! (forall ((?v0 Bool) (?v1 Bool_set$) (?v2 Bool_nat_fun$)) (=> (member$b ?v0 ?v1) (member$a (fun_app$f ?v2 ?v0) (image$f ?v2 ?v1)))) :named a71))
(assert (! (forall ((?v0 Bool) (?v1 Bool_set$) (?v2 Bool_bool_fun$)) (=> (member$b ?v0 ?v1) (member$b (fun_app$g ?v2 ?v0) (image$g ?v2 ?v1)))) :named a72))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat_a_fun$)) (=> (member$a ?v0 ?v1) (member$ (fun_app$a ?v2 ?v0) (image$ ?v2 ?v1)))) :named a73))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A_a_fun$)) (=> (member$ ?v0 ?v1) (member$ (fun_app$h ?v2 ?v0) (image$h ?v2 ?v1)))) :named a74))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 Nat$) (?v3 A_nat_fun$)) (=> (and (member$ ?v0 ?v1) (= ?v2 (fun_app$b ?v3 ?v0))) (member$a ?v2 (image$a ?v3 ?v1)))) :named a75))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 Bool) (?v3 A_bool_fun$)) (=> (and (member$ ?v0 ?v1) (= ?v2 (fun_app$ ?v3 ?v0))) (member$b ?v2 (image$b ?v3 ?v1)))) :named a76))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat$) (?v3 Nat_nat_fun$)) (=> (and (member$a ?v0 ?v1) (= ?v2 (fun_app$c ?v3 ?v0))) (member$a ?v2 (image$c ?v3 ?v1)))) :named a77))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Bool) (?v3 Nat_bool_fun$)) (=> (and (member$a ?v0 ?v1) (= ?v2 (fun_app$d ?v3 ?v0))) (member$b ?v2 (image$d ?v3 ?v1)))) :named a78))
(assert (! (forall ((?v0 Bool) (?v1 Bool_set$) (?v2 A$) (?v3 Bool_a_fun$)) (=> (and (member$b ?v0 ?v1) (= ?v2 (fun_app$e ?v3 ?v0))) (member$ ?v2 (image$e ?v3 ?v1)))) :named a79))
(assert (! (forall ((?v0 Bool) (?v1 Bool_set$) (?v2 Nat$) (?v3 Bool_nat_fun$)) (=> (and (member$b ?v0 ?v1) (= ?v2 (fun_app$f ?v3 ?v0))) (member$a ?v2 (image$f ?v3 ?v1)))) :named a80))
(assert (! (forall ((?v0 Bool) (?v1 Bool_set$) (?v2 Bool) (?v3 Bool_bool_fun$)) (=> (and (member$b ?v0 ?v1) (= ?v2 (fun_app$g ?v3 ?v0))) (member$b ?v2 (image$g ?v3 ?v1)))) :named a81))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 A$) (?v3 Nat_a_fun$)) (=> (and (member$a ?v0 ?v1) (= ?v2 (fun_app$a ?v3 ?v0))) (member$ ?v2 (image$ ?v3 ?v1)))) :named a82))
(assert (! (forall ((?v0 A$) (?v1 A_set$) (?v2 A$) (?v3 A_a_fun$)) (=> (and (member$ ?v0 ?v1) (= ?v2 (fun_app$h ?v3 ?v0))) (member$ ?v2 (image$h ?v3 ?v1)))) :named a83))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool_set$) (?v2 A_bool_fun$)) (=> (forall ((?v3 A$)) (=> (member$ ?v3 (image$e ?v0 ?v1)) (fun_app$ ?v2 ?v3))) (forall ((?v3 Bool)) (=> (member$b ?v3 ?v1) (fun_app$ ?v2 (fun_app$e ?v0 ?v3)))))) :named a84))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 A_set$) (?v2 Nat_bool_fun$)) (=> (forall ((?v3 Nat$)) (=> (member$a ?v3 (image$a ?v0 ?v1)) (fun_app$d ?v2 ?v3))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v1) (fun_app$d ?v2 (fun_app$b ?v0 ?v3)))))) :named a85))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat_set$) (?v2 Nat_bool_fun$)) (=> (forall ((?v3 Nat$)) (=> (member$a ?v3 (image$c ?v0 ?v1)) (fun_app$d ?v2 ?v3))) (forall ((?v3 Nat$)) (=> (member$a ?v3 ?v1) (fun_app$d ?v2 (fun_app$c ?v0 ?v3)))))) :named a86))
(assert (! (forall ((?v0 Bool_nat_fun$) (?v1 Bool_set$) (?v2 Nat_bool_fun$)) (=> (forall ((?v3 Nat$)) (=> (member$a ?v3 (image$f ?v0 ?v1)) (fun_app$d ?v2 ?v3))) (forall ((?v3 Bool)) (=> (member$b ?v3 ?v1) (fun_app$d ?v2 (fun_app$f ?v0 ?v3)))))) :named a87))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_set$) (?v2 Bool_bool_fun$)) (=> (forall ((?v3 Bool)) (=> (member$b ?v3 (image$b ?v0 ?v1)) (fun_app$g ?v2 ?v3))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v1) (fun_app$g ?v2 (fun_app$ ?v0 ?v3)))))) :named a88))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_set$) (?v2 Bool_bool_fun$)) (=> (forall ((?v3 Bool)) (=> (member$b ?v3 (image$d ?v0 ?v1)) (fun_app$g ?v2 ?v3))) (forall ((?v3 Nat$)) (=> (member$a ?v3 ?v1) (fun_app$g ?v2 (fun_app$d ?v0 ?v3)))))) :named a89))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_set$) (?v2 Bool_bool_fun$)) (=> (forall ((?v3 Bool)) (=> (member$b ?v3 (image$g ?v0 ?v1)) (fun_app$g ?v2 ?v3))) (forall ((?v3 Bool)) (=> (member$b ?v3 ?v1) (fun_app$g ?v2 (fun_app$g ?v0 ?v3)))))) :named a90))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 Nat_set$) (?v2 A_bool_fun$)) (=> (forall ((?v3 A$)) (=> (member$ ?v3 (image$ ?v0 ?v1)) (fun_app$ ?v2 ?v3))) (forall ((?v3 Nat$)) (=> (member$a ?v3 ?v1) (fun_app$ ?v2 (fun_app$a ?v0 ?v3)))))) :named a91))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_set$) (?v2 A_bool_fun$)) (=> (forall ((?v3 A$)) (=> (member$ ?v3 (image$h ?v0 ?v1)) (fun_app$ ?v2 ?v3))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v1) (fun_app$ ?v2 (fun_app$h ?v0 ?v3)))))) :named a92))
(assert (! (forall ((?v0 Bool_a_fun$) (?v1 Bool_set$) (?v2 A_bool_fun$)) (=> (exists ((?v3 A$)) (and (member$ ?v3 (image$e ?v0 ?v1)) (fun_app$ ?v2 ?v3))) (exists ((?v3 Bool)) (and (member$b ?v3 ?v1) (fun_app$ ?v2 (fun_app$e ?v0 ?v3)))))) :named a93))
(assert (! (forall ((?v0 A_nat_fun$) (?v1 A_set$) (?v2 Nat_bool_fun$)) (=> (exists ((?v3 Nat$)) (and (member$a ?v3 (image$a ?v0 ?v1)) (fun_app$d ?v2 ?v3))) (exists ((?v3 A$)) (and (member$ ?v3 ?v1) (fun_app$d ?v2 (fun_app$b ?v0 ?v3)))))) :named a94))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat_set$) (?v2 Nat_bool_fun$)) (=> (exists ((?v3 Nat$)) (and (member$a ?v3 (image$c ?v0 ?v1)) (fun_app$d ?v2 ?v3))) (exists ((?v3 Nat$)) (and (member$a ?v3 ?v1) (fun_app$d ?v2 (fun_app$c ?v0 ?v3)))))) :named a95))
(assert (! (forall ((?v0 Bool_nat_fun$) (?v1 Bool_set$) (?v2 Nat_bool_fun$)) (=> (exists ((?v3 Nat$)) (and (member$a ?v3 (image$f ?v0 ?v1)) (fun_app$d ?v2 ?v3))) (exists ((?v3 Bool)) (and (member$b ?v3 ?v1) (fun_app$d ?v2 (fun_app$f ?v0 ?v3)))))) :named a96))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_set$) (?v2 Bool_bool_fun$)) (=> (exists ((?v3 Bool)) (and (member$b ?v3 (image$b ?v0 ?v1)) (fun_app$g ?v2 ?v3))) (exists ((?v3 A$)) (and (member$ ?v3 ?v1) (fun_app$g ?v2 (fun_app$ ?v0 ?v3)))))) :named a97))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_set$) (?v2 Bool_bool_fun$)) (=> (exists ((?v3 Bool)) (and (member$b ?v3 (image$d ?v0 ?v1)) (fun_app$g ?v2 ?v3))) (exists ((?v3 Nat$)) (and (member$a ?v3 ?v1) (fun_app$g ?v2 (fun_app$d ?v0 ?v3)))))) :named a98))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_set$) (?v2 Bool_bool_fun$)) (=> (exists ((?v3 Bool)) (and (member$b ?v3 (image$g ?v0 ?v1)) (fun_app$g ?v2 ?v3))) (exists ((?v3 Bool)) (and (member$b ?v3 ?v1) (fun_app$g ?v2 (fun_app$g ?v0 ?v3)))))) :named a99))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 Nat_set$) (?v2 A_bool_fun$)) (=> (exists ((?v3 A$)) (and (member$ ?v3 (image$ ?v0 ?v1)) (fun_app$ ?v2 ?v3))) (exists ((?v3 Nat$)) (and (member$a ?v3 ?v1) (fun_app$ ?v2 (fun_app$a ?v0 ?v3)))))) :named a100))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A_set$) (?v2 A_bool_fun$)) (=> (exists ((?v3 A$)) (and (member$ ?v3 (image$h ?v0 ?v1)) (fun_app$ ?v2 ?v3))) (exists ((?v3 A$)) (and (member$ ?v3 ?v1) (fun_app$ ?v2 (fun_app$h ?v0 ?v3)))))) :named a101))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_a_fun$) (?v3 A_a_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 A$)) (=> (member$ ?v4 ?v1) (= (fun_app$h ?v2 ?v4) (fun_app$h ?v3 ?v4))))) (= (image$h ?v2 ?v0) (image$h ?v3 ?v1)))) :named a102))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_bool_fun$) (?v3 A_bool_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 A$)) (=> (member$ ?v4 ?v1) (= (fun_app$ ?v2 ?v4) (fun_app$ ?v3 ?v4))))) (= (image$b ?v2 ?v0) (image$b ?v3 ?v1)))) :named a103))
(assert (! (forall ((?v0 A_set$) (?v1 A_set$) (?v2 A_nat_fun$) (?v3 A_nat_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 A$)) (=> (member$ ?v4 ?v1) (= (fun_app$b ?v2 ?v4) (fun_app$b ?v3 ?v4))))) (= (image$a ?v2 ?v0) (image$a ?v3 ?v1)))) :named a104))
(assert (! (forall ((?v0 Nat_set$) (?v1 Nat_set$) (?v2 Nat_nat_fun$) (?v3 Nat_nat_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 Nat$)) (=> (member$a ?v4 ?v1) (= (fun_app$c ?v2 ?v4) (fun_app$c ?v3 ?v4))))) (= (image$c ?v2 ?v0) (image$c ?v3 ?v1)))) :named a105))
(assert (! (forall ((?v0 Nat_set$) (?v1 Nat_set$) (?v2 Nat_a_fun$) (?v3 Nat_a_fun$)) (=> (and (= ?v0 ?v1) (forall ((?v4 Nat$)) (=> (member$a ?v4 ?v1) (= (fun_app$a ?v2 ?v4) (fun_app$a ?v3 ?v4))))) (= (image$ ?v2 ?v0) (image$ ?v3 ?v1)))) :named a106))
(assert (! (forall ((?v0 A$) (?v1 Bool_a_fun$) (?v2 Bool_set$)) (= (member$ ?v0 (image$e ?v1 ?v2)) (exists ((?v3 Bool)) (and (member$b ?v3 ?v2) (= ?v0 (fun_app$e ?v1 ?v3)))))) :named a107))
(assert (! (forall ((?v0 Nat$) (?v1 A_nat_fun$) (?v2 A_set$)) (= (member$a ?v0 (image$a ?v1 ?v2)) (exists ((?v3 A$)) (and (member$ ?v3 ?v2) (= ?v0 (fun_app$b ?v1 ?v3)))))) :named a108))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_nat_fun$) (?v2 Nat_set$)) (= (member$a ?v0 (image$c ?v1 ?v2)) (exists ((?v3 Nat$)) (and (member$a ?v3 ?v2) (= ?v0 (fun_app$c ?v1 ?v3)))))) :named a109))
(assert (! (forall ((?v0 Nat$) (?v1 Bool_nat_fun$) (?v2 Bool_set$)) (= (member$a ?v0 (image$f ?v1 ?v2)) (exists ((?v3 Bool)) (and (member$b ?v3 ?v2) (= ?v0 (fun_app$f ?v1 ?v3)))))) :named a110))
(assert (! (forall ((?v0 Bool) (?v1 A_bool_fun$) (?v2 A_set$)) (= (member$b ?v0 (image$b ?v1 ?v2)) (exists ((?v3 A$)) (and (member$ ?v3 ?v2) (= ?v0 (fun_app$ ?v1 ?v3)))))) :named a111))
(assert (! (forall ((?v0 Bool) (?v1 Nat_bool_fun$) (?v2 Nat_set$)) (= (member$b ?v0 (image$d ?v1 ?v2)) (exists ((?v3 Nat$)) (and (member$a ?v3 ?v2) (= ?v0 (fun_app$d ?v1 ?v3)))))) :named a112))
(assert (! (forall ((?v0 Bool) (?v1 Bool_bool_fun$) (?v2 Bool_set$)) (= (member$b ?v0 (image$g ?v1 ?v2)) (exists ((?v3 Bool)) (and (member$b ?v3 ?v2) (= ?v0 (fun_app$g ?v1 ?v3)))))) :named a113))
(assert (! (forall ((?v0 A$) (?v1 Nat_a_fun$) (?v2 Nat_set$)) (= (member$ ?v0 (image$ ?v1 ?v2)) (exists ((?v3 Nat$)) (and (member$a ?v3 ?v2) (= ?v0 (fun_app$a ?v1 ?v3)))))) :named a114))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun$) (?v2 A_set$)) (= (member$ ?v0 (image$h ?v1 ?v2)) (exists ((?v3 A$)) (and (member$ ?v3 ?v2) (= ?v0 (fun_app$h ?v1 ?v3)))))) :named a115))
(assert (! (forall ((?v0 Nat_set$) (?v1 Nat_bool_fun$)) (= (forall ((?v2 Nat$)) (=> (member$a ?v2 ?v0) (fun_app$d ?v1 ?v2))) (forall ((?v2 Nat$)) (=> (member$a ?v2 ?v0) (fun_app$d ?v1 ?v2))))) :named a116))
(assert (! (forall ((?v0 Bool_set$) (?v1 Bool_bool_fun$)) (= (forall ((?v2 Bool)) (=> (member$b ?v2 ?v0) (fun_app$g ?v1 ?v2))) (forall ((?v2 Bool)) (=> (member$b ?v2 ?v0) (fun_app$g ?v1 ?v2))))) :named a117))
(assert (! (forall ((?v0 A_set$) (?v1 A_bool_fun$)) (= (forall ((?v2 A$)) (=> (member$ ?v2 ?v0) (fun_app$ ?v1 ?v2))) (forall ((?v2 A$)) (=> (member$ ?v2 ?v0) (fun_app$ ?v1 ?v2))))) :named a118))
(assert (! (forall ((?v0 Nat_bool_fun$) (?v1 Nat_set$)) (= (not (member$b false (image$d ?v0 ?v1))) (forall ((?v2 Nat$)) (=> (member$a ?v2 ?v1) (fun_app$d ?v0 ?v2))))) :named a119))
(assert (! (forall ((?v0 Bool_bool_fun$) (?v1 Bool_set$)) (= (not (member$b false (image$g ?v0 ?v1))) (forall ((?v2 Bool)) (=> (member$b ?v2 ?v1) (fun_app$g ?v0 ?v2))))) :named a120))
(assert (! (forall ((?v0 A_bool_fun$) (?v1 A_set$)) (= (not (member$b false (image$b ?v0 ?v1))) (forall ((?v2 A$)) (=> (member$ ?v2 ?v1) (fun_app$ ?v0 ?v2))))) :named a121))
(assert (! (forall ((?v0 Nat_stream$)) (! (= (sset$ ?v0) (image$c (snth$a ?v0) top$)) :pattern ((sset$ ?v0)))) :named a122))
(assert (! (forall ((?v0 A_stream$)) (! (= (sset$a ?v0) (image$ (snth$ ?v0) top$)) :pattern ((sset$a ?v0)))) :named a123))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A_bool_fun$)) (= (= (image$b (fun_app$i (fun_app$j (swap$ ?v0) ?v1) ?v2) top$b) top$a) (= (image$b ?v2 top$b) top$a))) :named a124))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A_nat_fun$)) (= (= (image$a (fun_app$k (fun_app$l (swap$a ?v0) ?v1) ?v2) top$b) top$) (= (image$a ?v2 top$b) top$))) :named a125))
(assert (! (forall ((?v0 A$) (?v1 A$) (?v2 A_a_fun$)) (= (= (image$h (fun_app$m (fun_app$n (swap$b ?v0) ?v1) ?v2) top$b) top$b) (= (image$h ?v2 top$b) top$b))) :named a126))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat_a_fun$)) (= (= (image$ (fun_app$o (fun_app$p (swap$c ?v0) ?v1) ?v2) top$) top$b) (= (image$ ?v2 top$) top$b))) :named a127))
(assert (! (forall ((?v0 Nat$) (?v1 Nat$) (?v2 Nat_nat_fun$)) (= (= (image$c (fun_app$q (fun_app$r (swap$d ?v0) ?v1) ?v2) top$) top$) (= (image$c ?v2 top$) top$))) :named a128))
(assert (! (forall ((?v0 Nat_set$) (?v1 Nat_bool_fun$) (?v2 Nat_bool_fun$)) (=> (and (forall ((?v3 Nat$)) (=> (and (member$a ?v3 ?v0) (fun_app$d ?v1 ?v3)) (fun_app$d ?v2 ?v3))) (forall ((?v3 Nat$)) (=> (member$a ?v3 ?v0) (fun_app$d ?v1 ?v3)))) (forall ((?v3 Nat$)) (=> (member$a ?v3 ?v0) (fun_app$d ?v2 ?v3))))) :named a129))
(assert (! (forall ((?v0 Bool_set$) (?v1 Bool_bool_fun$) (?v2 Bool_bool_fun$)) (=> (and (forall ((?v3 Bool)) (=> (and (member$b ?v3 ?v0) (fun_app$g ?v1 ?v3)) (fun_app$g ?v2 ?v3))) (forall ((?v3 Bool)) (=> (member$b ?v3 ?v0) (fun_app$g ?v1 ?v3)))) (forall ((?v3 Bool)) (=> (member$b ?v3 ?v0) (fun_app$g ?v2 ?v3))))) :named a130))
(assert (! (forall ((?v0 A_set$) (?v1 A_bool_fun$) (?v2 A_bool_fun$)) (=> (and (forall ((?v3 A$)) (=> (and (member$ ?v3 ?v0) (fun_app$ ?v1 ?v3)) (fun_app$ ?v2 ?v3))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v0) (fun_app$ ?v1 ?v3)))) (forall ((?v3 A$)) (=> (member$ ?v3 ?v0) (fun_app$ ?v2 ?v3))))) :named a131))
(assert (! (forall ((?v0 Bool)) (! (= (top$f ?v0) (member$b ?v0 top$a)) :pattern ((top$f ?v0)))) :named a132))
(assert (! (forall ((?v0 A$)) (! (= (fun_app$ top$e ?v0) (member$ ?v0 top$b)) :pattern ((fun_app$ top$e ?v0)))) :named a133))
(assert (! (forall ((?v0 Nat$)) (! (= (fun_app$d top$c ?v0) (member$a ?v0 top$)) :pattern ((fun_app$d top$c ?v0)))) :named a134))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A$)) (=> (= (image$h ?v0 top$b) top$b) (= (image$h (fun_app$m (fun_app$n (swap$b ?v1) ?v2) ?v0) top$b) top$b))) :named a135))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 Nat$) (?v2 Nat$)) (=> (= (image$ ?v0 top$) top$b) (= (image$ (fun_app$o (fun_app$p (swap$c ?v1) ?v2) ?v0) top$) top$b))) :named a136))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat$) (?v2 Nat$)) (=> (= (image$c ?v0 top$) top$) (= (image$c (fun_app$q (fun_app$r (swap$d ?v1) ?v2) ?v0) top$) top$))) :named a137))
(assert (! (forall ((?v0 A_bool_fun$)) (= (forall ((?v1 A$)) (=> (member$ ?v1 top$b) (fun_app$ ?v0 ?v1))) (forall ((?v1 A$)) (fun_app$ ?v0 ?v1)))) :named a138))
(assert (! (forall ((?v0 Nat_bool_fun$)) (= (forall ((?v1 Nat$)) (=> (member$a ?v1 top$) (fun_app$d ?v0 ?v1))) (forall ((?v1 Nat$)) (fun_app$d ?v0 ?v1)))) :named a139))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 A_set$)) (=> (= (image$ ?v0 top$) top$b) (= (image$ ?v0 (vimage$ ?v0 ?v1)) ?v1))) :named a140))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat_set$)) (=> (= (image$c ?v0 top$) top$) (= (image$c ?v0 (vimage$a ?v0 ?v1)) ?v1))) :named a141))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 A_a_fun$)) (=> (and (= (image$ ?v0 top$) top$b) (= (image$h ?v1 top$b) top$b)) (= (image$ (fun_app$o (comp$ ?v1) ?v0) top$) top$b))) :named a142))
(assert (! (forall ((?v0 Nat_a_fun$) (?v1 A_nat_fun$)) (=> (and (= (image$ ?v0 top$) top$b) (= (image$a ?v1 top$b) top$)) (= (image$c (fun_app$s (comp$a ?v1) ?v0) top$) top$))) :named a143))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat_a_fun$)) (=> (and (= (image$c ?v0 top$) top$) (= (image$ ?v1 top$) top$b)) (= (image$ (fun_app$t (comp$b ?v1) ?v0) top$) top$b))) :named a144))
(assert (! (forall ((?v0 Nat_nat_fun$) (?v1 Nat_nat_fun$)) (=> (and (= (image$c ?v0 top$) top$) (= (image$c ?v1 top$) top$)) (= (image$c (fun_app$q (comp$c ?v1) ?v0) top$) top$))) :named a145))
(assert (! (= (image$c id$ top$) top$) :named a146))
(assert (! (forall ((?v0 Nat$) (?v1 Nat_set$) (?v2 Nat$) (?v3 Nat_a_fun$)) (=> (and (member$a ?v0 ?v1) (member$a ?v2 ?v1)) (= (image$ (fun_app$o (fun_app$p (swap$c ?v0) ?v2) ?v3) ?v1) (image$ ?v3 ?v1)))) :named a147))
(assert (! (forall ((?v0 A$) (?v1 A_a_fun$) (?v2 A_set$)) (= (member$ ?v0 (vimage$b ?v1 ?v2)) (member$ (fun_app$h ?v1 ?v0) ?v2))) :named a148))
(assert (! (forall ((?v0 A_a_fun$) (?v1 A$) (?v2 A$) (?v3 A_set$)) (=> (and (= (fun_app$h ?v0 ?v1) ?v2) (member$ ?v2 ?v3)) (member$ ?v1 (vimage$b ?v0 ?v3)))) :named a149))
(assert (! (forall ((?v0 A_set$)) (= (collect$ (uu$ ?v0)) ?v0)) :named a150))
(assert (! (forall ((?v0 A$) (?v1 A_bool_fun$)) (= (member$ ?v0 (collect$ ?v1)) (fun_app$ ?v1 ?v0))) :named a151))
(assert (! (forall ((?v0 Nat_nat_fun$)) (= (vimage$a ?v0 top$) top$)) :named a152))
(check-sat)
;(get-unsat-core)
