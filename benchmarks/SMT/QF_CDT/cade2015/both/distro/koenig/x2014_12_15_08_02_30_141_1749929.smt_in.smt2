; --full-saturate-quant --inst-when=full-last-call --inst-no-entail --term-db-mode=relevant --random-seed=1 --lang=smt2 --tlimit 291
;(set-option :produce-unsat-cores true)
(set-logic ALL_SUPPORTED)
(declare-sort A$ 0)
(declare-sort A_treeFI$ 0)
(declare-sort A_treeFI_set$ 0)
(declare-datatypes () ((A_treeFI_list$ (nil$) (cons$ (hd$ A_treeFI$) (tl$ A_treeFI_list$)))))
(declare-codatatypes () ((A_stream$ (sCons$ (shd$ A$) (stl$ A_stream$)))))
(declare-fun as$ () A_stream$)
(declare-fun tr$ () A_treeFI$)
(declare-fun phi$ (A_stream$ A_treeFI$) Bool)
(declare-fun set$ (A_treeFI_list$) A_treeFI_set$)
(declare-fun sub$ (A_treeFI$) A_treeFI_list$)
(declare-fun member$ (A_treeFI$ A_treeFI_set$) Bool)
(declare-fun properPath$ (A_stream$ A_treeFI$) Bool)
(assert (! (not (exists ((?v0 A_treeFI$)) (and (member$ ?v0 (set$ (sub$ tr$))) (or (phi$ (stl$ as$) ?v0) (properPath$ (stl$ as$) ?v0))))) :named a0))
(assert (! (properPath$ as$ tr$) :named a1))
(check-sat)
;(get-unsat-core)
