;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Ref$ 0 )
(declare-sort Ref_set$ 0 )
(declare-sort Dag$ 0)
(declare-fun tip$ ()Dag$)
(declare-fun select$ (Dag$)Dag$)
(declare-fun selecta$ (Dag$)Ref$)
(declare-fun selectb$ (Dag$)Dag$)
(declare-fun node$ (Dag$ Ref$ Dag$ )Dag$)
(declare-fun x$ ()Dag$ )
(declare-fun y$ ()Dag$ )
(declare-fun less$ (Dag$ Dag$ )Bool )
(declare-fun less$a (Ref_set$ Ref_set$ )Bool )
(declare-fun member$ (Ref$ Ref_set$ )Bool )
(declare-fun set_of$ (Dag$ )Ref_set$ )
(declare-fun less_eq$ (Ref_set$ Ref_set$ )Bool )
(declare-fun less_eq$a (Dag$ Dag$ )Bool )
(assert (! (not (less_eq$ (set_of$ x$ )(set_of$ y$ ))):named a0 ))
(assert (! (less$ x$ y$ ):named a1 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(=> (forall ((?v2 Ref$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a3 ))
(assert (! (forall ((?v0 Dag$ ))(less_eq$a ?v0 ?v0 )):named a4 ))
(assert (! (forall ((?v0 Ref_set$ ))(less_eq$ ?v0 ?v0 )):named a5 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$a ?v0 ?v1 )))):named a6 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$a ?v0 ?v1 )))):named a7 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$ ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$a ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$a ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$a ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (less_eq$a ?v1 ?v0 )))):pattern ((less$ ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (less_eq$ ?v1 ?v0 )))):pattern ((less$a ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less_eq$a ?v0 ?v1 )(or (less$ ?v0 ?v1 )(= ?v1 ?v0 ))):pattern ((less_eq$a ?v0 ?v1 )))):named a16 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(! (= (less_eq$ ?v0 ?v1 )(or (less$a ?v0 ?v1 )(= ?v1 ?v0 ))):pattern ((less_eq$ ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))(less$a ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ )(?v2 Ref_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less$a ?v1 ?v2 ))(less$a ?v0 ?v2 ))):named a19 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(=> (less$a ?v0 ?v1 )(less_eq$ ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ )(?v2 Ref_set$ ))(=> (and (less$a ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less$a ?v0 ?v2 ))):named a21 ))
(assert (! (forall ((?v0 Ref_set$ )(?v1 Ref_set$ ))(=> (and (less$a ?v0 ?v1 )(=> (and (less_eq$ ?v0 ?v1 )(not (less_eq$ ?v1 ?v0 )))false ))false )):named a22 ))
(check-sat )
;(get-unsat-core )
