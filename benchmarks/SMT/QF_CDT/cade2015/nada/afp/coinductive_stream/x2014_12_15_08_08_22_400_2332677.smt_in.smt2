;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_a_b_prod_fun$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_b_prod_a_fun$ 0 )
(declare-sort A_b_prod_b_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_stream_b_fun$ 0 )
(declare-sort B_a_b_prod_fun$ 0 )
(declare-sort B_a_stream_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_b_prod_fun$ 0 )
(declare-sort A_a_prod_b_a_prod_fun$ 0 )
(declare-sort A_b_prod_a_a_prod_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_fun$ 0 )
(declare-sort A_b_prod_b_b_prod_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort B_a_prod_a_a_prod_fun$ 0 )
(declare-sort B_a_prod_b_a_prod_fun$ 0 )
(declare-sort B_b_prod_a_b_prod_fun$ 0 )
(declare-sort B_b_prod_b_b_prod_fun$ 0 )
(declare-sort B_stream_b_stream_fun$ 0 )
(declare-sort A_a_b_prod_prod_a_a_prod_fun$ 0 )
(declare-sort A_a_b_prod_prod_a_b_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_b_prod_prod_fun$ 0 )
(declare-sort A_b_prod_a_a_b_prod_prod_fun$ 0 )
(declare-sort A_b_prod_a_stream_b_prod_fun$ 0 )
(declare-sort A_a_fun_a_a_prod_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_prod_b_a_prod_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_prod_a_b_prod_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_prod_b_b_prod_fun_fun$ 0 )
(declare-sort A_a_a_prod_prod_a_a_a_prod_prod_fun$ 0 )
(declare-sort A_a_b_prod_prod_a_a_b_prod_prod_fun$ 0 )
(declare-sort A_a_prod_stream_a_a_prod_stream_fun$ 0 )
(declare-sort A_b_prod_a_prod_a_b_prod_a_prod_fun$ 0 )
(declare-sort A_b_prod_b_prod_a_b_prod_b_prod_fun$ 0 )
(declare-sort A_b_prod_stream_a_b_prod_stream_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_fun$ 0 )
(declare-sort B_a_a_prod_prod_b_a_a_prod_prod_fun$ 0 )
(declare-sort B_a_b_prod_prod_b_a_b_prod_prod_fun$ 0 )
(declare-sort B_stream_stream_b_stream_stream_fun$ 0 )
(declare-sort A_a_b_prod_prod_a_a_a_b_prod_prod_prod_fun$ 0 )
(declare-sort A_a_b_prod_prod_stream_a_a_b_prod_prod_stream_fun$ 0 )
(declare-sort A_b_prod_stream_stream_a_b_prod_stream_stream_fun$ 0 )
(declare-sort A_stream_stream_stream_a_stream_stream_stream_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_fun_a_a_a_prod_prod_a_a_a_prod_prod_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_fun_a_a_b_prod_prod_a_a_b_prod_prod_fun_fun$ 0 )
(declare-sort A_b_prod$ 0)
(declare-fun fst$ (A_b_prod$)A$)
(declare-fun snd$ (A_b_prod$)B$)
(declare-fun pair$ (A$ B$ )A_b_prod$)
(declare-sort A_b_prod_stream$ 0)
(declare-sort A_stream$ 0)
(declare-sort B_stream$ 0)
(declare-fun shd$ (A_b_prod_stream$)A_b_prod$)
(declare-fun stl$ (A_b_prod_stream$)A_b_prod_stream$)
(declare-fun sCons$ (A_b_prod$ A_b_prod_stream$ )A_b_prod_stream$)
(declare-fun shd$a (A_stream$)A$)
(declare-fun stl$a (A_stream$)A_stream$)
(declare-fun sCons$a (A$ A_stream$ )A_stream$)
(declare-fun shd$b (B_stream$)B$)
(declare-fun stl$b (B_stream$)B_stream$)
(declare-fun sCons$b (B$ B_stream$ )B_stream$)
(declare-sort B_b_prod$ 0)
(declare-fun fst$a (B_b_prod$)B$)
(declare-fun snd$a (B_b_prod$)B$)
(declare-fun pair$a (B$ B$ )B_b_prod$)
(declare-sort B_b_prod_stream$ 0)
(declare-fun shd$c (B_b_prod_stream$)B_b_prod$)
(declare-fun stl$c (B_b_prod_stream$)B_b_prod_stream$)
(declare-fun sCons$c (B_b_prod$ B_b_prod_stream$ )B_b_prod_stream$)
(declare-sort B_a_prod$ 0)
(declare-fun fst$b (B_a_prod$)B$)
(declare-fun snd$b (B_a_prod$)A$)
(declare-fun pair$b (B$ A$ )B_a_prod$)
(declare-sort B_a_prod_stream$ 0)
(declare-fun shd$d (B_a_prod_stream$)B_a_prod$)
(declare-fun stl$d (B_a_prod_stream$)B_a_prod_stream$)
(declare-fun sCons$d (B_a_prod$ B_a_prod_stream$ )B_a_prod_stream$)
(declare-sort A_a_b_prod_prod$ 0)
(declare-fun fst$c (A_a_b_prod_prod$)A$)
(declare-fun snd$c (A_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$c (A$ A_b_prod$ )A_a_b_prod_prod$)
(declare-sort A_a_b_prod_prod_stream$ 0)
(declare-fun shd$e (A_a_b_prod_prod_stream$)A_a_b_prod_prod$)
(declare-fun stl$e (A_a_b_prod_prod_stream$)A_a_b_prod_prod_stream$)
(declare-fun sCons$e (A_a_b_prod_prod$ A_a_b_prod_prod_stream$ )A_a_b_prod_prod_stream$)
(declare-sort A_a_prod$ 0)
(declare-sort A_a_a_prod_prod$ 0)
(declare-fun fst$d (A_a_prod$)A$)
(declare-fun snd$d (A_a_prod$)A$)
(declare-fun pair$d (A$ A$ )A_a_prod$)
(declare-fun fst$e (A_a_a_prod_prod$)A$)
(declare-fun snd$e (A_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$e (A$ A_a_prod$ )A_a_a_prod_prod$)
(declare-sort A_a_a_prod_prod_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_a_prod_stream$ 0)
(declare-fun shd$f (A_a_a_prod_prod_stream$)A_a_a_prod_prod$)
(declare-fun stl$f (A_a_a_prod_prod_stream$)A_a_a_prod_prod_stream$)
(declare-fun sCons$f (A_a_a_prod_prod$ A_a_a_prod_prod_stream$ )A_a_a_prod_prod_stream$)
(declare-fun shd$g (A_stream_stream$)A_stream$)
(declare-fun stl$g (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$g (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$h (A_a_prod_stream$)A_a_prod$)
(declare-fun stl$h (A_a_prod_stream$)A_a_prod_stream$)
(declare-fun sCons$h (A_a_prod$ A_a_prod_stream$ )A_a_prod_stream$)
(declare-sort B_a_a_prod_prod$ 0)
(declare-fun fst$f (B_a_a_prod_prod$)B$)
(declare-fun snd$f (B_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$f (B$ A_a_prod$ )B_a_a_prod_prod$)
(declare-sort A_b_prod_stream_stream$ 0)
(declare-sort B_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-fun shd$i (A_b_prod_stream_stream$)A_b_prod_stream$)
(declare-fun stl$i (A_b_prod_stream_stream$)A_b_prod_stream_stream$)
(declare-fun sCons$i (A_b_prod_stream$ A_b_prod_stream_stream$ )A_b_prod_stream_stream$)
(declare-fun shd$j (B_stream_stream$)B_stream$)
(declare-fun stl$j (B_stream_stream$)B_stream_stream$)
(declare-fun sCons$j (B_stream$ B_stream_stream$ )B_stream_stream$)
(declare-fun shd$k (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$k (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$k (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-sort B_a_b_prod_prod$ 0)
(declare-fun fst$g (B_a_b_prod_prod$)B$)
(declare-fun snd$g (B_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$g (B$ A_b_prod$ )B_a_b_prod_prod$)
(declare-sort B_a_b_prod_prod_stream$ 0)
(declare-sort B_a_a_prod_prod_stream$ 0)
(declare-fun shd$l (B_a_b_prod_prod_stream$)B_a_b_prod_prod$)
(declare-fun stl$l (B_a_b_prod_prod_stream$)B_a_b_prod_prod_stream$)
(declare-fun sCons$l (B_a_b_prod_prod$ B_a_b_prod_prod_stream$ )B_a_b_prod_prod_stream$)
(declare-fun shd$m (B_a_a_prod_prod_stream$)B_a_a_prod_prod$)
(declare-fun stl$m (B_a_a_prod_prod_stream$)B_a_a_prod_prod_stream$)
(declare-fun sCons$m (B_a_a_prod_prod$ B_a_a_prod_prod_stream$ )B_a_a_prod_prod_stream$)
(declare-sort A_b_prod_a_prod$ 0)
(declare-fun fst$h (A_b_prod_a_prod$)A_b_prod$)
(declare-fun snd$h (A_b_prod_a_prod$)A$)
(declare-fun pair$h (A_b_prod$ A$ )A_b_prod_a_prod$)
(declare-sort A_b_prod_a_prod_stream$ 0)
(declare-fun shd$n (A_b_prod_a_prod_stream$)A_b_prod_a_prod$)
(declare-fun stl$n (A_b_prod_a_prod_stream$)A_b_prod_a_prod_stream$)
(declare-fun sCons$n (A_b_prod_a_prod$ A_b_prod_a_prod_stream$ )A_b_prod_a_prod_stream$)
(declare-sort A_b_prod_b_prod$ 0)
(declare-fun fst$i (A_b_prod_b_prod$)A_b_prod$)
(declare-fun snd$i (A_b_prod_b_prod$)B$)
(declare-fun pair$i (A_b_prod$ B$ )A_b_prod_b_prod$)
(declare-sort A_b_prod_b_prod_stream$ 0)
(declare-fun shd$o (A_b_prod_b_prod_stream$)A_b_prod_b_prod$)
(declare-fun stl$o (A_b_prod_b_prod_stream$)A_b_prod_b_prod_stream$)
(declare-fun sCons$o (A_b_prod_b_prod$ A_b_prod_b_prod_stream$ )A_b_prod_b_prod_stream$)
(declare-sort A_a_a_b_prod_prod_prod$ 0)
(declare-fun fst$j (A_a_a_b_prod_prod_prod$)A$)
(declare-fun snd$j (A_a_a_b_prod_prod_prod$)A_a_b_prod_prod$)
(declare-fun pair$j (A$ A_a_b_prod_prod$ )A_a_a_b_prod_prod_prod$)
(declare-sort A_a_a_b_prod_prod_prod_stream$ 0)
(declare-fun shd$p (A_a_a_b_prod_prod_prod_stream$)A_a_a_b_prod_prod_prod$)
(declare-fun stl$p (A_a_a_b_prod_prod_prod_stream$)A_a_a_b_prod_prod_prod_stream$)
(declare-fun sCons$p (A_a_a_b_prod_prod_prod$ A_a_a_b_prod_prod_prod_stream$ )A_a_a_b_prod_prod_prod_stream$)
(declare-sort A_stream_b_prod$ 0)
(declare-fun fst$k (A_stream_b_prod$)A_stream$)
(declare-fun snd$k (A_stream_b_prod$)B$)
(declare-fun pair$k (A_stream$ B$ )A_stream_b_prod$)
(declare-sort A_stream_b_prod_stream$ 0)
(declare-fun shd$q (A_stream_b_prod_stream$)A_stream_b_prod$)
(declare-fun stl$q (A_stream_b_prod_stream$)A_stream_b_prod_stream$)
(declare-fun sCons$q (A_stream_b_prod$ A_stream_b_prod_stream$ )A_stream_b_prod_stream$)
(declare-fun a$ ()A$ )
(declare-fun id$ ()A_a_fun$ )
(declare-fun uu$ ()B_a_b_prod_fun$ )
(declare-fun xs$ ()B_stream$ )
(declare-fun id$a ()B_b_fun$ )
(declare-fun id$b ()A_b_prod_a_b_prod_fun$ )
(declare-fun id$c ()A_stream_a_stream_fun$ )
(declare-fun id$d ()A_a_b_prod_prod_a_a_b_prod_prod_fun$ )
(declare-fun id$e ()A_a_prod_a_a_prod_fun$ )
(declare-fun id$f ()A_b_prod_stream_a_b_prod_stream_fun$ )
(declare-fun id$g ()B_stream_b_stream_fun$ )
(declare-fun id$h ()A_stream_stream_a_stream_stream_fun$ )
(declare-fun id$i ()A_a_b_prod_prod_stream_a_a_b_prod_prod_stream_fun$ )
(declare-fun id$j ()A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun id$k ()A_b_prod_stream_stream_a_b_prod_stream_stream_fun$ )
(declare-fun id$l ()B_stream_stream_b_stream_stream_fun$ )
(declare-fun id$m ()A_stream_stream_stream_a_stream_stream_stream_fun$ )
(declare-fun smap$ (B_a_b_prod_fun$ B_stream$ )A_b_prod_stream$ )
(declare-fun szip$ (A_stream$ B_stream$ )A_b_prod_stream$ )
(declare-fun apfst$ (A_a_fun$ )A_b_prod_a_b_prod_fun$ )
(declare-fun apsnd$ (B_b_fun$ )A_b_prod_a_b_prod_fun$ )
(declare-fun smap$a (B_b_prod_b_b_prod_fun$ B_b_prod_stream$ )B_b_prod_stream$ )
(declare-fun smap$b (B_a_prod_b_a_prod_fun$ B_a_prod_stream$ )B_a_prod_stream$ )
(declare-fun smap$c (A_a_b_prod_prod_a_a_b_prod_prod_fun$ )A_a_b_prod_prod_stream_a_a_b_prod_prod_stream_fun$ )
(declare-fun smap$d (A_a_a_prod_prod_a_a_a_prod_prod_fun$ A_a_a_prod_prod_stream$ )A_a_a_prod_prod_stream$ )
(declare-fun smap$e (A_stream_a_stream_fun$ )A_stream_stream_a_stream_stream_fun$ )
(declare-fun smap$f (A_a_prod_a_a_prod_fun$ )A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun smap$g (B_b_fun$ )B_stream_b_stream_fun$ )
(declare-fun smap$h (A_b_prod_a_b_prod_fun$ )A_b_prod_stream_a_b_prod_stream_fun$ )
(declare-fun smap$i (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun smap$j (A_b_fun$ A_stream$ )B_stream$ )
(declare-fun smap$k (B_a_fun$ B_stream$ )A_stream$ )
(declare-fun smap$l (A_stream_a_fun$ A_stream_stream$ )A_stream$ )
(declare-fun smap$m (A_stream_b_fun$ A_stream_stream$ )B_stream$ )
(declare-fun smap$n (A_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun smap$o (B_a_stream_fun$ B_stream$ )A_stream_stream$ )
(declare-fun smap$p (A_b_prod_stream_a_b_prod_stream_fun$ )A_b_prod_stream_stream_a_b_prod_stream_stream_fun$ )
(declare-fun smap$q (B_stream_b_stream_fun$ )B_stream_stream_b_stream_stream_fun$ )
(declare-fun smap$r (A_stream_stream_a_stream_stream_fun$ )A_stream_stream_stream_a_stream_stream_stream_fun$ )
(declare-fun smap$s (A_b_prod_a_a_b_prod_prod_fun$ A_b_prod_stream$ )A_a_b_prod_prod_stream$ )
(declare-fun smap$t (A_a_prod_a_b_prod_fun$ A_a_prod_stream$ )A_b_prod_stream$ )
(declare-fun smap$u (A_b_prod_a_a_prod_fun$ A_b_prod_stream$ )A_a_prod_stream$ )
(declare-fun smap$v (A_b_prod_b_fun$ A_b_prod_stream$ )B_stream$ )
(declare-fun smap$w (A_a_b_prod_prod_a_b_prod_fun$ A_a_b_prod_prod_stream$ )A_b_prod_stream$ )
(declare-fun smap$x (A_b_prod_a_fun$ A_b_prod_stream$ )A_stream$ )
(declare-fun smap$y (A_a_b_prod_prod_a_a_prod_fun$ A_a_b_prod_prod_stream$ )A_a_prod_stream$ )
(declare-fun smap$z (A_a_b_prod_fun$ A_stream$ )A_b_prod_stream$ )
(declare-fun szip$a (A_stream$ A_stream$ )A_a_prod_stream$ )
(declare-fun szip$b (B_stream$ A_stream$ )B_a_prod_stream$ )
(declare-fun szip$c (B_stream$ B_stream$ )B_b_prod_stream$ )
(declare-fun szip$d (A_stream$ A_b_prod_stream$ )A_a_b_prod_prod_stream$ )
(declare-fun szip$e (A_stream$ A_a_prod_stream$ )A_a_a_prod_prod_stream$ )
(declare-fun szip$f (B_stream$ A_b_prod_stream$ )B_a_b_prod_prod_stream$ )
(declare-fun szip$g (B_stream$ A_a_prod_stream$ )B_a_a_prod_prod_stream$ )
(declare-fun szip$h (A_b_prod_stream$ A_stream$ )A_b_prod_a_prod_stream$ )
(declare-fun szip$i (A_b_prod_stream$ B_stream$ )A_b_prod_b_prod_stream$ )
(declare-fun szip$j (A_stream$ A_a_b_prod_prod_stream$ )A_a_a_b_prod_prod_prod_stream$ )
(declare-fun szip$k (A_stream_stream$ B_stream$ )A_stream_b_prod_stream$ )
(declare-fun apfst$a (A_a_fun$ )A_a_prod_a_a_prod_fun$ )
(declare-fun apfst$b (A_a_fun$ )A_a_b_prod_prod_a_a_b_prod_prod_fun$ )
(declare-fun apfst$c (B_b_fun$ )B_b_prod_b_b_prod_fun$ )
(declare-fun apfst$d (B_b_fun$ )B_a_prod_b_a_prod_fun$ )
(declare-fun apfst$e (B_a_fun$ )B_b_prod_a_b_prod_fun$ )
(declare-fun apfst$f (B_a_fun$ )B_a_prod_a_a_prod_fun$ )
(declare-fun apfst$g (A_b_fun$ )A_b_prod_b_b_prod_fun$ )
(declare-fun apfst$h (A_b_fun$ )A_a_prod_b_a_prod_fun$ )
(declare-fun apfst$i (A_a_stream_fun$ )A_b_prod_a_stream_b_prod_fun$ )
(declare-fun apsnd$a (B_a_b_prod_fun$ )A_b_prod_a_a_b_prod_prod_fun$ )
(declare-fun apsnd$b (A_b_fun$ )A_a_prod_a_b_prod_fun$ )
(declare-fun apsnd$c (B_a_fun$ )A_b_prod_a_a_prod_fun$ )
(declare-fun apsnd$d (A_a_fun$ )A_a_prod_a_a_prod_fun$ )
(declare-fun apsnd$e (A_b_prod_b_fun$ )A_a_b_prod_prod_a_b_prod_fun$ )
(declare-fun apsnd$f (A_b_prod_a_fun$ )A_a_b_prod_prod_a_a_prod_fun$ )
(declare-fun apsnd$g (A_a_b_prod_fun$ )A_a_prod_a_a_b_prod_prod_fun$ )
(declare-fun apsnd$h (A_b_prod_a_b_prod_fun$ )A_a_b_prod_prod_a_a_b_prod_prod_fun$ )
(declare-fun apsnd$i (A_b_prod_a_a_b_prod_prod_fun$ )A_a_b_prod_prod_a_a_a_b_prod_prod_prod_fun$ )
(declare-fun smap$aa (A_a_prod_a_a_b_prod_prod_fun$ A_a_prod_stream$ )A_a_b_prod_prod_stream$ )
(declare-fun smap$ab (A_a_b_prod_prod_a_a_a_b_prod_prod_prod_fun$ A_a_b_prod_prod_stream$ )A_a_a_b_prod_prod_prod_stream$ )
(declare-fun smap$ac (B_b_prod_a_b_prod_fun$ B_b_prod_stream$ )A_b_prod_stream$ )
(declare-fun smap$ad (B_a_prod_a_a_prod_fun$ B_a_prod_stream$ )A_a_prod_stream$ )
(declare-fun smap$ae (A_b_prod_b_b_prod_fun$ A_b_prod_stream$ )B_b_prod_stream$ )
(declare-fun smap$af (A_a_prod_b_a_prod_fun$ A_a_prod_stream$ )B_a_prod_stream$ )
(declare-fun smap$ag (A_b_prod_a_stream_b_prod_fun$ A_b_prod_stream$ )A_stream_b_prod_stream$ )
(declare-fun fun_app$ (B_a_b_prod_fun$ B$ )A_b_prod$ )
(declare-fun fun_app$a (A_a_stream_fun$ A$ )A_stream$ )
(declare-fun fun_app$b (B_b_prod_b_b_prod_fun$ B_b_prod$ )B_b_prod$ )
(declare-fun fun_app$c (B_a_prod_b_a_prod_fun$ B_a_prod$ )B_a_prod$ )
(declare-fun fun_app$d (A_a_b_prod_prod_stream_a_a_b_prod_prod_stream_fun$ A_a_b_prod_prod_stream$ )A_a_b_prod_prod_stream$ )
(declare-fun fun_app$e (A_a_b_prod_prod_a_a_b_prod_prod_fun$ A_a_b_prod_prod$ )A_a_b_prod_prod$ )
(declare-fun fun_app$f (A_a_a_prod_prod_a_a_a_prod_prod_fun$ A_a_a_prod_prod$ )A_a_a_prod_prod$ )
(declare-fun fun_app$g (A_stream_stream_a_stream_stream_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun fun_app$h (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$i (A_a_prod_stream_a_a_prod_stream_fun$ A_a_prod_stream$ )A_a_prod_stream$ )
(declare-fun fun_app$j (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod$ )
(declare-fun fun_app$k (B_stream_b_stream_fun$ B_stream$ )B_stream$ )
(declare-fun fun_app$l (B_b_fun$ B$ )B$ )
(declare-fun fun_app$m (A_b_prod_stream_a_b_prod_stream_fun$ A_b_prod_stream$ )A_b_prod_stream$ )
(declare-fun fun_app$n (A_b_prod_a_b_prod_fun$ A_b_prod$ )A_b_prod$ )
(declare-fun fun_app$o (A_a_fun$ A$ )A$ )
(declare-fun fun_app$p (A_b_fun$ A$ )B$ )
(declare-fun fun_app$q (B_a_fun$ B$ )A$ )
(declare-fun fun_app$r (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$s (A_stream_b_fun$ A_stream$ )B$ )
(declare-fun fun_app$t (B_a_stream_fun$ B$ )A_stream$ )
(declare-fun fun_app$u (A_b_prod_stream_stream_a_b_prod_stream_stream_fun$ A_b_prod_stream_stream$ )A_b_prod_stream_stream$ )
(declare-fun fun_app$v (B_stream_stream_b_stream_stream_fun$ B_stream_stream$ )B_stream_stream$ )
(declare-fun fun_app$w (A_stream_stream_stream_a_stream_stream_stream_fun$ A_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun fun_app$x (A_a_fun_a_a_prod_a_a_prod_fun_fun$ A_a_fun$ )A_a_prod_a_a_prod_fun$ )
(declare-fun fun_app$y (B_b_fun_a_b_prod_a_b_prod_fun_fun$ B_b_fun$ )A_b_prod_a_b_prod_fun$ )
(declare-fun fun_app$z (A_a_fun_b_a_prod_b_a_prod_fun_fun$ A_a_fun$ )B_a_prod_b_a_prod_fun$ )
(declare-fun map_prod$ (A_a_fun$ )A_a_fun_a_a_prod_a_a_prod_fun_fun$ )
(declare-fun siterate$ (A_a_fun$ )A_a_stream_fun$ )
(declare-fun fun_app$aa (B_b_fun_b_b_prod_b_b_prod_fun_fun$ B_b_fun$ )B_b_prod_b_b_prod_fun$ )
(declare-fun fun_app$ab (A_b_prod_a_b_prod_fun_a_a_b_prod_prod_a_a_b_prod_prod_fun_fun$ A_b_prod_a_b_prod_fun$ )A_a_b_prod_prod_a_a_b_prod_prod_fun$ )
(declare-fun fun_app$ac (A_a_prod_a_a_prod_fun_a_a_a_prod_prod_a_a_a_prod_prod_fun_fun$ A_a_prod_a_a_prod_fun$ )A_a_a_prod_prod_a_a_a_prod_prod_fun$ )
(declare-fun fun_app$ad (A_b_prod_a_a_prod_fun$ A_b_prod$ )A_a_prod$ )
(declare-fun fun_app$ae (A_a_prod_a_b_prod_fun$ A_a_prod$ )A_b_prod$ )
(declare-fun fun_app$af (A_b_prod_a_a_b_prod_prod_fun$ A_b_prod$ )A_a_b_prod_prod$ )
(declare-fun map_prod$a (A_a_fun$ )B_b_fun_a_b_prod_a_b_prod_fun_fun$ )
(declare-fun map_prod$b (B_b_fun$ )A_a_fun_b_a_prod_b_a_prod_fun_fun$ )
(declare-fun map_prod$c (B_b_fun$ )B_b_fun_b_b_prod_b_b_prod_fun_fun$ )
(declare-fun map_prod$d (A_a_fun$ )A_b_prod_a_b_prod_fun_a_a_b_prod_prod_a_a_b_prod_prod_fun_fun$ )
(declare-fun map_prod$e (A_a_fun$ )A_a_prod_a_a_prod_fun_a_a_a_prod_prod_a_a_a_prod_prod_fun_fun$ )
(declare-fun map_prod$f (B_b_fun$ A_b_prod_a_b_prod_fun$ )B_a_b_prod_prod_b_a_b_prod_prod_fun$ )
(declare-fun map_prod$g (B_b_fun$ A_a_prod_a_a_prod_fun$ )B_a_a_prod_prod_b_a_a_prod_prod_fun$ )
(declare-fun map_prod$h (A_b_prod_a_b_prod_fun$ A_a_fun$ )A_b_prod_a_prod_a_b_prod_a_prod_fun$ )
(declare-fun map_prod$i (A_b_prod_a_b_prod_fun$ B_b_fun$ )A_b_prod_b_prod_a_b_prod_b_prod_fun$ )
(declare-fun map_prod$j (A_a_fun$ B_a_fun$ A_b_prod$ )A_a_prod$ )
(declare-fun map_prod$k (A_a_fun$ A_b_fun$ A_a_prod$ )A_b_prod$ )
(declare-fun siterate$a (B_b_prod_b_b_prod_fun$ B_b_prod$ )B_b_prod_stream$ )
(declare-fun siterate$b (B_a_prod_b_a_prod_fun$ B_a_prod$ )B_a_prod_stream$ )
(declare-fun siterate$c (A_a_b_prod_prod_a_a_b_prod_prod_fun$ A_a_b_prod_prod$ )A_a_b_prod_prod_stream$ )
(declare-fun siterate$d (A_a_a_prod_prod_a_a_a_prod_prod_fun$ A_a_a_prod_prod$ )A_a_a_prod_prod_stream$ )
(declare-fun siterate$e (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun siterate$f (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod_stream$ )
(declare-fun siterate$g (B_b_fun$ B$ )B_stream$ )
(declare-fun siterate$h (A_b_prod_a_b_prod_fun$ A_b_prod$ )A_b_prod_stream$ )
(declare-fun siterate$i (B_a_b_prod_prod_b_a_b_prod_prod_fun$ B_a_b_prod_prod$ )B_a_b_prod_prod_stream$ )
(declare-fun siterate$j (B_a_a_prod_prod_b_a_a_prod_prod_fun$ B_a_a_prod_prod$ )B_a_a_prod_prod_stream$ )
(declare-fun siterate$k (A_b_prod_a_prod_a_b_prod_a_prod_fun$ A_b_prod_a_prod$ )A_b_prod_a_prod_stream$ )
(declare-fun siterate$l (A_b_prod_b_prod_a_b_prod_b_prod_fun$ A_b_prod_b_prod$ )A_b_prod_b_prod_stream$ )
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$ uu$ ?v0 )(pair$ a$ ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (not (= (szip$ (fun_app$a (siterate$ id$ )a$ )xs$ )(smap$ uu$ xs$ ))):named a1 ))
(assert (! (forall ((?v0 B_b_prod_b_b_prod_fun$ )(?v1 B_b_prod$ ))(= (smap$a ?v0 (siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$b ?v0 ?v1 )))):named a2 ))
(assert (! (forall ((?v0 B_a_prod_b_a_prod_fun$ )(?v1 B_a_prod$ ))(= (smap$b ?v0 (siterate$b ?v0 ?v1 ))(siterate$b ?v0 (fun_app$c ?v0 ?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_a_a_b_prod_prod_fun$ )(?v1 A_a_b_prod_prod$ ))(= (fun_app$d (smap$c ?v0 )(siterate$c ?v0 ?v1 ))(siterate$c ?v0 (fun_app$e ?v0 ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_a_a_a_prod_prod_fun$ )(?v1 A_a_a_prod_prod$ ))(= (smap$d ?v0 (siterate$d ?v0 ?v1 ))(siterate$d ?v0 (fun_app$f ?v0 ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ ))(= (fun_app$g (smap$e ?v0 )(siterate$e ?v0 ?v1 ))(siterate$e ?v0 (fun_app$h ?v0 ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_prod$ ))(= (fun_app$i (smap$f ?v0 )(siterate$f ?v0 ?v1 ))(siterate$f ?v0 (fun_app$j ?v0 ?v1 )))):named a7 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (fun_app$k (smap$g ?v0 )(siterate$g ?v0 ?v1 ))(siterate$g ?v0 (fun_app$l ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 A_b_prod$ ))(= (fun_app$m (smap$h ?v0 )(siterate$h ?v0 ?v1 ))(siterate$h ?v0 (fun_app$n ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$h (smap$i ?v0 )(fun_app$a (siterate$ ?v0 )?v1 ))(fun_app$a (siterate$ ?v0 )(fun_app$o ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$h (smap$i ?v0 )(fun_app$a (siterate$ id$ )?v1 ))(fun_app$a (siterate$ id$ )(fun_app$o ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 B_a_b_prod_fun$ )(?v1 B$ ))(= (smap$ ?v0 (siterate$g id$a ?v1 ))(siterate$h id$b (fun_app$ ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (smap$j ?v0 (fun_app$a (siterate$ id$ )?v1 ))(siterate$g id$a (fun_app$p ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (smap$k ?v0 (siterate$g id$a ?v1 ))(fun_app$a (siterate$ id$ )(fun_app$q ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (fun_app$k (smap$g ?v0 )(siterate$g id$a ?v1 ))(siterate$g id$a (fun_app$l ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream$ ))(= (smap$l ?v0 (siterate$e id$c ?v1 ))(fun_app$a (siterate$ id$ )(fun_app$r ?v0 ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_stream_b_fun$ )(?v1 A_stream$ ))(= (smap$m ?v0 (siterate$e id$c ?v1 ))(siterate$g id$a (fun_app$s ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A$ ))(= (smap$n ?v0 (fun_app$a (siterate$ id$ )?v1 ))(siterate$e id$c (fun_app$a ?v0 ?v1 )))):named a18 ))
(assert (! (forall ((?v0 B_a_stream_fun$ )(?v1 B$ ))(= (smap$o ?v0 (siterate$g id$a ?v1 ))(siterate$e id$c (fun_app$t ?v0 ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ ))(= (fun_app$g (smap$e ?v0 )(siterate$e id$c ?v1 ))(siterate$e id$c (fun_app$h ?v0 ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ ))(! (= (fun_app$e id$d ?v0 )?v0 ):pattern ((fun_app$e id$d ?v0 )))):named a21 ))
(assert (! (forall ((?v0 A_a_prod$ ))(! (= (fun_app$j id$e ?v0 )?v0 ):pattern ((fun_app$j id$e ?v0 )))):named a22 ))
(assert (! (forall ((?v0 A_b_prod_stream$ ))(! (= (fun_app$m id$f ?v0 )?v0 ):pattern ((fun_app$m id$f ?v0 )))):named a23 ))
(assert (! (forall ((?v0 B_stream$ ))(! (= (fun_app$k id$g ?v0 )?v0 ):pattern ((fun_app$k id$g ?v0 )))):named a24 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(! (= (fun_app$g id$h ?v0 )?v0 ):pattern ((fun_app$g id$h ?v0 )))):named a25 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$l id$a ?v0 )?v0 ):pattern ((fun_app$l id$a ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$n id$b ?v0 )?v0 ):pattern ((fun_app$n id$b ?v0 )))):named a27 ))
(assert (! (forall ((?v0 A_stream$ ))(! (= (fun_app$h id$c ?v0 )?v0 ):pattern ((fun_app$h id$c ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$o id$ ?v0 )?v0 ):pattern ((fun_app$o id$ ?v0 )))):named a29 ))
(assert (! (forall ((?v0 B$ )(?v1 A_a_prod$ )(?v2 B$ )(?v3 A_a_prod$ ))(= (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a30 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ )(?v2 B$ )(?v3 B$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B$ )(?v3 A$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_prod$ )(?v2 A$ )(?v3 A_b_prod$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a33 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_prod$ )(?v2 A$ )(?v3 A_a_prod$ ))(= (= (pair$e ?v0 ?v1 )(pair$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a34 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ )(?v3 A$ ))(= (= (pair$d ?v0 ?v1 )(pair$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 B$ )(?v1 A_a_prod$ )(?v2 B$ )(?v3 A_a_prod$ ))(= (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a37 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ )(?v2 B$ )(?v3 B$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a38 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B$ )(?v3 A$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_prod$ )(?v2 A$ )(?v3 A_b_prod$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a40 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_prod$ )(?v2 A$ )(?v3 A_a_prod$ ))(= (= (pair$e ?v0 ?v1 )(pair$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a41 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ )(?v3 A$ ))(= (= (pair$d ?v0 ?v1 )(pair$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a42 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a43 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_stream$ ))(= (fun_app$d (smap$c id$d )?v0 )?v0 )):named a44 ))
(assert (! (forall ((?v0 A_a_prod_stream$ ))(= (fun_app$i (smap$f id$e )?v0 )?v0 )):named a45 ))
(assert (! (forall ((?v0 A_b_prod_stream_stream$ ))(= (fun_app$u (smap$p id$f )?v0 )?v0 )):named a46 ))
(assert (! (forall ((?v0 B_stream_stream$ ))(= (fun_app$v (smap$q id$g )?v0 )?v0 )):named a47 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ ))(= (fun_app$w (smap$r id$h )?v0 )?v0 )):named a48 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(= (fun_app$g (smap$e id$c )?v0 )?v0 )):named a49 ))
(assert (! (forall ((?v0 B_stream$ ))(= (fun_app$k (smap$g id$a )?v0 )?v0 )):named a50 ))
(assert (! (forall ((?v0 A_b_prod_stream$ ))(= (fun_app$m (smap$h id$b )?v0 )?v0 )):named a51 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$h (smap$i id$ )?v0 )?v0 )):named a52 ))
(assert (! (= (smap$c id$d )id$i ):named a53 ))
(assert (! (= (smap$f id$e )id$j ):named a54 ))
(assert (! (= (smap$p id$f )id$k ):named a55 ))
(assert (! (= (smap$q id$g )id$l ):named a56 ))
(assert (! (= (smap$r id$h )id$m ):named a57 ))
(assert (! (= (smap$e id$c )id$h ):named a58 ))
(assert (! (= (smap$g id$a )id$g ):named a59 ))
(assert (! (= (smap$h id$b )id$f ):named a60 ))
(assert (! (= (smap$i id$ )id$c ):named a61 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ ))(! (= (fun_app$e id$d ?v0 )?v0 ):pattern ((fun_app$e id$d ?v0 )))):named a62 ))
(assert (! (forall ((?v0 A_a_prod$ ))(! (= (fun_app$j id$e ?v0 )?v0 ):pattern ((fun_app$j id$e ?v0 )))):named a63 ))
(assert (! (forall ((?v0 A_b_prod_stream$ ))(! (= (fun_app$m id$f ?v0 )?v0 ):pattern ((fun_app$m id$f ?v0 )))):named a64 ))
(assert (! (forall ((?v0 B_stream$ ))(! (= (fun_app$k id$g ?v0 )?v0 ):pattern ((fun_app$k id$g ?v0 )))):named a65 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(! (= (fun_app$g id$h ?v0 )?v0 ):pattern ((fun_app$g id$h ?v0 )))):named a66 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$l id$a ?v0 )?v0 ):pattern ((fun_app$l id$a ?v0 )))):named a67 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$n id$b ?v0 )?v0 ):pattern ((fun_app$n id$b ?v0 )))):named a68 ))
(assert (! (forall ((?v0 A_stream$ ))(! (= (fun_app$h id$c ?v0 )?v0 ):pattern ((fun_app$h id$c ?v0 )))):named a69 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$o id$ ?v0 )?v0 ):pattern ((fun_app$o id$ ?v0 )))):named a70 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (szip$a (fun_app$a (siterate$ ?v0 )?v1 )(fun_app$a (siterate$ ?v2 )?v3 ))(siterate$f (fun_app$x (map_prod$ ?v0 )?v2 )(pair$d ?v1 ?v3 )))):named a71 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (szip$ (fun_app$a (siterate$ ?v0 )?v1 )(siterate$g ?v2 ?v3 ))(siterate$h (fun_app$y (map_prod$a ?v0 )?v2 )(pair$ ?v1 ?v3 )))):named a72 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (szip$b (siterate$g ?v0 ?v1 )(fun_app$a (siterate$ ?v2 )?v3 ))(siterate$b (fun_app$z (map_prod$b ?v0 )?v2 )(pair$b ?v1 ?v3 )))):named a73 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (szip$c (siterate$g ?v0 ?v1 )(siterate$g ?v2 ?v3 ))(siterate$a (fun_app$aa (map_prod$c ?v0 )?v2 )(pair$a ?v1 ?v3 )))):named a74 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_b_prod_a_b_prod_fun$ )(?v3 A_b_prod$ ))(= (szip$d (fun_app$a (siterate$ ?v0 )?v1 )(siterate$h ?v2 ?v3 ))(siterate$c (fun_app$ab (map_prod$d ?v0 )?v2 )(pair$c ?v1 ?v3 )))):named a75 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_a_prod_a_a_prod_fun$ )(?v3 A_a_prod$ ))(= (szip$e (fun_app$a (siterate$ ?v0 )?v1 )(siterate$f ?v2 ?v3 ))(siterate$d (fun_app$ac (map_prod$e ?v0 )?v2 )(pair$e ?v1 ?v3 )))):named a76 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 A_b_prod_a_b_prod_fun$ )(?v3 A_b_prod$ ))(= (szip$f (siterate$g ?v0 ?v1 )(siterate$h ?v2 ?v3 ))(siterate$i (map_prod$f ?v0 ?v2 )(pair$g ?v1 ?v3 )))):named a77 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 A_a_prod_a_a_prod_fun$ )(?v3 A_a_prod$ ))(= (szip$g (siterate$g ?v0 ?v1 )(siterate$f ?v2 ?v3 ))(siterate$j (map_prod$g ?v0 ?v2 )(pair$f ?v1 ?v3 )))):named a78 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 A_b_prod$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (szip$h (siterate$h ?v0 ?v1 )(fun_app$a (siterate$ ?v2 )?v3 ))(siterate$k (map_prod$h ?v0 ?v2 )(pair$h ?v1 ?v3 )))):named a79 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 A_b_prod$ )(?v2 B_b_fun$ )(?v3 B$ ))(= (szip$i (siterate$h ?v0 ?v1 )(siterate$g ?v2 ?v3 ))(siterate$l (map_prod$i ?v0 ?v2 )(pair$i ?v1 ?v3 )))):named a80 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 B_b_fun$ )(?v2 B_stream$ ))(= (szip$ ?v0 (fun_app$k (smap$g ?v1 )?v2 ))(fun_app$m (smap$h (apsnd$ ?v1 ))(szip$ ?v0 ?v2 )))):named a81 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 B_a_b_prod_fun$ )(?v2 B_stream$ ))(= (szip$d ?v0 (smap$ ?v1 ?v2 ))(smap$s (apsnd$a ?v1 )(szip$ ?v0 ?v2 )))):named a82 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_b_fun$ )(?v2 A_stream$ ))(= (szip$ ?v0 (smap$j ?v1 ?v2 ))(smap$t (apsnd$b ?v1 )(szip$a ?v0 ?v2 )))):named a83 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 B_a_fun$ )(?v2 B_stream$ ))(= (szip$a ?v0 (smap$k ?v1 ?v2 ))(smap$u (apsnd$c ?v1 )(szip$ ?v0 ?v2 )))):named a84 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_fun$ )(?v2 A_stream$ ))(= (szip$a ?v0 (fun_app$h (smap$i ?v1 )?v2 ))(fun_app$i (smap$f (apsnd$d ?v1 ))(szip$a ?v0 ?v2 )))):named a85 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_b_prod_b_fun$ )(?v2 A_b_prod_stream$ ))(= (szip$ ?v0 (smap$v ?v1 ?v2 ))(smap$w (apsnd$e ?v1 )(szip$d ?v0 ?v2 )))):named a86 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_stream$ ))(= (szip$a ?v0 (smap$x ?v1 ?v2 ))(smap$y (apsnd$f ?v1 )(szip$d ?v0 ?v2 )))):named a87 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_b_prod_fun$ )(?v2 A_stream$ ))(= (szip$d ?v0 (smap$z ?v1 ?v2 ))(smap$aa (apsnd$g ?v1 )(szip$a ?v0 ?v2 )))):named a88 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_b_prod_a_b_prod_fun$ )(?v2 A_b_prod_stream$ ))(= (szip$d ?v0 (fun_app$m (smap$h ?v1 )?v2 ))(fun_app$d (smap$c (apsnd$h ?v1 ))(szip$d ?v0 ?v2 )))):named a89 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_b_prod_a_a_b_prod_prod_fun$ )(?v2 A_b_prod_stream$ ))(= (szip$j ?v0 (smap$s ?v1 ?v2 ))(smap$ab (apsnd$i ?v1 )(szip$d ?v0 ?v2 )))):named a90 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 B_stream$ ))(= (szip$ (fun_app$h (smap$i ?v0 )?v1 )?v2 )(fun_app$m (smap$h (apfst$ ?v0 ))(szip$ ?v1 ?v2 )))):named a91 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (szip$a (fun_app$h (smap$i ?v0 )?v1 )?v2 )(fun_app$i (smap$f (apfst$a ?v0 ))(szip$a ?v1 ?v2 )))):named a92 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 A_b_prod_stream$ ))(= (szip$d (fun_app$h (smap$i ?v0 )?v1 )?v2 )(fun_app$d (smap$c (apfst$b ?v0 ))(szip$d ?v1 ?v2 )))):named a93 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(= (szip$c (fun_app$k (smap$g ?v0 )?v1 )?v2 )(smap$a (apfst$c ?v0 )(szip$c ?v1 ?v2 )))):named a94 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_stream$ )(?v2 A_stream$ ))(= (szip$b (fun_app$k (smap$g ?v0 )?v1 )?v2 )(smap$b (apfst$d ?v0 )(szip$b ?v1 ?v2 )))):named a95 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(= (szip$ (smap$k ?v0 ?v1 )?v2 )(smap$ac (apfst$e ?v0 )(szip$c ?v1 ?v2 )))):named a96 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_stream$ )(?v2 A_stream$ ))(= (szip$a (smap$k ?v0 ?v1 )?v2 )(smap$ad (apfst$f ?v0 )(szip$b ?v1 ?v2 )))):named a97 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_stream$ )(?v2 B_stream$ ))(= (szip$c (smap$j ?v0 ?v1 )?v2 )(smap$ae (apfst$g ?v0 )(szip$ ?v1 ?v2 )))):named a98 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (szip$b (smap$j ?v0 ?v1 )?v2 )(smap$af (apfst$h ?v0 )(szip$a ?v1 ?v2 )))):named a99 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ )(?v2 B_stream$ ))(= (szip$k (smap$n ?v0 ?v1 )?v2 )(smap$ag (apfst$i ?v0 )(szip$ ?v1 ?v2 )))):named a100 ))
(assert (! (forall ((?v0 B_b_prod$ ))(=> (forall ((?v1 B$ )(?v2 B$ ))(=> (= ?v0 (pair$a ?v1 ?v2 ))false ))false )):named a101 ))
(assert (! (forall ((?v0 B_a_prod$ ))(=> (forall ((?v1 B$ )(?v2 A$ ))(=> (= ?v0 (pair$b ?v1 ?v2 ))false ))false )):named a102 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ ))(=> (forall ((?v1 A$ )(?v2 A_b_prod$ ))(=> (= ?v0 (pair$c ?v1 ?v2 ))false ))false )):named a103 ))
(assert (! (forall ((?v0 A_a_a_prod_prod$ ))(=> (forall ((?v1 A$ )(?v2 A_a_prod$ ))(=> (= ?v0 (pair$e ?v1 ?v2 ))false ))false )):named a104 ))
(assert (! (forall ((?v0 A_a_prod$ ))(=> (forall ((?v1 A$ )(?v2 A$ ))(=> (= ?v0 (pair$d ?v1 ?v2 ))false ))false )):named a105 ))
(assert (! (forall ((?v0 A_b_prod$ ))(=> (forall ((?v1 A$ )(?v2 B$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a106 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (map_prod$j ?v0 ?v1 (pair$ ?v2 ?v3 ))(pair$d (fun_app$o ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((map_prod$j ?v0 ?v1 (pair$ ?v2 ?v3 ))))):named a107 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (map_prod$k ?v0 ?v1 (pair$d ?v2 ?v3 ))(pair$ (fun_app$o ?v0 ?v2 )(fun_app$p ?v1 ?v3 ))):pattern ((map_prod$k ?v0 ?v1 (pair$d ?v2 ?v3 ))))):named a108 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$j (fun_app$x (map_prod$ ?v0 )?v1 )(pair$d ?v2 ?v3 ))(pair$d (fun_app$o ?v0 ?v2 )(fun_app$o ?v1 ?v3 ))):pattern ((fun_app$j (fun_app$x (map_prod$ ?v0 )?v1 )(pair$d ?v2 ?v3 ))))):named a109 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$n (fun_app$y (map_prod$a ?v0 )?v1 )(pair$ ?v2 ?v3 ))(pair$ (fun_app$o ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$y (map_prod$a ?v0 )?v1 )(pair$ ?v2 ?v3 ))))):named a110 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$ad (apsnd$c ?v0 )(pair$ ?v1 ?v2 ))(pair$d ?v1 (fun_app$q ?v0 ?v2 ))):pattern ((fun_app$ad (apsnd$c ?v0 )(pair$ ?v1 ?v2 ))))):named a111 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$ae (apsnd$b ?v0 )(pair$d ?v1 ?v2 ))(pair$ ?v1 (fun_app$p ?v0 ?v2 ))):pattern ((fun_app$ae (apsnd$b ?v0 )(pair$d ?v1 ?v2 ))))):named a112 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$j (apsnd$d ?v0 )(pair$d ?v1 ?v2 ))(pair$d ?v1 (fun_app$o ?v0 ?v2 ))):pattern ((fun_app$j (apsnd$d ?v0 )(pair$d ?v1 ?v2 ))))):named a113 ))
(assert (! (forall ((?v0 B_a_b_prod_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$af (apsnd$a ?v0 )(pair$ ?v1 ?v2 ))(pair$c ?v1 (fun_app$ ?v0 ?v2 ))):pattern ((fun_app$af (apsnd$a ?v0 )(pair$ ?v1 ?v2 ))))):named a114 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$n (apsnd$ ?v0 )(pair$ ?v1 ?v2 ))(pair$ ?v1 (fun_app$l ?v0 ?v2 ))):pattern ((fun_app$n (apsnd$ ?v0 )(pair$ ?v1 ?v2 ))))):named a115 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$j (apfst$a ?v0 )(pair$d ?v1 ?v2 ))(pair$d (fun_app$o ?v0 ?v1 )?v2 )):pattern ((fun_app$j (apfst$a ?v0 )(pair$d ?v1 ?v2 ))))):named a116 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$n (apfst$ ?v0 )(pair$ ?v1 ?v2 ))(pair$ (fun_app$o ?v0 ?v1 )?v2 )):pattern ((fun_app$n (apfst$ ?v0 )(pair$ ?v1 ?v2 ))))):named a117 ))
(assert (! (= (apsnd$ id$a )id$b ):named a118 ))
(check-sat )
;(get-unsat-core )
