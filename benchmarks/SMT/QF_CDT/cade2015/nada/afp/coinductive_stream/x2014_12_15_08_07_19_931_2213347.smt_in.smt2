;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort B_llist_set$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort B_stream_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort B_llist_b_llist_fun$ 0 )
(declare-sort A_llist_a_stream_fun$ 0 )
(declare-sort A_stream_a_llist_fun$ 0 )
(declare-sort B_llist_b_stream_fun$ 0 )
(declare-sort B_stream_b_llist_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_bool_fun$ 0 )
(declare-sort B_llist_bool_fun_bool_fun$ 0 )
(declare-sort Bool_a_llist_bool_fun_fun$ 0 )
(declare-sort Bool_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_stream_bool_fun_fun$ 0 )
(declare-sort B_llist_b_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_b_stream_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_bool_fun$ 0 )
(declare-sort Bool_a_llist_bool_fun_fun_bool_fun$ 0 )
(declare-sort Bool_b_llist_bool_fun_fun_bool_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_a_llist_a_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_fun_b_llist_a_llist_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_fun_b_llist_b_llist_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_b_llist_a_llist_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_b_llist_b_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_bool_fun_a_llist_bool_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_bool_fun_b_llist_bool_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort Bool_a_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort Bool_a_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort Bool_b_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort Bool_b_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_bool_fun_a_llist_a_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_bool_fun_a_llist_b_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_bool_fun_a_llist_a_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_fun_bool_fun_a_llist_b_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_fun_bool_fun_b_llist_a_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_fun_bool_fun_b_llist_b_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_bool_fun_b_llist_a_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_bool_fun_b_llist_b_llist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_b_llist_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort B_llist$ 0)
(declare-sort A_stream$ 0)
(declare-sort B_stream$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()B_llist$)
(declare-fun lhd$a (B_llist$)B$)
(declare-fun ltl$a (B_llist$)B_llist$)
(declare-fun lCons$a (B$ B_llist$ )B_llist$)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (B_stream$)B$)
(declare-fun stl$a (B_stream$)B_stream$)
(declare-fun sCons$a (B$ B_stream$ )B_stream$)
(declare-fun p$ ()A_b_bool_fun_fun$ )
(declare-fun y$ ()A_llist$ )
(declare-fun uu$ ()A_llist_bool_fun$ )
(declare-fun xs$ ()A_stream$ )
(declare-fun ya$ ()B_llist$ )
(declare-fun ys$ ()B_stream$ )
(declare-fun uua$ ()B_llist_bool_fun$ )
(declare-fun uub$ (B_b_bool_fun_fun$ B_b_bool_fun_fun$ )B_b_bool_fun_fun$ )
(declare-fun uuc$ (B_a_bool_fun_fun$ B_a_bool_fun_fun$ )B_a_bool_fun_fun$ )
(declare-fun uud$ (A_a_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uue$ (A_b_bool_fun_fun$ A_b_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuf$ ()B_b_bool_fun_fun$ )
(declare-fun uug$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uuh$ ()A_a_bool_fun_fun$ )
(declare-fun uui$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uuj$ ()Bool_bool_bool_fun_fun$ )
(declare-fun uuk$ (B_stream_b_llist_fun$ )B_llist_b_stream_bool_fun_fun$ )
(declare-fun uul$ (A_stream_a_llist_fun$ )A_llist_a_stream_bool_fun_fun$ )
(declare-fun uum$ (B_llist_set$ )B_llist_bool_fun$ )
(declare-fun uun$ (A_llist_set$ )A_llist_bool_fun$ )
(declare-fun uuo$ ()B_llist_b_llist_fun$ )
(declare-fun uup$ ()A_llist_a_llist_fun$ )
(declare-fun eq_onp$ (A_llist_bool_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun member$ (B_llist$ B_llist_set$ )Bool )
(declare-fun collect$ (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun eq_onp$a (B_llist_bool_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun fun_app$ (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun lfinite$ ()B_llist_bool_fun$ )
(declare-fun member$a (A_llist$ A_llist_set$ )Bool )
(declare-fun rel_fun$ (A_llist_a_llist_bool_fun_fun$ )Bool_bool_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_fun$ )
(declare-fun collect$a (B_llist_bool_fun$ )B_llist_set$ )
(declare-fun fun_app$a (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$b (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$c (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$d (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$e (Bool_bool_bool_fun_fun$ Bool )Bool_bool_fun$ )
(declare-fun fun_app$f (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$g (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$h (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$i (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$j (B_stream_bool_fun$ B_stream$ )Bool )
(declare-fun fun_app$k (B_llist_b_stream_bool_fun_fun$ B_llist$ )B_stream_bool_fun$ )
(declare-fun fun_app$l (B_stream_b_llist_fun$ B_stream$ )B_llist$ )
(declare-fun fun_app$m (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$n (A_llist_a_stream_bool_fun_fun$ A_llist$ )A_stream_bool_fun$ )
(declare-fun fun_app$o (A_stream_a_llist_fun$ A_stream$ )A_llist$ )
(declare-fun fun_app$p (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$q (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$r (B_llist_b_llist_fun$ B_llist$ )B_llist$ )
(declare-fun fun_app$s (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$t (A_llist_b_llist_bool_fun_fun$ A_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$u (A_stream_b_stream_bool_fun_fun$ A_stream$ )B_stream_bool_fun$ )
(declare-fun fun_app$v (A_llist_a_stream_fun$ A_llist$ )A_stream$ )
(declare-fun fun_app$w (B_llist_b_stream_fun$ B_llist$ )B_stream$ )
(declare-fun fun_app$x (B_llist_a_llist_bool_fun_fun$ B_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$y (A_llist_bool_fun_bool_fun$ A_llist_bool_fun$ )Bool )
(declare-fun fun_app$z (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ A_llist_bool_fun$ )A_llist_bool_fun_bool_fun$ )
(declare-fun lappend$a (B_llist$ B_llist$ )B_llist$ )
(declare-fun lfinite$a ()A_llist_bool_fun$ )
(declare-fun quotient$ (A_llist_a_llist_bool_fun_fun$ A_llist_a_stream_fun$ A_stream_a_llist_fun$ A_llist_a_stream_bool_fun_fun$ )Bool )
(declare-fun rel_fun$a (B_llist_a_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )B_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$b (B_llist_b_llist_bool_fun_fun$ )Bool_bool_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$c (A_llist_b_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$d (B_llist_b_stream_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_fun$ B_stream_b_llist_fun$ )Bool )
(declare-fun rel_fun$e (A_llist_a_stream_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ A_stream_a_llist_fun$ )Bool )
(declare-fun rel_fun$f (Bool_a_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$g (Bool_a_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$h (Bool_a_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$i (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$j (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$k (Bool_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$ )Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$l (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$ )Bool_bool_fun_bool_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$m (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ B_llist_bool_fun_bool_fun_b_llist_bool_fun_bool_fun_bool_fun_fun$ )B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$n (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )B_llist_bool_fun_bool_fun_b_llist_bool_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$o (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ A_llist_bool_fun_bool_fun_a_llist_bool_fun_bool_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$p (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_bool_fun_bool_fun_a_llist_bool_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$q (Bool_a_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ Bool_b_llist_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$r (Bool_bool_bool_fun_fun$ A_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ )Bool_a_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$s (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ B_llist_a_llist_fun_bool_fun_b_llist_b_llist_fun_bool_fun_bool_fun_fun$ )B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$t (B_llist_a_llist_fun_b_llist_b_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )B_llist_a_llist_fun_bool_fun_b_llist_b_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$u (B_llist_b_llist_bool_fun_fun$ A_llist_b_llist_bool_fun_fun$ )B_llist_a_llist_fun_b_llist_b_llist_fun_bool_fun_fun$ )
(declare-fun rel_fun$v (B_llist_b_llist_bool_fun_fun$ )Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$w (B_llist_b_llist_bool_fun_fun$ )Bool_b_llist_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$x (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ A_llist_a_llist_fun_bool_fun_a_llist_b_llist_fun_bool_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$y (A_llist_a_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_a_llist_fun_bool_fun_a_llist_b_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$z (A_llist_a_llist_bool_fun_fun$ A_llist_b_llist_bool_fun_fun$ )A_llist_a_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ )
(declare-fun cr_stream$ ()A_llist_a_stream_bool_fun_fun$ )
(declare-fun fun_app$aa (Bool_bool_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )
(declare-fun fun_app$ab (B_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ B_llist_bool_fun$ )A_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$ac (B_llist_bool_fun_bool_fun$ B_llist_bool_fun$ )Bool )
(declare-fun fun_app$ad (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ B_llist_bool_fun$ )B_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$ae (Bool_bool_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun$ )B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ )
(declare-fun fun_app$af (A_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ A_llist_bool_fun$ )B_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$ag (Bool_b_llist_bool_fun_fun_bool_fun$ Bool_b_llist_bool_fun_fun$ )Bool )
(declare-fun fun_app$ah (Bool_a_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ Bool_a_llist_bool_fun_fun$ )Bool_b_llist_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$ai (A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun$ A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun$ )Bool )
(declare-fun fun_app$aj (A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$ak (Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ Bool_a_llist_bool_fun_fun$ )A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun$ )
(declare-fun fun_app$al (Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ Bool_b_llist_bool_fun_fun$ )A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun$ )
(declare-fun fun_app$am (Bool_a_llist_bool_fun_fun_bool_fun$ Bool_a_llist_bool_fun_fun$ )Bool )
(declare-fun fun_app$an (Bool_a_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ Bool_a_llist_bool_fun_fun$ )Bool_a_llist_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$ao (B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun$ B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun$ )Bool )
(declare-fun fun_app$ap (B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun$ )B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$aq (Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ Bool_a_llist_bool_fun_fun$ )B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun$ )
(declare-fun fun_app$ar (A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun$ A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun$ )Bool )
(declare-fun fun_app$as (A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$at (Bool_bool_bool_fun_fun_bool_fun$ Bool_bool_bool_fun_fun$ )Bool )
(declare-fun fun_app$au (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )Bool_bool_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$av (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun$ B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ )Bool )
(declare-fun fun_app$aw (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun_fun$ B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ )B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$ax (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun$ A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )Bool )
(declare-fun fun_app$ay (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun$ )
(declare-fun quotient$a (B_llist_b_llist_bool_fun_fun$ B_llist_b_stream_fun$ B_stream_b_llist_fun$ B_llist_b_stream_bool_fun_fun$ )Bool )
(declare-fun rel_fun$aa (A_llist_a_llist_bool_fun_fun$ )Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$ab (A_llist_a_llist_bool_fun_fun$ )Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$ac (Bool_b_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ B_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_b_llist_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_fun$ Bool_b_llist_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ad (Bool_bool_bool_fun_fun$ B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ )Bool_b_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ae (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ B_llist_b_llist_fun_bool_fun_b_llist_b_llist_fun_bool_fun_bool_fun_fun$ )B_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$af (B_llist_b_llist_fun_b_llist_b_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )B_llist_b_llist_fun_bool_fun_b_llist_b_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ag (B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ )B_llist_b_llist_fun_b_llist_b_llist_fun_bool_fun_fun$ )
(declare-fun rel_fun$ah (Bool_b_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ai (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ A_llist_b_llist_fun_bool_fun_a_llist_b_llist_fun_bool_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$aj (A_llist_b_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_b_llist_fun_bool_fun_a_llist_b_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ak (A_llist_a_llist_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ )A_llist_b_llist_fun_a_llist_b_llist_fun_bool_fun_fun$ )
(declare-fun rel_fun$al (Bool_b_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ B_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_b_llist_bool_fun_fun_b_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_fun$ Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$am (Bool_bool_bool_fun_fun$ B_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )Bool_b_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$an (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ B_llist_b_llist_fun_bool_fun_b_llist_a_llist_fun_bool_fun_bool_fun_fun$ )B_llist_bool_fun_b_llist_b_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ao (B_llist_b_llist_fun_b_llist_a_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )B_llist_b_llist_fun_bool_fun_b_llist_a_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ap (B_llist_b_llist_bool_fun_fun$ B_llist_a_llist_bool_fun_fun$ )B_llist_b_llist_fun_b_llist_a_llist_fun_bool_fun_fun$ )
(declare-fun rel_fun$aq (Bool_b_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ar (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ A_llist_b_llist_fun_bool_fun_a_llist_a_llist_fun_bool_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$as (A_llist_b_llist_fun_a_llist_a_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_b_llist_fun_bool_fun_a_llist_a_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$at (A_llist_a_llist_bool_fun_fun$ B_llist_a_llist_bool_fun_fun$ )A_llist_b_llist_fun_a_llist_a_llist_fun_bool_fun_fun$ )
(declare-fun rel_fun$au (Bool_bool_bool_fun_fun$ A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )Bool_a_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$av (B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun$ B_llist_a_llist_fun_bool_fun_b_llist_a_llist_fun_bool_fun_bool_fun_fun$ )B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$aw (B_llist_a_llist_fun_b_llist_a_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )B_llist_a_llist_fun_bool_fun_b_llist_a_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ax (B_llist_b_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )B_llist_a_llist_fun_b_llist_a_llist_fun_bool_fun_fun$ )
(declare-fun rel_fun$ay (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ A_llist_a_llist_fun_bool_fun_a_llist_a_llist_fun_bool_fun_bool_fun_fun$ )A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$az (A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_a_llist_fun_bool_fun_a_llist_a_llist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ba (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_bool_fun_fun$ )
(declare-fun cr_stream$a ()B_llist_b_stream_bool_fun_fun$ )
(declare-fun llist_all2$ (A_b_bool_fun_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$a (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (B_a_bool_fun_fun$ )B_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$c (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun stream_all2$ (A_b_bool_fun_fun$ )A_stream_b_stream_bool_fun_fun$ )
(declare-fun llist_of_stream$ ()A_stream_a_llist_fun$ )
(declare-fun stream_of_llist$ ()A_llist_a_stream_fun$ )
(declare-fun type_definition$ (A_stream_a_llist_fun$ A_llist_a_stream_fun$ A_llist_set$ )Bool )
(declare-fun llist_of_stream$a ()B_stream_b_llist_fun$ )
(declare-fun stream_of_llist$a ()B_llist_b_stream_fun$ )
(declare-fun type_definition$a (B_stream_b_llist_fun$ B_llist_b_stream_fun$ B_llist_set$ )Bool )
(assert (! (forall ((?v0 B_llist$ ))(! (= (fun_app$ uua$ ?v0 )(not (fun_app$ lfinite$ ?v0 ))):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$a uu$ ?v0 )(not (fun_app$a lfinite$a ?v0 ))):pattern ((fun_app$a uu$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 B_llist_set$ )(?v1 B_llist$ ))(! (= (fun_app$ (uum$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$ (uum$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist$ ))(! (= (fun_app$a (uun$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$a (uun$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$b uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$b uug$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$a (fun_app$c uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$a (fun_app$c uui$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(! (= (fun_app$d (fun_app$e uuj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uuj$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$f (fun_app$g uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uuf$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$h (fun_app$i uuh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uuh$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 B_stream_b_llist_fun$ )(?v1 B_llist$ )(?v2 B_stream$ ))(! (= (fun_app$j (fun_app$k (uuk$ ?v0 )?v1 )?v2 )(= ?v1 (fun_app$l ?v0 ?v2 ))):pattern ((fun_app$j (fun_app$k (uuk$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_stream_a_llist_fun$ )(?v1 A_llist$ )(?v2 A_stream$ ))(! (= (fun_app$m (fun_app$n (uul$ ?v0 )?v1 )?v2 )(= ?v1 (fun_app$o ?v0 ?v2 ))):pattern ((fun_app$m (fun_app$n (uul$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$f (fun_app$g (uub$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$f (fun_app$g ?v0 ?v2 )?v3 )(fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (uub$ ?v0 ?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$h (fun_app$p (uuc$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$h (fun_app$p ?v0 ?v2 )?v3 )(fun_app$h (fun_app$p ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$p (uuc$ ?v0 ?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$f (fun_app$q (uue$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$f (fun_app$q ?v0 ?v2 )?v3 )(fun_app$f (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$q (uue$ ?v0 ?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$h (fun_app$i (uud$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$h (fun_app$i ?v0 ?v2 )?v3 )(fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uud$ ?v0 ?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 B_llist$ ))(! (= (fun_app$r uuo$ ?v0 )?v0 ):pattern ((fun_app$r uuo$ ?v0 )))):named a15 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$s uup$ ?v0 )?v0 ):pattern ((fun_app$s uup$ ?v0 )))):named a16 ))
(assert (! (not (= (fun_app$ (fun_app$t (llist_all2$ p$ )(fun_app$o llist_of_stream$ xs$ ))(fun_app$l llist_of_stream$a ys$ ))(fun_app$j (fun_app$u (stream_all2$ p$ )xs$ )ys$ ))):named a17 ))
(assert (! (= xs$ (fun_app$v stream_of_llist$ y$ )):named a18 ))
(assert (! (member$a y$ (collect$ uu$ )):named a19 ))
(assert (! (= ys$ (fun_app$w stream_of_llist$a ya$ )):named a20 ))
(assert (! (member$ ya$ (collect$a uua$ )):named a21 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$v stream_of_llist$ (fun_app$o llist_of_stream$ ?v0 ))?v0 )):named a22 ))
(assert (! (forall ((?v0 B_stream$ ))(= (fun_app$w stream_of_llist$a (fun_app$l llist_of_stream$a ?v0 ))?v0 )):named a23 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$v stream_of_llist$ (fun_app$o llist_of_stream$ ?v0 ))?v0 )):named a24 ))
(assert (! (forall ((?v0 B_stream$ ))(= (fun_app$w stream_of_llist$a (fun_app$l llist_of_stream$a ?v0 ))?v0 )):named a25 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (not (fun_app$a lfinite$a ?v0 ))(= (fun_app$o llist_of_stream$ (fun_app$v stream_of_llist$ ?v0 ))?v0 ))):named a26 ))
(assert (! (forall ((?v0 B_llist$ ))(=> (not (fun_app$ lfinite$ ?v0 ))(= (fun_app$l llist_of_stream$a (fun_app$w stream_of_llist$a ?v0 ))?v0 ))):named a27 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (= (fun_app$o llist_of_stream$ ?v0 )(fun_app$o llist_of_stream$ ?v1 ))(= ?v0 ?v1 ))):named a28 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (= (fun_app$l llist_of_stream$a ?v0 )(fun_app$l llist_of_stream$a ?v1 ))(= ?v0 ?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ ))(=> (forall ((?v2 A_llist$ ))(=> (member$a ?v2 (collect$ uu$ ))(fun_app$m ?v0 (fun_app$v stream_of_llist$ ?v2 ))))(fun_app$m ?v0 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 B_stream_bool_fun$ )(?v1 B_stream$ ))(=> (forall ((?v2 B_llist$ ))(=> (member$ ?v2 (collect$a uua$ ))(fun_app$j ?v0 (fun_app$w stream_of_llist$a ?v2 ))))(fun_app$j ?v0 ?v1 ))):named a31 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (forall ((?v1 A_llist$ ))(=> (and (= ?v0 (fun_app$v stream_of_llist$ ?v1 ))(member$a ?v1 (collect$ uu$ )))false ))false )):named a32 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (forall ((?v1 B_llist$ ))(=> (and (= ?v0 (fun_app$w stream_of_llist$a ?v1 ))(member$ ?v1 (collect$a uua$ )))false ))false )):named a33 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_bool_fun$ ))(=> (and (member$a ?v0 (collect$ uu$ ))(forall ((?v2 A_stream$ ))(fun_app$a ?v1 (fun_app$o llist_of_stream$ ?v2 ))))(fun_app$a ?v1 ?v0 ))):named a34 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist_bool_fun$ ))(=> (and (member$ ?v0 (collect$a uua$ ))(forall ((?v2 B_stream$ ))(fun_app$ ?v1 (fun_app$l llist_of_stream$a ?v2 ))))(fun_app$ ?v1 ?v0 ))):named a35 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (member$a ?v0 (collect$ uu$ ))(forall ((?v1 A_stream$ ))(=> (= ?v0 (fun_app$o llist_of_stream$ ?v1 ))false )))false )):named a36 ))
(assert (! (forall ((?v0 B_llist$ ))(=> (and (member$ ?v0 (collect$a uua$ ))(forall ((?v1 B_stream$ ))(=> (= ?v0 (fun_app$l llist_of_stream$a ?v1 ))false )))false )):named a37 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (member$a ?v0 (collect$ uu$ ))(member$a ?v1 (collect$ uu$ )))(= (= (fun_app$v stream_of_llist$ ?v0 )(fun_app$v stream_of_llist$ ?v1 ))(= ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (member$ ?v0 (collect$a uua$ ))(member$ ?v1 (collect$a uua$ )))(= (= (fun_app$w stream_of_llist$a ?v0 )(fun_app$w stream_of_llist$a ?v1 ))(= ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (member$a ?v0 (collect$ uu$ ))(= (fun_app$o llist_of_stream$ (fun_app$v stream_of_llist$ ?v0 ))?v0 ))):named a40 ))
(assert (! (forall ((?v0 B_llist$ ))(=> (member$ ?v0 (collect$a uua$ ))(= (fun_app$l llist_of_stream$a (fun_app$w stream_of_llist$a ?v0 ))?v0 ))):named a41 ))
(assert (! (forall ((?v0 A_stream$ ))(member$a (fun_app$o llist_of_stream$ ?v0 )(collect$ uu$ ))):named a42 ))
(assert (! (forall ((?v0 B_stream$ ))(member$ (fun_app$l llist_of_stream$a ?v0 )(collect$a uua$ ))):named a43 ))
(assert (! (forall ((?v0 A_stream$ ))(not (fun_app$a lfinite$a (fun_app$o llist_of_stream$ ?v0 )))):named a44 ))
(assert (! (forall ((?v0 B_stream$ ))(not (fun_app$ lfinite$ (fun_app$l llist_of_stream$a ?v0 )))):named a45 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (fun_app$a (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(= (fun_app$a lfinite$a ?v1 )(fun_app$a lfinite$a ?v2 )))):named a46 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ ))(=> (fun_app$a (fun_app$x (llist_all2$b ?v0 )?v1 )?v2 )(= (fun_app$ lfinite$ ?v1 )(fun_app$a lfinite$a ?v2 )))):named a47 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )?v2 )(= (fun_app$ lfinite$ ?v1 )(fun_app$ lfinite$ ?v2 )))):named a48 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ ))(=> (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v1 )?v2 )(= (fun_app$a lfinite$a ?v1 )(fun_app$ lfinite$ ?v2 )))):named a49 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (not (fun_app$a lfinite$a ?v0 ))(fun_app$m (fun_app$n cr_stream$ ?v0 )(fun_app$v stream_of_llist$ ?v0 )))):named a50 ))
(assert (! (forall ((?v0 B_llist$ ))(=> (not (fun_app$ lfinite$ ?v0 ))(fun_app$j (fun_app$k cr_stream$a ?v0 )(fun_app$w stream_of_llist$a ?v0 )))):named a51 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c (uub$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v2 )?v3 )(fun_app$ (fun_app$b (llist_all2$c ?v1 )?v2 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$a (fun_app$x (llist_all2$b (uuc$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$a (fun_app$x (llist_all2$b ?v0 )?v2 )?v3 )(fun_app$a (fun_app$x (llist_all2$b ?v1 )?v2 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$a (fun_app$c (llist_all2$a (uud$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$a (fun_app$c (llist_all2$a ?v0 )?v2 )?v3 )(fun_app$a (fun_app$c (llist_all2$a ?v1 )?v2 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$t (llist_all2$ (uue$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v2 )?v3 )(fun_app$ (fun_app$t (llist_all2$ ?v1 )?v2 )?v3 )))):named a55 ))
(assert (! (type_definition$ llist_of_stream$ stream_of_llist$ (collect$ uu$ )):named a56 ))
(assert (! (type_definition$a llist_of_stream$a stream_of_llist$a (collect$a uua$ )):named a57 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_stream$ ))(! (= (fun_app$m (fun_app$n cr_stream$ ?v0 )?v1 )(= ?v0 (fun_app$o llist_of_stream$ ?v1 ))):pattern ((fun_app$m (fun_app$n cr_stream$ ?v0 )?v1 )))):named a58 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_stream$ ))(! (= (fun_app$j (fun_app$k cr_stream$a ?v0 )?v1 )(= ?v0 (fun_app$l llist_of_stream$a ?v1 ))):pattern ((fun_app$j (fun_app$k cr_stream$a ?v0 )?v1 )))):named a59 ))
(assert (! (= (llist_all2$c uuf$ )uug$ ):named a60 ))
(assert (! (= (llist_all2$a uuh$ )uui$ ):named a61 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (fun_app$f (fun_app$g ?v0 ?v4 )?v5 )(fun_app$f (fun_app$g ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$b (llist_all2$c ?v3 )?v1 )?v2 ))):named a62 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$a (fun_app$x (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$h (fun_app$p ?v0 ?v4 )?v5 )(fun_app$h (fun_app$p ?v3 ?v4 )?v5 ))))(fun_app$a (fun_app$x (llist_all2$b ?v3 )?v1 )?v2 ))):named a63 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$a (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (fun_app$h (fun_app$i ?v0 ?v4 )?v5 )(fun_app$h (fun_app$i ?v3 ?v4 )?v5 ))))(fun_app$a (fun_app$c (llist_all2$a ?v3 )?v1 )?v2 ))):named a64 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$f (fun_app$q ?v0 ?v4 )?v5 )(fun_app$f (fun_app$q ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$t (llist_all2$ ?v3 )?v1 )?v2 ))):named a65 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_b_bool_fun_fun$ )(?v3 B_llist$ )(?v4 B_llist$ )(?v5 B_llist$ )(?v6 B_llist$ ))(=> (and (forall ((?v7 B$ )(?v8 B$ ))(=> (fun_app$f (fun_app$g ?v0 ?v7 )?v8 )(forall ((?v9 B$ )(?v10 B$ ))(=> (fun_app$f (fun_app$g ?v0 ?v9 )?v10 )(= (fun_app$f (fun_app$g ?v1 ?v7 )?v9 )(fun_app$f (fun_app$g ?v2 ?v8 )?v10 ))))))(and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v3 )?v4 )(fun_app$ (fun_app$b (llist_all2$c ?v0 )?v5 )?v6 )))(= (fun_app$ (fun_app$b (llist_all2$c ?v1 )?v3 )?v5 )(fun_app$ (fun_app$b (llist_all2$c ?v2 )?v4 )?v6 )))):named a66 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_a_bool_fun_fun$ )(?v3 B_llist$ )(?v4 A_llist$ )(?v5 B_llist$ )(?v6 A_llist$ ))(=> (and (forall ((?v7 B$ )(?v8 A$ ))(=> (fun_app$h (fun_app$p ?v0 ?v7 )?v8 )(forall ((?v9 B$ )(?v10 A$ ))(=> (fun_app$h (fun_app$p ?v0 ?v9 )?v10 )(= (fun_app$f (fun_app$g ?v1 ?v7 )?v9 )(fun_app$h (fun_app$i ?v2 ?v8 )?v10 ))))))(and (fun_app$a (fun_app$x (llist_all2$b ?v0 )?v3 )?v4 )(fun_app$a (fun_app$x (llist_all2$b ?v0 )?v5 )?v6 )))(= (fun_app$ (fun_app$b (llist_all2$c ?v1 )?v3 )?v5 )(fun_app$a (fun_app$c (llist_all2$a ?v2 )?v4 )?v6 )))):named a67 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_bool_fun_fun$ )(?v3 A_llist$ )(?v4 A_llist$ )(?v5 A_llist$ )(?v6 A_llist$ ))(=> (and (forall ((?v7 A$ )(?v8 A$ ))(=> (fun_app$h (fun_app$i ?v0 ?v7 )?v8 )(forall ((?v9 A$ )(?v10 A$ ))(=> (fun_app$h (fun_app$i ?v0 ?v9 )?v10 )(= (fun_app$h (fun_app$i ?v1 ?v7 )?v9 )(fun_app$h (fun_app$i ?v2 ?v8 )?v10 ))))))(and (fun_app$a (fun_app$c (llist_all2$a ?v0 )?v3 )?v4 )(fun_app$a (fun_app$c (llist_all2$a ?v0 )?v5 )?v6 )))(= (fun_app$a (fun_app$c (llist_all2$a ?v1 )?v3 )?v5 )(fun_app$a (fun_app$c (llist_all2$a ?v2 )?v4 )?v6 )))):named a68 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_b_bool_fun_fun$ )(?v3 A_llist$ )(?v4 B_llist$ )(?v5 A_llist$ )(?v6 B_llist$ ))(=> (and (forall ((?v7 A$ )(?v8 B$ ))(=> (fun_app$f (fun_app$q ?v0 ?v7 )?v8 )(forall ((?v9 A$ )(?v10 B$ ))(=> (fun_app$f (fun_app$q ?v0 ?v9 )?v10 )(= (fun_app$h (fun_app$i ?v1 ?v7 )?v9 )(fun_app$f (fun_app$g ?v2 ?v8 )?v10 ))))))(and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v3 )?v4 )(fun_app$ (fun_app$t (llist_all2$ ?v0 )?v5 )?v6 )))(= (fun_app$a (fun_app$c (llist_all2$a ?v1 )?v3 )?v5 )(fun_app$ (fun_app$b (llist_all2$c ?v2 )?v4 )?v6 )))):named a69 ))
(assert (! (quotient$ (eq_onp$ uu$ )stream_of_llist$ llist_of_stream$ cr_stream$ ):named a70 ))
(assert (! (quotient$a (eq_onp$a uua$ )stream_of_llist$a llist_of_stream$a cr_stream$a ):named a71 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ )(?v4 A_llist$ ))(=> (and (fun_app$a (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(=> (and (fun_app$a lfinite$a ?v1 )(fun_app$a lfinite$a ?v2 ))(fun_app$a (fun_app$c (llist_all2$a ?v0 )?v3 )?v4 )))(fun_app$a (fun_app$c (llist_all2$a ?v0 )(lappend$ ?v1 ?v3 ))(lappend$ ?v2 ?v4 )))):named a72 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_llist$ )(?v4 A_llist$ ))(=> (and (fun_app$a (fun_app$x (llist_all2$b ?v0 )?v1 )?v2 )(=> (and (fun_app$ lfinite$ ?v1 )(fun_app$a lfinite$a ?v2 ))(fun_app$a (fun_app$x (llist_all2$b ?v0 )?v3 )?v4 )))(fun_app$a (fun_app$x (llist_all2$b ?v0 )(lappend$a ?v1 ?v3 ))(lappend$ ?v2 ?v4 )))):named a73 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_llist$ )(?v4 B_llist$ ))(=> (and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )?v2 )(=> (and (fun_app$ lfinite$ ?v1 )(fun_app$ lfinite$ ?v2 ))(fun_app$ (fun_app$b (llist_all2$c ?v0 )?v3 )?v4 )))(fun_app$ (fun_app$b (llist_all2$c ?v0 )(lappend$a ?v1 ?v3 ))(lappend$a ?v2 ?v4 )))):named a74 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_llist$ )(?v4 B_llist$ ))(=> (and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v1 )?v2 )(=> (and (fun_app$a lfinite$a ?v1 )(fun_app$ lfinite$ ?v2 ))(fun_app$ (fun_app$t (llist_all2$ ?v0 )?v3 )?v4 )))(fun_app$ (fun_app$t (llist_all2$ ?v0 )(lappend$ ?v1 ?v3 ))(lappend$a ?v2 ?v4 )))):named a75 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(fun_app$y (fun_app$z (fun_app$aa (rel_fun$ (llist_all2$a ?v0 ))uuj$ )lfinite$a )lfinite$a )):named a76 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ ))(fun_app$y (fun_app$ab (rel_fun$a (llist_all2$b ?v0 )uuj$ )lfinite$ )lfinite$a )):named a77 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ ))(fun_app$ac (fun_app$ad (fun_app$ae (rel_fun$b (llist_all2$c ?v0 ))uuj$ )lfinite$ )lfinite$ )):named a78 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ ))(fun_app$ac (fun_app$af (rel_fun$c (llist_all2$ ?v0 )uuj$ )lfinite$a )lfinite$ )):named a79 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (fun_app$a lfinite$a (lappend$ ?v0 ?v1 ))(and (fun_app$a lfinite$a ?v0 )(fun_app$a lfinite$a ?v1 )))):named a80 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(= (fun_app$ lfinite$ (lappend$a ?v0 ?v1 ))(and (fun_app$ lfinite$ ?v0 )(fun_app$ lfinite$ ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (lappend$ (lappend$ ?v0 ?v1 )?v2 )(lappend$ ?v0 (lappend$ ?v1 ?v2 )))):named a82 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(= (lappend$a (lappend$a ?v0 ?v1 )?v2 )(lappend$a ?v0 (lappend$a ?v1 ?v2 )))):named a83 ))
(assert (! (forall ((?v0 B_llist_bool_fun$ )(?v1 B_llist$ ))(=> (fun_app$ ?v0 ?v1 )(fun_app$ (fun_app$b (eq_onp$a ?v0 )?v1 )?v1 ))):named a84 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ ))(=> (fun_app$a ?v0 ?v1 )(fun_app$a (fun_app$c (eq_onp$ ?v0 )?v1 )?v1 ))):named a85 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (=> (not (fun_app$a lfinite$a ?v0 ))(= (lappend$ ?v0 ?v1 )?v0 )):pattern ((lappend$ ?v0 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (=> (not (fun_app$ lfinite$ ?v0 ))(= (lappend$a ?v0 ?v1 )?v0 )):pattern ((lappend$a ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 B_stream_b_llist_fun$ )(?v1 B_llist_b_stream_fun$ )(?v2 B_llist_bool_fun$ )(?v3 B_llist_b_stream_bool_fun_fun$ ))(=> (and (type_definition$a ?v0 ?v1 (collect$a ?v2 ))(= ?v3 (uuk$ ?v0 )))(quotient$a (eq_onp$a ?v2 )?v1 ?v0 ?v3 ))):named a88 ))
(assert (! (forall ((?v0 A_stream_a_llist_fun$ )(?v1 A_llist_a_stream_fun$ )(?v2 A_llist_bool_fun$ )(?v3 A_llist_a_stream_bool_fun_fun$ ))(=> (and (type_definition$ ?v0 ?v1 (collect$ ?v2 ))(= ?v3 (uul$ ?v0 )))(quotient$ (eq_onp$ ?v2 )?v1 ?v0 ?v3 ))):named a89 ))
(assert (! (forall ((?v0 B_stream_b_llist_fun$ )(?v1 B_llist_b_stream_fun$ )(?v2 B_llist_set$ )(?v3 B_llist_b_stream_bool_fun_fun$ ))(=> (and (type_definition$a ?v0 ?v1 ?v2 )(= ?v3 (uuk$ ?v0 )))(quotient$a (eq_onp$a (uum$ ?v2 ))?v1 ?v0 ?v3 ))):named a90 ))
(assert (! (forall ((?v0 A_stream_a_llist_fun$ )(?v1 A_llist_a_stream_fun$ )(?v2 A_llist_set$ )(?v3 A_llist_a_stream_bool_fun_fun$ ))(=> (and (type_definition$ ?v0 ?v1 ?v2 )(= ?v3 (uul$ ?v0 )))(quotient$ (eq_onp$ (uun$ ?v2 ))?v1 ?v0 ?v3 ))):named a91 ))
(assert (! (forall ((?v0 B_stream_b_llist_fun$ )(?v1 B_llist_b_stream_fun$ )(?v2 B_llist_set$ )(?v3 B_llist_b_stream_bool_fun_fun$ ))(=> (and (type_definition$a ?v0 ?v1 ?v2 )(= ?v3 (uuk$ ?v0 )))(rel_fun$d ?v3 uug$ uuo$ ?v0 ))):named a92 ))
(assert (! (forall ((?v0 A_stream_a_llist_fun$ )(?v1 A_llist_a_stream_fun$ )(?v2 A_llist_set$ )(?v3 A_llist_a_stream_bool_fun_fun$ ))(=> (and (type_definition$ ?v0 ?v1 ?v2 )(= ?v3 (uul$ ?v0 )))(rel_fun$e ?v3 uui$ uup$ ?v0 ))):named a93 ))
(assert (! (forall ((?v0 Bool_a_llist_bool_fun_fun_bool_b_llist_bool_fun_fun_bool_fun_fun$ )(?v1 A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_bool_fun_fun$ )(?v2 Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ )(?v3 Bool_b_llist_bool_fun_fun_a_llist_bool_fun_a_llist_b_llist_fun_bool_fun_fun_fun$ ))(=> (forall ((?v4 Bool_a_llist_bool_fun_fun$ )(?v5 Bool_b_llist_bool_fun_fun$ ))(=> (fun_app$ag (fun_app$ah ?v0 ?v4 )?v5 )(fun_app$ai (fun_app$aj ?v1 (fun_app$ak ?v2 ?v4 ))(fun_app$al ?v3 ?v5 ))))(rel_fun$f ?v0 ?v1 ?v2 ?v3 ))):named a94 ))
(assert (! (forall ((?v0 Bool_a_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ )(?v1 B_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ )(?v2 Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ )(?v3 Bool_a_llist_bool_fun_fun_b_llist_bool_fun_b_llist_a_llist_fun_bool_fun_fun_fun$ ))(=> (forall ((?v4 Bool_a_llist_bool_fun_fun$ )(?v5 Bool_a_llist_bool_fun_fun$ ))(=> (fun_app$am (fun_app$an ?v0 ?v4 )?v5 )(fun_app$ao (fun_app$ap ?v1 (fun_app$aq ?v2 ?v4 ))(fun_app$aq ?v3 ?v5 ))))(rel_fun$g ?v0 ?v1 ?v2 ?v3 ))):named a95 ))
(assert (! (forall ((?v0 Bool_a_llist_bool_fun_fun_bool_a_llist_bool_fun_fun_bool_fun_fun$ )(?v1 A_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_bool_fun_fun$ )(?v2 Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ )(?v3 Bool_a_llist_bool_fun_fun_a_llist_bool_fun_a_llist_a_llist_fun_bool_fun_fun_fun$ ))(=> (forall ((?v4 Bool_a_llist_bool_fun_fun$ )(?v5 Bool_a_llist_bool_fun_fun$ ))(=> (fun_app$am (fun_app$an ?v0 ?v4 )?v5 )(fun_app$ar (fun_app$as ?v1 (fun_app$ak ?v2 ?v4 ))(fun_app$ak ?v3 ?v5 ))))(rel_fun$h ?v0 ?v1 ?v2 ?v3 ))):named a96 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ )(?v1 B_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_bool_fun_fun$ )(?v2 Bool_bool_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_fun$ )(?v3 Bool_bool_bool_fun_fun_b_llist_bool_fun_b_llist_bool_fun_bool_fun_fun_fun$ ))(=> (forall ((?v4 Bool_bool_bool_fun_fun$ )(?v5 Bool_bool_bool_fun_fun$ ))(=> (fun_app$at (fun_app$au ?v0 ?v4 )?v5 )(fun_app$av (fun_app$aw ?v1 (fun_app$ae ?v2 ?v4 ))(fun_app$ae ?v3 ?v5 ))))(rel_fun$i ?v0 ?v1 ?v2 ?v3 ))):named a97 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ )(?v1 A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_bool_fun_fun$ )(?v2 Bool_bool_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_fun$ )(?v3 Bool_bool_bool_fun_fun_a_llist_bool_fun_a_llist_bool_fun_bool_fun_fun_fun$ ))(=> (forall ((?v4 Bool_bool_bool_fun_fun$ )(?v5 Bool_bool_bool_fun_fun$ ))(=> (fun_app$at (fun_app$au ?v0 ?v4 )?v5 )(fun_app$ax (fun_app$ay ?v1 (fun_app$aa ?v2 ?v4 ))(fun_app$aa ?v3 ?v5 ))))(rel_fun$j ?v0 ?v1 ?v2 ?v3 ))):named a98 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 Bool_bool_bool_fun_fun$ )(?v2 A_llist_bool_fun$ )(?v3 B_llist_bool_fun$ ))(=> (forall ((?v4 A_llist$ )(?v5 B_llist$ ))(=> (fun_app$ (fun_app$t ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v1 (fun_app$a ?v2 ?v4 ))(fun_app$ ?v3 ?v5 ))))(fun_app$ac (fun_app$af (rel_fun$c ?v0 ?v1 )?v2 )?v3 ))):named a99 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 Bool_bool_bool_fun_fun$ )(?v2 B_llist_bool_fun$ )(?v3 B_llist_bool_fun$ ))(=> (forall ((?v4 B_llist$ )(?v5 B_llist$ ))(=> (fun_app$ (fun_app$b ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v1 (fun_app$ ?v2 ?v4 ))(fun_app$ ?v3 ?v5 ))))(fun_app$ac (fun_app$ad (fun_app$ae (rel_fun$b ?v0 )?v1 )?v2 )?v3 ))):named a100 ))
(assert (! (forall ((?v0 B_llist_a_llist_bool_fun_fun$ )(?v1 Bool_bool_bool_fun_fun$ )(?v2 B_llist_bool_fun$ )(?v3 A_llist_bool_fun$ ))(=> (forall ((?v4 B_llist$ )(?v5 A_llist$ ))(=> (fun_app$a (fun_app$x ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v1 (fun_app$ ?v2 ?v4 ))(fun_app$a ?v3 ?v5 ))))(fun_app$y (fun_app$ab (rel_fun$a ?v0 ?v1 )?v2 )?v3 ))):named a101 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Bool_bool_bool_fun_fun$ )(?v2 A_llist_bool_fun$ )(?v3 A_llist_bool_fun$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (fun_app$a (fun_app$c ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v1 (fun_app$a ?v2 ?v4 ))(fun_app$a ?v3 ?v5 ))))(fun_app$y (fun_app$z (fun_app$aa (rel_fun$ ?v0 )?v1 )?v2 )?v3 ))):named a102 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_b_stream_fun$ )(?v2 B_stream_b_llist_fun$ )(?v3 B_llist_b_stream_bool_fun_fun$ )(?v4 Bool_bool_bool_fun_fun$ )(?v5 B_llist_bool_fun$ )(?v6 B_llist_bool_fun$ )(?v7 B_llist$ )(?v8 B_llist$ ))(=> (and (quotient$a ?v0 ?v1 ?v2 ?v3 )(and (fun_app$ac (fun_app$ad (fun_app$ae (rel_fun$b ?v0 )?v4 )?v5 )?v6 )(fun_app$ (fun_app$b ?v0 ?v7 )?v8 )))(fun_app$d (fun_app$e ?v4 (fun_app$ ?v5 ?v7 ))(fun_app$ ?v6 ?v8 )))):named a103 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_stream_fun$ )(?v2 A_stream_a_llist_fun$ )(?v3 A_llist_a_stream_bool_fun_fun$ )(?v4 Bool_bool_bool_fun_fun$ )(?v5 A_llist_bool_fun$ )(?v6 A_llist_bool_fun$ )(?v7 A_llist$ )(?v8 A_llist$ ))(=> (and (quotient$ ?v0 ?v1 ?v2 ?v3 )(and (fun_app$y (fun_app$z (fun_app$aa (rel_fun$ ?v0 )?v4 )?v5 )?v6 )(fun_app$a (fun_app$c ?v0 ?v7 )?v8 )))(fun_app$d (fun_app$e ?v4 (fun_app$a ?v5 ?v7 ))(fun_app$a ?v6 ?v8 )))):named a104 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_b_stream_fun$ )(?v2 B_stream_b_llist_fun$ )(?v3 B_llist_b_stream_bool_fun_fun$ )(?v4 Bool_bool_bool_fun_fun$ )(?v5 B_llist_bool_fun$ )(?v6 B_stream$ ))(=> (and (quotient$a ?v0 ?v1 ?v2 ?v3 )(fun_app$ac (fun_app$ad (fun_app$ae (rel_fun$b ?v0 )?v4 )?v5 )?v5 ))(fun_app$d (fun_app$e ?v4 (fun_app$ ?v5 (fun_app$l ?v2 ?v6 )))(fun_app$ ?v5 (fun_app$l ?v2 ?v6 ))))):named a105 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_stream_fun$ )(?v2 A_stream_a_llist_fun$ )(?v3 A_llist_a_stream_bool_fun_fun$ )(?v4 Bool_bool_bool_fun_fun$ )(?v5 A_llist_bool_fun$ )(?v6 A_stream$ ))(=> (and (quotient$ ?v0 ?v1 ?v2 ?v3 )(fun_app$y (fun_app$z (fun_app$aa (rel_fun$ ?v0 )?v4 )?v5 )?v5 ))(fun_app$d (fun_app$e ?v4 (fun_app$a ?v5 (fun_app$o ?v2 ?v6 )))(fun_app$a ?v5 (fun_app$o ?v2 ?v6 ))))):named a106 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 Bool_bool_bool_fun_fun$ ))(rel_fun$i (rel_fun$k ?v0 (rel_fun$l ?v1 uuj$ ))(rel_fun$m (fun_app$ae (rel_fun$b uug$ )?v0 )(rel_fun$n (fun_app$ae (rel_fun$b uug$ )?v1 )uuj$ ))(rel_fun$b uug$ )(rel_fun$b uug$ ))):named a107 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 Bool_bool_bool_fun_fun$ ))(rel_fun$j (rel_fun$k ?v0 (rel_fun$l ?v1 uuj$ ))(rel_fun$o (fun_app$aa (rel_fun$ uui$ )?v0 )(rel_fun$p (fun_app$aa (rel_fun$ uui$ )?v1 )uuj$ ))(rel_fun$ uui$ )(rel_fun$ uui$ ))):named a108 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 A_llist_b_llist_bool_fun_fun$ ))(rel_fun$q (rel_fun$r ?v0 (rel_fun$c ?v1 uuj$ ))(rel_fun$s (fun_app$ae (rel_fun$b uug$ )?v0 )(rel_fun$t (rel_fun$u uug$ ?v1 )uuj$ ))(rel_fun$v uug$ )(rel_fun$w uug$ ))):named a109 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 A_llist_b_llist_bool_fun_fun$ ))(rel_fun$f (rel_fun$r ?v0 (rel_fun$c ?v1 uuj$ ))(rel_fun$x (fun_app$aa (rel_fun$ uui$ )?v0 )(rel_fun$y (rel_fun$z uui$ ?v1 )uuj$ ))(rel_fun$aa uui$ )(rel_fun$ab uui$ ))):named a110 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ ))(rel_fun$ac (rel_fun$ad ?v0 (fun_app$ae (rel_fun$b ?v1 )uuj$ ))(rel_fun$ae (fun_app$ae (rel_fun$b uug$ )?v0 )(rel_fun$af (rel_fun$ag uug$ ?v1 )uuj$ ))(rel_fun$w uug$ )(rel_fun$w uug$ ))):named a111 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ ))(rel_fun$ah (rel_fun$ad ?v0 (fun_app$ae (rel_fun$b ?v1 )uuj$ ))(rel_fun$ai (fun_app$aa (rel_fun$ uui$ )?v0 )(rel_fun$aj (rel_fun$ak uui$ ?v1 )uuj$ ))(rel_fun$ab uui$ )(rel_fun$ab uui$ ))):named a112 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 B_llist_a_llist_bool_fun_fun$ ))(rel_fun$al (rel_fun$am ?v0 (rel_fun$a ?v1 uuj$ ))(rel_fun$an (fun_app$ae (rel_fun$b uug$ )?v0 )(rel_fun$ao (rel_fun$ap uug$ ?v1 )uuj$ ))(rel_fun$w uug$ )(rel_fun$v uug$ ))):named a113 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 B_llist_a_llist_bool_fun_fun$ ))(rel_fun$aq (rel_fun$am ?v0 (rel_fun$a ?v1 uuj$ ))(rel_fun$ar (fun_app$aa (rel_fun$ uui$ )?v0 )(rel_fun$as (rel_fun$at uui$ ?v1 )uuj$ ))(rel_fun$ab uui$ )(rel_fun$aa uui$ ))):named a114 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ ))(rel_fun$g (rel_fun$au ?v0 (fun_app$aa (rel_fun$ ?v1 )uuj$ ))(rel_fun$av (fun_app$ae (rel_fun$b uug$ )?v0 )(rel_fun$aw (rel_fun$ax uug$ ?v1 )uuj$ ))(rel_fun$v uug$ )(rel_fun$v uug$ ))):named a115 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ ))(rel_fun$h (rel_fun$au ?v0 (fun_app$aa (rel_fun$ ?v1 )uuj$ ))(rel_fun$ay (fun_app$aa (rel_fun$ uui$ )?v0 )(rel_fun$az (rel_fun$ba uui$ ?v1 )uuj$ ))(rel_fun$aa uui$ )(rel_fun$aa uui$ ))):named a116 ))
(check-sat )
;(get-unsat-core )
