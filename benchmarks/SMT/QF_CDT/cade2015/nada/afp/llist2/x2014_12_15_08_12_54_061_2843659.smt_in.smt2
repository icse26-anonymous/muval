;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun a$ ()A$ )
(declare-fun t$ ()A_llist$ )
(declare-fun less$ (A_llist$ )A_llist_bool_fun$ )
(declare-fun member$ (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun fpslsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist$ A_llist_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun alllstsp$ (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun finlstsp$ (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun fpslsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$b (A_set$ )A_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$c (A_bool_fun$ A$ )Bool )
(declare-fun lbutlast$ (A_llist_llist$ )A_llist_llist$ )
(declare-fun alllstsp$a (A_bool_fun$ )A_llist_bool_fun$ )
(declare-fun finlstsp$a (A_bool_fun$ )A_llist_bool_fun$ )
(declare-fun lbutlast$a (A_llist$ )A_llist$ )
(assert (! (not (fun_app$ (less$ lNil$ )(lCons$ a$ t$ ))):named a0 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (= ?v0 lNil$a )false )(forall ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))false )))false )):named a1 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (not (= ?v0 lNil$a ))(exists ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(= ?v0 (lCons$a ?v1 ?v2 ))))):named a5 ))
(assert (! (forall ((?v0 A_llist$ ))(= (not (= ?v0 lNil$ ))(exists ((?v1 A$ )(?v2 A_llist$ ))(= ?v0 (lCons$ ?v1 ?v2 ))))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ ))(not (= lNil$a (lCons$a ?v0 ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(not (= lNil$ (lCons$ ?v0 ?v1 )))):named a8 ))
(assert (! (= (lbutlast$ lNil$a )lNil$a ):named a9 ))
(assert (! (= (lbutlast$a lNil$ )lNil$ ):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist_bool_fun$ ))(=> (and (member$ ?v0 (fpslsts$ ?v1 ))(and (forall ((?v3 A_llist_llist$ ))(=> (member$a ?v3 ?v1 )(fun_app$a ?v2 (lCons$b ?v3 lNil$b ))))(forall ((?v3 A_llist_llist$ )(?v4 A_llist_llist_llist$ ))(=> (and (member$ ?v4 (fpslsts$ ?v1 ))(and (fun_app$a ?v2 ?v4 )(member$a ?v3 ?v1 )))(fun_app$a ?v2 (lCons$b ?v3 ?v4 ))))))(fun_app$a ?v2 ?v0 ))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist_bool_fun$ ))(=> (and (member$a ?v0 (fpslsts$a ?v1 ))(and (forall ((?v3 A_llist$ ))(=> (member$b ?v3 ?v1 )(fun_app$b ?v2 (lCons$a ?v3 lNil$a ))))(forall ((?v3 A_llist$ )(?v4 A_llist_llist$ ))(=> (and (member$a ?v4 (fpslsts$a ?v1 ))(and (fun_app$b ?v2 ?v4 )(member$b ?v3 ?v1 )))(fun_app$b ?v2 (lCons$a ?v3 ?v4 ))))))(fun_app$b ?v2 ?v0 ))):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist_bool_fun$ ))(=> (and (member$b ?v0 (fpslsts$b ?v1 ))(and (forall ((?v3 A$ ))(=> (member$c ?v3 ?v1 )(fun_app$ ?v2 (lCons$ ?v3 lNil$ ))))(forall ((?v3 A$ )(?v4 A_llist$ ))(=> (and (member$b ?v4 (fpslsts$b ?v1 ))(and (fun_app$ ?v2 ?v4 )(member$c ?v3 ?v1 )))(fun_app$ ?v2 (lCons$ ?v3 ?v4 ))))))(fun_app$ ?v2 ?v0 ))):named a13 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(= (fun_app$b (finlstsp$ ?v0 )?v1 )(or (= ?v1 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v1 (lCons$a ?v3 ?v2 ))(and (fun_app$b (finlstsp$ ?v0 )?v2 )(fun_app$ ?v0 ?v3 ))))))):named a14 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(= (fun_app$ (finlstsp$a ?v0 )?v1 )(or (= ?v1 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v1 (lCons$ ?v3 ?v2 ))(and (fun_app$ (finlstsp$a ?v0 )?v2 )(fun_app$c ?v0 ?v3 ))))))):named a15 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(=> (and (fun_app$b (finlstsp$ ?v0 )?v1 )(and (=> (= ?v1 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v1 (lCons$a ?v3 ?v2 ))(and (fun_app$b (finlstsp$ ?v0 )?v2 )(fun_app$ ?v0 ?v3 )))false ))))false )):named a16 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(=> (and (fun_app$ (finlstsp$a ?v0 )?v1 )(and (=> (= ?v1 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v1 (lCons$ ?v3 ?v2 ))(and (fun_app$ (finlstsp$a ?v0 )?v2 )(fun_app$c ?v0 ?v3 )))false ))))false )):named a17 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(= (fun_app$b (alllstsp$ ?v0 )?v1 )(or (= ?v1 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v1 (lCons$a ?v3 ?v2 ))(and (fun_app$b (alllstsp$ ?v0 )?v2 )(fun_app$ ?v0 ?v3 ))))))):named a18 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(= (fun_app$ (alllstsp$a ?v0 )?v1 )(or (= ?v1 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v1 (lCons$ ?v3 ?v2 ))(and (fun_app$ (alllstsp$a ?v0 )?v2 )(fun_app$c ?v0 ?v3 ))))))):named a19 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(=> (and (fun_app$b (alllstsp$ ?v0 )?v1 )(and (=> (= ?v1 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v1 (lCons$a ?v3 ?v2 ))(and (fun_app$b (alllstsp$ ?v0 )?v2 )(fun_app$ ?v0 ?v3 )))false ))))false )):named a20 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(=> (and (fun_app$ (alllstsp$a ?v0 )?v1 )(and (=> (= ?v1 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v1 (lCons$ ?v3 ?v2 ))(and (fun_app$ (alllstsp$a ?v0 )?v2 )(fun_app$c ?v0 ?v3 )))false ))))false )):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_bool_fun$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_llist_llist$ ))(=> (fun_app$b ?v0 ?v3 )(or (= ?v3 lNil$a )(exists ((?v4 A_llist_llist$ )(?v5 A_llist$ ))(and (= ?v3 (lCons$a ?v5 ?v4 ))(and (or (fun_app$b ?v0 ?v4 )(fun_app$b (alllstsp$ ?v2 )?v4 ))(fun_app$ ?v2 ?v5 ))))))))(fun_app$b (alllstsp$ ?v2 )?v1 ))):named a22 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_bool_fun$ ))(=> (and (fun_app$ ?v0 ?v1 )(forall ((?v3 A_llist$ ))(=> (fun_app$ ?v0 ?v3 )(or (= ?v3 lNil$ )(exists ((?v4 A_llist$ )(?v5 A$ ))(and (= ?v3 (lCons$ ?v5 ?v4 ))(and (or (fun_app$ ?v0 ?v4 )(fun_app$ (alllstsp$a ?v2 )?v4 ))(fun_app$c ?v2 ?v5 ))))))))(fun_app$ (alllstsp$a ?v2 )?v1 ))):named a23 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$b (alllstsp$ ?v0 )?v1 )(fun_app$ ?v0 ?v2 ))(fun_app$b (alllstsp$ ?v0 )(lCons$a ?v2 ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 A$ ))(=> (and (fun_app$ (alllstsp$a ?v0 )?v1 )(fun_app$c ?v0 ?v2 ))(fun_app$ (alllstsp$a ?v0 )(lCons$ ?v2 ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(fun_app$b (alllstsp$ ?v0 )lNil$a )):named a26 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(fun_app$ (alllstsp$a ?v0 )lNil$ )):named a27 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$b (finlstsp$ ?v0 )?v1 )(fun_app$ ?v0 ?v2 ))(fun_app$b (finlstsp$ ?v0 )(lCons$a ?v2 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 A$ ))(=> (and (fun_app$ (finlstsp$a ?v0 )?v1 )(fun_app$c ?v0 ?v2 ))(fun_app$ (finlstsp$a ?v0 )(lCons$ ?v2 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(fun_app$b (finlstsp$ ?v0 )lNil$a )):named a30 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(fun_app$ (finlstsp$a ?v0 )lNil$ )):named a31 ))
(check-sat )
;(get-unsat-core )
