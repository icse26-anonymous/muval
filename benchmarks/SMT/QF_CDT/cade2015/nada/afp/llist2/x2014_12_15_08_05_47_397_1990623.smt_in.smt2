;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_a_llist_prod_set$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_a_llist_prod_llist_set$ 0 )
(declare-sort A_llist_a_llist_prod_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_llist_set$ 0 )
(declare-sort A_llist_llist_a_llist_llist_prod_set$ 0 )
(declare-sort A_llist_llist_a_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_a_llist_llist_prod_llist_set$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_prod_set$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ 0 )
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist_set$ 0 )
(declare-sort A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod_set$ 0 )
(declare-sort A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod_bool_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-sort A_llist_a_llist_prod$ 0)
(declare-fun fst$ (A_llist_a_llist_prod$)A_llist$)
(declare-fun snd$ (A_llist_a_llist_prod$)A_llist$)
(declare-fun pair$ (A_llist$ A_llist$ )A_llist_a_llist_prod$)
(declare-sort A_llist_a_llist_prod_llist$ 0)
(declare-sort A_llist_a_llist_prod_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-sort A_llist_a_llist_prod_llist_llist_llist$ 0)
(declare-fun lNil$c ()A_llist_a_llist_prod_llist$)
(declare-fun lhd$c (A_llist_a_llist_prod_llist$)A_llist_a_llist_prod$)
(declare-fun ltl$c (A_llist_a_llist_prod_llist$)A_llist_a_llist_prod_llist$)
(declare-fun lCons$c (A_llist_a_llist_prod$ A_llist_a_llist_prod_llist$ )A_llist_a_llist_prod_llist$)
(declare-fun lNil$d ()A_llist_a_llist_prod_llist_llist$)
(declare-fun lhd$d (A_llist_a_llist_prod_llist_llist$)A_llist_a_llist_prod_llist$)
(declare-fun ltl$d (A_llist_a_llist_prod_llist_llist$)A_llist_a_llist_prod_llist_llist$)
(declare-fun lCons$d (A_llist_a_llist_prod_llist$ A_llist_a_llist_prod_llist_llist$ )A_llist_a_llist_prod_llist_llist$)
(declare-fun lNil$e ()A_llist_llist_llist_llist$)
(declare-fun lhd$e (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$e (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$e (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun lNil$f ()A_llist_a_llist_prod_llist_llist_llist$)
(declare-fun lhd$f (A_llist_a_llist_prod_llist_llist_llist$)A_llist_a_llist_prod_llist_llist$)
(declare-fun ltl$f (A_llist_a_llist_prod_llist_llist_llist$)A_llist_a_llist_prod_llist_llist_llist$)
(declare-fun lCons$f (A_llist_a_llist_prod_llist_llist$ A_llist_a_llist_prod_llist_llist_llist$ )A_llist_a_llist_prod_llist_llist_llist$)
(declare-sort A_llist_llist_a_llist_llist_prod$ 0)
(declare-fun fst$a (A_llist_llist_a_llist_llist_prod$)A_llist_llist$)
(declare-fun snd$a (A_llist_llist_a_llist_llist_prod$)A_llist_llist$)
(declare-fun pair$a (A_llist_llist$ A_llist_llist$ )A_llist_llist_a_llist_llist_prod$)
(declare-sort A_llist_llist_a_llist_llist_prod_llist$ 0)
(declare-fun lNil$g ()A_llist_llist_a_llist_llist_prod_llist$)
(declare-fun lhd$g (A_llist_llist_a_llist_llist_prod_llist$)A_llist_llist_a_llist_llist_prod$)
(declare-fun ltl$g (A_llist_llist_a_llist_llist_prod_llist$)A_llist_llist_a_llist_llist_prod_llist$)
(declare-fun lCons$g (A_llist_llist_a_llist_llist_prod$ A_llist_llist_a_llist_llist_prod_llist$ )A_llist_llist_a_llist_llist_prod_llist$)
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ 0)
(declare-fun fst$b (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$)A_llist_a_llist_prod_llist$)
(declare-fun snd$b (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$)A_llist_a_llist_prod_llist$)
(declare-fun pair$b (A_llist_a_llist_prod_llist$ A_llist_a_llist_prod_llist$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$)
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$ 0)
(declare-fun lNil$h ()A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$)
(declare-fun lhd$h (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$)A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$)
(declare-fun ltl$h (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$)A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$)
(declare-fun lCons$h (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$)
(declare-sort A_llist_llist_llist_a_llist_llist_llist_prod$ 0)
(declare-sort A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod$ 0)
(declare-fun fst$c (A_llist_llist_llist_a_llist_llist_llist_prod$)A_llist_llist_llist$)
(declare-fun snd$c (A_llist_llist_llist_a_llist_llist_llist_prod$)A_llist_llist_llist$)
(declare-fun pair$c (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist_a_llist_llist_llist_prod$)
(declare-fun fst$d (A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod$)A_llist_a_llist_prod_llist_llist$)
(declare-fun snd$d (A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod$)A_llist_a_llist_prod_llist_llist$)
(declare-fun pair$d (A_llist_a_llist_prod_llist_llist$ A_llist_a_llist_prod_llist_llist$ )A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod$)
(declare-fun p$ (A_llist$ )Bool )
(declare-fun x$ ()A_llist$ )
(declare-fun uu$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun uua$ ()A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ )
(declare-fun uub$ ()A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_bool_fun_fun$ )
(declare-fun uuc$ ()A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )
(declare-fun uud$ ()A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uue$ (Bool A_llist_llist_a_llist_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uuf$ (Bool A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )
(declare-fun uug$ (Bool A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun top$a ()A_llist_a_llist_prod_llist_set$ )
(declare-fun top$b ()A_llist_set$ )
(declare-fun top$c ()A_llist_a_llist_prod_set$ )
(declare-fun top$d ()A_set$ )
(declare-fun top$e ()A_llist_llist_llist_set$ )
(declare-fun top$f ()A_llist_a_llist_prod_llist_llist_set$ )
(declare-fun top$g ()A_llist_llist_a_llist_llist_prod_set$ )
(declare-fun top$h ()A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )
(declare-fun member$ (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun collect$ (A_llist_a_llist_prod_bool_fun$ )A_llist_a_llist_prod_set$ )
(declare-fun finlsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun member$a (A_llist_a_llist_prod_llist_llist$ A_llist_a_llist_prod_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_a_llist_prod_llist$ A_llist_a_llist_prod_llist_set$ )Bool )
(declare-fun member$d (A_llist$ A_llist_set$ )Bool )
(declare-fun member$e (A_llist_a_llist_prod$ A_llist_a_llist_prod_set$ )Bool )
(declare-fun member$f (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$g (A_llist_a_llist_prod_llist_llist_llist$ A_llist_a_llist_prod_llist_llist_llist_set$ )Bool )
(declare-fun member$h (A_llist_llist_a_llist_llist_prod_llist$ A_llist_llist_a_llist_llist_prod_llist_set$ )Bool )
(declare-fun member$i (A_llist_llist_a_llist_llist_prod$ A_llist_llist_a_llist_llist_prod_set$ )Bool )
(declare-fun member$j (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$ A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist_set$ )Bool )
(declare-fun member$k (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )Bool )
(declare-fun member$l (A$ A_set$ )Bool )
(declare-fun member$m (A_llist_llist_llist_a_llist_llist_llist_prod$ A_llist_llist_llist_a_llist_llist_llist_prod_set$ )Bool )
(declare-fun member$n (A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod$ A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod_set$ )Bool )
(declare-fun collect$a (A_llist_llist_llist_a_llist_llist_llist_prod_bool_fun$ )A_llist_llist_llist_a_llist_llist_llist_prod_set$ )
(declare-fun collect$b (A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod_bool_fun$ )A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod_set$ )
(declare-fun collect$c (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_bool_fun$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )
(declare-fun collect$d (A_llist_llist_a_llist_llist_prod_bool_fun$ )A_llist_llist_a_llist_llist_prod_set$ )
(declare-fun finlsts$a (A_llist_a_llist_prod_llist_set$ )A_llist_a_llist_prod_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_a_llist_prod_set$ )A_llist_a_llist_prod_llist_set$ )
(declare-fun finlsts$d (A_set$ )A_llist_set$ )
(declare-fun finlsts$e (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$f (A_llist_a_llist_prod_llist_llist_set$ )A_llist_a_llist_prod_llist_llist_llist_set$ )
(declare-fun finlsts$g (A_llist_llist_a_llist_llist_prod_set$ )A_llist_llist_a_llist_llist_prod_llist_set$ )
(declare-fun finlsts$h (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ A_llist_llist_llist$ )A_llist_llist_llist_bool_fun$ )
(declare-fun fun_app$b (A_llist_a_llist_prod_llist_llist_bool_fun$ A_llist_a_llist_prod_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_bool_fun_fun$ A_llist_a_llist_prod_llist_llist$ )A_llist_a_llist_prod_llist_llist_bool_fun$ )
(declare-fun fun_app$d (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$e (A_llist_llist_a_llist_llist_bool_fun_fun$ A_llist_llist$ )A_llist_llist_bool_fun$ )
(declare-fun fun_app$f (A_llist_a_llist_prod_llist_bool_fun$ A_llist_a_llist_prod_llist$ )Bool )
(declare-fun fun_app$g (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ A_llist_a_llist_prod_llist$ )A_llist_a_llist_prod_llist_bool_fun$ )
(declare-fun fun_app$h (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$i (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$j (A_llist_llist_a_llist_llist_prod_bool_fun$ A_llist_llist_a_llist_llist_prod$ )Bool )
(declare-fun fun_app$k (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_bool_fun$ A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ )Bool )
(declare-fun fun_app$l (A_llist_a_llist_prod_bool_fun$ A_llist_a_llist_prod$ )Bool )
(declare-fun case_prod$ (A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_prod_bool_fun$ )
(declare-fun case_prod$a (A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ )A_llist_llist_llist_a_llist_llist_llist_prod_bool_fun$ )
(declare-fun case_prod$b (A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_bool_fun_fun$ )A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod_bool_fun$ )
(declare-fun case_prod$c (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_bool_fun$ )
(declare-fun case_prod$d (A_llist_llist_a_llist_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_prod_bool_fun$ )
(declare-fun finlsts_pred$ ()A_llist_llist_llist_a_llist_llist_llist_prod_set$ )
(declare-fun finlsts_pred$a ()A_llist_a_llist_prod_llist_llist_a_llist_a_llist_prod_llist_llist_prod_set$ )
(declare-fun finlsts_pred$b ()A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )
(declare-fun finlsts_pred$c ()A_llist_llist_a_llist_llist_prod_set$ )
(declare-fun finlsts_pred$d ()A_llist_a_llist_prod_set$ )
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(and (member$ ?v0 (finlsts$ top$ ))(exists ((?v2 A_llist_llist$ ))(= (lCons$b ?v2 ?v0 )?v1 )))):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist$ )(?v1 A_llist_a_llist_prod_llist_llist$ ))(! (= (fun_app$b (fun_app$c uub$ ?v0 )?v1 )(and (member$a ?v0 (finlsts$a top$a ))(exists ((?v2 A_llist_a_llist_prod_llist$ ))(= (lCons$d ?v2 ?v0 )?v1 )))):pattern ((fun_app$b (fun_app$c uub$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(! (= (fun_app$d (fun_app$e uud$ ?v0 )?v1 )(and (member$b ?v0 (finlsts$b top$b ))(exists ((?v2 A_llist$ ))(= (lCons$a ?v2 ?v0 )?v1 )))):pattern ((fun_app$d (fun_app$e uud$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_llist$ ))(! (= (fun_app$f (fun_app$g uuc$ ?v0 )?v1 )(and (member$c ?v0 (finlsts$c top$c ))(exists ((?v2 A_llist_a_llist_prod$ ))(= (lCons$c ?v2 ?v0 )?v1 )))):pattern ((fun_app$f (fun_app$g uuc$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$h (fun_app$i uu$ ?v0 )?v1 )(and (member$d ?v0 (finlsts$d top$d ))(exists ((?v2 A$ ))(= (lCons$ ?v2 ?v0 )?v1 )))):pattern ((fun_app$h (fun_app$i uu$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(! (= (fun_app$d (fun_app$e (uue$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uue$ ?v0 ?v1 )?v2 )?v3 )))):named a5 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_llist$ )(?v3 A_llist_a_llist_prod_llist$ ))(! (= (fun_app$f (fun_app$g (uuf$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (uuf$ ?v0 ?v1 )?v2 )?v3 )))):named a6 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$h (fun_app$i (uug$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uug$ ?v0 ?v1 )?v2 )?v3 )))):named a7 ))
(assert (! (not (p$ x$ )):named a8 ))
(assert (! (member$d x$ (finlsts$d top$d )):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$ ))))false )):named a10 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist$ )(?v1 A_llist_a_llist_prod_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(not (member$a ?v0 (finlsts$a top$a ))))false )):named a11 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_set$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(not (member$c ?v0 (finlsts$c top$c ))))false )):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(not (member$b ?v0 (finlsts$b top$b ))))false )):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$d ?v0 (finlsts$d ?v1 ))(not (member$d ?v0 (finlsts$d top$d ))))false )):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (finlsts$ top$ )))):named a15 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist$ )(?v1 A_llist_a_llist_prod_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (finlsts$a top$a )))):named a16 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_set$ ))(=> (member$c ?v0 (finlsts$c ?v1 ))(member$c ?v0 (finlsts$c top$c )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (finlsts$b top$b )))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$d ?v0 (finlsts$d ?v1 ))(member$d ?v0 (finlsts$d top$d )))):named a19 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (forall ((?v1 A_llist$ ))(=> (member$e (pair$ ?v1 ?v0 )(collect$ (case_prod$ uu$ )))(p$ ?v1 )))(p$ ?v0 ))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$f ?v0 (finlsts$e ?v1 ))(member$ ?v2 ?v1 ))(member$f (lCons$e ?v2 ?v0 )(finlsts$e ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist_llist$ )(?v1 A_llist_a_llist_prod_llist_llist_set$ )(?v2 A_llist_a_llist_prod_llist_llist$ ))(=> (and (member$g ?v0 (finlsts$f ?v1 ))(member$a ?v2 ?v1 ))(member$g (lCons$f ?v2 ?v0 )(finlsts$f ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_prod_llist$ )(?v1 A_llist_llist_a_llist_llist_prod_set$ )(?v2 A_llist_llist_a_llist_llist_prod$ ))(=> (and (member$h ?v0 (finlsts$g ?v1 ))(member$i ?v2 ?v1 ))(member$h (lCons$g ?v2 ?v0 )(finlsts$g ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )(?v2 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ ))(=> (and (member$j ?v0 (finlsts$h ?v1 ))(member$k ?v2 ?v1 ))(member$j (lCons$h ?v2 ?v0 )(finlsts$h ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist$ )(?v1 A_llist_a_llist_prod_llist_set$ )(?v2 A_llist_a_llist_prod_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$a (lCons$d ?v2 ?v0 )(finlsts$a ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$b ?v2 ?v1 ))(member$ (lCons$b ?v2 ?v0 )(finlsts$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$b (lCons$a ?v2 ?v0 )(finlsts$b ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_set$ )(?v2 A_llist_a_llist_prod$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(member$e ?v2 ?v1 ))(member$c (lCons$c ?v2 ?v0 )(finlsts$c ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$d ?v0 (finlsts$d ?v1 ))(member$l ?v2 ?v1 ))(member$d (lCons$ ?v2 ?v0 )(finlsts$d ?v1 )))):named a29 ))
(assert (! (= finlsts_pred$ (collect$a (case_prod$a uua$ ))):named a30 ))
(assert (! (= finlsts_pred$a (collect$b (case_prod$b uub$ ))):named a31 ))
(assert (! (= finlsts_pred$b (collect$c (case_prod$c uuc$ ))):named a32 ))
(assert (! (= finlsts_pred$c (collect$d (case_prod$d uud$ ))):named a33 ))
(assert (! (= finlsts_pred$d (collect$ (case_prod$ uu$ ))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_prod$ )(?v1 A_llist_llist_a_llist_llist_bool_fun_fun$ ))(=> (forall ((?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (= ?v0 (pair$a ?v2 ?v3 ))(fun_app$d (fun_app$e ?v1 ?v2 )?v3 )))(fun_app$j (case_prod$d ?v1 )?v0 ))):named a35 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ )(?v1 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ ))(=> (forall ((?v2 A_llist_a_llist_prod_llist$ )(?v3 A_llist_a_llist_prod_llist$ ))(=> (= ?v0 (pair$b ?v2 ?v3 ))(fun_app$f (fun_app$g ?v1 ?v2 )?v3 )))(fun_app$k (case_prod$c ?v1 )?v0 ))):named a36 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_bool_fun_fun$ ))(=> (forall ((?v2 A_llist$ )(?v3 A_llist$ ))(=> (= ?v0 (pair$ ?v2 ?v3 ))(fun_app$h (fun_app$i ?v1 ?v2 )?v3 )))(fun_app$l (case_prod$ ?v1 )?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$j (case_prod$d ?v0 )(pair$a ?v1 ?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_llist$ )(?v2 A_llist_a_llist_prod_llist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(fun_app$k (case_prod$c ?v0 )(pair$b ?v1 ?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(fun_app$l (case_prod$ ?v0 )(pair$ ?v1 ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$j (case_prod$d ?v0 )(pair$a ?v1 ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_llist$ )(?v2 A_llist_a_llist_prod_llist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(fun_app$k (case_prod$c ?v0 )(pair$b ?v1 ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(fun_app$l (case_prod$ ?v0 )(pair$ ?v1 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$m (pair$c ?v0 (lCons$b ?v2 ?v0 ))finlsts_pred$ ))):named a44 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist$ )(?v1 A_llist_a_llist_prod_llist_set$ )(?v2 A_llist_a_llist_prod_llist$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$n (pair$d ?v0 (lCons$d ?v2 ?v0 ))finlsts_pred$a ))):named a45 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_set$ )(?v2 A_llist_a_llist_prod$ ))(=> (member$c ?v0 (finlsts$c ?v1 ))(member$k (pair$b ?v0 (lCons$c ?v2 ?v0 ))finlsts_pred$b ))):named a46 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$i (pair$a ?v0 (lCons$a ?v2 ?v0 ))finlsts_pred$c ))):named a47 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (member$d ?v0 (finlsts$d ?v1 ))(member$e (pair$ ?v0 (lCons$ ?v2 ?v0 ))finlsts_pred$d ))):named a48 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist_a_llist_llist_prod$ ))(= (fun_app$j (case_prod$d (uue$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$j (case_prod$d ?v1 )?v2 )))):named a49 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ ))(= (fun_app$k (case_prod$c (uuf$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$k (case_prod$c ?v1 )?v2 )))):named a50 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$l (case_prod$ (uug$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$l (case_prod$ ?v1 )?v2 )))):named a51 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_llist_llist$ )(?v2 A_llist_a_llist_prod_llist$ )(?v3 A_llist_a_llist_prod_llist_llist$ ))(= (= (lCons$d ?v0 ?v1 )(lCons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod_llist$ )(?v2 A_llist_a_llist_prod$ )(?v3 A_llist_a_llist_prod_llist$ ))(= (= (lCons$c ?v0 ?v1 )(lCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a56 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(= (member$ ?v0 top$e )true )):named a57 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist$ ))(= (member$a ?v0 top$f )true )):named a58 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_prod$ ))(= (member$i ?v0 top$g )true )):named a59 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ ))(= (member$k ?v0 top$h )true )):named a60 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ ))(= (member$c ?v0 top$a )true )):named a61 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (member$b ?v0 top$ )true )):named a62 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$d ?v0 top$b )true )):named a63 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ ))(= (member$e ?v0 top$c )true )):named a64 ))
(assert (! (forall ((?v0 A$ ))(= (member$l ?v0 top$d )true )):named a65 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$ ?v0 top$e )):named a66 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_llist$ ))(member$a ?v0 top$f )):named a67 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_prod$ ))(member$i ?v0 top$g )):named a68 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ ))(member$k ?v0 top$h )):named a69 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ ))(member$c ?v0 top$a )):named a70 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 top$ )):named a71 ))
(assert (! (forall ((?v0 A_llist$ ))(member$d ?v0 top$b )):named a72 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ ))(member$e ?v0 top$c )):named a73 ))
(assert (! (forall ((?v0 A$ ))(member$l ?v0 top$d )):named a74 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a75 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_llist$ )(?v2 A_llist_a_llist_prod_llist$ )(?v3 A_llist_a_llist_prod_llist$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a76 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a77 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a78 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_llist$ )(?v1 A_llist_a_llist_prod_llist$ )(?v2 A_llist_a_llist_prod_llist$ )(?v3 A_llist_a_llist_prod_llist$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a79 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a80 ))
(check-sat )
;(get-unsat-core )
