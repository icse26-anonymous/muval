;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun top$ ()A_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_llist_bool_fun$ )
(declare-fun top$c ()Bool )
(declare-fun top$d ()A_bool_fun$ )
(declare-fun top$e ()A_llist_llist_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun collect$ (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun less_eq$ (A_set$ A_set$ )Bool )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun collect$a (A_bool_fun$ )A_set$ )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fun_app$a (A_bool_fun$ A$ )Bool )
(declare-fun less_eq$a (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun less_eq$b (A_llist_set$ A_llist_set$ )Bool )
(declare-fun less_eq$c (A_bool_fun$ A_bool_fun$ )Bool )
(declare-fun less_eq$d (Bool Bool )Bool )
(declare-fun less_eq$e (A_llist_bool_fun$ A_llist_bool_fun$ )Bool )
(declare-fun less_eq$f (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )Bool )
(assert (! (not (less_eq$ a$ top$ )):named a0 ))
(assert (! (not (member$ r$ (finlsts$ top$ ))):named a1 ))
(assert (! (member$ r$ (finlsts$ a$ )):named a2 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$ ?v0 top$a )true )):named a3 ))
(assert (! (forall ((?v0 A$ ))(= (member$a ?v0 top$ )true )):named a4 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 top$a )):named a5 ))
(assert (! (forall ((?v0 A$ ))(member$a ?v0 top$ )):named a6 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$ top$b ?v0 )top$c ):pattern ((fun_app$ top$b ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$a top$d ?v0 )top$c ):pattern ((fun_app$a top$d ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 )))(less_eq$a ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (forall ((?v2 A_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$b ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(less_eq$c ?v0 ?v0 )):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$a ?v0 ?v0 )):named a16 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$b ?v0 ?v0 )):named a17 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$ ?v0 ?v0 )):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$a ?v0 top$e )):named a19 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$b ?v0 top$a )):named a20 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$ ?v0 top$ )):named a21 ))
(assert (! (forall ((?v0 Bool ))(= (less_eq$d top$c ?v0 )(= ?v0 top$c ))):named a22 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (less_eq$e top$b ?v0 )(= ?v0 top$b ))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (less_eq$a top$e ?v0 )(= ?v0 top$e ))):named a24 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (less_eq$c top$d ?v0 )(= ?v0 top$d ))):named a25 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (less_eq$b top$a ?v0 )(= ?v0 top$a ))):named a26 ))
(assert (! (forall ((?v0 A_set$ ))(= (less_eq$ top$ ?v0 )(= ?v0 top$ ))):named a27 ))
(assert (! (forall ((?v0 Bool ))(=> (less_eq$d top$c ?v0 )(= ?v0 top$c ))):named a28 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(=> (less_eq$e top$b ?v0 )(= ?v0 top$b ))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (less_eq$a top$e ?v0 )(= ?v0 top$e ))):named a30 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(=> (less_eq$c top$d ?v0 )(= ?v0 top$d ))):named a31 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (less_eq$b top$a ?v0 )(= ?v0 top$a ))):named a32 ))
(assert (! (forall ((?v0 A_set$ ))(=> (less_eq$ top$ ?v0 )(= ?v0 top$ ))):named a33 ))
(assert (! (forall ((?v0 Bool ))(less_eq$d ?v0 top$c )):named a34 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(less_eq$e ?v0 top$b )):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$a ?v0 top$e )):named a36 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(less_eq$c ?v0 top$d )):named a37 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$b ?v0 top$a )):named a38 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$ ?v0 top$ )):named a39 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(member$ ?v1 ?v0 ))(= top$a ?v0 ))):named a40 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(member$a ?v1 ?v0 ))(= top$ ?v0 ))):named a41 ))
(assert (! (exists ((?v0 A_llist$ ))(member$ ?v0 top$a )):named a42 ))
(assert (! (exists ((?v0 A$ ))(member$a ?v0 top$ )):named a43 ))
(assert (! (= top$a (collect$ top$b )):named a44 ))
(assert (! (= top$ (collect$a top$d )):named a45 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$f (finlsts$a ?v0 )(finlsts$a ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$a (finlsts$b ?v0 )(finlsts$b ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$b (finlsts$ ?v0 )(finlsts$ ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(less_eq$c ?v0 ?v0 )):named a49 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$a ?v0 ?v0 )):named a50 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$b ?v0 ?v0 )):named a51 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$ ?v0 ?v0 )):named a52 ))
(check-sat )
;(get-unsat-core )
