;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun top$ ()A_set$ )
(declare-fun top$a ()A_llist_llist_set$ )
(declare-fun top$b ()A_llist_set$ )
(declare-fun top$c ()A_llist_llist_llist_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun less_eq$ (A_llist_set$ A_llist_set$ )Bool )
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun poslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun alllsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$c (A_set$ )A_llist_set$ )
(declare-fun finlsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun less_eq$a (A_set$ A_set$ )Bool )
(declare-fun less_eq$b (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$c (A_llist_llist_llist_llist_set$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$d (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun poslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun poslsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun poslsts$c (A_set$ )A_llist_set$ )
(assert (! (not (less_eq$ (finlsts$ a$ )(finlsts$ top$ ))):named a0 ))
(assert (! (less_eq$a a$ top$ ):named a1 ))
(assert (! (not (member$ r$ (finlsts$ top$ ))):named a2 ))
(assert (! (member$ r$ (finlsts$ a$ )):named a3 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$c (finlsts$a ?v0 )(finlsts$a ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$b (finlsts$b ?v0 )(finlsts$b ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$d (finlsts$c ?v0 )(finlsts$c ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (finlsts$ ?v0 )(finlsts$ ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (member$a ?v0 top$a )true )):named a8 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$ ?v0 top$b )true )):named a9 ))
(assert (! (forall ((?v0 A$ ))(= (member$b ?v0 top$ )true )):named a10 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$a ?v0 top$a )):named a11 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 top$b )):named a12 ))
(assert (! (forall ((?v0 A$ ))(member$b ?v0 top$ )):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist_llist$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 )))(less_eq$b ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$d ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (forall ((?v2 A_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 )))(less_eq$a ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (and (less_eq$d ?v0 ?v1 )(less_eq$d ?v1 ?v0 ))(= ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$b ?v0 ?v0 )):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$d ?v0 ?v0 )):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 ?v0 )):named a24 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$b ?v0 top$c )):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$d ?v0 top$a )):named a27 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 top$b )):named a28 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 top$ )):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (less_eq$b top$c ?v0 )(= ?v0 top$c ))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (less_eq$d top$a ?v0 )(= ?v0 top$a ))):named a31 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (less_eq$ top$b ?v0 )(= ?v0 top$b ))):named a32 ))
(assert (! (forall ((?v0 A_set$ ))(= (less_eq$a top$ ?v0 )(= ?v0 top$ ))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (less_eq$b top$c ?v0 )(= ?v0 top$c ))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (less_eq$d top$a ?v0 )(= ?v0 top$a ))):named a35 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (less_eq$ top$b ?v0 )(= ?v0 top$b ))):named a36 ))
(assert (! (forall ((?v0 A_set$ ))(=> (less_eq$a top$ ?v0 )(= ?v0 top$ ))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$b ?v0 top$c )):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$d ?v0 top$a )):named a39 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 top$b )):named a40 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 top$ )):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$c (poslsts$ ?v0 )(poslsts$ ?v1 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$b (poslsts$a ?v0 )(poslsts$a ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$d (poslsts$b ?v0 )(poslsts$b ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (poslsts$c ?v0 )(poslsts$c ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$c (alllsts$ ?v0 )(alllsts$ ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$b (alllsts$a ?v0 )(alllsts$a ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$d (alllsts$b ?v0 )(alllsts$b ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (alllsts$c ?v0 )(alllsts$c ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$c ?v0 (alllsts$a top$a ))):named a50 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$a ?v0 (alllsts$b top$b ))):named a51 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$c top$ ))):named a52 ))
(check-sat )
;(get-unsat-core )
