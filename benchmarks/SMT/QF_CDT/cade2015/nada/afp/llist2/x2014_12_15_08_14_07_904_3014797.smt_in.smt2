;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun x$ ()A_llist$ )
(declare-fun y$ ()A_llist$ )
(declare-fun lconst$ (A_llist_llist_llist$ )A_llist_llist_llist_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun finpref$ (A_set$ A_llist$ )A_llist_set$ )
(declare-fun inflsts$ (A_set$ )A_llist_set$ )
(declare-fun infsuff$ (A_llist_llist_set$ A_llist_llist_llist$ )A_llist_llist_llist_set$ )
(declare-fun lconst$a (A_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lconst$b (A_llist$ )A_llist_llist$ )
(declare-fun lconst$c (A$ )A_llist$ )
(declare-fun less_eq$ (A_llist_set$ A_llist_set$ )Bool )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finpref$a (A_llist_llist_set$ A_llist_llist_llist$ )A_llist_llist_llist_set$ )
(declare-fun finpref$b (A_llist_set$ A_llist_llist$ )A_llist_llist_set$ )
(declare-fun inflsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun inflsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun infsuff$a (A_llist_set$ A_llist_llist$ )A_llist_llist_set$ )
(declare-fun infsuff$b (A_set$ A_llist$ )A_llist_set$ )
(declare-fun less_eq$a (A_llist$ A_llist$ )Bool )
(declare-fun less_eq$b (A_llist_llist$ A_llist_llist$ )Bool )
(declare-fun less_eq$c (A_llist_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun less_eq$d (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$e (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun less_eq$f (A_llist_llist_llist_llist_set$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$g (A_set$ A_set$ )Bool )
(declare-fun prefix_closed$ (A_llist_llist_llist_set$ )Bool )
(declare-fun suffix_closed$ (A_llist_llist_llist_set$ )Bool )
(declare-fun prefix_closed$a (A_llist_llist_set$ )Bool )
(declare-fun prefix_closed$b (A_llist_set$ )Bool )
(declare-fun suffix_closed$a (A_llist_llist_set$ )Bool )
(declare-fun suffix_closed$b (A_llist_set$ )Bool )
(assert (! (not (= x$ y$ )):named a0 ))
(assert (! (member$ x$ (inflsts$ a$ )):named a1 ))
(assert (! (member$ y$ (inflsts$ a$ )):named a2 ))
(assert (! (and (member$ x$ (inflsts$ a$ ))(and (member$ y$ (inflsts$ a$ ))(less_eq$ (finpref$ a$ x$ )(finpref$ a$ y$ )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ a$ ))(less_eq$a ?v0 x$ ))(less_eq$a ?v0 y$ ))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (member$a ?v0 ?v1 )(member$b (lconst$ ?v0 )(inflsts$a ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$c ?v0 ?v1 )(member$a (lconst$a ?v0 )(inflsts$b ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ ))(=> (member$ ?v0 ?v1 )(member$c (lconst$b ?v0 )(inflsts$c ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ ))(=> (member$d ?v0 ?v1 )(member$ (lconst$c ?v0 )(inflsts$ ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(less_eq$b ?v0 ?v0 )):named a9 ))
(assert (! (forall ((?v0 A_llist$ ))(less_eq$a ?v0 ?v0 )):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (member$a ?v0 (finpref$a ?v1 ?v2 ))(member$a ?v0 (finlsts$a ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$c ?v0 (finpref$b ?v1 ?v2 ))(member$c ?v0 (finlsts$b ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (member$ ?v0 (finpref$ ?v1 ?v2 ))(member$ ?v0 (finlsts$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (member$a ?v0 (inflsts$b ?v1 ))(= (less_eq$c ?v0 ?v2 )(= ?v0 ?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$c ?v0 (inflsts$c ?v1 ))(= (less_eq$b ?v0 ?v2 )(= ?v0 ?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(= (less_eq$a ?v0 ?v2 )(= ?v0 ?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(member$a ?v1 (finlsts$a ?v2 )))(member$a ?v0 (finlsts$a ?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(member$c ?v1 (finlsts$b ?v2 )))(member$c ?v0 (finlsts$b ?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(member$ ?v1 (finlsts$ ?v2 )))(member$ ?v0 (finlsts$ ?v2 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v2 ))(less_eq$b ?v0 ?v2 ))):named a22 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$d (finpref$a ?v2 ?v0 )(finpref$a ?v2 ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$e (finpref$b ?v2 ?v0 )(finpref$b ?v2 ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (finpref$ ?v2 ?v0 )(finpref$ ?v2 ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$f (finlsts$c ?v0 )(finlsts$c ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$e ?v0 ?v1 )(less_eq$d (finlsts$a ?v0 )(finlsts$a ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$e (finlsts$b ?v0 )(finlsts$b ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$g ?v0 ?v1 )(less_eq$ (finlsts$ ?v0 )(finlsts$ ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$f (inflsts$a ?v0 )(inflsts$a ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$e ?v0 ?v1 )(less_eq$d (inflsts$b ?v0 )(inflsts$b ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$e (inflsts$c ?v0 )(inflsts$c ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$g ?v0 ?v1 )(less_eq$ (inflsts$ ?v0 )(inflsts$ ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v2 (inflsts$b ?v1 )))(= (member$a ?v2 (finpref$a ?v1 ?v0 ))(member$a ?v0 (infsuff$ ?v1 ?v2 ))))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$c ?v2 (inflsts$c ?v1 )))(= (member$c ?v2 (finpref$b ?v1 ?v0 ))(member$c ?v0 (infsuff$a ?v1 ?v2 ))))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v2 (inflsts$ ?v1 )))(= (member$ ?v2 (finpref$ ?v1 ?v0 ))(member$ ?v0 (infsuff$b ?v1 ?v2 ))))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (prefix_closed$ ?v0 )(forall ((?v1 A_llist_llist_llist$ ))(=> (member$a ?v1 ?v0 )(forall ((?v2 A_llist_llist_llist$ ))(=> (less_eq$c ?v2 ?v1 )(member$a ?v2 ?v0 ))))))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (prefix_closed$a ?v0 )(forall ((?v1 A_llist_llist$ ))(=> (member$c ?v1 ?v0 )(forall ((?v2 A_llist_llist$ ))(=> (less_eq$b ?v2 ?v1 )(member$c ?v2 ?v0 ))))))):named a39 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (prefix_closed$b ?v0 )(forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(forall ((?v2 A_llist$ ))(=> (less_eq$a ?v2 ?v1 )(member$ ?v2 ?v0 ))))))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (suffix_closed$ ?v0 )(forall ((?v1 A_llist_llist_llist$ ))(=> (member$a ?v1 ?v0 )(forall ((?v2 A_llist_llist_llist$ ))(=> (less_eq$c ?v1 ?v2 )(member$a ?v2 ?v0 ))))))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (suffix_closed$a ?v0 )(forall ((?v1 A_llist_llist$ ))(=> (member$c ?v1 ?v0 )(forall ((?v2 A_llist_llist$ ))(=> (less_eq$b ?v1 ?v2 )(member$c ?v2 ?v0 ))))))):named a42 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (suffix_closed$b ?v0 )(forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(forall ((?v2 A_llist$ ))(=> (less_eq$a ?v1 ?v2 )(member$ ?v2 ?v0 ))))))):named a43 ))
(check-sat )
;(get-unsat-core )
