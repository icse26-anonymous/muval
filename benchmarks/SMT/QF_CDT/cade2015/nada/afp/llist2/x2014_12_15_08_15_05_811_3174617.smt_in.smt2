;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun p$ ()A_llist_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun s$ ()A_llist$ )
(declare-fun t$ ()A_llist$ )
(declare-fun u$ ()A_llist$ )
(declare-fun v$ ()A_llist$ )
(declare-fun top$ ()A_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_llist_llist_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_set$ )A_llist_set$ )
(declare-fun fpslsts$ (A_llist_set$ )A_llist_llist_set$ )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun alllsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$a (A_set$ )A_llist_set$ )
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(declare-fun pfinpref$ (A_set$ A_llist$ )A_llist_set$ )
(declare-fun possafety$ (A_set$ A_llist_set$ )Bool )
(declare-fun posliveness$ (A_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun posliveness$a (A_set$ A_llist_set$ )Bool )
(assert (! (not (exists ((?v0 A_llist$ ))(and (member$ ?v0 (alllsts$ top$ ))(member$ (lappend$ r$ ?v0 )p$ )))):named a0 ))
(assert (! (member$ t$ p$ ):named a1 ))
(assert (! (= t$ (lappend$ r$ (lappend$ u$ v$ ))):named a2 ))
(assert (! (possafety$ top$ p$ ):named a3 ))
(assert (! (= s$ (lappend$ r$ u$ )):named a4 ))
(assert (! (=> (forall ((?v0 A_llist$ ))(=> (= t$ (lappend$ r$ (lappend$ u$ ?v0 )))false ))false ):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$a ?v0 (alllsts$a top$a ))):named a6 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$ top$ ))):named a7 ))
(assert (! (member$ r$ (pfinpref$ top$ s$ )):named a8 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (member$a (lappend$a ?v0 ?v1 )(alllsts$a ?v2 ))(member$a ?v0 (alllsts$a ?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (member$ (lappend$ ?v0 ?v1 )(alllsts$ ?v2 ))(member$ ?v0 (alllsts$ ?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$a ?v1 ))(member$a ?v2 (alllsts$a ?v1 )))(member$a (lappend$a ?v0 ?v2 )(alllsts$a ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(member$ ?v2 (alllsts$ ?v1 )))(member$ (lappend$ ?v0 ?v2 )(alllsts$ ?v1 )))):named a12 ))
(assert (! (=> (forall ((?v0 A_llist$ ))(=> (= s$ (lappend$ r$ ?v0 ))false ))false ):named a13 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (member$a ?v0 top$b )true )):named a14 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$ ?v0 top$a )true )):named a15 ))
(assert (! (forall ((?v0 A$ ))(= (member$b ?v0 top$ )true )):named a16 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$a ?v0 top$b )):named a17 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 top$a )):named a18 ))
(assert (! (forall ((?v0 A$ ))(member$b ?v0 top$ )):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (lappend$ (lappend$ ?v0 ?v1 )?v2 )(lappend$ ?v0 (lappend$ ?v1 ?v2 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist$ ))(member$a ?v1 ?v0 ))(= top$b ?v0 ))):named a21 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(member$ ?v1 ?v0 ))(= top$a ?v0 ))):named a22 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(member$b ?v1 ?v0 ))(= top$ ?v0 ))):named a23 ))
(assert (! (exists ((?v0 A_llist_llist$ ))(member$a ?v0 top$b )):named a24 ))
(assert (! (exists ((?v0 A_llist$ ))(member$ ?v0 top$a )):named a25 ))
(assert (! (exists ((?v0 A$ ))(member$b ?v0 top$ )):named a26 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_llist_set$ ))(= (posliveness$ ?v0 ?v1 )(forall ((?v2 A_llist_llist$ ))(=> (member$a ?v2 (fpslsts$ ?v0 ))(exists ((?v3 A_llist_llist$ ))(and (member$a ?v3 (alllsts$a ?v0 ))(member$a (lappend$a ?v2 ?v3 )?v1 ))))))):named a27 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_llist_set$ ))(= (posliveness$a ?v0 ?v1 )(forall ((?v2 A_llist$ ))(=> (member$ ?v2 (fpslsts$a ?v0 ))(exists ((?v3 A_llist$ ))(and (member$ ?v3 (alllsts$ ?v0 ))(member$ (lappend$ ?v2 ?v3 )?v1 ))))))):named a28 ))
(check-sat )
;(get-unsat-core )
