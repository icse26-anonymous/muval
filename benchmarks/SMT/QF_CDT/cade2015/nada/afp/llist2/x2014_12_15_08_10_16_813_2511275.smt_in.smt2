;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun j$ ()Nat$ )
(declare-fun k$ ()Nat$ )
(declare-fun ta$ ()A_llist$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun plus$ (Nat$ Nat$ )Nat$ )
(declare-fun ldrop$ (A_llist$ Nat$ )A_llist$ )
(declare-fun ltake$ (A_llist$ Nat$ )A_llist$ )
(assert (! (not (= (ldrop$ ta$ (plus$ (suc$ j$ )k$ ))(ldrop$ (ldrop$ ta$ (suc$ j$ ))k$ ))):named a0 ))
(assert (! (forall ((?v0 A_llist$ ))(= (ldrop$ ?v0 (plus$ j$ k$ ))(ldrop$ (ldrop$ ?v0 j$ )k$ ))):named a1 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (plus$ ?v0 (suc$ ?v1 ))(suc$ (plus$ ?v0 ?v1 ))):pattern ((plus$ ?v0 (suc$ ?v1 ))))):named a2 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a3 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v2 ?v1 ))(= ?v0 ?v2 ))):named a5 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a6 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (plus$ (suc$ ?v0 )?v1 )(plus$ ?v0 (suc$ ?v1 ))):pattern ((plus$ (suc$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (plus$ (suc$ ?v0 )?v1 )(suc$ (plus$ ?v0 ?v1 ))):pattern ((plus$ (suc$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat$ )(?v2 Nat$ ))(= (ltake$ (ldrop$ ?v0 ?v1 )?v2 )(ldrop$ (ltake$ ?v0 (plus$ ?v2 ?v1 ))?v1 ))):named a9 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v2 ?v1 ))(= ?v0 ?v2 ))):named a10 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a11 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(=> (and (= ?v0 ?v1 )(= ?v2 ?v3 ))(= (plus$ ?v0 ?v2 )(plus$ ?v1 ?v3 )))):named a13 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (plus$ ?v0 ?v1 )(plus$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a14 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (plus$ ?v0 ?v1 )(plus$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (= (plus$ ?v0 ?v1 )(plus$ ?v2 ?v1 ))(= ?v0 ?v2 ))):named a16 ))
(check-sat )
;(get-unsat-core )
