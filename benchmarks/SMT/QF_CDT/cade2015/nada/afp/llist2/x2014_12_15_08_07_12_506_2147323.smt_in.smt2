;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_set_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun s$ ()A_llist$ )
(declare-fun t$ ()A_llist$ )
(declare-fun u$ ()A_llist$ )
(declare-fun v$ ()A_llist$ )
(declare-fun z$ ()A_llist$ )
(declare-fun uu$ (A_llist$ )A_llist_a_llist_set_fun$ )
(declare-fun bot$ ()A_llist_set$ )
(declare-fun uua$ ()A_llist_a_llist_set_fun$ )
(declare-fun bot$a ()A_llist_llist_llist_set$ )
(declare-fun bot$b ()A_llist_llist_llist_llist_set$ )
(declare-fun bot$c ()A_llist_llist_set$ )
(declare-fun bot$d ()A_set$ )
(declare-fun insert$ (A_llist$ A_llist_set$ )A_llist_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_a_llist_set_fun$ A_llist$ )A_llist_set$ )
(declare-fun insert$a (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun insert$b (A_llist_llist_llist$ A_llist_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun insert$c (A_llist_llist$ A_llist_llist_set$ )A_llist_llist_set$ )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun alllsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$d (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun lappend$a (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lappend$b (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(declare-fun supremum$ (A_llist_set$ A_llist_a_llist_set_fun$ )A_llist_set$ )
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$ uua$ ?v0 )(supremum$ (alllsts$ a$ )(uu$ ?v0 ))):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$ (uu$ ?v0 )?v1 )(insert$ (lappend$ ?v0 ?v1 )bot$ )):pattern ((fun_app$ (uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (not (or (= z$ lNil$ )(exists ((?v0 A_llist$ )(?v1 A$ ))(and (= z$ (lCons$ ?v1 ?v0 ))(and (or (member$ ?v0 (supremum$ (alllsts$ a$ )uua$ ))(member$ ?v0 (alllsts$ a$ )))(member$a ?v1 a$ )))))):named a2 ))
(assert (! (member$ u$ (alllsts$ a$ )):named a3 ))
(assert (! (member$ v$ (alllsts$ a$ )):named a4 ))
(assert (! (= z$ (lappend$ u$ v$ )):named a5 ))
(assert (! (member$ s$ (alllsts$ a$ )):named a6 ))
(assert (! (member$ t$ (alllsts$ a$ )):named a7 ))
(assert (! (member$ z$ (supremum$ (alllsts$ a$ )uua$ )):named a8 ))
(assert (! (=> (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (member$ ?v0 (alllsts$ a$ ))(and (member$ ?v1 (alllsts$ a$ ))(= z$ (lappend$ ?v0 ?v1 ))))false ))false ):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= lNil$b (lappend$a ?v0 ?v1 ))(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= lNil$a (lappend$b ?v0 ?v1 ))(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= lNil$ (lappend$ ?v0 ?v1 ))(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= (lappend$a ?v0 ?v1 )lNil$b )(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= (lappend$b ?v0 ?v1 )lNil$a )(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a14 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= (lappend$ ?v0 ?v1 )lNil$ )(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$b (lCons$c ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$c ?v0 ?v2 )(member$b ?v1 (alllsts$a ?v2 ))))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$c (lCons$b ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$d ?v0 ?v2 )(member$c ?v1 (alllsts$b ?v2 ))))):named a17 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$d (lCons$a ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$ ?v0 ?v2 )(member$d ?v1 (alllsts$c ?v2 ))))):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$a ?v0 ?v2 )(member$ ?v1 (alllsts$ ?v2 ))))):named a19 ))
(assert (! (= (alllsts$a bot$a )(insert$a lNil$c bot$b )):named a20 ))
(assert (! (= (alllsts$b bot$c )(insert$b lNil$b bot$a )):named a21 ))
(assert (! (= (alllsts$c bot$ )(insert$c lNil$a bot$c )):named a22 ))
(assert (! (= (alllsts$ bot$d )(insert$ lNil$ bot$ )):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$b ?v0 (alllsts$a ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$b ?v2 (alllsts$a ?v1 ))(member$c ?v3 ?v1 ))))))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$c ?v0 (alllsts$b ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$c ?v2 (alllsts$b ?v1 ))(member$d ?v3 ?v1 ))))))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$d ?v0 (alllsts$c ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$d ?v2 (alllsts$c ?v1 ))(member$ ?v3 ?v1 ))))))):named a26 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (alllsts$ ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$ ?v1 ))(member$a ?v3 ?v1 ))))))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (= ?v0 lNil$b )false )(forall ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (= ?v0 (lCons$b ?v1 ?v2 ))false )))false )):named a28 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (= ?v0 lNil$a )false )(forall ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))false )))false )):named a29 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a30 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$b ?v2 (alllsts$a ?v1 ))(member$c ?v3 ?v1 )))false ))))false )):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (alllsts$b ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$c ?v2 (alllsts$b ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a32 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (alllsts$c ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$d ?v2 (alllsts$c ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a33 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$ ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$c ?v2 ?v0 )(alllsts$a ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (alllsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$c (lCons$b ?v2 ?v0 )(alllsts$b ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$d ?v0 (alllsts$c ?v1 ))(member$ ?v2 ?v1 ))(member$d (lCons$a ?v2 ?v0 )(alllsts$c ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(alllsts$ ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist_llist$ ))(=> (fun_app$a ?v0 ?v3 )(or (= ?v3 lNil$c )(exists ((?v4 A_llist_llist_llist_llist$ )(?v5 A_llist_llist_llist$ ))(and (= ?v3 (lCons$c ?v5 ?v4 ))(and (or (fun_app$a ?v0 ?v4 )(member$b ?v4 (alllsts$a ?v2 )))(member$c ?v5 ?v2 ))))))))(member$b ?v1 (alllsts$a ?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist$ ))(=> (fun_app$b ?v0 ?v3 )(or (= ?v3 lNil$b )(exists ((?v4 A_llist_llist_llist$ )(?v5 A_llist_llist$ ))(and (= ?v3 (lCons$b ?v5 ?v4 ))(and (or (fun_app$b ?v0 ?v4 )(member$c ?v4 (alllsts$b ?v2 )))(member$d ?v5 ?v2 ))))))))(member$c ?v1 (alllsts$b ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (and (fun_app$c ?v0 ?v1 )(forall ((?v3 A_llist_llist$ ))(=> (fun_app$c ?v0 ?v3 )(or (= ?v3 lNil$a )(exists ((?v4 A_llist_llist$ )(?v5 A_llist$ ))(and (= ?v3 (lCons$a ?v5 ?v4 ))(and (or (fun_app$c ?v0 ?v4 )(member$d ?v4 (alllsts$c ?v2 )))(member$ ?v5 ?v2 ))))))))(member$d ?v1 (alllsts$c ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (and (fun_app$d ?v0 ?v1 )(forall ((?v3 A_llist$ ))(=> (fun_app$d ?v0 ?v3 )(or (= ?v3 lNil$ )(exists ((?v4 A_llist$ )(?v5 A$ ))(and (= ?v3 (lCons$ ?v5 ?v4 ))(and (or (fun_app$d ?v0 ?v4 )(member$ ?v4 (alllsts$ ?v2 )))(member$a ?v5 ?v2 ))))))))(member$ ?v1 (alllsts$ ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$c lNil$b (alllsts$b ?v0 ))):named a43 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$d lNil$a (alllsts$c ?v0 ))):named a44 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (alllsts$ ?v0 ))):named a45 ))
(check-sat )
;(get-unsat-core )
