;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_d_bool_fun_fun$ 0 )
(declare-sort C_a_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort D_b_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_b_tllist_bool_fun$ 0 )
(declare-sort C_d_tllist_bool_fun$ 0 )
(declare-sort A_b_tllist_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_tllist_c_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_tllist$ 0)
(declare-sort C_d_tllist$ 0)
(declare-fun terminal$ (A_b_tllist$)B$)
(declare-fun tNil$ (B$ )A_b_tllist$)
(declare-fun thd$ (A_b_tllist$)A$)
(declare-fun ttl$ (A_b_tllist$)A_b_tllist$)
(declare-fun tCons$ (A$ A_b_tllist$ )A_b_tllist$)
(declare-fun terminal$a (C_d_tllist$)D$)
(declare-fun tNil$a (D$ )C_d_tllist$)
(declare-fun thd$a (C_d_tllist$)C$)
(declare-fun ttl$a (C_d_tllist$)C_d_tllist$)
(declare-fun tCons$a (C$ C_d_tllist$ )C_d_tllist$)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun a$ ()A_c_bool_fun_fun$ )
(declare-fun b$ ()B_d_bool_fun_fun$ )
(declare-fun uu$ ()C_c_bool_fun_fun$ )
(declare-fun uua$ ()D_d_bool_fun_fun$ )
(declare-fun uub$ ()C_d_tllist_c_d_tllist_bool_fun_fun$ )
(declare-fun uuc$ ()A_a_bool_fun_fun$ )
(declare-fun uud$ ()B_b_bool_fun_fun$ )
(declare-fun uue$ ()A_b_tllist_a_b_tllist_bool_fun_fun$ )
(declare-fun zero$ ()Nat$ )
(declare-fun tdropn$ (Nat$ A_b_tllist$ )A_b_tllist$ )
(declare-fun transp$ (C_c_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (C_d_tllist_bool_fun$ C_d_tllist$ )Bool )
(declare-fun tdropn$a (Nat$ C_d_tllist$ )C_d_tllist$ )
(declare-fun tlength$ (A_b_tllist$ )Enat$ )
(declare-fun transp$a (D_d_bool_fun_fun$ )Bool )
(declare-fun transp$b (A_a_bool_fun_fun$ )Bool )
(declare-fun transp$c (B_b_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (C_d_tllist_c_d_tllist_bool_fun_fun$ C_d_tllist$ )C_d_tllist_bool_fun$ )
(declare-fun fun_app$b (A_b_tllist_bool_fun$ A_b_tllist$ )Bool )
(declare-fun fun_app$c (A_b_tllist_a_b_tllist_bool_fun_fun$ A_b_tllist$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$d (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$e (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$f (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$g (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$h (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$i (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$j (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$k (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$l (C_a_bool_fun_fun$ C$ )A_bool_fun$ )
(declare-fun fun_app$m (D_b_bool_fun_fun$ D$ )B_bool_fun$ )
(declare-fun fun_app$n (A_c_bool_fun_fun$ A$ )C_bool_fun$ )
(declare-fun fun_app$o (B_d_bool_fun_fun$ B$ )D_bool_fun$ )
(declare-fun tlength$a (C_d_tllist$ )Enat$ )
(declare-fun tllist_all2$ (A_c_bool_fun_fun$ B_d_bool_fun_fun$ A_b_tllist$ C_d_tllist$ )Bool )
(declare-fun tllist_all2$a (C_c_bool_fun_fun$ D_d_bool_fun_fun$ )C_d_tllist_c_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (A_a_bool_fun_fun$ B_b_bool_fun_fun$ )A_b_tllist_a_b_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (C_a_bool_fun_fun$ D_b_bool_fun_fun$ C_d_tllist$ A_b_tllist$ )Bool )
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_d_tllist$ ))(! (= (fun_app$ (fun_app$a uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ ))(! (= (fun_app$b (fun_app$c uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uue$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$d (fun_app$e uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uua$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$f (fun_app$g uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uu$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$h (fun_app$i uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uud$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$j (fun_app$k uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uuc$ ?v0 )?v1 )))):named a5 ))
(assert (! (not (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= ?v0 ?v1 )(forall ((?v2 A_b_tllist$ )(?v3 C_d_tllist$ ))(=> (tllist_all2$ a$ b$ ?v2 ?v3 )(tllist_all2$ a$ b$ (tdropn$ ?v0 ?v2 )(tdropn$a ?v1 ?v3 ))))))):named a6 ))
(assert (! (= (tllist_all2$a uu$ uua$ )uub$ ):named a7 ))
(assert (! (= (tllist_all2$b uuc$ uud$ )uue$ ):named a8 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 C_d_tllist$ )(?v4 C_c_bool_fun_fun$ )(?v5 D_d_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 C$ )(?v7 C$ ))(=> (fun_app$f (fun_app$g ?v0 ?v6 )?v7 )(fun_app$f (fun_app$g ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 D$ ))(=> (fun_app$d (fun_app$e ?v1 ?v6 )?v7 )(fun_app$d (fun_app$e ?v5 ?v6 )?v7 )))))(fun_app$ (fun_app$a (tllist_all2$a ?v4 ?v5 )?v2 )?v3 ))):named a9 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 A_b_tllist$ )(?v4 C_a_bool_fun_fun$ )(?v5 D_b_bool_fun_fun$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 C$ )(?v7 A$ ))(=> (fun_app$j (fun_app$l ?v0 ?v6 )?v7 )(fun_app$j (fun_app$l ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 B$ ))(=> (fun_app$h (fun_app$m ?v1 ?v6 )?v7 )(fun_app$h (fun_app$m ?v5 ?v6 )?v7 )))))(tllist_all2$c ?v4 ?v5 ?v2 ?v3 ))):named a10 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_b_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 B_b_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$j (fun_app$k ?v0 ?v6 )?v7 )(fun_app$j (fun_app$k ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 B$ ))(=> (fun_app$h (fun_app$i ?v1 ?v6 )?v7 )(fun_app$h (fun_app$i ?v5 ?v6 )?v7 )))))(fun_app$b (fun_app$c (tllist_all2$b ?v4 ?v5 )?v2 )?v3 ))):named a11 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 C_d_tllist$ )(?v4 A_c_bool_fun_fun$ )(?v5 B_d_bool_fun_fun$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 C$ ))(=> (fun_app$f (fun_app$n ?v0 ?v6 )?v7 )(fun_app$f (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 D$ ))(=> (fun_app$d (fun_app$o ?v1 ?v6 )?v7 )(fun_app$d (fun_app$o ?v5 ?v6 )?v7 )))))(tllist_all2$ ?v4 ?v5 ?v2 ?v3 ))):named a12 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(! (= (tdropn$ zero$ ?v0 )?v0 ):pattern ((tdropn$ zero$ ?v0 )))):named a13 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(! (= (tdropn$a zero$ ?v0 )?v0 ):pattern ((tdropn$a zero$ ?v0 )))):named a14 ))
(assert (! (forall ((?v0 Nat$ )(?v1 B$ ))(! (= (tdropn$ ?v0 (tNil$ ?v1 ))(tNil$ ?v1 )):pattern ((tdropn$ ?v0 (tNil$ ?v1 ))))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 D$ ))(! (= (tdropn$a ?v0 (tNil$a ?v1 ))(tNil$a ?v1 )):pattern ((tdropn$a ?v0 (tNil$a ?v1 ))))):named a16 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_b_tllist$ ))(=> (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(= (tlength$ ?v2 )(tlength$ ?v3 )))):named a17 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 A_b_tllist$ ))(=> (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(= (tlength$a ?v2 )(tlength$ ?v3 )))):named a18 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 C_d_tllist$ ))(=> (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(= (tlength$a ?v2 )(tlength$a ?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 C_d_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(= (tlength$ ?v2 )(tlength$a ?v3 )))):named a20 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 C_d_tllist$ )(?v4 C_d_tllist$ ))(=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v4 )(and (transp$ ?v0 )(transp$a ?v1 ))))(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v4 ))):named a21 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_b_tllist$ )(?v4 A_b_tllist$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v4 )(and (transp$b ?v0 )(transp$c ?v1 ))))(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v4 ))):named a22 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))(fun_app$d (fun_app$e ?v1 ?v2 )?v3 )):pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))))):named a23 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 D$ )(?v3 B$ ))(! (= (tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))(fun_app$h (fun_app$m ?v1 ?v2 )?v3 )):pattern ((tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))))):named a24 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$h (fun_app$i ?v1 ?v2 )?v3 )):pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a25 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 B$ )(?v3 D$ ))(! (= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))(fun_app$d (fun_app$o ?v1 ?v2 )?v3 )):pattern ((tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))))):named a26 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A$ )(?v5 A_b_tllist$ ))(! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$j (fun_app$k ?v0 ?v2 )?v4 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a27 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C$ )(?v3 C_d_tllist$ )(?v4 A$ )(?v5 A_b_tllist$ ))(! (= (tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))(and (fun_app$j (fun_app$l ?v0 ?v2 )?v4 )(tllist_all2$c ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))))):named a28 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C$ )(?v3 C_d_tllist$ )(?v4 C$ )(?v5 C_d_tllist$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$f (fun_app$g ?v0 ?v2 )?v4 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a29 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 C$ )(?v5 C_d_tllist$ ))(! (= (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))(and (fun_app$f (fun_app$n ?v0 ?v2 )?v4 )(tllist_all2$ ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))))):named a30 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 C_d_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))?v3 )(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$d (fun_app$e ?v1 ?v2 )?v4 ))))):named a31 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 D$ )(?v3 A_b_tllist$ ))(= (tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )?v3 )(exists ((?v4 B$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$h (fun_app$m ?v1 ?v2 )?v4 ))))):named a32 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 A_b_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))?v3 )(exists ((?v4 B$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$h (fun_app$i ?v1 ?v2 )?v4 ))))):named a33 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 B$ )(?v3 C_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )?v3 )(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$d (fun_app$o ?v1 ?v2 )?v4 ))))):named a34 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 D$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )(tNil$a ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$d (fun_app$e ?v1 ?v4 )?v3 ))))):named a35 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 B$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 (tNil$ ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$h (fun_app$m ?v1 ?v4 )?v3 ))))):named a36 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 B$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )(tNil$ ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$h (fun_app$i ?v1 ?v4 )?v3 ))))):named a37 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 D$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tNil$a ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$d (fun_app$o ?v1 ?v4 )?v3 ))))):named a38 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D$ )(?v2 D$ )(?v3 C_c_bool_fun_fun$ ))(=> (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$ (fun_app$a (tllist_all2$a ?v3 ?v0 )(tNil$a ?v1 ))(tNil$a ?v2 )))):named a39 ))
(assert (! (forall ((?v0 D_b_bool_fun_fun$ )(?v1 D$ )(?v2 B$ )(?v3 C_a_bool_fun_fun$ ))(=> (fun_app$h (fun_app$m ?v0 ?v1 )?v2 )(tllist_all2$c ?v3 ?v0 (tNil$a ?v1 )(tNil$ ?v2 )))):named a40 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c (tllist_all2$b ?v3 ?v0 )(tNil$ ?v1 ))(tNil$ ?v2 )))):named a41 ))
(assert (! (forall ((?v0 B_d_bool_fun_fun$ )(?v1 B$ )(?v2 D$ )(?v3 A_c_bool_fun_fun$ ))(=> (fun_app$d (fun_app$o ?v0 ?v1 )?v2 )(tllist_all2$ ?v3 ?v0 (tNil$ ?v1 )(tNil$a ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A_b_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))?v4 )(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$j (fun_app$k ?v0 ?v2 )?v5 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v6 )))))):named a43 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C$ )(?v3 C_d_tllist$ )(?v4 A_b_tllist$ ))(= (tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )?v4 )(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$j (fun_app$l ?v0 ?v2 )?v5 )(tllist_all2$c ?v0 ?v1 ?v3 ?v6 )))))):named a44 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C$ )(?v3 C_d_tllist$ )(?v4 C_d_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))?v4 )(exists ((?v5 C$ )(?v6 C_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (fun_app$f (fun_app$g ?v0 ?v2 )?v5 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v6 )))))):named a45 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 C_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )?v4 )(exists ((?v5 C$ )(?v6 C_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (fun_app$f (fun_app$n ?v0 ?v2 )?v5 )(tllist_all2$ ?v0 ?v1 ?v3 ?v6 )))))):named a46 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A$ )(?v4 A_b_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$j (fun_app$k ?v0 ?v5 )?v3 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v6 )?v4 )))))):named a47 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 A$ )(?v4 A_b_tllist$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 (tCons$ ?v3 ?v4 ))(exists ((?v5 C$ )(?v6 C_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (fun_app$j (fun_app$l ?v0 ?v5 )?v3 )(tllist_all2$c ?v0 ?v1 ?v6 ?v4 )))))):named a48 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 C_d_tllist$ )(?v3 C$ )(?v4 C_d_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )(tCons$a ?v3 ?v4 ))(exists ((?v5 C$ )(?v6 C_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (fun_app$f (fun_app$g ?v0 ?v5 )?v3 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v6 )?v4 )))))):named a49 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 C$ )(?v4 C_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tCons$a ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$f (fun_app$n ?v0 ?v5 )?v3 )(tllist_all2$ ?v0 ?v1 ?v6 ?v4 )))))):named a50 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_tllist$ )(?v5 A_b_tllist$ ))(=> (and (fun_app$j (fun_app$k ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v3 )?v4 )?v5 ))(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v3 )(tCons$ ?v1 ?v4 ))(tCons$ ?v2 ?v5 )))):named a51 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 C$ )(?v2 A$ )(?v3 D_b_bool_fun_fun$ )(?v4 C_d_tllist$ )(?v5 A_b_tllist$ ))(=> (and (fun_app$j (fun_app$l ?v0 ?v1 )?v2 )(tllist_all2$c ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$c ?v0 ?v3 (tCons$a ?v1 ?v4 )(tCons$ ?v2 ?v5 )))):named a52 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C$ )(?v2 C$ )(?v3 D_d_bool_fun_fun$ )(?v4 C_d_tllist$ )(?v5 C_d_tllist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v3 )?v4 )?v5 ))(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v3 )(tCons$a ?v1 ?v4 ))(tCons$a ?v2 ?v5 )))):named a53 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A$ )(?v2 C$ )(?v3 B_d_bool_fun_fun$ )(?v4 A_b_tllist$ )(?v5 C_d_tllist$ ))(=> (and (fun_app$f (fun_app$n ?v0 ?v1 )?v2 )(tllist_all2$ ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$ ?v0 ?v3 (tCons$ ?v1 ?v4 )(tCons$a ?v2 ?v5 )))):named a54 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A$ )(?v3 A_b_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ )(?v2 C$ )(?v3 C_d_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a56 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a57 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (forall ((?v1 B$ ))(=> (= ?v0 (tNil$ ?v1 ))false ))(forall ((?v1 A$ )(?v2 A_b_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))false )))false )):named a59 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (and (forall ((?v1 D$ ))(=> (= ?v0 (tNil$a ?v1 ))false ))(forall ((?v1 C$ )(?v2 C_d_tllist$ ))(=> (= ?v0 (tCons$a ?v1 ?v2 ))false )))false )):named a60 ))
(check-sat )
;(get-unsat-core )
