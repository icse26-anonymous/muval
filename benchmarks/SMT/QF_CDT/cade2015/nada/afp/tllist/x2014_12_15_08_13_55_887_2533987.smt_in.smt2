;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort C_llist_set$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort C_a_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_llist_bool_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort C_bool_fun_bool_fun$ 0 )
(declare-sort C_d_tllist_bool_fun$ 0 )
(declare-sort C_llist_c_llist_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_bool_fun$ 0 )
(declare-sort A_c_bool_fun_fun_bool_fun$ 0 )
(declare-sort A_c_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_bool_fun$ 0 )
(declare-sort C_c_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_tllist_a_bool_fun_fun$ 0 )
(declare-sort C_d_tllist_c_bool_fun_fun$ 0 )
(declare-sort C_d_tllist_llist_bool_fun$ 0 )
(declare-sort C_llist_bool_fun_bool_fun$ 0 )
(declare-sort A_a_fun_a_c_fun_bool_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort C_a_fun_c_c_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort A_c_llist_d_prod_bool_fun_fun$ 0 )
(declare-sort C_c_llist_d_prod_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_a_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_c_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_bool_fun$ 0 )
(declare-sort A_b_tllist_c_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_c_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_a_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_d_tllist_llist_bool_fun_bool_fun$ 0 )
(declare-sort A_llist_c_d_tllist_llist_bool_fun_fun$ 0 )
(declare-sort C_d_tllist_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort C_d_tllist_llist_c_d_tllist_llist_fun$ 0 )
(declare-sort C_d_tllist_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_c_d_tllist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_c_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_bool_fun_bool_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_c_llist_d_prod_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_d_prod_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_c_llist_d_prod_bool_fun_fun$ 0 )
(declare-sort A_b_tllist_c_d_tllist_bool_fun_fun_bool_fun$ 0 )
(declare-sort C_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_c_llist_d_prod_llist_fun$ 0 )
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_a_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_c_llist_d_prod_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_a_llist_c_llist_bool_fun_fun_fun$ 0 )
(declare-sort C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ 0 )
(declare-sort A_c_llist_d_prod_fun_a_c_d_tllist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_llist_a_b_tllist_llist_bool_fun_fun$ 0 )
(declare-sort C_c_llist_d_prod_fun_c_c_d_tllist_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_c_d_tllist_llist_bool_fun_fun$ 0 )
(declare-sort Bool_a_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort Bool_a_bool_fun_fun_c_bool_fun_c_a_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$ 0 )
(declare-sort C_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_c_llist_d_prod_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_bool_fun_a_c_bool_fun_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_a_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_c_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun_c_d_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_a_bool_fun_fun_a_c_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ 0 )
(declare-sort C_c_d_tllist_bool_fun_fun_c_llist_c_d_tllist_llist_bool_fun_fun_fun$ 0 )
(declare-sort A_c_llist_d_prod_bool_fun_fun_c_c_d_tllist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_llist_d_prod_fun_bool_fun_a_c_d_tllist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_c_llist_d_prod_fun_bool_fun_c_c_d_tllist_fun_bool_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun_a_llist_a_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_c_llist_bool_fun_fun_a_llist_c_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_c_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_c_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_a_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_bool_fun_fun_a_llist_a_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_c_llist_d_prod_c_llist_d_prod_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort Bool_c_d_tllist_bool_fun_fun_c_bool_fun_c_c_d_tllist_fun_bool_fun_fun_fun$ 0 )
(declare-sort Bool_c_llist_d_prod_bool_fun_fun_bool_c_d_tllist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_llist_d_prod_bool_fun_fun_a_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_a_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_c_c_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort Bool_c_llist_d_prod_bool_fun_fun_c_bool_fun_c_c_llist_d_prod_fun_bool_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_b_tllist_c_d_tllist_bool_fun_fun_a_b_tllist_llist_c_d_tllist_llist_bool_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_d_tllist_bool_fun_fun_a_c_bool_fun_fun_a_c_d_tllist_fun_bool_fun_fun_fun$ 0 )
(declare-sort C_d_tllist_c_d_tllist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_fun$ 0 )
(declare-sort C_bool_fun_c_llist_d_prod_bool_fun_fun_c_bool_fun_c_d_tllist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_a_a_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_a_c_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_c_llist_d_prod_bool_fun_fun_a_b_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_c_llist_d_prod_bool_fun_fun_c_d_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_c_llist_d_prod_llist_bool_fun_fun_c_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_c_llist_d_prod_bool_fun_fun_a_c_bool_fun_fun_a_c_llist_d_prod_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun_c_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_bool_fun_c_c_llist_d_prod_fun_bool_fun_fun_c_bool_fun_c_c_d_tllist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_c_llist_d_prod_bool_fun_fun_a_llist_b_prod_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ 0 )
(declare-sort C_llist_d_prod_c_llist_d_prod_bool_fun_fun_c_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun_a_c_llist_d_prod_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_d_tllist_fun_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_prod_llist_c_llist_d_prod_llist_bool_fun_fun_a_b_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort C_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort C_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()C_llist$)
(declare-fun lhd$a (C_llist$)C$)
(declare-fun ltl$a (C_llist$)C_llist$)
(declare-fun lCons$a (C$ C_llist$ )C_llist$)
(declare-sort A_llist_b_prod$ 0)
(declare-sort C_llist_d_prod$ 0)
(declare-fun fst$ (A_llist_b_prod$)A_llist$)
(declare-fun snd$ (A_llist_b_prod$)B$)
(declare-fun pair$ (A_llist$ B$ )A_llist_b_prod$)
(declare-fun fst$a (C_llist_d_prod$)C_llist$)
(declare-fun snd$a (C_llist_d_prod$)D$)
(declare-fun pair$a (C_llist$ D$ )C_llist_d_prod$)
(declare-sort A_b_tllist$ 0)
(declare-sort C_d_tllist$ 0)
(declare-sort C_llist_d_prod_llist$ 0)
(declare-sort C_d_tllist_llist$ 0)
(declare-sort A_llist_b_prod_llist$ 0)
(declare-sort A_b_tllist_llist$ 0)
(declare-fun terminal$ (A_b_tllist$)B$)
(declare-fun tNil$ (B$ )A_b_tllist$)
(declare-fun thd$ (A_b_tllist$)A$)
(declare-fun ttl$ (A_b_tllist$)A_b_tllist$)
(declare-fun tCons$ (A$ A_b_tllist$ )A_b_tllist$)
(declare-fun terminal$a (C_d_tllist$)D$)
(declare-fun tNil$a (D$ )C_d_tllist$)
(declare-fun thd$a (C_d_tllist$)C$)
(declare-fun ttl$a (C_d_tllist$)C_d_tllist$)
(declare-fun tCons$a (C$ C_d_tllist$ )C_d_tllist$)
(declare-fun lNil$b ()C_llist_d_prod_llist$)
(declare-fun lhd$b (C_llist_d_prod_llist$)C_llist_d_prod$)
(declare-fun ltl$b (C_llist_d_prod_llist$)C_llist_d_prod_llist$)
(declare-fun lCons$b (C_llist_d_prod$ C_llist_d_prod_llist$ )C_llist_d_prod_llist$)
(declare-fun lNil$c ()C_d_tllist_llist$)
(declare-fun lhd$c (C_d_tllist_llist$)C_d_tllist$)
(declare-fun ltl$c (C_d_tllist_llist$)C_d_tllist_llist$)
(declare-fun lCons$c (C_d_tllist$ C_d_tllist_llist$ )C_d_tllist_llist$)
(declare-fun lNil$d ()A_llist_b_prod_llist$)
(declare-fun lhd$d (A_llist_b_prod_llist$)A_llist_b_prod$)
(declare-fun ltl$d (A_llist_b_prod_llist$)A_llist_b_prod_llist$)
(declare-fun lCons$d (A_llist_b_prod$ A_llist_b_prod_llist$ )A_llist_b_prod_llist$)
(declare-fun lNil$e ()A_b_tllist_llist$)
(declare-fun lhd$e (A_b_tllist_llist$)A_b_tllist$)
(declare-fun ltl$e (A_b_tllist_llist$)A_b_tllist_llist$)
(declare-fun lCons$e (A_b_tllist$ A_b_tllist_llist$ )A_b_tllist_llist$)
(declare-fun a$ ()A_llist$ )
(declare-fun b$ ()B$ )
(declare-fun p$ ()A_c_bool_fun_fun$ )
(declare-fun r$ (B$ D$ )Bool )
(declare-fun x$ (A_b_tllist$ C_d_tllist$ )Bool )
(declare-fun aa$ ()C_llist$ )
(declare-fun ba$ ()D$ )
(declare-fun bb$ ()A_b_tllist_c_d_tllist_bool_fun_fun$ )
(declare-fun uu$ ()A_a_bool_fun_fun$ )
(declare-fun xa$ ()A_llist_b_prod_c_llist_d_prod_bool_fun_fun$ )
(declare-fun xs$ ()A_b_tllist$ )
(declare-fun ys$ ()C_d_tllist$ )
(declare-fun uua$ ()B_b_bool_fun_fun$ )
(declare-fun uub$ ()C_c_bool_fun_fun$ )
(declare-fun uuc$ ()D_d_bool_fun_fun$ )
(declare-fun uud$ ()Bool_bool_bool_fun_fun$ )
(declare-fun uue$ ()C_llist_c_llist_fun$ )
(declare-fun uuf$ ()C_d_tllist_llist_c_d_tllist_llist_fun$ )
(declare-fun uug$ ()A_llist_a_llist_fun$ )
(declare-fun uuh$ ()C_llist_d_prod_llist_c_llist_d_prod_llist_fun$ )
(declare-fun uui$ ()C_bool_fun_c_bool_fun_bool_fun_fun$ )
(declare-fun uuj$ ()A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun lnull$ ()A_llist_bool_fun$ )
(declare-fun lnull$a ()C_llist_bool_fun$ )
(declare-fun lnull$b ()C_llist_d_prod_llist_bool_fun$ )
(declare-fun lnull$c ()C_d_tllist_llist_bool_fun$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun fun_app$ (C_d_tllist_llist_c_d_tllist_llist_fun$ C_d_tllist_llist$ )C_d_tllist_llist$ )
(declare-fun lfinite$ ()A_llist_bool_fun$ )
(declare-fun member$a (C_llist$ C_llist_set$ )Bool )
(declare-fun rel_fun$ (A_llist_b_prod_a_b_tllist_bool_fun_fun$ C_llist_d_prod_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )A_llist_b_prod_c_llist_d_prod_bool_fun_fun_a_b_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ )
(declare-fun fun_app$a (C_llist_d_prod_llist_c_llist_d_prod_llist_fun$ C_llist_d_prod_llist$ )C_llist_d_prod_llist$ )
(declare-fun fun_app$b (C_llist_c_llist_fun$ C_llist$ )C_llist$ )
(declare-fun fun_app$c (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$d (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$e (Bool_bool_bool_fun_fun$ Bool )Bool_bool_fun$ )
(declare-fun fun_app$f (C_bool_fun_bool_fun$ C_bool_fun$ )Bool )
(declare-fun fun_app$g (C_bool_fun_c_bool_fun_bool_fun_fun$ C_bool_fun$ )C_bool_fun_bool_fun$ )
(declare-fun fun_app$h (A_c_bool_fun_fun_bool_fun$ A_c_bool_fun_fun$ )Bool )
(declare-fun fun_app$i (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun$ )A_c_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$j (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$k (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$l (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$m (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$n (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$o (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$p (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$q (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$r (C_llist_bool_fun$ C_llist$ )Bool )
(declare-fun fun_app$s (A_llist_c_llist_bool_fun_fun$ A_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$t (A_c_bool_fun_fun_a_llist_c_llist_bool_fun_fun_fun$ A_c_bool_fun_fun$ )A_llist_c_llist_bool_fun_fun$ )
(declare-fun fun_app$u (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$v (C_llist_d_prod_bool_fun$ C_llist_d_prod$ )Bool )
(declare-fun fun_app$w (A_llist_b_prod_c_llist_d_prod_bool_fun_fun$ A_llist_b_prod$ )C_llist_d_prod_bool_fun$ )
(declare-fun fun_app$x (A_c_bool_fun_fun$ A$ )C_bool_fun$ )
(declare-fun fun_app$y (A_b_tllist_c_d_tllist_bool_fun_fun_bool_fun$ A_b_tllist_c_d_tllist_bool_fun_fun$ )Bool )
(declare-fun fun_app$z (A_llist_b_prod_c_llist_d_prod_bool_fun_fun_a_b_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ A_llist_b_prod_c_llist_d_prod_bool_fun_fun$ )A_b_tllist_c_d_tllist_bool_fun_fun_bool_fun$ )
(declare-fun lfinite$a ()C_llist_d_prod_llist_bool_fun$ )
(declare-fun lfinite$b ()C_d_tllist_llist_bool_fun$ )
(declare-fun lfinite$c ()C_llist_bool_fun$ )
(declare-fun rel_fun$a (C_llist_d_prod_c_d_tllist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_llist_d_prod_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$b (Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$c (Bool_bool_bool_fun_fun$ Bool_bool_fun_bool_bool_fun_bool_fun_fun$ )Bool_bool_bool_fun_fun_bool_bool_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$d (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun$ )Bool_bool_fun_bool_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$e (C_bool_fun_c_bool_fun_bool_fun_fun$ C_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$ )C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$f (C_c_bool_fun_fun$ )Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$g (C_bool_fun_c_bool_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_bool_fun_bool_fun_c_bool_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$h (C_bool_fun_c_bool_fun_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$i (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_bool_fun_a_c_bool_fun_fun_bool_fun_bool_fun_fun$ )A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$j (A_a_bool_fun_fun$ )C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$k (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_c_bool_fun_fun_bool_fun_a_c_bool_fun_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$l (Bool_c_llist_d_prod_bool_fun_fun_bool_c_d_tllist_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_c_llist_d_prod_fun_bool_fun_fun_c_bool_fun_c_c_d_tllist_fun_bool_fun_fun_bool_fun_fun$ Bool_c_llist_d_prod_bool_fun_fun_c_bool_fun_c_c_llist_d_prod_fun_bool_fun_fun_fun$ Bool_c_d_tllist_bool_fun_fun_c_bool_fun_c_c_d_tllist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$m (Bool_bool_bool_fun_fun$ C_llist_d_prod_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )Bool_c_llist_d_prod_bool_fun_fun_bool_c_d_tllist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$n (C_bool_fun_c_bool_fun_bool_fun_fun$ C_c_llist_d_prod_fun_bool_fun_c_c_d_tllist_fun_bool_fun_bool_fun_fun$ )C_bool_fun_c_c_llist_d_prod_fun_bool_fun_fun_c_bool_fun_c_c_d_tllist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$o (C_c_llist_d_prod_fun_c_c_d_tllist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_c_llist_d_prod_fun_bool_fun_c_c_d_tllist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$p (C_c_bool_fun_fun$ C_llist_d_prod_c_d_tllist_bool_fun_fun$ )C_c_llist_d_prod_fun_c_c_d_tllist_fun_bool_fun_fun$ )
(declare-fun rel_fun$q (C_c_bool_fun_fun$ )Bool_c_llist_d_prod_bool_fun_fun_c_bool_fun_c_c_llist_d_prod_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$r (C_c_bool_fun_fun$ )Bool_c_d_tllist_bool_fun_fun_c_bool_fun_c_c_d_tllist_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$s (C_bool_fun_c_llist_d_prod_bool_fun_fun_c_bool_fun_c_d_tllist_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_c_llist_d_prod_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_d_tllist_fun_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_llist_d_prod_bool_fun_fun_a_c_bool_fun_fun_a_c_llist_d_prod_fun_bool_fun_fun_fun$ C_bool_fun_c_d_tllist_bool_fun_fun_a_c_bool_fun_fun_a_c_d_tllist_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$t (C_bool_fun_c_bool_fun_bool_fun_fun$ C_llist_d_prod_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )C_bool_fun_c_llist_d_prod_bool_fun_fun_c_bool_fun_c_d_tllist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$u (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_c_llist_d_prod_fun_bool_fun_a_c_d_tllist_fun_bool_fun_bool_fun_fun$ )A_c_bool_fun_fun_a_c_llist_d_prod_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_d_tllist_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$v (A_c_llist_d_prod_fun_a_c_d_tllist_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_c_llist_d_prod_fun_bool_fun_a_c_d_tllist_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$w (A_a_bool_fun_fun$ C_llist_d_prod_c_d_tllist_bool_fun_fun$ )A_c_llist_d_prod_fun_a_c_d_tllist_fun_bool_fun_fun$ )
(declare-fun rel_fun$x (A_a_bool_fun_fun$ )C_bool_fun_c_llist_d_prod_bool_fun_fun_a_c_bool_fun_fun_a_c_llist_d_prod_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$y (A_a_bool_fun_fun$ )C_bool_fun_c_d_tllist_bool_fun_fun_a_c_bool_fun_fun_a_c_d_tllist_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$z (Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_c_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$ Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$ )Bool )
(declare-fun fun_app$aa (C_llist_d_prod_llist_bool_fun$ C_llist_d_prod_llist$ )Bool )
(declare-fun fun_app$ab (C_d_tllist_llist_bool_fun$ C_d_tllist_llist$ )Bool )
(declare-fun fun_app$ac (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$ad (A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$ae (C_llist_a_llist_bool_fun_fun$ C_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$af (C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ C_a_bool_fun_fun$ )C_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$ag (C_a_bool_fun_fun$ C$ )A_bool_fun$ )
(declare-fun fun_app$ah (C_llist_c_llist_bool_fun_fun$ C_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$ai (C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ C_c_bool_fun_fun$ )C_llist_c_llist_bool_fun_fun$ )
(declare-fun fun_app$aj (C_llist_c_d_tllist_llist_bool_fun_fun$ C_llist$ )C_d_tllist_llist_bool_fun$ )
(declare-fun fun_app$ak (C_c_d_tllist_bool_fun_fun_c_llist_c_d_tllist_llist_bool_fun_fun_fun$ C_c_d_tllist_bool_fun_fun$ )C_llist_c_d_tllist_llist_bool_fun_fun$ )
(declare-fun fun_app$al (C_d_tllist_bool_fun$ C_d_tllist$ )Bool )
(declare-fun fun_app$am (C_c_d_tllist_bool_fun_fun$ C$ )C_d_tllist_bool_fun$ )
(declare-fun fun_app$an (A_llist_c_llist_d_prod_llist_bool_fun_fun$ A_llist$ )C_llist_d_prod_llist_bool_fun$ )
(declare-fun fun_app$ao (A_c_llist_d_prod_bool_fun_fun_a_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ A_c_llist_d_prod_bool_fun_fun$ )A_llist_c_llist_d_prod_llist_bool_fun_fun$ )
(declare-fun fun_app$ap (A_c_llist_d_prod_bool_fun_fun$ A$ )C_llist_d_prod_bool_fun$ )
(declare-fun fun_app$aq (C_d_tllist_llist_a_llist_bool_fun_fun$ C_d_tllist_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$ar (C_d_tllist_a_bool_fun_fun$ C_d_tllist$ )A_bool_fun$ )
(declare-fun fun_app$as (C_d_tllist_llist_c_llist_bool_fun_fun$ C_d_tllist_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$at (C_d_tllist_c_bool_fun_fun$ C_d_tllist$ )C_bool_fun$ )
(declare-fun fun_app$au (A_c_d_tllist_bool_fun_fun$ A$ )C_d_tllist_bool_fun$ )
(declare-fun fun_app$av (C_llist_d_prod_llist_c_llist_bool_fun_fun$ C_llist_d_prod_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$aw (C_llist_d_prod_c_bool_fun_fun$ C_llist_d_prod$ )C_bool_fun$ )
(declare-fun fun_app$ax (A_llist_c_d_tllist_llist_bool_fun_fun$ A_llist$ )C_d_tllist_llist_bool_fun$ )
(declare-fun fun_app$ay (C_llist_d_prod_llist_a_llist_bool_fun_fun$ C_llist_d_prod_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$az (C_llist_d_prod_a_bool_fun_fun$ C_llist_d_prod$ )A_bool_fun$ )
(declare-fun fun_app$ba (C_llist_c_llist_d_prod_llist_bool_fun_fun$ C_llist$ )C_llist_d_prod_llist_bool_fun$ )
(declare-fun fun_app$bb (C_c_llist_d_prod_bool_fun_fun$ C$ )C_llist_d_prod_bool_fun$ )
(declare-fun fun_app$bc (Bool_bool_bool_fun_fun_c_bool_fun_c_bool_fun_bool_fun_fun_fun$ Bool_bool_bool_fun_fun$ )C_bool_fun_c_bool_fun_bool_fun_fun$ )
(declare-fun fun_app$bd (C_bool_fun_c_bool_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$ )A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun fun_app$be (C_d_tllist_llist_bool_fun_bool_fun$ C_d_tllist_llist_bool_fun$ )Bool )
(declare-fun fun_app$bf (C_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ C_llist_bool_fun$ )C_d_tllist_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$bg (C_llist_d_prod_llist_bool_fun_bool_fun$ C_llist_d_prod_llist_bool_fun$ )Bool )
(declare-fun fun_app$bh (A_llist_bool_fun_c_llist_d_prod_llist_bool_fun_bool_fun_fun$ A_llist_bool_fun$ )C_llist_d_prod_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$bi (A_llist_bool_fun_bool_fun$ A_llist_bool_fun$ )Bool )
(declare-fun fun_app$bj (A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ A_llist_bool_fun$ )A_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$bk (C_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ C_llist_bool_fun$ )A_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$bl (C_llist_bool_fun_bool_fun$ C_llist_bool_fun$ )Bool )
(declare-fun fun_app$bm (C_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ C_llist_bool_fun$ )C_llist_bool_fun_bool_fun$ )
(declare-fun fun_app$bn (A_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ A_llist_bool_fun$ )C_llist_bool_fun_bool_fun$ )
(declare-fun rel_fun$aa (Bool_bool_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$ )Bool_c_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ab (C_bool_fun_c_bool_fun_bool_fun_fun$ C_c_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ )C_bool_fun_c_c_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ac (C_c_fun_c_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_c_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ad (C_c_bool_fun_fun$ C_c_bool_fun_fun$ )C_c_fun_c_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$ae (C_c_bool_fun_fun$ )Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$af (C_bool_fun_c_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_c_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ag (C_bool_fun_c_bool_fun_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$ )C_bool_fun_c_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ah (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ )A_c_bool_fun_fun_a_c_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ai (A_c_fun_a_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_c_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$aj (A_a_bool_fun_fun$ C_c_bool_fun_fun$ )A_c_fun_a_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$ak (A_a_bool_fun_fun$ )C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$al (Bool_a_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ C_bool_fun_c_a_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ Bool_a_bool_fun_fun_c_bool_fun_c_a_fun_bool_fun_fun_fun$ Bool_c_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$am (Bool_bool_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$ )Bool_a_bool_fun_fun_bool_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$an (A_c_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_bool_fun_c_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ao (C_bool_fun_c_bool_fun_bool_fun_fun$ C_a_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ )C_bool_fun_c_a_fun_bool_fun_fun_c_bool_fun_c_c_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ap (C_a_fun_c_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_a_fun_bool_fun_c_c_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$aq (C_c_bool_fun_fun$ A_c_bool_fun_fun$ )C_a_fun_c_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$ar (C_c_bool_fun_fun$ )Bool_a_bool_fun_fun_c_bool_fun_c_a_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$as (C_bool_fun_a_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_a_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ C_bool_fun_a_bool_fun_fun_a_c_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ C_bool_fun_c_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$at (C_bool_fun_c_bool_fun_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$ )C_bool_fun_a_bool_fun_fun_c_bool_fun_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$au (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ )A_c_bool_fun_fun_a_a_fun_bool_fun_fun_a_c_bool_fun_fun_a_c_fun_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$av (A_a_fun_a_c_fun_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_a_fun_bool_fun_a_c_fun_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$aw (A_a_bool_fun_fun$ A_c_bool_fun_fun$ )A_a_fun_a_c_fun_bool_fun_fun$ )
(declare-fun rel_fun$ax (A_a_bool_fun_fun$ )C_bool_fun_a_bool_fun_fun_a_c_bool_fun_fun_a_a_fun_bool_fun_fun_fun$ )
(declare-fun rel_fun$ay (C_llist_c_d_tllist_llist_bool_fun_fun$ C_llist_c_d_tllist_llist_bool_fun_fun$ C_llist_c_llist_fun$ C_d_tllist_llist_c_d_tllist_llist_fun$ )Bool )
(declare-fun rel_fun$az (A_llist_c_llist_d_prod_llist_bool_fun_fun$ A_llist_c_llist_d_prod_llist_bool_fun_fun$ A_llist_a_llist_fun$ C_llist_d_prod_llist_c_llist_d_prod_llist_fun$ )Bool )
(declare-fun rel_fun$ba (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ A_llist_a_llist_fun$ )Bool )
(declare-fun rel_fun$bb (C_llist_a_llist_bool_fun_fun$ C_llist_a_llist_bool_fun_fun$ C_llist_c_llist_fun$ A_llist_a_llist_fun$ )Bool )
(declare-fun rel_fun$bc (C_llist_c_llist_bool_fun_fun$ C_llist_c_llist_bool_fun_fun$ C_llist_c_llist_fun$ C_llist_c_llist_fun$ )Bool )
(declare-fun rel_fun$bd (A_llist_c_llist_bool_fun_fun$ A_llist_c_llist_bool_fun_fun$ A_llist_a_llist_fun$ C_llist_c_llist_fun$ )Bool )
(declare-fun rel_fun$be (C_llist_c_d_tllist_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bf (A_llist_c_llist_d_prod_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_bool_fun_c_llist_d_prod_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bg (A_llist_a_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bh (C_llist_a_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bi (C_llist_c_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bj (A_llist_c_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bk (C_c_bool_fun_fun_c_d_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ C_llist_c_llist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ C_d_tllist_c_d_tllist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bl (C_c_d_tllist_bool_fun_fun$ C_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )C_c_bool_fun_fun_c_d_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bm (C_c_d_tllist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bn (C_llist_c_d_tllist_llist_bool_fun_fun$ C_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ )C_llist_c_llist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bo (C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ C_llist_c_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bp (C_c_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$ )C_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bq (C_llist_c_llist_bool_fun_fun$ C_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ )C_llist_c_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$br (C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ C_llist_c_llist_bool_fun_fun_a_llist_a_llist_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bs (C_a_bool_fun_fun$ C_bool_fun_a_bool_fun_bool_fun_fun$ )C_c_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bt (C_a_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_bool_fun_a_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$bu (C_llist_a_llist_bool_fun_fun$ C_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )C_llist_c_llist_bool_fun_fun_a_llist_a_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bv (A_a_bool_fun_fun_c_llist_d_prod_c_llist_d_prod_bool_fun_fun_bool_fun_fun$ A_llist_a_llist_bool_fun_fun_c_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ C_llist_d_prod_c_llist_d_prod_bool_fun_fun_c_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$bw (A_c_llist_d_prod_bool_fun_fun$ A_bool_fun_c_llist_d_prod_bool_fun_bool_fun_fun$ )A_a_bool_fun_fun_c_llist_d_prod_c_llist_d_prod_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bx (A_c_llist_d_prod_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_bool_fun_c_llist_d_prod_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$by (A_llist_c_llist_d_prod_llist_bool_fun_fun$ A_llist_bool_fun_c_llist_d_prod_llist_bool_fun_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun_c_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$bz (A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ A_llist_a_llist_bool_fun_fun_a_llist_a_llist_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ca (A_a_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun$ )A_a_bool_fun_fun_a_a_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cb (A_a_bool_fun_fun$ Bool_bool_bool_fun_fun$ )A_bool_fun_a_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$cc (A_llist_a_llist_bool_fun_fun$ A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun_a_llist_a_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cd (C_llist_d_prod_c_llist_d_prod_bool_fun_fun_c_d_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ C_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ C_llist_d_prod_c_llist_d_prod_bool_fun_fun_c_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ C_d_tllist_c_d_tllist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ce (C_llist_d_prod_c_d_tllist_bool_fun_fun$ C_llist_d_prod_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )C_llist_d_prod_c_llist_d_prod_bool_fun_fun_c_d_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cf (C_llist_d_prod_llist_c_d_tllist_llist_bool_fun_fun$ C_llist_d_prod_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ )C_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cg (C_llist_d_prod_llist_c_d_tllist_llist_bool_fun_fun$ Bool_bool_bool_fun_fun$ )C_llist_d_prod_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ )
(declare-fun rel_fun$ch (A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_llist_a_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$ci (A_c_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$ )A_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cj (A_llist_c_llist_bool_fun_fun$ A_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ck (A_c_bool_fun_fun_a_c_bool_fun_fun_bool_fun_fun$ A_llist_c_llist_bool_fun_fun_a_llist_c_llist_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_llist_c_llist_bool_fun_fun_fun$ A_c_bool_fun_fun_a_llist_c_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cl (A_llist_a_llist_bool_fun_fun$ C_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ )A_llist_c_llist_bool_fun_fun_a_llist_c_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cm (A_c_llist_d_prod_bool_fun_fun_c_c_d_tllist_bool_fun_fun_bool_fun_fun$ A_llist_c_llist_d_prod_llist_bool_fun_fun_c_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ A_c_llist_d_prod_bool_fun_fun_a_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ C_c_d_tllist_bool_fun_fun_c_llist_c_d_tllist_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cn (A_c_bool_fun_fun$ C_llist_d_prod_bool_fun_c_d_tllist_bool_fun_bool_fun_fun$ )A_c_llist_d_prod_bool_fun_fun_c_c_d_tllist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$co (A_llist_c_llist_bool_fun_fun$ C_llist_d_prod_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ )A_llist_c_llist_d_prod_llist_bool_fun_fun_c_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cp (A_llist_b_prod_c_llist_d_prod_bool_fun_fun_a_b_tllist_c_d_tllist_bool_fun_fun_bool_fun_fun$ A_llist_b_prod_llist_c_llist_d_prod_llist_bool_fun_fun_a_b_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ A_llist_b_prod_c_llist_d_prod_bool_fun_fun_a_llist_b_prod_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ A_b_tllist_c_d_tllist_bool_fun_fun_a_b_tllist_llist_c_d_tllist_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cq (A_llist_b_prod_llist_a_b_tllist_llist_bool_fun_fun$ C_llist_d_prod_llist_bool_fun_c_d_tllist_llist_bool_fun_bool_fun_fun$ )A_llist_b_prod_llist_c_llist_d_prod_llist_bool_fun_fun_a_b_tllist_llist_c_d_tllist_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cr (A_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ A_llist_c_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_llist_c_llist_bool_fun_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cs (A_c_bool_fun_fun$ C_bool_fun_c_bool_fun_bool_fun_fun$ )A_c_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$ct (A_llist_c_llist_bool_fun_fun$ C_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ )A_llist_c_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cu (A_c_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ A_llist_c_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ A_c_bool_fun_fun_a_llist_c_llist_bool_fun_fun_fun$ C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cv (A_c_bool_fun_fun$ C_bool_fun_a_bool_fun_bool_fun_fun$ )A_c_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cw (A_llist_c_llist_bool_fun_fun$ C_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )A_llist_c_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cx (A_a_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ A_llist_a_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$cy (A_c_bool_fun_fun$ A_bool_fun_a_bool_fun_bool_fun_fun$ )A_a_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$cz (A_llist_c_llist_bool_fun_fun$ A_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$da (C_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ C_llist_a_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$db (C_c_bool_fun_fun$ A_bool_fun_c_bool_fun_bool_fun_fun$ )C_a_bool_fun_fun_c_c_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$dc (C_llist_c_llist_bool_fun_fun$ A_llist_bool_fun_c_llist_bool_fun_bool_fun_fun$ )C_llist_a_llist_bool_fun_fun_c_llist_c_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$dd (C_c_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ C_llist_c_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ )Bool )
(declare-fun rel_fun$de (C_c_bool_fun_fun$ C_bool_fun_a_bool_fun_bool_fun_fun$ )C_c_bool_fun_fun_c_a_bool_fun_fun_bool_fun_fun$ )
(declare-fun rel_fun$df (C_llist_c_llist_bool_fun_fun$ C_llist_bool_fun_a_llist_bool_fun_bool_fun_fun$ )C_llist_c_llist_bool_fun_fun_c_llist_a_llist_bool_fun_fun_bool_fun_fun$ )
(declare-fun llist_all2$ ()A_c_bool_fun_fun_a_llist_c_llist_bool_fun_fun_fun$ )
(declare-fun pcr_tllist$ (A_a_bool_fun_fun$ B_b_bool_fun_fun$ )A_llist_b_prod_a_b_tllist_bool_fun_fun$ )
(declare-fun llist_all2$a ()A_a_bool_fun_fun_a_llist_a_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$b ()C_a_bool_fun_fun_c_llist_a_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$c ()C_c_bool_fun_fun_c_llist_c_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$d ()C_c_d_tllist_bool_fun_fun_c_llist_c_d_tllist_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$e ()A_c_llist_d_prod_bool_fun_fun_a_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$f (C_d_tllist_a_bool_fun_fun$ )C_d_tllist_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$g (C_d_tllist_c_bool_fun_fun$ )C_d_tllist_llist_c_llist_bool_fun_fun$ )
(declare-fun llist_all2$h (A_c_d_tllist_bool_fun_fun$ A_llist$ )C_d_tllist_llist_bool_fun$ )
(declare-fun llist_all2$i (C_llist_d_prod_c_bool_fun_fun$ )C_llist_d_prod_llist_c_llist_bool_fun_fun$ )
(declare-fun llist_all2$j (C_llist_d_prod_a_bool_fun_fun$ )C_llist_d_prod_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$k (C_c_llist_d_prod_bool_fun_fun$ C_llist$ )C_llist_d_prod_llist_bool_fun$ )
(declare-fun llist_all2$l ()C_d_tllist_c_d_tllist_bool_fun_fun_c_d_tllist_llist_c_d_tllist_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$m ()C_llist_d_prod_c_llist_d_prod_bool_fun_fun_c_llist_d_prod_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$n (C_llist_d_prod_c_d_tllist_bool_fun_fun$ )C_llist_d_prod_llist_c_d_tllist_llist_bool_fun_fun$ )
(declare-fun llist_all2$o (A_llist_b_prod_a_b_tllist_bool_fun_fun$ )A_llist_b_prod_llist_a_b_tllist_llist_bool_fun_fun$ )
(declare-fun llist_all2$p ()A_llist_b_prod_c_llist_d_prod_bool_fun_fun_a_llist_b_prod_llist_c_llist_d_prod_llist_bool_fun_fun_fun$ )
(declare-fun llist_all2$q ()A_b_tllist_c_d_tllist_bool_fun_fun_a_b_tllist_llist_c_d_tllist_llist_bool_fun_fun_fun$ )
(declare-fun pcr_tllist$a (C_c_bool_fun_fun$ D_d_bool_fun_fun$ )C_llist_d_prod_c_d_tllist_bool_fun_fun$ )
(assert (! (forall ((?v0 C_d_tllist_llist$ ))(! (= (fun_app$ uuf$ ?v0 )(ltl$c ?v0 )):pattern ((fun_app$ uuf$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 C_llist_d_prod_llist$ ))(! (= (fun_app$a uuh$ ?v0 )(ltl$b ?v0 )):pattern ((fun_app$a uuh$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 C_llist$ ))(! (= (fun_app$b uue$ ?v0 )(ltl$a ?v0 )):pattern ((fun_app$b uue$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$c uug$ ?v0 )(ltl$ ?v0 )):pattern ((fun_app$c uug$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(! (= (fun_app$d (fun_app$e uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uud$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C_bool_fun$ ))(! (= (fun_app$f (fun_app$g uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uui$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ ))(! (= (fun_app$h (fun_app$i uuj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uuj$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$j (fun_app$k uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uuc$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$l (fun_app$m uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uub$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$n (fun_app$o uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uua$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$p (fun_app$q uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$p (fun_app$q uu$ ?v0 )?v1 )))):named a10 ))
(assert (! (not (and (fun_app$r (fun_app$s (fun_app$t llist_all2$ p$ )a$ )aa$ )(=> (fun_app$u lfinite$ a$ )(r$ b$ ba$ )))):named a11 ))
(assert (! (fun_app$v (fun_app$w xa$ (pair$ a$ b$ ))(pair$a aa$ ba$ )):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ )(?v2 C_llist$ )(?v3 D$ ))(=> (fun_app$v (fun_app$w xa$ (pair$ ?v0 ?v1 ))(pair$a ?v2 ?v3 ))(and (= (fun_app$u lnull$ ?v0 )(fun_app$r lnull$a ?v2 ))(and (=> (and (fun_app$u lnull$ ?v0 )(fun_app$r lnull$a ?v2 ))(r$ ?v1 ?v3 ))(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$r lnull$a ?v2 )))(and (fun_app$l (fun_app$x p$ (lhd$ ?v0 ))(lhd$a ?v2 ))(or (fun_app$v (fun_app$w xa$ (pair$ (ltl$ ?v0 )?v1 ))(pair$a (ltl$a ?v2 )?v3 ))(and (fun_app$r (fun_app$s (fun_app$t llist_all2$ p$ )(ltl$ ?v0 ))(ltl$a ?v2 ))(=> (fun_app$u lfinite$ ?v0 )(r$ ?v1 ?v3 )))))))))):named a13 ))
(assert (! (fun_app$y (fun_app$z (rel_fun$ (pcr_tllist$ uu$ uua$ )(rel_fun$a (pcr_tllist$a uub$ uuc$ )uud$ ))xa$ )bb$ ):named a14 ))
(assert (! (x$ xs$ ys$ ):named a15 ))
(assert (! (forall ((?v0 C_llist_d_prod_llist$ ))(=> (and (=> (fun_app$aa lnull$b ?v0 )false )(=> (not (fun_app$aa lnull$b ?v0 ))false ))false )):named a16 ))
(assert (! (forall ((?v0 C_d_tllist_llist$ ))(=> (and (=> (fun_app$ab lnull$c ?v0 )false )(=> (not (fun_app$ab lnull$c ?v0 ))false ))false )):named a17 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (fun_app$u lnull$ ?v0 )false )(=> (not (fun_app$u lnull$ ?v0 ))false ))false )):named a18 ))
(assert (! (forall ((?v0 C_llist$ ))(=> (and (=> (fun_app$r lnull$a ?v0 )false )(=> (not (fun_app$r lnull$a ?v0 ))false ))false )):named a19 ))
(assert (! (forall ((?v0 C_llist_d_prod_llist$ ))(= (fun_app$aa lfinite$a (ltl$b ?v0 ))(fun_app$aa lfinite$a ?v0 ))):named a20 ))
(assert (! (forall ((?v0 C_d_tllist_llist$ ))(= (fun_app$ab lfinite$b (ltl$c ?v0 ))(fun_app$ab lfinite$b ?v0 ))):named a21 ))
(assert (! (forall ((?v0 A_llist$ ))(= (fun_app$u lfinite$ (ltl$ ?v0 ))(fun_app$u lfinite$ ?v0 ))):named a22 ))
(assert (! (forall ((?v0 C_llist$ ))(= (fun_app$r lfinite$c (ltl$a ?v0 ))(fun_app$r lfinite$c ?v0 ))):named a23 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v0 )?v1 )?v2 )(and (= (fun_app$u lnull$ ?v1 )(fun_app$u lnull$ ?v2 ))(=> (and (not (fun_app$u lnull$ ?v1 ))(not (fun_app$u lnull$ ?v2 )))(and (fun_app$p (fun_app$q ?v0 (lhd$ ?v1 ))(lhd$ ?v2 ))(fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v0 )(ltl$ ?v1 ))(ltl$ ?v2 ))))))):named a24 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 C_llist$ )(?v2 A_llist$ ))(= (fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v0 )?v1 )?v2 )(and (= (fun_app$r lnull$a ?v1 )(fun_app$u lnull$ ?v2 ))(=> (and (not (fun_app$r lnull$a ?v1 ))(not (fun_app$u lnull$ ?v2 )))(and (fun_app$p (fun_app$ag ?v0 (lhd$a ?v1 ))(lhd$ ?v2 ))(fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v0 )(ltl$a ?v1 ))(ltl$ ?v2 ))))))):named a25 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ ))(= (fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v0 )?v1 )?v2 )(and (= (fun_app$r lnull$a ?v1 )(fun_app$r lnull$a ?v2 ))(=> (and (not (fun_app$r lnull$a ?v1 ))(not (fun_app$r lnull$a ?v2 )))(and (fun_app$l (fun_app$m ?v0 (lhd$a ?v1 ))(lhd$a ?v2 ))(fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v0 )(ltl$a ?v1 ))(ltl$a ?v2 ))))))):named a26 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist$ ))(= (fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v0 )?v1 )?v2 )(and (= (fun_app$u lnull$ ?v1 )(fun_app$r lnull$a ?v2 ))(=> (and (not (fun_app$u lnull$ ?v1 ))(not (fun_app$r lnull$a ?v2 )))(and (fun_app$l (fun_app$x ?v0 (lhd$ ?v1 ))(lhd$a ?v2 ))(fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v0 )(ltl$ ?v1 ))(ltl$a ?v2 ))))))):named a27 ))
(assert (! (forall ((?v0 C_c_d_tllist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_d_tllist_llist$ ))(= (fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v0 )?v1 )?v2 )(and (= (fun_app$r lnull$a ?v1 )(fun_app$ab lnull$c ?v2 ))(=> (and (not (fun_app$r lnull$a ?v1 ))(not (fun_app$ab lnull$c ?v2 )))(and (fun_app$al (fun_app$am ?v0 (lhd$a ?v1 ))(lhd$c ?v2 ))(fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v0 )(ltl$a ?v1 ))(ltl$c ?v2 ))))))):named a28 ))
(assert (! (forall ((?v0 A_c_llist_d_prod_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist_d_prod_llist$ ))(= (fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v0 )?v1 )?v2 )(and (= (fun_app$u lnull$ ?v1 )(fun_app$aa lnull$b ?v2 ))(=> (and (not (fun_app$u lnull$ ?v1 ))(not (fun_app$aa lnull$b ?v2 )))(and (fun_app$v (fun_app$ap ?v0 (lhd$ ?v1 ))(lhd$b ?v2 ))(fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v0 )(ltl$ ?v1 ))(ltl$b ?v2 ))))))):named a29 ))
(assert (! (forall ((?v0 C_d_tllist_a_bool_fun_fun$ )(?v1 C_d_tllist_llist$ )(?v2 A_llist$ ))(= (fun_app$u (fun_app$aq (llist_all2$f ?v0 )?v1 )?v2 )(and (= (fun_app$ab lnull$c ?v1 )(fun_app$u lnull$ ?v2 ))(=> (and (not (fun_app$ab lnull$c ?v1 ))(not (fun_app$u lnull$ ?v2 )))(and (fun_app$p (fun_app$ar ?v0 (lhd$c ?v1 ))(lhd$ ?v2 ))(fun_app$u (fun_app$aq (llist_all2$f ?v0 )(ltl$c ?v1 ))(ltl$ ?v2 ))))))):named a30 ))
(assert (! (forall ((?v0 C_d_tllist_c_bool_fun_fun$ )(?v1 C_d_tllist_llist$ )(?v2 C_llist$ ))(= (fun_app$r (fun_app$as (llist_all2$g ?v0 )?v1 )?v2 )(and (= (fun_app$ab lnull$c ?v1 )(fun_app$r lnull$a ?v2 ))(=> (and (not (fun_app$ab lnull$c ?v1 ))(not (fun_app$r lnull$a ?v2 )))(and (fun_app$l (fun_app$at ?v0 (lhd$c ?v1 ))(lhd$a ?v2 ))(fun_app$r (fun_app$as (llist_all2$g ?v0 )(ltl$c ?v1 ))(ltl$a ?v2 ))))))):named a31 ))
(assert (! (forall ((?v0 A_c_d_tllist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_d_tllist_llist$ ))(= (fun_app$ab (llist_all2$h ?v0 ?v1 )?v2 )(and (= (fun_app$u lnull$ ?v1 )(fun_app$ab lnull$c ?v2 ))(=> (and (not (fun_app$u lnull$ ?v1 ))(not (fun_app$ab lnull$c ?v2 )))(and (fun_app$al (fun_app$au ?v0 (lhd$ ?v1 ))(lhd$c ?v2 ))(fun_app$ab (llist_all2$h ?v0 (ltl$ ?v1 ))(ltl$c ?v2 ))))))):named a32 ))
(assert (! (forall ((?v0 C_llist_d_prod_c_bool_fun_fun$ )(?v1 C_llist_d_prod_llist$ )(?v2 C_llist$ ))(= (fun_app$r (fun_app$av (llist_all2$i ?v0 )?v1 )?v2 )(and (= (fun_app$aa lnull$b ?v1 )(fun_app$r lnull$a ?v2 ))(=> (and (not (fun_app$aa lnull$b ?v1 ))(not (fun_app$r lnull$a ?v2 )))(and (fun_app$l (fun_app$aw ?v0 (lhd$b ?v1 ))(lhd$a ?v2 ))(fun_app$r (fun_app$av (llist_all2$i ?v0 )(ltl$b ?v1 ))(ltl$a ?v2 ))))))):named a33 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_a_bool_fun_fun$ ))(=> (and (= (fun_app$u lnull$ ?v0 )(fun_app$u lnull$ ?v1 ))(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$u lnull$ ?v1 )))(and (fun_app$p (fun_app$q ?v2 (lhd$ ?v0 ))(lhd$ ?v1 ))(fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v2 )(ltl$ ?v0 ))(ltl$ ?v1 )))))(fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v2 )?v0 )?v1 ))):named a34 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 A_llist$ )(?v2 C_a_bool_fun_fun$ ))(=> (and (= (fun_app$r lnull$a ?v0 )(fun_app$u lnull$ ?v1 ))(=> (and (not (fun_app$r lnull$a ?v0 ))(not (fun_app$u lnull$ ?v1 )))(and (fun_app$p (fun_app$ag ?v2 (lhd$a ?v0 ))(lhd$ ?v1 ))(fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v2 )(ltl$a ?v0 ))(ltl$ ?v1 )))))(fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v2 )?v0 )?v1 ))):named a35 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ )(?v2 C_c_bool_fun_fun$ ))(=> (and (= (fun_app$r lnull$a ?v0 )(fun_app$r lnull$a ?v1 ))(=> (and (not (fun_app$r lnull$a ?v0 ))(not (fun_app$r lnull$a ?v1 )))(and (fun_app$l (fun_app$m ?v2 (lhd$a ?v0 ))(lhd$a ?v1 ))(fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v2 )(ltl$a ?v0 ))(ltl$a ?v1 )))))(fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v2 )?v0 )?v1 ))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C_llist$ )(?v2 A_c_bool_fun_fun$ ))(=> (and (= (fun_app$u lnull$ ?v0 )(fun_app$r lnull$a ?v1 ))(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$r lnull$a ?v1 )))(and (fun_app$l (fun_app$x ?v2 (lhd$ ?v0 ))(lhd$a ?v1 ))(fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v2 )(ltl$ ?v0 ))(ltl$a ?v1 )))))(fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v2 )?v0 )?v1 ))):named a37 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_d_tllist_llist$ )(?v2 C_c_d_tllist_bool_fun_fun$ ))(=> (and (= (fun_app$r lnull$a ?v0 )(fun_app$ab lnull$c ?v1 ))(=> (and (not (fun_app$r lnull$a ?v0 ))(not (fun_app$ab lnull$c ?v1 )))(and (fun_app$al (fun_app$am ?v2 (lhd$a ?v0 ))(lhd$c ?v1 ))(fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v2 )(ltl$a ?v0 ))(ltl$c ?v1 )))))(fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v2 )?v0 )?v1 ))):named a38 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C_llist_d_prod_llist$ )(?v2 A_c_llist_d_prod_bool_fun_fun$ ))(=> (and (= (fun_app$u lnull$ ?v0 )(fun_app$aa lnull$b ?v1 ))(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$aa lnull$b ?v1 )))(and (fun_app$v (fun_app$ap ?v2 (lhd$ ?v0 ))(lhd$b ?v1 ))(fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v2 )(ltl$ ?v0 ))(ltl$b ?v1 )))))(fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v2 )?v0 )?v1 ))):named a39 ))
(assert (! (forall ((?v0 C_d_tllist_llist$ )(?v1 A_llist$ )(?v2 C_d_tllist_a_bool_fun_fun$ ))(=> (and (= (fun_app$ab lnull$c ?v0 )(fun_app$u lnull$ ?v1 ))(=> (and (not (fun_app$ab lnull$c ?v0 ))(not (fun_app$u lnull$ ?v1 )))(and (fun_app$p (fun_app$ar ?v2 (lhd$c ?v0 ))(lhd$ ?v1 ))(fun_app$u (fun_app$aq (llist_all2$f ?v2 )(ltl$c ?v0 ))(ltl$ ?v1 )))))(fun_app$u (fun_app$aq (llist_all2$f ?v2 )?v0 )?v1 ))):named a40 ))
(assert (! (forall ((?v0 C_d_tllist_llist$ )(?v1 C_llist$ )(?v2 C_d_tllist_c_bool_fun_fun$ ))(=> (and (= (fun_app$ab lnull$c ?v0 )(fun_app$r lnull$a ?v1 ))(=> (and (not (fun_app$ab lnull$c ?v0 ))(not (fun_app$r lnull$a ?v1 )))(and (fun_app$l (fun_app$at ?v2 (lhd$c ?v0 ))(lhd$a ?v1 ))(fun_app$r (fun_app$as (llist_all2$g ?v2 )(ltl$c ?v0 ))(ltl$a ?v1 )))))(fun_app$r (fun_app$as (llist_all2$g ?v2 )?v0 )?v1 ))):named a41 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C_d_tllist_llist$ )(?v2 A_c_d_tllist_bool_fun_fun$ ))(=> (and (= (fun_app$u lnull$ ?v0 )(fun_app$ab lnull$c ?v1 ))(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$ab lnull$c ?v1 )))(and (fun_app$al (fun_app$au ?v2 (lhd$ ?v0 ))(lhd$c ?v1 ))(fun_app$ab (llist_all2$h ?v2 (ltl$ ?v0 ))(ltl$c ?v1 )))))(fun_app$ab (llist_all2$h ?v2 ?v0 )?v1 ))):named a42 ))
(assert (! (forall ((?v0 C_llist_d_prod_llist$ )(?v1 C_llist$ )(?v2 C_llist_d_prod_c_bool_fun_fun$ ))(=> (and (= (fun_app$aa lnull$b ?v0 )(fun_app$r lnull$a ?v1 ))(=> (and (not (fun_app$aa lnull$b ?v0 ))(not (fun_app$r lnull$a ?v1 )))(and (fun_app$l (fun_app$aw ?v2 (lhd$b ?v0 ))(lhd$a ?v1 ))(fun_app$r (fun_app$av (llist_all2$i ?v2 )(ltl$b ?v0 ))(ltl$a ?v1 )))))(fun_app$r (fun_app$av (llist_all2$i ?v2 )?v0 )?v1 ))):named a43 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$u (fun_app$ac ?v0 ?v1 )?v2 )(and (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (fun_app$u (fun_app$ac ?v0 ?v4 )?v5 )(= (fun_app$u lnull$ ?v4 )(fun_app$u lnull$ ?v5 ))))(forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (and (fun_app$u (fun_app$ac ?v0 ?v4 )?v5 )(and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$u lnull$ ?v5 ))))(and (fun_app$p (fun_app$q ?v3 (lhd$ ?v4 ))(lhd$ ?v5 ))(or (fun_app$u (fun_app$ac ?v0 (ltl$ ?v4 ))(ltl$ ?v5 ))(fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v3 )(ltl$ ?v4 ))(ltl$ ?v5 ))))))))(fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v3 )?v1 )?v2 ))):named a44 ))
(assert (! (forall ((?v0 C_llist_a_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 A_llist$ )(?v3 C_a_bool_fun_fun$ ))(=> (and (fun_app$u (fun_app$ae ?v0 ?v1 )?v2 )(and (forall ((?v4 C_llist$ )(?v5 A_llist$ ))(=> (fun_app$u (fun_app$ae ?v0 ?v4 )?v5 )(= (fun_app$r lnull$a ?v4 )(fun_app$u lnull$ ?v5 ))))(forall ((?v4 C_llist$ )(?v5 A_llist$ ))(=> (and (fun_app$u (fun_app$ae ?v0 ?v4 )?v5 )(and (not (fun_app$r lnull$a ?v4 ))(not (fun_app$u lnull$ ?v5 ))))(and (fun_app$p (fun_app$ag ?v3 (lhd$a ?v4 ))(lhd$ ?v5 ))(or (fun_app$u (fun_app$ae ?v0 (ltl$a ?v4 ))(ltl$ ?v5 ))(fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v3 )(ltl$a ?v4 ))(ltl$ ?v5 ))))))))(fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v3 )?v1 )?v2 ))):named a45 ))
(assert (! (forall ((?v0 C_llist_c_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ )(?v3 C_c_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$ah ?v0 ?v1 )?v2 )(and (forall ((?v4 C_llist$ )(?v5 C_llist$ ))(=> (fun_app$r (fun_app$ah ?v0 ?v4 )?v5 )(= (fun_app$r lnull$a ?v4 )(fun_app$r lnull$a ?v5 ))))(forall ((?v4 C_llist$ )(?v5 C_llist$ ))(=> (and (fun_app$r (fun_app$ah ?v0 ?v4 )?v5 )(and (not (fun_app$r lnull$a ?v4 ))(not (fun_app$r lnull$a ?v5 ))))(and (fun_app$l (fun_app$m ?v3 (lhd$a ?v4 ))(lhd$a ?v5 ))(or (fun_app$r (fun_app$ah ?v0 (ltl$a ?v4 ))(ltl$a ?v5 ))(fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v3 )(ltl$a ?v4 ))(ltl$a ?v5 ))))))))(fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v3 )?v1 )?v2 ))):named a46 ))
(assert (! (forall ((?v0 A_llist_c_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist$ )(?v3 A_c_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$s ?v0 ?v1 )?v2 )(and (forall ((?v4 A_llist$ )(?v5 C_llist$ ))(=> (fun_app$r (fun_app$s ?v0 ?v4 )?v5 )(= (fun_app$u lnull$ ?v4 )(fun_app$r lnull$a ?v5 ))))(forall ((?v4 A_llist$ )(?v5 C_llist$ ))(=> (and (fun_app$r (fun_app$s ?v0 ?v4 )?v5 )(and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$r lnull$a ?v5 ))))(and (fun_app$l (fun_app$x ?v3 (lhd$ ?v4 ))(lhd$a ?v5 ))(or (fun_app$r (fun_app$s ?v0 (ltl$ ?v4 ))(ltl$a ?v5 ))(fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v3 )(ltl$ ?v4 ))(ltl$a ?v5 ))))))))(fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v3 )?v1 )?v2 ))):named a47 ))
(assert (! (forall ((?v0 C_llist_c_d_tllist_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_d_tllist_llist$ )(?v3 C_c_d_tllist_bool_fun_fun$ ))(=> (and (fun_app$ab (fun_app$aj ?v0 ?v1 )?v2 )(and (forall ((?v4 C_llist$ )(?v5 C_d_tllist_llist$ ))(=> (fun_app$ab (fun_app$aj ?v0 ?v4 )?v5 )(= (fun_app$r lnull$a ?v4 )(fun_app$ab lnull$c ?v5 ))))(forall ((?v4 C_llist$ )(?v5 C_d_tllist_llist$ ))(=> (and (fun_app$ab (fun_app$aj ?v0 ?v4 )?v5 )(and (not (fun_app$r lnull$a ?v4 ))(not (fun_app$ab lnull$c ?v5 ))))(and (fun_app$al (fun_app$am ?v3 (lhd$a ?v4 ))(lhd$c ?v5 ))(or (fun_app$ab (fun_app$aj ?v0 (ltl$a ?v4 ))(ltl$c ?v5 ))(fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v3 )(ltl$a ?v4 ))(ltl$c ?v5 ))))))))(fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v3 )?v1 )?v2 ))):named a48 ))
(assert (! (forall ((?v0 A_llist_c_llist_d_prod_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist_d_prod_llist$ )(?v3 A_c_llist_d_prod_bool_fun_fun$ ))(=> (and (fun_app$aa (fun_app$an ?v0 ?v1 )?v2 )(and (forall ((?v4 A_llist$ )(?v5 C_llist_d_prod_llist$ ))(=> (fun_app$aa (fun_app$an ?v0 ?v4 )?v5 )(= (fun_app$u lnull$ ?v4 )(fun_app$aa lnull$b ?v5 ))))(forall ((?v4 A_llist$ )(?v5 C_llist_d_prod_llist$ ))(=> (and (fun_app$aa (fun_app$an ?v0 ?v4 )?v5 )(and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$aa lnull$b ?v5 ))))(and (fun_app$v (fun_app$ap ?v3 (lhd$ ?v4 ))(lhd$b ?v5 ))(or (fun_app$aa (fun_app$an ?v0 (ltl$ ?v4 ))(ltl$b ?v5 ))(fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v3 )(ltl$ ?v4 ))(ltl$b ?v5 ))))))))(fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v3 )?v1 )?v2 ))):named a49 ))
(assert (! (forall ((?v0 C_d_tllist_llist_a_llist_bool_fun_fun$ )(?v1 C_d_tllist_llist$ )(?v2 A_llist$ )(?v3 C_d_tllist_a_bool_fun_fun$ ))(=> (and (fun_app$u (fun_app$aq ?v0 ?v1 )?v2 )(and (forall ((?v4 C_d_tllist_llist$ )(?v5 A_llist$ ))(=> (fun_app$u (fun_app$aq ?v0 ?v4 )?v5 )(= (fun_app$ab lnull$c ?v4 )(fun_app$u lnull$ ?v5 ))))(forall ((?v4 C_d_tllist_llist$ )(?v5 A_llist$ ))(=> (and (fun_app$u (fun_app$aq ?v0 ?v4 )?v5 )(and (not (fun_app$ab lnull$c ?v4 ))(not (fun_app$u lnull$ ?v5 ))))(and (fun_app$p (fun_app$ar ?v3 (lhd$c ?v4 ))(lhd$ ?v5 ))(or (fun_app$u (fun_app$aq ?v0 (ltl$c ?v4 ))(ltl$ ?v5 ))(fun_app$u (fun_app$aq (llist_all2$f ?v3 )(ltl$c ?v4 ))(ltl$ ?v5 ))))))))(fun_app$u (fun_app$aq (llist_all2$f ?v3 )?v1 )?v2 ))):named a50 ))
(assert (! (forall ((?v0 C_d_tllist_llist_c_llist_bool_fun_fun$ )(?v1 C_d_tllist_llist$ )(?v2 C_llist$ )(?v3 C_d_tllist_c_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$as ?v0 ?v1 )?v2 )(and (forall ((?v4 C_d_tllist_llist$ )(?v5 C_llist$ ))(=> (fun_app$r (fun_app$as ?v0 ?v4 )?v5 )(= (fun_app$ab lnull$c ?v4 )(fun_app$r lnull$a ?v5 ))))(forall ((?v4 C_d_tllist_llist$ )(?v5 C_llist$ ))(=> (and (fun_app$r (fun_app$as ?v0 ?v4 )?v5 )(and (not (fun_app$ab lnull$c ?v4 ))(not (fun_app$r lnull$a ?v5 ))))(and (fun_app$l (fun_app$at ?v3 (lhd$c ?v4 ))(lhd$a ?v5 ))(or (fun_app$r (fun_app$as ?v0 (ltl$c ?v4 ))(ltl$a ?v5 ))(fun_app$r (fun_app$as (llist_all2$g ?v3 )(ltl$c ?v4 ))(ltl$a ?v5 ))))))))(fun_app$r (fun_app$as (llist_all2$g ?v3 )?v1 )?v2 ))):named a51 ))
(assert (! (forall ((?v0 A_llist_c_d_tllist_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_d_tllist_llist$ )(?v3 A_c_d_tllist_bool_fun_fun$ ))(=> (and (fun_app$ab (fun_app$ax ?v0 ?v1 )?v2 )(and (forall ((?v4 A_llist$ )(?v5 C_d_tllist_llist$ ))(=> (fun_app$ab (fun_app$ax ?v0 ?v4 )?v5 )(= (fun_app$u lnull$ ?v4 )(fun_app$ab lnull$c ?v5 ))))(forall ((?v4 A_llist$ )(?v5 C_d_tllist_llist$ ))(=> (and (fun_app$ab (fun_app$ax ?v0 ?v4 )?v5 )(and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$ab lnull$c ?v5 ))))(and (fun_app$al (fun_app$au ?v3 (lhd$ ?v4 ))(lhd$c ?v5 ))(or (fun_app$ab (fun_app$ax ?v0 (ltl$ ?v4 ))(ltl$c ?v5 ))(fun_app$ab (llist_all2$h ?v3 (ltl$ ?v4 ))(ltl$c ?v5 ))))))))(fun_app$ab (llist_all2$h ?v3 ?v1 )?v2 ))):named a52 ))
(assert (! (forall ((?v0 C_llist_d_prod_llist_c_llist_bool_fun_fun$ )(?v1 C_llist_d_prod_llist$ )(?v2 C_llist$ )(?v3 C_llist_d_prod_c_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$av ?v0 ?v1 )?v2 )(and (forall ((?v4 C_llist_d_prod_llist$ )(?v5 C_llist$ ))(=> (fun_app$r (fun_app$av ?v0 ?v4 )?v5 )(= (fun_app$aa lnull$b ?v4 )(fun_app$r lnull$a ?v5 ))))(forall ((?v4 C_llist_d_prod_llist$ )(?v5 C_llist$ ))(=> (and (fun_app$r (fun_app$av ?v0 ?v4 )?v5 )(and (not (fun_app$aa lnull$b ?v4 ))(not (fun_app$r lnull$a ?v5 ))))(and (fun_app$l (fun_app$aw ?v3 (lhd$b ?v4 ))(lhd$a ?v5 ))(or (fun_app$r (fun_app$av ?v0 (ltl$b ?v4 ))(ltl$a ?v5 ))(fun_app$r (fun_app$av (llist_all2$i ?v3 )(ltl$b ?v4 ))(ltl$a ?v5 ))))))))(fun_app$r (fun_app$av (llist_all2$i ?v3 )?v1 )?v2 ))):named a53 ))
(assert (! (forall ((?v0 C_llist_d_prod_llist_c_llist_bool_fun_fun$ )(?v1 C_llist_d_prod_llist$ )(?v2 C_llist$ )(?v3 C_llist_d_prod_c_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$av ?v0 ?v1 )?v2 )(forall ((?v4 C_llist_d_prod_llist$ )(?v5 C_llist$ ))(=> (fun_app$r (fun_app$av ?v0 ?v4 )?v5 )(and (= (fun_app$aa lnull$b ?v4 )(fun_app$r lnull$a ?v5 ))(=> (and (not (fun_app$aa lnull$b ?v4 ))(not (fun_app$r lnull$a ?v5 )))(and (fun_app$l (fun_app$aw ?v3 (lhd$b ?v4 ))(lhd$a ?v5 ))(fun_app$r (fun_app$av ?v0 (ltl$b ?v4 ))(ltl$a ?v5 ))))))))(fun_app$r (fun_app$av (llist_all2$i ?v3 )?v1 )?v2 ))):named a54 ))
(assert (! (forall ((?v0 C_llist_d_prod_llist_a_llist_bool_fun_fun$ )(?v1 C_llist_d_prod_llist$ )(?v2 A_llist$ )(?v3 C_llist_d_prod_a_bool_fun_fun$ ))(=> (and (fun_app$u (fun_app$ay ?v0 ?v1 )?v2 )(forall ((?v4 C_llist_d_prod_llist$ )(?v5 A_llist$ ))(=> (fun_app$u (fun_app$ay ?v0 ?v4 )?v5 )(and (= (fun_app$aa lnull$b ?v4 )(fun_app$u lnull$ ?v5 ))(=> (and (not (fun_app$aa lnull$b ?v4 ))(not (fun_app$u lnull$ ?v5 )))(and (fun_app$p (fun_app$az ?v3 (lhd$b ?v4 ))(lhd$ ?v5 ))(fun_app$u (fun_app$ay ?v0 (ltl$b ?v4 ))(ltl$ ?v5 ))))))))(fun_app$u (fun_app$ay (llist_all2$j ?v3 )?v1 )?v2 ))):named a55 ))
(assert (! (forall ((?v0 C_llist_c_llist_d_prod_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist_d_prod_llist$ )(?v3 C_c_llist_d_prod_bool_fun_fun$ ))(=> (and (fun_app$aa (fun_app$ba ?v0 ?v1 )?v2 )(forall ((?v4 C_llist$ )(?v5 C_llist_d_prod_llist$ ))(=> (fun_app$aa (fun_app$ba ?v0 ?v4 )?v5 )(and (= (fun_app$r lnull$a ?v4 )(fun_app$aa lnull$b ?v5 ))(=> (and (not (fun_app$r lnull$a ?v4 ))(not (fun_app$aa lnull$b ?v5 )))(and (fun_app$v (fun_app$bb ?v3 (lhd$a ?v4 ))(lhd$b ?v5 ))(fun_app$aa (fun_app$ba ?v0 (ltl$a ?v4 ))(ltl$b ?v5 ))))))))(fun_app$aa (llist_all2$k ?v3 ?v1 )?v2 ))):named a56 ))
(assert (! (forall ((?v0 A_llist_c_d_tllist_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_d_tllist_llist$ )(?v3 A_c_d_tllist_bool_fun_fun$ ))(=> (and (fun_app$ab (fun_app$ax ?v0 ?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 C_d_tllist_llist$ ))(=> (fun_app$ab (fun_app$ax ?v0 ?v4 )?v5 )(and (= (fun_app$u lnull$ ?v4 )(fun_app$ab lnull$c ?v5 ))(=> (and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$ab lnull$c ?v5 )))(and (fun_app$al (fun_app$au ?v3 (lhd$ ?v4 ))(lhd$c ?v5 ))(fun_app$ab (fun_app$ax ?v0 (ltl$ ?v4 ))(ltl$c ?v5 ))))))))(fun_app$ab (llist_all2$h ?v3 ?v1 )?v2 ))):named a57 ))
(assert (! (forall ((?v0 C_llist_c_d_tllist_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_d_tllist_llist$ )(?v3 C_c_d_tllist_bool_fun_fun$ ))(=> (and (fun_app$ab (fun_app$aj ?v0 ?v1 )?v2 )(forall ((?v4 C_llist$ )(?v5 C_d_tllist_llist$ ))(=> (fun_app$ab (fun_app$aj ?v0 ?v4 )?v5 )(and (= (fun_app$r lnull$a ?v4 )(fun_app$ab lnull$c ?v5 ))(=> (and (not (fun_app$r lnull$a ?v4 ))(not (fun_app$ab lnull$c ?v5 )))(and (fun_app$al (fun_app$am ?v3 (lhd$a ?v4 ))(lhd$c ?v5 ))(fun_app$ab (fun_app$aj ?v0 (ltl$a ?v4 ))(ltl$c ?v5 ))))))))(fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v3 )?v1 )?v2 ))):named a58 ))
(assert (! (forall ((?v0 A_llist_c_llist_d_prod_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist_d_prod_llist$ )(?v3 A_c_llist_d_prod_bool_fun_fun$ ))(=> (and (fun_app$aa (fun_app$an ?v0 ?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 C_llist_d_prod_llist$ ))(=> (fun_app$aa (fun_app$an ?v0 ?v4 )?v5 )(and (= (fun_app$u lnull$ ?v4 )(fun_app$aa lnull$b ?v5 ))(=> (and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$aa lnull$b ?v5 )))(and (fun_app$v (fun_app$ap ?v3 (lhd$ ?v4 ))(lhd$b ?v5 ))(fun_app$aa (fun_app$an ?v0 (ltl$ ?v4 ))(ltl$b ?v5 ))))))))(fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v3 )?v1 )?v2 ))):named a59 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$u (fun_app$ac ?v0 ?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (fun_app$u (fun_app$ac ?v0 ?v4 )?v5 )(and (= (fun_app$u lnull$ ?v4 )(fun_app$u lnull$ ?v5 ))(=> (and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$u lnull$ ?v5 )))(and (fun_app$p (fun_app$q ?v3 (lhd$ ?v4 ))(lhd$ ?v5 ))(fun_app$u (fun_app$ac ?v0 (ltl$ ?v4 ))(ltl$ ?v5 ))))))))(fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v3 )?v1 )?v2 ))):named a60 ))
(assert (! (forall ((?v0 C_llist_a_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 A_llist$ )(?v3 C_a_bool_fun_fun$ ))(=> (and (fun_app$u (fun_app$ae ?v0 ?v1 )?v2 )(forall ((?v4 C_llist$ )(?v5 A_llist$ ))(=> (fun_app$u (fun_app$ae ?v0 ?v4 )?v5 )(and (= (fun_app$r lnull$a ?v4 )(fun_app$u lnull$ ?v5 ))(=> (and (not (fun_app$r lnull$a ?v4 ))(not (fun_app$u lnull$ ?v5 )))(and (fun_app$p (fun_app$ag ?v3 (lhd$a ?v4 ))(lhd$ ?v5 ))(fun_app$u (fun_app$ae ?v0 (ltl$a ?v4 ))(ltl$ ?v5 ))))))))(fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v3 )?v1 )?v2 ))):named a61 ))
(assert (! (forall ((?v0 C_llist_c_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ )(?v3 C_c_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$ah ?v0 ?v1 )?v2 )(forall ((?v4 C_llist$ )(?v5 C_llist$ ))(=> (fun_app$r (fun_app$ah ?v0 ?v4 )?v5 )(and (= (fun_app$r lnull$a ?v4 )(fun_app$r lnull$a ?v5 ))(=> (and (not (fun_app$r lnull$a ?v4 ))(not (fun_app$r lnull$a ?v5 )))(and (fun_app$l (fun_app$m ?v3 (lhd$a ?v4 ))(lhd$a ?v5 ))(fun_app$r (fun_app$ah ?v0 (ltl$a ?v4 ))(ltl$a ?v5 ))))))))(fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v3 )?v1 )?v2 ))):named a62 ))
(assert (! (forall ((?v0 A_llist_c_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist$ )(?v3 A_c_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$s ?v0 ?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 C_llist$ ))(=> (fun_app$r (fun_app$s ?v0 ?v4 )?v5 )(and (= (fun_app$u lnull$ ?v4 )(fun_app$r lnull$a ?v5 ))(=> (and (not (fun_app$u lnull$ ?v4 ))(not (fun_app$r lnull$a ?v5 )))(and (fun_app$l (fun_app$x ?v3 (lhd$ ?v4 ))(lhd$a ?v5 ))(fun_app$r (fun_app$s ?v0 (ltl$ ?v4 ))(ltl$a ?v5 ))))))))(fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v3 )?v1 )?v2 ))):named a63 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (= (fun_app$u lnull$ ?v0 )(fun_app$u lnull$ ?v1 ))(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$u lnull$ ?v1 )))(and (= (lhd$ ?v0 )(lhd$ ?v1 ))(= (ltl$ ?v0 )(ltl$ ?v1 )))))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ ))(=> (and (= (fun_app$r lnull$a ?v0 )(fun_app$r lnull$a ?v1 ))(=> (and (not (fun_app$r lnull$a ?v0 ))(not (fun_app$r lnull$a ?v1 )))(and (= (lhd$a ?v0 )(lhd$a ?v1 ))(= (ltl$a ?v0 )(ltl$a ?v1 )))))(= ?v0 ?v1 ))):named a65 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$u (fun_app$ac ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ )(?v4 A_llist$ ))(=> (fun_app$u (fun_app$ac ?v0 ?v3 )?v4 )(and (= (fun_app$u lnull$ ?v3 )(fun_app$u lnull$ ?v4 ))(=> (and (not (fun_app$u lnull$ ?v3 ))(not (fun_app$u lnull$ ?v4 )))(and (= (lhd$ ?v3 )(lhd$ ?v4 ))(or (fun_app$u (fun_app$ac ?v0 (ltl$ ?v3 ))(ltl$ ?v4 ))(= (ltl$ ?v3 )(ltl$ ?v4 )))))))))(= ?v1 ?v2 ))):named a66 ))
(assert (! (forall ((?v0 C_llist_c_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ ))(=> (and (fun_app$r (fun_app$ah ?v0 ?v1 )?v2 )(forall ((?v3 C_llist$ )(?v4 C_llist$ ))(=> (fun_app$r (fun_app$ah ?v0 ?v3 )?v4 )(and (= (fun_app$r lnull$a ?v3 )(fun_app$r lnull$a ?v4 ))(=> (and (not (fun_app$r lnull$a ?v3 ))(not (fun_app$r lnull$a ?v4 )))(and (= (lhd$a ?v3 )(lhd$a ?v4 ))(or (fun_app$r (fun_app$ah ?v0 (ltl$a ?v3 ))(ltl$a ?v4 ))(= (ltl$a ?v3 )(ltl$a ?v4 )))))))))(= ?v1 ?v2 ))):named a67 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$u (fun_app$ac ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ )(?v4 A_llist$ ))(=> (fun_app$u (fun_app$ac ?v0 ?v3 )?v4 )(and (= (fun_app$u lnull$ ?v3 )(fun_app$u lnull$ ?v4 ))(=> (and (not (fun_app$u lnull$ ?v3 ))(not (fun_app$u lnull$ ?v4 )))(and (= (lhd$ ?v3 )(lhd$ ?v4 ))(fun_app$u (fun_app$ac ?v0 (ltl$ ?v3 ))(ltl$ ?v4 ))))))))(= ?v1 ?v2 ))):named a68 ))
(assert (! (forall ((?v0 C_llist_c_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ ))(=> (and (fun_app$r (fun_app$ah ?v0 ?v1 )?v2 )(forall ((?v3 C_llist$ )(?v4 C_llist$ ))(=> (fun_app$r (fun_app$ah ?v0 ?v3 )?v4 )(and (= (fun_app$r lnull$a ?v3 )(fun_app$r lnull$a ?v4 ))(=> (and (not (fun_app$r lnull$a ?v3 ))(not (fun_app$r lnull$a ?v4 )))(and (= (lhd$a ?v3 )(lhd$a ?v4 ))(fun_app$r (fun_app$ah ?v0 (ltl$a ?v3 ))(ltl$a ?v4 ))))))))(= ?v1 ?v2 ))):named a69 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 Bool_bool_bool_fun_fun$ ))(rel_fun$b (rel_fun$c ?v0 (rel_fun$d ?v1 uud$ ))(rel_fun$e (fun_app$bc (rel_fun$f uub$ )?v0 )(rel_fun$g (fun_app$bc (rel_fun$f uub$ )?v1 )uud$ ))(rel_fun$f uub$ )(rel_fun$f uub$ ))):named a70 ))
(assert (! (forall ((?v0 C_bool_fun_c_bool_fun_bool_fun_fun$ )(?v1 C_bool_fun_c_bool_fun_bool_fun_fun$ ))(rel_fun$h (rel_fun$e ?v0 (rel_fun$g ?v1 uud$ ))(rel_fun$i (fun_app$bd (rel_fun$j uu$ )?v0 )(rel_fun$k (fun_app$bd (rel_fun$j uu$ )?v1 )uud$ ))(rel_fun$j uu$ )(rel_fun$j uu$ ))):named a71 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 C_llist_d_prod_c_d_tllist_bool_fun_fun$ ))(rel_fun$l (rel_fun$m ?v0 (rel_fun$a ?v1 uud$ ))(rel_fun$n (fun_app$bc (rel_fun$f uub$ )?v0 )(rel_fun$o (rel_fun$p uub$ ?v1 )uud$ ))(rel_fun$q uub$ )(rel_fun$r uub$ ))):named a72 ))
(assert (! (forall ((?v0 C_bool_fun_c_bool_fun_bool_fun_fun$ )(?v1 C_llist_d_prod_c_d_tllist_bool_fun_fun$ ))(rel_fun$s (rel_fun$t ?v0 (rel_fun$a ?v1 uud$ ))(rel_fun$u (fun_app$bd (rel_fun$j uu$ )?v0 )(rel_fun$v (rel_fun$w uu$ ?v1 )uud$ ))(rel_fun$x uu$ )(rel_fun$y uu$ ))):named a73 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ ))(rel_fun$z (rel_fun$aa ?v0 (fun_app$bc (rel_fun$f ?v1 )uud$ ))(rel_fun$ab (fun_app$bc (rel_fun$f uub$ )?v0 )(rel_fun$ac (rel_fun$ad uub$ ?v1 )uud$ ))(rel_fun$ae uub$ )(rel_fun$ae uub$ ))):named a74 ))
(assert (! (forall ((?v0 C_bool_fun_c_bool_fun_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ ))(rel_fun$af (rel_fun$ag ?v0 (fun_app$bc (rel_fun$f ?v1 )uud$ ))(rel_fun$ah (fun_app$bd (rel_fun$j uu$ )?v0 )(rel_fun$ai (rel_fun$aj uu$ ?v1 )uud$ ))(rel_fun$ak uu$ )(rel_fun$ak uu$ ))):named a75 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ ))(rel_fun$al (rel_fun$am ?v0 (rel_fun$an ?v1 uud$ ))(rel_fun$ao (fun_app$bc (rel_fun$f uub$ )?v0 )(rel_fun$ap (rel_fun$aq uub$ ?v1 )uud$ ))(rel_fun$ar uub$ )(rel_fun$ae uub$ ))):named a76 ))
(assert (! (forall ((?v0 C_bool_fun_c_bool_fun_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ ))(rel_fun$as (rel_fun$at ?v0 (rel_fun$an ?v1 uud$ ))(rel_fun$au (fun_app$bd (rel_fun$j uu$ )?v0 )(rel_fun$av (rel_fun$aw uu$ ?v1 )uud$ ))(rel_fun$ax uu$ )(rel_fun$ak uu$ ))):named a77 ))
(assert (! (forall ((?v0 C_c_d_tllist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_d_tllist_llist$ ))(=> (and (fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v0 )?v1 )?v2 )(not (fun_app$ab lnull$c ?v2 )))(fun_app$al (fun_app$am ?v0 (lhd$a ?v1 ))(lhd$c ?v2 )))):named a78 ))
(assert (! (forall ((?v0 A_c_llist_d_prod_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist_d_prod_llist$ ))(=> (and (fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v0 )?v1 )?v2 )(not (fun_app$aa lnull$b ?v2 )))(fun_app$v (fun_app$ap ?v0 (lhd$ ?v1 ))(lhd$b ?v2 )))):named a79 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v0 )?v1 )?v2 )(not (fun_app$u lnull$ ?v2 )))(fun_app$p (fun_app$q ?v0 (lhd$ ?v1 ))(lhd$ ?v2 )))):named a80 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 C_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v0 )?v1 )?v2 )(not (fun_app$u lnull$ ?v2 )))(fun_app$p (fun_app$ag ?v0 (lhd$a ?v1 ))(lhd$ ?v2 )))):named a81 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ ))(=> (and (fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v0 )?v1 )?v2 )(not (fun_app$r lnull$a ?v2 )))(fun_app$l (fun_app$m ?v0 (lhd$a ?v1 ))(lhd$a ?v2 )))):named a82 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist$ ))(=> (and (fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v0 )?v1 )?v2 )(not (fun_app$r lnull$a ?v2 )))(fun_app$l (fun_app$x ?v0 (lhd$ ?v1 ))(lhd$a ?v2 )))):named a83 ))
(assert (! (forall ((?v0 C_c_d_tllist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_d_tllist_llist$ ))(=> (and (fun_app$ab (fun_app$aj (fun_app$ak llist_all2$d ?v0 )?v1 )?v2 )(not (fun_app$r lnull$a ?v1 )))(fun_app$al (fun_app$am ?v0 (lhd$a ?v1 ))(lhd$c ?v2 )))):named a84 ))
(assert (! (forall ((?v0 A_c_llist_d_prod_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist_d_prod_llist$ ))(=> (and (fun_app$aa (fun_app$an (fun_app$ao llist_all2$e ?v0 )?v1 )?v2 )(not (fun_app$u lnull$ ?v1 )))(fun_app$v (fun_app$ap ?v0 (lhd$ ?v1 ))(lhd$b ?v2 )))):named a85 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$u (fun_app$ac (fun_app$ad llist_all2$a ?v0 )?v1 )?v2 )(not (fun_app$u lnull$ ?v1 )))(fun_app$p (fun_app$q ?v0 (lhd$ ?v1 ))(lhd$ ?v2 )))):named a86 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 C_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$u (fun_app$ae (fun_app$af llist_all2$b ?v0 )?v1 )?v2 )(not (fun_app$r lnull$a ?v1 )))(fun_app$p (fun_app$ag ?v0 (lhd$a ?v1 ))(lhd$ ?v2 )))):named a87 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ ))(=> (and (fun_app$r (fun_app$ah (fun_app$ai llist_all2$c ?v0 )?v1 )?v2 )(not (fun_app$r lnull$a ?v1 )))(fun_app$l (fun_app$m ?v0 (lhd$a ?v1 ))(lhd$a ?v2 )))):named a88 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist$ ))(=> (and (fun_app$r (fun_app$s (fun_app$t llist_all2$ ?v0 )?v1 )?v2 )(not (fun_app$u lnull$ ?v1 )))(fun_app$l (fun_app$x ?v0 (lhd$ ?v1 ))(lhd$a ?v2 )))):named a89 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_bool_fun$ ))(=> (and (fun_app$u lfinite$ ?v0 )(and (forall ((?v2 A_llist$ ))(=> (fun_app$u lnull$ ?v2 )(fun_app$u ?v1 ?v2 )))(forall ((?v2 A_llist$ ))(=> (and (fun_app$u lfinite$ ?v2 )(and (not (fun_app$u lnull$ ?v2 ))(fun_app$u ?v1 (ltl$ ?v2 ))))(fun_app$u ?v1 ?v2 )))))(fun_app$u ?v1 ?v0 ))):named a90 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist_bool_fun$ ))(=> (and (fun_app$r lfinite$c ?v0 )(and (forall ((?v2 C_llist$ ))(=> (fun_app$r lnull$a ?v2 )(fun_app$r ?v1 ?v2 )))(forall ((?v2 C_llist$ ))(=> (and (fun_app$r lfinite$c ?v2 )(and (not (fun_app$r lnull$a ?v2 ))(fun_app$r ?v1 (ltl$a ?v2 ))))(fun_app$r ?v1 ?v2 )))))(fun_app$r ?v1 ?v0 ))):named a91 ))
(assert (! (forall ((?v0 C_c_d_tllist_bool_fun_fun$ ))(rel_fun$ay (fun_app$ak llist_all2$d ?v0 )(fun_app$ak llist_all2$d ?v0 )uue$ uuf$ )):named a92 ))
(assert (! (forall ((?v0 A_c_llist_d_prod_bool_fun_fun$ ))(rel_fun$az (fun_app$ao llist_all2$e ?v0 )(fun_app$ao llist_all2$e ?v0 )uug$ uuh$ )):named a93 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(rel_fun$ba (fun_app$ad llist_all2$a ?v0 )(fun_app$ad llist_all2$a ?v0 )uug$ uug$ )):named a94 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ ))(rel_fun$bb (fun_app$af llist_all2$b ?v0 )(fun_app$af llist_all2$b ?v0 )uue$ uug$ )):named a95 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(rel_fun$bc (fun_app$ai llist_all2$c ?v0 )(fun_app$ai llist_all2$c ?v0 )uue$ uue$ )):named a96 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(rel_fun$bd (fun_app$t llist_all2$ ?v0 )(fun_app$t llist_all2$ ?v0 )uug$ uue$ )):named a97 ))
(assert (! (forall ((?v0 C_c_d_tllist_bool_fun_fun$ ))(fun_app$be (fun_app$bf (rel_fun$be (fun_app$ak llist_all2$d ?v0 )uud$ )lnull$a )lnull$c )):named a98 ))
(assert (! (forall ((?v0 A_c_llist_d_prod_bool_fun_fun$ ))(fun_app$bg (fun_app$bh (rel_fun$bf (fun_app$ao llist_all2$e ?v0 )uud$ )lnull$ )lnull$b )):named a99 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(fun_app$bi (fun_app$bj (rel_fun$bg (fun_app$ad llist_all2$a ?v0 )uud$ )lnull$ )lnull$ )):named a100 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ ))(fun_app$bi (fun_app$bk (rel_fun$bh (fun_app$af llist_all2$b ?v0 )uud$ )lnull$a )lnull$ )):named a101 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(fun_app$bl (fun_app$bm (rel_fun$bi (fun_app$ai llist_all2$c ?v0 )uud$ )lnull$a )lnull$a )):named a102 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(fun_app$bl (fun_app$bn (rel_fun$bj (fun_app$t llist_all2$ ?v0 )uud$ )lnull$ )lnull$a )):named a103 ))
(assert (! (forall ((?v0 C_c_d_tllist_bool_fun_fun$ ))(fun_app$be (fun_app$bf (rel_fun$be (fun_app$ak llist_all2$d ?v0 )uud$ )lfinite$c )lfinite$b )):named a104 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(fun_app$bl (fun_app$bm (rel_fun$bi (fun_app$ai llist_all2$c ?v0 )uud$ )lfinite$c )lfinite$c )):named a105 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ ))(fun_app$bi (fun_app$bk (rel_fun$bh (fun_app$af llist_all2$b ?v0 )uud$ )lfinite$c )lfinite$ )):named a106 ))
(assert (! (forall ((?v0 A_c_llist_d_prod_bool_fun_fun$ ))(fun_app$bg (fun_app$bh (rel_fun$bf (fun_app$ao llist_all2$e ?v0 )uud$ )lfinite$ )lfinite$a )):named a107 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(fun_app$bi (fun_app$bj (rel_fun$bg (fun_app$ad llist_all2$a ?v0 )uud$ )lfinite$ )lfinite$ )):named a108 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(fun_app$bl (fun_app$bn (rel_fun$bj (fun_app$t llist_all2$ ?v0 )uud$ )lfinite$ )lfinite$c )):named a109 ))
(assert (! (forall ((?v0 C_c_d_tllist_bool_fun_fun$ ))(rel_fun$bk (rel_fun$bl ?v0 (rel_fun$bm ?v0 uud$ ))(rel_fun$bn (fun_app$ak llist_all2$d ?v0 )(rel_fun$be (fun_app$ak llist_all2$d ?v0 )uud$ ))llist_all2$c llist_all2$l )):named a110 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(rel_fun$bo (rel_fun$bp ?v0 (fun_app$bc (rel_fun$f ?v0 )uud$ ))(rel_fun$bq (fun_app$ai llist_all2$c ?v0 )(rel_fun$bi (fun_app$ai llist_all2$c ?v0 )uud$ ))llist_all2$c llist_all2$c )):named a111 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ ))(rel_fun$br (rel_fun$bs ?v0 (rel_fun$bt ?v0 uud$ ))(rel_fun$bu (fun_app$af llist_all2$b ?v0 )(rel_fun$bh (fun_app$af llist_all2$b ?v0 )uud$ ))llist_all2$c llist_all2$a )):named a112 ))
(assert (! (forall ((?v0 A_c_llist_d_prod_bool_fun_fun$ ))(rel_fun$bv (rel_fun$bw ?v0 (rel_fun$bx ?v0 uud$ ))(rel_fun$by (fun_app$ao llist_all2$e ?v0 )(rel_fun$bf (fun_app$ao llist_all2$e ?v0 )uud$ ))llist_all2$a llist_all2$m )):named a113 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(rel_fun$bz (rel_fun$ca ?v0 (rel_fun$cb ?v0 uud$ ))(rel_fun$cc (fun_app$ad llist_all2$a ?v0 )(rel_fun$bg (fun_app$ad llist_all2$a ?v0 )uud$ ))llist_all2$a llist_all2$a )):named a114 ))
(assert (! (forall ((?v0 C_llist_d_prod_c_d_tllist_bool_fun_fun$ ))(rel_fun$cd (rel_fun$ce ?v0 (rel_fun$a ?v0 uud$ ))(rel_fun$cf (llist_all2$n ?v0 )(rel_fun$cg (llist_all2$n ?v0 )uud$ ))llist_all2$m llist_all2$l )):named a115 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ ))(rel_fun$ch (rel_fun$ci ?v0 (rel_fun$an ?v0 uud$ ))(rel_fun$cj (fun_app$t llist_all2$ ?v0 )(rel_fun$bj (fun_app$t llist_all2$ ?v0 )uud$ ))llist_all2$a llist_all2$c )):named a116 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ ))(rel_fun$ck (fun_app$bd (rel_fun$j ?v0 )(fun_app$bc (rel_fun$f ?v1 )uud$ ))(rel_fun$cl (fun_app$ad llist_all2$a ?v0 )(rel_fun$bi (fun_app$ai llist_all2$c ?v1 )uud$ ))llist_all2$ llist_all2$ )):named a117 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ ))(rel_fun$ch (rel_fun$ci ?v0 (rel_fun$an ?v1 uud$ ))(rel_fun$cj (fun_app$t llist_all2$ ?v0 )(rel_fun$bj (fun_app$t llist_all2$ ?v1 )uud$ ))llist_all2$a llist_all2$c )):named a118 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_llist_d_prod_c_d_tllist_bool_fun_fun$ ))(rel_fun$cm (rel_fun$cn ?v0 (rel_fun$a ?v1 uud$ ))(rel_fun$co (fun_app$t llist_all2$ ?v0 )(rel_fun$cg (llist_all2$n ?v1 )uud$ ))llist_all2$e llist_all2$d )):named a119 ))
(assert (! (forall ((?v0 A_llist_b_prod_a_b_tllist_bool_fun_fun$ )(?v1 C_llist_d_prod_c_d_tllist_bool_fun_fun$ ))(rel_fun$cp (rel_fun$ ?v0 (rel_fun$a ?v1 uud$ ))(rel_fun$cq (llist_all2$o ?v0 )(rel_fun$cg (llist_all2$n ?v1 )uud$ ))llist_all2$p llist_all2$q )):named a120 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ ))(rel_fun$cr (rel_fun$cs ?v0 (fun_app$bc (rel_fun$f ?v1 )uud$ ))(rel_fun$ct (fun_app$t llist_all2$ ?v0 )(rel_fun$bi (fun_app$ai llist_all2$c ?v1 )uud$ ))llist_all2$ llist_all2$c )):named a121 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_a_bool_fun_fun$ ))(rel_fun$cu (rel_fun$cv ?v0 (rel_fun$bt ?v1 uud$ ))(rel_fun$cw (fun_app$t llist_all2$ ?v0 )(rel_fun$bh (fun_app$af llist_all2$b ?v1 )uud$ ))llist_all2$ llist_all2$b )):named a122 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ ))(rel_fun$cx (rel_fun$cy ?v0 (rel_fun$cb ?v1 uud$ ))(rel_fun$cz (fun_app$t llist_all2$ ?v0 )(rel_fun$bg (fun_app$ad llist_all2$a ?v1 )uud$ ))llist_all2$a llist_all2$b )):named a123 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ ))(rel_fun$da (rel_fun$db ?v0 (rel_fun$an ?v1 uud$ ))(rel_fun$dc (fun_app$ai llist_all2$c ?v0 )(rel_fun$bj (fun_app$t llist_all2$ ?v1 )uud$ ))llist_all2$b llist_all2$c )):named a124 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ ))(rel_fun$bo (rel_fun$bp ?v0 (fun_app$bc (rel_fun$f ?v1 )uud$ ))(rel_fun$bq (fun_app$ai llist_all2$c ?v0 )(rel_fun$bi (fun_app$ai llist_all2$c ?v1 )uud$ ))llist_all2$c llist_all2$c )):named a125 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_a_bool_fun_fun$ ))(rel_fun$dd (rel_fun$de ?v0 (rel_fun$bt ?v1 uud$ ))(rel_fun$df (fun_app$ai llist_all2$c ?v0 )(rel_fun$bh (fun_app$af llist_all2$b ?v1 )uud$ ))llist_all2$c llist_all2$b )):named a126 ))
(assert (! (= (fun_app$bc (rel_fun$f uub$ )uud$ )uui$ ):named a127 ))
(assert (! (= (fun_app$bd (rel_fun$j uu$ )uui$ )uuj$ ):named a128 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (fun_app$u lnull$ ?v0 )false )(=> (not (fun_app$u lnull$ ?v0 ))false ))false )):named a129 ))
(assert (! (forall ((?v0 C_llist$ ))(=> (and (=> (fun_app$r lnull$a ?v0 )false )(=> (not (fun_app$r lnull$a ?v0 ))false ))false )):named a130 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (fun_app$u lnull$ ?v0 )(fun_app$u lnull$ ?v1 ))false )(=> (or (not (fun_app$u lnull$ ?v0 ))(not (fun_app$u lnull$ ?v1 )))false ))false )):named a131 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ ))(=> (and (=> (and (fun_app$r lnull$a ?v0 )(fun_app$r lnull$a ?v1 ))false )(=> (or (not (fun_app$r lnull$a ?v0 ))(not (fun_app$r lnull$a ?v1 )))false ))false )):named a132 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(fun_app$u lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(fun_app$u lnull$ ?v1 ))))false ))false )):named a133 ))
(assert (! (forall ((?v0 C_llist_set$ ))(=> (and (=> (forall ((?v1 C_llist$ ))(=> (member$a ?v1 ?v0 )(fun_app$r lnull$a ?v1 )))false )(=> (not (forall ((?v1 C_llist$ ))(=> (member$a ?v1 ?v0 )(fun_app$r lnull$a ?v1 ))))false ))false )):named a134 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (fun_app$u lnull$ ?v0 )(fun_app$u lnull$ ?v1 ))false )(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$u lnull$ ?v1 )))false ))false )):named a135 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C_llist$ ))(=> (and (=> (or (fun_app$u lnull$ ?v0 )(fun_app$r lnull$a ?v1 ))false )(=> (and (not (fun_app$u lnull$ ?v0 ))(not (fun_app$r lnull$a ?v1 )))false ))false )):named a136 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (fun_app$r lnull$a ?v0 )(fun_app$u lnull$ ?v1 ))false )(=> (and (not (fun_app$r lnull$a ?v0 ))(not (fun_app$u lnull$ ?v1 )))false ))false )):named a137 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ ))(=> (and (=> (or (fun_app$r lnull$a ?v0 )(fun_app$r lnull$a ?v1 ))false )(=> (and (not (fun_app$r lnull$a ?v0 ))(not (fun_app$r lnull$a ?v1 )))false ))false )):named a138 ))
(check-sat )
;(get-unsat-core )
