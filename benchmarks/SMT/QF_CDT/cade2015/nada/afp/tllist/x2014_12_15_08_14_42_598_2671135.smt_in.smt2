;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort A_b_tllist_bool_fun$ 0 )
(declare-sort A_b_tllist_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_tllist$ 0)
(declare-fun terminal$ (A_b_tllist$)B$)
(declare-fun tNil$ (B$ )A_b_tllist$)
(declare-fun thd$ (A_b_tllist$)A$)
(declare-fun ttl$ (A_b_tllist$)A_b_tllist$)
(declare-fun tCons$ (A$ A_b_tllist$ )A_b_tllist$)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun p$ ()A_a_bool_fun_fun$ )
(declare-fun q$ ()B_b_bool_fun_fun$ )
(declare-fun uu$ ()A_a_bool_fun_fun$ )
(declare-fun xs$ ()A_b_tllist$ )
(declare-fun ys$ ()A_b_tllist$ )
(declare-fun zs$ ()A_b_tllist$ )
(declare-fun uua$ ()B_b_bool_fun_fun$ )
(declare-fun uub$ ()A_b_tllist_a_b_tllist_bool_fun_fun$ )
(declare-fun transp$ (A_a_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (A_b_tllist_bool_fun$ A_b_tllist$ )Bool )
(declare-fun tlength$ (A_b_tllist$ )Enat$ )
(declare-fun transp$a (B_b_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (A_b_tllist_a_b_tllist_bool_fun_fun$ A_b_tllist$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$b (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$c (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$d (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$e (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun tllist_all2$ (A_a_bool_fun_fun$ B_b_bool_fun_fun$ )A_b_tllist_a_b_tllist_bool_fun_fun$ )
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ ))(! (= (fun_app$ (fun_app$a uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$b (fun_app$c uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uua$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$d (fun_app$e uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uu$ ?v0 )?v1 )))):named a2 ))
(assert (! (not (fun_app$ (fun_app$a (tllist_all2$ p$ q$ )xs$ )zs$ )):named a3 ))
(assert (! (fun_app$ (fun_app$a (tllist_all2$ p$ q$ )xs$ )ys$ ):named a4 ))
(assert (! (fun_app$ (fun_app$a (tllist_all2$ p$ q$ )ys$ )zs$ ):named a5 ))
(assert (! (transp$ p$ ):named a6 ))
(assert (! (transp$a q$ ):named a7 ))
(assert (! (= (tllist_all2$ uu$ uua$ )uub$ ):named a8 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_b_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$d (fun_app$e ?v0 ?v6 )?v7 )(fun_app$d (fun_app$e ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 B$ ))(=> (fun_app$b (fun_app$c ?v1 ?v6 )?v7 )(fun_app$b (fun_app$c ?v5 ?v6 )?v7 )))))(fun_app$ (fun_app$a (tllist_all2$ ?v4 ?v5 )?v2 )?v3 ))):named a9 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(= (transp$ ?v0 )(forall ((?v1 A$ )(?v2 A$ )(?v3 A$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$d (fun_app$e ?v0 ?v2 )?v3 ))(fun_app$d (fun_app$e ?v0 ?v1 )?v3 ))))):named a10 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ ))(= (transp$a ?v0 )(forall ((?v1 B$ )(?v2 B$ )(?v3 B$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c ?v0 ?v2 )?v3 ))(fun_app$b (fun_app$c ?v0 ?v1 )?v3 ))))):named a11 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(=> (forall ((?v1 A$ )(?v2 A$ )(?v3 A$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$d (fun_app$e ?v0 ?v2 )?v3 ))(fun_app$d (fun_app$e ?v0 ?v1 )?v3 )))(transp$ ?v0 ))):named a12 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ ))(=> (forall ((?v1 B$ )(?v2 B$ )(?v3 B$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c ?v0 ?v2 )?v3 ))(fun_app$b (fun_app$c ?v0 ?v1 )?v3 )))(transp$a ?v0 ))):named a13 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A$ ))(=> (and (transp$ ?v0 )(and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(and (fun_app$d (fun_app$e ?v0 ?v2 )?v3 )(=> (fun_app$d (fun_app$e ?v0 ?v1 )?v3 )false ))))false )):named a14 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B$ )(?v3 B$ ))(=> (and (transp$a ?v0 )(and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(and (fun_app$b (fun_app$c ?v0 ?v2 )?v3 )(=> (fun_app$b (fun_app$c ?v0 ?v1 )?v3 )false ))))false )):named a15 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A$ ))(=> (and (transp$ ?v0 )(and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$d (fun_app$e ?v0 ?v2 )?v3 )))(fun_app$d (fun_app$e ?v0 ?v1 )?v3 ))):named a16 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B$ )(?v3 B$ ))(=> (and (transp$a ?v0 )(and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c ?v0 ?v2 )?v3 )))(fun_app$b (fun_app$c ?v0 ?v1 )?v3 ))):named a17 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_b_tllist$ ))(=> (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(= (tlength$ ?v2 )(tlength$ ?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A$ )(?v5 A_b_tllist$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$d (fun_app$e ?v0 ?v2 )?v4 )(fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a19 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$b (fun_app$c ?v1 ?v2 )?v3 )):pattern ((fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a20 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A_b_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))?v4 )(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$d (fun_app$e ?v0 ?v2 )?v5 )(fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )?v3 )?v6 )))))):named a21 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A$ )(?v4 A_b_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$d (fun_app$e ?v0 ?v5 )?v3 )(fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )?v6 )?v4 )))))):named a22 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_b_tllist$ )(?v5 A_b_tllist$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v3 )?v4 )?v5 ))(fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v3 )(tCons$ ?v1 ?v4 ))(tCons$ ?v2 ?v5 )))):named a23 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 A_b_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )(tNil$ ?v2 ))?v3 )(exists ((?v4 B$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$b (fun_app$c ?v1 ?v2 )?v4 ))))):named a24 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 B$ ))(= (fun_app$ (fun_app$a (tllist_all2$ ?v0 ?v1 )?v2 )(tNil$ ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$b (fun_app$c ?v1 ?v4 )?v3 ))))):named a25 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A$ )(?v3 A_b_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a27 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (forall ((?v1 B$ ))(=> (= ?v0 (tNil$ ?v1 ))false ))(forall ((?v1 A$ )(?v2 A_b_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))false )))false )):named a28 ))
(check-sat )
;(get-unsat-core )
