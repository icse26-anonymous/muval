;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_a_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_b_tllist_b_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort A_a_tllist_bool_fun$ 0 )
(declare-sort A_b_tllist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort B_a_tllist_bool_fun$ 0 )
(declare-sort B_b_tllist_bool_fun$ 0 )
(declare-sort A_a_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_a_tllist_bool_fun_fun$ 0 )
(declare-sort B_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort B_b_a_tllist_bool_fun_fun$ 0 )
(declare-sort B_b_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_a_tllist_a_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_tllist_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_tllist_b_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_tllist_b_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_tllist_a_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_tllist_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_b_tllist$ 0)
(declare-sort A_llist$ 0)
(declare-sort B_b_tllist$ 0)
(declare-sort B_a_tllist$ 0)
(declare-sort A_a_tllist$ 0)
(declare-fun terminal$ (A_b_tllist$)B$)
(declare-fun tNil$ (B$ )A_b_tllist$)
(declare-fun thd$ (A_b_tllist$)A$)
(declare-fun ttl$ (A_b_tllist$)A_b_tllist$)
(declare-fun tCons$ (A$ A_b_tllist$ )A_b_tllist$)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun terminal$a (B_b_tllist$)B$)
(declare-fun tNil$a (B$ )B_b_tllist$)
(declare-fun thd$a (B_b_tllist$)B$)
(declare-fun ttl$a (B_b_tllist$)B_b_tllist$)
(declare-fun tCons$a (B$ B_b_tllist$ )B_b_tllist$)
(declare-fun terminal$b (B_a_tllist$)A$)
(declare-fun tNil$b (A$ )B_a_tllist$)
(declare-fun thd$b (B_a_tllist$)B$)
(declare-fun ttl$b (B_a_tllist$)B_a_tllist$)
(declare-fun tCons$b (B$ B_a_tllist$ )B_a_tllist$)
(declare-fun terminal$c (A_a_tllist$)A$)
(declare-fun tNil$c (A$ )A_a_tllist$)
(declare-fun thd$c (A_a_tllist$)A$)
(declare-fun ttl$c (A_a_tllist$)A_a_tllist$)
(declare-fun tCons$c (A$ A_a_tllist$ )A_a_tllist$)
(declare-fun b$ ()B$ )
(declare-fun uu$ ()A_llist_a_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun uua$ ()A_llist_a_llist_fun$ )
(declare-fun uub$ (A_llist_set$ )A_llist_bool_fun$ )
(declare-fun uuc$ (A_set$ )A_bool_fun$ )
(declare-fun uud$ (B_set$ )B_bool_fun$ )
(declare-fun uue$ ()A_b_tllist_b_fun$ )
(declare-fun uuf$ ()A_a_bool_fun_fun$ )
(declare-fun uug$ ()A_a_tllist_a_a_tllist_bool_fun_fun$ )
(declare-fun uuh$ ()B_b_bool_fun_fun$ )
(declare-fun uui$ ()A_b_tllist_a_b_tllist_bool_fun_fun$ )
(declare-fun tmap$ (A_a_fun$ B_b_fun$ A_b_tllist$ )A_b_tllist$ )
(declare-fun tset$ (B_b_tllist$ )B_set$ )
(declare-fun lnull$ ()A_llist_bool_fun$ )
(declare-fun tset$a (B_a_tllist$ )B_set$ )
(declare-fun tset$b (A_a_tllist$ )A_set$ )
(declare-fun tset$c (A_b_tllist$ )A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun collect$ (B_bool_fun$ )B_set$ )
(declare-fun fun_app$ (A_b_tllist_b_fun$ A_b_tllist$ )B$ )
(declare-fun is_TNil$ (A_b_tllist$ )Bool )
(declare-fun member$a (B$ B_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun collect$a (A_bool_fun$ )A_set$ )
(declare-fun collect$b (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun fun_app$a (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$b (A_llist_a_fun$ A_llist$ )A$ )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$d (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$e (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$f (A_b_tllist_bool_fun$ A_b_tllist$ )Bool )
(declare-fun fun_app$g (A_b_tllist_a_b_tllist_bool_fun_fun$ A_b_tllist$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$h (A_a_tllist_bool_fun$ A_a_tllist$ )Bool )
(declare-fun fun_app$i (A_a_tllist_a_a_tllist_bool_fun_fun$ A_a_tllist$ )A_a_tllist_bool_fun$ )
(declare-fun fun_app$j (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$k (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$l (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$m (A_llist_a_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ A_llist_a_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$n (A_a_fun$ A$ )A$ )
(declare-fun fun_app$o (B_b_fun$ B$ )B$ )
(declare-fun fun_app$p (B_b_tllist_bool_fun$ B_b_tllist$ )Bool )
(declare-fun fun_app$q (B_b_b_tllist_bool_fun_fun$ B$ )B_b_tllist_bool_fun$ )
(declare-fun fun_app$r (B_a_tllist_bool_fun$ B_a_tllist$ )Bool )
(declare-fun fun_app$s (B_b_a_tllist_bool_fun_fun$ B$ )B_a_tllist_bool_fun$ )
(declare-fun fun_app$t (A_a_a_tllist_bool_fun_fun$ A$ )A_a_tllist_bool_fun$ )
(declare-fun fun_app$u (A_a_b_tllist_bool_fun_fun$ A$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$v (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$w (A_a_tllist_b_b_tllist_bool_fun_fun$ A_a_tllist$ )B_b_tllist_bool_fun$ )
(declare-fun fun_app$x (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$y (A_a_tllist_b_a_tllist_bool_fun_fun$ A_a_tllist$ )B_a_tllist_bool_fun$ )
(declare-fun fun_app$z (A_b_tllist_a_a_tllist_bool_fun_fun$ A_b_tllist$ )A_a_tllist_bool_fun$ )
(declare-fun is_TNil$a (B_b_tllist$ )Bool )
(declare-fun is_TNil$b (B_a_tllist$ )Bool )
(declare-fun is_TNil$c (A_a_tllist$ )Bool )
(declare-fun fun_app$aa (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$ab (A_a_tllist_a_b_tllist_bool_fun_fun$ A_a_tllist$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$ac (A_b_a_tllist_bool_fun_fun$ A$ )B_a_tllist_bool_fun$ )
(declare-fun fun_app$ad (B_a_b_tllist_bool_fun_fun$ B$ )A_b_tllist_bool_fun$ )
(declare-fun terminal0$ ()A_b_tllist_b_fun$ )
(declare-fun pred_tllist$ (A_bool_fun$ B_bool_fun$ A_b_tllist$ )Bool )
(declare-fun set2_tllist$ (B_b_tllist$ )B_set$ )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ A_b_bool_fun_fun$ )A_a_tllist_b_b_tllist_bool_fun_fun$ )
(declare-fun set2_tllist$a (B_a_tllist$ )A_set$ )
(declare-fun set2_tllist$b (A_a_tllist$ )A_set$ )
(declare-fun set2_tllist$c (A_b_tllist$ )B_set$ )
(declare-fun tllist_all2$a (A_b_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_tllist_b_a_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (A_a_bool_fun_fun$ B_a_bool_fun_fun$ )A_b_tllist_a_a_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (A_a_bool_fun_fun$ A_b_bool_fun_fun$ )A_a_tllist_a_b_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$d (A_a_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_tllist_a_a_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$e (A_a_bool_fun_fun$ B_b_bool_fun_fun$ )A_b_tllist_a_b_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$f (B_a_bool_fun_fun$ A_a_bool_fun_fun$ B_a_tllist$ A_a_tllist$ )Bool )
(declare-fun tllist_all2$g (B_a_bool_fun_fun$ B_a_bool_fun_fun$ B_b_tllist$ A_a_tllist$ )Bool )
(declare-fun tllist_all2$h (B_b_bool_fun_fun$ A_a_bool_fun_fun$ B_a_tllist$ B_a_tllist$ )Bool )
(declare-fun tllist_all2$i (B_b_bool_fun_fun$ A_b_bool_fun_fun$ B_a_tllist$ B_b_tllist$ )Bool )
(declare-fun tllist_all2$j (B_b_bool_fun_fun$ B_a_bool_fun_fun$ B_b_tllist$ B_a_tllist$ )Bool )
(declare-fun tllist_all2$k (B_b_bool_fun_fun$ B_b_bool_fun_fun$ B_b_tllist$ B_b_tllist$ )Bool )
(declare-fun unfold_llist$ (A_llist_bool_fun$ )A_llist_a_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ )
(declare-fun llist_of_tllist$ (A_b_tllist$ )A_llist$ )
(declare-fun tllist_of_llist$ (B$ A_llist$ )A_b_tllist$ )
(assert (! (forall ((?v0 A_b_tllist$ ))(! (= (fun_app$ uue$ ?v0 )(terminal$ ?v0 )):pattern ((fun_app$ uue$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$a uua$ ?v0 )(ltl$ ?v0 )):pattern ((fun_app$a uua$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$b uu$ ?v0 )(lhd$ ?v0 )):pattern ((fun_app$b uu$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist$ ))(! (= (fun_app$c (uub$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$c (uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B$ ))(! (= (fun_app$d (uud$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$d (uud$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$e (uuc$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$e (uuc$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ ))(! (= (fun_app$f (fun_app$g uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uui$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_a_tllist$ )(?v1 A_a_tllist$ ))(! (= (fun_app$h (fun_app$i uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uug$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$d (fun_app$j uuh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$j uuh$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$e (fun_app$k uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$e (fun_app$k uuf$ ?v0 )?v1 )))):named a9 ))
(assert (! (not (= (ttl$ (tllist_of_llist$ b$ xs$ ))(tllist_of_llist$ b$ (ltl$ xs$ )))):named a10 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(= (terminal$ (ttl$ ?v0 ))(terminal$ ?v0 ))):named a11 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ ))(= (ttl$ (tmap$ ?v0 ?v1 ?v2 ))(tmap$ ?v0 ?v1 (ttl$ ?v2 )))):named a12 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(=> (member$a ?v0 (tset$ (ttl$a ?v1 )))(member$a ?v0 (tset$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(=> (member$a ?v0 (tset$a (ttl$b ?v1 )))(member$a ?v0 (tset$a ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(=> (member$b ?v0 (tset$b (ttl$c ?v1 )))(member$b ?v0 (tset$b ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(=> (member$b ?v0 (tset$c (ttl$ ?v1 )))(member$b ?v0 (tset$c ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (ttl$ (tCons$ ?v0 ?v1 ))?v1 ):pattern ((tCons$ ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 B$ ))(! (= (ttl$ (tNil$ ?v0 ))(tNil$ ?v0 )):pattern ((tNil$ ?v0 )))):named a18 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (is_TNil$ ?v0 )(is_TNil$ (ttl$ ?v0 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_llist_a_fun$ )(?v3 A_llist_a_llist_fun$ ))(=> (not (fun_app$c ?v0 ?v1 ))(= (ltl$ (fun_app$a (fun_app$l (fun_app$m (unfold_llist$ ?v0 )?v2 )?v3 )?v1 ))(fun_app$a (fun_app$l (fun_app$m (unfold_llist$ ?v0 )?v2 )?v3 )(fun_app$a ?v3 ?v1 ))))):named a20 ))
(assert (! (forall ((?v0 B$ )(?v1 A_llist$ ))(= (thd$ (tllist_of_llist$ ?v0 ?v1 ))(lhd$ ?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(=> (fun_app$c lnull$ ?v0 )(= (terminal$ (tllist_of_llist$ ?v1 ?v0 ))?v1 ))):named a22 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a23 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A$ )(?v3 A_b_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_a_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist$ ))(= (not (fun_app$c lnull$ (fun_app$a (fun_app$l (fun_app$m (unfold_llist$ ?v0 )?v1 )?v2 )?v3 )))(not (fun_app$c ?v0 ?v3 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_a_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist$ ))(= (fun_app$c lnull$ (fun_app$a (fun_app$l (fun_app$m (unfold_llist$ ?v0 )?v1 )?v2 )?v3 ))(fun_app$c ?v0 ?v3 ))):named a26 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ ))(= (is_TNil$ (tmap$ ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a27 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (terminal$ (tCons$ ?v0 ?v1 ))(terminal$ ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_llist$ ))(= (fun_app$a (fun_app$l (fun_app$m (unfold_llist$ lnull$ )uu$ )uua$ )?v0 )?v0 )):named a29 ))
(assert (! (forall ((?v0 B$ )(?v1 A_llist$ ))(= (is_TNil$ (tllist_of_llist$ ?v0 ?v1 ))(fun_app$c lnull$ ?v1 ))):named a30 ))
(assert (! (forall ((?v0 B$ )(?v1 A_llist$ ))(= (not (is_TNil$ (tllist_of_llist$ ?v0 ?v1 )))(not (fun_app$c lnull$ ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (is_TNil$ ?v0 )(= (tNil$ (terminal$ ?v0 ))?v0 ))):named a32 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (thd$ (tmap$ ?v1 ?v2 ?v0 ))(fun_app$n ?v1 (thd$ ?v0 ))))):named a33 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (not (is_TNil$ ?v0 ))(= (tCons$ (thd$ ?v0 )(ttl$ ?v0 ))?v0 ))):named a34 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 A_b_tllist$ ))(! (= (tmap$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))(tCons$ (fun_app$n ?v0 ?v2 )(tmap$ ?v0 ?v1 ?v3 ))):pattern ((tmap$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a35 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ )(?v3 B$ ))(= (= (tmap$ ?v0 ?v1 ?v2 )(tNil$ ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$ ?v4 ))(= (fun_app$o ?v1 ?v4 )?v3 ))))):named a36 ))
(assert (! (forall ((?v0 B$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ )(?v3 A_b_tllist$ ))(= (= (tNil$ ?v0 )(tmap$ ?v1 ?v2 ?v3 ))(exists ((?v4 B$ ))(and (= ?v3 (tNil$ ?v4 ))(= (fun_app$o ?v2 ?v4 )?v0 ))))):named a37 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (tmap$ ?v0 ?v1 (tNil$ ?v2 ))(tNil$ (fun_app$o ?v1 ?v2 ))):pattern ((tmap$ ?v0 ?v1 (tNil$ ?v2 ))))):named a38 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(= (is_TNil$ ?v0 )(exists ((?v1 B$ ))(= ?v0 (tNil$ ?v1 ))))):named a39 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (thd$ (tCons$ ?v0 ?v1 ))?v0 ):pattern ((tCons$ ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 B$ ))(! (= (terminal$ (tNil$ ?v0 ))?v0 ):pattern ((tNil$ ?v0 )))):named a41 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (=> (= ?v0 (tNil$ (terminal$ ?v0 )))false )(=> (= ?v0 (tCons$ (thd$ ?v0 )(ttl$ ?v0 )))false ))false )):named a42 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (and (=> (or (fun_app$c lnull$ ?v0 )(not (fun_app$e ?v1 (lhd$ ?v0 ))))false )(=> (and (not (fun_app$c lnull$ ?v0 ))(fun_app$e ?v1 (lhd$ ?v0 )))false ))false )):named a43 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (fun_app$c lnull$ ?v0 )(fun_app$c lnull$ ?v1 ))false )(=> (and (not (fun_app$c lnull$ ?v0 ))(not (fun_app$c lnull$ ?v1 )))false ))false )):named a44 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(fun_app$c lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(fun_app$c lnull$ ?v1 ))))false ))false )):named a45 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ ))(=> (forall ((?v2 B$ ))(= (fun_app$d ?v0 ?v2 )(fun_app$d ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(=> (forall ((?v2 A$ ))(= (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 )))(= (collect$a ?v0 )(collect$a ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (collect$b (uub$ ?v0 ))?v0 )):named a48 ))
(assert (! (forall ((?v0 A_set$ ))(= (collect$a (uuc$ ?v0 ))?v0 )):named a49 ))
(assert (! (forall ((?v0 B_set$ ))(= (collect$ (uud$ ?v0 ))?v0 )):named a50 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_bool_fun$ ))(= (member$ ?v0 (collect$b ?v1 ))(fun_app$c ?v1 ?v0 ))):named a51 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(= (member$b ?v0 (collect$a ?v1 ))(fun_app$e ?v1 ?v0 ))):named a52 ))
(assert (! (forall ((?v0 B$ )(?v1 B_bool_fun$ ))(= (member$a ?v0 (collect$ ?v1 ))(fun_app$d ?v1 ?v0 ))):named a53 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (fun_app$c lnull$ ?v0 )(fun_app$c lnull$ ?v1 ))false )(=> (or (not (fun_app$c lnull$ ?v0 ))(not (fun_app$c lnull$ ?v1 )))false ))false )):named a54 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (fun_app$c lnull$ ?v0 )false )(=> (not (fun_app$c lnull$ ?v0 ))false ))false )):named a55 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (fun_app$c lnull$ ?v0 )false )(=> (not (fun_app$c lnull$ ?v0 ))false ))false )):named a56 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (=> (is_TNil$ ?v0 )false )(=> (not (is_TNil$ ?v0 ))false ))false )):named a57 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (=> (is_TNil$ ?v0 )false )(=> (not (is_TNil$ ?v0 ))false ))false )):named a58 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (forall ((?v1 B$ ))(=> (= ?v0 (tNil$ ?v1 ))false ))(forall ((?v1 A$ )(?v2 A_b_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))false )))false )):named a59 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (= (fun_app$c lnull$ ?v0 )(fun_app$c lnull$ ?v1 ))(=> (and (not (fun_app$c lnull$ ?v0 ))(not (fun_app$c lnull$ ?v1 )))(and (= (lhd$ ?v0 )(lhd$ ?v1 ))(= (ltl$ ?v0 )(ltl$ ?v1 )))))(= ?v0 ?v1 ))):named a60 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A$ )(?v2 A_b_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))(not (is_TNil$ ?v0 )))):named a61 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 B$ ))(=> (= ?v0 (tNil$ ?v1 ))(is_TNil$ ?v0 ))):named a62 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B_b_b_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$ ?v1 ))(and (forall ((?v3 B$ )(?v4 B_b_tllist$ ))(fun_app$p (fun_app$q ?v2 ?v3 )(tCons$a ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_b_tllist$ )(?v5 B$ ))(=> (and (member$a ?v5 (tset$ ?v4 ))(fun_app$p (fun_app$q ?v2 ?v5 )?v4 ))(fun_app$p (fun_app$q ?v2 ?v5 )(tCons$a ?v3 ?v4 ))))))(fun_app$p (fun_app$q ?v2 ?v0 )?v1 ))):named a63 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B_b_a_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$a ?v1 ))(and (forall ((?v3 B$ )(?v4 B_a_tllist$ ))(fun_app$r (fun_app$s ?v2 ?v3 )(tCons$b ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_a_tllist$ )(?v5 B$ ))(=> (and (member$a ?v5 (tset$a ?v4 ))(fun_app$r (fun_app$s ?v2 ?v5 )?v4 ))(fun_app$r (fun_app$s ?v2 ?v5 )(tCons$b ?v3 ?v4 ))))))(fun_app$r (fun_app$s ?v2 ?v0 )?v1 ))):named a64 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A_a_a_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$b ?v1 ))(and (forall ((?v3 A$ )(?v4 A_a_tllist$ ))(fun_app$h (fun_app$t ?v2 ?v3 )(tCons$c ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_a_tllist$ )(?v5 A$ ))(=> (and (member$b ?v5 (tset$b ?v4 ))(fun_app$h (fun_app$t ?v2 ?v5 )?v4 ))(fun_app$h (fun_app$t ?v2 ?v5 )(tCons$c ?v3 ?v4 ))))))(fun_app$h (fun_app$t ?v2 ?v0 )?v1 ))):named a65 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A_a_b_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$c ?v1 ))(and (forall ((?v3 A$ )(?v4 A_b_tllist$ ))(fun_app$f (fun_app$u ?v2 ?v3 )(tCons$ ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_b_tllist$ )(?v5 A$ ))(=> (and (member$b ?v5 (tset$c ?v4 ))(fun_app$f (fun_app$u ?v2 ?v5 )?v4 ))(fun_app$f (fun_app$u ?v2 ?v5 )(tCons$ ?v3 ?v4 ))))))(fun_app$f (fun_app$u ?v2 ?v0 )?v1 ))):named a66 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(=> (and (member$a ?v0 (tset$ ?v1 ))(and (forall ((?v2 B_b_tllist$ ))(=> (= ?v1 (tCons$a ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_b_tllist$ ))(=> (and (= ?v1 (tCons$a ?v2 ?v3 ))(member$a ?v0 (tset$ ?v3 )))false ))))false )):named a67 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(=> (and (member$a ?v0 (tset$a ?v1 ))(and (forall ((?v2 B_a_tllist$ ))(=> (= ?v1 (tCons$b ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_a_tllist$ ))(=> (and (= ?v1 (tCons$b ?v2 ?v3 ))(member$a ?v0 (tset$a ?v3 )))false ))))false )):named a68 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(=> (and (member$b ?v0 (tset$b ?v1 ))(and (forall ((?v2 A_a_tllist$ ))(=> (= ?v1 (tCons$c ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_a_tllist$ ))(=> (and (= ?v1 (tCons$c ?v2 ?v3 ))(member$b ?v0 (tset$b ?v3 )))false ))))false )):named a69 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(=> (and (member$b ?v0 (tset$c ?v1 ))(and (forall ((?v2 A_b_tllist$ ))(=> (= ?v1 (tCons$ ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_b_tllist$ ))(=> (and (= ?v1 (tCons$ ?v2 ?v3 ))(member$b ?v0 (tset$c ?v3 )))false ))))false )):named a70 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B$ ))(=> (member$a ?v0 (tset$ ?v1 ))(member$a ?v0 (tset$ (tCons$a ?v2 ?v1 ))))):named a71 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B$ ))(=> (member$a ?v0 (tset$a ?v1 ))(member$a ?v0 (tset$a (tCons$b ?v2 ?v1 ))))):named a72 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A$ ))(=> (member$b ?v0 (tset$b ?v1 ))(member$b ?v0 (tset$b (tCons$c ?v2 ?v1 ))))):named a73 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A$ ))(=> (member$b ?v0 (tset$c ?v1 ))(member$b ?v0 (tset$c (tCons$ ?v2 ?v1 ))))):named a74 ))
(assert (! (forall ((?v0 B_b_tllist$ ))(=> (not (is_TNil$a ?v0 ))(member$a (thd$a ?v0 )(tset$ ?v0 )))):named a75 ))
(assert (! (forall ((?v0 B_a_tllist$ ))(=> (not (is_TNil$b ?v0 ))(member$a (thd$b ?v0 )(tset$a ?v0 )))):named a76 ))
(assert (! (forall ((?v0 A_a_tllist$ ))(=> (not (is_TNil$c ?v0 ))(member$b (thd$c ?v0 )(tset$b ?v0 )))):named a77 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (not (is_TNil$ ?v0 ))(member$b (thd$ ?v0 )(tset$c ?v0 )))):named a78 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_llist_a_fun$ )(?v3 A_llist_a_llist_fun$ ))(=> (not (fun_app$c ?v0 ?v1 ))(= (lhd$ (fun_app$a (fun_app$l (fun_app$m (unfold_llist$ ?v0 )?v2 )?v3 )?v1 ))(fun_app$b ?v2 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_llist_a_fun$ )(?v3 A_llist_a_llist_fun$ ))(=> (not (fun_app$c ?v0 ?v1 ))(not (fun_app$c lnull$ (fun_app$a (fun_app$l (fun_app$m (unfold_llist$ ?v0 )?v2 )?v3 )?v1 ))))):named a80 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(! (=> (is_TNil$ ?v0 )(= (tmap$ ?v1 ?v2 ?v0 )(tNil$ (fun_app$o ?v2 (terminal$ ?v0 ))))):pattern ((tmap$ ?v1 ?v2 ?v0 )))):named a81 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(=> (is_TNil$ ?v0 )(= (terminal$ (tmap$ ?v1 ?v2 ?v0 ))(fun_app$o ?v2 (terminal$ ?v0 ))))):named a82 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$c (fun_app$v ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ )(?v4 A_llist$ ))(=> (fun_app$c (fun_app$v ?v0 ?v3 )?v4 )(and (= (fun_app$c lnull$ ?v3 )(fun_app$c lnull$ ?v4 ))(=> (and (not (fun_app$c lnull$ ?v3 ))(not (fun_app$c lnull$ ?v4 )))(and (= (lhd$ ?v3 )(lhd$ ?v4 ))(or (fun_app$c (fun_app$v ?v0 (ltl$ ?v3 ))(ltl$ ?v4 ))(= (ltl$ ?v3 )(ltl$ ?v4 )))))))))(= ?v1 ?v2 ))):named a83 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$c (fun_app$v ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ )(?v4 A_llist$ ))(=> (fun_app$c (fun_app$v ?v0 ?v3 )?v4 )(and (= (fun_app$c lnull$ ?v3 )(fun_app$c lnull$ ?v4 ))(=> (and (not (fun_app$c lnull$ ?v3 ))(not (fun_app$c lnull$ ?v4 )))(and (= (lhd$ ?v3 )(lhd$ ?v4 ))(fun_app$c (fun_app$v ?v0 (ltl$ ?v3 ))(ltl$ ?v4 ))))))))(= ?v1 ?v2 ))):named a84 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_llist_a_fun$ )(?v3 A_llist_a_llist_fun$ ))(=> (fun_app$c ?v0 ?v1 )(fun_app$c lnull$ (fun_app$a (fun_app$l (fun_app$m (unfold_llist$ ?v0 )?v2 )?v3 )?v1 )))):named a85 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 A_b_tllist$ ))(not (= (tNil$ ?v0 )(tCons$ ?v1 ?v2 )))):named a86 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(member$a ?v0 (tset$ (tCons$a ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(member$a ?v0 (tset$a (tCons$b ?v0 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(member$b ?v0 (tset$b (tCons$c ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(member$b ?v0 (tset$c (tCons$ ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(not (is_TNil$ (tCons$ ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 B$ ))(is_TNil$ (tNil$ ?v0 ))):named a92 ))
(assert (! (forall ((?v0 A_b_tllist_a_b_tllist_bool_fun_fun$ )(?v1 A_b_tllist$ )(?v2 A_b_tllist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 A_b_tllist$ )(?v4 A_b_tllist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(and (=> (and (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(= (terminal$ ?v3 )(terminal$ ?v4 )))(=> (and (not (is_TNil$ ?v3 ))(not (is_TNil$ ?v4 )))(and (= (thd$ ?v3 )(thd$ ?v4 ))(fun_app$f (fun_app$g ?v0 (ttl$ ?v3 ))(ttl$ ?v4 )))))))))(= ?v1 ?v2 ))):named a93 ))
(assert (! (forall ((?v0 A_b_tllist_a_b_tllist_bool_fun_fun$ )(?v1 A_b_tllist$ )(?v2 A_b_tllist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 A_b_tllist$ )(?v4 A_b_tllist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(and (=> (and (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(= (terminal$ ?v3 )(terminal$ ?v4 )))(=> (and (not (is_TNil$ ?v3 ))(not (is_TNil$ ?v4 )))(and (= (thd$ ?v3 )(thd$ ?v4 ))(or (fun_app$f (fun_app$g ?v0 (ttl$ ?v3 ))(ttl$ ?v4 ))(= (ttl$ ?v3 )(ttl$ ?v4 ))))))))))(= ?v1 ?v2 ))):named a94 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ ))(=> (and (= (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(and (=> (and (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(= (terminal$ ?v0 )(terminal$ ?v1 )))(=> (and (not (is_TNil$ ?v0 ))(not (is_TNil$ ?v1 )))(and (= (thd$ ?v0 )(thd$ ?v1 ))(= (ttl$ ?v0 )(ttl$ ?v1 ))))))(= ?v0 ?v1 ))):named a95 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B_b_b_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$ ?v1 ))(and (forall ((?v3 B_b_tllist$ ))(=> (not (is_TNil$a ?v3 ))(fun_app$p (fun_app$q ?v2 (thd$a ?v3 ))?v3 )))(forall ((?v3 B_b_tllist$ )(?v4 B$ ))(=> (and (not (is_TNil$a ?v3 ))(and (member$a ?v4 (tset$ (ttl$a ?v3 )))(fun_app$p (fun_app$q ?v2 ?v4 )(ttl$a ?v3 ))))(fun_app$p (fun_app$q ?v2 ?v4 )?v3 )))))(fun_app$p (fun_app$q ?v2 ?v0 )?v1 ))):named a96 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B_b_a_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$a ?v1 ))(and (forall ((?v3 B_a_tllist$ ))(=> (not (is_TNil$b ?v3 ))(fun_app$r (fun_app$s ?v2 (thd$b ?v3 ))?v3 )))(forall ((?v3 B_a_tllist$ )(?v4 B$ ))(=> (and (not (is_TNil$b ?v3 ))(and (member$a ?v4 (tset$a (ttl$b ?v3 )))(fun_app$r (fun_app$s ?v2 ?v4 )(ttl$b ?v3 ))))(fun_app$r (fun_app$s ?v2 ?v4 )?v3 )))))(fun_app$r (fun_app$s ?v2 ?v0 )?v1 ))):named a97 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A_a_a_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$b ?v1 ))(and (forall ((?v3 A_a_tllist$ ))(=> (not (is_TNil$c ?v3 ))(fun_app$h (fun_app$t ?v2 (thd$c ?v3 ))?v3 )))(forall ((?v3 A_a_tllist$ )(?v4 A$ ))(=> (and (not (is_TNil$c ?v3 ))(and (member$b ?v4 (tset$b (ttl$c ?v3 )))(fun_app$h (fun_app$t ?v2 ?v4 )(ttl$c ?v3 ))))(fun_app$h (fun_app$t ?v2 ?v4 )?v3 )))))(fun_app$h (fun_app$t ?v2 ?v0 )?v1 ))):named a98 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A_a_b_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$c ?v1 ))(and (forall ((?v3 A_b_tllist$ ))(=> (not (is_TNil$ ?v3 ))(fun_app$f (fun_app$u ?v2 (thd$ ?v3 ))?v3 )))(forall ((?v3 A_b_tllist$ )(?v4 A$ ))(=> (and (not (is_TNil$ ?v3 ))(and (member$b ?v4 (tset$c (ttl$ ?v3 )))(fun_app$f (fun_app$u ?v2 ?v4 )(ttl$ ?v3 ))))(fun_app$f (fun_app$u ?v2 ?v4 )?v3 )))))(fun_app$f (fun_app$u ?v2 ?v0 )?v1 ))):named a99 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (ttl$ (tmap$ ?v1 ?v2 ?v0 ))(tmap$ ?v1 ?v2 (ttl$ ?v0 ))))):named a100 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(=> (fun_app$c lnull$ ?v0 )(is_TNil$ (tllist_of_llist$ ?v1 ?v0 )))):named a101 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B$ ))(=> (not (fun_app$c lnull$ ?v0 ))(not (is_TNil$ (tllist_of_llist$ ?v1 ?v0 ))))):named a102 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (fun_app$c lnull$ ?v0 )(fun_app$c lnull$ (ltl$ ?v0 )))):named a103 ))
(assert (! (forall ((?v0 B_b_tllist$ )(?v1 B$ ))(=> (and (not (is_TNil$a ?v0 ))(member$a ?v1 (tset$ (ttl$a ?v0 ))))(member$a ?v1 (tset$ ?v0 )))):named a104 ))
(assert (! (forall ((?v0 B_a_tllist$ )(?v1 B$ ))(=> (and (not (is_TNil$b ?v0 ))(member$a ?v1 (tset$a (ttl$b ?v0 ))))(member$a ?v1 (tset$a ?v0 )))):named a105 ))
(assert (! (forall ((?v0 A_a_tllist$ )(?v1 A$ ))(=> (and (not (is_TNil$c ?v0 ))(member$b ?v1 (tset$b (ttl$c ?v0 ))))(member$b ?v1 (tset$b ?v0 )))):named a106 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A$ ))(=> (and (not (is_TNil$ ?v0 ))(member$b ?v1 (tset$c (ttl$ ?v0 ))))(member$b ?v1 (tset$c ?v0 )))):named a107 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(= (not (fun_app$c lnull$ (llist_of_tllist$ ?v0 )))(not (is_TNil$ ?v0 )))):named a108 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(= (fun_app$c lnull$ (llist_of_tllist$ ?v0 ))(is_TNil$ ?v0 ))):named a109 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (terminal$ (tCons$ ?v0 ?v1 ))(fun_app$ terminal0$ ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_b_tllist$ ))(= (fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$c ?v2 )(is_TNil$a ?v3 ))(and (=> (and (is_TNil$c ?v2 )(is_TNil$a ?v3 ))(fun_app$d (fun_app$x ?v1 (terminal$c ?v2 ))(terminal$a ?v3 )))(=> (and (not (is_TNil$c ?v2 ))(not (is_TNil$a ?v3 )))(and (fun_app$d (fun_app$x ?v0 (thd$c ?v2 ))(thd$a ?v3 ))(fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )(ttl$c ?v2 ))(ttl$a ?v3 )))))))):named a111 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_a_tllist$ ))(= (fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$c ?v2 )(is_TNil$b ?v3 ))(and (=> (and (is_TNil$c ?v2 )(is_TNil$b ?v3 ))(fun_app$e (fun_app$k ?v1 (terminal$c ?v2 ))(terminal$b ?v3 )))(=> (and (not (is_TNil$c ?v2 ))(not (is_TNil$b ?v3 )))(and (fun_app$d (fun_app$x ?v0 (thd$c ?v2 ))(thd$b ?v3 ))(fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )(ttl$c ?v2 ))(ttl$b ?v3 )))))))):named a112 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_a_tllist$ ))(= (fun_app$h (fun_app$z (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$ ?v2 )(is_TNil$c ?v3 ))(and (=> (and (is_TNil$ ?v2 )(is_TNil$c ?v3 ))(fun_app$e (fun_app$aa ?v1 (terminal$ ?v2 ))(terminal$c ?v3 )))(=> (and (not (is_TNil$ ?v2 ))(not (is_TNil$c ?v3 )))(and (fun_app$e (fun_app$k ?v0 (thd$ ?v2 ))(thd$c ?v3 ))(fun_app$h (fun_app$z (tllist_all2$b ?v0 ?v1 )(ttl$ ?v2 ))(ttl$c ?v3 )))))))):named a113 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_b_tllist$ ))(= (fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$c ?v2 )(is_TNil$ ?v3 ))(and (=> (and (is_TNil$c ?v2 )(is_TNil$ ?v3 ))(fun_app$d (fun_app$x ?v1 (terminal$c ?v2 ))(terminal$ ?v3 )))(=> (and (not (is_TNil$c ?v2 ))(not (is_TNil$ ?v3 )))(and (fun_app$e (fun_app$k ?v0 (thd$c ?v2 ))(thd$ ?v3 ))(fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )(ttl$c ?v2 ))(ttl$ ?v3 )))))))):named a114 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_a_tllist$ ))(= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$c ?v2 )(is_TNil$c ?v3 ))(and (=> (and (is_TNil$c ?v2 )(is_TNil$c ?v3 ))(fun_app$e (fun_app$k ?v1 (terminal$c ?v2 ))(terminal$c ?v3 )))(=> (and (not (is_TNil$c ?v2 ))(not (is_TNil$c ?v3 )))(and (fun_app$e (fun_app$k ?v0 (thd$c ?v2 ))(thd$c ?v3 ))(fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )(ttl$c ?v2 ))(ttl$c ?v3 )))))))):named a115 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_b_tllist$ )(?v3 A_b_tllist$ ))(= (fun_app$f (fun_app$g (tllist_all2$e ?v0 ?v1 )?v2 )?v3 )(and (= (is_TNil$ ?v2 )(is_TNil$ ?v3 ))(and (=> (and (is_TNil$ ?v2 )(is_TNil$ ?v3 ))(fun_app$d (fun_app$j ?v1 (terminal$ ?v2 ))(terminal$ ?v3 )))(=> (and (not (is_TNil$ ?v2 ))(not (is_TNil$ ?v3 )))(and (fun_app$e (fun_app$k ?v0 (thd$ ?v2 ))(thd$ ?v3 ))(fun_app$f (fun_app$g (tllist_all2$e ?v0 ?v1 )(ttl$ ?v2 ))(ttl$ ?v3 )))))))):named a116 ))
(assert (! (forall ((?v0 A_a_tllist_b_b_tllist_bool_fun_fun$ )(?v1 A_a_tllist$ )(?v2 B_b_tllist$ )(?v3 A_b_bool_fun_fun$ )(?v4 A_b_bool_fun_fun$ ))(=> (and (fun_app$p (fun_app$w ?v0 ?v1 )?v2 )(forall ((?v5 A_a_tllist$ )(?v6 B_b_tllist$ ))(=> (fun_app$p (fun_app$w ?v0 ?v5 )?v6 )(and (= (is_TNil$c ?v5 )(is_TNil$a ?v6 ))(and (=> (and (is_TNil$c ?v5 )(is_TNil$a ?v6 ))(fun_app$d (fun_app$x ?v3 (terminal$c ?v5 ))(terminal$a ?v6 )))(=> (and (not (is_TNil$c ?v5 ))(not (is_TNil$a ?v6 )))(and (fun_app$d (fun_app$x ?v4 (thd$c ?v5 ))(thd$a ?v6 ))(fun_app$p (fun_app$w ?v0 (ttl$c ?v5 ))(ttl$a ?v6 )))))))))(fun_app$p (fun_app$w (tllist_all2$ ?v4 ?v3 )?v1 )?v2 ))):named a117 ))
(assert (! (forall ((?v0 A_a_tllist_b_a_tllist_bool_fun_fun$ )(?v1 A_a_tllist$ )(?v2 B_a_tllist$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_b_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$y ?v0 ?v1 )?v2 )(forall ((?v5 A_a_tllist$ )(?v6 B_a_tllist$ ))(=> (fun_app$r (fun_app$y ?v0 ?v5 )?v6 )(and (= (is_TNil$c ?v5 )(is_TNil$b ?v6 ))(and (=> (and (is_TNil$c ?v5 )(is_TNil$b ?v6 ))(fun_app$e (fun_app$k ?v3 (terminal$c ?v5 ))(terminal$b ?v6 )))(=> (and (not (is_TNil$c ?v5 ))(not (is_TNil$b ?v6 )))(and (fun_app$d (fun_app$x ?v4 (thd$c ?v5 ))(thd$b ?v6 ))(fun_app$r (fun_app$y ?v0 (ttl$c ?v5 ))(ttl$b ?v6 )))))))))(fun_app$r (fun_app$y (tllist_all2$a ?v4 ?v3 )?v1 )?v2 ))):named a118 ))
(assert (! (forall ((?v0 A_b_tllist_a_a_tllist_bool_fun_fun$ )(?v1 A_b_tllist$ )(?v2 A_a_tllist$ )(?v3 B_a_bool_fun_fun$ )(?v4 A_a_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$z ?v0 ?v1 )?v2 )(forall ((?v5 A_b_tllist$ )(?v6 A_a_tllist$ ))(=> (fun_app$h (fun_app$z ?v0 ?v5 )?v6 )(and (= (is_TNil$ ?v5 )(is_TNil$c ?v6 ))(and (=> (and (is_TNil$ ?v5 )(is_TNil$c ?v6 ))(fun_app$e (fun_app$aa ?v3 (terminal$ ?v5 ))(terminal$c ?v6 )))(=> (and (not (is_TNil$ ?v5 ))(not (is_TNil$c ?v6 )))(and (fun_app$e (fun_app$k ?v4 (thd$ ?v5 ))(thd$c ?v6 ))(fun_app$h (fun_app$z ?v0 (ttl$ ?v5 ))(ttl$c ?v6 )))))))))(fun_app$h (fun_app$z (tllist_all2$b ?v4 ?v3 )?v1 )?v2 ))):named a119 ))
(assert (! (forall ((?v0 A_a_tllist_a_b_tllist_bool_fun_fun$ )(?v1 A_a_tllist$ )(?v2 A_b_tllist$ )(?v3 A_b_bool_fun_fun$ )(?v4 A_a_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$ab ?v0 ?v1 )?v2 )(forall ((?v5 A_a_tllist$ )(?v6 A_b_tllist$ ))(=> (fun_app$f (fun_app$ab ?v0 ?v5 )?v6 )(and (= (is_TNil$c ?v5 )(is_TNil$ ?v6 ))(and (=> (and (is_TNil$c ?v5 )(is_TNil$ ?v6 ))(fun_app$d (fun_app$x ?v3 (terminal$c ?v5 ))(terminal$ ?v6 )))(=> (and (not (is_TNil$c ?v5 ))(not (is_TNil$ ?v6 )))(and (fun_app$e (fun_app$k ?v4 (thd$c ?v5 ))(thd$ ?v6 ))(fun_app$f (fun_app$ab ?v0 (ttl$c ?v5 ))(ttl$ ?v6 )))))))))(fun_app$f (fun_app$ab (tllist_all2$c ?v4 ?v3 )?v1 )?v2 ))):named a120 ))
(assert (! (forall ((?v0 A_a_tllist_a_a_tllist_bool_fun_fun$ )(?v1 A_a_tllist$ )(?v2 A_a_tllist$ )(?v3 A_a_bool_fun_fun$ )(?v4 A_a_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(forall ((?v5 A_a_tllist$ )(?v6 A_a_tllist$ ))(=> (fun_app$h (fun_app$i ?v0 ?v5 )?v6 )(and (= (is_TNil$c ?v5 )(is_TNil$c ?v6 ))(and (=> (and (is_TNil$c ?v5 )(is_TNil$c ?v6 ))(fun_app$e (fun_app$k ?v3 (terminal$c ?v5 ))(terminal$c ?v6 )))(=> (and (not (is_TNil$c ?v5 ))(not (is_TNil$c ?v6 )))(and (fun_app$e (fun_app$k ?v4 (thd$c ?v5 ))(thd$c ?v6 ))(fun_app$h (fun_app$i ?v0 (ttl$c ?v5 ))(ttl$c ?v6 )))))))))(fun_app$h (fun_app$i (tllist_all2$d ?v4 ?v3 )?v1 )?v2 ))):named a121 ))
(assert (! (forall ((?v0 A_b_tllist_a_b_tllist_bool_fun_fun$ )(?v1 A_b_tllist$ )(?v2 A_b_tllist$ )(?v3 B_b_bool_fun_fun$ )(?v4 A_a_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v5 A_b_tllist$ )(?v6 A_b_tllist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v5 )?v6 )(and (= (is_TNil$ ?v5 )(is_TNil$ ?v6 ))(and (=> (and (is_TNil$ ?v5 )(is_TNil$ ?v6 ))(fun_app$d (fun_app$j ?v3 (terminal$ ?v5 ))(terminal$ ?v6 )))(=> (and (not (is_TNil$ ?v5 ))(not (is_TNil$ ?v6 )))(and (fun_app$e (fun_app$k ?v4 (thd$ ?v5 ))(thd$ ?v6 ))(fun_app$f (fun_app$g ?v0 (ttl$ ?v5 ))(ttl$ ?v6 )))))))))(fun_app$f (fun_app$g (tllist_all2$e ?v4 ?v3 )?v1 )?v2 ))):named a122 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B_b_b_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (set2_tllist$ ?v1 ))(and (forall ((?v3 B_b_tllist$ ))(=> (is_TNil$a ?v3 )(fun_app$p (fun_app$q ?v2 (terminal$a ?v3 ))?v3 )))(forall ((?v3 B_b_tllist$ )(?v4 B$ ))(=> (and (not (is_TNil$a ?v3 ))(and (member$a ?v4 (set2_tllist$ (ttl$a ?v3 )))(fun_app$p (fun_app$q ?v2 ?v4 )(ttl$a ?v3 ))))(fun_app$p (fun_app$q ?v2 ?v4 )?v3 )))))(fun_app$p (fun_app$q ?v2 ?v0 )?v1 ))):named a123 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_tllist$ )(?v2 A_b_a_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (set2_tllist$a ?v1 ))(and (forall ((?v3 B_a_tllist$ ))(=> (is_TNil$b ?v3 )(fun_app$r (fun_app$ac ?v2 (terminal$b ?v3 ))?v3 )))(forall ((?v3 B_a_tllist$ )(?v4 A$ ))(=> (and (not (is_TNil$b ?v3 ))(and (member$b ?v4 (set2_tllist$a (ttl$b ?v3 )))(fun_app$r (fun_app$ac ?v2 ?v4 )(ttl$b ?v3 ))))(fun_app$r (fun_app$ac ?v2 ?v4 )?v3 )))))(fun_app$r (fun_app$ac ?v2 ?v0 )?v1 ))):named a124 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A_a_a_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (set2_tllist$b ?v1 ))(and (forall ((?v3 A_a_tllist$ ))(=> (is_TNil$c ?v3 )(fun_app$h (fun_app$t ?v2 (terminal$c ?v3 ))?v3 )))(forall ((?v3 A_a_tllist$ )(?v4 A$ ))(=> (and (not (is_TNil$c ?v3 ))(and (member$b ?v4 (set2_tllist$b (ttl$c ?v3 )))(fun_app$h (fun_app$t ?v2 ?v4 )(ttl$c ?v3 ))))(fun_app$h (fun_app$t ?v2 ?v4 )?v3 )))))(fun_app$h (fun_app$t ?v2 ?v0 )?v1 ))):named a125 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_tllist$ )(?v2 B_a_b_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (set2_tllist$c ?v1 ))(and (forall ((?v3 A_b_tllist$ ))(=> (is_TNil$ ?v3 )(fun_app$f (fun_app$ad ?v2 (terminal$ ?v3 ))?v3 )))(forall ((?v3 A_b_tllist$ )(?v4 B$ ))(=> (and (not (is_TNil$ ?v3 ))(and (member$a ?v4 (set2_tllist$c (ttl$ ?v3 )))(fun_app$f (fun_app$ad ?v2 ?v4 )(ttl$ ?v3 ))))(fun_app$f (fun_app$ad ?v2 ?v4 )?v3 )))))(fun_app$f (fun_app$ad ?v2 ?v0 )?v1 ))):named a126 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 A$ )(?v3 A_b_tllist$ ))(! (= (pred_tllist$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))(and (fun_app$e ?v0 ?v2 )(pred_tllist$ ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a127 ))
(assert (! (= terminal0$ uue$ ):named a128 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )(tNil$c ?v2 ))(tNil$a ?v3 ))(fun_app$d (fun_app$x ?v1 ?v2 )?v3 )):pattern ((fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )(tNil$c ?v2 ))(tNil$a ?v3 ))))):named a129 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )(tNil$c ?v2 ))(tNil$b ?v3 ))(fun_app$e (fun_app$k ?v1 ?v2 )?v3 )):pattern ((fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )(tNil$c ?v2 ))(tNil$b ?v3 ))))):named a130 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$h (fun_app$z (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$c ?v3 ))(fun_app$e (fun_app$aa ?v1 ?v2 )?v3 )):pattern ((fun_app$h (fun_app$z (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$c ?v3 ))))):named a131 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )(tNil$c ?v2 ))(tNil$ ?v3 ))(fun_app$d (fun_app$x ?v1 ?v2 )?v3 )):pattern ((fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )(tNil$c ?v2 ))(tNil$ ?v3 ))))):named a132 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )(tNil$c ?v2 ))(tNil$c ?v3 ))(fun_app$e (fun_app$k ?v1 ?v2 )?v3 )):pattern ((fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )(tNil$c ?v2 ))(tNil$c ?v3 ))))):named a133 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$f (fun_app$g (tllist_all2$e ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$d (fun_app$j ?v1 ?v2 )?v3 )):pattern ((fun_app$f (fun_app$g (tllist_all2$e ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a134 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 B$ )(?v5 B_b_tllist$ ))(! (= (fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$d (fun_app$x ?v0 ?v2 )?v4 )(fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a135 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 B$ )(?v5 B_a_tllist$ ))(! (= (fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$b ?v4 ?v5 ))(and (fun_app$d (fun_app$x ?v0 ?v2 )?v4 )(fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$b ?v4 ?v5 ))))):named a136 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A$ )(?v5 A_a_tllist$ ))(! (= (fun_app$h (fun_app$z (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$c ?v4 ?v5 ))(and (fun_app$e (fun_app$k ?v0 ?v2 )?v4 )(fun_app$h (fun_app$z (tllist_all2$b ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$h (fun_app$z (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$c ?v4 ?v5 ))))):named a137 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 A$ )(?v5 A_b_tllist$ ))(! (= (fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$e (fun_app$k ?v0 ?v2 )?v4 )(fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a138 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A_a_tllist$ )(?v4 A$ )(?v5 A_a_tllist$ ))(! (= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$c ?v4 ?v5 ))(and (fun_app$e (fun_app$k ?v0 ?v2 )?v4 )(fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )(tCons$c ?v2 ?v3 ))(tCons$c ?v4 ?v5 ))))):named a139 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A$ )(?v3 A_b_tllist$ )(?v4 A$ )(?v5 A_b_tllist$ ))(! (= (fun_app$f (fun_app$g (tllist_all2$e ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$e (fun_app$k ?v0 ?v2 )?v4 )(fun_app$f (fun_app$g (tllist_all2$e ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$f (fun_app$g (tllist_all2$e ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a140 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B$ ))(! (= (pred_tllist$ ?v0 ?v1 (tNil$ ?v2 ))(fun_app$d ?v1 ?v2 )):pattern ((pred_tllist$ ?v0 ?v1 (tNil$ ?v2 ))))):named a141 ))
(assert (! (= (tllist_all2$d uuf$ uuf$ )uug$ ):named a142 ))
(assert (! (= (tllist_all2$e uuf$ uuh$ )uui$ ):named a143 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_a_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 A_a_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (tset$b ?v2 ))(and (member$b ?v7 (tset$b ?v3 ))(fun_app$e (fun_app$k ?v0 ?v6 )?v7 )))(fun_app$e (fun_app$k ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (set2_tllist$b ?v2 ))(and (member$b ?v7 (set2_tllist$b ?v3 ))(fun_app$e (fun_app$k ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$k ?v5 ?v6 )?v7 )))))(fun_app$h (fun_app$i (tllist_all2$d ?v4 ?v5 )?v2 )?v3 ))):named a144 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_a_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 A_a_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$y (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (tset$b ?v2 ))(and (member$a ?v7 (tset$a ?v3 ))(fun_app$d (fun_app$x ?v0 ?v6 )?v7 )))(fun_app$d (fun_app$x ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (set2_tllist$b ?v2 ))(and (member$b ?v7 (set2_tllist$a ?v3 ))(fun_app$e (fun_app$k ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$k ?v5 ?v6 )?v7 )))))(fun_app$r (fun_app$y (tllist_all2$a ?v4 ?v5 )?v2 )?v3 ))):named a145 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_b_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 A_b_bool_fun_fun$ ))(=> (and (fun_app$p (fun_app$w (tllist_all2$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (tset$b ?v2 ))(and (member$a ?v7 (tset$ ?v3 ))(fun_app$d (fun_app$x ?v0 ?v6 )?v7 )))(fun_app$d (fun_app$x ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (set2_tllist$b ?v2 ))(and (member$a ?v7 (set2_tllist$ ?v3 ))(fun_app$d (fun_app$x ?v1 ?v6 )?v7 )))(fun_app$d (fun_app$x ?v5 ?v6 )?v7 )))))(fun_app$p (fun_app$w (tllist_all2$ ?v4 ?v5 )?v2 )?v3 ))):named a146 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_a_tllist$ )(?v3 A_a_tllist$ )(?v4 B_a_bool_fun_fun$ )(?v5 A_a_bool_fun_fun$ ))(=> (and (tllist_all2$f ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 A$ ))(=> (and (member$a ?v6 (tset$a ?v2 ))(and (member$b ?v7 (tset$b ?v3 ))(fun_app$e (fun_app$aa ?v0 ?v6 )?v7 )))(fun_app$e (fun_app$aa ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (set2_tllist$a ?v2 ))(and (member$b ?v7 (set2_tllist$b ?v3 ))(fun_app$e (fun_app$k ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$k ?v5 ?v6 )?v7 )))))(tllist_all2$f ?v4 ?v5 ?v2 ?v3 ))):named a147 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B_b_tllist$ )(?v3 A_a_tllist$ )(?v4 B_a_bool_fun_fun$ )(?v5 B_a_bool_fun_fun$ ))(=> (and (tllist_all2$g ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 A$ ))(=> (and (member$a ?v6 (tset$ ?v2 ))(and (member$b ?v7 (tset$b ?v3 ))(fun_app$e (fun_app$aa ?v0 ?v6 )?v7 )))(fun_app$e (fun_app$aa ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 A$ ))(=> (and (member$a ?v6 (set2_tllist$ ?v2 ))(and (member$b ?v7 (set2_tllist$b ?v3 ))(fun_app$e (fun_app$aa ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$aa ?v5 ?v6 )?v7 )))))(tllist_all2$g ?v4 ?v5 ?v2 ?v3 ))):named a148 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_a_tllist$ )(?v3 B_a_tllist$ )(?v4 B_b_bool_fun_fun$ )(?v5 A_a_bool_fun_fun$ ))(=> (and (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$a ?v6 (tset$a ?v2 ))(and (member$a ?v7 (tset$a ?v3 ))(fun_app$d (fun_app$j ?v0 ?v6 )?v7 )))(fun_app$d (fun_app$j ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (set2_tllist$a ?v2 ))(and (member$b ?v7 (set2_tllist$a ?v3 ))(fun_app$e (fun_app$k ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$k ?v5 ?v6 )?v7 )))))(tllist_all2$h ?v4 ?v5 ?v2 ?v3 ))):named a149 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 B_a_tllist$ )(?v3 B_b_tllist$ )(?v4 B_b_bool_fun_fun$ )(?v5 A_b_bool_fun_fun$ ))(=> (and (tllist_all2$i ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$a ?v6 (tset$a ?v2 ))(and (member$a ?v7 (tset$ ?v3 ))(fun_app$d (fun_app$j ?v0 ?v6 )?v7 )))(fun_app$d (fun_app$j ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (set2_tllist$a ?v2 ))(and (member$a ?v7 (set2_tllist$ ?v3 ))(fun_app$d (fun_app$x ?v1 ?v6 )?v7 )))(fun_app$d (fun_app$x ?v5 ?v6 )?v7 )))))(tllist_all2$i ?v4 ?v5 ?v2 ?v3 ))):named a150 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B_b_tllist$ )(?v3 B_a_tllist$ )(?v4 B_b_bool_fun_fun$ )(?v5 B_a_bool_fun_fun$ ))(=> (and (tllist_all2$j ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$a ?v6 (tset$ ?v2 ))(and (member$a ?v7 (tset$a ?v3 ))(fun_app$d (fun_app$j ?v0 ?v6 )?v7 )))(fun_app$d (fun_app$j ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 A$ ))(=> (and (member$a ?v6 (set2_tllist$ ?v2 ))(and (member$b ?v7 (set2_tllist$a ?v3 ))(fun_app$e (fun_app$aa ?v1 ?v6 )?v7 )))(fun_app$e (fun_app$aa ?v5 ?v6 )?v7 )))))(tllist_all2$j ?v4 ?v5 ?v2 ?v3 ))):named a151 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_b_tllist$ )(?v3 B_b_tllist$ )(?v4 B_b_bool_fun_fun$ )(?v5 B_b_bool_fun_fun$ ))(=> (and (tllist_all2$k ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$a ?v6 (tset$ ?v2 ))(and (member$a ?v7 (tset$ ?v3 ))(fun_app$d (fun_app$j ?v0 ?v6 )?v7 )))(fun_app$d (fun_app$j ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$a ?v6 (set2_tllist$ ?v2 ))(and (member$a ?v7 (set2_tllist$ ?v3 ))(fun_app$d (fun_app$j ?v1 ?v6 )?v7 )))(fun_app$d (fun_app$j ?v5 ?v6 )?v7 )))))(tllist_all2$k ?v4 ?v5 ?v2 ?v3 ))):named a152 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 A_b_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 A_b_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$ab (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (tset$b ?v2 ))(and (member$b ?v7 (tset$c ?v3 ))(fun_app$e (fun_app$k ?v0 ?v6 )?v7 )))(fun_app$e (fun_app$k ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (set2_tllist$b ?v2 ))(and (member$a ?v7 (set2_tllist$c ?v3 ))(fun_app$d (fun_app$x ?v1 ?v6 )?v7 )))(fun_app$d (fun_app$x ?v5 ?v6 )?v7 )))))(fun_app$f (fun_app$ab (tllist_all2$c ?v4 ?v5 )?v2 )?v3 ))):named a153 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_bool_fun_fun$ ))(=> (fun_app$d (fun_app$x ?v0 ?v1 )?v2 )(fun_app$p (fun_app$w (tllist_all2$ ?v3 ?v0 )(tNil$c ?v1 ))(tNil$a ?v2 )))):named a154 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_b_bool_fun_fun$ ))(=> (fun_app$e (fun_app$k ?v0 ?v1 )?v2 )(fun_app$r (fun_app$y (tllist_all2$a ?v3 ?v0 )(tNil$c ?v1 ))(tNil$b ?v2 )))):named a155 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 A$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$e (fun_app$aa ?v0 ?v1 )?v2 )(fun_app$h (fun_app$z (tllist_all2$b ?v3 ?v0 )(tNil$ ?v1 ))(tNil$c ?v2 )))):named a156 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 B$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$d (fun_app$x ?v0 ?v1 )?v2 )(fun_app$f (fun_app$ab (tllist_all2$c ?v3 ?v0 )(tNil$c ?v1 ))(tNil$ ?v2 )))):named a157 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$e (fun_app$k ?v0 ?v1 )?v2 )(fun_app$h (fun_app$i (tllist_all2$d ?v3 ?v0 )(tNil$c ?v1 ))(tNil$c ?v2 )))):named a158 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$d (fun_app$j ?v0 ?v1 )?v2 )(fun_app$f (fun_app$g (tllist_all2$e ?v3 ?v0 )(tNil$ ?v1 ))(tNil$ ?v2 )))):named a159 ))
(check-sat )
;(get-unsat-core )
