;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort B_a_tllist_a_fun$ 0 )
(declare-sort A_a_tllist_bool_fun$ 0 )
(declare-sort A_b_tllist_bool_fun$ 0 )
(declare-sort B_a_tllist_bool_fun$ 0 )
(declare-sort B_b_tllist_bool_fun$ 0 )
(declare-sort A_a_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort B_b_a_tllist_bool_fun_fun$ 0 )
(declare-sort B_b_b_tllist_bool_fun_fun$ 0 )
(declare-sort B_a_tllist$ 0)
(declare-sort A_a_tllist$ 0)
(declare-sort A_b_tllist$ 0)
(declare-sort B_b_tllist$ 0)
(declare-fun terminal$ (B_a_tllist$)A$)
(declare-fun tNil$ (A$ )B_a_tllist$)
(declare-fun thd$ (B_a_tllist$)B$)
(declare-fun ttl$ (B_a_tllist$)B_a_tllist$)
(declare-fun tCons$ (B$ B_a_tllist$ )B_a_tllist$)
(declare-fun terminal$a (A_a_tllist$)A$)
(declare-fun tNil$a (A$ )A_a_tllist$)
(declare-fun thd$a (A_a_tllist$)A$)
(declare-fun ttl$a (A_a_tllist$)A_a_tllist$)
(declare-fun tCons$a (A$ A_a_tllist$ )A_a_tllist$)
(declare-fun terminal$b (A_b_tllist$)B$)
(declare-fun tNil$b (B$ )A_b_tllist$)
(declare-fun thd$b (A_b_tllist$)A$)
(declare-fun ttl$b (A_b_tllist$)A_b_tllist$)
(declare-fun tCons$b (A$ A_b_tllist$ )A_b_tllist$)
(declare-fun terminal$c (B_b_tllist$)B$)
(declare-fun tNil$c (B$ )B_b_tllist$)
(declare-fun thd$c (B_b_tllist$)B$)
(declare-fun ttl$c (B_b_tllist$)B_b_tllist$)
(declare-fun tCons$c (B$ B_b_tllist$ )B_b_tllist$)
(declare-fun x$ ()B$ )
(declare-fun uu$ ()B_a_tllist_a_fun$ )
(declare-fun xs$ ()B_a_tllist$ )
(declare-fun tset$ (A_a_tllist$ )A_set$ )
(declare-fun tset$a (A_b_tllist$ )A_set$ )
(declare-fun tset$b (B_b_tllist$ )B_set$ )
(declare-fun tset$c (B_a_tllist$ )B_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (B_a_tllist_a_fun$ B_a_tllist$ )A$ )
(declare-fun member$a (B$ B_set$ )Bool )
(declare-fun fun_app$a (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$b (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$c (A_a_tllist_bool_fun$ A_a_tllist$ )Bool )
(declare-fun fun_app$d (A_a_a_tllist_bool_fun_fun$ A$ )A_a_tllist_bool_fun$ )
(declare-fun fun_app$e (A_b_tllist_bool_fun$ A_b_tllist$ )Bool )
(declare-fun fun_app$f (A_a_b_tllist_bool_fun_fun$ A$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$g (B_b_tllist_bool_fun$ B_b_tllist$ )Bool )
(declare-fun fun_app$h (B_b_b_tllist_bool_fun_fun$ B$ )B_b_tllist_bool_fun$ )
(declare-fun fun_app$i (B_a_tllist_bool_fun$ B_a_tllist$ )Bool )
(declare-fun fun_app$j (B_b_a_tllist_bool_fun_fun$ B$ )B_a_tllist_bool_fun$ )
(declare-fun terminal0$ ()B_a_tllist_a_fun$ )
(declare-fun pred_tllist$ (A_bool_fun$ A_bool_fun$ A_a_tllist$ )Bool )
(declare-fun set2_tllist$ (A_a_tllist$ )A_set$ )
(declare-fun pred_tllist$a (A_bool_fun$ B_bool_fun$ A_b_tllist$ )Bool )
(declare-fun pred_tllist$b (B_bool_fun$ B_bool_fun$ B_b_tllist$ )Bool )
(declare-fun pred_tllist$c (B_bool_fun$ A_bool_fun$ B_a_tllist$ )Bool )
(declare-fun set2_tllist$a (A_b_tllist$ )B_set$ )
(declare-fun set2_tllist$b (B_b_tllist$ )B_set$ )
(declare-fun set2_tllist$c (B_a_tllist$ )A_set$ )
(assert (! (forall ((?v0 B_a_tllist$ ))(! (= (fun_app$ uu$ ?v0 )(terminal$ ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (not (= (terminal$ (tCons$ x$ xs$ ))(terminal$ xs$ ))):named a1 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B$ )(?v3 B_a_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a2 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(! (= (terminal$ (tCons$ ?v0 ?v1 ))(fun_app$ terminal0$ ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a3 ))
(assert (! (= terminal0$ uu$ ):named a4 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_a_tllist$ ))(! (= (pred_tllist$ ?v0 ?v1 (tCons$a ?v2 ?v3 ))(and (fun_app$a ?v0 ?v2 )(pred_tllist$ ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$ ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a5 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 A$ )(?v3 A_b_tllist$ ))(! (= (pred_tllist$a ?v0 ?v1 (tCons$b ?v2 ?v3 ))(and (fun_app$a ?v0 ?v2 )(pred_tllist$a ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$a ?v0 ?v1 (tCons$b ?v2 ?v3 ))))):named a6 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B$ )(?v3 B_b_tllist$ ))(! (= (pred_tllist$b ?v0 ?v1 (tCons$c ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(pred_tllist$b ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$b ?v0 ?v1 (tCons$c ?v2 ?v3 ))))):named a7 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B$ )(?v3 B_a_tllist$ ))(! (= (pred_tllist$c ?v0 ?v1 (tCons$ ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(pred_tllist$c ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$c ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a8 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(! (= (thd$ (tCons$ ?v0 ?v1 ))?v0 ):pattern ((tCons$ ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(! (= (set2_tllist$ (tCons$a ?v0 ?v1 ))(set2_tllist$ ?v1 )):pattern ((tCons$a ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (set2_tllist$a (tCons$b ?v0 ?v1 ))(set2_tllist$a ?v1 )):pattern ((tCons$b ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(! (= (set2_tllist$b (tCons$c ?v0 ?v1 ))(set2_tllist$b ?v1 )):pattern ((tCons$c ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(! (= (set2_tllist$c (tCons$ ?v0 ?v1 ))(set2_tllist$c ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A_a_a_tllist_bool_fun_fun$ ))(=> (and (member$ ?v0 (tset$ ?v1 ))(and (forall ((?v3 A$ )(?v4 A_a_tllist$ ))(fun_app$c (fun_app$d ?v2 ?v3 )(tCons$a ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_a_tllist$ )(?v5 A$ ))(=> (and (member$ ?v5 (tset$ ?v4 ))(fun_app$c (fun_app$d ?v2 ?v5 )?v4 ))(fun_app$c (fun_app$d ?v2 ?v5 )(tCons$a ?v3 ?v4 ))))))(fun_app$c (fun_app$d ?v2 ?v0 )?v1 ))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A_a_b_tllist_bool_fun_fun$ ))(=> (and (member$ ?v0 (tset$a ?v1 ))(and (forall ((?v3 A$ )(?v4 A_b_tllist$ ))(fun_app$e (fun_app$f ?v2 ?v3 )(tCons$b ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_b_tllist$ )(?v5 A$ ))(=> (and (member$ ?v5 (tset$a ?v4 ))(fun_app$e (fun_app$f ?v2 ?v5 )?v4 ))(fun_app$e (fun_app$f ?v2 ?v5 )(tCons$b ?v3 ?v4 ))))))(fun_app$e (fun_app$f ?v2 ?v0 )?v1 ))):named a15 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B_b_b_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$b ?v1 ))(and (forall ((?v3 B$ )(?v4 B_b_tllist$ ))(fun_app$g (fun_app$h ?v2 ?v3 )(tCons$c ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_b_tllist$ )(?v5 B$ ))(=> (and (member$a ?v5 (tset$b ?v4 ))(fun_app$g (fun_app$h ?v2 ?v5 )?v4 ))(fun_app$g (fun_app$h ?v2 ?v5 )(tCons$c ?v3 ?v4 ))))))(fun_app$g (fun_app$h ?v2 ?v0 )?v1 ))):named a16 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B_b_a_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$c ?v1 ))(and (forall ((?v3 B$ )(?v4 B_a_tllist$ ))(fun_app$i (fun_app$j ?v2 ?v3 )(tCons$ ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_a_tllist$ )(?v5 B$ ))(=> (and (member$a ?v5 (tset$c ?v4 ))(fun_app$i (fun_app$j ?v2 ?v5 )?v4 ))(fun_app$i (fun_app$j ?v2 ?v5 )(tCons$ ?v3 ?v4 ))))))(fun_app$i (fun_app$j ?v2 ?v0 )?v1 ))):named a17 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(=> (and (member$ ?v0 (tset$ ?v1 ))(and (forall ((?v2 A_a_tllist$ ))(=> (= ?v1 (tCons$a ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_a_tllist$ ))(=> (and (= ?v1 (tCons$a ?v2 ?v3 ))(member$ ?v0 (tset$ ?v3 )))false ))))false )):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(=> (and (member$ ?v0 (tset$a ?v1 ))(and (forall ((?v2 A_b_tllist$ ))(=> (= ?v1 (tCons$b ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_b_tllist$ ))(=> (and (= ?v1 (tCons$b ?v2 ?v3 ))(member$ ?v0 (tset$a ?v3 )))false ))))false )):named a19 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(=> (and (member$a ?v0 (tset$b ?v1 ))(and (forall ((?v2 B_b_tllist$ ))(=> (= ?v1 (tCons$c ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_b_tllist$ ))(=> (and (= ?v1 (tCons$c ?v2 ?v3 ))(member$a ?v0 (tset$b ?v3 )))false ))))false )):named a20 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(=> (and (member$a ?v0 (tset$c ?v1 ))(and (forall ((?v2 B_a_tllist$ ))(=> (= ?v1 (tCons$ ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_a_tllist$ ))(=> (and (= ?v1 (tCons$ ?v2 ?v3 ))(member$a ?v0 (tset$c ?v3 )))false ))))false )):named a21 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A$ ))(=> (member$ ?v0 (tset$ ?v1 ))(member$ ?v0 (tset$ (tCons$a ?v2 ?v1 ))))):named a22 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A$ ))(=> (member$ ?v0 (tset$a ?v1 ))(member$ ?v0 (tset$a (tCons$b ?v2 ?v1 ))))):named a23 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B$ ))(=> (member$a ?v0 (tset$b ?v1 ))(member$a ?v0 (tset$b (tCons$c ?v2 ?v1 ))))):named a24 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B$ ))(=> (member$a ?v0 (tset$c ?v1 ))(member$a ?v0 (tset$c (tCons$ ?v2 ?v1 ))))):named a25 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A$ ))(=> (member$ ?v0 (set2_tllist$ ?v1 ))(member$ ?v0 (set2_tllist$ (tCons$a ?v2 ?v1 ))))):named a26 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_tllist$ )(?v2 A$ ))(=> (member$a ?v0 (set2_tllist$a ?v1 ))(member$a ?v0 (set2_tllist$a (tCons$b ?v2 ?v1 ))))):named a27 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B$ ))(=> (member$a ?v0 (set2_tllist$b ?v1 ))(member$a ?v0 (set2_tllist$b (tCons$c ?v2 ?v1 ))))):named a28 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_tllist$ )(?v2 B$ ))(=> (member$ ?v0 (set2_tllist$c ?v1 ))(member$ ?v0 (set2_tllist$c (tCons$ ?v2 ?v1 ))))):named a29 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(member$ ?v0 (tset$ (tCons$a ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(member$ ?v0 (tset$a (tCons$b ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(member$a ?v0 (tset$b (tCons$c ?v0 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(member$a ?v0 (tset$c (tCons$ ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_tllist$ ))(= (pred_tllist$b ?v0 ?v1 ?v2 )(and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$b ?v2 ))(fun_app$b ?v0 ?v3 )))(forall ((?v3 B$ ))(=> (member$a ?v3 (set2_tllist$b ?v2 ))(fun_app$b ?v1 ?v3 )))))):named a34 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 A_b_tllist$ ))(= (pred_tllist$a ?v0 ?v1 ?v2 )(and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$a ?v2 ))(fun_app$a ?v0 ?v3 )))(forall ((?v3 B$ ))(=> (member$a ?v3 (set2_tllist$a ?v2 ))(fun_app$b ?v1 ?v3 )))))):named a35 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_tllist$ ))(= (pred_tllist$ ?v0 ?v1 ?v2 )(and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$ ?v2 ))(fun_app$a ?v0 ?v3 )))(forall ((?v3 A$ ))(=> (member$ ?v3 (set2_tllist$ ?v2 ))(fun_app$a ?v1 ?v3 )))))):named a36 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_tllist$ ))(= (pred_tllist$c ?v0 ?v1 ?v2 )(and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$c ?v2 ))(fun_app$b ?v0 ?v3 )))(forall ((?v3 A$ ))(=> (member$ ?v3 (set2_tllist$c ?v2 ))(fun_app$a ?v1 ?v3 )))))):named a37 ))
(check-sat )
;(get-unsat-core )
