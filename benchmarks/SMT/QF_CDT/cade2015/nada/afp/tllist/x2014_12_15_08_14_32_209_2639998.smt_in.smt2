;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_c_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_d_fun$ 0 )
(declare-sort C_a_c_tllist_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort B_d_tllist_bool_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist$ 0)
(declare-sort B_d_tllist$ 0)
(declare-fun terminal$ (A_c_tllist$)C$)
(declare-fun tNil$ (C$ )A_c_tllist$)
(declare-fun thd$ (A_c_tllist$)A$)
(declare-fun ttl$ (A_c_tllist$)A_c_tllist$)
(declare-fun tCons$ (A$ A_c_tllist$ )A_c_tllist$)
(declare-fun terminal$a (B_d_tllist$)D$)
(declare-fun tNil$a (D$ )B_d_tllist$)
(declare-fun thd$a (B_d_tllist$)B$)
(declare-fun ttl$a (B_d_tllist$)B_d_tllist$)
(declare-fun tCons$a (B$ B_d_tllist$ )B_d_tllist$)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-sort A_llist$ 0)
(declare-sort B_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()B_llist$)
(declare-fun lhd$a (B_llist$)B$)
(declare-fun ltl$a (B_llist$)B_llist$)
(declare-fun lCons$a (B$ B_llist$ )B_llist$)
(declare-fun p$ ()A_b_bool_fun_fun$ )
(declare-fun q$ ()C_d_bool_fun_fun$ )
(declare-fun uu$ ()B_b_bool_fun_fun$ )
(declare-fun xs$ ()A_c_tllist$ )
(declare-fun ys$ ()B_d_tllist$ )
(declare-fun uua$ ()D_d_bool_fun_fun$ )
(declare-fun uub$ ()B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun uuc$ ()A_a_bool_fun_fun$ )
(declare-fun uud$ ()C_c_bool_fun_fun$ )
(declare-fun uue$ ()A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun uuf$ ()A_c_tllist_c_fun$ )
(declare-fun uug$ ()B_d_tllist_d_fun$ )
(declare-fun enat$ (Nat$ )Enat$ )
(declare-fun less$ (Enat$ )Enat_bool_fun$ )
(declare-fun tmap$ (A_a_fun$ C_c_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tnth$ (A_c_tllist$ Nat$ )A$ )
(declare-fun tset$ (A_c_tllist$ )A_set$ )
(declare-fun tmap$a (B_a_fun$ D_c_fun$ B_d_tllist$ )A_c_tllist$ )
(declare-fun tmap$b (A_b_fun$ C_d_fun$ A_c_tllist$ )B_d_tllist$ )
(declare-fun tmap$c (B_b_fun$ D_d_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun tnth$a (B_d_tllist$ Nat$ )B$ )
(declare-fun tset$a (B_d_tllist$ )B_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (B_d_tllist_d_fun$ B_d_tllist$ )D$ )
(declare-fun lfinite$ (A_llist$ )Bool )
(declare-fun member$a (B$ B_set$ )Bool )
(declare-fun tappend$ (B_d_tllist$ D_b_d_tllist_fun$ )B_d_tllist$ )
(declare-fun tlength$ (A_c_tllist$ )Enat$ )
(declare-fun fun_app$a (A_c_tllist_c_fun$ A_c_tllist$ )C$ )
(declare-fun fun_app$b (B_d_tllist_bool_fun$ B_d_tllist$ )Bool )
(declare-fun fun_app$c (B_d_tllist_b_d_tllist_bool_fun_fun$ B_d_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$d (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$e (A_c_tllist_a_c_tllist_bool_fun_fun$ A_c_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$f (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$g (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$h (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$i (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$j (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$k (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$l (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$m (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$n (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$o (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$p (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$q (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$r (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$s (D_b_d_tllist_fun$ D$ )B_d_tllist$ )
(declare-fun fun_app$t (C_a_c_tllist_fun$ C$ )A_c_tllist$ )
(declare-fun fun_app$u (C_c_fun$ C$ )C$ )
(declare-fun fun_app$v (D_c_fun$ D$ )C$ )
(declare-fun fun_app$w (C_d_fun$ C$ )D$ )
(declare-fun fun_app$x (D_d_fun$ D$ )D$ )
(declare-fun lappendt$ (A_llist$ A_c_tllist$ )A_c_tllist$ )
(declare-fun lfinite$a (B_llist$ )Bool )
(declare-fun tappend$a (A_c_tllist$ C_a_c_tllist_fun$ )A_c_tllist$ )
(declare-fun tlength$a (B_d_tllist$ )Enat$ )
(declare-fun lappendt$a (B_llist$ B_d_tllist$ )B_d_tllist$ )
(declare-fun terminal0$ ()A_c_tllist_c_fun$ )
(declare-fun terminal0$a ()B_d_tllist_d_fun$ )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$a (B_b_bool_fun_fun$ D_d_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (A_a_bool_fun_fun$ C_c_bool_fun_fun$ )A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (B_a_bool_fun_fun$ D_c_bool_fun_fun$ B_d_tllist$ A_c_tllist$ )Bool )
(declare-fun llist_of_tllist$ (A_c_tllist$ )A_llist$ )
(declare-fun llist_of_tllist$a (B_d_tllist$ )B_llist$ )
(assert (! (forall ((?v0 B_d_tllist$ ))(! (= (fun_app$ uug$ ?v0 )(terminal$a ?v0 )):pattern ((fun_app$ uug$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(! (= (fun_app$a uuf$ ?v0 )(terminal$ ?v0 )):pattern ((fun_app$a uuf$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ ))(! (= (fun_app$b (fun_app$c uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uub$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ ))(! (= (fun_app$d (fun_app$e uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uue$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$f (fun_app$g uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uua$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$h (fun_app$i uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uud$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$j (fun_app$k uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uu$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$l (fun_app$m uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uuc$ ?v0 )?v1 )))):named a7 ))
(assert (! (not (= (tllist_all2$ p$ q$ xs$ ys$ )(and (= (tlength$ xs$ )(tlength$a ys$ ))(and (forall ((?v0 Nat$ ))(=> (fun_app$n (less$ (enat$ ?v0 ))(tlength$ xs$ ))(fun_app$j (fun_app$o p$ (tnth$ xs$ ?v0 ))(tnth$a ys$ ?v0 ))))(=> (lfinite$ (llist_of_tllist$ xs$ ))(fun_app$f (fun_app$p q$ (terminal$ xs$ ))(terminal$a ys$ ))))))):named a8 ))
(assert (! (= (tllist_all2$a uu$ uua$ )uub$ ):named a9 ))
(assert (! (= (tllist_all2$b uuc$ uud$ )uue$ ):named a10 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ )(?v4 B_b_bool_fun_fun$ )(?v5 D_d_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 B$ )(?v7 B$ ))(=> (fun_app$j (fun_app$k ?v0 ?v6 )?v7 )(fun_app$j (fun_app$k ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 D$ ))(=> (fun_app$f (fun_app$g ?v1 ?v6 )?v7 )(fun_app$f (fun_app$g ?v5 ?v6 )?v7 )))))(fun_app$b (fun_app$c (tllist_all2$a ?v4 ?v5 )?v2 )?v3 ))):named a11 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ )(?v4 B_a_bool_fun_fun$ )(?v5 D_c_bool_fun_fun$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 A$ ))(=> (fun_app$l (fun_app$q ?v0 ?v6 )?v7 )(fun_app$l (fun_app$q ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 C$ ))(=> (fun_app$h (fun_app$r ?v1 ?v6 )?v7 )(fun_app$h (fun_app$r ?v5 ?v6 )?v7 )))))(tllist_all2$c ?v4 ?v5 ?v2 ?v3 ))):named a12 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 C_c_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$e (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$l (fun_app$m ?v0 ?v6 )?v7 )(fun_app$l (fun_app$m ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 C$ ))(=> (fun_app$h (fun_app$i ?v1 ?v6 )?v7 )(fun_app$h (fun_app$i ?v5 ?v6 )?v7 )))))(fun_app$d (fun_app$e (tllist_all2$b ?v4 ?v5 )?v2 )?v3 ))):named a13 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (fun_app$j (fun_app$o ?v0 ?v6 )?v7 )(fun_app$j (fun_app$o ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (fun_app$f (fun_app$p ?v1 ?v6 )?v7 )(fun_app$f (fun_app$p ?v5 ?v6 )?v7 )))))(tllist_all2$ ?v4 ?v5 ?v2 ?v3 ))):named a14 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (and (fun_app$d (fun_app$e (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(lfinite$ (llist_of_tllist$ ?v3 )))(fun_app$h (fun_app$i ?v1 (terminal$ ?v2 ))(terminal$ ?v3 )))):named a15 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$ ?v3 )))(fun_app$h (fun_app$r ?v1 (terminal$a ?v2 ))(terminal$ ?v3 )))):named a16 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(lfinite$a (llist_of_tllist$a ?v3 )))(fun_app$f (fun_app$g ?v1 (terminal$a ?v2 ))(terminal$a ?v3 )))):named a17 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$a ?v3 )))(fun_app$f (fun_app$p ?v1 (terminal$ ?v2 ))(terminal$a ?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (and (fun_app$d (fun_app$e (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(lfinite$ (llist_of_tllist$ ?v2 )))(fun_app$h (fun_app$i ?v1 (terminal$ ?v2 ))(terminal$ ?v3 )))):named a19 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$a ?v2 )))(fun_app$h (fun_app$r ?v1 (terminal$a ?v2 ))(terminal$ ?v3 )))):named a20 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(lfinite$a (llist_of_tllist$a ?v2 )))(fun_app$f (fun_app$g ?v1 (terminal$a ?v2 ))(terminal$a ?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$ ?v2 )))(fun_app$f (fun_app$p ?v1 (terminal$ ?v2 ))(terminal$a ?v3 )))):named a22 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (fun_app$b (fun_app$c (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(= (lfinite$a (llist_of_tllist$a ?v2 ))(lfinite$a (llist_of_tllist$a ?v3 ))))):named a23 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(= (lfinite$a (llist_of_tllist$a ?v2 ))(lfinite$ (llist_of_tllist$ ?v3 ))))):named a24 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (fun_app$d (fun_app$e (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(= (lfinite$ (llist_of_tllist$ ?v2 ))(lfinite$ (llist_of_tllist$ ?v3 ))))):named a25 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(= (lfinite$ (llist_of_tllist$ ?v2 ))(lfinite$a (llist_of_tllist$a ?v3 ))))):named a26 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (fun_app$d (fun_app$e (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(= (tlength$ ?v2 )(tlength$ ?v3 )))):named a27 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(= (tlength$a ?v2 )(tlength$ ?v3 )))):named a28 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (fun_app$b (fun_app$c (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(= (tlength$a ?v2 )(tlength$a ?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(= (tlength$ ?v2 )(tlength$a ?v3 )))):named a30 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (enat$ ?v0 )(enat$ ?v1 ))(= ?v0 ?v1 ))):named a31 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Nat$ ))(=> (fun_app$n (less$ ?v0 )(enat$ ?v1 ))(exists ((?v2 Nat$ ))(= ?v0 (enat$ ?v2 ))))):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_c_tllist$ ))(=> (lfinite$ ?v0 )(= (terminal$ (lappendt$ ?v0 ?v1 ))(terminal$ ?v1 )))):named a33 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_d_tllist$ ))(=> (lfinite$a ?v0 )(= (terminal$a (lappendt$a ?v0 ?v1 ))(terminal$a ?v1 )))):named a34 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_d_tllist_fun$ ))(= (lfinite$a (llist_of_tllist$a (tappend$ ?v0 ?v1 )))(and (lfinite$a (llist_of_tllist$a ?v0 ))(lfinite$a (llist_of_tllist$a (fun_app$s ?v1 (terminal$a ?v0 ))))))):named a35 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_c_tllist_fun$ ))(= (lfinite$ (llist_of_tllist$ (tappend$a ?v0 ?v1 )))(and (lfinite$ (llist_of_tllist$ ?v0 ))(lfinite$ (llist_of_tllist$ (fun_app$t ?v1 (terminal$ ?v0 ))))))):named a36 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_c_tllist_fun$ ))(= (terminal$ (tappend$a ?v0 ?v1 ))(ite (lfinite$ (llist_of_tllist$ ?v0 ))(terminal$ (fun_app$t ?v1 (terminal$ ?v0 )))(terminal$ ?v0 )))):named a37 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_d_tllist_fun$ ))(= (terminal$a (tappend$ ?v0 ?v1 ))(ite (lfinite$a (llist_of_tllist$a ?v0 ))(terminal$a (fun_app$s ?v1 (terminal$a ?v0 )))(terminal$a ?v0 )))):named a38 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ ))(= (fun_app$d (fun_app$e (tllist_all2$b ?v0 ?v1 )?v2 )?v2 )(and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$ ?v2 ))(fun_app$l (fun_app$m ?v0 ?v3 )?v3 )))(=> (lfinite$ (llist_of_tllist$ ?v2 ))(fun_app$h (fun_app$i ?v1 (terminal$ ?v2 ))(terminal$ ?v2 )))))):named a39 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$a ?v0 ?v1 )?v2 )?v2 )(and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$a ?v2 ))(fun_app$j (fun_app$k ?v0 ?v3 )?v3 )))(=> (lfinite$a (llist_of_tllist$a ?v2 ))(fun_app$f (fun_app$g ?v1 (terminal$a ?v2 ))(terminal$a ?v2 )))))):named a40 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_bool_fun_fun$ )(?v2 C_c_bool_fun_fun$ ))(=> (and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$ ?v0 ))(fun_app$l (fun_app$m ?v1 ?v3 )?v3 )))(=> (lfinite$ (llist_of_tllist$ ?v0 ))(fun_app$h (fun_app$i ?v2 (terminal$ ?v0 ))(terminal$ ?v0 ))))(fun_app$d (fun_app$e (tllist_all2$b ?v1 ?v2 )?v0 )?v0 ))):named a41 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_b_bool_fun_fun$ )(?v2 D_d_bool_fun_fun$ ))(=> (and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$a ?v0 ))(fun_app$j (fun_app$k ?v1 ?v3 )?v3 )))(=> (lfinite$a (llist_of_tllist$a ?v0 ))(fun_app$f (fun_app$g ?v2 (terminal$a ?v0 ))(terminal$a ?v0 ))))(fun_app$b (fun_app$c (tllist_all2$a ?v1 ?v2 )?v0 )?v0 ))):named a42 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_fun$ )(?v2 C_c_fun$ ))(=> (lfinite$ (llist_of_tllist$ ?v0 ))(= (terminal$ (tmap$ ?v1 ?v2 ?v0 ))(fun_app$u ?v2 (terminal$ ?v0 ))))):named a43 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_a_fun$ )(?v2 D_c_fun$ ))(=> (lfinite$a (llist_of_tllist$a ?v0 ))(= (terminal$ (tmap$a ?v1 ?v2 ?v0 ))(fun_app$v ?v2 (terminal$a ?v0 ))))):named a44 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_b_fun$ )(?v2 C_d_fun$ ))(=> (lfinite$ (llist_of_tllist$ ?v0 ))(= (terminal$a (tmap$b ?v1 ?v2 ?v0 ))(fun_app$w ?v2 (terminal$ ?v0 ))))):named a45 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_b_fun$ )(?v2 D_d_fun$ ))(=> (lfinite$a (llist_of_tllist$a ?v0 ))(= (terminal$a (tmap$c ?v1 ?v2 ?v0 ))(fun_app$x ?v2 (terminal$a ?v0 ))))):named a46 ))
(assert (! (= terminal0$ uuf$ ):named a47 ))
(assert (! (= terminal0$a uug$ ):named a48 ))
(assert (! (forall ((?v0 Enat_bool_fun$ )(?v1 Enat$ ))(=> (forall ((?v2 Enat$ ))(=> (forall ((?v3 Enat$ ))(=> (fun_app$n (less$ ?v3 )?v2 )(fun_app$n ?v0 ?v3 )))(fun_app$n ?v0 ?v2 )))(fun_app$n ?v0 ?v1 ))):named a49 ))
(check-sat )
;(get-unsat-core )
