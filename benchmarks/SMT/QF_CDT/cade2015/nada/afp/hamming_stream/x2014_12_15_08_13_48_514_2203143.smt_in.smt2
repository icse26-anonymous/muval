;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Num$ 0)
(declare-fun one$ ()Num$)
(declare-fun select$ (Num$)Num$)
(declare-fun bit0$ (Num$ )Num$)
(declare-fun selecta$ (Num$)Num$)
(declare-fun bit1$ (Num$ )Num$)
(declare-fun n$ ()Nat$ )
(declare-fun na$ ()Nat$ )
(declare-fun dvd$ (Nat$ Nat$ )Bool )
(declare-fun prime$ (Nat$ )Bool )
(declare-fun smooth$ (Nat$ )Bool )
(declare-fun thesis$ ()Bool )
(declare-fun less_eq$ (Nat$ Nat$ )Bool )
(declare-fun numeral$ (Num$ )Nat$ )
(assert (! (not thesis$ ):named a0 ))
(assert (! (forall ((?v0 Nat$ ))(=> (and (prime$ ?v0 )(and (dvd$ ?v0 na$ )(less_eq$ ?v0 (numeral$ (bit1$ (bit0$ one$ ))))))thesis$ )):named a1 ))
(assert (! (smooth$ na$ ):named a2 ))
(assert (! (exists ((?v0 Nat$ ))(and (prime$ ?v0 )(dvd$ ?v0 na$ ))):named a3 ))
(assert (! (forall ((?v0 Nat$ ))(= (smooth$ ?v0 )(forall ((?v1 Nat$ ))(=> (and (prime$ ?v1 )(dvd$ ?v1 ?v0 ))(less_eq$ ?v1 (numeral$ (bit1$ (bit0$ one$ )))))))):named a4 ))
(assert (! (smooth$ (numeral$ (bit1$ (bit0$ one$ )))):named a5 ))
(assert (! (smooth$ (numeral$ (bit1$ one$ ))):named a6 ))
(assert (! (smooth$ (numeral$ (bit0$ one$ ))):named a7 ))
(assert (! (forall ((?v0 Nat$ ))(=> (prime$ ?v0 )(less_eq$ (numeral$ (bit0$ one$ ))?v0 ))):named a8 ))
(assert (! (forall ((?v0 Num$ ))(= (= (bit1$ ?v0 )one$ )false )):named a9 ))
(assert (! (forall ((?v0 Num$ ))(= (= one$ (bit1$ ?v0 ))false )):named a10 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ ))(= (= (bit0$ ?v0 )(bit1$ ?v1 ))false )):named a11 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ ))(= (= (bit1$ ?v0 )(bit0$ ?v1 ))false )):named a12 ))
(assert (! (forall ((?v0 Num$ ))(= (= (bit0$ ?v0 )one$ )false )):named a13 ))
(assert (! (forall ((?v0 Num$ ))(= (= one$ (bit0$ ?v0 ))false )):named a14 ))
(assert (! (forall ((?v0 Num$ ))(not (dvd$ (numeral$ (bit0$ one$ ))(numeral$ (bit1$ ?v0 ))))):named a15 ))
(assert (! (smooth$ n$ ):named a16 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ ))(= (= (bit0$ ?v0 )(bit0$ ?v1 ))(= ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 Num$ )(?v1 Num$ ))(= (= (bit1$ ?v0 )(bit1$ ?v1 ))(= ?v0 ?v1 ))):named a18 ))
(check-sat )
;(get-unsat-core )
