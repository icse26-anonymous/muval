;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Unit$ 0 )
(declare-sort Nat_set$ 0 )
(declare-sort Nat_set_set$ 0 )
(declare-sort Nat_set_set_set$ 0 )
(declare-sort Nat_set_set_set_set$ 0 )
(declare-sort Nat_llist$ 0)
(declare-fun lNil$ ()Nat_llist$)
(declare-fun lhd$ (Nat_llist$)Nat$)
(declare-fun ltl$ (Nat_llist$)Nat_llist$)
(declare-fun lCons$ (Nat$ Nat_llist$ )Nat_llist$)
(declare-fun one$ ()Nat$ )
(declare-fun lset$ (Nat_llist$ )Nat_set$ )
(declare-fun unity$ ()Unit$ )
(declare-fun member$ (Nat_set_set_set$ Nat_set_set_set_set$ )Bool )
(declare-fun atLeast$ (Nat$ )Nat_set$ )
(declare-fun hamming$ (Unit$ )Nat_llist$ )
(declare-fun less_eq$ (Nat_set$ Nat_set$ )Bool )
(declare-fun lsorted$ (Nat_llist$ )Bool )
(declare-fun member$a (Nat_set_set$ Nat_set_set_set$ )Bool )
(declare-fun member$b (Nat_set$ Nat_set_set$ )Bool )
(declare-fun member$c (Nat$ Nat_set$ )Bool )
(declare-fun atLeast$a (Nat_set_set_set$ )Nat_set_set_set_set$ )
(declare-fun atLeast$b (Nat_set_set$ )Nat_set_set_set$ )
(declare-fun atLeast$c (Nat_set$ )Nat_set_set$ )
(declare-fun hamming$a ()Nat_llist$ )
(declare-fun less_eq$a (Nat_set_set_set_set$ Nat_set_set_set_set$ )Bool )
(declare-fun less_eq$b (Nat_set_set_set$ Nat_set_set_set$ )Bool )
(declare-fun less_eq$c (Nat_set_set$ Nat_set_set$ )Bool )
(declare-fun less_eq$d (Nat$ Nat$ )Bool )
(declare-fun ldistinct$ (Nat_llist$ )Bool )
(assert (! (not (and (lsorted$ (hamming$ unity$ ))(and (ldistinct$ (hamming$ unity$ ))(less_eq$ (lset$ (hamming$ unity$ ))(atLeast$ one$ ))))):named a0 ))
(assert (! (forall ((?v0 Nat_set_set_set$ )(?v1 Nat_set_set_set$ ))(= (less_eq$a (atLeast$a ?v0 )(atLeast$a ?v1 ))(less_eq$b ?v1 ?v0 ))):named a1 ))
(assert (! (forall ((?v0 Nat_set_set$ )(?v1 Nat_set_set$ ))(= (less_eq$b (atLeast$b ?v0 )(atLeast$b ?v1 ))(less_eq$c ?v1 ?v0 ))):named a2 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat_set$ ))(= (less_eq$c (atLeast$c ?v0 )(atLeast$c ?v1 ))(less_eq$ ?v1 ?v0 ))):named a3 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (less_eq$ (atLeast$ ?v0 )(atLeast$ ?v1 ))(less_eq$d ?v1 ?v0 ))):named a4 ))
(assert (! (forall ((?v0 Nat_set_set_set$ )(?v1 Nat_set_set_set$ ))(= (member$ ?v0 (atLeast$a ?v1 ))(less_eq$b ?v1 ?v0 ))):named a5 ))
(assert (! (forall ((?v0 Nat_set_set$ )(?v1 Nat_set_set$ ))(= (member$a ?v0 (atLeast$b ?v1 ))(less_eq$c ?v1 ?v0 ))):named a6 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat_set$ ))(= (member$b ?v0 (atLeast$c ?v1 ))(less_eq$ ?v1 ?v0 ))):named a7 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (member$c ?v0 (atLeast$ ?v1 ))(less_eq$d ?v1 ?v0 ))):named a8 ))
(assert (! (forall ((?v0 Nat_llist$ )(?v1 Nat_llist$ ))(=> (and (lsorted$ ?v0 )(and (ldistinct$ ?v0 )(and (lsorted$ ?v1 )(and (ldistinct$ ?v1 )(= (lset$ ?v0 )(lset$ ?v1 ))))))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (atLeast$ ?v0 )(atLeast$ ?v1 ))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 Nat_set_set_set$ )(?v1 Nat_set_set_set$ ))(=> (forall ((?v2 Nat_set_set$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$b ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 Nat_set_set$ )(?v1 Nat_set_set$ ))(=> (forall ((?v2 Nat_set$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 )))(less_eq$c ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat_set$ ))(=> (forall ((?v2 Nat$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 Nat_set_set_set$ )(?v1 Nat_set_set_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 Nat_set_set$ )(?v1 Nat_set_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 ))(= ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 Nat_set_set_set$ ))(less_eq$b ?v0 ?v0 )):named a17 ))
(assert (! (forall ((?v0 Nat$ ))(less_eq$d ?v0 ?v0 )):named a18 ))
(assert (! (forall ((?v0 Nat_set_set$ ))(less_eq$c ?v0 ?v0 )):named a19 ))
(assert (! (forall ((?v0 Nat_set$ ))(less_eq$ ?v0 ?v0 )):named a20 ))
(assert (! (less_eq$d one$ one$ ):named a21 ))
(assert (! (= hamming$a (hamming$ unity$ )):named a22 ))
(assert (! (forall ((?v0 Bool ))(= (= ?v0 (= unity$ unity$ ))?v0 )):named a23 ))
(assert (! (forall ((?v0 Unit$ ))(=> (=> (= ?v0 unity$ )false )false )):named a24 ))
(assert (! (forall ((?v0 Nat_set_set_set$ ))(less_eq$b ?v0 ?v0 )):named a25 ))
(assert (! (forall ((?v0 Nat$ ))(less_eq$d ?v0 ?v0 )):named a26 ))
(assert (! (forall ((?v0 Nat_set_set$ ))(less_eq$c ?v0 ?v0 )):named a27 ))
(assert (! (forall ((?v0 Nat_set$ ))(less_eq$ ?v0 ?v0 )):named a28 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(or (less_eq$d ?v0 ?v1 )(less_eq$d ?v1 ?v0 ))):named a29 ))
(assert (! (forall ((?v0 Nat_set_set_set$ )(?v1 Nat_set_set_set$ ))(! (=> (less_eq$b ?v0 ?v1 )(= (less_eq$b ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$b ?v1 ?v0 )))):named a30 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (=> (less_eq$d ?v0 ?v1 )(= (less_eq$d ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$d ?v1 ?v0 )))):named a31 ))
(assert (! (forall ((?v0 Nat_set_set$ )(?v1 Nat_set_set$ ))(! (=> (less_eq$c ?v0 ?v1 )(= (less_eq$c ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$c ?v1 ?v0 )))):named a32 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat_set$ ))(! (=> (less_eq$ ?v0 ?v1 )(= (less_eq$ ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$ ?v1 ?v0 )))):named a33 ))
(assert (! (forall ((?v0 Nat_set_set_set$ )(?v1 Nat_set_set_set$ )(?v2 Nat_set_set_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v2 ))(less_eq$b ?v0 ?v2 ))):named a34 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (and (less_eq$d ?v0 ?v1 )(less_eq$d ?v1 ?v2 ))(less_eq$d ?v0 ?v2 ))):named a35 ))
(assert (! (forall ((?v0 Nat_set_set$ )(?v1 Nat_set_set$ )(?v2 Nat_set_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v2 ))(less_eq$c ?v0 ?v2 ))):named a36 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat_set$ )(?v2 Nat_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less_eq$ ?v0 ?v2 ))):named a37 ))
(check-sat )
;(get-unsat-core )
