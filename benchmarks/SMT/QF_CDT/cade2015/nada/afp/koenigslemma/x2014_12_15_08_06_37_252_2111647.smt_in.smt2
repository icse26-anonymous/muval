;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Node$ 0 )
(declare-sort Node_set$ 0 )
(declare-sort Node_bool_fun$ 0 )
(declare-sort Node_option_set$ 0 )
(declare-sort Node_node_sum_set$ 0 )
(declare-sort Node_node_bool_fun_fun$ 0 )
(declare-sort Node_option_option_set$ 0 )
(declare-sort Node_node_option_sum_set$ 0 )
(declare-sort Node_node_sum_option_set$ 0 )
(declare-sort Node_option_node_sum_set$ 0 )
(declare-sort Node_node_node_sum_sum_set$ 0 )
(declare-sort Node_node_sum_node_sum_set$ 0 )
(declare-sort Node_node_option_sum_option_set$ 0 )
(declare-sort Node_option_node_option_sum_set$ 0 )
(declare-sort Node_node_node_option_sum_sum_set$ 0 )
(declare-sort Node_node_node_sum_sum_option_set$ 0 )
(declare-sort Node_node_sum_node_option_sum_set$ 0 )
(declare-sort Node_node_sum_node_sum_option_set$ 0 )
(declare-sort Node_option_node_node_sum_sum_set$ 0 )
(declare-sort Node_node_sum_node_node_sum_sum_set$ 0 )
(declare-sort Node_node_sum_node_option_sum_option_set$ 0 )
(declare-sort Node_node_sum_node_node_sum_sum_option_set$ 0 )
(declare-sort Node_llist$ 0)
(declare-fun lNil$ ()Node_llist$)
(declare-fun lhd$ (Node_llist$)Node$)
(declare-fun ltl$ (Node_llist$)Node_llist$)
(declare-fun lCons$ (Node$ Node_llist$ )Node_llist$)
(declare-sort Node_node_set_prod$ 0)
(declare-sort Node_option$ 0)
(declare-sort Node_node_sum$ 0)
(declare-sort Node_node_sum_node_option_sum$ 0)
(declare-sort Node_node_sum_node_node_sum_sum$ 0)
(declare-sort Node_node_sum_node_sum$ 0)
(declare-sort Node_node_option_sum$ 0)
(declare-sort Node_node_node_sum_sum$ 0)
(declare-fun fst$ (Node_node_set_prod$)Node$)
(declare-fun snd$ (Node_node_set_prod$)Node_set$)
(declare-fun pair$ (Node$ Node_set$ )Node_node_set_prod$)
(declare-fun none$ ()Node_option$)
(declare-fun the$ (Node_option$)Node$)
(declare-fun some$ (Node$ )Node_option$)
(declare-fun projl$ (Node_node_sum$)Node$)
(declare-fun inl$ (Node$ )Node_node_sum$)
(declare-fun projr$ (Node_node_sum$)Node$)
(declare-fun inr$ (Node$ )Node_node_sum$)
(declare-fun projl$a (Node_node_sum_node_option_sum$)Node_node_sum$)
(declare-fun inl$a (Node_node_sum$ )Node_node_sum_node_option_sum$)
(declare-fun projr$a (Node_node_sum_node_option_sum$)Node_option$)
(declare-fun inr$a (Node_option$ )Node_node_sum_node_option_sum$)
(declare-fun projl$b (Node_node_sum_node_node_sum_sum$)Node_node_sum$)
(declare-fun inl$b (Node_node_sum$ )Node_node_sum_node_node_sum_sum$)
(declare-fun projr$b (Node_node_sum_node_node_sum_sum$)Node_node_sum$)
(declare-fun inr$b (Node_node_sum$ )Node_node_sum_node_node_sum_sum$)
(declare-fun projl$c (Node_node_sum_node_sum$)Node_node_sum$)
(declare-fun inl$c (Node_node_sum$ )Node_node_sum_node_sum$)
(declare-fun projr$c (Node_node_sum_node_sum$)Node$)
(declare-fun inr$c (Node$ )Node_node_sum_node_sum$)
(declare-fun projl$d (Node_node_option_sum$)Node$)
(declare-fun inl$d (Node$ )Node_node_option_sum$)
(declare-fun projr$d (Node_node_option_sum$)Node_option$)
(declare-fun inr$d (Node_option$ )Node_node_option_sum$)
(declare-fun projl$e (Node_node_node_sum_sum$)Node$)
(declare-fun inl$e (Node$ )Node_node_node_sum_sum$)
(declare-fun projr$e (Node_node_node_sum_sum$)Node_node_sum$)
(declare-fun inr$e (Node_node_sum$ )Node_node_node_sum_sum$)
(declare-fun f$ (Node_node_set_prod$ )Node_llist$ )
(declare-fun x$ ()Node$ )
(declare-fun na$ ()Node$ )
(declare-fun ns$ ()Node_set$ )
(declare-fun bot$ ()Node_set$ )
(declare-fun nsa$ ()Node_set$ )
(declare-fun top$ ()Node_set$ )
(declare-fun bot$a ()Node_node_sum_node_option_sum_set$ )
(declare-fun bot$b ()Node_node_sum_node_node_sum_sum_set$ )
(declare-fun bot$c ()Node_node_sum_node_sum_set$ )
(declare-fun bot$d ()Node_node_option_sum_set$ )
(declare-fun bot$e ()Node_node_node_sum_sum_set$ )
(declare-fun bot$f ()Node_node_sum_set$ )
(declare-fun bot$g ()Node_option_set$ )
(declare-fun lset$ (Node_llist$ )Node_set$ )
(declare-fun top$a ()Node_node_sum_node_option_sum_set$ )
(declare-fun top$b ()Node_node_sum_node_node_sum_sum_set$ )
(declare-fun top$c ()Node_node_sum_node_sum_set$ )
(declare-fun top$d ()Node_node_option_sum_set$ )
(declare-fun top$e ()Node_node_node_sum_sum_set$ )
(declare-fun top$f ()Node_node_sum_set$ )
(declare-fun top$g ()Node_option_set$ )
(declare-fun top$h ()Node_option_node_sum_set$ )
(declare-fun top$i ()Node_option_node_option_sum_set$ )
(declare-fun top$j ()Node_option_node_node_sum_sum_set$ )
(declare-fun top$k ()Node_node_node_option_sum_sum_set$ )
(declare-fun top$l ()Node_node_sum_node_option_sum_option_set$ )
(declare-fun top$m ()Node_node_sum_node_node_sum_sum_option_set$ )
(declare-fun top$n ()Node_node_sum_node_sum_option_set$ )
(declare-fun top$o ()Node_node_option_sum_option_set$ )
(declare-fun top$p ()Node_node_node_sum_sum_option_set$ )
(declare-fun top$q ()Node_node_sum_option_set$ )
(declare-fun top$r ()Node_option_option_set$ )
(declare-fun graph$ ()Node_node_bool_fun_fun$ )
(declare-fun finite$ (Node_set$ )Bool )
(declare-fun insert$ (Node$ Node_set$ )Node_set$ )
(declare-fun member$ (Node$ Node_set$ )Bool )
(declare-fun uminus$ (Node_set$ )Node_set$ )
(declare-fun finite$a (Node_node_sum_node_option_sum_set$ )Bool )
(declare-fun finite$b (Node_node_sum_node_node_sum_sum_set$ )Bool )
(declare-fun finite$c (Node_node_sum_node_sum_set$ )Bool )
(declare-fun finite$d (Node_node_option_sum_set$ )Bool )
(declare-fun finite$e (Node_node_node_sum_sum_set$ )Bool )
(declare-fun finite$f (Node_node_sum_set$ )Bool )
(declare-fun finite$g (Node_option_set$ )Bool )
(declare-fun finite$h (Node_option_node_sum_set$ )Bool )
(declare-fun finite$i (Node_option_node_option_sum_set$ )Bool )
(declare-fun finite$j (Node_option_node_node_sum_sum_set$ )Bool )
(declare-fun finite$k (Node_node_node_option_sum_sum_set$ )Bool )
(declare-fun finite$l (Node_node_sum_node_option_sum_option_set$ )Bool )
(declare-fun finite$m (Node_node_sum_node_node_sum_sum_option_set$ )Bool )
(declare-fun finite$n (Node_node_sum_node_sum_option_set$ )Bool )
(declare-fun finite$o (Node_node_option_sum_option_set$ )Bool )
(declare-fun finite$p (Node_node_node_sum_sum_option_set$ )Bool )
(declare-fun finite$q (Node_node_sum_option_set$ )Bool )
(declare-fun finite$r (Node_option_option_set$ )Bool )
(declare-fun fun_app$ (Node_bool_fun$ Node$ )Bool )
(declare-fun insert$a (Node_node_sum_node_option_sum$ Node_node_sum_node_option_sum_set$ )Node_node_sum_node_option_sum_set$ )
(declare-fun insert$b (Node_node_sum_node_node_sum_sum$ Node_node_sum_node_node_sum_sum_set$ )Node_node_sum_node_node_sum_sum_set$ )
(declare-fun insert$c (Node_node_sum_node_sum$ Node_node_sum_node_sum_set$ )Node_node_sum_node_sum_set$ )
(declare-fun insert$d (Node_node_option_sum$ Node_node_option_sum_set$ )Node_node_option_sum_set$ )
(declare-fun insert$e (Node_node_node_sum_sum$ Node_node_node_sum_sum_set$ )Node_node_node_sum_sum_set$ )
(declare-fun insert$f (Node_node_sum$ Node_node_sum_set$ )Node_node_sum_set$ )
(declare-fun insert$g (Node_option$ Node_option_set$ )Node_option_set$ )
(declare-fun member$a (Node_option$ Node_option_set$ )Bool )
(declare-fun member$b (Node_node_sum$ Node_node_sum_set$ )Bool )
(declare-fun uminus$a (Node_node_sum_node_option_sum_set$ )Node_node_sum_node_option_sum_set$ )
(declare-fun uminus$b (Node_node_sum_node_node_sum_sum_set$ )Node_node_sum_node_node_sum_sum_set$ )
(declare-fun uminus$c (Node_node_sum_node_sum_set$ )Node_node_sum_node_sum_set$ )
(declare-fun uminus$d (Node_node_option_sum_set$ )Node_node_option_sum_set$ )
(declare-fun uminus$e (Node_node_node_sum_sum_set$ )Node_node_node_sum_sum_set$ )
(declare-fun uminus$f (Node_node_sum_set$ )Node_node_sum_set$ )
(declare-fun uminus$g (Node_option_set$ )Node_option_set$ )
(declare-fun fun_app$a (Node_node_bool_fun_fun$ Node$ )Node_bool_fun$ )
(declare-fun connected$ (Node_node_bool_fun_fun$ )Bool )
(declare-fun reachable_via$ (Node_node_bool_fun_fun$ Node_set$ Node$ )Node_set$ )
(declare-fun reachable_viap$ (Node_node_bool_fun_fun$ Node_set$ )Node_node_bool_fun_fun$ )
(assert (! (not (not (member$ x$ nsa$ ))):named a0 ))
(assert (! (not (member$ na$ nsa$ )):named a1 ))
(assert (! (finite$ nsa$ ):named a2 ))
(assert (! (not (finite$ (reachable_via$ graph$ (uminus$ (insert$ na$ nsa$ ))na$ ))):named a3 ))
(assert (! (member$ x$ (lset$ (f$ (pair$ na$ nsa$ )))):named a4 ))
(assert (! (= ns$ bot$ ):named a5 ))
(assert (! (not (finite$ top$ )):named a6 ))
(assert (! (forall ((?v0 Node_node_bool_fun_fun$ )(?v1 Node_set$ )(?v2 Node$ )(?v3 Node$ ))(! (= (fun_app$ (fun_app$a (reachable_viap$ ?v0 ?v1 )?v2 )?v3 )(member$ ?v3 (reachable_via$ ?v0 ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (reachable_viap$ ?v0 ?v1 )?v2 )?v3 )))):named a7 ))
(assert (! (connected$ graph$ ):named a8 ))
(assert (! (forall ((?v0 Node_node_sum_node_option_sum_set$ ))(=> (finite$a ?v0 )(= (finite$a (uminus$a ?v0 ))(finite$a top$a )))):named a9 ))
(assert (! (forall ((?v0 Node_node_sum_node_node_sum_sum_set$ ))(=> (finite$b ?v0 )(= (finite$b (uminus$b ?v0 ))(finite$b top$b )))):named a10 ))
(assert (! (forall ((?v0 Node_node_sum_node_sum_set$ ))(=> (finite$c ?v0 )(= (finite$c (uminus$c ?v0 ))(finite$c top$c )))):named a11 ))
(assert (! (forall ((?v0 Node_node_option_sum_set$ ))(=> (finite$d ?v0 )(= (finite$d (uminus$d ?v0 ))(finite$d top$d )))):named a12 ))
(assert (! (forall ((?v0 Node_node_node_sum_sum_set$ ))(=> (finite$e ?v0 )(= (finite$e (uminus$e ?v0 ))(finite$e top$e )))):named a13 ))
(assert (! (forall ((?v0 Node_node_sum_set$ ))(=> (finite$f ?v0 )(= (finite$f (uminus$f ?v0 ))(finite$f top$f )))):named a14 ))
(assert (! (forall ((?v0 Node_option_set$ ))(=> (finite$g ?v0 )(= (finite$g (uminus$g ?v0 ))(finite$g top$g )))):named a15 ))
(assert (! (forall ((?v0 Node_set$ ))(=> (finite$ ?v0 )(= (finite$ (uminus$ ?v0 ))(finite$ top$ )))):named a16 ))
(assert (! (= (uminus$a top$a )bot$a ):named a17 ))
(assert (! (= (uminus$b top$b )bot$b ):named a18 ))
(assert (! (= (uminus$c top$c )bot$c ):named a19 ))
(assert (! (= (uminus$d top$d )bot$d ):named a20 ))
(assert (! (= (uminus$e top$e )bot$e ):named a21 ))
(assert (! (= (uminus$f top$f )bot$f ):named a22 ))
(assert (! (= (uminus$g top$g )bot$g ):named a23 ))
(assert (! (= (uminus$ top$ )bot$ ):named a24 ))
(assert (! (= (uminus$a bot$a )top$a ):named a25 ))
(assert (! (= (uminus$b bot$b )top$b ):named a26 ))
(assert (! (= (uminus$c bot$c )top$c ):named a27 ))
(assert (! (= (uminus$d bot$d )top$d ):named a28 ))
(assert (! (= (uminus$e bot$e )top$e ):named a29 ))
(assert (! (= (uminus$f bot$f )top$f ):named a30 ))
(assert (! (= (uminus$g bot$g )top$g ):named a31 ))
(assert (! (= (uminus$ bot$ )top$ ):named a32 ))
(assert (! (= (finite$f top$f )(and (finite$ top$ )(finite$ top$ ))):named a33 ))
(assert (! (= (finite$d top$d )(and (finite$ top$ )(finite$g top$g ))):named a34 ))
(assert (! (= (finite$h top$h )(and (finite$g top$g )(finite$ top$ ))):named a35 ))
(assert (! (= (finite$e top$e )(and (finite$ top$ )(finite$f top$f ))):named a36 ))
(assert (! (= (finite$c top$c )(and (finite$f top$f )(finite$ top$ ))):named a37 ))
(assert (! (= (finite$i top$i )(and (finite$g top$g )(finite$g top$g ))):named a38 ))
(assert (! (= (finite$a top$a )(and (finite$f top$f )(finite$g top$g ))):named a39 ))
(assert (! (= (finite$j top$j )(and (finite$g top$g )(finite$f top$f ))):named a40 ))
(assert (! (= (finite$b top$b )(and (finite$f top$f )(finite$f top$f ))):named a41 ))
(assert (! (= (finite$k top$k )(and (finite$ top$ )(finite$d top$d ))):named a42 ))
(assert (! (= (finite$l top$l )(finite$a top$a )):named a43 ))
(assert (! (= (finite$m top$m )(finite$b top$b )):named a44 ))
(assert (! (= (finite$n top$n )(finite$c top$c )):named a45 ))
(assert (! (= (finite$o top$o )(finite$d top$d )):named a46 ))
(assert (! (= (finite$p top$p )(finite$e top$e )):named a47 ))
(assert (! (= (finite$q top$q )(finite$f top$f )):named a48 ))
(assert (! (= (finite$r top$r )(finite$g top$g )):named a49 ))
(assert (! (= (finite$g top$g )(finite$ top$ )):named a50 ))
(assert (! (forall ((?v0 Node_node_sum_node_option_sum$ )(?v1 Node_node_sum_node_option_sum_set$ ))(= (finite$a (insert$a ?v0 ?v1 ))(finite$a ?v1 ))):named a51 ))
(assert (! (forall ((?v0 Node_node_sum_node_node_sum_sum$ )(?v1 Node_node_sum_node_node_sum_sum_set$ ))(= (finite$b (insert$b ?v0 ?v1 ))(finite$b ?v1 ))):named a52 ))
(assert (! (forall ((?v0 Node_node_sum_node_sum$ )(?v1 Node_node_sum_node_sum_set$ ))(= (finite$c (insert$c ?v0 ?v1 ))(finite$c ?v1 ))):named a53 ))
(assert (! (forall ((?v0 Node_node_option_sum$ )(?v1 Node_node_option_sum_set$ ))(= (finite$d (insert$d ?v0 ?v1 ))(finite$d ?v1 ))):named a54 ))
(assert (! (forall ((?v0 Node_node_node_sum_sum$ )(?v1 Node_node_node_sum_sum_set$ ))(= (finite$e (insert$e ?v0 ?v1 ))(finite$e ?v1 ))):named a55 ))
(assert (! (forall ((?v0 Node_node_sum$ )(?v1 Node_node_sum_set$ ))(= (finite$f (insert$f ?v0 ?v1 ))(finite$f ?v1 ))):named a56 ))
(assert (! (forall ((?v0 Node_option$ )(?v1 Node_option_set$ ))(= (finite$g (insert$g ?v0 ?v1 ))(finite$g ?v1 ))):named a57 ))
(assert (! (forall ((?v0 Node$ )(?v1 Node_set$ ))(= (finite$ (insert$ ?v0 ?v1 ))(finite$ ?v1 ))):named a58 ))
(assert (! (forall ((?v0 Node_option$ ))(member$a ?v0 (insert$g ?v0 bot$g ))):named a59 ))
(assert (! (forall ((?v0 Node_node_sum$ ))(member$b ?v0 (insert$f ?v0 bot$f ))):named a60 ))
(assert (! (forall ((?v0 Node$ ))(member$ ?v0 (insert$ ?v0 bot$ ))):named a61 ))
(assert (! (= (uminus$a top$a )bot$a ):named a62 ))
(assert (! (= (uminus$b top$b )bot$b ):named a63 ))
(assert (! (= (uminus$c top$c )bot$c ):named a64 ))
(assert (! (= (uminus$d top$d )bot$d ):named a65 ))
(assert (! (= (uminus$e top$e )bot$e ):named a66 ))
(assert (! (= (uminus$f top$f )bot$f ):named a67 ))
(assert (! (= (uminus$g top$g )bot$g ):named a68 ))
(assert (! (= (uminus$ top$ )bot$ ):named a69 ))
(assert (! (= (uminus$a bot$a )top$a ):named a70 ))
(assert (! (= (uminus$b bot$b )top$b ):named a71 ))
(assert (! (= (uminus$c bot$c )top$c ):named a72 ))
(assert (! (= (uminus$d bot$d )top$d ):named a73 ))
(assert (! (= (uminus$e bot$e )top$e ):named a74 ))
(assert (! (= (uminus$f bot$f )top$f ):named a75 ))
(assert (! (= (uminus$g bot$g )top$g ):named a76 ))
(assert (! (= (uminus$ bot$ )top$ ):named a77 ))
(check-sat )
;(get-unsat-core )
