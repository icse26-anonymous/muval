;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_prod_set$ 0 )
(declare-sort A_b_prod_set$ 0 )
(declare-sort B_a_prod_set$ 0 )
(declare-sort B_b_prod_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_a_b_prod_prod_set$ 0 )
(declare-sort A_a_llist_bool_fun_fun$ 0 )
(declare-sort B_b_llist_bool_fun_fun$ 0 )
(declare-sort A_a_prod_llist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_bool_fun$ 0 )
(declare-sort B_a_prod_llist_bool_fun$ 0 )
(declare-sort B_b_prod_llist_bool_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_set$ 0 )
(declare-sort A_a_b_prod_prod_llist_bool_fun$ 0 )
(declare-sort A_a_b_prod_a_b_prod_prod_prod_set$ 0 )
(declare-sort A_a_prod_a_a_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort B_a_prod_b_a_prod_llist_bool_fun_fun$ 0 )
(declare-sort B_b_prod_b_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_llist_bool_fun$ 0 )
(declare-sort A_a_b_prod_a_b_prod_prod_prod_llist_bool_fun$ 0 )
(declare-sort A_a_b_prod_prod_a_a_b_prod_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_a_b_prod_a_b_prod_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_a_b_prod_a_b_prod_prod_prod_a_a_b_prod_a_b_prod_prod_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_b_prod$ 0)
(declare-fun fst$ (A_b_prod$)A$)
(declare-fun snd$ (A_b_prod$)B$)
(declare-fun pair$ (A$ B$ )A_b_prod$)
(declare-sort A_b_prod_llist$ 0)
(declare-sort B_llist$ 0)
(declare-fun lNil$a ()A_b_prod_llist$)
(declare-fun lhd$a (A_b_prod_llist$)A_b_prod$)
(declare-fun ltl$a (A_b_prod_llist$)A_b_prod_llist$)
(declare-fun lCons$a (A_b_prod$ A_b_prod_llist$ )A_b_prod_llist$)
(declare-fun lNil$b ()B_llist$)
(declare-fun lhd$b (B_llist$)B$)
(declare-fun ltl$b (B_llist$)B_llist$)
(declare-fun lCons$b (B$ B_llist$ )B_llist$)
(declare-sort B_b_prod$ 0)
(declare-fun fst$a (B_b_prod$)B$)
(declare-fun snd$a (B_b_prod$)B$)
(declare-fun pair$a (B$ B$ )B_b_prod$)
(declare-sort B_b_prod_llist$ 0)
(declare-fun lNil$c ()B_b_prod_llist$)
(declare-fun lhd$c (B_b_prod_llist$)B_b_prod$)
(declare-fun ltl$c (B_b_prod_llist$)B_b_prod_llist$)
(declare-fun lCons$c (B_b_prod$ B_b_prod_llist$ )B_b_prod_llist$)
(declare-sort B_a_prod$ 0)
(declare-fun fst$b (B_a_prod$)B$)
(declare-fun snd$b (B_a_prod$)A$)
(declare-fun pair$b (B$ A$ )B_a_prod$)
(declare-sort B_a_prod_llist$ 0)
(declare-fun lNil$d ()B_a_prod_llist$)
(declare-fun lhd$d (B_a_prod_llist$)B_a_prod$)
(declare-fun ltl$d (B_a_prod_llist$)B_a_prod_llist$)
(declare-fun lCons$d (B_a_prod$ B_a_prod_llist$ )B_a_prod_llist$)
(declare-sort A_b_prod_a_b_prod_prod$ 0)
(declare-sort A_a_b_prod_a_b_prod_prod_prod$ 0)
(declare-fun fst$c (A_b_prod_a_b_prod_prod$)A_b_prod$)
(declare-fun snd$c (A_b_prod_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$c (A_b_prod$ A_b_prod$ )A_b_prod_a_b_prod_prod$)
(declare-fun fst$d (A_a_b_prod_a_b_prod_prod_prod$)A$)
(declare-fun snd$d (A_a_b_prod_a_b_prod_prod_prod$)A_b_prod_a_b_prod_prod$)
(declare-fun pair$d (A$ A_b_prod_a_b_prod_prod$ )A_a_b_prod_a_b_prod_prod_prod$)
(declare-sort A_a_b_prod_a_b_prod_prod_prod_llist$ 0)
(declare-fun lNil$e ()A_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun lhd$e (A_a_b_prod_a_b_prod_prod_prod_llist$)A_a_b_prod_a_b_prod_prod_prod$)
(declare-fun ltl$e (A_a_b_prod_a_b_prod_prod_prod_llist$)A_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun lCons$e (A_a_b_prod_a_b_prod_prod_prod$ A_a_b_prod_a_b_prod_prod_prod_llist$ )A_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-sort A_a_b_prod_prod$ 0)
(declare-fun fst$e (A_a_b_prod_prod$)A$)
(declare-fun snd$e (A_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$e (A$ A_b_prod$ )A_a_b_prod_prod$)
(declare-sort A_a_b_prod_prod_llist$ 0)
(declare-fun lNil$f ()A_a_b_prod_prod_llist$)
(declare-fun lhd$f (A_a_b_prod_prod_llist$)A_a_b_prod_prod$)
(declare-fun ltl$f (A_a_b_prod_prod_llist$)A_a_b_prod_prod_llist$)
(declare-fun lCons$f (A_a_b_prod_prod$ A_a_b_prod_prod_llist$ )A_a_b_prod_prod_llist$)
(declare-sort A_a_prod$ 0)
(declare-fun fst$f (A_a_prod$)A$)
(declare-fun snd$f (A_a_prod$)A$)
(declare-fun pair$f (A$ A$ )A_a_prod$)
(declare-sort A_a_prod_llist$ 0)
(declare-sort A_b_prod_a_b_prod_prod_llist$ 0)
(declare-fun lNil$g ()A_a_prod_llist$)
(declare-fun lhd$g (A_a_prod_llist$)A_a_prod$)
(declare-fun ltl$g (A_a_prod_llist$)A_a_prod_llist$)
(declare-fun lCons$g (A_a_prod$ A_a_prod_llist$ )A_a_prod_llist$)
(declare-fun lNil$h ()A_b_prod_a_b_prod_prod_llist$)
(declare-fun lhd$h (A_b_prod_a_b_prod_prod_llist$)A_b_prod_a_b_prod_prod$)
(declare-fun ltl$h (A_b_prod_a_b_prod_prod_llist$)A_b_prod_a_b_prod_prod_llist$)
(declare-fun lCons$h (A_b_prod_a_b_prod_prod$ A_b_prod_a_b_prod_prod_llist$ )A_b_prod_a_b_prod_prod_llist$)
(declare-sort A_b_prod_a_prod$ 0)
(declare-fun fst$g (A_b_prod_a_prod$)A_b_prod$)
(declare-fun snd$g (A_b_prod_a_prod$)A$)
(declare-fun pair$g (A_b_prod$ A$ )A_b_prod_a_prod$)
(declare-sort A_b_prod_a_prod_llist$ 0)
(declare-fun lNil$i ()A_b_prod_a_prod_llist$)
(declare-fun lhd$i (A_b_prod_a_prod_llist$)A_b_prod_a_prod$)
(declare-fun ltl$i (A_b_prod_a_prod_llist$)A_b_prod_a_prod_llist$)
(declare-fun lCons$i (A_b_prod_a_prod$ A_b_prod_a_prod_llist$ )A_b_prod_a_prod_llist$)
(declare-sort A_b_prod_b_prod$ 0)
(declare-fun fst$h (A_b_prod_b_prod$)A_b_prod$)
(declare-fun snd$h (A_b_prod_b_prod$)B$)
(declare-fun pair$h (A_b_prod$ B$ )A_b_prod_b_prod$)
(declare-sort A_b_prod_b_prod_llist$ 0)
(declare-fun lNil$j ()A_b_prod_b_prod_llist$)
(declare-fun lhd$j (A_b_prod_b_prod_llist$)A_b_prod_b_prod$)
(declare-fun ltl$j (A_b_prod_b_prod_llist$)A_b_prod_b_prod_llist$)
(declare-fun lCons$j (A_b_prod_b_prod$ A_b_prod_b_prod_llist$ )A_b_prod_b_prod_llist$)
(declare-sort B_a_b_prod_prod$ 0)
(declare-fun fst$i (B_a_b_prod_prod$)B$)
(declare-fun snd$i (B_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$i (B$ A_b_prod$ )B_a_b_prod_prod$)
(declare-sort B_a_b_prod_prod_llist$ 0)
(declare-fun lNil$k ()B_a_b_prod_prod_llist$)
(declare-fun lhd$k (B_a_b_prod_prod_llist$)B_a_b_prod_prod$)
(declare-fun ltl$k (B_a_b_prod_prod_llist$)B_a_b_prod_prod_llist$)
(declare-fun lCons$k (B_a_b_prod_prod$ B_a_b_prod_prod_llist$ )B_a_b_prod_prod_llist$)
(declare-fun x$ ()A$ )
(declare-fun y$ ()B$ )
(declare-fun z$ ()A_b_prod$ )
(declare-fun zs$ ()A_b_prod_llist$ )
(declare-fun xsa$ ()A_llist$ )
(declare-fun ysa$ ()B_llist$ )
(declare-fun lset$ (A_llist$ )A_set$ )
(declare-fun lzip$ (A_llist$ B_llist$ )A_b_prod_llist$ )
(declare-fun lset$a (A_b_prod_llist$ )A_b_prod_set$ )
(declare-fun lset$b (B_b_prod_llist$ )B_b_prod_set$ )
(declare-fun lset$c (B_a_prod_llist$ )B_a_prod_set$ )
(declare-fun lset$d (A_a_b_prod_a_b_prod_prod_prod_llist$ )A_a_b_prod_a_b_prod_prod_prod_set$ )
(declare-fun lset$e (A_a_b_prod_prod_llist$ )A_a_b_prod_prod_set$ )
(declare-fun lset$f (A_a_prod_llist$ )A_a_prod_set$ )
(declare-fun lset$g (A_b_prod_a_b_prod_prod_llist$ )A_b_prod_a_b_prod_prod_set$ )
(declare-fun lset$h (B_llist$ )B_set$ )
(declare-fun lsetp$ (B_llist$ B$ )Bool )
(declare-fun lzip$a (A_b_prod_llist$ A_b_prod_llist$ )A_b_prod_a_b_prod_prod_llist$ )
(declare-fun lzip$b (A_llist$ A_llist$ )A_a_prod_llist$ )
(declare-fun lzip$c (B_llist$ A_llist$ )B_a_prod_llist$ )
(declare-fun lzip$d (B_llist$ B_llist$ )B_b_prod_llist$ )
(declare-fun lzip$e (A_b_prod_llist$ A_llist$ )A_b_prod_a_prod_llist$ )
(declare-fun lzip$f (A_b_prod_llist$ B_llist$ )A_b_prod_b_prod_llist$ )
(declare-fun lzip$g (A_llist$ A_b_prod_llist$ )A_a_b_prod_prod_llist$ )
(declare-fun lzip$h (B_llist$ A_b_prod_llist$ )B_a_b_prod_prod_llist$ )
(declare-fun lzip$i (A_llist$ A_b_prod_a_b_prod_prod_llist$ )A_a_b_prod_a_b_prod_prod_prod_llist$ )
(declare-fun lsetp$a (A_b_prod_a_b_prod_prod_llist$ A_b_prod_a_b_prod_prod$ )Bool )
(declare-fun lsetp$b (A_llist$ A$ )Bool )
(declare-fun lsetp$c (A_b_prod_llist$ A_b_prod$ )Bool )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (B_b_prod_llist_bool_fun$ B_b_prod_llist$ )Bool )
(declare-fun lmember$ (B$ )B_llist_bool_fun$ )
(declare-fun member$a (A_b_prod$ A_b_prod_set$ )Bool )
(declare-fun member$b (B_b_prod$ B_b_prod_set$ )Bool )
(declare-fun member$c (B_a_prod$ B_a_prod_set$ )Bool )
(declare-fun member$d (A_a_b_prod_a_b_prod_prod_prod$ A_a_b_prod_a_b_prod_prod_prod_set$ )Bool )
(declare-fun member$e (A_a_b_prod_prod$ A_a_b_prod_prod_set$ )Bool )
(declare-fun member$f (A_a_prod$ A_a_prod_set$ )Bool )
(declare-fun member$g (A_b_prod_a_b_prod_prod$ A_b_prod_a_b_prod_prod_set$ )Bool )
(declare-fun member$h (B$ B_set$ )Bool )
(declare-fun fun_app$a (B_b_prod_b_b_prod_llist_bool_fun_fun$ B_b_prod$ )B_b_prod_llist_bool_fun$ )
(declare-fun fun_app$b (B_a_prod_llist_bool_fun$ B_a_prod_llist$ )Bool )
(declare-fun fun_app$c (B_a_prod_b_a_prod_llist_bool_fun_fun$ B_a_prod$ )B_a_prod_llist_bool_fun$ )
(declare-fun fun_app$d (A_a_b_prod_a_b_prod_prod_prod_llist_bool_fun$ A_a_b_prod_a_b_prod_prod_prod_llist$ )Bool )
(declare-fun fun_app$e (A_a_b_prod_a_b_prod_prod_prod_a_a_b_prod_a_b_prod_prod_prod_llist_bool_fun_fun$ A_a_b_prod_a_b_prod_prod_prod$ )A_a_b_prod_a_b_prod_prod_prod_llist_bool_fun$ )
(declare-fun fun_app$f (A_a_b_prod_prod_llist_bool_fun$ A_a_b_prod_prod_llist$ )Bool )
(declare-fun fun_app$g (A_a_b_prod_prod_a_a_b_prod_prod_llist_bool_fun_fun$ A_a_b_prod_prod$ )A_a_b_prod_prod_llist_bool_fun$ )
(declare-fun fun_app$h (A_a_prod_llist_bool_fun$ A_a_prod_llist$ )Bool )
(declare-fun fun_app$i (A_a_prod_a_a_prod_llist_bool_fun_fun$ A_a_prod$ )A_a_prod_llist_bool_fun$ )
(declare-fun fun_app$j (A_b_prod_a_b_prod_prod_llist_bool_fun$ A_b_prod_a_b_prod_prod_llist$ )Bool )
(declare-fun fun_app$k (A_b_prod_a_b_prod_prod_a_b_prod_a_b_prod_prod_llist_bool_fun_fun$ A_b_prod_a_b_prod_prod$ )A_b_prod_a_b_prod_prod_llist_bool_fun$ )
(declare-fun fun_app$l (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$m (B_b_llist_bool_fun_fun$ B$ )B_llist_bool_fun$ )
(declare-fun fun_app$n (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$o (A_a_llist_bool_fun_fun$ A$ )A_llist_bool_fun$ )
(declare-fun fun_app$p (A_b_prod_llist_bool_fun$ A_b_prod_llist$ )Bool )
(declare-fun fun_app$q (A_b_prod_a_b_prod_llist_bool_fun_fun$ A_b_prod$ )A_b_prod_llist_bool_fun$ )
(declare-fun lmember$a (A_b_prod_a_b_prod_prod$ )A_b_prod_a_b_prod_prod_llist_bool_fun$ )
(declare-fun lmember$b (A$ )A_llist_bool_fun$ )
(declare-fun lmember$c (A_b_prod$ )A_b_prod_llist_bool_fun$ )
(assert (! (not (member$ x$ (lset$ xsa$ ))):named a0 ))
(assert (! (not (= (pair$ x$ y$ )z$ )):named a1 ))
(assert (! (member$a (pair$ x$ y$ )(lset$a zs$ )):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(=> (= zs$ (lzip$ ?v0 ?v1 ))(member$ x$ (lset$ ?v0 )))):named a3 ))
(assert (! (= (lCons$a z$ zs$ )(lzip$ xsa$ ysa$ )):named a4 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod_b_b_prod_llist_bool_fun_fun$ ))(=> (and (member$b ?v0 (lset$b ?v1 ))(and (forall ((?v3 B_b_prod$ )(?v4 B_b_prod_llist$ ))(fun_app$ (fun_app$a ?v2 ?v3 )(lCons$c ?v3 ?v4 )))(forall ((?v3 B_b_prod$ )(?v4 B_b_prod_llist$ )(?v5 B_b_prod$ ))(=> (and (member$b ?v5 (lset$b ?v4 ))(fun_app$ (fun_app$a ?v2 ?v5 )?v4 ))(fun_app$ (fun_app$a ?v2 ?v5 )(lCons$c ?v3 ?v4 ))))))(fun_app$ (fun_app$a ?v2 ?v0 )?v1 ))):named a5 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod_b_a_prod_llist_bool_fun_fun$ ))(=> (and (member$c ?v0 (lset$c ?v1 ))(and (forall ((?v3 B_a_prod$ )(?v4 B_a_prod_llist$ ))(fun_app$b (fun_app$c ?v2 ?v3 )(lCons$d ?v3 ?v4 )))(forall ((?v3 B_a_prod$ )(?v4 B_a_prod_llist$ )(?v5 B_a_prod$ ))(=> (and (member$c ?v5 (lset$c ?v4 ))(fun_app$b (fun_app$c ?v2 ?v5 )?v4 ))(fun_app$b (fun_app$c ?v2 ?v5 )(lCons$d ?v3 ?v4 ))))))(fun_app$b (fun_app$c ?v2 ?v0 )?v1 ))):named a6 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v2 A_a_b_prod_a_b_prod_prod_prod_a_a_b_prod_a_b_prod_prod_prod_llist_bool_fun_fun$ ))(=> (and (member$d ?v0 (lset$d ?v1 ))(and (forall ((?v3 A_a_b_prod_a_b_prod_prod_prod$ )(?v4 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(fun_app$d (fun_app$e ?v2 ?v3 )(lCons$e ?v3 ?v4 )))(forall ((?v3 A_a_b_prod_a_b_prod_prod_prod$ )(?v4 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v5 A_a_b_prod_a_b_prod_prod_prod$ ))(=> (and (member$d ?v5 (lset$d ?v4 ))(fun_app$d (fun_app$e ?v2 ?v5 )?v4 ))(fun_app$d (fun_app$e ?v2 ?v5 )(lCons$e ?v3 ?v4 ))))))(fun_app$d (fun_app$e ?v2 ?v0 )?v1 ))):named a7 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod_a_a_b_prod_prod_llist_bool_fun_fun$ ))(=> (and (member$e ?v0 (lset$e ?v1 ))(and (forall ((?v3 A_a_b_prod_prod$ )(?v4 A_a_b_prod_prod_llist$ ))(fun_app$f (fun_app$g ?v2 ?v3 )(lCons$f ?v3 ?v4 )))(forall ((?v3 A_a_b_prod_prod$ )(?v4 A_a_b_prod_prod_llist$ )(?v5 A_a_b_prod_prod$ ))(=> (and (member$e ?v5 (lset$e ?v4 ))(fun_app$f (fun_app$g ?v2 ?v5 )?v4 ))(fun_app$f (fun_app$g ?v2 ?v5 )(lCons$f ?v3 ?v4 ))))))(fun_app$f (fun_app$g ?v2 ?v0 )?v1 ))):named a8 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod_a_a_prod_llist_bool_fun_fun$ ))(=> (and (member$f ?v0 (lset$f ?v1 ))(and (forall ((?v3 A_a_prod$ )(?v4 A_a_prod_llist$ ))(fun_app$h (fun_app$i ?v2 ?v3 )(lCons$g ?v3 ?v4 )))(forall ((?v3 A_a_prod$ )(?v4 A_a_prod_llist$ )(?v5 A_a_prod$ ))(=> (and (member$f ?v5 (lset$f ?v4 ))(fun_app$h (fun_app$i ?v2 ?v5 )?v4 ))(fun_app$h (fun_app$i ?v2 ?v5 )(lCons$g ?v3 ?v4 ))))))(fun_app$h (fun_app$i ?v2 ?v0 )?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ )(?v2 A_b_prod_a_b_prod_prod_a_b_prod_a_b_prod_prod_llist_bool_fun_fun$ ))(=> (and (member$g ?v0 (lset$g ?v1 ))(and (forall ((?v3 A_b_prod_a_b_prod_prod$ )(?v4 A_b_prod_a_b_prod_prod_llist$ ))(fun_app$j (fun_app$k ?v2 ?v3 )(lCons$h ?v3 ?v4 )))(forall ((?v3 A_b_prod_a_b_prod_prod$ )(?v4 A_b_prod_a_b_prod_prod_llist$ )(?v5 A_b_prod_a_b_prod_prod$ ))(=> (and (member$g ?v5 (lset$g ?v4 ))(fun_app$j (fun_app$k ?v2 ?v5 )?v4 ))(fun_app$j (fun_app$k ?v2 ?v5 )(lCons$h ?v3 ?v4 ))))))(fun_app$j (fun_app$k ?v2 ?v0 )?v1 ))):named a10 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B_b_llist_bool_fun_fun$ ))(=> (and (member$h ?v0 (lset$h ?v1 ))(and (forall ((?v3 B$ )(?v4 B_llist$ ))(fun_app$l (fun_app$m ?v2 ?v3 )(lCons$b ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_llist$ )(?v5 B$ ))(=> (and (member$h ?v5 (lset$h ?v4 ))(fun_app$l (fun_app$m ?v2 ?v5 )?v4 ))(fun_app$l (fun_app$m ?v2 ?v5 )(lCons$b ?v3 ?v4 ))))))(fun_app$l (fun_app$m ?v2 ?v0 )?v1 ))):named a11 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_a_llist_bool_fun_fun$ ))(=> (and (member$ ?v0 (lset$ ?v1 ))(and (forall ((?v3 A$ )(?v4 A_llist$ ))(fun_app$n (fun_app$o ?v2 ?v3 )(lCons$ ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_llist$ )(?v5 A$ ))(=> (and (member$ ?v5 (lset$ ?v4 ))(fun_app$n (fun_app$o ?v2 ?v5 )?v4 ))(fun_app$n (fun_app$o ?v2 ?v5 )(lCons$ ?v3 ?v4 ))))))(fun_app$n (fun_app$o ?v2 ?v0 )?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_a_b_prod_llist_bool_fun_fun$ ))(=> (and (member$a ?v0 (lset$a ?v1 ))(and (forall ((?v3 A_b_prod$ )(?v4 A_b_prod_llist$ ))(fun_app$p (fun_app$q ?v2 ?v3 )(lCons$a ?v3 ?v4 )))(forall ((?v3 A_b_prod$ )(?v4 A_b_prod_llist$ )(?v5 A_b_prod$ ))(=> (and (member$a ?v5 (lset$a ?v4 ))(fun_app$p (fun_app$q ?v2 ?v5 )?v4 ))(fun_app$p (fun_app$q ?v2 ?v5 )(lCons$a ?v3 ?v4 ))))))(fun_app$p (fun_app$q ?v2 ?v0 )?v1 ))):named a13 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ ))(=> (and (member$b ?v0 (lset$b ?v1 ))(and (forall ((?v2 B_b_prod_llist$ ))(=> (= ?v1 (lCons$c ?v0 ?v2 ))false ))(forall ((?v2 B_b_prod$ )(?v3 B_b_prod_llist$ ))(=> (and (= ?v1 (lCons$c ?v2 ?v3 ))(member$b ?v0 (lset$b ?v3 )))false ))))false )):named a14 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ ))(=> (and (member$c ?v0 (lset$c ?v1 ))(and (forall ((?v2 B_a_prod_llist$ ))(=> (= ?v1 (lCons$d ?v0 ?v2 ))false ))(forall ((?v2 B_a_prod$ )(?v3 B_a_prod_llist$ ))(=> (and (= ?v1 (lCons$d ?v2 ?v3 ))(member$c ?v0 (lset$c ?v3 )))false ))))false )):named a15 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (and (member$d ?v0 (lset$d ?v1 ))(and (forall ((?v2 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (= ?v1 (lCons$e ?v0 ?v2 ))false ))(forall ((?v2 A_a_b_prod_a_b_prod_prod_prod$ )(?v3 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (and (= ?v1 (lCons$e ?v2 ?v3 ))(member$d ?v0 (lset$d ?v3 )))false ))))false )):named a16 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ ))(=> (and (member$e ?v0 (lset$e ?v1 ))(and (forall ((?v2 A_a_b_prod_prod_llist$ ))(=> (= ?v1 (lCons$f ?v0 ?v2 ))false ))(forall ((?v2 A_a_b_prod_prod$ )(?v3 A_a_b_prod_prod_llist$ ))(=> (and (= ?v1 (lCons$f ?v2 ?v3 ))(member$e ?v0 (lset$e ?v3 )))false ))))false )):named a17 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ ))(=> (and (member$f ?v0 (lset$f ?v1 ))(and (forall ((?v2 A_a_prod_llist$ ))(=> (= ?v1 (lCons$g ?v0 ?v2 ))false ))(forall ((?v2 A_a_prod$ )(?v3 A_a_prod_llist$ ))(=> (and (= ?v1 (lCons$g ?v2 ?v3 ))(member$f ?v0 (lset$f ?v3 )))false ))))false )):named a18 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (member$g ?v0 (lset$g ?v1 ))(and (forall ((?v2 A_b_prod_a_b_prod_prod_llist$ ))(=> (= ?v1 (lCons$h ?v0 ?v2 ))false ))(forall ((?v2 A_b_prod_a_b_prod_prod$ )(?v3 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (= ?v1 (lCons$h ?v2 ?v3 ))(member$g ?v0 (lset$g ?v3 )))false ))))false )):named a19 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(=> (and (member$h ?v0 (lset$h ?v1 ))(and (forall ((?v2 B_llist$ ))(=> (= ?v1 (lCons$b ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_llist$ ))(=> (and (= ?v1 (lCons$b ?v2 ?v3 ))(member$h ?v0 (lset$h ?v3 )))false ))))false )):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(=> (and (member$ ?v0 (lset$ ?v1 ))(and (forall ((?v2 A_llist$ ))(=> (= ?v1 (lCons$ ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (= ?v1 (lCons$ ?v2 ?v3 ))(member$ ?v0 (lset$ ?v3 )))false ))))false )):named a21 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(=> (and (member$a ?v0 (lset$a ?v1 ))(and (forall ((?v2 A_b_prod_llist$ ))(=> (= ?v1 (lCons$a ?v0 ?v2 ))false ))(forall ((?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(=> (and (= ?v1 (lCons$a ?v2 ?v3 ))(member$a ?v0 (lset$a ?v3 )))false ))))false )):named a22 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod_llist_bool_fun$ ))(=> (and (member$b ?v0 (lset$b ?v1 ))(and (forall ((?v3 B_b_prod_llist$ ))(fun_app$ ?v2 (lCons$c ?v0 ?v3 )))(forall ((?v3 B_b_prod$ )(?v4 B_b_prod_llist$ ))(=> (and (member$b ?v0 (lset$b ?v4 ))(fun_app$ ?v2 ?v4 ))(fun_app$ ?v2 (lCons$c ?v3 ?v4 ))))))(fun_app$ ?v2 ?v1 ))):named a23 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod_llist_bool_fun$ ))(=> (and (member$c ?v0 (lset$c ?v1 ))(and (forall ((?v3 B_a_prod_llist$ ))(fun_app$b ?v2 (lCons$d ?v0 ?v3 )))(forall ((?v3 B_a_prod$ )(?v4 B_a_prod_llist$ ))(=> (and (member$c ?v0 (lset$c ?v4 ))(fun_app$b ?v2 ?v4 ))(fun_app$b ?v2 (lCons$d ?v3 ?v4 ))))))(fun_app$b ?v2 ?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v2 A_a_b_prod_a_b_prod_prod_prod_llist_bool_fun$ ))(=> (and (member$d ?v0 (lset$d ?v1 ))(and (forall ((?v3 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(fun_app$d ?v2 (lCons$e ?v0 ?v3 )))(forall ((?v3 A_a_b_prod_a_b_prod_prod_prod$ )(?v4 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (and (member$d ?v0 (lset$d ?v4 ))(fun_app$d ?v2 ?v4 ))(fun_app$d ?v2 (lCons$e ?v3 ?v4 ))))))(fun_app$d ?v2 ?v1 ))):named a25 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod_llist_bool_fun$ ))(=> (and (member$e ?v0 (lset$e ?v1 ))(and (forall ((?v3 A_a_b_prod_prod_llist$ ))(fun_app$f ?v2 (lCons$f ?v0 ?v3 )))(forall ((?v3 A_a_b_prod_prod$ )(?v4 A_a_b_prod_prod_llist$ ))(=> (and (member$e ?v0 (lset$e ?v4 ))(fun_app$f ?v2 ?v4 ))(fun_app$f ?v2 (lCons$f ?v3 ?v4 ))))))(fun_app$f ?v2 ?v1 ))):named a26 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod_llist_bool_fun$ ))(=> (and (member$f ?v0 (lset$f ?v1 ))(and (forall ((?v3 A_a_prod_llist$ ))(fun_app$h ?v2 (lCons$g ?v0 ?v3 )))(forall ((?v3 A_a_prod$ )(?v4 A_a_prod_llist$ ))(=> (and (member$f ?v0 (lset$f ?v4 ))(fun_app$h ?v2 ?v4 ))(fun_app$h ?v2 (lCons$g ?v3 ?v4 ))))))(fun_app$h ?v2 ?v1 ))):named a27 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ )(?v2 A_b_prod_a_b_prod_prod_llist_bool_fun$ ))(=> (and (member$g ?v0 (lset$g ?v1 ))(and (forall ((?v3 A_b_prod_a_b_prod_prod_llist$ ))(fun_app$j ?v2 (lCons$h ?v0 ?v3 )))(forall ((?v3 A_b_prod_a_b_prod_prod$ )(?v4 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (member$g ?v0 (lset$g ?v4 ))(fun_app$j ?v2 ?v4 ))(fun_app$j ?v2 (lCons$h ?v3 ?v4 ))))))(fun_app$j ?v2 ?v1 ))):named a28 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B_llist_bool_fun$ ))(=> (and (member$h ?v0 (lset$h ?v1 ))(and (forall ((?v3 B_llist$ ))(fun_app$l ?v2 (lCons$b ?v0 ?v3 )))(forall ((?v3 B$ )(?v4 B_llist$ ))(=> (and (member$h ?v0 (lset$h ?v4 ))(fun_app$l ?v2 ?v4 ))(fun_app$l ?v2 (lCons$b ?v3 ?v4 ))))))(fun_app$l ?v2 ?v1 ))):named a29 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_llist_bool_fun$ ))(=> (and (member$ ?v0 (lset$ ?v1 ))(and (forall ((?v3 A_llist$ ))(fun_app$n ?v2 (lCons$ ?v0 ?v3 )))(forall ((?v3 A$ )(?v4 A_llist$ ))(=> (and (member$ ?v0 (lset$ ?v4 ))(fun_app$n ?v2 ?v4 ))(fun_app$n ?v2 (lCons$ ?v3 ?v4 ))))))(fun_app$n ?v2 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist_bool_fun$ ))(=> (and (member$a ?v0 (lset$a ?v1 ))(and (forall ((?v3 A_b_prod_llist$ ))(fun_app$p ?v2 (lCons$a ?v0 ?v3 )))(forall ((?v3 A_b_prod$ )(?v4 A_b_prod_llist$ ))(=> (and (member$a ?v0 (lset$a ?v4 ))(fun_app$p ?v2 ?v4 ))(fun_app$p ?v2 (lCons$a ?v3 ?v4 ))))))(fun_app$p ?v2 ?v1 ))):named a31 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod_llist_bool_fun$ ))(=> (and (member$b ?v0 (lset$b ?v1 ))(and (forall ((?v3 B_b_prod_llist$ ))(fun_app$ ?v2 (lCons$c ?v0 ?v3 )))(forall ((?v3 B_b_prod$ )(?v4 B_b_prod_llist$ ))(=> (and (member$b ?v0 (lset$b ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$ ?v2 ?v4 )))(fun_app$ ?v2 (lCons$c ?v3 ?v4 ))))))(fun_app$ ?v2 ?v1 ))):named a32 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod_llist_bool_fun$ ))(=> (and (member$c ?v0 (lset$c ?v1 ))(and (forall ((?v3 B_a_prod_llist$ ))(fun_app$b ?v2 (lCons$d ?v0 ?v3 )))(forall ((?v3 B_a_prod$ )(?v4 B_a_prod_llist$ ))(=> (and (member$c ?v0 (lset$c ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$b ?v2 ?v4 )))(fun_app$b ?v2 (lCons$d ?v3 ?v4 ))))))(fun_app$b ?v2 ?v1 ))):named a33 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v2 A_a_b_prod_a_b_prod_prod_prod_llist_bool_fun$ ))(=> (and (member$d ?v0 (lset$d ?v1 ))(and (forall ((?v3 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(fun_app$d ?v2 (lCons$e ?v0 ?v3 )))(forall ((?v3 A_a_b_prod_a_b_prod_prod_prod$ )(?v4 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (and (member$d ?v0 (lset$d ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$d ?v2 ?v4 )))(fun_app$d ?v2 (lCons$e ?v3 ?v4 ))))))(fun_app$d ?v2 ?v1 ))):named a34 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod_llist_bool_fun$ ))(=> (and (member$e ?v0 (lset$e ?v1 ))(and (forall ((?v3 A_a_b_prod_prod_llist$ ))(fun_app$f ?v2 (lCons$f ?v0 ?v3 )))(forall ((?v3 A_a_b_prod_prod$ )(?v4 A_a_b_prod_prod_llist$ ))(=> (and (member$e ?v0 (lset$e ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$f ?v2 ?v4 )))(fun_app$f ?v2 (lCons$f ?v3 ?v4 ))))))(fun_app$f ?v2 ?v1 ))):named a35 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod_llist_bool_fun$ ))(=> (and (member$f ?v0 (lset$f ?v1 ))(and (forall ((?v3 A_a_prod_llist$ ))(fun_app$h ?v2 (lCons$g ?v0 ?v3 )))(forall ((?v3 A_a_prod$ )(?v4 A_a_prod_llist$ ))(=> (and (member$f ?v0 (lset$f ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$h ?v2 ?v4 )))(fun_app$h ?v2 (lCons$g ?v3 ?v4 ))))))(fun_app$h ?v2 ?v1 ))):named a36 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ )(?v2 A_b_prod_a_b_prod_prod_llist_bool_fun$ ))(=> (and (member$g ?v0 (lset$g ?v1 ))(and (forall ((?v3 A_b_prod_a_b_prod_prod_llist$ ))(fun_app$j ?v2 (lCons$h ?v0 ?v3 )))(forall ((?v3 A_b_prod_a_b_prod_prod$ )(?v4 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (member$g ?v0 (lset$g ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$j ?v2 ?v4 )))(fun_app$j ?v2 (lCons$h ?v3 ?v4 ))))))(fun_app$j ?v2 ?v1 ))):named a37 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B_llist_bool_fun$ ))(=> (and (member$h ?v0 (lset$h ?v1 ))(and (forall ((?v3 B_llist$ ))(fun_app$l ?v2 (lCons$b ?v0 ?v3 )))(forall ((?v3 B$ )(?v4 B_llist$ ))(=> (and (member$h ?v0 (lset$h ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$l ?v2 ?v4 )))(fun_app$l ?v2 (lCons$b ?v3 ?v4 ))))))(fun_app$l ?v2 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_llist_bool_fun$ ))(=> (and (member$ ?v0 (lset$ ?v1 ))(and (forall ((?v3 A_llist$ ))(fun_app$n ?v2 (lCons$ ?v0 ?v3 )))(forall ((?v3 A$ )(?v4 A_llist$ ))(=> (and (member$ ?v0 (lset$ ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$n ?v2 ?v4 )))(fun_app$n ?v2 (lCons$ ?v3 ?v4 ))))))(fun_app$n ?v2 ?v1 ))):named a39 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist_bool_fun$ ))(=> (and (member$a ?v0 (lset$a ?v1 ))(and (forall ((?v3 A_b_prod_llist$ ))(fun_app$p ?v2 (lCons$a ?v0 ?v3 )))(forall ((?v3 A_b_prod$ )(?v4 A_b_prod_llist$ ))(=> (and (member$a ?v0 (lset$a ?v4 ))(and (not (= ?v0 ?v3 ))(fun_app$p ?v2 ?v4 )))(fun_app$p ?v2 (lCons$a ?v3 ?v4 ))))))(fun_app$p ?v2 ?v1 ))):named a40 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ ))(=> (and (member$b ?v0 (lset$b ?v1 ))(and (forall ((?v2 B_b_prod_llist$ ))(=> (= ?v1 (lCons$c ?v0 ?v2 ))false ))(forall ((?v2 B_b_prod$ )(?v3 B_b_prod_llist$ ))(=> (and (= ?v1 (lCons$c ?v2 ?v3 ))(member$b ?v0 (lset$b ?v3 )))false ))))false )):named a41 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ ))(=> (and (member$c ?v0 (lset$c ?v1 ))(and (forall ((?v2 B_a_prod_llist$ ))(=> (= ?v1 (lCons$d ?v0 ?v2 ))false ))(forall ((?v2 B_a_prod$ )(?v3 B_a_prod_llist$ ))(=> (and (= ?v1 (lCons$d ?v2 ?v3 ))(member$c ?v0 (lset$c ?v3 )))false ))))false )):named a42 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (and (member$d ?v0 (lset$d ?v1 ))(and (forall ((?v2 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (= ?v1 (lCons$e ?v0 ?v2 ))false ))(forall ((?v2 A_a_b_prod_a_b_prod_prod_prod$ )(?v3 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (and (= ?v1 (lCons$e ?v2 ?v3 ))(member$d ?v0 (lset$d ?v3 )))false ))))false )):named a43 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ ))(=> (and (member$e ?v0 (lset$e ?v1 ))(and (forall ((?v2 A_a_b_prod_prod_llist$ ))(=> (= ?v1 (lCons$f ?v0 ?v2 ))false ))(forall ((?v2 A_a_b_prod_prod$ )(?v3 A_a_b_prod_prod_llist$ ))(=> (and (= ?v1 (lCons$f ?v2 ?v3 ))(member$e ?v0 (lset$e ?v3 )))false ))))false )):named a44 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ ))(=> (and (member$f ?v0 (lset$f ?v1 ))(and (forall ((?v2 A_a_prod_llist$ ))(=> (= ?v1 (lCons$g ?v0 ?v2 ))false ))(forall ((?v2 A_a_prod$ )(?v3 A_a_prod_llist$ ))(=> (and (= ?v1 (lCons$g ?v2 ?v3 ))(member$f ?v0 (lset$f ?v3 )))false ))))false )):named a45 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (member$g ?v0 (lset$g ?v1 ))(and (forall ((?v2 A_b_prod_a_b_prod_prod_llist$ ))(=> (= ?v1 (lCons$h ?v0 ?v2 ))false ))(forall ((?v2 A_b_prod_a_b_prod_prod$ )(?v3 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (= ?v1 (lCons$h ?v2 ?v3 ))(member$g ?v0 (lset$g ?v3 )))false ))))false )):named a46 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(=> (and (member$h ?v0 (lset$h ?v1 ))(and (forall ((?v2 B_llist$ ))(=> (= ?v1 (lCons$b ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_llist$ ))(=> (and (= ?v1 (lCons$b ?v2 ?v3 ))(member$h ?v0 (lset$h ?v3 )))false ))))false )):named a47 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(=> (and (member$ ?v0 (lset$ ?v1 ))(and (forall ((?v2 A_llist$ ))(=> (= ?v1 (lCons$ ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (= ?v1 (lCons$ ?v2 ?v3 ))(member$ ?v0 (lset$ ?v3 )))false ))))false )):named a48 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(=> (and (member$a ?v0 (lset$a ?v1 ))(and (forall ((?v2 A_b_prod_llist$ ))(=> (= ?v1 (lCons$a ?v0 ?v2 ))false ))(forall ((?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(=> (and (= ?v1 (lCons$a ?v2 ?v3 ))(member$a ?v0 (lset$a ?v3 )))false ))))false )):named a49 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod$ ))(=> (member$b ?v0 (lset$b ?v1 ))(member$b ?v0 (lset$b (lCons$c ?v2 ?v1 ))))):named a50 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod$ ))(=> (member$c ?v0 (lset$c ?v1 ))(member$c ?v0 (lset$c (lCons$d ?v2 ?v1 ))))):named a51 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v2 A_a_b_prod_a_b_prod_prod_prod$ ))(=> (member$d ?v0 (lset$d ?v1 ))(member$d ?v0 (lset$d (lCons$e ?v2 ?v1 ))))):named a52 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod$ ))(=> (member$e ?v0 (lset$e ?v1 ))(member$e ?v0 (lset$e (lCons$f ?v2 ?v1 ))))):named a53 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod$ ))(=> (member$f ?v0 (lset$f ?v1 ))(member$f ?v0 (lset$f (lCons$g ?v2 ?v1 ))))):named a54 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ )(?v2 A_b_prod_a_b_prod_prod$ ))(=> (member$g ?v0 (lset$g ?v1 ))(member$g ?v0 (lset$g (lCons$h ?v2 ?v1 ))))):named a55 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B$ ))(=> (member$h ?v0 (lset$h ?v1 ))(member$h ?v0 (lset$h (lCons$b ?v2 ?v1 ))))):named a56 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ ))(=> (member$ ?v0 (lset$ ?v1 ))(member$ ?v0 (lset$ (lCons$ ?v2 ?v1 ))))):named a57 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod$ ))(=> (member$a ?v0 (lset$a ?v1 ))(member$a ?v0 (lset$a (lCons$a ?v2 ?v1 ))))):named a58 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod$ ))(=> (member$b ?v0 (lset$b ?v1 ))(member$b ?v0 (lset$b (lCons$c ?v2 ?v1 ))))):named a59 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod$ ))(=> (member$c ?v0 (lset$c ?v1 ))(member$c ?v0 (lset$c (lCons$d ?v2 ?v1 ))))):named a60 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v2 A_a_b_prod_a_b_prod_prod_prod$ ))(=> (member$d ?v0 (lset$d ?v1 ))(member$d ?v0 (lset$d (lCons$e ?v2 ?v1 ))))):named a61 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod$ ))(=> (member$e ?v0 (lset$e ?v1 ))(member$e ?v0 (lset$e (lCons$f ?v2 ?v1 ))))):named a62 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod$ ))(=> (member$f ?v0 (lset$f ?v1 ))(member$f ?v0 (lset$f (lCons$g ?v2 ?v1 ))))):named a63 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ )(?v2 A_b_prod_a_b_prod_prod$ ))(=> (member$g ?v0 (lset$g ?v1 ))(member$g ?v0 (lset$g (lCons$h ?v2 ?v1 ))))):named a64 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B$ ))(=> (member$h ?v0 (lset$h ?v1 ))(member$h ?v0 (lset$h (lCons$b ?v2 ?v1 ))))):named a65 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ ))(=> (member$ ?v0 (lset$ ?v1 ))(member$ ?v0 (lset$ (lCons$ ?v2 ?v1 ))))):named a66 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod$ ))(=> (member$a ?v0 (lset$a ?v1 ))(member$a ?v0 (lset$a (lCons$a ?v2 ?v1 ))))):named a67 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ ))(member$b ?v0 (lset$b (lCons$c ?v0 ?v1 )))):named a68 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ ))(member$c ?v0 (lset$c (lCons$d ?v0 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(member$d ?v0 (lset$d (lCons$e ?v0 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ ))(member$e ?v0 (lset$e (lCons$f ?v0 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ ))(member$f ?v0 (lset$f (lCons$g ?v0 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(member$g ?v0 (lset$g (lCons$h ?v0 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(member$h ?v0 (lset$h (lCons$b ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(member$ ?v0 (lset$ (lCons$ ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(member$a ?v0 (lset$a (lCons$a ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ ))(member$b ?v0 (lset$b (lCons$c ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ ))(member$c ?v0 (lset$c (lCons$d ?v0 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(member$d ?v0 (lset$d (lCons$e ?v0 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ ))(member$e ?v0 (lset$e (lCons$f ?v0 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ ))(member$f ?v0 (lset$f (lCons$g ?v0 ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(member$g ?v0 (lset$g (lCons$h ?v0 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(member$h ?v0 (lset$h (lCons$b ?v0 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(member$ ?v0 (lset$ (lCons$ ?v0 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(member$a ?v0 (lset$a (lCons$a ?v0 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 B_b_prod$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod$ )(?v3 B_b_prod_llist$ ))(= (= (lCons$c ?v0 ?v1 )(lCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a86 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod$ )(?v3 B_a_prod_llist$ ))(= (= (lCons$d ?v0 ?v1 )(lCons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a87 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v2 A_a_b_prod_a_b_prod_prod_prod$ )(?v3 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(= (= (lCons$e ?v0 ?v1 )(lCons$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a88 ))
(assert (! (forall ((?v0 A_a_b_prod_prod$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod$ )(?v3 A_a_b_prod_prod_llist$ ))(= (= (lCons$f ?v0 ?v1 )(lCons$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a89 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod$ )(?v3 A_a_prod_llist$ ))(= (= (lCons$g ?v0 ?v1 )(lCons$g ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a90 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a91 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ )(?v2 A_b_prod_a_b_prod_prod$ )(?v3 A_b_prod_a_b_prod_prod_llist$ ))(= (= (lCons$h ?v0 ?v1 )(lCons$h ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a92 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B$ )(?v3 B_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a93 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a94 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(= (member$h ?v0 (lset$h ?v1 ))(fun_app$l (lmember$ ?v0 )?v1 ))):named a95 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(= (member$g ?v0 (lset$g ?v1 ))(fun_app$j (lmember$a ?v0 )?v1 ))):named a96 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(= (member$ ?v0 (lset$ ?v1 ))(fun_app$n (lmember$b ?v0 )?v1 ))):named a97 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(= (member$a ?v0 (lset$a ?v1 ))(fun_app$p (lmember$c ?v0 )?v1 ))):named a98 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(=> (member$h ?v0 (lset$h ?v1 ))(lsetp$ ?v1 ?v0 ))):named a99 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (member$g ?v0 (lset$g ?v1 ))(lsetp$a ?v1 ?v0 ))):named a100 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(=> (member$ ?v0 (lset$ ?v1 ))(lsetp$b ?v1 ?v0 ))):named a101 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(=> (member$a ?v0 (lset$a ?v1 ))(lsetp$c ?v1 ?v0 ))):named a102 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 B$ )(?v3 B_llist$ ))(! (= (lzip$ (lCons$ ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(lCons$a (pair$ ?v0 ?v2 )(lzip$ ?v1 ?v3 ))):pattern ((lzip$ (lCons$ ?v0 ?v1 )(lCons$b ?v2 ?v3 ))))):named a103 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(! (= (lzip$a (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(lCons$h (pair$c ?v0 ?v2 )(lzip$a ?v1 ?v3 ))):pattern ((lzip$a (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))))):named a104 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(! (= (lzip$b (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(lCons$g (pair$f ?v0 ?v2 )(lzip$b ?v1 ?v3 ))):pattern ((lzip$b (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))))):named a105 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 A$ )(?v3 A_llist$ ))(! (= (lzip$c (lCons$b ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(lCons$d (pair$b ?v0 ?v2 )(lzip$c ?v1 ?v3 ))):pattern ((lzip$c (lCons$b ?v0 ?v1 )(lCons$ ?v2 ?v3 ))))):named a106 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B$ )(?v3 B_llist$ ))(! (= (lzip$d (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(lCons$c (pair$a ?v0 ?v2 )(lzip$d ?v1 ?v3 ))):pattern ((lzip$d (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))))):named a107 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 A$ )(?v3 A_llist$ ))(! (= (lzip$e (lCons$a ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(lCons$i (pair$g ?v0 ?v2 )(lzip$e ?v1 ?v3 ))):pattern ((lzip$e (lCons$a ?v0 ?v1 )(lCons$ ?v2 ?v3 ))))):named a108 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ )(?v2 B$ )(?v3 B_llist$ ))(! (= (lzip$f (lCons$a ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(lCons$j (pair$h ?v0 ?v2 )(lzip$f ?v1 ?v3 ))):pattern ((lzip$f (lCons$a ?v0 ?v1 )(lCons$b ?v2 ?v3 ))))):named a109 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(! (= (lzip$g (lCons$ ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(lCons$f (pair$e ?v0 ?v2 )(lzip$g ?v1 ?v3 ))):pattern ((lzip$g (lCons$ ?v0 ?v1 )(lCons$a ?v2 ?v3 ))))):named a110 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(! (= (lzip$h (lCons$b ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(lCons$k (pair$i ?v0 ?v2 )(lzip$h ?v1 ?v3 ))):pattern ((lzip$h (lCons$b ?v0 ?v1 )(lCons$a ?v2 ?v3 ))))):named a111 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_b_prod_a_b_prod_prod$ )(?v3 A_b_prod_a_b_prod_prod_llist$ ))(! (= (lzip$i (lCons$ ?v0 ?v1 )(lCons$h ?v2 ?v3 ))(lCons$e (pair$d ?v0 ?v2 )(lzip$i ?v1 ?v3 ))):pattern ((lzip$i (lCons$ ?v0 ?v1 )(lCons$h ?v2 ?v3 ))))):named a112 ))
(check-sat )
;(get-unsat-core )
