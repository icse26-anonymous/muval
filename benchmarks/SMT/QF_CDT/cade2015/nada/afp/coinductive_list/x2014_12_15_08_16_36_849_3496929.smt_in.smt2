;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort Enat_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort Enat_enat_prod_bool_fun$ 0 )
(declare-sort Enat_enat_prod_enat_fun$ 0 )
(declare-sort Enat_enat_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_prod_bool_fun$ 0 )
(declare-sort A_llist_enat_prod_enat_fun$ 0 )
(declare-sort Enat_a_llist_prod_bool_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun$ 0 )
(declare-sort Enat_enat_prod_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_fun$ 0 )
(declare-sort A_llist_enat_prod_a_llist_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun$ 0 )
(declare-sort Enat_enat_prod_enat_enat_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort Enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_prod_a_llist_fun_enat_enat_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_prod_enat_fun_a_llist_enat_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_prod_enat_fun_enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_enat_prod_a_llist_fun_enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_enat_enat_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_enat_prod_enat_fun_a_llist_enat_prod_enat_fun_a_llist_enat_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun_enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-sort Enat_a_llist_prod$ 0)
(declare-sort Enat_enat_prod$ 0)
(declare-sort A_llist_enat_prod$ 0)
(declare-sort A_llist_a_llist_prod$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun fst$ (Enat_a_llist_prod$)Enat$)
(declare-fun snd$ (Enat_a_llist_prod$)A_llist$)
(declare-fun pair$ (Enat$ A_llist$ )Enat_a_llist_prod$)
(declare-fun fst$a (Enat_enat_prod$)Enat$)
(declare-fun snd$a (Enat_enat_prod$)Enat$)
(declare-fun pair$a (Enat$ Enat$ )Enat_enat_prod$)
(declare-fun fst$b (A_llist_enat_prod$)A_llist$)
(declare-fun snd$b (A_llist_enat_prod$)Enat$)
(declare-fun pair$b (A_llist$ Enat$ )A_llist_enat_prod$)
(declare-fun fst$c (A_llist_a_llist_prod$)A_llist$)
(declare-fun snd$c (A_llist_a_llist_prod$)A_llist$)
(declare-fun pair$c (A_llist$ A_llist$ )A_llist_a_llist_prod$)
(declare-fun uu$ ()Enat_enat_bool_fun_fun$ )
(declare-fun uua$ ()Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )
(declare-fun uub$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uuc$ ()A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ )
(declare-fun uud$ ()A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun uue$ ()Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )
(declare-fun uuf$ (Enat_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uug$ (A_llist_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uuh$ (Enat_enat_a_llist_fun_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uui$ (A_llist_enat_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uuj$ (Enat_a_llist_a_llist_fun_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uuk$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uul$ (Enat_enat_a_llist_fun_fun$ )Enat_enat_prod_enat_fun_enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun_fun$ )
(declare-fun uum$ (Enat_a_llist_a_llist_fun_fun$ )Enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_enat_enat_prod_a_llist_fun_fun_fun$ )
(declare-fun uun$ (Enat_enat_a_llist_fun_fun$ )A_llist_enat_prod_enat_fun_a_llist_enat_prod_enat_fun_a_llist_enat_prod_a_llist_fun_fun_fun$ )
(declare-fun uuo$ (A_llist_enat_a_llist_fun_fun$ )Enat_enat_prod_a_llist_fun_enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun_fun$ )
(declare-fun zero$ ()Enat$ )
(declare-fun ldrop$ ()Enat_a_llist_a_llist_fun_fun$ )
(declare-fun ltake$ ()Enat_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun less_eq$ ()Enat_enat_bool_fun_fun$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$a (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$b (A_llist_a_llist_prod_bool_fun$ A_llist_a_llist_prod$ )Bool )
(declare-fun fun_app$c (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$d (A_llist_enat_prod_bool_fun$ A_llist_enat_prod$ )Bool )
(declare-fun fun_app$e (A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ A_llist_enat_prod$ )A_llist_enat_prod_bool_fun$ )
(declare-fun fun_app$f (Enat_a_llist_prod_bool_fun$ Enat_a_llist_prod$ )Bool )
(declare-fun fun_app$g (Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_a_llist_prod$ )Enat_a_llist_prod_bool_fun$ )
(declare-fun fun_app$h (Enat_enat_prod_bool_fun$ Enat_enat_prod$ )Bool )
(declare-fun fun_app$i (Enat_enat_prod_enat_enat_prod_bool_fun_fun$ Enat_enat_prod$ )Enat_enat_prod_bool_fun$ )
(declare-fun fun_app$j (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$k (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(declare-fun fun_app$l (A_llist_a_llist_prod_a_llist_fun$ A_llist_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$m (A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$n (A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$o (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$p (A_llist_a_llist_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$q (Enat_a_llist_prod_a_llist_fun$ Enat_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$r (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$s (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$t (Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_enat_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$u (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$v (Enat_a_llist_fun$ Enat$ )A_llist$ )
(declare-fun fun_app$w (A_llist_enat_a_llist_fun_fun$ A_llist$ )Enat_a_llist_fun$ )
(declare-fun fun_app$x (Enat_a_llist_prod_enat_fun$ Enat_a_llist_prod$ )Enat$ )
(declare-fun fun_app$y (Enat_enat_prod_a_llist_fun$ Enat_enat_prod$ )A_llist$ )
(declare-fun fun_app$z (Enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun$ Enat_enat_prod_enat_fun$ )Enat_enat_prod_a_llist_fun$ )
(declare-fun monotone$ (Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun rel_prod$ (Enat_enat_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$ (Enat_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$aa (Enat_enat_prod_a_llist_fun_enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun_fun$ Enat_enat_prod_a_llist_fun$ )Enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun$ )
(declare-fun fun_app$ab (Enat_enat_prod_enat_fun$ Enat_enat_prod$ )Enat$ )
(declare-fun fun_app$ac (A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ A_llist_a_llist_prod_enat_fun$ )A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$ad (Enat_a_llist_a_llist_fun_fun$ Enat$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$ae (A_llist_a_llist_prod_enat_fun$ A_llist_a_llist_prod$ )Enat$ )
(declare-fun fun_app$af (Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ Enat_a_llist_prod_enat_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$ag (Enat_enat_prod_a_llist_fun_enat_enat_prod_a_llist_fun_fun$ Enat_enat_prod_a_llist_fun$ )Enat_enat_prod_a_llist_fun$ )
(declare-fun fun_app$ah (Enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_enat_enat_prod_a_llist_fun_fun_fun$ Enat_enat_prod_enat_fun$ )Enat_enat_prod_a_llist_fun_enat_enat_prod_a_llist_fun_fun$ )
(declare-fun fun_app$ai (A_llist_enat_prod_a_llist_fun$ A_llist_enat_prod$ )A_llist$ )
(declare-fun fun_app$aj (A_llist_enat_prod_enat_fun_a_llist_enat_prod_a_llist_fun_fun$ A_llist_enat_prod_enat_fun$ )A_llist_enat_prod_a_llist_fun$ )
(declare-fun fun_app$ak (A_llist_enat_prod_enat_fun_a_llist_enat_prod_enat_fun_a_llist_enat_prod_a_llist_fun_fun_fun$ A_llist_enat_prod_enat_fun$ )A_llist_enat_prod_enat_fun_a_llist_enat_prod_a_llist_fun_fun$ )
(declare-fun fun_app$al (Enat_enat_a_llist_fun_fun$ Enat$ )Enat_a_llist_fun$ )
(declare-fun fun_app$am (A_llist_enat_prod_enat_fun$ A_llist_enat_prod$ )Enat$ )
(declare-fun fun_app$an (Enat_a_llist_prod_enat_fun_enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ Enat_a_llist_prod_enat_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$ao (Enat_enat_prod_enat_fun_enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun_fun$ Enat_enat_prod_enat_fun$ )Enat_enat_prod_enat_fun_enat_enat_prod_a_llist_fun_fun$ )
(declare-fun monotone$a (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ A_llist_a_llist_prod_enat_fun$ )Bool )
(declare-fun monotone$b (Enat_enat_prod_enat_enat_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ Enat_enat_prod_a_llist_fun$ )Bool )
(declare-fun monotone$c (A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_enat_prod_a_llist_fun$ )Bool )
(declare-fun monotone$d (Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ Enat_a_llist_prod_enat_fun$ )Bool )
(declare-fun monotone$e (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$f (Enat_enat_prod_enat_enat_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ Enat_enat_prod_enat_fun$ )Bool )
(declare-fun monotone$g (A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ A_llist_enat_prod_enat_fun$ )Bool )
(declare-fun rel_prod$a (Enat_enat_bool_fun_fun$ Enat_enat_bool_fun_fun$ )Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )
(declare-fun rel_prod$b (A_llist_a_llist_bool_fun_fun$ Enat_enat_bool_fun_fun$ )A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ )
(declare-fun rel_prod$c (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$a (Enat_enat_a_llist_fun_fun$ )Enat_enat_prod_a_llist_fun$ )
(declare-fun case_prod$b (A_llist_enat_a_llist_fun_fun$ )A_llist_enat_prod_a_llist_fun$ )
(declare-fun case_prod$c (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun lstrict_prefix$ (A_llist$ A_llist$ )Bool )
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$ (fun_app$a uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ ))(! (= (fun_app$b (fun_app$c uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uud$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_enat_prod$ )(?v1 A_llist_enat_prod$ ))(! (= (fun_app$d (fun_app$e uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uuc$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Enat_a_llist_prod$ )(?v1 Enat_a_llist_prod$ ))(! (= (fun_app$f (fun_app$g uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uue$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_prod$ ))(! (= (fun_app$h (fun_app$i uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uua$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(! (= (fun_app$j (fun_app$k uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uu$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist_a_llist_prod_a_llist_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$l (fun_app$m (fun_app$n (uuk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$p ?v0 (fun_app$l ?v1 ?v3 ))(fun_app$l ?v2 ?v3 ))):pattern ((fun_app$l (fun_app$m (fun_app$n (uuk$ ?v0 )?v1 )?v2 )?v3 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$q (fun_app$r (fun_app$s (uug$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$p ?v0 (fun_app$q ?v1 ?v3 ))(fun_app$q ?v2 ?v3 ))):pattern ((fun_app$q (fun_app$r (fun_app$s (uug$ ?v0 )?v1 )?v2 )?v3 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod_enat_fun$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$q (fun_app$t (fun_app$u (uui$ ?v0 )?v1 )?v2 )?v3 )(fun_app$v (fun_app$w ?v0 (fun_app$q ?v1 ?v3 ))(fun_app$x ?v2 ?v3 ))):pattern ((fun_app$q (fun_app$t (fun_app$u (uui$ ?v0 )?v1 )?v2 )?v3 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 Enat_enat_prod_a_llist_fun$ )(?v2 Enat_enat_prod_enat_fun$ )(?v3 Enat_enat_prod$ ))(! (= (fun_app$y (fun_app$z (fun_app$aa (uuo$ ?v0 )?v1 )?v2 )?v3 )(fun_app$v (fun_app$w ?v0 (fun_app$y ?v1 ?v3 ))(fun_app$ab ?v2 ?v3 ))):pattern ((fun_app$y (fun_app$z (fun_app$aa (uuo$ ?v0 )?v1 )?v2 )?v3 )))):named a9 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$l (fun_app$m (fun_app$ac (uuj$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$ad ?v0 (fun_app$ae ?v1 ?v3 ))(fun_app$l ?v2 ?v3 ))):pattern ((fun_app$l (fun_app$m (fun_app$ac (uuj$ ?v0 )?v1 )?v2 )?v3 )))):named a10 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_enat_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$q (fun_app$r (fun_app$af (uuf$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$ad ?v0 (fun_app$x ?v1 ?v3 ))(fun_app$q ?v2 ?v3 ))):pattern ((fun_app$q (fun_app$r (fun_app$af (uuf$ ?v0 )?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 Enat_enat_prod_enat_fun$ )(?v2 Enat_enat_prod_a_llist_fun$ )(?v3 Enat_enat_prod$ ))(! (= (fun_app$y (fun_app$ag (fun_app$ah (uum$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$ad ?v0 (fun_app$ab ?v1 ?v3 ))(fun_app$y ?v2 ?v3 ))):pattern ((fun_app$y (fun_app$ag (fun_app$ah (uum$ ?v0 )?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 A_llist_enat_prod_enat_fun$ )(?v2 A_llist_enat_prod_enat_fun$ )(?v3 A_llist_enat_prod$ ))(! (= (fun_app$ai (fun_app$aj (fun_app$ak (uun$ ?v0 )?v1 )?v2 )?v3 )(fun_app$v (fun_app$al ?v0 (fun_app$am ?v1 ?v3 ))(fun_app$am ?v2 ?v3 ))):pattern ((fun_app$ai (fun_app$aj (fun_app$ak (uun$ ?v0 )?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_enat_fun$ )(?v2 Enat_a_llist_prod_enat_fun$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$q (fun_app$t (fun_app$an (uuh$ ?v0 )?v1 )?v2 )?v3 )(fun_app$v (fun_app$al ?v0 (fun_app$x ?v1 ?v3 ))(fun_app$x ?v2 ?v3 ))):pattern ((fun_app$q (fun_app$t (fun_app$an (uuh$ ?v0 )?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 Enat_enat_prod_enat_fun$ )(?v2 Enat_enat_prod_enat_fun$ )(?v3 Enat_enat_prod$ ))(! (= (fun_app$y (fun_app$z (fun_app$ao (uul$ ?v0 )?v1 )?v2 )?v3 )(fun_app$v (fun_app$al ?v0 (fun_app$ab ?v1 ?v3 ))(fun_app$ab ?v2 ?v3 ))):pattern ((fun_app$y (fun_app$z (fun_app$ao (uul$ ?v0 )?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (not (monotone$ (rel_prod$ uu$ lprefix$ )lprefix$ (case_prod$ ldrop$ ))):named a16 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$ (fun_app$a lprefix$ ?v0 )?v0 )):named a17 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$ (fun_app$a lprefix$ ?v0 )?v0 )):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$ ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$ ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$ ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$ ?v2 )?v1 ))(or (fun_app$ (fun_app$a lprefix$ ?v0 )?v2 )(fun_app$ (fun_app$a lprefix$ ?v2 )?v0 )))):named a21 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$ ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$ ?v1 )?v2 ))(fun_app$ (fun_app$a lprefix$ ?v0 )?v2 ))):named a22 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$ ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$ ?v1 )?v2 ))(fun_app$ (fun_app$a lprefix$ ?v0 )?v2 ))):named a23 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (lstrict_prefix$ ?v0 ?v1 )(and (fun_app$ (fun_app$a lprefix$ ?v0 )?v1 )(not (= ?v0 ?v1 )))):pattern ((lstrict_prefix$ ?v0 ?v1 )))):named a24 ))
(assert (! (monotone$ (rel_prod$ less_eq$ lprefix$ )lprefix$ (case_prod$ ltake$ )):named a25 ))
(assert (! (= (rel_prod$a uu$ uu$ )uua$ ):named a26 ))
(assert (! (= (rel_prod$b uub$ uu$ )uuc$ ):named a27 ))
(assert (! (= (rel_prod$c uub$ uub$ )uud$ ):named a28 ))
(assert (! (= (rel_prod$ uu$ uub$ )uue$ ):named a29 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_enat_fun$ ))(= (monotone$a ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(fun_app$j (fun_app$k ?v1 (fun_app$ae ?v2 ?v3 ))(fun_app$ae ?v2 ?v4 )))))):named a30 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_enat_prod_a_llist_fun$ ))(= (monotone$b ?v0 ?v1 ?v2 )(forall ((?v3 Enat_enat_prod$ )(?v4 Enat_enat_prod$ ))(=> (fun_app$h (fun_app$i ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$y ?v2 ?v3 ))(fun_app$y ?v2 ?v4 )))))):named a31 ))
(assert (! (forall ((?v0 A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_enat_prod_a_llist_fun$ ))(= (monotone$c ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_enat_prod$ )(?v4 A_llist_enat_prod$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$ai ?v2 ?v3 ))(fun_app$ai ?v2 ?v4 )))))):named a32 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_prod_enat_fun$ ))(= (monotone$d ?v0 ?v1 ?v2 )(forall ((?v3 Enat_a_llist_prod$ )(?v4 Enat_a_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$j (fun_app$k ?v1 (fun_app$x ?v2 ?v3 ))(fun_app$x ?v2 ?v4 )))))):named a33 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ ))(= (monotone$e ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$l ?v2 ?v3 ))(fun_app$l ?v2 ?v4 )))))):named a34 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ ))(= (monotone$ ?v0 ?v1 ?v2 )(forall ((?v3 Enat_a_llist_prod$ )(?v4 Enat_a_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$q ?v2 ?v3 ))(fun_app$q ?v2 ?v4 )))))):named a35 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_enat_fun$ ))(=> (forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(fun_app$j (fun_app$k ?v1 (fun_app$ae ?v2 ?v3 ))(fun_app$ae ?v2 ?v4 ))))(monotone$a ?v0 ?v1 ?v2 ))):named a36 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_enat_prod_a_llist_fun$ ))(=> (forall ((?v3 Enat_enat_prod$ )(?v4 Enat_enat_prod$ ))(=> (fun_app$h (fun_app$i ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$y ?v2 ?v3 ))(fun_app$y ?v2 ?v4 ))))(monotone$b ?v0 ?v1 ?v2 ))):named a37 ))
(assert (! (forall ((?v0 A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_enat_prod_a_llist_fun$ ))(=> (forall ((?v3 A_llist_enat_prod$ )(?v4 A_llist_enat_prod$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$ai ?v2 ?v3 ))(fun_app$ai ?v2 ?v4 ))))(monotone$c ?v0 ?v1 ?v2 ))):named a38 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_prod_enat_fun$ ))(=> (forall ((?v3 Enat_a_llist_prod$ )(?v4 Enat_a_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$j (fun_app$k ?v1 (fun_app$x ?v2 ?v3 ))(fun_app$x ?v2 ?v4 ))))(monotone$d ?v0 ?v1 ?v2 ))):named a39 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ ))(=> (forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$l ?v2 ?v3 ))(fun_app$l ?v2 ?v4 ))))(monotone$e ?v0 ?v1 ?v2 ))):named a40 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ ))(=> (forall ((?v3 Enat_a_llist_prod$ )(?v4 Enat_a_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$q ?v2 ?v3 ))(fun_app$q ?v2 ?v4 ))))(monotone$ ?v0 ?v1 ?v2 ))):named a41 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_enat_fun$ )(?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (and (monotone$a ?v0 ?v1 ?v2 )(fun_app$b (fun_app$c ?v0 ?v3 )?v4 ))(fun_app$j (fun_app$k ?v1 (fun_app$ae ?v2 ?v3 ))(fun_app$ae ?v2 ?v4 )))):named a42 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_enat_prod_a_llist_fun$ )(?v3 Enat_enat_prod$ )(?v4 Enat_enat_prod$ ))(=> (and (monotone$b ?v0 ?v1 ?v2 )(fun_app$h (fun_app$i ?v0 ?v3 )?v4 ))(fun_app$ (fun_app$a ?v1 (fun_app$y ?v2 ?v3 ))(fun_app$y ?v2 ?v4 )))):named a43 ))
(assert (! (forall ((?v0 A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_enat_prod_a_llist_fun$ )(?v3 A_llist_enat_prod$ )(?v4 A_llist_enat_prod$ ))(=> (and (monotone$c ?v0 ?v1 ?v2 )(fun_app$d (fun_app$e ?v0 ?v3 )?v4 ))(fun_app$ (fun_app$a ?v1 (fun_app$ai ?v2 ?v3 ))(fun_app$ai ?v2 ?v4 )))):named a44 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_prod_enat_fun$ )(?v3 Enat_a_llist_prod$ )(?v4 Enat_a_llist_prod$ ))(=> (and (monotone$d ?v0 ?v1 ?v2 )(fun_app$f (fun_app$g ?v0 ?v3 )?v4 ))(fun_app$j (fun_app$k ?v1 (fun_app$x ?v2 ?v3 ))(fun_app$x ?v2 ?v4 )))):named a45 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ )(?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (and (monotone$e ?v0 ?v1 ?v2 )(fun_app$b (fun_app$c ?v0 ?v3 )?v4 ))(fun_app$ (fun_app$a ?v1 (fun_app$l ?v2 ?v3 ))(fun_app$l ?v2 ?v4 )))):named a46 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_a_llist_prod$ )(?v4 Enat_a_llist_prod$ ))(=> (and (monotone$ ?v0 ?v1 ?v2 )(fun_app$f (fun_app$g ?v0 ?v3 )?v4 ))(fun_app$ (fun_app$a ?v1 (fun_app$q ?v2 ?v3 ))(fun_app$q ?v2 ?v4 )))):named a47 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_prod$ )(?v2 Enat_enat_a_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$y (case_prod$a ?v2 )?v0 )(fun_app$y (case_prod$a ?v2 )?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_llist_enat_prod$ )(?v1 A_llist_enat_prod$ )(?v2 A_llist_enat_a_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ai (case_prod$b ?v2 )?v0 )(fun_app$ai (case_prod$b ?v2 )?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$l (case_prod$c ?v2 )?v0 )(fun_app$l (case_prod$c ?v2 )?v1 )))):named a50 ))
(assert (! (forall ((?v0 Enat_a_llist_prod$ )(?v1 Enat_a_llist_prod$ )(?v2 Enat_a_llist_a_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$q (case_prod$ ?v2 )?v0 )(fun_app$q (case_prod$ ?v2 )?v1 )))):named a51 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_enat_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$ (rel_prod$ ?v0 ?v1 )lprefix$ (case_prod$ ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$r (fun_app$af (uuf$ ?v2 )?v4 )?v5 )))):named a52 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_a_llist_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$c ?v0 ?v1 )lprefix$ (case_prod$c ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$r (fun_app$s (uug$ ?v2 )?v4 )?v5 )))):named a53 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_enat_fun$ )(?v5 Enat_a_llist_prod_enat_fun$ ))(=> (and (monotone$b (rel_prod$a ?v0 ?v1 )lprefix$ (case_prod$a ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$d ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$t (fun_app$an (uuh$ ?v2 )?v4 )?v5 )))):named a54 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_a_llist_fun$ )(?v5 Enat_a_llist_prod_enat_fun$ ))(=> (and (monotone$c (rel_prod$b ?v0 ?v1 )lprefix$ (case_prod$b ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$d ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$t (fun_app$u (uui$ ?v2 )?v4 )?v5 )))):named a55 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_enat_fun$ )(?v5 A_llist_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$ (rel_prod$ ?v0 ?v1 )lprefix$ (case_prod$ ?v2 ))(and (monotone$a ?v3 ?v0 ?v4 )(monotone$e ?v3 ?v1 ?v5 )))(monotone$e ?v3 lprefix$ (fun_app$m (fun_app$ac (uuj$ ?v2 )?v4 )?v5 )))):named a56 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_a_llist_fun$ )(?v5 A_llist_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$c ?v0 ?v1 )lprefix$ (case_prod$c ?v2 ))(and (monotone$e ?v3 ?v0 ?v4 )(monotone$e ?v3 ?v1 ?v5 )))(monotone$e ?v3 lprefix$ (fun_app$m (fun_app$n (uuk$ ?v2 )?v4 )?v5 )))):named a57 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v4 Enat_enat_prod_enat_fun$ )(?v5 Enat_enat_prod_enat_fun$ ))(=> (and (monotone$b (rel_prod$a ?v0 ?v1 )lprefix$ (case_prod$a ?v2 ))(and (monotone$f ?v3 ?v0 ?v4 )(monotone$f ?v3 ?v1 ?v5 )))(monotone$b ?v3 lprefix$ (fun_app$z (fun_app$ao (uul$ ?v2 )?v4 )?v5 )))):named a58 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v4 Enat_enat_prod_enat_fun$ )(?v5 Enat_enat_prod_a_llist_fun$ ))(=> (and (monotone$ (rel_prod$ ?v0 ?v1 )lprefix$ (case_prod$ ?v2 ))(and (monotone$f ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$b ?v3 lprefix$ (fun_app$ag (fun_app$ah (uum$ ?v2 )?v4 )?v5 )))):named a59 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ )(?v4 A_llist_enat_prod_enat_fun$ )(?v5 A_llist_enat_prod_enat_fun$ ))(=> (and (monotone$b (rel_prod$a ?v0 ?v1 )lprefix$ (case_prod$a ?v2 ))(and (monotone$g ?v3 ?v0 ?v4 )(monotone$g ?v3 ?v1 ?v5 )))(monotone$c ?v3 lprefix$ (fun_app$aj (fun_app$ak (uun$ ?v2 )?v4 )?v5 )))):named a60 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_a_llist_fun_fun$ )(?v3 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v4 Enat_enat_prod_a_llist_fun$ )(?v5 Enat_enat_prod_enat_fun$ ))(=> (and (monotone$c (rel_prod$b ?v0 ?v1 )lprefix$ (case_prod$b ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$f ?v3 ?v1 ?v5 )))(monotone$b ?v3 lprefix$ (fun_app$z (fun_app$aa (uuo$ ?v2 )?v4 )?v5 )))):named a61 ))
(assert (! (forall ((?v0 A_llist$ ))(= (fun_app$o (fun_app$ad ldrop$ zero$ )?v0 )?v0 )):named a62 ))
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$o (fun_app$ad ldrop$ ?v0 )lNil$ )lNil$ ):pattern ((fun_app$ad ldrop$ ?v0 )))):named a63 ))
(check-sat )
;(get-unsat-core )
