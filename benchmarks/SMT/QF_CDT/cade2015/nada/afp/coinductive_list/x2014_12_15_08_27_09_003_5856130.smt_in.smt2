;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_a_prod_llist_set$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_a_prod$ 0)
(declare-fun fst$ (A_a_prod$)A$)
(declare-fun snd$ (A_a_prod$)A$)
(declare-fun pair$ (A$ A$ )A_a_prod$)
(declare-sort A_a_prod_llist$ 0)
(declare-fun lNil$a ()A_a_prod_llist$)
(declare-fun lhd$a (A_a_prod_llist$)A_a_prod$)
(declare-fun ltl$a (A_a_prod_llist$)A_a_prod_llist$)
(declare-fun lCons$a (A_a_prod$ A_a_prod_llist$ )A_a_prod_llist$)
(declare-sort A_a_a_prod_prod$ 0)
(declare-fun fst$a (A_a_a_prod_prod$)A$)
(declare-fun snd$a (A_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$a (A$ A_a_prod$ )A_a_a_prod_prod$)
(declare-sort A_a_a_prod_prod_llist$ 0)
(declare-fun lNil$b ()A_a_a_prod_prod_llist$)
(declare-fun lhd$b (A_a_a_prod_prod_llist$)A_a_a_prod_prod$)
(declare-fun ltl$b (A_a_a_prod_prod_llist$)A_a_a_prod_prod_llist$)
(declare-fun lCons$b (A_a_a_prod_prod$ A_a_a_prod_prod_llist$ )A_a_a_prod_prod_llist$)
(declare-sort A_a_prod_a_prod$ 0)
(declare-fun fst$b (A_a_prod_a_prod$)A_a_prod$)
(declare-fun snd$b (A_a_prod_a_prod$)A$)
(declare-fun pair$b (A_a_prod$ A$ )A_a_prod_a_prod$)
(declare-sort A_a_prod_a_prod_llist$ 0)
(declare-fun lNil$c ()A_a_prod_a_prod_llist$)
(declare-fun lhd$c (A_a_prod_a_prod_llist$)A_a_prod_a_prod$)
(declare-fun ltl$c (A_a_prod_a_prod_llist$)A_a_prod_a_prod_llist$)
(declare-fun lCons$c (A_a_prod_a_prod$ A_a_prod_a_prod_llist$ )A_a_prod_a_prod_llist$)
(declare-sort A_a_prod_a_a_prod_prod$ 0)
(declare-fun fst$c (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun snd$c (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$c (A_a_prod$ A_a_prod$ )A_a_prod_a_a_prod_prod$)
(declare-sort A_a_prod_a_a_prod_prod_llist$ 0)
(declare-fun lNil$d ()A_a_prod_a_a_prod_prod_llist$)
(declare-fun lhd$d (A_a_prod_a_a_prod_prod_llist$)A_a_prod_a_a_prod_prod$)
(declare-fun ltl$d (A_a_prod_a_a_prod_prod_llist$)A_a_prod_a_a_prod_prod_llist$)
(declare-fun lCons$d (A_a_prod_a_a_prod_prod$ A_a_prod_a_a_prod_prod_llist$ )A_a_prod_a_a_prod_prod_llist$)
(declare-sort A_a_a_prod_prod_a_prod$ 0)
(declare-fun fst$d (A_a_a_prod_prod_a_prod$)A_a_a_prod_prod$)
(declare-fun snd$d (A_a_a_prod_prod_a_prod$)A$)
(declare-fun pair$d (A_a_a_prod_prod$ A$ )A_a_a_prod_prod_a_prod$)
(declare-sort A_a_a_prod_prod_a_prod_llist$ 0)
(declare-fun lNil$e ()A_a_a_prod_prod_a_prod_llist$)
(declare-fun lhd$e (A_a_a_prod_prod_a_prod_llist$)A_a_a_prod_prod_a_prod$)
(declare-fun ltl$e (A_a_a_prod_prod_a_prod_llist$)A_a_a_prod_prod_a_prod_llist$)
(declare-fun lCons$e (A_a_a_prod_prod_a_prod$ A_a_a_prod_prod_a_prod_llist$ )A_a_a_prod_prod_a_prod_llist$)
(declare-sort A_a_prod_a_prod_a_prod$ 0)
(declare-fun fst$e (A_a_prod_a_prod_a_prod$)A_a_prod_a_prod$)
(declare-fun snd$e (A_a_prod_a_prod_a_prod$)A$)
(declare-fun pair$e (A_a_prod_a_prod$ A$ )A_a_prod_a_prod_a_prod$)
(declare-sort A_a_prod_a_prod_a_prod_llist$ 0)
(declare-fun lNil$f ()A_a_prod_a_prod_a_prod_llist$)
(declare-fun lhd$f (A_a_prod_a_prod_a_prod_llist$)A_a_prod_a_prod_a_prod$)
(declare-fun ltl$f (A_a_prod_a_prod_a_prod_llist$)A_a_prod_a_prod_a_prod_llist$)
(declare-fun lCons$f (A_a_prod_a_prod_a_prod$ A_a_prod_a_prod_a_prod_llist$ )A_a_prod_a_prod_a_prod_llist$)
(declare-sort A_a_a_a_prod_prod_prod$ 0)
(declare-fun fst$f (A_a_a_a_prod_prod_prod$)A$)
(declare-fun snd$f (A_a_a_a_prod_prod_prod$)A_a_a_prod_prod$)
(declare-fun pair$f (A$ A_a_a_prod_prod$ )A_a_a_a_prod_prod_prod$)
(declare-sort A_a_a_a_prod_prod_prod_llist$ 0)
(declare-fun lNil$g ()A_a_a_a_prod_prod_prod_llist$)
(declare-fun lhd$g (A_a_a_a_prod_prod_prod_llist$)A_a_a_a_prod_prod_prod$)
(declare-fun ltl$g (A_a_a_a_prod_prod_prod_llist$)A_a_a_a_prod_prod_prod_llist$)
(declare-fun lCons$g (A_a_a_a_prod_prod_prod$ A_a_a_a_prod_prod_prod_llist$ )A_a_a_a_prod_prod_prod_llist$)
(declare-sort A_a_a_prod_a_prod_prod$ 0)
(declare-fun fst$g (A_a_a_prod_a_prod_prod$)A$)
(declare-fun snd$g (A_a_a_prod_a_prod_prod$)A_a_prod_a_prod$)
(declare-fun pair$g (A$ A_a_prod_a_prod$ )A_a_a_prod_a_prod_prod$)
(declare-sort A_a_a_prod_a_prod_prod_llist$ 0)
(declare-fun lNil$h ()A_a_a_prod_a_prod_prod_llist$)
(declare-fun lhd$h (A_a_a_prod_a_prod_prod_llist$)A_a_a_prod_a_prod_prod$)
(declare-fun ltl$h (A_a_a_prod_a_prod_prod_llist$)A_a_a_prod_a_prod_prod_llist$)
(declare-fun lCons$h (A_a_a_prod_a_prod_prod$ A_a_a_prod_a_prod_prod_llist$ )A_a_a_prod_a_prod_prod_llist$)
(declare-sort A_a_prod_a_a_prod_prod_a_prod$ 0)
(declare-fun fst$h (A_a_prod_a_a_prod_prod_a_prod$)A_a_prod_a_a_prod_prod$)
(declare-fun snd$h (A_a_prod_a_a_prod_prod_a_prod$)A$)
(declare-fun pair$h (A_a_prod_a_a_prod_prod$ A$ )A_a_prod_a_a_prod_prod_a_prod$)
(declare-sort A_a_prod_a_a_prod_prod_a_prod_llist$ 0)
(declare-fun lNil$i ()A_a_prod_a_a_prod_prod_a_prod_llist$)
(declare-fun lhd$i (A_a_prod_a_a_prod_prod_a_prod_llist$)A_a_prod_a_a_prod_prod_a_prod$)
(declare-fun ltl$i (A_a_prod_a_a_prod_prod_a_prod_llist$)A_a_prod_a_a_prod_prod_a_prod_llist$)
(declare-fun lCons$i (A_a_prod_a_a_prod_prod_a_prod$ A_a_prod_a_a_prod_prod_a_prod_llist$ )A_a_prod_a_a_prod_prod_a_prod_llist$)
(declare-sort A_a_a_prod_prod_a_a_prod_prod$ 0)
(declare-fun fst$i (A_a_a_prod_prod_a_a_prod_prod$)A_a_a_prod_prod$)
(declare-fun snd$i (A_a_a_prod_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$i (A_a_a_prod_prod$ A_a_prod$ )A_a_a_prod_prod_a_a_prod_prod$)
(declare-sort A_a_a_prod_prod_a_a_prod_prod_llist$ 0)
(declare-fun lNil$j ()A_a_a_prod_prod_a_a_prod_prod_llist$)
(declare-fun lhd$j (A_a_a_prod_prod_a_a_prod_prod_llist$)A_a_a_prod_prod_a_a_prod_prod$)
(declare-fun ltl$j (A_a_a_prod_prod_a_a_prod_prod_llist$)A_a_a_prod_prod_a_a_prod_prod_llist$)
(declare-fun lCons$j (A_a_a_prod_prod_a_a_prod_prod$ A_a_a_prod_prod_a_a_prod_prod_llist$ )A_a_a_prod_prod_a_a_prod_prod_llist$)
(declare-fun ya$ ()A_llist_set$ )
(declare-fun lSup$ (A_llist_set$ )A_llist$ )
(declare-fun lzip$ (A_llist$ A_llist$ )A_a_prod_llist$ )
(declare-fun chain$ (A_llist_a_llist_bool_fun_fun$ A_llist_set$ )Bool )
(declare-fun lSup$a (A_a_prod_llist_set$ )A_a_prod_llist$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun lzip$a (A_a_prod_llist$ A_llist$ )A_a_prod_a_prod_llist$ )
(declare-fun lzip$b (A_llist$ A_a_prod_llist$ )A_a_a_prod_prod_llist$ )
(declare-fun lzip$c (A_a_prod_llist$ A_a_prod_llist$ )A_a_prod_a_a_prod_prod_llist$ )
(declare-fun lzip$d (A_a_a_prod_prod_llist$ A_llist$ )A_a_a_prod_prod_a_prod_llist$ )
(declare-fun lzip$e (A_a_prod_a_prod_llist$ A_llist$ )A_a_prod_a_prod_a_prod_llist$ )
(declare-fun lzip$f (A_llist$ A_a_a_prod_prod_llist$ )A_a_a_a_prod_prod_prod_llist$ )
(declare-fun lzip$g (A_llist$ A_a_prod_a_prod_llist$ )A_a_a_prod_a_prod_prod_llist$ )
(declare-fun lzip$h (A_a_prod_a_a_prod_prod_llist$ A_llist$ )A_a_prod_a_a_prod_prod_a_prod_llist$ )
(declare-fun lzip$i (A_a_a_prod_prod_llist$ A_a_prod_llist$ )A_a_a_prod_prod_a_a_prod_prod_llist$ )
(declare-fun lnull$a (A_a_prod_llist$ )Bool )
(declare-fun lnull$b (A_a_a_prod_prod_llist$ )Bool )
(declare-fun lnull$c (A_a_prod_a_prod_llist$ )Bool )
(declare-fun lnull$d (A_a_prod_a_a_prod_prod_llist$ )Bool )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun thesis$ ()Bool )
(declare-fun lappend$ (A_a_a_prod_prod_llist$ A_a_a_prod_prod_llist$ )A_a_a_prod_prod_llist$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun member$a (A_a_prod_llist$ A_a_prod_llist_set$ )Bool )
(declare-fun lappend$a (A_a_prod_a_prod_llist$ A_a_prod_a_prod_llist$ )A_a_prod_a_prod_llist$ )
(declare-fun lappend$b (A_a_prod_a_a_prod_prod_llist$ A_a_prod_a_a_prod_prod_llist$ )A_a_prod_a_a_prod_prod_llist$ )
(declare-fun lappend$c (A_a_prod_llist$ A_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun lappend$d (A_llist$ A_llist$ )A_llist$ )
(assert (! (not thesis$ ):named a0 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (member$ ?v0 ya$ )(and (not (lnull$ ?v0 ))(not (lnull$ (ltl$ ?v0 )))))thesis$ )):named a1 ))
(assert (! (not (lnull$ (lSup$ ya$ ))):named a2 ))
(assert (! (not (lnull$ (ltl$ (lSup$ ya$ )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a4 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a5 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a7 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$a ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$a ?v1 ))))false ))false )):named a8 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 ))))false ))false )):named a9 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (and (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (or (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (or (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a11 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(=> (and (=> (lnull$a ?v0 )false )(=> (not (lnull$a ?v0 ))false ))false )):named a12 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (lnull$ ?v0 )false )(=> (not (lnull$ ?v0 ))false ))false )):named a13 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ ))(=> (lnull$b ?v0 )(lnull$b (ltl$b ?v0 )))):named a14 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ ))(=> (lnull$c ?v0 )(lnull$c (ltl$c ?v0 )))):named a15 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ ))(=> (lnull$d ?v0 )(lnull$d (ltl$d ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(=> (lnull$a ?v0 )(lnull$a (ltl$a ?v0 )))):named a17 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (lnull$ ?v0 )(lnull$ (ltl$ ?v0 )))):named a18 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(= (lnull$a (lSup$a ?v0 ))(forall ((?v1 A_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$a ?v1 ))))):named a19 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (lnull$ (lSup$ ?v0 ))(forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 ))))):named a20 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(= (not (lnull$a (lSup$a ?v0 )))(not (forall ((?v1 A_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$a ?v1 )))))):named a21 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (not (lnull$ (lSup$ ?v0 )))(not (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 )))))):named a22 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(=> (forall ((?v1 A_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$a ?v1 )))(lnull$a (lSup$a ?v0 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 )))(lnull$ (lSup$ ?v0 )))):named a24 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(=> (not (forall ((?v1 A_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$a ?v1 ))))(not (lnull$a (lSup$a ?v0 ))))):named a25 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (not (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 ))))(not (lnull$ (lSup$ ?v0 ))))):named a26 ))
(assert (! (chain$ lprefix$ ya$ ):named a27 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(= (ltl$b (lappend$ ?v0 ?v1 ))(ite (lnull$b ?v0 )(ltl$b ?v1 )(lappend$ (ltl$b ?v0 )?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (ltl$c (lappend$a ?v0 ?v1 ))(ite (lnull$c ?v0 )(ltl$c ?v1 )(lappend$a (ltl$c ?v0 )?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (ltl$d (lappend$b ?v0 ?v1 ))(ite (lnull$d ?v0 )(ltl$d ?v1 )(lappend$b (ltl$d ?v0 )?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(= (ltl$a (lappend$c ?v0 ?v1 ))(ite (lnull$a ?v0 )(ltl$a ?v1 )(lappend$c (ltl$a ?v0 )?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (ltl$ (lappend$d ?v0 ?v1 ))(ite (lnull$ ?v0 )(ltl$ ?v1 )(lappend$d (ltl$ ?v0 )?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))(= (ltl$a (lzip$ ?v0 ?v1 ))(lzip$ (ltl$ ?v0 )(ltl$ ?v1 ))))):named a33 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$a ?v0 ))(not (lnull$ ?v1 )))(= (ltl$c (lzip$a ?v0 ?v1 ))(lzip$a (ltl$a ?v0 )(ltl$ ?v1 ))))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$a ?v1 )))(= (ltl$b (lzip$b ?v0 ?v1 ))(lzip$b (ltl$ ?v0 )(ltl$a ?v1 ))))):named a35 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))(= (ltl$d (lzip$c ?v0 ?v1 ))(lzip$c (ltl$a ?v0 )(ltl$a ?v1 ))))):named a36 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$b ?v0 ))(not (lnull$ ?v1 )))(= (ltl$e (lzip$d ?v0 ?v1 ))(lzip$d (ltl$b ?v0 )(ltl$ ?v1 ))))):named a37 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$c ?v0 ))(not (lnull$ ?v1 )))(= (ltl$f (lzip$e ?v0 ?v1 ))(lzip$e (ltl$c ?v0 )(ltl$ ?v1 ))))):named a38 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$b ?v1 )))(= (ltl$g (lzip$f ?v0 ?v1 ))(lzip$f (ltl$ ?v0 )(ltl$b ?v1 ))))):named a39 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$c ?v1 )))(= (ltl$h (lzip$g ?v0 ?v1 ))(lzip$g (ltl$ ?v0 )(ltl$c ?v1 ))))):named a40 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$d ?v0 ))(not (lnull$ ?v1 )))(= (ltl$i (lzip$h ?v0 ?v1 ))(lzip$h (ltl$d ?v0 )(ltl$ ?v1 ))))):named a41 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (not (lnull$b ?v0 ))(not (lnull$a ?v1 )))(= (ltl$j (lzip$i ?v0 ?v1 ))(lzip$i (ltl$b ?v0 )(ltl$a ?v1 ))))):named a42 ))
(check-sat )
;(get-unsat-core )
