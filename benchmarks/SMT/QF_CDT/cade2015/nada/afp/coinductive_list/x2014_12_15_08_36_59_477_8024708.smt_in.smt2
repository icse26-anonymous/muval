;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort Nat_a_fun$ 0 )
(declare-sort Nat_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort B_llist_set$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Nat_a_llist_fun$ 0 )
(declare-sort Nat_b_llist_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort B_llist_b_llist_fun$ 0 )
(declare-sort A_a_llist_bool_fun_fun$ 0 )
(declare-sort A_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_bool_fun_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort B_a_llist_bool_fun_fun$ 0 )
(declare-sort B_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_bool_fun_fun$ 0 )
(declare-sort B_llist_b_bool_fun_fun$ 0 )
(declare-sort B_llist_llist_bool_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_fun$ 0 )
(declare-sort B_llist_llist_b_llist_llist_fun$ 0 )
(declare-sort A_llist_a_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_b_llist_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_llist_b_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort B_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort B_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort B_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()B_llist$)
(declare-fun lhd$a (B_llist$)B$)
(declare-fun ltl$a (B_llist$)B_llist$)
(declare-fun lCons$a (B$ B_llist$ )B_llist$)
(declare-fun lNil$b ()A_llist_llist$)
(declare-fun lhd$b (A_llist_llist$)A_llist$)
(declare-fun ltl$b (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$b (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$c ()B_llist_llist$)
(declare-fun lhd$c (B_llist_llist$)B_llist$)
(declare-fun ltl$c (B_llist_llist$)B_llist_llist$)
(declare-fun lCons$c (B_llist$ B_llist_llist$ )B_llist_llist$)
(declare-fun lNil$d ()A_llist_llist_llist$)
(declare-fun lhd$d (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$d (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$d (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$e ()B_llist_llist_llist$)
(declare-fun lhd$e (B_llist_llist_llist$)B_llist_llist$)
(declare-fun ltl$e (B_llist_llist_llist$)B_llist_llist_llist$)
(declare-fun lCons$e (B_llist_llist$ B_llist_llist_llist$ )B_llist_llist_llist$)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun a$ ()A_b_bool_fun_fun$ )
(declare-fun p$ ()A_bool_fun$ )
(declare-fun q$ ()B_bool_fun$ )
(declare-fun uu$ ()Bool_bool_bool_fun_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun ys$ ()B_llist$ )
(declare-fun uua$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uub$ ()A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uuc$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uud$ ()B_llist_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun uue$ ()B_b_bool_fun_fun$ )
(declare-fun uuf$ ()A_a_bool_fun_fun$ )
(declare-fun lset$ (A_llist_llist$ )A_llist_set$ )
(declare-fun lset$a (B_llist_llist$ )B_llist_set$ )
(declare-fun lset$b (B_llist$ )B_set$ )
(declare-fun lset$c (A_llist$ )A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun transp$ (A_llist_a_llist_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (B_llist_llist_bool_fun$ B_llist_llist$ )Bool )
(declare-fun lconcat$ (A_llist_llist$ )A_llist$ )
(declare-fun llength$ (A_llist$ )Enat$ )
(declare-fun lprefix$ (A_llist_llist$ A_llist_llist$ )Bool )
(declare-fun member$a (B_llist$ B_llist_set$ )Bool )
(declare-fun member$b (B$ B_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun rel_fun$ (A_b_bool_fun_fun$ Bool_bool_bool_fun_fun$ A_bool_fun$ B_bool_fun$ )Bool )
(declare-fun transp$a (B_llist_b_llist_bool_fun_fun$ )Bool )
(declare-fun transp$b (B_b_bool_fun_fun$ )Bool )
(declare-fun transp$c (A_a_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (B_llist_llist_b_llist_llist_bool_fun_fun$ B_llist_llist$ )B_llist_llist_bool_fun$ )
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_llist_a_llist_llist_bool_fun_fun$ A_llist_llist$ )A_llist_llist_bool_fun$ )
(declare-fun fun_app$d (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$e (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$f (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$g (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$h (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$i (Bool_bool_bool_fun_fun$ Bool )Bool_bool_fun$ )
(declare-fun fun_app$j (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$k (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$l (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$m (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$n (A_llist_b_llist_bool_fun_fun$ A_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$o (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$p (B_llist_b_llist_fun$ B_llist$ )B_llist$ )
(declare-fun fun_app$q (A_llist_llist_b_llist_llist_bool_fun_fun$ A_llist_llist$ )B_llist_llist_bool_fun$ )
(declare-fun fun_app$r (B_llist_a_llist_bool_fun_fun$ B_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$s (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$t (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$u (A_llist_llist_a_llist_llist_fun$ A_llist_llist$ )A_llist_llist$ )
(declare-fun fun_app$v (B_llist_llist_b_llist_llist_fun$ B_llist_llist$ )B_llist_llist$ )
(declare-fun fun_app$w (A_llist_a_llist_llist_bool_fun_fun$ A_llist$ )A_llist_llist_bool_fun$ )
(declare-fun fun_app$x (A_a_llist_bool_fun_fun$ A$ )A_llist_bool_fun$ )
(declare-fun fun_app$y (A_llist_b_llist_llist_bool_fun_fun$ A_llist$ )B_llist_llist_bool_fun$ )
(declare-fun fun_app$z (A_b_llist_bool_fun_fun$ A$ )B_llist_bool_fun$ )
(declare-fun lconcat$a (B_llist_llist$ )B_llist$ )
(declare-fun lconcat$b (A_llist_llist_llist$ )A_llist_llist$ )
(declare-fun lconcat$c (B_llist_llist_llist$ )B_llist_llist$ )
(declare-fun llength$a (B_llist$ )Enat$ )
(declare-fun llength$b (A_llist_llist$ )Enat$ )
(declare-fun llength$c (B_llist_llist$ )Enat$ )
(declare-fun lprefix$a (B_llist_llist$ B_llist_llist$ )Bool )
(declare-fun lprefix$b (A_llist$ )A_llist_bool_fun$ )
(declare-fun lprefix$c (B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$aa (B_llist_a_llist_llist_bool_fun_fun$ B_llist$ )A_llist_llist_bool_fun$ )
(declare-fun fun_app$ab (B_a_llist_bool_fun_fun$ B$ )A_llist_bool_fun$ )
(declare-fun fun_app$ac (B_llist_b_llist_llist_bool_fun_fun$ B_llist$ )B_llist_llist_bool_fun$ )
(declare-fun fun_app$ad (B_b_llist_bool_fun_fun$ B$ )B_llist_bool_fun$ )
(declare-fun fun_app$ae (A_llist_llist_a_llist_bool_fun_fun$ A_llist_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$af (A_llist_a_bool_fun_fun$ A_llist$ )A_bool_fun$ )
(declare-fun fun_app$ag (Nat_a_fun$ Nat$ )A$ )
(declare-fun fun_app$ah (Nat_b_fun$ Nat$ )B$ )
(declare-fun fun_app$ai (Nat_a_llist_fun$ Nat$ )A_llist$ )
(declare-fun fun_app$aj (Nat_b_llist_fun$ Nat$ )B_llist$ )
(declare-fun fun_app$ak (B_llist_llist_b_llist_bool_fun_fun$ B_llist_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$al (A_llist_llist_b_llist_bool_fun_fun$ A_llist_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$am (B_llist_llist_a_llist_bool_fun_fun$ B_llist_llist$ )A_llist_bool_fun$ )
(declare-fun inf_llist$ (Nat_a_fun$ )A_llist$ )
(declare-fun inf_llist$a (Nat_b_fun$ )B_llist$ )
(declare-fun inf_llist$b (Nat_a_llist_fun$ )A_llist_llist$ )
(declare-fun inf_llist$c (Nat_b_llist_fun$ )B_llist_llist$ )
(declare-fun ldropWhile$ (A_bool_fun$ A_llist$ )A_llist$ )
(declare-fun llist_all2$ (A_b_bool_fun_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun ltakeWhile$ (A_bool_fun$ )A_llist_a_llist_fun$ )
(declare-fun ldropWhile$a (B_bool_fun$ B_llist$ )B_llist$ )
(declare-fun ldropWhile$b (A_llist_bool_fun$ A_llist_llist$ )A_llist_llist$ )
(declare-fun ldropWhile$c (B_llist_bool_fun$ B_llist_llist$ )B_llist_llist$ )
(declare-fun llist_all2$a (A_llist_a_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (B_llist_b_llist_bool_fun_fun$ )B_llist_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$c (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$d (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$e (A_llist_llist_b_llist_llist_bool_fun_fun$ A_llist_llist_llist$ B_llist_llist_llist$ )Bool )
(declare-fun llist_all2$f (B_llist_a_llist_bool_fun_fun$ B_llist_llist$ A_llist_llist$ )Bool )
(declare-fun llist_all2$g (B_a_bool_fun_fun$ )B_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$h (A_llist_b_llist_bool_fun_fun$ )A_llist_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$i (A_a_llist_bool_fun_fun$ )A_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$j (A_b_llist_bool_fun_fun$ )A_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$k (B_a_llist_bool_fun_fun$ )B_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$l (B_b_llist_bool_fun_fun$ )B_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$m (A_llist_a_bool_fun_fun$ )A_llist_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$n (B_llist_b_bool_fun_fun$ )B_llist_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$o (A_llist_b_bool_fun_fun$ )A_llist_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$p (B_llist_a_bool_fun_fun$ )B_llist_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$q (A_llist_a_llist_llist_bool_fun_fun$ A_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun llist_all2$r (A_llist_b_llist_llist_bool_fun_fun$ A_llist_llist$ B_llist_llist_llist$ )Bool )
(declare-fun llist_all2$s (B_llist_a_llist_llist_bool_fun_fun$ B_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun llist_all2$t (B_llist_b_llist_llist_bool_fun_fun$ B_llist_llist$ B_llist_llist_llist$ )Bool )
(declare-fun llist_all2$u (A_llist_llist_a_llist_bool_fun_fun$ A_llist_llist_llist$ A_llist_llist$ )Bool )
(declare-fun ltakeWhile$a (B_bool_fun$ )B_llist_b_llist_fun$ )
(declare-fun ltakeWhile$b (A_llist_bool_fun$ )A_llist_llist_a_llist_llist_fun$ )
(declare-fun ltakeWhile$c (B_llist_bool_fun$ )B_llist_llist_b_llist_llist_fun$ )
(assert (! (forall ((?v0 B_llist_llist$ )(?v1 B_llist_llist$ ))(! (= (fun_app$ (fun_app$a uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uud$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(! (= (fun_app$b (fun_app$c uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uub$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uuc$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$g uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uua$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(! (= (fun_app$h (fun_app$i uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uu$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$j (fun_app$k uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uue$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$l (fun_app$m uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uuf$ ?v0 )?v1 )))):named a6 ))
(assert (! (not (fun_app$d (fun_app$n (llist_all2$ a$ )(fun_app$o (ltakeWhile$ p$ )xs$ ))(fun_app$p (ltakeWhile$a q$ )ys$ ))):named a7 ))
(assert (! (fun_app$d (fun_app$n (llist_all2$ a$ )xs$ )ys$ ):named a8 ))
(assert (! (rel_fun$ a$ uu$ p$ q$ ):named a9 ))
(assert (! (= (llist_all2$a uua$ )uub$ ):named a10 ))
(assert (! (= (llist_all2$b uuc$ )uud$ ):named a11 ))
(assert (! (= (llist_all2$c uue$ )uuc$ ):named a12 ))
(assert (! (= (llist_all2$d uuf$ )uua$ ):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 B_llist_llist_llist$ )(?v3 A_llist_llist_b_llist_llist_bool_fun_fun$ ))(=> (and (llist_all2$e ?v0 ?v1 ?v2 )(forall ((?v4 A_llist_llist$ )(?v5 B_llist_llist$ ))(=> (fun_app$ (fun_app$q ?v0 ?v4 )?v5 )(fun_app$ (fun_app$q ?v3 ?v4 )?v5 ))))(llist_all2$e ?v3 ?v1 ?v2 ))):named a14 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_a_llist_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (fun_app$f (fun_app$g ?v0 ?v4 )?v5 )(fun_app$f (fun_app$g ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$c (llist_all2$a ?v3 )?v1 )?v2 ))):named a15 ))
(assert (! (forall ((?v0 B_llist_a_llist_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 A_llist_llist$ )(?v3 B_llist_a_llist_bool_fun_fun$ ))(=> (and (llist_all2$f ?v0 ?v1 ?v2 )(forall ((?v4 B_llist$ )(?v5 A_llist$ ))(=> (fun_app$f (fun_app$r ?v0 ?v4 )?v5 )(fun_app$f (fun_app$r ?v3 ?v4 )?v5 ))))(llist_all2$f ?v3 ?v1 ?v2 ))):named a16 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 B_llist_llist$ )(?v3 B_llist_b_llist_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 B_llist$ )(?v5 B_llist$ ))(=> (fun_app$d (fun_app$e ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$a (llist_all2$b ?v3 )?v1 )?v2 ))):named a17 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (fun_app$j (fun_app$k ?v0 ?v4 )?v5 )(fun_app$j (fun_app$k ?v3 ?v4 )?v5 ))))(fun_app$d (fun_app$e (llist_all2$c ?v3 )?v1 )?v2 ))):named a18 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$r (llist_all2$g ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$l (fun_app$s ?v0 ?v4 )?v5 )(fun_app$l (fun_app$s ?v3 ?v4 )?v5 ))))(fun_app$f (fun_app$r (llist_all2$g ?v3 )?v1 )?v2 ))):named a19 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$g (llist_all2$d ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (fun_app$l (fun_app$m ?v0 ?v4 )?v5 )(fun_app$l (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$f (fun_app$g (llist_all2$d ?v3 )?v1 )?v2 ))):named a20 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist$ )(?v3 A_llist_b_llist_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$q (llist_all2$h ?v0 )?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 B_llist$ ))(=> (fun_app$d (fun_app$n ?v0 ?v4 )?v5 )(fun_app$d (fun_app$n ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$q (llist_all2$h ?v3 )?v1 )?v2 ))):named a21 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$n (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$j (fun_app$t ?v0 ?v4 )?v5 )(fun_app$j (fun_app$t ?v3 ?v4 )?v5 ))))(fun_app$d (fun_app$n (llist_all2$ ?v3 )?v1 )?v2 ))):named a22 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_bool_fun$ )(?v4 A_bool_fun$ ))(=> (and (fun_app$f (fun_app$g (llist_all2$d ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 A$ ))(=> (fun_app$l (fun_app$m ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$l ?v4 ?v6 )))))(= (llength$ (fun_app$o (ltakeWhile$ ?v3 )?v1 ))(llength$ (fun_app$o (ltakeWhile$ ?v4 )?v2 ))))):named a23 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_bool_fun$ )(?v4 A_bool_fun$ ))(=> (and (fun_app$f (fun_app$r (llist_all2$g ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 A$ ))(=> (fun_app$l (fun_app$s ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$l ?v4 ?v6 )))))(= (llength$a (fun_app$p (ltakeWhile$a ?v3 )?v1 ))(llength$ (fun_app$o (ltakeWhile$ ?v4 )?v2 ))))):named a24 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_bool_fun$ )(?v4 B_bool_fun$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 B$ ))(=> (fun_app$j (fun_app$k ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$j ?v4 ?v6 )))))(= (llength$a (fun_app$p (ltakeWhile$a ?v3 )?v1 ))(llength$a (fun_app$p (ltakeWhile$a ?v4 )?v2 ))))):named a25 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_bool_fun$ )(?v4 B_bool_fun$ ))(=> (and (fun_app$d (fun_app$n (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 B$ ))(=> (fun_app$j (fun_app$t ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$j ?v4 ?v6 )))))(= (llength$ (fun_app$o (ltakeWhile$ ?v3 )?v1 ))(llength$a (fun_app$p (ltakeWhile$a ?v4 )?v2 ))))):named a26 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist$ )(?v3 A_llist_bool_fun$ )(?v4 B_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$q (llist_all2$h ?v0 )?v1 )?v2 )(forall ((?v5 A_llist$ )(?v6 B_llist$ ))(=> (fun_app$d (fun_app$n ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(= (llength$b (fun_app$u (ltakeWhile$b ?v3 )?v1 ))(llength$c (fun_app$v (ltakeWhile$c ?v4 )?v2 ))))):named a27 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_llist$ )(?v3 A_bool_fun$ )(?v4 A_llist_bool_fun$ ))(=> (and (fun_app$b (fun_app$w (llist_all2$i ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 A_llist$ ))(=> (fun_app$f (fun_app$x ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$f ?v4 ?v6 )))))(= (llength$ (fun_app$o (ltakeWhile$ ?v3 )?v1 ))(llength$b (fun_app$u (ltakeWhile$b ?v4 )?v2 ))))):named a28 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist_llist$ )(?v3 A_bool_fun$ )(?v4 B_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$y (llist_all2$j ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 B_llist$ ))(=> (fun_app$d (fun_app$z ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(= (llength$ (fun_app$o (ltakeWhile$ ?v3 )?v1 ))(llength$c (fun_app$v (ltakeWhile$c ?v4 )?v2 ))))):named a29 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist_llist$ )(?v3 B_bool_fun$ )(?v4 A_llist_bool_fun$ ))(=> (and (fun_app$b (fun_app$aa (llist_all2$k ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 A_llist$ ))(=> (fun_app$f (fun_app$ab ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$f ?v4 ?v6 )))))(= (llength$a (fun_app$p (ltakeWhile$a ?v3 )?v1 ))(llength$b (fun_app$u (ltakeWhile$b ?v4 )?v2 ))))):named a30 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist_llist$ )(?v3 B_bool_fun$ )(?v4 B_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$ac (llist_all2$l ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 B_llist$ ))(=> (fun_app$d (fun_app$ad ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(= (llength$a (fun_app$p (ltakeWhile$a ?v3 )?v1 ))(llength$c (fun_app$v (ltakeWhile$c ?v4 )?v2 ))))):named a31 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_bool_fun$ )(?v4 A_bool_fun$ ))(=> (and (fun_app$f (fun_app$ae (llist_all2$m ?v0 )?v1 )?v2 )(forall ((?v5 A_llist$ )(?v6 A$ ))(=> (fun_app$l (fun_app$af ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$l ?v4 ?v6 )))))(= (llength$b (fun_app$u (ltakeWhile$b ?v3 )?v1 ))(llength$ (fun_app$o (ltakeWhile$ ?v4 )?v2 ))))):named a32 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 Nat_a_fun$ )(?v2 Nat_b_fun$ ))(= (fun_app$d (fun_app$n (llist_all2$ ?v0 )(inf_llist$ ?v1 ))(inf_llist$a ?v2 ))(forall ((?v3 Nat$ ))(fun_app$j (fun_app$t ?v0 (fun_app$ag ?v1 ?v3 ))(fun_app$ah ?v2 ?v3 ))))):named a33 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 Nat_b_fun$ )(?v2 Nat_b_fun$ ))(= (fun_app$d (fun_app$e (llist_all2$c ?v0 )(inf_llist$a ?v1 ))(inf_llist$a ?v2 ))(forall ((?v3 Nat$ ))(fun_app$j (fun_app$k ?v0 (fun_app$ah ?v1 ?v3 ))(fun_app$ah ?v2 ?v3 ))))):named a34 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 Nat_b_fun$ )(?v2 Nat_a_fun$ ))(= (fun_app$f (fun_app$r (llist_all2$g ?v0 )(inf_llist$a ?v1 ))(inf_llist$ ?v2 ))(forall ((?v3 Nat$ ))(fun_app$l (fun_app$s ?v0 (fun_app$ah ?v1 ?v3 ))(fun_app$ag ?v2 ?v3 ))))):named a35 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 Nat_a_fun$ )(?v2 Nat_a_fun$ ))(= (fun_app$f (fun_app$g (llist_all2$d ?v0 )(inf_llist$ ?v1 ))(inf_llist$ ?v2 ))(forall ((?v3 Nat$ ))(fun_app$l (fun_app$m ?v0 (fun_app$ag ?v1 ?v3 ))(fun_app$ag ?v2 ?v3 ))))):named a36 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 Nat_a_llist_fun$ )(?v2 Nat_b_llist_fun$ ))(= (fun_app$ (fun_app$q (llist_all2$h ?v0 )(inf_llist$b ?v1 ))(inf_llist$c ?v2 ))(forall ((?v3 Nat$ ))(fun_app$d (fun_app$n ?v0 (fun_app$ai ?v1 ?v3 ))(fun_app$aj ?v2 ?v3 ))))):named a37 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 Nat_a_fun$ )(?v2 Nat_a_llist_fun$ ))(= (fun_app$b (fun_app$w (llist_all2$i ?v0 )(inf_llist$ ?v1 ))(inf_llist$b ?v2 ))(forall ((?v3 Nat$ ))(fun_app$f (fun_app$x ?v0 (fun_app$ag ?v1 ?v3 ))(fun_app$ai ?v2 ?v3 ))))):named a38 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 Nat_a_fun$ )(?v2 Nat_b_llist_fun$ ))(= (fun_app$ (fun_app$y (llist_all2$j ?v0 )(inf_llist$ ?v1 ))(inf_llist$c ?v2 ))(forall ((?v3 Nat$ ))(fun_app$d (fun_app$z ?v0 (fun_app$ag ?v1 ?v3 ))(fun_app$aj ?v2 ?v3 ))))):named a39 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 Nat_b_fun$ )(?v2 Nat_a_llist_fun$ ))(= (fun_app$b (fun_app$aa (llist_all2$k ?v0 )(inf_llist$a ?v1 ))(inf_llist$b ?v2 ))(forall ((?v3 Nat$ ))(fun_app$f (fun_app$ab ?v0 (fun_app$ah ?v1 ?v3 ))(fun_app$ai ?v2 ?v3 ))))):named a40 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 Nat_b_fun$ )(?v2 Nat_b_llist_fun$ ))(= (fun_app$ (fun_app$ac (llist_all2$l ?v0 )(inf_llist$a ?v1 ))(inf_llist$c ?v2 ))(forall ((?v3 Nat$ ))(fun_app$d (fun_app$ad ?v0 (fun_app$ah ?v1 ?v3 ))(fun_app$aj ?v2 ?v3 ))))):named a41 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 Nat_a_llist_fun$ )(?v2 Nat_a_fun$ ))(= (fun_app$f (fun_app$ae (llist_all2$m ?v0 )(inf_llist$b ?v1 ))(inf_llist$ ?v2 ))(forall ((?v3 Nat$ ))(fun_app$l (fun_app$af ?v0 (fun_app$ai ?v1 ?v3 ))(fun_app$ag ?v2 ?v3 ))))):named a42 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(! (= (fun_app$u (ltakeWhile$b ?v0 )lNil$b )lNil$b ):pattern ((ltakeWhile$b ?v0 )))):named a43 ))
(assert (! (forall ((?v0 B_llist_bool_fun$ ))(! (= (fun_app$v (ltakeWhile$c ?v0 )lNil$c )lNil$c ):pattern ((ltakeWhile$c ?v0 )))):named a44 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(! (= (fun_app$o (ltakeWhile$ ?v0 )lNil$ )lNil$ ):pattern ((ltakeWhile$ ?v0 )))):named a45 ))
(assert (! (forall ((?v0 B_bool_fun$ ))(! (= (fun_app$p (ltakeWhile$a ?v0 )lNil$a )lNil$a ):pattern ((ltakeWhile$a ?v0 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v2 )?v3 )(transp$ ?v0 )))(fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v3 ))):named a47 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 B_llist_llist$ )(?v3 B_llist_llist$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v2 )(and (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v2 )?v3 )(transp$a ?v0 )))(fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v3 ))):named a48 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_llist$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v2 )?v3 )(transp$b ?v0 )))(fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v3 ))):named a49 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (and (fun_app$f (fun_app$g (llist_all2$d ?v0 )?v1 )?v2 )(and (fun_app$f (fun_app$g (llist_all2$d ?v0 )?v2 )?v3 )(transp$c ?v0 )))(fun_app$f (fun_app$g (llist_all2$d ?v0 )?v1 )?v3 ))):named a50 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$d (fun_app$n (llist_all2$ ?v0 )?v1 )lNil$a )(= ?v1 lNil$ )):pattern ((fun_app$n (llist_all2$ ?v0 )?v1 )))):named a51 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )lNil$a )(= ?v1 lNil$a )):pattern ((fun_app$e (llist_all2$c ?v0 )?v1 )))):named a52 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$f (fun_app$r (llist_all2$g ?v0 )?v1 )lNil$ )(= ?v1 lNil$a )):pattern ((fun_app$r (llist_all2$g ?v0 )?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$g (llist_all2$d ?v0 )?v1 )lNil$ )(= ?v1 lNil$ )):pattern ((fun_app$g (llist_all2$d ?v0 )?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$ (fun_app$q (llist_all2$h ?v0 )?v1 )lNil$c )(= ?v1 lNil$b )):pattern ((fun_app$q (llist_all2$h ?v0 )?v1 )))):named a55 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$d (fun_app$ak (llist_all2$n ?v0 )?v1 )lNil$a )(= ?v1 lNil$c )):pattern ((fun_app$ak (llist_all2$n ?v0 )?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$d (fun_app$al (llist_all2$o ?v0 )?v1 )lNil$a )(= ?v1 lNil$b )):pattern ((fun_app$al (llist_all2$o ?v0 )?v1 )))):named a57 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$f (fun_app$am (llist_all2$p ?v0 )?v1 )lNil$ )(= ?v1 lNil$c )):pattern ((fun_app$am (llist_all2$p ?v0 )?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$f (fun_app$ae (llist_all2$m ?v0 )?v1 )lNil$ )(= ?v1 lNil$b )):pattern ((fun_app$ae (llist_all2$m ?v0 )?v1 )))):named a59 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$ac (llist_all2$l ?v0 )?v1 )lNil$c )(= ?v1 lNil$a )):pattern ((fun_app$ac (llist_all2$l ?v0 )?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$n (llist_all2$ ?v0 )lNil$ )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$d (fun_app$n (llist_all2$ ?v0 )lNil$ )?v1 )))):named a61 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$c ?v0 )lNil$a )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$d (fun_app$e (llist_all2$c ?v0 )lNil$a )?v1 )))):named a62 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$r (llist_all2$g ?v0 )lNil$a )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$f (fun_app$r (llist_all2$g ?v0 )lNil$a )?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$g (llist_all2$d ?v0 )lNil$ )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$f (fun_app$g (llist_all2$d ?v0 )lNil$ )?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$ (fun_app$q (llist_all2$h ?v0 )lNil$b )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$ (fun_app$q (llist_all2$h ?v0 )lNil$b )?v1 )))):named a65 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$ (fun_app$ac (llist_all2$l ?v0 )lNil$a )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$ (fun_app$ac (llist_all2$l ?v0 )lNil$a )?v1 )))):named a66 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$b (fun_app$aa (llist_all2$k ?v0 )lNil$a )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$b (fun_app$aa (llist_all2$k ?v0 )lNil$a )?v1 )))):named a67 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$ (fun_app$y (llist_all2$j ?v0 )lNil$ )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$ (fun_app$y (llist_all2$j ?v0 )lNil$ )?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$b (fun_app$w (llist_all2$i ?v0 )lNil$ )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$b (fun_app$w (llist_all2$i ?v0 )lNil$ )?v1 )))):named a69 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$ak (llist_all2$n ?v0 )lNil$c )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$d (fun_app$ak (llist_all2$n ?v0 )lNil$c )?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$d (fun_app$n (llist_all2$ ?v0 )(lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$j (fun_app$t ?v0 ?v1 )?v3 )(fun_app$d (fun_app$n (llist_all2$ ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$n (llist_all2$ ?v0 )(lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a71 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$c ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$j (fun_app$k ?v0 ?v1 )?v3 )(fun_app$d (fun_app$e (llist_all2$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$e (llist_all2$c ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a72 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$f (fun_app$r (llist_all2$g ?v0 )(lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$l (fun_app$s ?v0 ?v1 )?v3 )(fun_app$f (fun_app$r (llist_all2$g ?v0 )?v2 )?v4 ))):pattern ((fun_app$f (fun_app$r (llist_all2$g ?v0 )(lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a73 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$f (fun_app$g (llist_all2$d ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$l (fun_app$m ?v0 ?v1 )?v3 )(fun_app$f (fun_app$g (llist_all2$d ?v0 )?v2 )?v4 ))):pattern ((fun_app$f (fun_app$g (llist_all2$d ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a74 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_llist$ )(?v3 B_llist$ )(?v4 B_llist_llist$ ))(! (= (fun_app$ (fun_app$q (llist_all2$h ?v0 )(lCons$b ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$d (fun_app$n ?v0 ?v1 )?v3 )(fun_app$ (fun_app$q (llist_all2$h ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$q (llist_all2$h ?v0 )(lCons$b ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a75 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A_llist$ )(?v4 A_llist_llist$ ))(! (= (fun_app$b (fun_app$w (llist_all2$i ?v0 )(lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$f (fun_app$x ?v0 ?v1 )?v3 )(fun_app$b (fun_app$w (llist_all2$i ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$w (llist_all2$i ?v0 )(lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a76 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 B_llist$ )(?v4 B_llist_llist$ ))(! (= (fun_app$ (fun_app$y (llist_all2$j ?v0 )(lCons$ ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$d (fun_app$z ?v0 ?v1 )?v3 )(fun_app$ (fun_app$y (llist_all2$j ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$y (llist_all2$j ?v0 )(lCons$ ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a77 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 A_llist$ )(?v4 A_llist_llist$ ))(! (= (fun_app$b (fun_app$aa (llist_all2$k ?v0 )(lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$f (fun_app$ab ?v0 ?v1 )?v3 )(fun_app$b (fun_app$aa (llist_all2$k ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$aa (llist_all2$k ?v0 )(lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a78 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 B_llist$ )(?v4 B_llist_llist$ ))(! (= (fun_app$ (fun_app$ac (llist_all2$l ?v0 )(lCons$a ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$d (fun_app$ad ?v0 ?v1 )?v3 )(fun_app$ (fun_app$ac (llist_all2$l ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$ac (llist_all2$l ?v0 )(lCons$a ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a79 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$f (fun_app$ae (llist_all2$m ?v0 )(lCons$b ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$l (fun_app$af ?v0 ?v1 )?v3 )(fun_app$f (fun_app$ae (llist_all2$m ?v0 )?v2 )?v4 ))):pattern ((fun_app$f (fun_app$ae (llist_all2$m ?v0 )(lCons$b ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a80 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v1 )(forall ((?v2 A_llist$ ))(=> (member$ ?v2 (lset$ ?v1 ))(fun_app$f (fun_app$g ?v0 ?v2 )?v2 ))))):named a81 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v1 )(forall ((?v2 B_llist$ ))(=> (member$a ?v2 (lset$a ?v1 ))(fun_app$d (fun_app$e ?v0 ?v2 )?v2 ))))):named a82 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v1 )(forall ((?v2 B$ ))(=> (member$b ?v2 (lset$b ?v1 ))(fun_app$j (fun_app$k ?v0 ?v2 )?v2 ))))):named a83 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(= (fun_app$f (fun_app$g (llist_all2$d ?v0 )?v1 )?v1 )(forall ((?v2 A$ ))(=> (member$c ?v2 (lset$c ?v1 ))(fun_app$l (fun_app$m ?v0 ?v2 )?v2 ))))):named a84 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_bool_fun$ )(?v4 B_bool_fun$ ))(=> (and (fun_app$d (fun_app$n (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 B$ ))(=> (fun_app$j (fun_app$t ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$j ?v4 ?v6 )))))(fun_app$d (fun_app$n (llist_all2$ ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$a ?v4 ?v2 )))):named a85 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_bool_fun$ )(?v4 B_bool_fun$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 B$ ))(=> (fun_app$j (fun_app$k ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$j ?v4 ?v6 )))))(fun_app$d (fun_app$e (llist_all2$c ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$a ?v4 ?v2 )))):named a86 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_bool_fun$ )(?v4 A_bool_fun$ ))(=> (and (fun_app$f (fun_app$r (llist_all2$g ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 A$ ))(=> (fun_app$l (fun_app$s ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$l ?v4 ?v6 )))))(fun_app$f (fun_app$r (llist_all2$g ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$ ?v4 ?v2 )))):named a87 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_bool_fun$ )(?v4 A_bool_fun$ ))(=> (and (fun_app$f (fun_app$g (llist_all2$d ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 A$ ))(=> (fun_app$l (fun_app$m ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$l ?v4 ?v6 )))))(fun_app$f (fun_app$g (llist_all2$d ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$ ?v4 ?v2 )))):named a88 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist$ )(?v3 A_llist_bool_fun$ )(?v4 B_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$q (llist_all2$h ?v0 )?v1 )?v2 )(forall ((?v5 A_llist$ )(?v6 B_llist$ ))(=> (fun_app$d (fun_app$n ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(fun_app$ (fun_app$q (llist_all2$h ?v0 )(ldropWhile$b ?v3 ?v1 ))(ldropWhile$c ?v4 ?v2 )))):named a89 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_llist$ )(?v3 A_bool_fun$ )(?v4 A_llist_bool_fun$ ))(=> (and (fun_app$b (fun_app$w (llist_all2$i ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 A_llist$ ))(=> (fun_app$f (fun_app$x ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$f ?v4 ?v6 )))))(fun_app$b (fun_app$w (llist_all2$i ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$b ?v4 ?v2 )))):named a90 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist_llist$ )(?v3 A_bool_fun$ )(?v4 B_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$y (llist_all2$j ?v0 )?v1 )?v2 )(forall ((?v5 A$ )(?v6 B_llist$ ))(=> (fun_app$d (fun_app$z ?v0 ?v5 )?v6 )(= (fun_app$l ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(fun_app$ (fun_app$y (llist_all2$j ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$c ?v4 ?v2 )))):named a91 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist_llist$ )(?v3 B_bool_fun$ )(?v4 A_llist_bool_fun$ ))(=> (and (fun_app$b (fun_app$aa (llist_all2$k ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 A_llist$ ))(=> (fun_app$f (fun_app$ab ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$f ?v4 ?v6 )))))(fun_app$b (fun_app$aa (llist_all2$k ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$b ?v4 ?v2 )))):named a92 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist_llist$ )(?v3 B_bool_fun$ )(?v4 B_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$ac (llist_all2$l ?v0 )?v1 )?v2 )(forall ((?v5 B$ )(?v6 B_llist$ ))(=> (fun_app$d (fun_app$ad ?v0 ?v5 )?v6 )(= (fun_app$j ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(fun_app$ (fun_app$ac (llist_all2$l ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$c ?v4 ?v2 )))):named a93 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_bool_fun$ )(?v4 A_bool_fun$ ))(=> (and (fun_app$f (fun_app$ae (llist_all2$m ?v0 )?v1 )?v2 )(forall ((?v5 A_llist$ )(?v6 A$ ))(=> (fun_app$l (fun_app$af ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$l ?v4 ?v6 )))))(fun_app$f (fun_app$ae (llist_all2$m ?v0 )(ldropWhile$b ?v3 ?v1 ))(ldropWhile$ ?v4 ?v2 )))):named a94 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist$ ))(=> (fun_app$ (fun_app$q (llist_all2$h (llist_all2$ ?v0 ))?v1 )?v2 )(fun_app$d (fun_app$n (llist_all2$ ?v0 )(lconcat$ ?v1 ))(lconcat$a ?v2 )))):named a95 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 B_llist_llist$ ))(=> (fun_app$ (fun_app$a (llist_all2$b (llist_all2$c ?v0 ))?v1 )?v2 )(fun_app$d (fun_app$e (llist_all2$c ?v0 )(lconcat$a ?v1 ))(lconcat$a ?v2 )))):named a96 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 A_llist_llist$ ))(=> (llist_all2$f (llist_all2$g ?v0 )?v1 ?v2 )(fun_app$f (fun_app$r (llist_all2$g ?v0 )(lconcat$a ?v1 ))(lconcat$ ?v2 )))):named a97 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (fun_app$b (fun_app$c (llist_all2$a (llist_all2$d ?v0 ))?v1 )?v2 )(fun_app$f (fun_app$g (llist_all2$d ?v0 )(lconcat$ ?v1 ))(lconcat$ ?v2 )))):named a98 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 B_llist_llist_llist$ ))(=> (llist_all2$e (llist_all2$h ?v0 )?v1 ?v2 )(fun_app$ (fun_app$q (llist_all2$h ?v0 )(lconcat$b ?v1 ))(lconcat$c ?v2 )))):named a99 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (llist_all2$q (llist_all2$i ?v0 )?v1 ?v2 )(fun_app$b (fun_app$w (llist_all2$i ?v0 )(lconcat$ ?v1 ))(lconcat$b ?v2 )))):named a100 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist_llist$ ))(=> (llist_all2$r (llist_all2$j ?v0 )?v1 ?v2 )(fun_app$ (fun_app$y (llist_all2$j ?v0 )(lconcat$ ?v1 ))(lconcat$c ?v2 )))):named a101 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (llist_all2$s (llist_all2$k ?v0 )?v1 ?v2 )(fun_app$b (fun_app$aa (llist_all2$k ?v0 )(lconcat$a ?v1 ))(lconcat$b ?v2 )))):named a102 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 B_llist_llist_llist$ ))(=> (llist_all2$t (llist_all2$l ?v0 )?v1 ?v2 )(fun_app$ (fun_app$ac (llist_all2$l ?v0 )(lconcat$a ?v1 ))(lconcat$c ?v2 )))):named a103 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ ))(=> (llist_all2$u (llist_all2$m ?v0 )?v1 ?v2 )(fun_app$f (fun_app$ae (llist_all2$m ?v0 )(lconcat$b ?v1 ))(lconcat$ ?v2 )))):named a104 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(lprefix$ (fun_app$u (ltakeWhile$b ?v0 )?v1 )?v1 )):named a105 ))
(assert (! (forall ((?v0 B_llist_bool_fun$ )(?v1 B_llist_llist$ ))(lprefix$a (fun_app$v (ltakeWhile$c ?v0 )?v1 )?v1 )):named a106 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(fun_app$f (lprefix$b (fun_app$o (ltakeWhile$ ?v0 )?v1 ))?v1 )):named a107 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_llist$ ))(fun_app$d (lprefix$c (fun_app$p (ltakeWhile$a ?v0 )?v1 ))?v1 )):named a108 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ ))(fun_app$d (fun_app$n (llist_all2$ ?v0 )lNil$ )lNil$a )):named a109 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ ))(fun_app$d (fun_app$e (llist_all2$c ?v0 )lNil$a )lNil$a )):named a110 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ ))(fun_app$f (fun_app$r (llist_all2$g ?v0 )lNil$a )lNil$ )):named a111 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(fun_app$f (fun_app$g (llist_all2$d ?v0 )lNil$ )lNil$ )):named a112 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ ))(fun_app$ (fun_app$q (llist_all2$h ?v0 )lNil$b )lNil$c )):named a113 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ ))(fun_app$ (fun_app$ac (llist_all2$l ?v0 )lNil$a )lNil$c )):named a114 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ ))(fun_app$b (fun_app$aa (llist_all2$k ?v0 )lNil$a )lNil$b )):named a115 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ ))(fun_app$ (fun_app$y (llist_all2$j ?v0 )lNil$ )lNil$c )):named a116 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ ))(fun_app$b (fun_app$w (llist_all2$i ?v0 )lNil$ )lNil$b )):named a117 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ ))(fun_app$d (fun_app$ak (llist_all2$n ?v0 )lNil$c )lNil$a )):named a118 ))
(assert (! (forall ((?v0 B_llist$ ))(fun_app$d (lprefix$c ?v0 )?v0 )):named a119 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$f (lprefix$b ?v0 )?v0 )):named a120 ))
(check-sat )
;(get-unsat-core )
