;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort Nat_set$ 0 )
(declare-sort Bool_set$ 0 )
(declare-sort A_nat_fun$ 0 )
(declare-sort A_set_set$ 0 )
(declare-sort Nat_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort Bool_a_fun$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Nat_set_set$ 0 )
(declare-sort Bool_nat_fun$ 0 )
(declare-sort Bool_set_set$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Nat_a_set_fun$ 0 )
(declare-sort A_nat_prod_set$ 0 )
(declare-sort A_nat_a_fun_fun$ 0 )
(declare-sort Nat_nat_set_fun$ 0 )
(declare-sort A_a_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_a_fun$ 0 )
(declare-sort Nat_bool_set_fun$ 0 )
(declare-sort A_nat_nat_fun_fun$ 0 )
(declare-sort Nat_a_set_set_fun$ 0 )
(declare-sort A_nat_bool_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_fun$ 0 )
(declare-sort A_nat_prod_set_set$ 0 )
(declare-sort Nat_a_nat_prod_fun$ 0 )
(declare-sort A_nat_a_set_fun_fun$ 0 )
(declare-sort A_nat_prod_bool_fun$ 0 )
(declare-sort Nat_nat_set_set_fun$ 0 )
(declare-sort A_nat_prod_a_set_fun$ 0 )
(declare-sort A_nat_nat_set_fun_fun$ 0 )
(declare-sort A_nat_bool_set_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_set_fun$ 0 )
(declare-sort Nat_a_nat_prod_set_fun$ 0 )
(declare-sort A_nat_a_set_set_fun_fun$ 0 )
(declare-sort A_nat_prod_bool_set_fun$ 0 )
(declare-sort A_nat_a_nat_prod_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_nat_nat_set_set_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_fun$ 0 )
(declare-sort A_bool_fun_nat_bool_fun_fun$ 0 )
(declare-sort Nat_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_bool_bool_fun_fun$ 0 )
(declare-sort A_nat_a_nat_prod_set_fun_fun$ 0 )
(declare-sort Bool_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_set_fun$ 0 )
(declare-sort Nat_bool_fun_nat_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_nat_prod_bool_fun_fun$ 0 )
(declare-sort A_nat_prod_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_nat_prod_bool_fun_nat_bool_fun_fun$ 0 )
(declare-sort A_nat_bool_fun_fun_a_nat_bool_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_bool_fun_a_nat_prod_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_nat_prod$ 0)
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun fst$ (A_nat_prod$)A$)
(declare-fun snd$ (A_nat_prod$)Nat$)
(declare-fun pair$ (A$ Nat$ )A_nat_prod$)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun i$ ()Nat_set$ )
(declare-fun i$a ()Nat$ )
(declare-fun uu$ ()A_nat_prod_a_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun uua$ ()A_nat_bool_fun_fun$ )
(declare-fun uub$ ()A_nat_prod_bool_fun$ )
(declare-fun uuc$ (Bool )A_nat_bool_fun_fun_a_nat_bool_fun_fun_fun$ )
(declare-fun uud$ ()Nat_nat_fun$ )
(declare-fun uue$ ()A_a_fun$ )
(declare-fun uuf$ ()A_nat_a_fun_fun$ )
(declare-fun uug$ (A_nat_prod_a_fun$ )A_nat_prod_bool_fun_a_bool_fun_fun$ )
(declare-fun uuh$ (A_nat_prod_a_nat_prod_fun$ )A_nat_prod_bool_fun_a_nat_prod_bool_fun_fun$ )
(declare-fun uui$ (Nat_nat_fun$ )Nat_bool_fun_nat_bool_fun_fun$ )
(declare-fun uuj$ (Nat_a_fun$ )Nat_bool_fun_a_bool_fun_fun$ )
(declare-fun uuk$ (A_nat_fun$ )A_bool_fun_nat_bool_fun_fun$ )
(declare-fun uul$ (A_a_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun uum$ (A_nat_prod_nat_fun$ )A_nat_prod_bool_fun_nat_bool_fun_fun$ )
(declare-fun uun$ (A_a_nat_prod_fun$ )A_bool_fun_a_nat_prod_bool_fun_fun$ )
(declare-fun uuo$ (Bool_a_fun$ )Bool_bool_fun_a_bool_fun_fun$ )
(declare-fun uup$ (A_bool_fun$ )A_bool_fun_bool_bool_fun_fun$ )
(declare-fun enat$ (Nat$ )Enat$ )
(declare-fun less$ (Enat$ Enat$ )Bool )
(declare-fun lnth$ (A_llist$ )Nat_a_fun$ )
(declare-fun image$ (A_nat_prod_a_fun$ A_nat_prod_set$ )A_set$ )
(declare-fun image$a (A_nat_prod_bool_set_fun$ A_nat_prod_set$ )Bool_set_set$ )
(declare-fun image$b (A_nat_prod_a_nat_prod_set_fun$ A_nat_prod_set$ )A_nat_prod_set_set$ )
(declare-fun image$c (A_nat_prod_a_nat_prod_fun$ A_nat_prod_set$ )A_nat_prod_set$ )
(declare-fun image$d (A_nat_prod_nat_set_fun$ A_nat_prod_set$ )Nat_set_set$ )
(declare-fun image$e (A_nat_prod_a_set_fun$ A_nat_prod_set$ )A_set_set$ )
(declare-fun image$f (A_nat_prod_nat_fun$ A_nat_prod_set$ )Nat_set$ )
(declare-fun image$g (A_nat_prod_bool_fun$ A_nat_prod_set$ )Bool_set$ )
(declare-fun image$h (Nat_nat_fun$ Nat_set$ )Nat_set$ )
(declare-fun image$i (A_a_fun$ A_set$ )A_set$ )
(declare-fun image$j (A_nat_fun$ A_set$ )Nat_set$ )
(declare-fun image$k (Nat_a_fun$ Nat_set$ )A_set$ )
(declare-fun image$l (A_bool_fun$ A_set$ )Bool_set$ )
(declare-fun image$m (Nat_bool_fun$ Nat_set$ )Bool_set$ )
(declare-fun image$n (Bool_a_fun$ Bool_set$ )A_set$ )
(declare-fun image$o (Bool_nat_fun$ Bool_set$ )Nat_set$ )
(declare-fun image$p (Bool_bool_fun$ Bool_set$ )Bool_set$ )
(declare-fun image$q (A_a_nat_prod_fun$ A_set$ )A_nat_prod_set$ )
(declare-fun member$ (Nat$ Nat_set$ )Bool )
(declare-fun collect$ (A_nat_prod_bool_fun$ )A_nat_prod_set$ )
(declare-fun fun_app$ (A_nat_prod_bool_fun$ A_nat_prod$ )Bool )
(declare-fun llength$ (A_llist$ )Enat$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_nat_prod$ A_nat_prod_set$ )Bool )
(declare-fun member$c (Bool_set$ Bool_set_set$ )Bool )
(declare-fun member$d (A_nat_prod_set$ A_nat_prod_set_set$ )Bool )
(declare-fun member$e (Nat_set$ Nat_set_set$ )Bool )
(declare-fun member$f (A_set$ A_set_set$ )Bool )
(declare-fun member$g (Bool Bool_set$ )Bool )
(declare-fun collect$a (A_bool_fun$ )A_set$ )
(declare-fun collect$b (Nat_bool_fun$ )Nat_set$ )
(declare-fun collect$c (Bool_bool_fun$ )Bool_set$ )
(declare-fun fun_app$a (Nat_a_fun$ Nat$ )A$ )
(declare-fun fun_app$b (A_nat_prod_a_fun$ A_nat_prod$ )A$ )
(declare-fun fun_app$c (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$d (A_nat_bool_fun_fun$ A$ )Nat_bool_fun$ )
(declare-fun fun_app$e (A_nat_prod_bool_fun_a_nat_prod_bool_fun_fun$ A_nat_prod_bool_fun$ )A_nat_prod_bool_fun$ )
(declare-fun fun_app$f (A_nat_prod_a_nat_prod_fun$ A_nat_prod$ )A_nat_prod$ )
(declare-fun fun_app$g (A_nat_prod_bool_fun_nat_bool_fun_fun$ A_nat_prod_bool_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$h (A_nat_prod_nat_fun$ A_nat_prod$ )Nat$ )
(declare-fun fun_app$i (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$j (A_nat_prod_bool_fun_a_bool_fun_fun$ A_nat_prod_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$k (Bool_bool_fun_a_bool_fun_fun$ Bool_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$l (Bool_a_fun$ Bool )A$ )
(declare-fun fun_app$m (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$n (Nat_bool_fun_nat_bool_fun_fun$ Nat_bool_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$o (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$p (Nat_bool_fun_a_bool_fun_fun$ Nat_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$q (A_bool_fun_a_nat_prod_bool_fun_fun$ A_bool_fun$ )A_nat_prod_bool_fun$ )
(declare-fun fun_app$r (A_a_nat_prod_fun$ A$ )A_nat_prod$ )
(declare-fun fun_app$s (A_bool_fun_bool_bool_fun_fun$ A_bool_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$t (A_bool_fun_nat_bool_fun_fun$ A_bool_fun$ )Nat_bool_fun$ )
(declare-fun fun_app$u (A_nat_fun$ A$ )Nat$ )
(declare-fun fun_app$v (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$w (A_a_fun$ A$ )A$ )
(declare-fun fun_app$x (A_nat_bool_fun_fun_a_nat_bool_fun_fun_fun$ A_nat_bool_fun_fun$ )A_nat_bool_fun_fun$ )
(declare-fun fun_app$y (A_nat_a_fun_fun$ A$ )Nat_a_fun$ )
(declare-fun fun_app$z (Nat_bool_set_fun$ Nat$ )Bool_set$ )
(declare-fun case_prod$ (A_nat_bool_fun_fun$ )A_nat_prod_bool_fun$ )
(declare-fun fun_app$aa (A_nat_bool_set_fun_fun$ A$ )Nat_bool_set_fun$ )
(declare-fun fun_app$ab (Nat_a_nat_prod_set_fun$ Nat$ )A_nat_prod_set$ )
(declare-fun fun_app$ac (A_nat_a_nat_prod_set_fun_fun$ A$ )Nat_a_nat_prod_set_fun$ )
(declare-fun fun_app$ad (Nat_a_nat_prod_fun$ Nat$ )A_nat_prod$ )
(declare-fun fun_app$ae (A_nat_a_nat_prod_fun_fun$ A$ )Nat_a_nat_prod_fun$ )
(declare-fun fun_app$af (Nat_nat_set_fun$ Nat$ )Nat_set$ )
(declare-fun fun_app$ag (A_nat_nat_set_fun_fun$ A$ )Nat_nat_set_fun$ )
(declare-fun fun_app$ah (Nat_a_set_fun$ Nat$ )A_set$ )
(declare-fun fun_app$ai (A_nat_a_set_fun_fun$ A$ )Nat_a_set_fun$ )
(declare-fun fun_app$aj (A_nat_nat_fun_fun$ A$ )Nat_nat_fun$ )
(declare-fun fun_app$ak (Bool_nat_fun$ Bool )Nat$ )
(declare-fun fun_app$al (Nat_a_set_set_fun$ Nat$ )A_set_set$ )
(declare-fun fun_app$am (A_nat_a_set_set_fun_fun$ A$ )Nat_a_set_set_fun$ )
(declare-fun fun_app$an (Nat_nat_set_set_fun$ Nat$ )Nat_set_set$ )
(declare-fun fun_app$ao (A_nat_nat_set_set_fun_fun$ A$ )Nat_nat_set_set_fun$ )
(declare-fun fun_app$ap (A_nat_prod_a_nat_prod_set_fun$ A_nat_prod$ )A_nat_prod_set$ )
(declare-fun fun_app$aq (A_nat_prod_bool_set_fun$ A_nat_prod$ )Bool_set$ )
(declare-fun fun_app$ar (A_nat_prod_a_set_fun$ A_nat_prod$ )A_set$ )
(declare-fun fun_app$as (A_nat_prod_nat_set_fun$ A_nat_prod$ )Nat_set$ )
(declare-fun case_prod$a (A_nat_bool_set_fun_fun$ )A_nat_prod_bool_set_fun$ )
(declare-fun case_prod$b (A_nat_a_nat_prod_set_fun_fun$ )A_nat_prod_a_nat_prod_set_fun$ )
(declare-fun case_prod$c (A_nat_a_nat_prod_fun_fun$ )A_nat_prod_a_nat_prod_fun$ )
(declare-fun case_prod$d (A_nat_nat_set_fun_fun$ )A_nat_prod_nat_set_fun$ )
(declare-fun case_prod$e (A_nat_a_set_fun_fun$ )A_nat_prod_a_set_fun$ )
(declare-fun case_prod$f (A_nat_a_fun_fun$ )A_nat_prod_a_fun$ )
(declare-fun case_prod$g (A_nat_nat_fun_fun$ )A_nat_prod_nat_fun$ )
(declare-fun case_prod$h (A_nat_a_set_set_fun_fun$ A_nat_prod$ )A_set_set$ )
(declare-fun case_prod$i (A_nat_nat_set_set_fun_fun$ A_nat_prod$ )Nat_set_set$ )
(assert (! (forall ((?v0 A_nat_prod$ ))(! (= (fun_app$ uub$ ?v0 )(and (exists ((?v1 Nat$ ))(and (= ?v0 (pair$ (fun_app$a (lnth$ xs$ )?v1 )?v1 ))(less$ (enat$ ?v1 )(llength$ xs$ ))))(fun_app$ (case_prod$ uua$ )?v0 ))):pattern ((fun_app$ uub$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(! (= (fun_app$b uu$ ?v0 )(fst$ ?v0 )):pattern ((fun_app$b uu$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$c (fun_app$d uua$ ?v0 )?v1 )(member$ ?v1 i$ )):pattern ((fun_app$c (fun_app$d uua$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_bool_fun$ )(?v2 A_nat_prod$ ))(! (= (fun_app$ (fun_app$e (uuh$ ?v0 )?v1 )?v2 )(exists ((?v3 A_nat_prod$ ))(and (= ?v2 (fun_app$f ?v0 ?v3 ))(fun_app$ ?v1 ?v3 )))):pattern ((fun_app$ (fun_app$e (uuh$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 A_nat_prod_nat_fun$ )(?v1 A_nat_prod_bool_fun$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$g (uum$ ?v0 )?v1 )?v2 )(exists ((?v3 A_nat_prod$ ))(and (= ?v2 (fun_app$h ?v0 ?v3 ))(fun_app$ ?v1 ?v3 )))):pattern ((fun_app$c (fun_app$g (uum$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_bool_fun$ )(?v2 A$ ))(! (= (fun_app$i (fun_app$j (uug$ ?v0 )?v1 )?v2 )(exists ((?v3 A_nat_prod$ ))(and (= ?v2 (fun_app$b ?v0 ?v3 ))(fun_app$ ?v1 ?v3 )))):pattern ((fun_app$i (fun_app$j (uug$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ )(?v2 A$ ))(! (= (fun_app$i (fun_app$k (uuo$ ?v0 )?v1 )?v2 )(exists ((?v3 Bool ))(and (= ?v2 (fun_app$l ?v0 ?v3 ))(fun_app$m ?v1 ?v3 )))):pattern ((fun_app$i (fun_app$k (uuo$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_bool_fun$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$n (uui$ ?v0 )?v1 )?v2 )(exists ((?v3 Nat$ ))(and (= ?v2 (fun_app$o ?v0 ?v3 ))(fun_app$c ?v1 ?v3 )))):pattern ((fun_app$c (fun_app$n (uui$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_bool_fun$ )(?v2 A$ ))(! (= (fun_app$i (fun_app$p (uuj$ ?v0 )?v1 )?v2 )(exists ((?v3 Nat$ ))(and (= ?v2 (fun_app$a ?v0 ?v3 ))(fun_app$c ?v1 ?v3 )))):pattern ((fun_app$i (fun_app$p (uuj$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A_bool_fun$ )(?v2 A_nat_prod$ ))(! (= (fun_app$ (fun_app$q (uun$ ?v0 )?v1 )?v2 )(exists ((?v3 A$ ))(and (= ?v2 (fun_app$r ?v0 ?v3 ))(fun_app$i ?v1 ?v3 )))):pattern ((fun_app$ (fun_app$q (uun$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool ))(! (= (fun_app$m (fun_app$s (uup$ ?v0 )?v1 )?v2 )(exists ((?v3 A$ ))(and (= ?v2 (fun_app$i ?v0 ?v3 ))(fun_app$i ?v1 ?v3 )))):pattern ((fun_app$m (fun_app$s (uup$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_bool_fun$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$t (uuk$ ?v0 )?v1 )?v2 )(exists ((?v3 A$ ))(and (= ?v2 (fun_app$u ?v0 ?v3 ))(fun_app$i ?v1 ?v3 )))):pattern ((fun_app$c (fun_app$t (uuk$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$i (fun_app$v (uul$ ?v0 )?v1 )?v2 )(exists ((?v3 A$ ))(and (= ?v2 (fun_app$w ?v0 ?v3 ))(fun_app$i ?v1 ?v3 )))):pattern ((fun_app$i (fun_app$v (uul$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 Bool )(?v1 A_nat_bool_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$c (fun_app$d (fun_app$x (uuc$ ?v0 )?v1 )?v2 )?v3 )(and ?v0 (fun_app$c (fun_app$d ?v1 ?v2 )?v3 ))):pattern ((fun_app$c (fun_app$d (fun_app$x (uuc$ ?v0 )?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$a (fun_app$y uuf$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (fun_app$y uuf$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$o uud$ ?v0 )?v0 ):pattern ((fun_app$o uud$ ?v0 )))):named a15 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$w uue$ ?v0 )?v0 ):pattern ((fun_app$w uue$ ?v0 )))):named a16 ))
(assert (! (not (member$a (fun_app$a (lnth$ xs$ )i$a )(image$ uu$ (collect$ uub$ )))):named a17 ))
(assert (! (less$ (enat$ i$a )(llength$ xs$ )):named a18 ))
(assert (! (member$ i$a i$ ):named a19 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_bool_set_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$c (fun_app$z (fun_app$aa ?v3 ?v0 )?v1 )(image$a (case_prod$a ?v3 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_a_nat_prod_set_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$d (fun_app$ab (fun_app$ac ?v3 ?v0 )?v1 )(image$b (case_prod$b ?v3 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_a_nat_prod_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$b (fun_app$ad (fun_app$ae ?v3 ?v0 )?v1 )(image$c (case_prod$c ?v3 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_nat_set_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$e (fun_app$af (fun_app$ag ?v3 ?v0 )?v1 )(image$d (case_prod$d ?v3 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_a_set_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$f (fun_app$ah (fun_app$ai ?v3 ?v0 )?v1 )(image$e (case_prod$e ?v3 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_a_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$a (fun_app$a (fun_app$y ?v3 ?v0 )?v1 )(image$ (case_prod$f ?v3 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_nat_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$ (fun_app$o (fun_app$aj ?v3 ?v0 )?v1 )(image$f (case_prod$g ?v3 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A_nat_prod_set$ )(?v3 A_nat_bool_fun_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )?v2 )(member$g (fun_app$c (fun_app$d ?v3 ?v0 )?v1 )(image$g (case_prod$ ?v3 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_nat_bool_fun_fun$ ))(=> (forall ((?v2 A$ )(?v3 Nat$ ))(=> (= ?v0 (pair$ ?v2 ?v3 ))(fun_app$c (fun_app$d ?v1 ?v2 )?v3 )))(fun_app$ (case_prod$ ?v1 )?v0 ))):named a28 ))
(assert (! (forall ((?v0 A_nat_bool_fun_fun$ )(?v1 A$ )(?v2 Nat$ ))(=> (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(fun_app$ (case_prod$ ?v0 )(pair$ ?v1 ?v2 )))):named a29 ))
(assert (! (forall ((?v0 A_nat_bool_fun_fun$ )(?v1 A$ )(?v2 Nat$ ))(=> (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(fun_app$ (case_prod$ ?v0 )(pair$ ?v1 ?v2 )))):named a30 ))
(assert (! (forall ((?v0 Bool )(?v1 A_nat_bool_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$ (case_prod$ (fun_app$x (uuc$ ?v0 )?v1 ))?v2 )(and ?v0 (fun_app$ (case_prod$ ?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 Nat_set$ ))(= (image$h uud$ ?v0 )?v0 )):named a32 ))
(assert (! (forall ((?v0 A_set$ ))(= (image$i uue$ ?v0 )?v0 )):named a33 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (enat$ ?v0 )(enat$ ?v1 ))(= ?v0 ?v1 ))):named a34 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$w ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$i ?v1 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_nat_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$u ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$j ?v1 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat_a_fun$ )(?v2 Nat$ )(?v3 Nat_set$ ))(=> (and (= ?v0 (fun_app$a ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$k ?v1 ?v3 )))):named a37 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$h ?v1 ?v3 )))):named a38 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_prod_a_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod_set$ ))(=> (and (= ?v0 (fun_app$b ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$a ?v0 (image$ ?v1 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 Bool )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$g ?v0 (image$l ?v1 ?v3 )))):named a40 ))
(assert (! (forall ((?v0 Bool )(?v1 Nat_bool_fun$ )(?v2 Nat$ )(?v3 Nat_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$g ?v0 (image$m ?v1 ?v3 )))):named a41 ))
(assert (! (forall ((?v0 A$ )(?v1 Bool_a_fun$ )(?v2 Bool )(?v3 Bool_set$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v2 ))(member$g ?v2 ?v3 ))(member$a ?v0 (image$n ?v1 ?v3 )))):named a42 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Bool_nat_fun$ )(?v2 Bool )(?v3 Bool_set$ ))(=> (and (= ?v0 (fun_app$ak ?v1 ?v2 ))(member$g ?v2 ?v3 ))(member$ ?v0 (image$o ?v1 ?v3 )))):named a43 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_set$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v2 ))(member$g ?v2 ?v3 ))(member$g ?v0 (image$p ?v1 ?v3 )))):named a44 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A$ )(?v3 Nat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a45 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A$ )(?v3 Nat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(= (fst$ ?v0 )(fun_app$b (case_prod$f uuf$ )?v0 ))):named a47 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_bool_fun$ ))(= (image$ ?v0 (collect$ ?v1 ))(collect$a (fun_app$j (uug$ ?v0 )?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_bool_fun$ ))(= (image$c ?v0 (collect$ ?v1 ))(collect$ (fun_app$e (uuh$ ?v0 )?v1 )))):named a49 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_bool_fun$ ))(= (image$h ?v0 (collect$b ?v1 ))(collect$b (fun_app$n (uui$ ?v0 )?v1 )))):named a50 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_bool_fun$ ))(= (image$k ?v0 (collect$b ?v1 ))(collect$a (fun_app$p (uuj$ ?v0 )?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_bool_fun$ ))(= (image$j ?v0 (collect$a ?v1 ))(collect$b (fun_app$t (uuk$ ?v0 )?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_bool_fun$ ))(= (image$i ?v0 (collect$a ?v1 ))(collect$a (fun_app$v (uul$ ?v0 )?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_nat_prod_nat_fun$ )(?v1 A_nat_prod_bool_fun$ ))(= (image$f ?v0 (collect$ ?v1 ))(collect$b (fun_app$g (uum$ ?v0 )?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A_bool_fun$ ))(= (image$q ?v0 (collect$a ?v1 ))(collect$ (fun_app$q (uun$ ?v0 )?v1 )))):named a55 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ ))(= (image$n ?v0 (collect$c ?v1 ))(collect$a (fun_app$k (uuo$ ?v0 )?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (image$l ?v0 (collect$a ?v1 ))(collect$c (fun_app$s (uup$ ?v0 )?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_nat_a_set_set_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(=> (member$f ?v0 (fun_app$al (fun_app$am ?v1 ?v2 )?v3 ))(member$f ?v0 (case_prod$h ?v1 (pair$ ?v2 ?v3 ))))):named a58 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 A_nat_nat_set_set_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(=> (member$e ?v0 (fun_app$an (fun_app$ao ?v1 ?v2 )?v3 ))(member$e ?v0 (case_prod$i ?v1 (pair$ ?v2 ?v3 ))))):named a59 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_nat_a_nat_prod_set_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(=> (member$b ?v0 (fun_app$ab (fun_app$ac ?v1 ?v2 )?v3 ))(member$b ?v0 (fun_app$ap (case_prod$b ?v1 )(pair$ ?v2 ?v3 ))))):named a60 ))
(assert (! (forall ((?v0 Bool )(?v1 A_nat_bool_set_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(=> (member$g ?v0 (fun_app$z (fun_app$aa ?v1 ?v2 )?v3 ))(member$g ?v0 (fun_app$aq (case_prod$a ?v1 )(pair$ ?v2 ?v3 ))))):named a61 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_a_set_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(=> (member$a ?v0 (fun_app$ah (fun_app$ai ?v1 ?v2 )?v3 ))(member$a ?v0 (fun_app$ar (case_prod$e ?v1 )(pair$ ?v2 ?v3 ))))):named a62 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_nat_nat_set_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(=> (member$ ?v0 (fun_app$af (fun_app$ag ?v1 ?v2 )?v3 ))(member$ ?v0 (fun_app$as (case_prod$d ?v1 )(pair$ ?v2 ?v3 ))))):named a63 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_set$ )(?v2 A_nat_a_set_set_fun_fun$ ))(=> (forall ((?v3 A$ )(?v4 Nat$ ))(=> (= ?v0 (pair$ ?v3 ?v4 ))(member$f ?v1 (fun_app$al (fun_app$am ?v2 ?v3 )?v4 ))))(member$f ?v1 (case_prod$h ?v2 ?v0 )))):named a64 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 Nat_set$ )(?v2 A_nat_nat_set_set_fun_fun$ ))(=> (forall ((?v3 A$ )(?v4 Nat$ ))(=> (= ?v0 (pair$ ?v3 ?v4 ))(member$e ?v1 (fun_app$an (fun_app$ao ?v2 ?v3 )?v4 ))))(member$e ?v1 (case_prod$i ?v2 ?v0 )))):named a65 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_nat_prod$ )(?v2 A_nat_a_nat_prod_set_fun_fun$ ))(=> (forall ((?v3 A$ )(?v4 Nat$ ))(=> (= ?v0 (pair$ ?v3 ?v4 ))(member$b ?v1 (fun_app$ab (fun_app$ac ?v2 ?v3 )?v4 ))))(member$b ?v1 (fun_app$ap (case_prod$b ?v2 )?v0 )))):named a66 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 Bool )(?v2 A_nat_bool_set_fun_fun$ ))(=> (forall ((?v3 A$ )(?v4 Nat$ ))(=> (= ?v0 (pair$ ?v3 ?v4 ))(member$g ?v1 (fun_app$z (fun_app$aa ?v2 ?v3 )?v4 ))))(member$g ?v1 (fun_app$aq (case_prod$a ?v2 )?v0 )))):named a67 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A$ )(?v2 A_nat_a_set_fun_fun$ ))(=> (forall ((?v3 A$ )(?v4 Nat$ ))(=> (= ?v0 (pair$ ?v3 ?v4 ))(member$a ?v1 (fun_app$ah (fun_app$ai ?v2 ?v3 )?v4 ))))(member$a ?v1 (fun_app$ar (case_prod$e ?v2 )?v0 )))):named a68 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 Nat$ )(?v2 A_nat_nat_set_fun_fun$ ))(=> (forall ((?v3 A$ )(?v4 Nat$ ))(=> (= ?v0 (pair$ ?v3 ?v4 ))(member$ ?v1 (fun_app$af (fun_app$ag ?v2 ?v3 )?v4 ))))(member$ ?v1 (fun_app$as (case_prod$d ?v2 )?v0 )))):named a69 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_nat_a_set_set_fun_fun$ )(?v2 A_nat_prod$ ))(=> (and (member$f ?v0 (case_prod$h ?v1 ?v2 ))(forall ((?v3 A$ )(?v4 Nat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(member$f ?v0 (fun_app$al (fun_app$am ?v1 ?v3 )?v4 )))false )))false )):named a70 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 A_nat_nat_set_set_fun_fun$ )(?v2 A_nat_prod$ ))(=> (and (member$e ?v0 (case_prod$i ?v1 ?v2 ))(forall ((?v3 A$ )(?v4 Nat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(member$e ?v0 (fun_app$an (fun_app$ao ?v1 ?v3 )?v4 )))false )))false )):named a71 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_nat_a_nat_prod_set_fun_fun$ )(?v2 A_nat_prod$ ))(=> (and (member$b ?v0 (fun_app$ap (case_prod$b ?v1 )?v2 ))(forall ((?v3 A$ )(?v4 Nat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(member$b ?v0 (fun_app$ab (fun_app$ac ?v1 ?v3 )?v4 )))false )))false )):named a72 ))
(assert (! (forall ((?v0 Bool )(?v1 A_nat_bool_set_fun_fun$ )(?v2 A_nat_prod$ ))(=> (and (member$g ?v0 (fun_app$aq (case_prod$a ?v1 )?v2 ))(forall ((?v3 A$ )(?v4 Nat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(member$g ?v0 (fun_app$z (fun_app$aa ?v1 ?v3 )?v4 )))false )))false )):named a73 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_a_set_fun_fun$ )(?v2 A_nat_prod$ ))(=> (and (member$a ?v0 (fun_app$ar (case_prod$e ?v1 )?v2 ))(forall ((?v3 A$ )(?v4 Nat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(member$a ?v0 (fun_app$ah (fun_app$ai ?v1 ?v3 )?v4 )))false )))false )):named a74 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_nat_nat_set_fun_fun$ )(?v2 A_nat_prod$ ))(=> (and (member$ ?v0 (fun_app$as (case_prod$d ?v1 )?v2 ))(forall ((?v3 A$ )(?v4 Nat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(member$ ?v0 (fun_app$af (fun_app$ag ?v1 ?v3 )?v4 )))false )))false )):named a75 ))
(check-sat )
;(get-unsat-core )
