;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_a_prod_set$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_a_prod_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_a_prod_bool_fun$ 0 )
(declare-sort Bool_a_a_prod_fun$ 0 )
(declare-sort A_a_a_a_prod_fun_fun$ 0 )
(declare-sort A_llist_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_fun$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_a_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_set$ 0 )
(declare-sort A_a_llist_a_llist_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_set$ 0 )
(declare-sort A_llist_llist_a_a_prod_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort Bool_a_llist_a_llist_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_bool_fun_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_bool_fun$ 0 )
(declare-sort A_a_a_llist_a_llist_prod_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_a_prod_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_prod_fun$ 0 )
(declare-sort A_a_prod_a_llist_a_llist_prod_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_a_prod_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_prod_set$ 0 )
(declare-sort A_a_bool_fun_fun_a_a_prod_bool_fun_fun$ 0 )
(declare-sort A_a_llist_llist_a_llist_llist_prod_fun$ 0 )
(declare-sort A_a_llist_prod_a_a_llist_prod_prod_set$ 0 )
(declare-sort A_a_prod_llist_a_a_prod_llist_prod_set$ 0 )
(declare-sort A_llist_a_prod_a_llist_a_prod_prod_set$ 0 )
(declare-sort A_a_a_prod_prod_a_a_a_prod_prod_prod_set$ 0 )
(declare-sort A_a_prod_a_prod_a_a_prod_a_prod_prod_set$ 0 )
(declare-sort A_llist_llist_a_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_prod_bool_fun$ 0 )
(declare-sort A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ 0 )
(declare-sort A_a_llist_prod_a_a_llist_prod_prod_bool_fun$ 0 )
(declare-sort A_a_prod_llist_a_a_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_prod_a_llist_a_prod_prod_bool_fun$ 0 )
(declare-sort A_a_a_llist_llist_a_llist_llist_prod_fun_fun$ 0 )
(declare-sort A_a_a_prod_prod_a_a_a_prod_prod_bool_fun_fun$ 0 )
(declare-sort A_a_prod_a_prod_a_a_prod_a_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_a_prod_prod_a_a_a_prod_prod_prod_bool_fun$ 0 )
(declare-sort A_a_prod_a_prod_a_a_prod_a_prod_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ 0 )
(declare-sort A_a_a_a_prod_fun_fun_a_a_prod_a_a_prod_fun_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_prod_set$ 0 )
(declare-sort A_a_llist_prod_llist_a_a_llist_prod_llist_prod_set$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_prod_set$ 0 )
(declare-sort A_llist_a_prod_llist_a_llist_a_prod_llist_prod_set$ 0 )
(declare-sort A_a_a_llist_prod_prod_a_a_a_llist_prod_prod_prod_set$ 0 )
(declare-sort A_a_llist_a_prod_prod_a_a_llist_a_prod_prod_prod_set$ 0 )
(declare-sort A_a_prod_a_llist_prod_a_a_prod_a_llist_prod_prod_set$ 0 )
(declare-sort A_llist_a_a_prod_prod_a_llist_a_a_prod_prod_prod_set$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_prod_bool_fun$ 0 )
(declare-sort A_a_llist_prod_llist_a_a_llist_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_prod_llist_a_llist_a_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_a_llist_prod_llist_a_a_llist_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_prod_bool_fun$ 0 )
(declare-sort A_llist_a_prod_llist_a_llist_a_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod_set$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun_a_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ 0 )
(declare-sort A_llist_llist_llist_llist_a_llist_llist_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_bool_fun_fun_a_a_prod_a_a_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod_bool_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_bool_fun_fun_a_a_prod_a_a_prod_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_a_a_llist_a_llist_prod_fun_fun_a_a_prod_a_llist_a_llist_prod_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_a_prod_fun_fun_a_llist_a_llist_prod_a_a_prod_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_bool_fun_fun_a_llist_llist_a_llist_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_a_llist_prod_a_a_llist_prod_bool_fun_fun_a_a_llist_prod_a_a_llist_prod_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_prod_a_llist_a_prod_bool_fun_fun_a_llist_a_prod_a_llist_a_prod_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_a_llist_prod_fun_fun_a_llist_a_llist_prod_a_llist_a_llist_prod_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun_a_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort A_llist_a_llist_prod$ 0)
(declare-sort A_a_prod$ 0)
(declare-fun fst$ (A_llist_a_llist_prod$)A_llist$)
(declare-fun snd$ (A_llist_a_llist_prod$)A_llist$)
(declare-fun pair$ (A_llist$ A_llist$ )A_llist_a_llist_prod$)
(declare-fun fst$a (A_a_prod$)A$)
(declare-fun snd$a (A_a_prod$)A$)
(declare-fun pair$a (A$ A$ )A_a_prod$)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_prod$ 0)
(declare-sort A_llist_a_prod$ 0)
(declare-sort A_llist_a_prod_a_llist_a_prod_prod$ 0)
(declare-sort A_a_llist_prod$ 0)
(declare-sort A_a_llist_prod_a_a_llist_prod_prod$ 0)
(declare-sort A_a_prod_a_a_prod_prod$ 0)
(declare-sort A_llist_llist_a_llist_llist_prod$ 0)
(declare-sort A_llist_llist_llist_a_llist_llist_llist_prod$ 0)
(declare-fun fst$b (A_llist_a_llist_prod_a_llist_a_llist_prod_prod$)A_llist_a_llist_prod$)
(declare-fun snd$b (A_llist_a_llist_prod_a_llist_a_llist_prod_prod$)A_llist_a_llist_prod$)
(declare-fun pair$b (A_llist_a_llist_prod$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_a_llist_a_llist_prod_prod$)
(declare-fun fst$c (A_llist_a_prod$)A_llist$)
(declare-fun snd$c (A_llist_a_prod$)A$)
(declare-fun pair$c (A_llist$ A$ )A_llist_a_prod$)
(declare-fun fst$d (A_llist_a_prod_a_llist_a_prod_prod$)A_llist_a_prod$)
(declare-fun snd$d (A_llist_a_prod_a_llist_a_prod_prod$)A_llist_a_prod$)
(declare-fun pair$d (A_llist_a_prod$ A_llist_a_prod$ )A_llist_a_prod_a_llist_a_prod_prod$)
(declare-fun fst$e (A_a_llist_prod$)A$)
(declare-fun snd$e (A_a_llist_prod$)A_llist$)
(declare-fun pair$e (A$ A_llist$ )A_a_llist_prod$)
(declare-fun fst$f (A_a_llist_prod_a_a_llist_prod_prod$)A_a_llist_prod$)
(declare-fun snd$f (A_a_llist_prod_a_a_llist_prod_prod$)A_a_llist_prod$)
(declare-fun pair$f (A_a_llist_prod$ A_a_llist_prod$ )A_a_llist_prod_a_a_llist_prod_prod$)
(declare-fun fst$g (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun snd$g (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$g (A_a_prod$ A_a_prod$ )A_a_prod_a_a_prod_prod$)
(declare-fun fst$h (A_llist_llist_a_llist_llist_prod$)A_llist_llist$)
(declare-fun snd$h (A_llist_llist_a_llist_llist_prod$)A_llist_llist$)
(declare-fun pair$h (A_llist_llist$ A_llist_llist$ )A_llist_llist_a_llist_llist_prod$)
(declare-fun fst$i (A_llist_llist_llist_a_llist_llist_llist_prod$)A_llist_llist_llist$)
(declare-fun snd$i (A_llist_llist_llist_a_llist_llist_llist_prod$)A_llist_llist_llist$)
(declare-fun pair$i (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist_a_llist_llist_llist_prod$)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-sort A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod$ 0)
(declare-fun fst$j (A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod$)A_llist_llist_llist_llist$)
(declare-fun snd$j (A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod$)A_llist_llist_llist_llist$)
(declare-fun pair$j (A_llist_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod$)
(declare-sort A_llist_a_llist_prod_llist$ 0)
(declare-fun lNil$d ()A_llist_a_llist_prod_llist$)
(declare-fun lhd$d (A_llist_a_llist_prod_llist$)A_llist_a_llist_prod$)
(declare-fun ltl$d (A_llist_a_llist_prod_llist$)A_llist_a_llist_prod_llist$)
(declare-fun lCons$d (A_llist_a_llist_prod$ A_llist_a_llist_prod_llist$ )A_llist_a_llist_prod_llist$)
(declare-sort A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$ 0)
(declare-fun fst$k (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$)A_llist_a_llist_prod_llist$)
(declare-fun snd$k (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$)A_llist_a_llist_prod_llist$)
(declare-fun pair$k (A_llist_a_llist_prod_llist$ A_llist_a_llist_prod_llist$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod$)
(declare-sort A_llist_a_prod_llist$ 0)
(declare-fun lNil$e ()A_llist_a_prod_llist$)
(declare-fun lhd$e (A_llist_a_prod_llist$)A_llist_a_prod$)
(declare-fun ltl$e (A_llist_a_prod_llist$)A_llist_a_prod_llist$)
(declare-fun lCons$e (A_llist_a_prod$ A_llist_a_prod_llist$ )A_llist_a_prod_llist$)
(declare-sort A_llist_a_prod_llist_a_llist_a_prod_llist_prod$ 0)
(declare-fun fst$l (A_llist_a_prod_llist_a_llist_a_prod_llist_prod$)A_llist_a_prod_llist$)
(declare-fun snd$l (A_llist_a_prod_llist_a_llist_a_prod_llist_prod$)A_llist_a_prod_llist$)
(declare-fun pair$l (A_llist_a_prod_llist$ A_llist_a_prod_llist$ )A_llist_a_prod_llist_a_llist_a_prod_llist_prod$)
(declare-sort A_a_llist_prod_llist$ 0)
(declare-fun lNil$f ()A_a_llist_prod_llist$)
(declare-fun lhd$f (A_a_llist_prod_llist$)A_a_llist_prod$)
(declare-fun ltl$f (A_a_llist_prod_llist$)A_a_llist_prod_llist$)
(declare-fun lCons$f (A_a_llist_prod$ A_a_llist_prod_llist$ )A_a_llist_prod_llist$)
(declare-sort A_a_llist_prod_llist_a_a_llist_prod_llist_prod$ 0)
(declare-fun fst$m (A_a_llist_prod_llist_a_a_llist_prod_llist_prod$)A_a_llist_prod_llist$)
(declare-fun snd$m (A_a_llist_prod_llist_a_a_llist_prod_llist_prod$)A_a_llist_prod_llist$)
(declare-fun pair$m (A_a_llist_prod_llist$ A_a_llist_prod_llist$ )A_a_llist_prod_llist_a_a_llist_prod_llist_prod$)
(declare-sort A_a_prod_llist$ 0)
(declare-fun lNil$g ()A_a_prod_llist$)
(declare-fun lhd$g (A_a_prod_llist$)A_a_prod$)
(declare-fun ltl$g (A_a_prod_llist$)A_a_prod_llist$)
(declare-fun lCons$g (A_a_prod$ A_a_prod_llist$ )A_a_prod_llist$)
(declare-sort A_a_prod_llist_a_a_prod_llist_prod$ 0)
(declare-sort A_a_prod_a_prod$ 0)
(declare-sort A_a_prod_a_prod_a_a_prod_a_prod_prod$ 0)
(declare-sort A_a_a_prod_prod$ 0)
(declare-sort A_a_a_prod_prod_a_a_a_prod_prod_prod$ 0)
(declare-fun fst$n (A_a_prod_llist_a_a_prod_llist_prod$)A_a_prod_llist$)
(declare-fun snd$n (A_a_prod_llist_a_a_prod_llist_prod$)A_a_prod_llist$)
(declare-fun pair$n (A_a_prod_llist$ A_a_prod_llist$ )A_a_prod_llist_a_a_prod_llist_prod$)
(declare-fun fst$o (A_a_prod_a_prod$)A_a_prod$)
(declare-fun snd$o (A_a_prod_a_prod$)A$)
(declare-fun pair$o (A_a_prod$ A$ )A_a_prod_a_prod$)
(declare-fun fst$p (A_a_prod_a_prod_a_a_prod_a_prod_prod$)A_a_prod_a_prod$)
(declare-fun snd$p (A_a_prod_a_prod_a_a_prod_a_prod_prod$)A_a_prod_a_prod$)
(declare-fun pair$p (A_a_prod_a_prod$ A_a_prod_a_prod$ )A_a_prod_a_prod_a_a_prod_a_prod_prod$)
(declare-fun fst$q (A_a_a_prod_prod$)A$)
(declare-fun snd$q (A_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$q (A$ A_a_prod$ )A_a_a_prod_prod$)
(declare-fun fst$r (A_a_a_prod_prod_a_a_a_prod_prod_prod$)A_a_a_prod_prod$)
(declare-fun snd$r (A_a_a_prod_prod_a_a_a_prod_prod_prod$)A_a_a_prod_prod$)
(declare-fun pair$r (A_a_a_prod_prod$ A_a_a_prod_prod$ )A_a_a_prod_prod_a_a_a_prod_prod_prod$)
(declare-fun r$ ()A_a_bool_fun_fun$ )
(declare-fun uu$ (Bool )A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun_a_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun_fun$ )
(declare-fun uua$ (Bool A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )
(declare-fun uub$ (Bool A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )
(declare-fun uuc$ (Bool )A_a_prod_a_a_prod_bool_fun_fun_a_a_prod_a_a_prod_bool_fun_fun_fun$ )
(declare-fun uud$ (Bool A_llist_llist_a_llist_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uue$ (Bool A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun uuf$ (Bool A_a_bool_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uug$ (A_a_bool_fun_fun$ A_a_a_a_prod_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uuh$ (A_llist_a_llist_bool_fun_fun$ A_a_a_llist_a_llist_prod_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uui$ (A_a_bool_fun_fun$ A_llist_a_llist_a_a_prod_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun uuj$ (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun uuk$ (A_a_a_a_prod_fun_fun$ A_a_a_a_prod_fun_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uul$ (A_a_bool_fun_fun$ A_llist_llist_a_llist_llist_a_a_prod_fun_fun$ )A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uum$ (A_a_a_a_prod_fun_fun$ A_llist_a_llist_a_a_prod_fun_fun$ )A_llist_a_llist_a_a_prod_fun_fun$ )
(declare-fun uun$ (A_llist_a_llist_a_a_prod_fun_fun$ A_a_a_llist_a_llist_prod_fun_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uuo$ (A_a_a_llist_a_llist_prod_fun_fun$ A_a_a_a_prod_fun_fun$ )A_a_a_llist_a_llist_prod_fun_fun$ )
(declare-fun uup$ (A_llist_llist_a_llist_llist_bool_fun_fun$ A_a_a_llist_llist_a_llist_llist_prod_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uuq$ (Bool_bool_fun$ A_a_bool_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uur$ (Bool_bool_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun uus$ (Bool_a_a_prod_fun$ A_a_bool_fun_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uut$ (A_a_prod_bool_fun$ A_a_a_a_prod_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uuu$ (Bool_a_a_prod_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_a_a_prod_fun_fun$ )
(declare-fun uuv$ (Bool_a_llist_a_llist_prod_fun$ A_a_bool_fun_fun$ )A_a_a_llist_a_llist_prod_fun_fun$ )
(declare-fun uuw$ (A_a_prod_a_a_prod_fun$ A_a_a_a_prod_fun_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uux$ (A_a_prod_bool_fun$ A_llist_a_llist_a_a_prod_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun uuy$ (A_llist_a_llist_prod_bool_fun$ A_a_a_llist_a_llist_prod_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uuz$ (Bool_bool_fun$ A_llist_llist_a_llist_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uva$ ()A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uvb$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uvc$ ()A_a_bool_fun_fun$ )
(declare-fun uvd$ (A_a_bool_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uve$ (A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun uvf$ (A_a_a_a_prod_fun_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uvg$ (A_llist_a_llist_a_a_prod_fun_fun$ )A_llist_a_llist_a_a_prod_fun_fun$ )
(declare-fun uvh$ (A_a_a_llist_a_llist_prod_fun_fun$ )A_a_a_llist_a_llist_prod_fun_fun$ )
(declare-fun uvi$ (A_llist_llist_a_llist_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun uvj$ (A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )
(declare-fun uvk$ (A_a_prod_a_a_prod_bool_fun_fun$ )A_a_prod_a_a_prod_bool_fun_fun$ )
(declare-fun uvl$ (A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )
(declare-fun uvm$ (A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )
(declare-fun swap$ (A_a_prod$ )A_a_prod$ )
(declare-fun swap$a (A_llist_a_llist_prod$ )A_llist_a_llist_prod$ )
(declare-fun swap$b (A_llist_llist_a_llist_llist_prod$ )A_llist_llist_a_llist_llist_prod$ )
(declare-fun swap$c (A_a_prod_a_a_prod_prod$ )A_a_prod_a_a_prod_prod$ )
(declare-fun swap$d (A_llist_a_prod_a_llist_a_prod_prod$ )A_llist_a_prod_a_llist_a_prod_prod$ )
(declare-fun swap$e (A_a_llist_prod_a_a_llist_prod_prod$ )A_a_llist_prod_a_a_llist_prod_prod$ )
(declare-fun trans$ (A_llist_a_llist_prod_set$ )Bool )
(declare-fun trans$a (A_a_prod_set$ )Bool )
(declare-fun trans$b (A_a_prod_a_a_prod_prod_set$ )Bool )
(declare-fun trans$c (A_llist_llist_a_llist_llist_prod_set$ )Bool )
(declare-fun trans$d (A_a_llist_prod_a_a_llist_prod_prod_set$ )Bool )
(declare-fun trans$e (A_llist_a_prod_a_llist_a_prod_prod_set$ )Bool )
(declare-fun trans$f (A_llist_a_llist_prod_a_llist_a_llist_prod_prod_set$ )Bool )
(declare-fun trans$g (A_llist_llist_llist_a_llist_llist_llist_prod_set$ )Bool )
(declare-fun trans$h (A_a_prod_a_prod_a_a_prod_a_prod_prod_set$ )Bool )
(declare-fun trans$i (A_a_a_prod_prod_a_a_a_prod_prod_prod_set$ )Bool )
(declare-fun trans$j (A_llist_a_a_prod_prod_a_llist_a_a_prod_prod_prod_set$ )Bool )
(declare-fun trans$k (A_a_a_llist_prod_prod_a_a_a_llist_prod_prod_prod_set$ )Bool )
(declare-fun trans$l (A_a_llist_a_prod_prod_a_a_llist_a_prod_prod_prod_set$ )Bool )
(declare-fun trans$m (A_a_prod_a_llist_prod_a_a_prod_a_llist_prod_prod_set$ )Bool )
(declare-fun transp$ (A_a_bool_fun_fun$ )Bool )
(declare-fun antisym$ (A_llist_llist_llist_a_llist_llist_llist_prod_set$ )Bool )
(declare-fun collect$ (A_llist_a_llist_prod_bool_fun$ )A_llist_a_llist_prod_set$ )
(declare-fun fun_app$ (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun llexord$ (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun lprefix$ (A_llist_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun transp$a (A_llist_a_llist_bool_fun_fun$ )Bool )
(declare-fun transp$b (A_a_prod_a_a_prod_bool_fun_fun$ )Bool )
(declare-fun transp$c (A_llist_llist_a_llist_llist_bool_fun_fun$ )Bool )
(declare-fun transp$d (A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )Bool )
(declare-fun transp$e (A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )Bool )
(declare-fun transp$f (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )Bool )
(declare-fun transp$g (A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ )Bool )
(declare-fun transp$h (A_a_prod_a_prod_a_a_prod_a_prod_bool_fun_fun$ )Bool )
(declare-fun transp$i (A_a_a_prod_prod_a_a_a_prod_prod_bool_fun_fun$ )Bool )
(declare-fun antisym$a (A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod_set$ )Bool )
(declare-fun antisym$b (A_llist_a_llist_prod_a_llist_a_llist_prod_prod_set$ )Bool )
(declare-fun antisym$c (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )Bool )
(declare-fun antisym$d (A_llist_a_prod_a_llist_a_prod_prod_set$ )Bool )
(declare-fun antisym$e (A_llist_a_prod_llist_a_llist_a_prod_llist_prod_set$ )Bool )
(declare-fun antisym$f (A_a_llist_prod_a_a_llist_prod_prod_set$ )Bool )
(declare-fun antisym$g (A_a_llist_prod_llist_a_a_llist_prod_llist_prod_set$ )Bool )
(declare-fun antisym$h (A_a_prod_a_a_prod_prod_set$ )Bool )
(declare-fun antisym$i (A_a_prod_llist_a_a_prod_llist_prod_set$ )Bool )
(declare-fun antisym$j (A_llist_llist_a_llist_llist_prod_set$ )Bool )
(declare-fun antisym$k (A_llist_a_llist_prod_set$ )Bool )
(declare-fun antisym$l (A_a_prod_set$ )Bool )
(declare-fun collect$a (A_a_prod_bool_fun$ )A_a_prod_set$ )
(declare-fun collect$b (A_llist_llist_llist_a_llist_llist_llist_prod_bool_fun$ )A_llist_llist_llist_a_llist_llist_llist_prod_set$ )
(declare-fun collect$c (A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod_bool_fun$ )A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod_set$ )
(declare-fun collect$d (A_llist_a_llist_prod_a_llist_a_llist_prod_prod_bool_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_prod_set$ )
(declare-fun collect$e (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_bool_fun$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_set$ )
(declare-fun collect$f (A_llist_a_prod_a_llist_a_prod_prod_bool_fun$ )A_llist_a_prod_a_llist_a_prod_prod_set$ )
(declare-fun collect$g (A_llist_a_prod_llist_a_llist_a_prod_llist_prod_bool_fun$ )A_llist_a_prod_llist_a_llist_a_prod_llist_prod_set$ )
(declare-fun collect$h (A_a_llist_prod_a_a_llist_prod_prod_bool_fun$ )A_a_llist_prod_a_a_llist_prod_prod_set$ )
(declare-fun collect$i (A_a_llist_prod_llist_a_a_llist_prod_llist_prod_bool_fun$ )A_a_llist_prod_llist_a_a_llist_prod_llist_prod_set$ )
(declare-fun collect$j (A_a_prod_a_a_prod_prod_bool_fun$ )A_a_prod_a_a_prod_prod_set$ )
(declare-fun collect$k (A_a_prod_llist_a_a_prod_llist_prod_bool_fun$ )A_a_prod_llist_a_a_prod_llist_prod_set$ )
(declare-fun collect$l (A_llist_llist_a_llist_llist_prod_bool_fun$ )A_llist_llist_a_llist_llist_prod_set$ )
(declare-fun collect$m (A_a_prod_a_prod_a_a_prod_a_prod_prod_bool_fun$ )A_a_prod_a_prod_a_a_prod_a_prod_prod_set$ )
(declare-fun collect$n (A_a_a_prod_prod_a_a_a_prod_prod_prod_bool_fun$ )A_a_a_prod_prod_a_a_a_prod_prod_prod_set$ )
(declare-fun fun_app$a (A_llist_llist_a_llist_llist_bool_fun_fun$ A_llist_llist$ )A_llist_llist_bool_fun$ )
(declare-fun fun_app$b (A_llist_a_llist_a_llist_prod_fun$ A_llist$ )A_llist_a_llist_prod$ )
(declare-fun fun_app$c (A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ A_llist$ )A_llist_a_llist_a_llist_prod_fun$ )
(declare-fun fun_app$d (A_llist_a_a_prod_fun$ A_llist$ )A_a_prod$ )
(declare-fun fun_app$e (A_llist_a_llist_a_a_prod_fun_fun$ A_llist$ )A_llist_a_a_prod_fun$ )
(declare-fun fun_app$f (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$g (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$h (A_llist_a_prod_bool_fun$ A_llist_a_prod$ )Bool )
(declare-fun fun_app$i (A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ A_llist_a_prod$ )A_llist_a_prod_bool_fun$ )
(declare-fun fun_app$j (A_a_llist_prod_bool_fun$ A_a_llist_prod$ )Bool )
(declare-fun fun_app$k (A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ A_a_llist_prod$ )A_a_llist_prod_bool_fun$ )
(declare-fun fun_app$l (A_a_prod_bool_fun$ A_a_prod$ )Bool )
(declare-fun fun_app$m (A_a_prod_a_a_prod_bool_fun_fun$ A_a_prod$ )A_a_prod_bool_fun$ )
(declare-fun fun_app$n (A_a_llist_a_llist_prod_fun$ A$ )A_llist_a_llist_prod$ )
(declare-fun fun_app$o (A_a_a_llist_a_llist_prod_fun_fun$ A$ )A_a_llist_a_llist_prod_fun$ )
(declare-fun fun_app$p (A_a_a_prod_fun$ A$ )A_a_prod$ )
(declare-fun fun_app$q (A_a_a_a_prod_fun_fun$ A$ )A_a_a_prod_fun$ )
(declare-fun fun_app$r (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$s (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$t (A_llist_llist_a_llist_llist_prod_bool_fun$ A_llist_llist_a_llist_llist_prod$ )Bool )
(declare-fun fun_app$u (A_llist_llist_a_llist_llist_bool_fun_fun_a_llist_llist_a_llist_llist_prod_bool_fun_fun$ A_llist_llist_a_llist_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_prod_bool_fun$ )
(declare-fun fun_app$v (A_a_llist_llist_a_llist_llist_prod_fun$ A$ )A_llist_llist_a_llist_llist_prod$ )
(declare-fun fun_app$w (A_a_a_llist_llist_a_llist_llist_prod_fun_fun$ A$ )A_a_llist_llist_a_llist_llist_prod_fun$ )
(declare-fun fun_app$x (A_llist_a_llist_prod_a_a_prod_fun$ A_llist_a_llist_prod$ )A_a_prod$ )
(declare-fun fun_app$y (A_llist_a_llist_a_a_prod_fun_fun_a_llist_a_llist_prod_a_a_prod_fun_fun$ A_llist_a_llist_a_a_prod_fun_fun$ )A_llist_a_llist_prod_a_a_prod_fun$ )
(declare-fun fun_app$z (A_llist_a_llist_prod_bool_fun$ A_llist_a_llist_prod$ )Bool )
(declare-fun lex_prod$ (A_a_prod_set$ A_a_prod_set$ )A_a_prod_a_a_prod_prod_set$ )
(declare-fun llexord$a (A_llist_llist_a_llist_llist_bool_fun_fun$ )A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ )
(declare-fun llexord$b (A_llist_a_llist_bool_fun_fun$ )A_llist_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun llexord$c (A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ )A_llist_llist_llist_llist_a_llist_llist_llist_llist_bool_fun_fun$ )
(declare-fun llexord$d (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )
(declare-fun llexord$e (A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )A_llist_a_prod_llist_a_llist_a_prod_llist_bool_fun_fun$ )
(declare-fun llexord$f (A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )A_a_llist_prod_llist_a_a_llist_prod_llist_bool_fun_fun$ )
(declare-fun llexord$g (A_a_prod_a_a_prod_bool_fun_fun$ )A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$a (A_llist_llist$ A_llist_llist$ )Bool )
(declare-fun lprefix$b (A_llist$ A_llist$ )Bool )
(declare-fun case_prod$ ()A_llist_llist_a_llist_llist_bool_fun_fun_a_llist_llist_a_llist_llist_prod_bool_fun_fun$ )
(declare-fun fun_app$aa (A_llist_a_llist_bool_fun_fun_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$ab (A_a_prod_a_llist_a_llist_prod_fun$ A_a_prod$ )A_llist_a_llist_prod$ )
(declare-fun fun_app$ac (A_a_a_llist_a_llist_prod_fun_fun_a_a_prod_a_llist_a_llist_prod_fun_fun$ A_a_a_llist_a_llist_prod_fun_fun$ )A_a_prod_a_llist_a_llist_prod_fun$ )
(declare-fun fun_app$ad (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod$ )
(declare-fun fun_app$ae (A_a_a_a_prod_fun_fun_a_a_prod_a_a_prod_fun_fun$ A_a_a_a_prod_fun_fun$ )A_a_prod_a_a_prod_fun$ )
(declare-fun fun_app$af (A_a_bool_fun_fun_a_a_prod_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_prod_bool_fun$ )
(declare-fun fun_app$ag (A_llist_llist_a_a_prod_fun$ A_llist_llist$ )A_a_prod$ )
(declare-fun fun_app$ah (A_llist_llist_a_llist_llist_a_a_prod_fun_fun$ A_llist_llist$ )A_llist_llist_a_a_prod_fun$ )
(declare-fun fun_app$ai (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$aj (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun_a_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun fun_app$ak (A_a_prod_a_a_prod_bool_fun_fun_a_a_prod_a_a_prod_bool_fun_fun_fun$ A_a_prod_a_a_prod_bool_fun_fun$ )A_a_prod_a_a_prod_bool_fun_fun$ )
(declare-fun fun_app$al (Bool_a_llist_a_llist_prod_fun$ Bool )A_llist_a_llist_prod$ )
(declare-fun fun_app$am (Bool_a_a_prod_fun$ Bool )A_a_prod$ )
(declare-fun fun_app$an (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$ao (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$ap (A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ A_llist_llist_llist$ )A_llist_llist_llist_bool_fun$ )
(declare-fun fun_app$aq (A_llist_a_llist_prod_a_llist_a_llist_prod_prod_bool_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_prod$ )Bool )
(declare-fun fun_app$ar (A_llist_a_prod_a_llist_a_prod_prod_bool_fun$ A_llist_a_prod_a_llist_a_prod_prod$ )Bool )
(declare-fun fun_app$as (A_llist_a_prod_a_llist_a_prod_bool_fun_fun_a_llist_a_prod_a_llist_a_prod_prod_bool_fun_fun$ A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )A_llist_a_prod_a_llist_a_prod_prod_bool_fun$ )
(declare-fun fun_app$at (A_a_llist_prod_a_a_llist_prod_prod_bool_fun$ A_a_llist_prod_a_a_llist_prod_prod$ )Bool )
(declare-fun fun_app$au (A_a_llist_prod_a_a_llist_prod_bool_fun_fun_a_a_llist_prod_a_a_llist_prod_prod_bool_fun_fun$ A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )A_a_llist_prod_a_a_llist_prod_prod_bool_fun$ )
(declare-fun fun_app$av (A_a_prod_a_a_prod_prod_bool_fun$ A_a_prod_a_a_prod_prod$ )Bool )
(declare-fun fun_app$aw (A_a_prod_a_a_prod_bool_fun_fun_a_a_prod_a_a_prod_prod_bool_fun_fun$ A_a_prod_a_a_prod_bool_fun_fun$ )A_a_prod_a_a_prod_prod_bool_fun$ )
(declare-fun fun_app$ax (A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod$ )
(declare-fun fun_app$ay (A_llist_a_llist_a_llist_a_llist_prod_fun_fun_a_llist_a_llist_prod_a_llist_a_llist_prod_fun_fun$ A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ )
(declare-fun lex_prod$a (A_llist_a_llist_prod_set$ A_a_prod_set$ )A_llist_a_prod_a_llist_a_prod_prod_set$ )
(declare-fun lex_prod$b (A_a_prod_set$ A_llist_a_llist_prod_set$ )A_a_llist_prod_a_a_llist_prod_prod_set$ )
(declare-fun lex_prod$c (A_llist_a_llist_prod_set$ A_llist_a_llist_prod_set$ )A_llist_a_llist_prod_a_llist_a_llist_prod_prod_set$ )
(declare-fun lex_prod$d (A_a_prod_set$ A_a_prod_a_a_prod_prod_set$ )A_a_a_prod_prod_a_a_a_prod_prod_prod_set$ )
(declare-fun lex_prod$e (A_a_prod_a_a_prod_prod_set$ A_a_prod_set$ )A_a_prod_a_prod_a_a_prod_a_prod_prod_set$ )
(declare-fun lex_prod$f (A_llist_a_llist_prod_set$ A_a_prod_a_a_prod_prod_set$ )A_llist_a_a_prod_prod_a_llist_a_a_prod_prod_prod_set$ )
(declare-fun lex_prod$g (A_a_prod_set$ A_a_llist_prod_a_a_llist_prod_prod_set$ )A_a_a_llist_prod_prod_a_a_a_llist_prod_prod_prod_set$ )
(declare-fun lex_prod$h (A_a_prod_set$ A_llist_a_prod_a_llist_a_prod_prod_set$ )A_a_llist_a_prod_prod_a_a_llist_a_prod_prod_prod_set$ )
(declare-fun lex_prod$i (A_a_prod_a_a_prod_prod_set$ A_llist_a_llist_prod_set$ )A_a_prod_a_llist_prod_a_a_prod_a_llist_prod_prod_set$ )
(declare-fun case_prod$a ()A_llist_a_llist_a_a_prod_fun_fun_a_llist_a_llist_prod_a_a_prod_fun_fun$ )
(declare-fun case_prod$b ()A_llist_a_llist_bool_fun_fun_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$c ()A_a_a_llist_a_llist_prod_fun_fun_a_a_prod_a_llist_a_llist_prod_fun_fun$ )
(declare-fun case_prod$d ()A_a_a_a_prod_fun_fun_a_a_prod_a_a_prod_fun_fun$ )
(declare-fun case_prod$e ()A_a_bool_fun_fun_a_a_prod_bool_fun_fun$ )
(declare-fun case_prod$f (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_prod_bool_fun$ )
(declare-fun case_prod$g ()A_llist_a_prod_a_llist_a_prod_bool_fun_fun_a_llist_a_prod_a_llist_a_prod_prod_bool_fun_fun$ )
(declare-fun case_prod$h ()A_a_llist_prod_a_a_llist_prod_bool_fun_fun_a_a_llist_prod_a_a_llist_prod_prod_bool_fun_fun$ )
(declare-fun case_prod$i ()A_a_prod_a_a_prod_bool_fun_fun_a_a_prod_a_a_prod_prod_bool_fun_fun$ )
(declare-fun case_prod$j ()A_llist_a_llist_a_llist_a_llist_prod_fun_fun_a_llist_a_llist_prod_a_llist_a_llist_prod_fun_fun$ )
(declare-fun case_prod$k (A_llist_llist_a_llist_llist_a_a_prod_fun_fun$ A_llist_llist_a_llist_llist_prod$ )A_a_prod$ )
(declare-fun case_prod$l (A_a_a_llist_llist_a_llist_llist_prod_fun_fun$ A_a_prod$ )A_llist_llist_a_llist_llist_prod$ )
(declare-fun case_prod$m (A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ )A_llist_llist_llist_a_llist_llist_llist_prod_bool_fun$ )
(declare-fun case_prod$n (A_llist_llist_llist_llist_a_llist_llist_llist_llist_bool_fun_fun$ )A_llist_llist_llist_llist_a_llist_llist_llist_llist_prod_bool_fun$ )
(declare-fun case_prod$o (A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_bool_fun_fun$ )A_llist_a_llist_prod_llist_a_llist_a_llist_prod_llist_prod_bool_fun$ )
(declare-fun case_prod$p (A_llist_a_prod_llist_a_llist_a_prod_llist_bool_fun_fun$ )A_llist_a_prod_llist_a_llist_a_prod_llist_prod_bool_fun$ )
(declare-fun case_prod$q (A_a_llist_prod_llist_a_a_llist_prod_llist_bool_fun_fun$ )A_a_llist_prod_llist_a_a_llist_prod_llist_prod_bool_fun$ )
(declare-fun case_prod$r (A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ )A_a_prod_llist_a_a_prod_llist_prod_bool_fun$ )
(declare-fun case_prod$s (A_a_prod_a_prod_a_a_prod_a_prod_bool_fun_fun$ )A_a_prod_a_prod_a_a_prod_a_prod_prod_bool_fun$ )
(declare-fun case_prod$t (A_a_a_prod_prod_a_a_a_prod_prod_bool_fun_fun$ )A_a_a_prod_prod_a_a_a_prod_prod_prod_bool_fun$ )
(declare-fun internal_split$ ()A_a_bool_fun_fun_a_a_prod_bool_fun_fun$ )
(declare-fun internal_split$a ()A_llist_a_llist_bool_fun_fun_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun internal_split$b ()A_a_a_a_prod_fun_fun_a_a_prod_a_a_prod_fun_fun$ )
(declare-fun internal_split$c ()A_llist_a_llist_a_a_prod_fun_fun_a_llist_a_llist_prod_a_a_prod_fun_fun$ )
(declare-fun internal_split$d ()A_a_a_llist_a_llist_prod_fun_fun_a_a_prod_a_llist_a_llist_prod_fun_fun$ )
(declare-fun internal_split$e ()A_llist_llist_a_llist_llist_bool_fun_fun_a_llist_llist_a_llist_llist_prod_bool_fun_fun$ )
(declare-fun internal_split$f ()A_llist_a_llist_a_llist_a_llist_prod_fun_fun_a_llist_a_llist_prod_a_llist_a_llist_prod_fun_fun$ )
(declare-fun internal_split$g ()A_a_prod_a_a_prod_bool_fun_fun_a_a_prod_a_a_prod_prod_bool_fun_fun$ )
(declare-fun internal_split$h ()A_llist_a_prod_a_llist_a_prod_bool_fun_fun_a_llist_a_prod_a_llist_a_prod_prod_bool_fun_fun$ )
(declare-fun internal_split$i ()A_a_llist_prod_a_a_llist_prod_bool_fun_fun_a_a_llist_prod_a_a_llist_prod_prod_bool_fun_fun$ )
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(! (= (fun_app$ (fun_app$a (uvi$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$a ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$a (uvi$ ?v0 )?v1 )?v2 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$c (uvj$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$c ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$c (uvj$ ?v0 )?v1 )?v2 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_a_prod_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$d (fun_app$e (uvg$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$e ?v0 ?v2 )?v1 )):pattern ((fun_app$d (fun_app$e (uvg$ ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$f (fun_app$g (uve$ ?v0 )?v1 )?v2 )(fun_app$f (fun_app$g ?v0 ?v2 )?v1 )):pattern ((fun_app$f (fun_app$g (uve$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )(?v1 A_llist_a_prod$ )(?v2 A_llist_a_prod$ ))(! (= (fun_app$h (fun_app$i (uvl$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$i (uvl$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )(?v1 A_a_llist_prod$ )(?v2 A_a_llist_prod$ ))(! (= (fun_app$j (fun_app$k (uvm$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$k ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$k (uvm$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_bool_fun_fun$ )(?v1 A_a_prod$ )(?v2 A_a_prod$ ))(! (= (fun_app$l (fun_app$m (uvk$ ?v0 )?v1 )?v2 )(fun_app$l (fun_app$m ?v0 ?v2 )?v1 )):pattern ((fun_app$l (fun_app$m (uvk$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_a_a_llist_a_llist_prod_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$n (fun_app$o (uvh$ ?v0 )?v1 )?v2 )(fun_app$n (fun_app$o ?v0 ?v2 )?v1 )):pattern ((fun_app$n (fun_app$o (uvh$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$p (fun_app$q (uvf$ ?v0 )?v1 )?v2 )(fun_app$p (fun_app$q ?v0 ?v2 )?v1 )):pattern ((fun_app$p (fun_app$q (uvf$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$r (fun_app$s (uvd$ ?v0 )?v1 )?v2 )(fun_app$r (fun_app$s ?v0 ?v2 )?v1 )):pattern ((fun_app$r (fun_app$s (uvd$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_a_a_llist_llist_a_llist_llist_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$s (uup$ ?v0 ?v1 )?v2 )?v3 )(fun_app$t (fun_app$u case_prod$ ?v0 )(fun_app$v (fun_app$w ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uup$ ?v0 ?v1 )?v2 )?v3 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_a_prod_fun_fun$ )(?v1 A_a_a_llist_a_llist_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$p (fun_app$q (uun$ ?v0 ?v1 )?v2 )?v3 )(fun_app$x (fun_app$y case_prod$a ?v0 )(fun_app$n (fun_app$o ?v1 ?v2 )?v3 ))):pattern ((fun_app$p (fun_app$q (uun$ ?v0 ?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$f (fun_app$g (uuj$ ?v0 ?v1 )?v2 )?v3 )(fun_app$z (fun_app$aa case_prod$b ?v0 )(fun_app$b (fun_app$c ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (uuj$ ?v0 ?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_a_a_llist_a_llist_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$s (uuh$ ?v0 ?v1 )?v2 )?v3 )(fun_app$z (fun_app$aa case_prod$b ?v0 )(fun_app$n (fun_app$o ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uuh$ ?v0 ?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 A_a_a_llist_a_llist_prod_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$n (fun_app$o (uuo$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ab (fun_app$ac case_prod$c ?v0 )(fun_app$p (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$n (fun_app$o (uuo$ ?v0 ?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_llist_a_llist_a_a_prod_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$d (fun_app$e (uum$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ad (fun_app$ae case_prod$d ?v0 )(fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uum$ ?v0 ?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$p (fun_app$q (uuk$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ad (fun_app$ae case_prod$d ?v0 )(fun_app$p (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$p (fun_app$q (uuk$ ?v0 ?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist_llist_a_llist_llist_a_a_prod_fun_fun$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(! (= (fun_app$ (fun_app$a (uul$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l (fun_app$af case_prod$e ?v0 )(fun_app$ag (fun_app$ah ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uul$ ?v0 ?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist_a_llist_a_a_prod_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$f (fun_app$g (uui$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l (fun_app$af case_prod$e ?v0 )(fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (uui$ ?v0 ?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$s (uug$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l (fun_app$af case_prod$e ?v0 )(fun_app$p (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uug$ ?v0 ?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(! (= (fun_app$ (fun_app$a (uud$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uud$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$f (fun_app$g (uue$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (uue$ ?v0 ?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v2 A_llist_a_llist_prod$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$z (fun_app$ai (fun_app$aj (uu$ ?v0 )?v1 )?v2 )?v3 )(and ?v0 (fun_app$z (fun_app$ai ?v1 ?v2 )?v3 ))):pattern ((fun_app$z (fun_app$ai (fun_app$aj (uu$ ?v0 )?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )(?v2 A_llist_a_prod$ )(?v3 A_llist_a_prod$ ))(! (= (fun_app$h (fun_app$i (uua$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uua$ ?v0 ?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 Bool )(?v1 A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )(?v2 A_a_llist_prod$ )(?v3 A_a_llist_prod$ ))(! (= (fun_app$j (fun_app$k (uub$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$j (fun_app$k ?v1 ?v2 )?v3 ))):pattern ((fun_app$j (fun_app$k (uub$ ?v0 ?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 Bool )(?v1 A_a_prod_a_a_prod_bool_fun_fun$ )(?v2 A_a_prod$ )(?v3 A_a_prod$ ))(! (= (fun_app$l (fun_app$m (fun_app$ak (uuc$ ?v0 )?v1 )?v2 )?v3 )(and ?v0 (fun_app$l (fun_app$m ?v1 ?v2 )?v3 ))):pattern ((fun_app$l (fun_app$m (fun_app$ak (uuc$ ?v0 )?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (forall ((?v0 Bool )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$s (uuf$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$r (fun_app$s ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uuf$ ?v0 ?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_bool_fun$ )(?v1 A_a_a_llist_a_llist_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$s (uuy$ ?v0 ?v1 )?v2 )?v3 )(fun_app$z ?v0 (fun_app$n (fun_app$o ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uuy$ ?v0 ?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$p (fun_app$q (uuw$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ad ?v0 (fun_app$p (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$p (fun_app$q (uuw$ ?v0 ?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 A_a_prod_bool_fun$ )(?v1 A_llist_a_llist_a_a_prod_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$f (fun_app$g (uux$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (uux$ ?v0 ?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_a_prod_bool_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$s (uut$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l ?v0 (fun_app$p (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uut$ ?v0 ?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 Bool_a_llist_a_llist_prod_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$n (fun_app$o (uuv$ ?v0 ?v1 )?v2 )?v3 )(fun_app$al ?v0 (fun_app$r (fun_app$s ?v1 ?v2 )?v3 ))):pattern ((fun_app$n (fun_app$o (uuv$ ?v0 ?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 Bool_a_a_prod_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$d (fun_app$e (uuu$ ?v0 ?v1 )?v2 )?v3 )(fun_app$am ?v0 (fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (uuu$ ?v0 ?v1 )?v2 )?v3 )))):named a32 ))
(assert (! (forall ((?v0 Bool_a_a_prod_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$p (fun_app$q (uus$ ?v0 ?v1 )?v2 )?v3 )(fun_app$am ?v0 (fun_app$r (fun_app$s ?v1 ?v2 )?v3 ))):pattern ((fun_app$p (fun_app$q (uus$ ?v0 ?v1 )?v2 )?v3 )))):named a33 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(! (= (fun_app$ (fun_app$a (uuz$ ?v0 ?v1 )?v2 )?v3 )(fun_app$an ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uuz$ ?v0 ?v1 )?v2 )?v3 )))):named a34 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$f (fun_app$g (uur$ ?v0 ?v1 )?v2 )?v3 )(fun_app$an ?v0 (fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (uur$ ?v0 ?v1 )?v2 )?v3 )))):named a35 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$r (fun_app$s (uuq$ ?v0 ?v1 )?v2 )?v3 )(fun_app$an ?v0 (fun_app$r (fun_app$s ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uuq$ ?v0 ?v1 )?v2 )?v3 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(! (= (fun_app$ (fun_app$a uva$ ?v0 )?v1 )false ):pattern ((fun_app$ (fun_app$a uva$ ?v0 )?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$g uvb$ ?v0 )?v1 )false ):pattern ((fun_app$f (fun_app$g uvb$ ?v0 )?v1 )))):named a38 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$r (fun_app$s uvc$ ?v0 )?v1 )false ):pattern ((fun_app$r (fun_app$s uvc$ ?v0 )?v1 )))):named a39 ))
(assert (! (not (trans$ (collect$ (fun_app$aa case_prod$b (llexord$ r$ ))))):named a40 ))
(assert (! (trans$a (collect$a (fun_app$af case_prod$e r$ ))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ ))(fun_app$ao (fun_app$ap (llexord$a ?v0 )?v1 )?v1 )):named a42 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(fun_app$ (fun_app$a (llexord$b ?v0 )?v1 )?v1 )):named a43 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(fun_app$f (fun_app$g (llexord$ ?v0 )?v1 )?v1 )):named a44 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (fun_app$ao (fun_app$ap (llexord$a ?v0 )?v1 )?v2 )(and (fun_app$ao (fun_app$ap (llexord$a ?v0 )?v2 )?v3 )(forall ((?v4 A_llist_llist$ )(?v5 A_llist_llist$ )(?v6 A_llist_llist$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v4 )?v5 )(fun_app$ (fun_app$a ?v0 ?v5 )?v6 ))(fun_app$ (fun_app$a ?v0 ?v4 )?v6 )))))(fun_app$ao (fun_app$ap (llexord$a ?v0 )?v1 )?v3 ))):named a45 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (fun_app$ (fun_app$a (llexord$b ?v0 )?v1 )?v2 )(and (fun_app$ (fun_app$a (llexord$b ?v0 )?v2 )?v3 )(forall ((?v4 A_llist$ )(?v5 A_llist$ )(?v6 A_llist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v4 )?v5 )(fun_app$f (fun_app$g ?v0 ?v5 )?v6 ))(fun_app$f (fun_app$g ?v0 ?v4 )?v6 )))))(fun_app$ (fun_app$a (llexord$b ?v0 )?v1 )?v3 ))):named a46 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (and (fun_app$f (fun_app$g (llexord$ ?v0 )?v1 )?v2 )(and (fun_app$f (fun_app$g (llexord$ ?v0 )?v2 )?v3 )(forall ((?v4 A$ )(?v5 A$ )(?v6 A$ ))(=> (and (fun_app$r (fun_app$s ?v0 ?v4 )?v5 )(fun_app$r (fun_app$s ?v0 ?v5 )?v6 ))(fun_app$r (fun_app$s ?v0 ?v4 )?v6 )))))(fun_app$f (fun_app$g (llexord$ ?v0 )?v1 )?v3 ))):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (and (fun_app$ao (fun_app$ap (llexord$a ?v0 )?v1 )?v2 )(and (fun_app$ao (fun_app$ap (llexord$a ?v0 )?v2 )?v1 )(forall ((?v3 A_llist_llist$ )(?v4 A_llist_llist$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v0 ?v4 )?v3 ))false ))))(= ?v1 ?v2 ))):named a48 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (fun_app$ (fun_app$a (llexord$b ?v0 )?v1 )?v2 )(and (fun_app$ (fun_app$a (llexord$b ?v0 )?v2 )?v1 )(forall ((?v3 A_llist$ )(?v4 A_llist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$f (fun_app$g ?v0 ?v4 )?v3 ))false ))))(= ?v1 ?v2 ))):named a49 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$f (fun_app$g (llexord$ ?v0 )?v1 )?v2 )(and (fun_app$f (fun_app$g (llexord$ ?v0 )?v2 )?v1 )(forall ((?v3 A$ )(?v4 A$ ))(=> (and (fun_app$r (fun_app$s ?v0 ?v3 )?v4 )(fun_app$r (fun_app$s ?v0 ?v4 )?v3 ))false ))))(= ?v1 ?v2 ))):named a50 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_prod$ ))(= (fun_app$aq (case_prod$f (fun_app$aj (uu$ ?v0 )?v1 ))?v2 )(and ?v0 (fun_app$aq (case_prod$f ?v1 )?v2 )))):named a51 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )(?v2 A_llist_a_prod_a_llist_a_prod_prod$ ))(= (fun_app$ar (fun_app$as case_prod$g (uua$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$ar (fun_app$as case_prod$g ?v1 )?v2 )))):named a52 ))
(assert (! (forall ((?v0 Bool )(?v1 A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )(?v2 A_a_llist_prod_a_a_llist_prod_prod$ ))(= (fun_app$at (fun_app$au case_prod$h (uub$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$at (fun_app$au case_prod$h ?v1 )?v2 )))):named a53 ))
(assert (! (forall ((?v0 Bool )(?v1 A_a_prod_a_a_prod_bool_fun_fun$ )(?v2 A_a_prod_a_a_prod_prod$ ))(= (fun_app$av (fun_app$aw case_prod$i (fun_app$ak (uuc$ ?v0 )?v1 ))?v2 )(and ?v0 (fun_app$av (fun_app$aw case_prod$i ?v1 )?v2 )))):named a54 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist_a_llist_llist_prod$ ))(= (fun_app$t (fun_app$u case_prod$ (uud$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$t (fun_app$u case_prod$ ?v1 )?v2 )))):named a55 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$z (fun_app$aa case_prod$b (uue$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$z (fun_app$aa case_prod$b ?v1 )?v2 )))):named a56 ))
(assert (! (forall ((?v0 Bool )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$l (fun_app$af case_prod$e (uuf$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$l (fun_app$af case_prod$e ?v1 )?v2 )))):named a57 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$l (fun_app$af case_prod$e ?v0 )(fun_app$ad (fun_app$ae case_prod$d ?v1 )?v2 ))(fun_app$l (fun_app$af case_prod$e (uug$ ?v0 ?v1 ))?v2 ))):named a58 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_a_a_llist_a_llist_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$z (fun_app$aa case_prod$b ?v0 )(fun_app$ab (fun_app$ac case_prod$c ?v1 )?v2 ))(fun_app$l (fun_app$af case_prod$e (uuh$ ?v0 ?v1 ))?v2 ))):named a59 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist_a_llist_a_a_prod_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$l (fun_app$af case_prod$e ?v0 )(fun_app$x (fun_app$y case_prod$a ?v1 )?v2 ))(fun_app$z (fun_app$aa case_prod$b (uui$ ?v0 ?v1 ))?v2 ))):named a60 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$z (fun_app$aa case_prod$b ?v0 )(fun_app$ax (fun_app$ay case_prod$j ?v1 )?v2 ))(fun_app$z (fun_app$aa case_prod$b (uuj$ ?v0 ?v1 ))?v2 ))):named a61 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$ad (fun_app$ae case_prod$d ?v0 )(fun_app$ad (fun_app$ae case_prod$d ?v1 )?v2 ))(fun_app$ad (fun_app$ae case_prod$d (uuk$ ?v0 ?v1 ))?v2 ))):named a62 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist_llist_a_llist_llist_a_a_prod_fun_fun$ )(?v2 A_llist_llist_a_llist_llist_prod$ ))(= (fun_app$l (fun_app$af case_prod$e ?v0 )(case_prod$k ?v1 ?v2 ))(fun_app$t (fun_app$u case_prod$ (uul$ ?v0 ?v1 ))?v2 ))):named a63 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_llist_a_llist_a_a_prod_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$ad (fun_app$ae case_prod$d ?v0 )(fun_app$x (fun_app$y case_prod$a ?v1 )?v2 ))(fun_app$x (fun_app$y case_prod$a (uum$ ?v0 ?v1 ))?v2 ))):named a64 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_a_prod_fun_fun$ )(?v1 A_a_a_llist_a_llist_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$x (fun_app$y case_prod$a ?v0 )(fun_app$ab (fun_app$ac case_prod$c ?v1 )?v2 ))(fun_app$ad (fun_app$ae case_prod$d (uun$ ?v0 ?v1 ))?v2 ))):named a65 ))
(assert (! (forall ((?v0 A_a_a_llist_a_llist_prod_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$ab (fun_app$ac case_prod$c ?v0 )(fun_app$ad (fun_app$ae case_prod$d ?v1 )?v2 ))(fun_app$ab (fun_app$ac case_prod$c (uuo$ ?v0 ?v1 ))?v2 ))):named a66 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_a_a_llist_llist_a_llist_llist_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$t (fun_app$u case_prod$ ?v0 )(case_prod$l ?v1 ?v2 ))(fun_app$l (fun_app$af case_prod$e (uup$ ?v0 ?v1 ))?v2 ))):named a67 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$an ?v0 (fun_app$l (fun_app$af case_prod$e ?v1 )?v2 ))(fun_app$l (fun_app$af case_prod$e (uuq$ ?v0 ?v1 ))?v2 ))):named a68 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$an ?v0 (fun_app$z (fun_app$aa case_prod$b ?v1 )?v2 ))(fun_app$z (fun_app$aa case_prod$b (uur$ ?v0 ?v1 ))?v2 ))):named a69 ))
(assert (! (forall ((?v0 Bool_a_a_prod_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$am ?v0 (fun_app$l (fun_app$af case_prod$e ?v1 )?v2 ))(fun_app$ad (fun_app$ae case_prod$d (uus$ ?v0 ?v1 ))?v2 ))):named a70 ))
(assert (! (forall ((?v0 A_a_prod_bool_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$l ?v0 (fun_app$ad (fun_app$ae case_prod$d ?v1 )?v2 ))(fun_app$l (fun_app$af case_prod$e (uut$ ?v0 ?v1 ))?v2 ))):named a71 ))
(assert (! (forall ((?v0 Bool_a_a_prod_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$am ?v0 (fun_app$z (fun_app$aa case_prod$b ?v1 )?v2 ))(fun_app$x (fun_app$y case_prod$a (uuu$ ?v0 ?v1 ))?v2 ))):named a72 ))
(assert (! (forall ((?v0 Bool_a_llist_a_llist_prod_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$al ?v0 (fun_app$l (fun_app$af case_prod$e ?v1 )?v2 ))(fun_app$ab (fun_app$ac case_prod$c (uuv$ ?v0 ?v1 ))?v2 ))):named a73 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$ad ?v0 (fun_app$ad (fun_app$ae case_prod$d ?v1 )?v2 ))(fun_app$ad (fun_app$ae case_prod$d (uuw$ ?v0 ?v1 ))?v2 ))):named a74 ))
(assert (! (forall ((?v0 A_a_prod_bool_fun$ )(?v1 A_llist_a_llist_a_a_prod_fun_fun$ )(?v2 A_llist_a_llist_prod$ ))(= (fun_app$l ?v0 (fun_app$x (fun_app$y case_prod$a ?v1 )?v2 ))(fun_app$z (fun_app$aa case_prod$b (uux$ ?v0 ?v1 ))?v2 ))):named a75 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_bool_fun$ )(?v1 A_a_a_llist_a_llist_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$z ?v0 (fun_app$ab (fun_app$ac case_prod$c ?v1 )?v2 ))(fun_app$l (fun_app$af case_prod$e (uuy$ ?v0 ?v1 ))?v2 ))):named a76 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist_a_llist_llist_prod$ ))(= (fun_app$an ?v0 (fun_app$t (fun_app$u case_prod$ ?v1 )?v2 ))(fun_app$t (fun_app$u case_prod$ (uuz$ ?v0 ?v1 ))?v2 ))):named a77 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod$ )(?v2 A_a_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$l (fun_app$af case_prod$e ?v2 )?v0 )(fun_app$l (fun_app$af case_prod$e ?v2 )?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$z (fun_app$aa case_prod$b ?v2 )?v0 )(fun_app$z (fun_app$aa case_prod$b ?v2 )?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod$ )(?v2 A_a_a_a_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ad (fun_app$ae case_prod$d ?v2 )?v0 )(fun_app$ad (fun_app$ae case_prod$d ?v2 )?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_a_a_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$x (fun_app$y case_prod$a ?v2 )?v0 )(fun_app$x (fun_app$y case_prod$a ?v2 )?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod$ )(?v2 A_a_a_llist_a_llist_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ab (fun_app$ac case_prod$c ?v2 )?v0 )(fun_app$ab (fun_app$ac case_prod$c ?v2 )?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_prod$ )(?v1 A_llist_llist_a_llist_llist_prod$ )(?v2 A_llist_llist_a_llist_llist_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$t (fun_app$u case_prod$ ?v2 )?v0 )(fun_app$t (fun_app$u case_prod$ ?v2 )?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ax (fun_app$ay case_prod$j ?v2 )?v0 )(fun_app$ax (fun_app$ay case_prod$j ?v2 )?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod$ )(?v1 A_a_prod_a_a_prod_prod$ )(?v2 A_a_prod_a_a_prod_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$av (fun_app$aw case_prod$i ?v2 )?v0 )(fun_app$av (fun_app$aw case_prod$i ?v2 )?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_llist_a_prod_a_llist_a_prod_prod$ )(?v1 A_llist_a_prod_a_llist_a_prod_prod$ )(?v2 A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ar (fun_app$as case_prod$g ?v2 )?v0 )(fun_app$ar (fun_app$as case_prod$g ?v2 )?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_a_llist_prod_a_a_llist_prod_prod$ )(?v1 A_a_llist_prod_a_a_llist_prod_prod$ )(?v2 A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$at (fun_app$au case_prod$h ?v2 )?v0 )(fun_app$at (fun_app$au case_prod$h ?v2 )?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ ))(=> (and (antisym$ (collect$b (case_prod$m ?v0 )))(forall ((?v1 A_llist_llist_llist$ ))(not (fun_app$ao (fun_app$ap ?v0 ?v1 )?v1 ))))(antisym$a (collect$c (case_prod$n (llexord$c ?v0 )))))):named a88 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ ))(=> (and (antisym$b (collect$d (case_prod$f ?v0 )))(forall ((?v1 A_llist_a_llist_prod$ ))(not (fun_app$z (fun_app$ai ?v0 ?v1 )?v1 ))))(antisym$c (collect$e (case_prod$o (llexord$d ?v0 )))))):named a89 ))
(assert (! (forall ((?v0 A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ ))(=> (and (antisym$d (collect$f (fun_app$as case_prod$g ?v0 )))(forall ((?v1 A_llist_a_prod$ ))(not (fun_app$h (fun_app$i ?v0 ?v1 )?v1 ))))(antisym$e (collect$g (case_prod$p (llexord$e ?v0 )))))):named a90 ))
(assert (! (forall ((?v0 A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ ))(=> (and (antisym$f (collect$h (fun_app$au case_prod$h ?v0 )))(forall ((?v1 A_a_llist_prod$ ))(not (fun_app$j (fun_app$k ?v0 ?v1 )?v1 ))))(antisym$g (collect$i (case_prod$q (llexord$f ?v0 )))))):named a91 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_bool_fun_fun$ ))(=> (and (antisym$h (collect$j (fun_app$aw case_prod$i ?v0 )))(forall ((?v1 A_a_prod$ ))(not (fun_app$l (fun_app$m ?v0 ?v1 )?v1 ))))(antisym$i (collect$k (case_prod$r (llexord$g ?v0 )))))):named a92 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ ))(=> (and (antisym$j (collect$l (fun_app$u case_prod$ ?v0 )))(forall ((?v1 A_llist_llist$ ))(not (fun_app$ (fun_app$a ?v0 ?v1 )?v1 ))))(antisym$ (collect$b (case_prod$m (llexord$a ?v0 )))))):named a93 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ ))(=> (and (antisym$k (collect$ (fun_app$aa case_prod$b ?v0 )))(forall ((?v1 A_llist$ ))(not (fun_app$f (fun_app$g ?v0 ?v1 )?v1 ))))(antisym$j (collect$l (fun_app$u case_prod$ (llexord$b ?v0 )))))):named a94 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(=> (and (antisym$l (collect$a (fun_app$af case_prod$e ?v0 )))(forall ((?v1 A$ ))(not (fun_app$r (fun_app$s ?v0 ?v1 )?v1 ))))(antisym$k (collect$ (fun_app$aa case_prod$b (llexord$ ?v0 )))))):named a95 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(! (= (transp$ ?v0 )(trans$a (collect$a (fun_app$af case_prod$e ?v0 )))):pattern ((transp$ ?v0 )))):named a96 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ ))(! (= (transp$a ?v0 )(trans$ (collect$ (fun_app$aa case_prod$b ?v0 )))):pattern ((transp$a ?v0 )))):named a97 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_bool_fun_fun$ ))(! (= (transp$b ?v0 )(trans$b (collect$j (fun_app$aw case_prod$i ?v0 )))):pattern ((transp$b ?v0 )))):named a98 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ ))(! (= (transp$c ?v0 )(trans$c (collect$l (fun_app$u case_prod$ ?v0 )))):pattern ((transp$c ?v0 )))):named a99 ))
(assert (! (forall ((?v0 A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ ))(! (= (transp$d ?v0 )(trans$d (collect$h (fun_app$au case_prod$h ?v0 )))):pattern ((transp$d ?v0 )))):named a100 ))
(assert (! (forall ((?v0 A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ ))(! (= (transp$e ?v0 )(trans$e (collect$f (fun_app$as case_prod$g ?v0 )))):pattern ((transp$e ?v0 )))):named a101 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ ))(! (= (transp$f ?v0 )(trans$f (collect$d (case_prod$f ?v0 )))):pattern ((transp$f ?v0 )))):named a102 ))
(assert (! (forall ((?v0 A_llist_llist_llist_a_llist_llist_llist_bool_fun_fun$ ))(! (= (transp$g ?v0 )(trans$g (collect$b (case_prod$m ?v0 )))):pattern ((transp$g ?v0 )))):named a103 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_a_a_prod_a_prod_bool_fun_fun$ ))(! (= (transp$h ?v0 )(trans$h (collect$m (case_prod$s ?v0 )))):pattern ((transp$h ?v0 )))):named a104 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_a_a_a_prod_prod_bool_fun_fun$ ))(! (= (transp$i ?v0 )(trans$i (collect$n (case_prod$t ?v0 )))):pattern ((transp$i ?v0 )))):named a105 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_a_prod_set$ ))(=> (and (trans$a ?v0 )(trans$a ?v1 ))(trans$b (lex_prod$ ?v0 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_set$ )(?v1 A_a_prod_set$ ))(=> (and (trans$ ?v0 )(trans$a ?v1 ))(trans$e (lex_prod$a ?v0 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_llist_a_llist_prod_set$ ))(=> (and (trans$a ?v0 )(trans$ ?v1 ))(trans$d (lex_prod$b ?v0 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_set$ )(?v1 A_llist_a_llist_prod_set$ ))(=> (and (trans$ ?v0 )(trans$ ?v1 ))(trans$f (lex_prod$c ?v0 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_a_prod_a_a_prod_prod_set$ ))(=> (and (trans$a ?v0 )(trans$b ?v1 ))(trans$i (lex_prod$d ?v0 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_set$ )(?v1 A_a_prod_set$ ))(=> (and (trans$b ?v0 )(trans$a ?v1 ))(trans$h (lex_prod$e ?v0 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_set$ )(?v1 A_a_prod_a_a_prod_prod_set$ ))(=> (and (trans$ ?v0 )(trans$b ?v1 ))(trans$j (lex_prod$f ?v0 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_a_llist_prod_a_a_llist_prod_prod_set$ ))(=> (and (trans$a ?v0 )(trans$d ?v1 ))(trans$k (lex_prod$g ?v0 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_llist_a_prod_a_llist_a_prod_prod_set$ ))(=> (and (trans$a ?v0 )(trans$e ?v1 ))(trans$l (lex_prod$h ?v0 ?v1 )))):named a114 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_set$ )(?v1 A_llist_a_llist_prod_set$ ))(=> (and (trans$b ?v0 )(trans$ ?v1 ))(trans$m (lex_prod$i ?v0 ?v1 )))):named a115 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (fun_app$ao (fun_app$ap (llexord$a uva$ )?v0 )?v1 )(lprefix$ ?v0 ?v1 ))):named a116 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (fun_app$ (fun_app$a (llexord$b uvb$ )?v0 )?v1 )(lprefix$a ?v0 ?v1 ))):named a117 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (fun_app$f (fun_app$g (llexord$ uvc$ )?v0 )?v1 )(lprefix$b ?v0 ?v1 ))):named a118 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_prod$ ))(= (fun_app$l (fun_app$af case_prod$e (uvd$ ?v0 ))(swap$ ?v1 ))(fun_app$l (fun_app$af case_prod$e ?v0 )?v1 ))):named a119 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_prod$ ))(= (fun_app$z (fun_app$aa case_prod$b (uve$ ?v0 ))(swap$a ?v1 ))(fun_app$z (fun_app$aa case_prod$b ?v0 )?v1 ))):named a120 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_a_prod$ ))(= (fun_app$ad (fun_app$ae case_prod$d (uvf$ ?v0 ))(swap$ ?v1 ))(fun_app$ad (fun_app$ae case_prod$d ?v0 )?v1 ))):named a121 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_a_prod_fun_fun$ )(?v1 A_llist_a_llist_prod$ ))(= (fun_app$x (fun_app$y case_prod$a (uvg$ ?v0 ))(swap$a ?v1 ))(fun_app$x (fun_app$y case_prod$a ?v0 )?v1 ))):named a122 ))
(assert (! (forall ((?v0 A_a_a_llist_a_llist_prod_fun_fun$ )(?v1 A_a_prod$ ))(= (fun_app$ab (fun_app$ac case_prod$c (uvh$ ?v0 ))(swap$ ?v1 ))(fun_app$ab (fun_app$ac case_prod$c ?v0 )?v1 ))):named a123 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_a_llist_llist_prod$ ))(= (fun_app$t (fun_app$u case_prod$ (uvi$ ?v0 ))(swap$b ?v1 ))(fun_app$t (fun_app$u case_prod$ ?v0 )?v1 ))):named a124 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_a_llist_prod_fun_fun$ )(?v1 A_llist_a_llist_prod$ ))(= (fun_app$ax (fun_app$ay case_prod$j (uvj$ ?v0 ))(swap$a ?v1 ))(fun_app$ax (fun_app$ay case_prod$j ?v0 )?v1 ))):named a125 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_bool_fun_fun$ )(?v1 A_a_prod_a_a_prod_prod$ ))(= (fun_app$av (fun_app$aw case_prod$i (uvk$ ?v0 ))(swap$c ?v1 ))(fun_app$av (fun_app$aw case_prod$i ?v0 )?v1 ))):named a126 ))
(assert (! (forall ((?v0 A_llist_a_prod_a_llist_a_prod_bool_fun_fun$ )(?v1 A_llist_a_prod_a_llist_a_prod_prod$ ))(= (fun_app$ar (fun_app$as case_prod$g (uvl$ ?v0 ))(swap$d ?v1 ))(fun_app$ar (fun_app$as case_prod$g ?v0 )?v1 ))):named a127 ))
(assert (! (forall ((?v0 A_a_llist_prod_a_a_llist_prod_bool_fun_fun$ )(?v1 A_a_llist_prod_a_a_llist_prod_prod$ ))(= (fun_app$at (fun_app$au case_prod$h (uvm$ ?v0 ))(swap$e ?v1 ))(fun_app$at (fun_app$au case_prod$h ?v0 )?v1 ))):named a128 ))
(assert (! (= internal_split$ case_prod$e ):named a129 ))
(assert (! (= internal_split$a case_prod$b ):named a130 ))
(assert (! (= internal_split$b case_prod$d ):named a131 ))
(assert (! (= internal_split$c case_prod$a ):named a132 ))
(assert (! (= internal_split$d case_prod$c ):named a133 ))
(assert (! (= internal_split$e case_prod$ ):named a134 ))
(assert (! (= internal_split$f case_prod$j ):named a135 ))
(assert (! (= internal_split$g case_prod$i ):named a136 ))
(assert (! (= internal_split$h case_prod$g ):named a137 ))
(assert (! (= internal_split$i case_prod$h ):named a138 ))
(assert (! (forall ((?v0 A_llist_llist_a_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ )(?v4 A_llist_llist_llist$ ))(! (= (fun_app$ao (fun_app$ap (llexord$a ?v0 )(lCons$b ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(or (and (= ?v1 ?v3 )(fun_app$ao (fun_app$ap (llexord$a ?v0 )?v2 )?v4 ))(fun_app$ (fun_app$a ?v0 ?v1 )?v3 ))):pattern ((fun_app$ao (fun_app$ap (llexord$a ?v0 )(lCons$b ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a139 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist$ )(?v4 A_llist_llist$ ))(! (= (fun_app$ (fun_app$a (llexord$b ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(or (and (= ?v1 ?v3 )(fun_app$ (fun_app$a (llexord$b ?v0 )?v2 )?v4 ))(fun_app$f (fun_app$g ?v0 ?v1 )?v3 ))):pattern ((fun_app$ (fun_app$a (llexord$b ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a140 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$f (fun_app$g (llexord$ ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(or (and (= ?v1 ?v3 )(fun_app$f (fun_app$g (llexord$ ?v0 )?v2 )?v4 ))(fun_app$r (fun_app$s ?v0 ?v1 )?v3 ))):pattern ((fun_app$f (fun_app$g (llexord$ ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a141 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(lprefix$a ?v0 ?v0 )):named a142 ))
(assert (! (forall ((?v0 A_llist$ ))(lprefix$b ?v0 ?v0 )):named a143 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(lprefix$a ?v0 ?v0 )):named a144 ))
(assert (! (forall ((?v0 A_llist$ ))(lprefix$b ?v0 ?v0 )):named a145 ))
(check-sat )
;(get-unsat-core )
