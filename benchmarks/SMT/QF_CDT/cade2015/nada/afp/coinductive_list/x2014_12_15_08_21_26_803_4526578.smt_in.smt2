;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort B_llist_set$ 0 )
(declare-sort A_a_prod_bool_fun$ 0 )
(declare-sort A_b_prod_bool_fun$ 0 )
(declare-sort B_a_prod_bool_fun$ 0 )
(declare-sort B_b_prod_bool_fun$ 0 )
(declare-sort A_a_prod_llist_set$ 0 )
(declare-sort A_b_prod_llist_set$ 0 )
(declare-sort B_a_prod_llist_set$ 0 )
(declare-sort B_b_prod_llist_set$ 0 )
(declare-sort A_b_prod_llist_bool_fun$ 0 )
(declare-sort A_a_b_prod_prod_bool_fun$ 0 )
(declare-sort A_a_b_prod_prod_llist_set$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_bool_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_llist_set$ 0 )
(declare-sort A_b_prod_llist_set_a_b_prod_llist_fun$ 0 )
(declare-sort A_a_b_prod_a_b_prod_prod_prod_bool_fun$ 0 )
(declare-sort A_a_b_prod_a_b_prod_prod_prod_llist_set$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_set_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ 0 )
(declare-sort A_b_prod$ 0)
(declare-fun fst$ (A_b_prod$)A$)
(declare-fun snd$ (A_b_prod$)B$)
(declare-fun pair$ (A$ B$ )A_b_prod$)
(declare-sort A_b_prod_llist$ 0)
(declare-sort A_llist$ 0)
(declare-sort B_llist$ 0)
(declare-fun lNil$ ()A_b_prod_llist$)
(declare-fun lhd$ (A_b_prod_llist$)A_b_prod$)
(declare-fun ltl$ (A_b_prod_llist$)A_b_prod_llist$)
(declare-fun lCons$ (A_b_prod$ A_b_prod_llist$ )A_b_prod_llist$)
(declare-fun lNil$a ()A_llist$)
(declare-fun lhd$a (A_llist$)A$)
(declare-fun ltl$a (A_llist$)A_llist$)
(declare-fun lCons$a (A$ A_llist$ )A_llist$)
(declare-fun lNil$b ()B_llist$)
(declare-fun lhd$b (B_llist$)B$)
(declare-fun ltl$b (B_llist$)B_llist$)
(declare-fun lCons$b (B$ B_llist$ )B_llist$)
(declare-sort A_llist_b_llist_prod$ 0)
(declare-sort A_b_prod_a_b_prod_prod$ 0)
(declare-fun fst$a (A_llist_b_llist_prod$)A_llist$)
(declare-fun snd$a (A_llist_b_llist_prod$)B_llist$)
(declare-fun pair$a (A_llist$ B_llist$ )A_llist_b_llist_prod$)
(declare-fun fst$b (A_b_prod_a_b_prod_prod$)A_b_prod$)
(declare-fun snd$b (A_b_prod_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$b (A_b_prod$ A_b_prod$ )A_b_prod_a_b_prod_prod$)
(declare-sort A_b_prod_a_b_prod_prod_llist$ 0)
(declare-fun lNil$c ()A_b_prod_a_b_prod_prod_llist$)
(declare-fun lhd$c (A_b_prod_a_b_prod_prod_llist$)A_b_prod_a_b_prod_prod$)
(declare-fun ltl$c (A_b_prod_a_b_prod_prod_llist$)A_b_prod_a_b_prod_prod_llist$)
(declare-fun lCons$c (A_b_prod_a_b_prod_prod$ A_b_prod_a_b_prod_prod_llist$ )A_b_prod_a_b_prod_prod_llist$)
(declare-sort B_b_prod$ 0)
(declare-fun fst$c (B_b_prod$)B$)
(declare-fun snd$c (B_b_prod$)B$)
(declare-fun pair$c (B$ B$ )B_b_prod$)
(declare-sort B_b_prod_llist$ 0)
(declare-fun lNil$d ()B_b_prod_llist$)
(declare-fun lhd$d (B_b_prod_llist$)B_b_prod$)
(declare-fun ltl$d (B_b_prod_llist$)B_b_prod_llist$)
(declare-fun lCons$d (B_b_prod$ B_b_prod_llist$ )B_b_prod_llist$)
(declare-sort B_a_prod$ 0)
(declare-fun fst$d (B_a_prod$)B$)
(declare-fun snd$d (B_a_prod$)A$)
(declare-fun pair$d (B$ A$ )B_a_prod$)
(declare-sort B_a_prod_llist$ 0)
(declare-fun lNil$e ()B_a_prod_llist$)
(declare-fun lhd$e (B_a_prod_llist$)B_a_prod$)
(declare-fun ltl$e (B_a_prod_llist$)B_a_prod_llist$)
(declare-fun lCons$e (B_a_prod$ B_a_prod_llist$ )B_a_prod_llist$)
(declare-sort A_a_b_prod_a_b_prod_prod_prod$ 0)
(declare-fun fst$e (A_a_b_prod_a_b_prod_prod_prod$)A$)
(declare-fun snd$e (A_a_b_prod_a_b_prod_prod_prod$)A_b_prod_a_b_prod_prod$)
(declare-fun pair$e (A$ A_b_prod_a_b_prod_prod$ )A_a_b_prod_a_b_prod_prod_prod$)
(declare-sort A_a_b_prod_a_b_prod_prod_prod_llist$ 0)
(declare-fun lNil$f ()A_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun lhd$f (A_a_b_prod_a_b_prod_prod_prod_llist$)A_a_b_prod_a_b_prod_prod_prod$)
(declare-fun ltl$f (A_a_b_prod_a_b_prod_prod_prod_llist$)A_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-fun lCons$f (A_a_b_prod_a_b_prod_prod_prod$ A_a_b_prod_a_b_prod_prod_prod_llist$ )A_a_b_prod_a_b_prod_prod_prod_llist$)
(declare-sort A_a_b_prod_prod$ 0)
(declare-fun fst$f (A_a_b_prod_prod$)A$)
(declare-fun snd$f (A_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$f (A$ A_b_prod$ )A_a_b_prod_prod$)
(declare-sort A_a_b_prod_prod_llist$ 0)
(declare-fun lNil$g ()A_a_b_prod_prod_llist$)
(declare-fun lhd$g (A_a_b_prod_prod_llist$)A_a_b_prod_prod$)
(declare-fun ltl$g (A_a_b_prod_prod_llist$)A_a_b_prod_prod_llist$)
(declare-fun lCons$g (A_a_b_prod_prod$ A_a_b_prod_prod_llist$ )A_a_b_prod_prod_llist$)
(declare-sort A_a_prod$ 0)
(declare-fun fst$g (A_a_prod$)A$)
(declare-fun snd$g (A_a_prod$)A$)
(declare-fun pair$g (A$ A$ )A_a_prod$)
(declare-sort A_a_prod_llist$ 0)
(declare-fun lNil$h ()A_a_prod_llist$)
(declare-fun lhd$h (A_a_prod_llist$)A_a_prod$)
(declare-fun ltl$h (A_a_prod_llist$)A_a_prod_llist$)
(declare-fun lCons$h (A_a_prod$ A_a_prod_llist$ )A_a_prod_llist$)
(declare-sort A_b_prod_a_prod$ 0)
(declare-fun fst$h (A_b_prod_a_prod$)A_b_prod$)
(declare-fun snd$h (A_b_prod_a_prod$)A$)
(declare-fun pair$h (A_b_prod$ A$ )A_b_prod_a_prod$)
(declare-sort A_b_prod_a_prod_llist$ 0)
(declare-fun lNil$i ()A_b_prod_a_prod_llist$)
(declare-fun lhd$i (A_b_prod_a_prod_llist$)A_b_prod_a_prod$)
(declare-fun ltl$i (A_b_prod_a_prod_llist$)A_b_prod_a_prod_llist$)
(declare-fun lCons$i (A_b_prod_a_prod$ A_b_prod_a_prod_llist$ )A_b_prod_a_prod_llist$)
(declare-sort A_b_prod_b_prod$ 0)
(declare-fun fst$i (A_b_prod_b_prod$)A_b_prod$)
(declare-fun snd$i (A_b_prod_b_prod$)B$)
(declare-fun pair$i (A_b_prod$ B$ )A_b_prod_b_prod$)
(declare-sort A_b_prod_b_prod_llist$ 0)
(declare-fun lNil$j ()A_b_prod_b_prod_llist$)
(declare-fun lhd$j (A_b_prod_b_prod_llist$)A_b_prod_b_prod$)
(declare-fun ltl$j (A_b_prod_b_prod_llist$)A_b_prod_b_prod_llist$)
(declare-fun lCons$j (A_b_prod_b_prod$ A_b_prod_b_prod_llist$ )A_b_prod_b_prod_llist$)
(declare-sort B_a_b_prod_prod$ 0)
(declare-fun fst$j (B_a_b_prod_prod$)B$)
(declare-fun snd$j (B_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$j (B$ A_b_prod$ )B_a_b_prod_prod$)
(declare-sort B_a_b_prod_prod_llist$ 0)
(declare-fun lNil$k ()B_a_b_prod_prod_llist$)
(declare-fun lhd$k (B_a_b_prod_prod_llist$)B_a_b_prod_prod$)
(declare-fun ltl$k (B_a_b_prod_prod_llist$)B_a_b_prod_prod_llist$)
(declare-fun lCons$k (B_a_b_prod_prod$ B_a_b_prod_prod_llist$ )B_a_b_prod_prod_llist$)
(declare-fun f$ ()A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun xsb$ ()A_llist$ )
(declare-fun ysa$ ()B_llist$ )
(declare-fun fixp$ (A_llist_b_llist_prod_a_b_prod_llist_fun_set_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ )
(declare-fun lSup$ ()A_b_prod_llist_set_a_b_prod_llist_fun$ )
(declare-fun lzip$ (A_llist$ B_llist$ )A_b_prod_llist$ )
(declare-fun curry$ (A_llist_b_llist_prod_a_b_prod_llist_fun$ A_llist$ B_llist$ )A_b_prod_llist$ )
(declare-fun lSup$a (B_b_prod_llist_set$ )B_b_prod_llist$ )
(declare-fun lSup$b (B_a_prod_llist_set$ )B_a_prod_llist$ )
(declare-fun lSup$c (A_a_b_prod_a_b_prod_prod_prod_llist_set$ )A_a_b_prod_a_b_prod_prod_prod_llist$ )
(declare-fun lSup$d (A_a_b_prod_prod_llist_set$ )A_a_b_prod_prod_llist$ )
(declare-fun lSup$e (A_a_prod_llist_set$ )A_a_prod_llist$ )
(declare-fun lSup$f (A_llist_set$ )A_llist$ )
(declare-fun lSup$g (B_llist_set$ )B_llist$ )
(declare-fun lSup$h (A_b_prod_a_b_prod_prod_llist_set$ )A_b_prod_a_b_prod_prod_llist$ )
(declare-fun lnull$ (A_b_prod_llist$ )Bool )
(declare-fun lzip$a (A_b_prod_llist$ A_b_prod_llist$ )A_b_prod_a_b_prod_prod_llist$ )
(declare-fun lzip$b (A_llist$ A_llist$ )A_a_prod_llist$ )
(declare-fun lzip$c (B_llist$ A_llist$ )B_a_prod_llist$ )
(declare-fun lzip$d (B_llist$ B_llist$ )B_b_prod_llist$ )
(declare-fun lzip$e (A_b_prod_llist$ A_llist$ )A_b_prod_a_prod_llist$ )
(declare-fun lzip$f (A_b_prod_llist$ B_llist$ )A_b_prod_b_prod_llist$ )
(declare-fun lzip$g (A_llist$ A_b_prod_llist$ )A_a_b_prod_prod_llist$ )
(declare-fun lzip$h (B_llist$ A_b_prod_llist$ )B_a_b_prod_prod_llist$ )
(declare-fun lzip$i (A_llist$ A_b_prod_a_b_prod_prod_llist$ )A_a_b_prod_a_b_prod_prod_prod_llist$ )
(declare-fun lnull$a (B_b_prod_llist$ )Bool )
(declare-fun lnull$b (B_a_prod_llist$ )Bool )
(declare-fun lnull$c (A_a_b_prod_a_b_prod_prod_prod_llist$ )Bool )
(declare-fun lnull$d (A_a_b_prod_prod_llist$ )Bool )
(declare-fun lnull$e (A_a_prod_llist$ )Bool )
(declare-fun lnull$f (A_llist$ )Bool )
(declare-fun lnull$g (B_llist$ )Bool )
(declare-fun lnull$h (A_b_prod_a_b_prod_prod_llist$ )Bool )
(declare-fun lnull$i (A_b_prod_a_prod_llist$ )Bool )
(declare-fun lnull$j (A_b_prod_b_prod_llist$ )Bool )
(declare-fun lnull$k (B_a_b_prod_prod_llist$ )Bool )
(declare-fun member$ (B_b_prod_llist$ B_b_prod_llist_set$ )Bool )
(declare-fun fun_app$ (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun$ )
(declare-fun fun_lub$ (A_b_prod_llist_set_a_b_prod_llist_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_set_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun fun_ord$ (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun_fun$ )
(declare-fun lprefix$ ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun member$a (B_a_prod_llist$ B_a_prod_llist_set$ )Bool )
(declare-fun member$b (A_a_b_prod_a_b_prod_prod_prod_llist$ A_a_b_prod_a_b_prod_prod_prod_llist_set$ )Bool )
(declare-fun member$c (A_a_b_prod_prod_llist$ A_a_b_prod_prod_llist_set$ )Bool )
(declare-fun member$d (A_a_prod_llist$ A_a_prod_llist_set$ )Bool )
(declare-fun member$e (A_llist$ A_llist_set$ )Bool )
(declare-fun member$f (B_llist$ B_llist_set$ )Bool )
(declare-fun member$g (A_b_prod_a_b_prod_prod_llist$ A_b_prod_a_b_prod_prod_llist_set$ )Bool )
(declare-fun member$h (A_b_prod_llist$ A_b_prod_llist_set$ )Bool )
(declare-fun fun_app$a (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun fun_app$b (A_b_prod_llist_bool_fun$ A_b_prod_llist$ )Bool )
(declare-fun fun_app$c (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_bool_fun$ )
(declare-fun fun_app$d (A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_set$ )A_b_prod_llist$ )
(declare-fun fun_app$e (B_b_prod_bool_fun$ B_b_prod$ )Bool )
(declare-fun fun_app$f (B_a_prod_bool_fun$ B_a_prod$ )Bool )
(declare-fun fun_app$g (A_a_b_prod_a_b_prod_prod_prod_bool_fun$ A_a_b_prod_a_b_prod_prod_prod$ )Bool )
(declare-fun fun_app$h (A_a_b_prod_prod_bool_fun$ A_a_b_prod_prod$ )Bool )
(declare-fun fun_app$i (A_a_prod_bool_fun$ A_a_prod$ )Bool )
(declare-fun fun_app$j (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$k (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$l (A_b_prod_a_b_prod_prod_bool_fun$ A_b_prod_a_b_prod_prod$ )Bool )
(declare-fun fun_app$m (A_b_prod_bool_fun$ A_b_prod$ )Bool )
(declare-fun fun_app$n (A_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )Bool )
(declare-fun fun_app$o (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_bool_fun$ )
(declare-fun lprefix$a (A_b_prod_a_b_prod_prod_llist$ A_b_prod_a_b_prod_prod_llist$ )Bool )
(declare-fun lprefix$b (B_llist$ B_llist$ )Bool )
(declare-fun lprefix$c (A_llist$ A_llist$ )Bool )
(declare-fun lprefix$d (B_b_prod_llist$ B_b_prod_llist$ )Bool )
(declare-fun lprefix$e (B_a_prod_llist$ B_a_prod_llist$ )Bool )
(declare-fun lprefix$f (A_a_b_prod_a_b_prod_prod_prod_llist$ A_a_b_prod_a_b_prod_prod_prod_llist$ )Bool )
(declare-fun lprefix$g (A_a_b_prod_prod_llist$ A_a_b_prod_prod_llist$ )Bool )
(declare-fun lprefix$h (A_a_prod_llist$ A_a_prod_llist$ )Bool )
(assert (! (not (and (= (lnull$ (lzip$ xsb$ ysa$ ))(lnull$ (curry$ (fun_app$ (fun_app$a (fixp$ (fun_lub$ lSup$ ))(fun_ord$ lprefix$ ))f$ )xsb$ ysa$ )))(=> (and (not (lnull$ (lzip$ xsb$ ysa$ )))(not (lnull$ (curry$ (fun_app$ (fun_app$a (fixp$ (fun_lub$ lSup$ ))(fun_ord$ lprefix$ ))f$ )xsb$ ysa$ ))))(and (= (lhd$ (lzip$ xsb$ ysa$ ))(lhd$ (curry$ (fun_app$ (fun_app$a (fixp$ (fun_lub$ lSup$ ))(fun_ord$ lprefix$ ))f$ )xsb$ ysa$ )))(exists ((?v0 A_llist$ )(?v1 B_llist$ ))(and (= (ltl$ (lzip$ xsb$ ysa$ ))(lzip$ ?v0 ?v1 ))(= (ltl$ (curry$ (fun_app$ (fun_app$a (fixp$ (fun_lub$ lSup$ ))(fun_ord$ lprefix$ ))f$ )xsb$ ysa$ ))(curry$ (fun_app$ (fun_app$a (fixp$ (fun_lub$ lSup$ ))(fun_ord$ lprefix$ ))f$ )?v0 ?v1 )))))))):named a0 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist$ ))(lprefix$a ?v0 ?v0 )):named a1 ))
(assert (! (forall ((?v0 B_llist$ ))(lprefix$b ?v0 ?v0 )):named a2 ))
(assert (! (forall ((?v0 A_llist$ ))(lprefix$c ?v0 ?v0 )):named a3 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$b (fun_app$c lprefix$ ?v0 )?v0 )):named a4 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist$ ))(lprefix$a ?v0 ?v0 )):named a5 ))
(assert (! (forall ((?v0 B_llist$ ))(lprefix$b ?v0 ?v0 )):named a6 ))
(assert (! (forall ((?v0 A_llist$ ))(lprefix$c ?v0 ?v0 )):named a7 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$b (fun_app$c lprefix$ ?v0 )?v0 )):named a8 ))
(assert (! (forall ((?v0 B_b_prod_llist_set$ ))(= (lnull$a (lSup$a ?v0 ))(forall ((?v1 B_b_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$a ?v1 ))))):named a9 ))
(assert (! (forall ((?v0 B_a_prod_llist_set$ ))(= (lnull$b (lSup$b ?v0 ))(forall ((?v1 B_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 ))))):named a10 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod_llist_set$ ))(= (lnull$c (lSup$c ?v0 ))(forall ((?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 ))))):named a11 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist_set$ ))(= (lnull$d (lSup$d ?v0 ))(forall ((?v1 A_a_b_prod_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$d ?v1 ))))):named a12 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(= (lnull$e (lSup$e ?v0 ))(forall ((?v1 A_a_prod_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$e ?v1 ))))):named a13 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (lnull$f (lSup$f ?v0 ))(forall ((?v1 A_llist$ ))(=> (member$e ?v1 ?v0 )(lnull$f ?v1 ))))):named a14 ))
(assert (! (forall ((?v0 B_llist_set$ ))(= (lnull$g (lSup$g ?v0 ))(forall ((?v1 B_llist$ ))(=> (member$f ?v1 ?v0 )(lnull$g ?v1 ))))):named a15 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist_set$ ))(= (lnull$h (lSup$h ?v0 ))(forall ((?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (member$g ?v1 ?v0 )(lnull$h ?v1 ))))):named a16 ))
(assert (! (forall ((?v0 A_b_prod_llist_set$ ))(= (lnull$ (fun_app$d lSup$ ?v0 ))(forall ((?v1 A_b_prod_llist$ ))(=> (member$h ?v1 ?v0 )(lnull$ ?v1 ))))):named a17 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(= (not (lnull$ (lzip$ ?v0 ?v1 )))(and (not (lnull$f ?v0 ))(not (lnull$g ?v1 ))))):named a18 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(= (not (lnull$h (lzip$a ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$ ?v1 ))))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (not (lnull$e (lzip$b ?v0 ?v1 )))(and (not (lnull$f ?v0 ))(not (lnull$f ?v1 ))))):named a20 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(= (not (lnull$b (lzip$c ?v0 ?v1 )))(and (not (lnull$g ?v0 ))(not (lnull$f ?v1 ))))):named a21 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(= (not (lnull$a (lzip$d ?v0 ?v1 )))(and (not (lnull$g ?v0 ))(not (lnull$g ?v1 ))))):named a22 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_llist$ ))(= (not (lnull$i (lzip$e ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$f ?v1 ))))):named a23 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 B_llist$ ))(= (not (lnull$j (lzip$f ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$g ?v1 ))))):named a24 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_llist$ ))(= (not (lnull$d (lzip$g ?v0 ?v1 )))(and (not (lnull$f ?v0 ))(not (lnull$ ?v1 ))))):named a25 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_b_prod_llist$ ))(= (not (lnull$k (lzip$h ?v0 ?v1 )))(and (not (lnull$g ?v0 ))(not (lnull$ ?v1 ))))):named a26 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(= (not (lnull$c (lzip$i ?v0 ?v1 )))(and (not (lnull$f ?v0 ))(not (lnull$h ?v1 ))))):named a27 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(= (lnull$ (lzip$ ?v0 ?v1 ))(or (lnull$f ?v0 )(lnull$g ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(= (lnull$h (lzip$a ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$ ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (lnull$e (lzip$b ?v0 ?v1 ))(or (lnull$f ?v0 )(lnull$f ?v1 )))):named a30 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(= (lnull$b (lzip$c ?v0 ?v1 ))(or (lnull$g ?v0 )(lnull$f ?v1 )))):named a31 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(= (lnull$a (lzip$d ?v0 ?v1 ))(or (lnull$g ?v0 )(lnull$g ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_llist$ ))(= (lnull$i (lzip$e ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$f ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 B_llist$ ))(= (lnull$j (lzip$f ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$g ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_llist$ ))(= (lnull$d (lzip$g ?v0 ?v1 ))(or (lnull$f ?v0 )(lnull$ ?v1 )))):named a35 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_b_prod_llist$ ))(= (lnull$k (lzip$h ?v0 ?v1 ))(or (lnull$g ?v0 )(lnull$ ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(= (lnull$c (lzip$i ?v0 ?v1 ))(or (lnull$f ?v0 )(lnull$h ?v1 )))):named a37 ))
(assert (! (forall ((?v0 B_b_prod_llist_set$ ))(= (not (lnull$a (lSup$a ?v0 )))(not (forall ((?v1 B_b_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$a ?v1 )))))):named a38 ))
(assert (! (forall ((?v0 B_a_prod_llist_set$ ))(= (not (lnull$b (lSup$b ?v0 )))(not (forall ((?v1 B_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 )))))):named a39 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod_llist_set$ ))(= (not (lnull$c (lSup$c ?v0 )))(not (forall ((?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 )))))):named a40 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist_set$ ))(= (not (lnull$d (lSup$d ?v0 )))(not (forall ((?v1 A_a_b_prod_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$d ?v1 )))))):named a41 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(= (not (lnull$e (lSup$e ?v0 )))(not (forall ((?v1 A_a_prod_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$e ?v1 )))))):named a42 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (not (lnull$f (lSup$f ?v0 )))(not (forall ((?v1 A_llist$ ))(=> (member$e ?v1 ?v0 )(lnull$f ?v1 )))))):named a43 ))
(assert (! (forall ((?v0 B_llist_set$ ))(= (not (lnull$g (lSup$g ?v0 )))(not (forall ((?v1 B_llist$ ))(=> (member$f ?v1 ?v0 )(lnull$g ?v1 )))))):named a44 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist_set$ ))(= (not (lnull$h (lSup$h ?v0 )))(not (forall ((?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (member$g ?v1 ?v0 )(lnull$h ?v1 )))))):named a45 ))
(assert (! (forall ((?v0 A_b_prod_llist_set$ ))(= (not (lnull$ (fun_app$d lSup$ ?v0 )))(not (forall ((?v1 A_b_prod_llist$ ))(=> (member$h ?v1 ?v0 )(lnull$ ?v1 )))))):named a46 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_bool_fun$ ))(=> (and (=> (or (lnull$a ?v0 )(not (fun_app$e ?v1 (lhd$d ?v0 ))))false )(=> (and (not (lnull$a ?v0 ))(fun_app$e ?v1 (lhd$d ?v0 )))false ))false )):named a47 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_bool_fun$ ))(=> (and (=> (or (lnull$b ?v0 )(not (fun_app$f ?v1 (lhd$e ?v0 ))))false )(=> (and (not (lnull$b ?v0 ))(fun_app$f ?v1 (lhd$e ?v0 )))false ))false )):named a48 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_bool_fun$ ))(=> (and (=> (or (lnull$c ?v0 )(not (fun_app$g ?v1 (lhd$f ?v0 ))))false )(=> (and (not (lnull$c ?v0 ))(fun_app$g ?v1 (lhd$f ?v0 )))false ))false )):named a49 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_bool_fun$ ))(=> (and (=> (or (lnull$d ?v0 )(not (fun_app$h ?v1 (lhd$g ?v0 ))))false )(=> (and (not (lnull$d ?v0 ))(fun_app$h ?v1 (lhd$g ?v0 )))false ))false )):named a50 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_bool_fun$ ))(=> (and (=> (or (lnull$e ?v0 )(not (fun_app$i ?v1 (lhd$h ?v0 ))))false )(=> (and (not (lnull$e ?v0 ))(fun_app$i ?v1 (lhd$h ?v0 )))false ))false )):named a51 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (and (=> (or (lnull$f ?v0 )(not (fun_app$j ?v1 (lhd$a ?v0 ))))false )(=> (and (not (lnull$f ?v0 ))(fun_app$j ?v1 (lhd$a ?v0 )))false ))false )):named a52 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_bool_fun$ ))(=> (and (=> (or (lnull$g ?v0 )(not (fun_app$k ?v1 (lhd$b ?v0 ))))false )(=> (and (not (lnull$g ?v0 ))(fun_app$k ?v1 (lhd$b ?v0 )))false ))false )):named a53 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist$ )(?v1 A_b_prod_a_b_prod_prod_bool_fun$ ))(=> (and (=> (or (lnull$h ?v0 )(not (fun_app$l ?v1 (lhd$c ?v0 ))))false )(=> (and (not (lnull$h ?v0 ))(fun_app$l ?v1 (lhd$c ?v0 )))false ))false )):named a54 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_bool_fun$ ))(=> (and (=> (or (lnull$ ?v0 )(not (fun_app$m ?v1 (lhd$ ?v0 ))))false )(=> (and (not (lnull$ ?v0 ))(fun_app$m ?v1 (lhd$ ?v0 )))false ))false )):named a55 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a56 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$f ?v0 )(lnull$f ?v1 ))false )(=> (and (not (lnull$f ?v0 ))(not (lnull$f ?v1 )))false ))false )):named a57 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(=> (and (=> (or (lnull$f ?v0 )(lnull$g ?v1 ))false )(=> (and (not (lnull$f ?v0 ))(not (lnull$g ?v1 )))false ))false )):named a58 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$g ?v0 )(lnull$f ?v1 ))false )(=> (and (not (lnull$g ?v0 ))(not (lnull$f ?v1 )))false ))false )):named a59 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (=> (or (lnull$g ?v0 )(lnull$g ?v1 ))false )(=> (and (not (lnull$g ?v0 ))(not (lnull$g ?v1 )))false ))false )):named a60 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$f ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$f ?v1 )))false ))false )):named a61 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 B_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$g ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$g ?v1 )))false ))false )):named a62 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (=> (or (lnull$f ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$f ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a63 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (=> (or (lnull$g ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$g ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a64 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (=> (or (lnull$f ?v0 )(lnull$h ?v1 ))false )(=> (and (not (lnull$f ?v0 ))(not (lnull$h ?v1 )))false ))false )):named a65 ))
(assert (! (forall ((?v0 B_b_prod_llist_set$ ))(=> (and (=> (forall ((?v1 B_b_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$a ?v1 )))false )(=> (not (forall ((?v1 B_b_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$a ?v1 ))))false ))false )):named a66 ))
(assert (! (forall ((?v0 B_a_prod_llist_set$ ))(=> (and (=> (forall ((?v1 B_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 )))false )(=> (not (forall ((?v1 B_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 ))))false ))false )):named a67 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 )))false )(=> (not (forall ((?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 ))))false ))false )):named a68 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_b_prod_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$d ?v1 )))false )(=> (not (forall ((?v1 A_a_b_prod_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$d ?v1 ))))false ))false )):named a69 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$e ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$e ?v1 ))))false ))false )):named a70 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$e ?v1 ?v0 )(lnull$f ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$e ?v1 ?v0 )(lnull$f ?v1 ))))false ))false )):named a71 ))
(assert (! (forall ((?v0 B_llist_set$ ))(=> (and (=> (forall ((?v1 B_llist$ ))(=> (member$f ?v1 ?v0 )(lnull$g ?v1 )))false )(=> (not (forall ((?v1 B_llist$ ))(=> (member$f ?v1 ?v0 )(lnull$g ?v1 ))))false ))false )):named a72 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (member$g ?v1 ?v0 )(lnull$h ?v1 )))false )(=> (not (forall ((?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (member$g ?v1 ?v0 )(lnull$h ?v1 ))))false ))false )):named a73 ))
(assert (! (forall ((?v0 A_b_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_b_prod_llist$ ))(=> (member$h ?v1 ?v0 )(lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_b_prod_llist$ ))(=> (member$h ?v1 ?v0 )(lnull$ ?v1 ))))false ))false )):named a74 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_llist$ ))(=> (=> (not (lnull$a ?v0 ))(and (not (lnull$a ?v1 ))(and (= (lhd$d ?v0 )(lhd$d ?v1 ))(lprefix$d (ltl$d ?v0 )(ltl$d ?v1 )))))(lprefix$d ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_llist$ ))(=> (=> (not (lnull$b ?v0 ))(and (not (lnull$b ?v1 ))(and (= (lhd$e ?v0 )(lhd$e ?v1 ))(lprefix$e (ltl$e ?v0 )(ltl$e ?v1 )))))(lprefix$e ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (=> (not (lnull$c ?v0 ))(and (not (lnull$c ?v1 ))(and (= (lhd$f ?v0 )(lhd$f ?v1 ))(lprefix$f (ltl$f ?v0 )(ltl$f ?v1 )))))(lprefix$f ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_llist$ ))(=> (=> (not (lnull$d ?v0 ))(and (not (lnull$d ?v1 ))(and (= (lhd$g ?v0 )(lhd$g ?v1 ))(lprefix$g (ltl$g ?v0 )(ltl$g ?v1 )))))(lprefix$g ?v0 ?v1 ))):named a78 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (=> (not (lnull$e ?v0 ))(and (not (lnull$e ?v1 ))(and (= (lhd$h ?v0 )(lhd$h ?v1 ))(lprefix$h (ltl$h ?v0 )(ltl$h ?v1 )))))(lprefix$h ?v0 ?v1 ))):named a79 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (=> (not (lnull$f ?v0 ))(and (not (lnull$f ?v1 ))(and (= (lhd$a ?v0 )(lhd$a ?v1 ))(lprefix$c (ltl$a ?v0 )(ltl$a ?v1 )))))(lprefix$c ?v0 ?v1 ))):named a80 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (=> (not (lnull$g ?v0 ))(and (not (lnull$g ?v1 ))(and (= (lhd$b ?v0 )(lhd$b ?v1 ))(lprefix$b (ltl$b ?v0 )(ltl$b ?v1 )))))(lprefix$b ?v0 ?v1 ))):named a81 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (=> (not (lnull$h ?v0 ))(and (not (lnull$h ?v1 ))(and (= (lhd$c ?v0 )(lhd$c ?v1 ))(lprefix$a (ltl$c ?v0 )(ltl$c ?v1 )))))(lprefix$a ?v0 ?v1 ))):named a82 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (=> (not (lnull$ ?v0 ))(and (not (lnull$ ?v1 ))(and (= (lhd$ ?v0 )(lhd$ ?v1 ))(fun_app$b (fun_app$c lprefix$ (ltl$ ?v0 ))(ltl$ ?v1 )))))(fun_app$b (fun_app$c lprefix$ ?v0 )?v1 ))):named a83 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_llist$ ))(=> (and (=> (and (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (or (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a84 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_llist$ ))(=> (and (=> (and (lnull$b ?v0 )(lnull$b ?v1 ))false )(=> (or (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a85 ))
(assert (! (forall ((?v0 A_a_b_prod_a_b_prod_prod_prod_llist$ )(?v1 A_a_b_prod_a_b_prod_prod_prod_llist$ ))(=> (and (=> (and (lnull$c ?v0 )(lnull$c ?v1 ))false )(=> (or (not (lnull$c ?v0 ))(not (lnull$c ?v1 )))false ))false )):named a86 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_llist$ ))(=> (and (=> (and (lnull$d ?v0 )(lnull$d ?v1 ))false )(=> (or (not (lnull$d ?v0 ))(not (lnull$d ?v1 )))false ))false )):named a87 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (and (lnull$e ?v0 )(lnull$e ?v1 ))false )(=> (or (not (lnull$e ?v0 ))(not (lnull$e ?v1 )))false ))false )):named a88 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (lnull$f ?v0 )(lnull$f ?v1 ))false )(=> (or (not (lnull$f ?v0 ))(not (lnull$f ?v1 )))false ))false )):named a89 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (=> (and (lnull$g ?v0 )(lnull$g ?v1 ))false )(=> (or (not (lnull$g ?v0 ))(not (lnull$g ?v1 )))false ))false )):named a90 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (=> (and (lnull$h ?v0 )(lnull$h ?v1 ))false )(=> (or (not (lnull$h ?v0 ))(not (lnull$h ?v1 )))false ))false )):named a91 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (=> (and (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (or (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a92 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(=> (and (=> (lnull$e ?v0 )false )(=> (not (lnull$e ?v0 ))false ))false )):named a93 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (lnull$f ?v0 )false )(=> (not (lnull$f ?v0 ))false ))false )):named a94 ))
(assert (! (forall ((?v0 B_llist$ ))(=> (and (=> (lnull$g ?v0 )false )(=> (not (lnull$g ?v0 ))false ))false )):named a95 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (=> (lnull$h ?v0 )false )(=> (not (lnull$h ?v0 ))false ))false )):named a96 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(=> (and (=> (lnull$ ?v0 )false )(=> (not (lnull$ ?v0 ))false ))false )):named a97 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v1 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v2 A_llist_b_llist_prod_a_b_prod_llist_fun$ ))(=> (and (fun_app$n (fun_app$o (fun_ord$ lprefix$ )?v0 )?v1 )(fun_app$n (fun_app$o (fun_ord$ lprefix$ )?v1 )?v2 ))(fun_app$n (fun_app$o (fun_ord$ lprefix$ )?v0 )?v2 ))):named a98 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v1 A_llist_b_llist_prod_a_b_prod_llist_fun$ ))(=> (and (fun_app$n (fun_app$o (fun_ord$ lprefix$ )?v0 )?v1 )(fun_app$n (fun_app$o (fun_ord$ lprefix$ )?v1 )?v0 ))(= ?v0 ?v1 ))):named a99 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (= (lnull$f ?v0 )(lnull$f ?v1 ))(=> (and (not (lnull$f ?v0 ))(not (lnull$f ?v1 )))(and (= (lhd$a ?v0 )(lhd$a ?v1 ))(= (ltl$a ?v0 )(ltl$a ?v1 )))))(= ?v0 ?v1 ))):named a100 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (= (lnull$g ?v0 )(lnull$g ?v1 ))(=> (and (not (lnull$g ?v0 ))(not (lnull$g ?v1 )))(and (= (lhd$b ?v0 )(lhd$b ?v1 ))(= (ltl$b ?v0 )(ltl$b ?v1 )))))(= ?v0 ?v1 ))):named a101 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (and (= (lnull$h ?v0 )(lnull$h ?v1 ))(=> (and (not (lnull$h ?v0 ))(not (lnull$h ?v1 )))(and (= (lhd$c ?v0 )(lhd$c ?v1 ))(= (ltl$c ?v0 )(ltl$c ?v1 )))))(= ?v0 ?v1 ))):named a102 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (= (lnull$ ?v0 )(lnull$ ?v1 ))(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))(and (= (lhd$ ?v0 )(lhd$ ?v1 ))(= (ltl$ ?v0 )(ltl$ ?v1 )))))(= ?v0 ?v1 ))):named a103 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(=> (or (lnull$f ?v0 )(lnull$g ?v1 ))(lnull$ (lzip$ ?v0 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (or (lnull$ ?v0 )(lnull$ ?v1 ))(lnull$h (lzip$a ?v0 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (or (lnull$f ?v0 )(lnull$f ?v1 ))(lnull$e (lzip$b ?v0 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(=> (or (lnull$g ?v0 )(lnull$f ?v1 ))(lnull$b (lzip$c ?v0 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (or (lnull$g ?v0 )(lnull$g ?v1 ))(lnull$a (lzip$d ?v0 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_llist$ ))(=> (or (lnull$ ?v0 )(lnull$f ?v1 ))(lnull$i (lzip$e ?v0 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 B_llist$ ))(=> (or (lnull$ ?v0 )(lnull$g ?v1 ))(lnull$j (lzip$f ?v0 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_llist$ ))(=> (or (lnull$f ?v0 )(lnull$ ?v1 ))(lnull$d (lzip$g ?v0 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_b_prod_llist$ ))(=> (or (lnull$g ?v0 )(lnull$ ?v1 ))(lnull$k (lzip$h ?v0 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (or (lnull$f ?v0 )(lnull$h ?v1 ))(lnull$c (lzip$i ?v0 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(=> (member$e ?v1 ?v0 )(lnull$f ?v1 )))(lnull$f (lSup$f ?v0 )))):named a114 ))
(assert (! (forall ((?v0 B_llist_set$ ))(=> (forall ((?v1 B_llist$ ))(=> (member$f ?v1 ?v0 )(lnull$g ?v1 )))(lnull$g (lSup$g ?v0 )))):named a115 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod_llist_set$ ))(=> (forall ((?v1 A_b_prod_a_b_prod_prod_llist$ ))(=> (member$g ?v1 ?v0 )(lnull$h ?v1 )))(lnull$h (lSup$h ?v0 )))):named a116 ))
(assert (! (forall ((?v0 A_b_prod_llist_set$ ))(=> (forall ((?v1 A_b_prod_llist$ ))(=> (member$h ?v1 ?v0 )(lnull$ ?v1 )))(lnull$ (fun_app$d lSup$ ?v0 )))):named a117 ))
(check-sat )
;(get-unsat-core )
