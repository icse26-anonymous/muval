;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort Enat_enat_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_enat_fun$ 0 )
(declare-sort Enat_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort Enat_enat_enat_fun_fun$ 0 )
(declare-sort Enat_enat_prod_enat_fun$ 0 )
(declare-sort A_llist_enat_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_enat_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_prod_enat_fun$ 0 )
(declare-sort Enat_a_llist_prod_bool_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun$ 0 )
(declare-sort Enat_enat_a_llist_prod_fun$ 0 )
(declare-sort Enat_enat_prod_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_fun$ 0 )
(declare-sort A_llist_enat_prod_a_llist_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_prod_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_enat_enat_fun_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_prod_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun$ 0 )
(declare-sort Enat_enat_prod_enat_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_enat_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_enat_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_prod_enat_enat_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_prod_fun_enat_enat_fun_fun$ 0 )
(declare-sort Enat_enat_a_llist_prod_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_enat_a_llist_prod_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_a_llist_enat_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_fun_enat_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_prod_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_enat_fun_enat_enat_fun_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_a_llist_fun_enat_enat_fun_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_fun_enat_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_a_llist_prod_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_prod_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_a_llist_a_llist_prod_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_a_llist_fun_enat_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_enat_fun_enat_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_a_llist_fun_enat_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_a_llist_fun_enat_a_llist_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_a_llist_fun_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_fun_a_llist_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort Enat_enat_a_llist_prod_fun_enat_a_llist_prod_enat_enat_a_llist_prod_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_prod_fun_a_llist_a_llist_prod_enat_a_llist_a_llist_prod_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-sort Enat_a_llist_prod$ 0)
(declare-sort A_llist_a_llist_prod$ 0)
(declare-sort Enat_enat_prod$ 0)
(declare-sort A_llist_enat_prod$ 0)
(declare-fun fst$ (Enat_a_llist_prod$)Enat$)
(declare-fun snd$ (Enat_a_llist_prod$)A_llist$)
(declare-fun pair$ (Enat$ A_llist$ )Enat_a_llist_prod$)
(declare-fun fst$a (A_llist_a_llist_prod$)A_llist$)
(declare-fun snd$a (A_llist_a_llist_prod$)A_llist$)
(declare-fun pair$a (A_llist$ A_llist$ )A_llist_a_llist_prod$)
(declare-fun fst$b (Enat_enat_prod$)Enat$)
(declare-fun snd$b (Enat_enat_prod$)Enat$)
(declare-fun pair$b (Enat$ Enat$ )Enat_enat_prod$)
(declare-fun fst$c (A_llist_enat_prod$)A_llist$)
(declare-fun snd$c (A_llist_enat_prod$)Enat$)
(declare-fun pair$c (A_llist$ Enat$ )A_llist_enat_prod$)
(declare-fun uu$ ()Enat_a_llist_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun uua$ (Enat_a_llist_fun$ )Enat_enat_fun_enat_a_llist_fun_fun$ )
(declare-fun uub$ (A_llist_a_llist_fun$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun uuc$ (Enat_a_llist_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uud$ (Enat_a_llist_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uue$ (Enat_a_llist_prod_a_llist_fun$ )Enat_enat_a_llist_prod_fun_enat_a_llist_fun_fun$ )
(declare-fun uuf$ (A_llist_a_llist_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uug$ (Enat_a_llist_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uuh$ (A_llist_a_llist_prod_a_llist_fun$ )Enat_a_llist_a_llist_prod_fun_enat_a_llist_fun_fun$ )
(declare-fun uui$ (A_llist_a_llist_fun$ )A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uuj$ (Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_enat_a_llist_prod_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uuk$ (A_llist$ )Enat_enat_prod_a_llist_fun$ )
(declare-fun uul$ (A_llist$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun uum$ (A_llist$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun uun$ (A_llist$ )Enat_a_llist_fun$ )
(declare-fun uuo$ ()Enat_enat_bool_fun_fun$ )
(declare-fun uup$ (Enat$ )Enat_a_llist_a_llist_prod_fun_a_llist_a_llist_prod_enat_a_llist_a_llist_prod_fun_fun_fun$ )
(declare-fun uuq$ (Enat$ )Enat_enat_a_llist_prod_fun_enat_a_llist_prod_enat_enat_a_llist_prod_fun_fun_fun$ )
(declare-fun uur$ (Enat$ )Enat_enat_fun_enat_enat_enat_fun_fun_fun$ )
(declare-fun uus$ (Enat$ )Enat_a_llist_fun_a_llist_enat_a_llist_fun_fun_fun$ )
(declare-fun uut$ (A_llist_enat_fun$ )Enat_a_llist_fun_enat_enat_fun_fun$ )
(declare-fun uuu$ (Enat_enat_fun$ )Enat_enat_fun_enat_enat_fun_fun$ )
(declare-fun uuv$ (Enat_enat_fun$ )A_llist_enat_fun_a_llist_enat_fun_fun$ )
(declare-fun uuw$ (A_llist_enat_fun$ )A_llist_a_llist_fun_a_llist_enat_fun_fun$ )
(declare-fun uux$ (A_llist_enat_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun$ )
(declare-fun uuy$ (A_llist_a_llist_prod_enat_fun$ )Enat_a_llist_a_llist_prod_fun_enat_enat_fun_fun$ )
(declare-fun uuz$ (Enat_enat_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun$ )
(declare-fun uva$ (A_llist_enat_fun$ )A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_fun$ )
(declare-fun uvb$ (A_llist_a_llist_prod_enat_fun$ )A_llist_a_llist_a_llist_prod_fun_a_llist_enat_fun_fun$ )
(declare-fun uvc$ (A_llist_a_llist_prod_enat_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_fun_a_llist_a_llist_prod_enat_fun_fun$ )
(declare-fun uvd$ (Enat$ )Enat_a_llist_prod_enat_fun$ )
(declare-fun uve$ (Enat$ )Enat_enat_prod_enat_fun$ )
(declare-fun uvf$ (Enat$ )A_llist_enat_fun$ )
(declare-fun uvg$ (Enat$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun uvh$ (Enat$ )Enat_enat_fun$ )
(declare-fun uvi$ (A_llist_a_llist_a_llist_fun_fun$ )Enat_a_llist_fun_enat_a_llist_fun_enat_a_llist_fun_fun_fun$ )
(declare-fun uvj$ (Enat_enat_a_llist_fun_fun$ )Enat_enat_fun_enat_enat_fun_enat_a_llist_fun_fun_fun$ )
(declare-fun uvk$ (A_llist_enat_a_llist_fun_fun$ )Enat_a_llist_fun_enat_enat_fun_enat_a_llist_fun_fun_fun$ )
(declare-fun uvl$ (Enat_enat_a_llist_fun_fun$ )A_llist_enat_fun_a_llist_enat_fun_a_llist_a_llist_fun_fun_fun$ )
(declare-fun uvm$ (Enat_a_llist_a_llist_fun_fun$ )Enat_enat_fun_enat_a_llist_fun_enat_a_llist_fun_fun_fun$ )
(declare-fun uvn$ (Enat_a_llist_a_llist_fun_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ )
(declare-fun uvo$ (Enat_enat_a_llist_fun_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uvp$ (Enat_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uvq$ (A_llist_enat_a_llist_fun_fun$ )A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uvr$ (A_llist_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uvs$ (Enat_enat_prod_a_llist_fun$ )Enat_enat_prod_enat_fun$ )
(declare-fun uvt$ (A_llist_a_llist_fun$ )A_llist_enat_fun$ )
(declare-fun uvu$ (A_llist_a_llist_prod_a_llist_fun$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun uvv$ (Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_enat_fun$ )
(declare-fun uvw$ (Enat_a_llist_fun$ )Enat_enat_fun$ )
(declare-fun uvx$ (Enat_enat_a_llist_a_llist_fun_fun_fun$ )Enat_a_llist_enat_a_llist_fun_fun_fun$ )
(declare-fun uvy$ (Enat_enat_a_llist_a_llist_fun_fun_fun$ )Enat_a_llist_prod_enat_a_llist_fun_fun$ )
(declare-fun uvz$ (Enat_a_llist_a_llist_enat_fun_fun_fun$ )A_llist_a_llist_enat_enat_fun_fun_fun$ )
(declare-fun uwa$ (Enat_a_llist_a_llist_enat_fun_fun_fun$ )A_llist_a_llist_prod_enat_enat_fun_fun$ )
(declare-fun uwb$ (Enat_a_llist_a_llist_a_llist_fun_fun_fun$ )A_llist_a_llist_enat_a_llist_fun_fun_fun$ )
(declare-fun uwc$ (Enat_a_llist_a_llist_a_llist_fun_fun_fun$ )A_llist_a_llist_prod_enat_a_llist_fun_fun$ )
(declare-fun uwd$ (A_llist_a_llist_a_llist_enat_fun_fun_fun$ )A_llist_a_llist_a_llist_enat_fun_fun_fun$ )
(declare-fun uwe$ (A_llist_a_llist_a_llist_enat_fun_fun_fun$ )A_llist_a_llist_prod_a_llist_enat_fun_fun$ )
(declare-fun uwf$ (Enat_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )Enat_a_llist_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uwg$ (Enat_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uwh$ (A_llist_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )Enat_a_llist_a_llist_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uwi$ (A_llist_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )Enat_a_llist_prod_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uwj$ (A_llist_a_llist_prod_a_llist_a_llist_enat_fun_fun_fun$ )A_llist_a_llist_a_llist_a_llist_prod_enat_fun_fun_fun$ )
(declare-fun uwk$ (A_llist_a_llist_prod_a_llist_a_llist_enat_fun_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_enat_fun_fun$ )
(declare-fun uwl$ (Enat_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )A_llist_a_llist_enat_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uwm$ (Enat_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )A_llist_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uwn$ (A_llist_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )A_llist_a_llist_a_llist_a_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uwo$ (A_llist_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uwp$ (Enat_enat_enat_enat_fun_fun_fun$ )Enat_enat_enat_enat_fun_fun_fun$ )
(declare-fun uwq$ (Enat_enat_enat_enat_fun_fun_fun$ )Enat_enat_prod_enat_enat_fun_fun$ )
(declare-fun uwr$ (A_llist_a_llist_enat_fun_fun$ )Enat_a_llist_fun_enat_a_llist_fun_enat_enat_fun_fun_fun$ )
(declare-fun uws$ (Enat_enat_enat_fun_fun$ )Enat_enat_fun_enat_enat_fun_enat_enat_fun_fun_fun$ )
(declare-fun uwt$ (A_llist_enat_enat_fun_fun$ )Enat_a_llist_fun_enat_enat_fun_enat_enat_fun_fun_fun$ )
(declare-fun uwu$ (Enat_enat_enat_fun_fun$ )A_llist_enat_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ )
(declare-fun uwv$ (Enat_a_llist_enat_fun_fun$ )Enat_enat_fun_enat_a_llist_fun_enat_enat_fun_fun_fun$ )
(declare-fun uww$ (Enat_a_llist_enat_fun_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_a_llist_enat_fun_fun_fun$ )
(declare-fun uwx$ (A_llist_a_llist_enat_fun_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_a_llist_enat_fun_fun_fun$ )
(declare-fun uwy$ (Enat_a_llist_enat_fun_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun_fun$ )
(declare-fun uwz$ (Enat_enat_enat_fun_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun_fun$ )
(declare-fun uxa$ (A_llist_enat_enat_fun_fun$ )A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun_fun$ )
(declare-fun ltake$ ()Enat_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$ (Enat_a_llist_fun$ Enat$ )A_llist$ )
(declare-fun less_eq$ ()Enat_enat_bool_fun_fun$ )
(declare-fun llength$ ()A_llist_enat_fun$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$a (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$b (Enat_a_llist_a_llist_fun_fun$ Enat$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$c (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$d (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(declare-fun fun_app$e (A_llist_enat_fun$ A_llist$ )Enat$ )
(declare-fun fun_app$f (A_llist_a_llist_prod_enat_fun$ A_llist_a_llist_prod$ )Enat$ )
(declare-fun fun_app$g (A_llist_a_llist_prod_a_llist_fun$ A_llist_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$h (Enat_a_llist_prod_enat_fun$ Enat_a_llist_prod$ )Enat$ )
(declare-fun fun_app$i (Enat_a_llist_prod_a_llist_fun$ Enat_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$j (Enat_enat_prod_enat_fun$ Enat_enat_prod$ )Enat$ )
(declare-fun fun_app$k (Enat_enat_prod_a_llist_fun$ Enat_enat_prod$ )A_llist$ )
(declare-fun fun_app$l (Enat_enat_fun$ Enat$ )Enat$ )
(declare-fun fun_app$m (A_llist_a_llist_prod_a_llist_enat_fun_fun$ A_llist_a_llist_prod$ )A_llist_enat_fun$ )
(declare-fun fun_app$n (A_llist_a_llist_a_llist_enat_fun_fun_fun$ A_llist$ )A_llist_a_llist_enat_fun_fun$ )
(declare-fun fun_app$o (A_llist_a_llist_prod_a_llist_a_llist_prod_a_llist_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$p (A_llist_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$q (A_llist_a_llist_prod_a_llist_a_llist_prod_enat_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun fun_app$r (A_llist_a_llist_prod_a_llist_a_llist_enat_fun_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_enat_fun_fun$ )
(declare-fun fun_app$s (Enat_a_llist_prod_a_llist_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$t (A_llist_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ A_llist_a_llist_prod$ )Enat_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$u (A_llist_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ A_llist_a_llist_prod$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$v (Enat_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ Enat_a_llist_prod$ )A_llist_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$w (Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$x (Enat_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ Enat_a_llist_prod$ )Enat_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$y (A_llist_a_llist_prod_enat_a_llist_fun_fun$ A_llist_a_llist_prod$ )Enat_a_llist_fun$ )
(declare-fun fun_app$z (Enat_a_llist_a_llist_a_llist_fun_fun_fun$ Enat$ )A_llist_a_llist_a_llist_fun_fun$ )
(declare-fun monotone$ (Enat_enat_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ Enat_a_llist_fun$ )Bool )
(declare-fun rel_prod$ (Enat_enat_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$ (A_llist_a_llist_enat_fun_fun$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun fun_app$aa (A_llist_a_llist_prod_enat_enat_fun_fun$ A_llist_a_llist_prod$ )Enat_enat_fun$ )
(declare-fun fun_app$ab (Enat_a_llist_a_llist_enat_fun_fun_fun$ Enat$ )A_llist_a_llist_enat_fun_fun$ )
(declare-fun fun_app$ac (Enat_a_llist_prod_enat_a_llist_fun_fun$ Enat_a_llist_prod$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ad (Enat_enat_a_llist_a_llist_fun_fun_fun$ Enat$ )Enat_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$ae (Enat_enat_prod_enat_enat_fun_fun$ Enat_enat_prod$ )Enat_enat_fun$ )
(declare-fun fun_app$af (Enat_enat_enat_enat_fun_fun_fun$ Enat$ )Enat_enat_enat_fun_fun$ )
(declare-fun fun_app$ag (A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_a_llist_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$ah (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$ai (Enat_a_llist_fun_enat_a_llist_fun_fun$ Enat_a_llist_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$aj (A_llist_a_llist_fun_a_llist_enat_fun_fun$ A_llist_a_llist_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$ak (A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun fun_app$al (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_enat_fun$ )
(declare-fun fun_app$am (Enat_a_llist_fun_enat_enat_fun_fun$ Enat_a_llist_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$an (Enat_a_llist_a_llist_prod_fun_enat_a_llist_fun_fun$ Enat_a_llist_a_llist_prod_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ao (Enat_a_llist_a_llist_prod_fun$ Enat$ )A_llist_a_llist_prod$ )
(declare-fun fun_app$ap (A_llist_a_llist_a_llist_prod_fun_a_llist_enat_fun_fun$ A_llist_a_llist_a_llist_prod_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$aq (A_llist_a_llist_a_llist_prod_fun$ A_llist$ )A_llist_a_llist_prod$ )
(declare-fun fun_app$ar (A_llist_a_llist_prod_a_llist_a_llist_prod_fun_a_llist_a_llist_prod_enat_fun_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun fun_app$as (A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod$ )
(declare-fun fun_app$at (Enat_a_llist_a_llist_prod_fun_enat_enat_fun_fun$ Enat_a_llist_a_llist_prod_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$au (Enat_a_llist_prod_enat_a_llist_prod_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_enat_a_llist_prod_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$av (Enat_a_llist_prod_enat_a_llist_prod_fun$ Enat_a_llist_prod$ )Enat_a_llist_prod$ )
(declare-fun fun_app$aw (Enat_enat_a_llist_prod_fun_enat_a_llist_fun_fun$ Enat_enat_a_llist_prod_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ax (Enat_enat_a_llist_prod_fun$ Enat$ )Enat_a_llist_prod$ )
(declare-fun fun_app$ay (A_llist_enat_fun_a_llist_a_llist_fun_fun$ A_llist_enat_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$az (A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun$ A_llist_a_llist_prod_enat_fun$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$ba (Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_enat_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$bb (Enat_enat_fun_enat_a_llist_fun_fun$ Enat_enat_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$bc (A_llist_enat_fun_a_llist_enat_fun_fun$ A_llist_enat_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$bd (A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun$ A_llist_a_llist_prod_enat_fun$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun fun_app$be (Enat_enat_fun_enat_enat_fun_fun$ Enat_enat_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$bf (A_llist_a_llist_enat_fun_fun$ A_llist$ )A_llist_enat_fun$ )
(declare-fun fun_app$bg (A_llist_a_llist_a_llist_prod_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$bh (A_llist_a_llist_a_llist_a_llist_prod_a_llist_fun_fun_fun$ A_llist$ )A_llist_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$bi (A_llist_a_llist_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$bj (A_llist_a_llist_a_llist_prod_enat_fun_fun$ A_llist$ )A_llist_a_llist_prod_enat_fun$ )
(declare-fun fun_app$bk (A_llist_a_llist_a_llist_a_llist_prod_enat_fun_fun_fun$ A_llist$ )A_llist_a_llist_a_llist_prod_enat_fun_fun$ )
(declare-fun fun_app$bl (Enat_a_llist_a_llist_a_llist_prod_a_llist_fun_fun_fun$ Enat$ )A_llist_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$bm (A_llist_enat_a_llist_prod_a_llist_fun_fun$ A_llist$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$bn (A_llist_a_llist_enat_a_llist_prod_a_llist_fun_fun_fun$ A_llist$ )A_llist_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$bo (Enat_a_llist_enat_a_llist_prod_a_llist_fun_fun_fun$ Enat$ )A_llist_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$bp (A_llist_enat_a_llist_fun_fun$ A_llist$ )Enat_a_llist_fun$ )
(declare-fun fun_app$bq (A_llist_a_llist_enat_a_llist_fun_fun_fun$ A_llist$ )A_llist_enat_a_llist_fun_fun$ )
(declare-fun fun_app$br (A_llist_enat_enat_fun_fun$ A_llist$ )Enat_enat_fun$ )
(declare-fun fun_app$bs (A_llist_a_llist_enat_enat_fun_fun_fun$ A_llist$ )A_llist_enat_enat_fun_fun$ )
(declare-fun fun_app$bt (Enat_a_llist_enat_a_llist_fun_fun_fun$ Enat$ )A_llist_enat_a_llist_fun_fun$ )
(declare-fun fun_app$bu (Enat_enat_enat_fun_fun$ Enat$ )Enat_enat_fun$ )
(declare-fun fun_app$bv (Enat_a_llist_fun_a_llist_enat_a_llist_fun_fun_fun$ Enat_a_llist_fun$ )A_llist_enat_a_llist_fun_fun$ )
(declare-fun fun_app$bw (A_llist_a_llist_prod_enat_a_llist_a_llist_prod_fun_fun$ A_llist_a_llist_prod$ )Enat_a_llist_a_llist_prod_fun$ )
(declare-fun fun_app$bx (Enat_a_llist_a_llist_prod_fun_a_llist_a_llist_prod_enat_a_llist_a_llist_prod_fun_fun_fun$ Enat_a_llist_a_llist_prod_fun$ )A_llist_a_llist_prod_enat_a_llist_a_llist_prod_fun_fun$ )
(declare-fun fun_app$by (Enat_a_llist_prod_enat_enat_a_llist_prod_fun_fun$ Enat_a_llist_prod$ )Enat_enat_a_llist_prod_fun$ )
(declare-fun fun_app$bz (Enat_enat_a_llist_prod_fun_enat_a_llist_prod_enat_enat_a_llist_prod_fun_fun_fun$ Enat_enat_a_llist_prod_fun$ )Enat_a_llist_prod_enat_enat_a_llist_prod_fun_fun$ )
(declare-fun fun_app$ca (Enat_enat_fun_enat_enat_enat_fun_fun_fun$ Enat_enat_fun$ )Enat_enat_enat_fun_fun$ )
(declare-fun fun_app$cb (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$cc (Enat_a_llist_fun_enat_a_llist_fun_enat_a_llist_fun_fun_fun$ Enat_a_llist_fun$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun fun_app$cd (A_llist_a_llist_fun_a_llist_a_llist_fun_a_llist_enat_fun_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun_a_llist_enat_fun_fun$ )
(declare-fun fun_app$ce (Enat_a_llist_fun_enat_a_llist_fun_enat_enat_fun_fun_fun$ Enat_a_llist_fun$ )Enat_a_llist_fun_enat_enat_fun_fun$ )
(declare-fun fun_app$cf (A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$cg (Enat_a_llist_fun_enat_enat_fun_enat_a_llist_fun_fun_fun$ Enat_a_llist_fun$ )Enat_enat_fun_enat_a_llist_fun_fun$ )
(declare-fun fun_app$ch (A_llist_a_llist_prod_a_llist_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun$ )
(declare-fun fun_app$ci (Enat_a_llist_fun_enat_enat_fun_enat_enat_fun_fun_fun$ Enat_a_llist_fun$ )Enat_enat_fun_enat_enat_fun_fun$ )
(declare-fun fun_app$cj (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$ck (A_llist_enat_fun_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ A_llist_enat_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$cl (Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun_fun$ Enat_a_llist_prod_enat_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$cm (Enat_enat_fun_enat_a_llist_fun_enat_a_llist_fun_fun_fun$ Enat_enat_fun$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun fun_app$cn (A_llist_enat_fun_a_llist_a_llist_fun_a_llist_enat_fun_fun_fun$ A_llist_enat_fun$ )A_llist_a_llist_fun_a_llist_enat_fun_fun$ )
(declare-fun fun_app$co (Enat_a_llist_enat_fun_fun$ Enat$ )A_llist_enat_fun$ )
(declare-fun fun_app$cp (Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun_fun$ Enat_a_llist_prod_enat_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun$ )
(declare-fun fun_app$cq (Enat_enat_fun_enat_a_llist_fun_enat_enat_fun_fun_fun$ Enat_enat_fun$ )Enat_a_llist_fun_enat_enat_fun_fun$ )
(declare-fun fun_app$cr (A_llist_enat_fun_a_llist_enat_fun_a_llist_a_llist_fun_fun_fun$ A_llist_enat_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$cs (Enat_enat_a_llist_fun_fun$ Enat$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ct (A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun_fun$ A_llist_a_llist_prod_enat_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$cu (Enat_enat_fun_enat_enat_fun_enat_a_llist_fun_fun_fun$ Enat_enat_fun$ )Enat_enat_fun_enat_a_llist_fun_fun$ )
(declare-fun fun_app$cv (A_llist_enat_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ A_llist_enat_fun$ )A_llist_enat_fun_a_llist_enat_fun_fun$ )
(declare-fun fun_app$cw (A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun_fun$ A_llist_a_llist_prod_enat_fun$ )A_llist_a_llist_prod_enat_fun_a_llist_a_llist_prod_enat_fun_fun$ )
(declare-fun fun_app$cx (Enat_enat_fun_enat_enat_fun_enat_enat_fun_fun_fun$ Enat_enat_fun$ )Enat_enat_fun_enat_enat_fun_fun$ )
(declare-fun fun_app$cy (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$cz (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$da (A_llist_a_llist_prod_bool_fun$ A_llist_a_llist_prod$ )Bool )
(declare-fun fun_app$db (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$dc (Enat_a_llist_prod_bool_fun$ Enat_a_llist_prod$ )Bool )
(declare-fun fun_app$dd (Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_a_llist_prod$ )Enat_a_llist_prod_bool_fun$ )
(declare-fun monotone$a (Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$b (Enat_enat_bool_fun_fun$ Enat_enat_bool_fun_fun$ Enat_enat_fun$ )Bool )
(declare-fun monotone$c (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ )Bool )
(declare-fun monotone$d (A_llist_a_llist_bool_fun_fun$ Enat_enat_bool_fun_fun$ A_llist_enat_fun$ )Bool )
(declare-fun monotone$e (Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ Enat_a_llist_prod_enat_fun$ )Bool )
(declare-fun monotone$f (Enat_enat_bool_fun_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_enat_a_llist_prod_fun$ )Bool )
(declare-fun monotone$g (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ A_llist_a_llist_prod_enat_fun$ )Bool )
(declare-fun monotone$h (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$i (Enat_enat_bool_fun_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ Enat_a_llist_a_llist_prod_fun$ )Bool )
(declare-fun monotone$j (Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_a_llist_prod_enat_a_llist_prod_fun$ )Bool )
(declare-fun monotone$k (Enat_enat_prod_enat_enat_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ Enat_enat_prod_a_llist_fun$ )Bool )
(declare-fun monotone$l (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_a_llist_prod_fun$ )Bool )
(declare-fun monotone$m (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ )Bool )
(declare-fun monotone$n (Enat_enat_prod_enat_enat_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ Enat_enat_prod_enat_fun$ )Bool )
(declare-fun monotone$o (A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_enat_prod_a_llist_fun$ )Bool )
(declare-fun monotone$p (A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ Enat_enat_bool_fun_fun$ A_llist_enat_prod_enat_fun$ )Bool )
(declare-fun rel_prod$a (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$b (Enat_enat_bool_fun_fun$ Enat_enat_bool_fun_fun$ )Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )
(declare-fun rel_prod$c (A_llist_a_llist_bool_fun_fun$ Enat_enat_bool_fun_fun$ )A_llist_enat_prod_a_llist_enat_prod_bool_fun_fun$ )
(declare-fun case_prod$a (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun case_prod$b (Enat_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun case_prod$c (Enat_enat_enat_fun_fun$ )Enat_enat_prod_enat_fun$ )
(declare-fun case_prod$d (Enat_enat_a_llist_fun_fun$ )Enat_enat_prod_a_llist_fun$ )
(declare-fun case_prod$e (A_llist_enat_a_llist_fun_fun$ )A_llist_enat_prod_a_llist_fun$ )
(declare-fun case_prod$f (A_llist_enat_enat_fun_fun$ )A_llist_enat_prod_enat_fun$ )
(declare-fun case_prod$g (Enat_a_llist_enat_fun_fun$ )Enat_a_llist_prod_enat_fun$ )
(declare-fun lstrict_prefix$ (A_llist$ A_llist$ )Bool )
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$ uu$ ?v0 )(fun_app$a (fun_app$b ltake$ ?v0 )xs$ )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(! (= (fun_app$c (fun_app$d uuo$ ?v0 )?v1 )(fun_app$c (fun_app$d less_eq$ ?v1 )?v0 )):pattern ((fun_app$c (fun_app$d uuo$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist$ ))(! (= (fun_app$e (uvt$ ?v0 )?v1 )(fun_app$e llength$ (fun_app$a ?v0 ?v1 ))):pattern ((fun_app$e (uvt$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_fun$ )(?v1 A_llist_a_llist_prod$ ))(! (= (fun_app$f (uvu$ ?v0 )?v1 )(fun_app$e llength$ (fun_app$g ?v0 ?v1 ))):pattern ((fun_app$f (uvu$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_fun$ )(?v1 Enat_a_llist_prod$ ))(! (= (fun_app$h (uvv$ ?v0 )?v1 )(fun_app$e llength$ (fun_app$i ?v0 ?v1 ))):pattern ((fun_app$h (uvv$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 Enat_enat_prod_a_llist_fun$ )(?v1 Enat_enat_prod$ ))(! (= (fun_app$j (uvs$ ?v0 )?v1 )(fun_app$e llength$ (fun_app$k ?v0 ?v1 ))):pattern ((fun_app$j (uvs$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat$ ))(! (= (fun_app$l (uvw$ ?v0 )?v1 )(fun_app$e llength$ (fun_app$ ?v0 ?v1 ))):pattern ((fun_app$l (uvw$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_enat_fun_fun_fun$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist$ ))(! (= (fun_app$e (fun_app$m (uwe$ ?v0 )?v1 )?v2 )(fun_app$f (case_prod$ (fun_app$n ?v0 ?v2 ))?v1 )):pattern ((fun_app$e (fun_app$m (uwe$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$o (uwo$ ?v0 )?v1 )?v2 )(fun_app$g (case_prod$a (fun_app$p ?v0 ?v2 ))?v1 )):pattern ((fun_app$g (fun_app$o (uwo$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_enat_fun_fun_fun$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$f (fun_app$q (uwk$ ?v0 )?v1 )?v2 )(fun_app$f (case_prod$ (fun_app$r ?v0 ?v2 ))?v1 )):pattern ((fun_app$f (fun_app$q (uwk$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )(?v1 Enat_a_llist_prod$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$s (uwi$ ?v0 )?v1 )?v2 )(fun_app$i (case_prod$b (fun_app$t ?v0 ?v2 ))?v1 )):pattern ((fun_app$g (fun_app$s (uwi$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v1 A_llist_a_llist_prod$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$u (uwm$ ?v0 )?v1 )?v2 )(fun_app$g (case_prod$a (fun_app$v ?v0 ?v2 ))?v1 )):pattern ((fun_app$i (fun_app$u (uwm$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )(?v1 Enat_a_llist_prod$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$w (uwg$ ?v0 )?v1 )?v2 )(fun_app$i (case_prod$b (fun_app$x ?v0 ?v2 ))?v1 )):pattern ((fun_app$i (fun_app$w (uwg$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v1 A_llist_a_llist_prod$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$y (uwc$ ?v0 )?v1 )?v2 )(fun_app$g (case_prod$a (fun_app$z ?v0 ?v2 ))?v1 )):pattern ((fun_app$ (fun_app$y (uwc$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_enat_fun_fun_fun$ )(?v1 A_llist_a_llist_prod$ )(?v2 Enat$ ))(! (= (fun_app$l (fun_app$aa (uwa$ ?v0 )?v1 )?v2 )(fun_app$f (case_prod$ (fun_app$ab ?v0 ?v2 ))?v1 )):pattern ((fun_app$l (fun_app$aa (uwa$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_a_llist_fun_fun_fun$ )(?v1 Enat_a_llist_prod$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ac (uvy$ ?v0 )?v1 )?v2 )(fun_app$i (case_prod$b (fun_app$ad ?v0 ?v2 ))?v1 )):pattern ((fun_app$ (fun_app$ac (uvy$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 Enat_enat_enat_enat_fun_fun_fun$ )(?v1 Enat_enat_prod$ )(?v2 Enat$ ))(! (= (fun_app$l (fun_app$ae (uwq$ ?v0 )?v1 )?v2 )(fun_app$j (case_prod$c (fun_app$af ?v0 ?v2 ))?v1 )):pattern ((fun_app$l (fun_app$ae (uwq$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_a_llist_prod_a_llist_fun$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$ag (uui$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$g ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$ag (uui$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$ah (uuf$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$ah (uuf$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ai (uub$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ai (uub$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_enat_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$e (fun_app$aj (uuw$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$aj (uuw$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_enat_fun$ )(?v1 A_llist_a_llist_prod_a_llist_fun$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$f (fun_app$ak (uva$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$g ?v1 ?v2 ))):pattern ((fun_app$f (fun_app$ak (uva$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_enat_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$h (fun_app$al (uux$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$al (uux$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_enat_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$l (fun_app$am (uut$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$am (uut$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_fun$ )(?v1 Enat_a_llist_a_llist_prod_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$an (uuh$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$an (uuh$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_enat_fun$ )(?v1 A_llist_a_llist_a_llist_prod_fun$ )(?v2 A_llist$ ))(! (= (fun_app$e (fun_app$ap (uvb$ ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$aq ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$ap (uvb$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_enat_fun$ )(?v1 A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$f (fun_app$ar (uvc$ ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$as ?v1 ?v2 ))):pattern ((fun_app$f (fun_app$ar (uvc$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_enat_fun$ )(?v1 Enat_a_llist_a_llist_prod_fun$ )(?v2 Enat$ ))(! (= (fun_app$l (fun_app$at (uuy$ ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$at (uuy$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$au (uuj$ ?v0 )?v1 )?v2 )(fun_app$i ?v0 (fun_app$av ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$au (uuj$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_fun$ )(?v1 Enat_enat_a_llist_prod_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$aw (uue$ ?v0 )?v1 )?v2 )(fun_app$i ?v0 (fun_app$ax ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$aw (uue$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$ay (uuc$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$ay (uuc$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$az (uug$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$az (uug$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat_a_llist_prod_enat_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$ba (uud$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$h ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$ba (uud$ ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$bb (uua$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$bb (uua$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$e (fun_app$bc (uuv$ ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$bc (uuv$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_prod$ ))(! (= (fun_app$f (fun_app$bd (uuz$ ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$f ?v1 ?v2 ))):pattern ((fun_app$f (fun_app$bd (uuz$ ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$l (fun_app$be (uuu$ ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$be (uuu$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_enat_fun_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$e (fun_app$bf (fun_app$n (uwd$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$bf (fun_app$n ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$e (fun_app$bf (fun_app$n (uwd$ ?v0 )?v1 )?v2 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$bg (fun_app$bh (uwn$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$bi (fun_app$p ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$g (fun_app$bg (fun_app$bh (uwn$ ?v0 )?v1 )?v2 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_enat_fun_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$f (fun_app$bj (fun_app$bk (uwj$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$bf (fun_app$r ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$f (fun_app$bj (fun_app$bk (uwj$ ?v0 )?v1 )?v2 )?v3 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$bg (fun_app$bl (uwh$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b (fun_app$t ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$g (fun_app$bg (fun_app$bl (uwh$ ?v0 )?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$bm (fun_app$bn (uwl$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$bi (fun_app$v ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$i (fun_app$bm (fun_app$bn (uwl$ ?v0 )?v1 )?v2 )?v3 )))):named a41 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$bm (fun_app$bo (uwf$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b (fun_app$x ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$i (fun_app$bm (fun_app$bo (uwf$ ?v0 )?v1 )?v2 )?v3 )))):named a42 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 Enat$ ))(! (= (fun_app$ (fun_app$bp (fun_app$bq (uwb$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$bi (fun_app$z ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$ (fun_app$bp (fun_app$bq (uwb$ ?v0 )?v1 )?v2 )?v3 )))):named a43 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_enat_fun_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 Enat$ ))(! (= (fun_app$l (fun_app$br (fun_app$bs (uvz$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$bf (fun_app$ab ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$l (fun_app$br (fun_app$bs (uvz$ ?v0 )?v1 )?v2 )?v3 )))):named a44 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_a_llist_fun_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ )(?v3 Enat$ ))(! (= (fun_app$ (fun_app$bp (fun_app$bt (uvx$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b (fun_app$ad ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$ (fun_app$bp (fun_app$bt (uvx$ ?v0 )?v1 )?v2 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 Enat_enat_enat_enat_fun_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$l (fun_app$bu (fun_app$af (uwp$ ?v0 )?v1 )?v2 )?v3 )(fun_app$l (fun_app$bu (fun_app$af ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$l (fun_app$bu (fun_app$af (uwp$ ?v0 )?v1 )?v2 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_a_llist_fun$ )(?v2 A_llist$ )(?v3 Enat$ ))(! (= (fun_app$ (fun_app$bp (fun_app$bv (uus$ ?v0 )?v1 )?v2 )?v3 )(ite (fun_app$c (fun_app$d less_eq$ ?v3 )?v0 )?v2 (fun_app$ ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$bp (fun_app$bv (uus$ ?v0 )?v1 )?v2 )?v3 )))):named a47 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_a_llist_a_llist_prod_fun$ )(?v2 A_llist_a_llist_prod$ )(?v3 Enat$ ))(! (= (fun_app$ao (fun_app$bw (fun_app$bx (uup$ ?v0 )?v1 )?v2 )?v3 )(ite (fun_app$c (fun_app$d less_eq$ ?v3 )?v0 )?v2 (fun_app$ao ?v1 ?v3 ))):pattern ((fun_app$ao (fun_app$bw (fun_app$bx (uup$ ?v0 )?v1 )?v2 )?v3 )))):named a48 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_enat_a_llist_prod_fun$ )(?v2 Enat_a_llist_prod$ )(?v3 Enat$ ))(! (= (fun_app$ax (fun_app$by (fun_app$bz (uuq$ ?v0 )?v1 )?v2 )?v3 )(ite (fun_app$c (fun_app$d less_eq$ ?v3 )?v0 )?v2 (fun_app$ax ?v1 ?v3 ))):pattern ((fun_app$ax (fun_app$by (fun_app$bz (uuq$ ?v0 )?v1 )?v2 )?v3 )))):named a49 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$l (fun_app$bu (fun_app$ca (uur$ ?v0 )?v1 )?v2 )?v3 )(ite (fun_app$c (fun_app$d less_eq$ ?v3 )?v0 )?v2 (fun_app$l ?v1 ?v3 ))):pattern ((fun_app$l (fun_app$bu (fun_app$ca (uur$ ?v0 )?v1 )?v2 )?v3 )))):named a50 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$ah (fun_app$cb (uvr$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$bi ?v0 (fun_app$i ?v1 ?v3 ))(fun_app$i ?v2 ?v3 ))):pattern ((fun_app$i (fun_app$ah (fun_app$cb (uvr$ ?v0 )?v1 )?v2 )?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 Enat$ ))(! (= (fun_app$ (fun_app$ai (fun_app$cc (uvi$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$bi ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$ ?v2 ?v3 ))):pattern ((fun_app$ (fun_app$ai (fun_app$cc (uvi$ ?v0 )?v1 )?v2 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_llist_a_llist_enat_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist$ ))(! (= (fun_app$e (fun_app$aj (fun_app$cd (uwx$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$bf ?v0 (fun_app$a ?v1 ?v3 ))(fun_app$a ?v2 ?v3 ))):pattern ((fun_app$e (fun_app$aj (fun_app$cd (uwx$ ?v0 )?v1 )?v2 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_llist_a_llist_enat_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 Enat$ ))(! (= (fun_app$l (fun_app$am (fun_app$ce (uwr$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$bf ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$ ?v2 ?v3 ))):pattern ((fun_app$l (fun_app$am (fun_app$ce (uwr$ ?v0 )?v1 )?v2 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 A_llist_a_llist_prod_a_llist_fun$ )(?v2 A_llist_a_llist_prod_enat_fun$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$az (fun_app$cf (uvq$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ (fun_app$bp ?v0 (fun_app$g ?v1 ?v3 ))(fun_app$f ?v2 ?v3 ))):pattern ((fun_app$g (fun_app$az (fun_app$cf (uvq$ ?v0 )?v1 )?v2 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat_enat_fun$ )(?v3 Enat$ ))(! (= (fun_app$ (fun_app$bb (fun_app$cg (uvk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ (fun_app$bp ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$l ?v2 ?v3 ))):pattern ((fun_app$ (fun_app$bb (fun_app$cg (uvk$ ?v0 )?v1 )?v2 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 A_llist_enat_enat_fun_fun$ )(?v1 A_llist_a_llist_prod_a_llist_fun$ )(?v2 A_llist_a_llist_prod_enat_fun$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$f (fun_app$bd (fun_app$ch (uxa$ ?v0 )?v1 )?v2 )?v3 )(fun_app$l (fun_app$br ?v0 (fun_app$g ?v1 ?v3 ))(fun_app$f ?v2 ?v3 ))):pattern ((fun_app$f (fun_app$bd (fun_app$ch (uxa$ ?v0 )?v1 )?v2 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 A_llist_enat_enat_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat_enat_fun$ )(?v3 Enat$ ))(! (= (fun_app$l (fun_app$be (fun_app$ci (uwt$ ?v0 )?v1 )?v2 )?v3 )(fun_app$l (fun_app$br ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$l ?v2 ?v3 ))):pattern ((fun_app$l (fun_app$be (fun_app$ci (uwt$ ?v0 )?v1 )?v2 )?v3 )))):named a58 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist$ ))(! (= (fun_app$a (fun_app$cj (fun_app$ck (uvn$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$a ?v2 ?v3 ))):pattern ((fun_app$a (fun_app$cj (fun_app$ck (uvn$ ?v0 )?v1 )?v2 )?v3 )))):named a59 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_enat_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$i (fun_app$ah (fun_app$cl (uvp$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b ?v0 (fun_app$h ?v1 ?v3 ))(fun_app$i ?v2 ?v3 ))):pattern ((fun_app$i (fun_app$ah (fun_app$cl (uvp$ ?v0 )?v1 )?v2 )?v3 )))):named a60 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 Enat$ ))(! (= (fun_app$ (fun_app$ai (fun_app$cm (uvm$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b ?v0 (fun_app$l ?v1 ?v3 ))(fun_app$ ?v2 ?v3 ))):pattern ((fun_app$ (fun_app$ai (fun_app$cm (uvm$ ?v0 )?v1 )?v2 )?v3 )))):named a61 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist$ ))(! (= (fun_app$e (fun_app$aj (fun_app$cn (uww$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$co ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$a ?v2 ?v3 ))):pattern ((fun_app$e (fun_app$aj (fun_app$cn (uww$ ?v0 )?v1 )?v2 )?v3 )))):named a62 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 Enat_a_llist_prod_enat_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_a_llist_prod$ ))(! (= (fun_app$h (fun_app$al (fun_app$cp (uwy$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$co ?v0 (fun_app$h ?v1 ?v3 ))(fun_app$i ?v2 ?v3 ))):pattern ((fun_app$h (fun_app$al (fun_app$cp (uwy$ ?v0 )?v1 )?v2 )?v3 )))):named a63 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 Enat$ ))(! (= (fun_app$l (fun_app$am (fun_app$cq (uwv$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e (fun_app$co ?v0 (fun_app$l ?v1 ?v3 ))(fun_app$ ?v2 ?v3 ))):pattern ((fun_app$l (fun_app$am (fun_app$cq (uwv$ ?v0 )?v1 )?v2 )?v3 )))):named a64 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_enat_fun$ )(?v3 A_llist$ ))(! (= (fun_app$a (fun_app$ay (fun_app$cr (uvl$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ (fun_app$cs ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$e ?v2 ?v3 ))):pattern ((fun_app$a (fun_app$ay (fun_app$cr (uvl$ ?v0 )?v1 )?v2 )?v3 )))):named a65 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_prod_enat_fun$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$g (fun_app$az (fun_app$ct (uvo$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ (fun_app$cs ?v0 (fun_app$f ?v1 ?v3 ))(fun_app$f ?v2 ?v3 ))):pattern ((fun_app$g (fun_app$az (fun_app$ct (uvo$ ?v0 )?v1 )?v2 )?v3 )))):named a66 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat_enat_fun$ )(?v3 Enat$ ))(! (= (fun_app$ (fun_app$bb (fun_app$cu (uvj$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ (fun_app$cs ?v0 (fun_app$l ?v1 ?v3 ))(fun_app$l ?v2 ?v3 ))):pattern ((fun_app$ (fun_app$bb (fun_app$cu (uvj$ ?v0 )?v1 )?v2 )?v3 )))):named a67 ))
(assert (! (forall ((?v0 Enat_enat_enat_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_enat_fun$ )(?v3 A_llist$ ))(! (= (fun_app$e (fun_app$bc (fun_app$cv (uwu$ ?v0 )?v1 )?v2 )?v3 )(fun_app$l (fun_app$bu ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$e ?v2 ?v3 ))):pattern ((fun_app$e (fun_app$bc (fun_app$cv (uwu$ ?v0 )?v1 )?v2 )?v3 )))):named a68 ))
(assert (! (forall ((?v0 Enat_enat_enat_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_prod_enat_fun$ )(?v3 A_llist_a_llist_prod$ ))(! (= (fun_app$f (fun_app$bd (fun_app$cw (uwz$ ?v0 )?v1 )?v2 )?v3 )(fun_app$l (fun_app$bu ?v0 (fun_app$f ?v1 ?v3 ))(fun_app$f ?v2 ?v3 ))):pattern ((fun_app$f (fun_app$bd (fun_app$cw (uwz$ ?v0 )?v1 )?v2 )?v3 )))):named a69 ))
(assert (! (forall ((?v0 Enat_enat_enat_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat_enat_fun$ )(?v3 Enat$ ))(! (= (fun_app$l (fun_app$be (fun_app$cx (uws$ ?v0 )?v1 )?v2 )?v3 )(fun_app$l (fun_app$bu ?v0 (fun_app$l ?v1 ?v3 ))(fun_app$l ?v2 ?v3 ))):pattern ((fun_app$l (fun_app$be (fun_app$cx (uws$ ?v0 )?v1 )?v2 )?v3 )))):named a70 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_a_llist_prod$ ))(! (= (fun_app$g (uul$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (uul$ ?v0 )?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Enat_a_llist_prod$ ))(! (= (fun_app$i (uum$ ?v0 )?v1 )?v0 ):pattern ((fun_app$i (uum$ ?v0 )?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Enat_enat_prod$ ))(! (= (fun_app$k (uuk$ ?v0 )?v1 )?v0 ):pattern ((fun_app$k (uuk$ ?v0 )?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Enat$ ))(! (= (fun_app$ (uun$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uun$ ?v0 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist$ ))(! (= (fun_app$e (uvf$ ?v0 )?v1 )?v0 ):pattern ((fun_app$e (uvf$ ?v0 )?v1 )))):named a75 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist_a_llist_prod$ ))(! (= (fun_app$f (uvg$ ?v0 )?v1 )?v0 ):pattern ((fun_app$f (uvg$ ?v0 )?v1 )))):named a76 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_a_llist_prod$ ))(! (= (fun_app$h (uvd$ ?v0 )?v1 )?v0 ):pattern ((fun_app$h (uvd$ ?v0 )?v1 )))):named a77 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_enat_prod$ ))(! (= (fun_app$j (uve$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (uve$ ?v0 )?v1 )))):named a78 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(! (= (fun_app$l (uvh$ ?v0 )?v1 )?v0 ):pattern ((fun_app$l (uvh$ ?v0 )?v1 )))):named a79 ))
(assert (! (not (monotone$ less_eq$ lprefix$ uu$ )):named a80 ))
(assert (! (monotone$a (rel_prod$ less_eq$ lprefix$ )lprefix$ (case_prod$b ltake$ )):named a81 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$cy (fun_app$cz lprefix$ ?v0 )?v0 )):named a82 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$cy (fun_app$cz lprefix$ ?v0 )?v0 )):named a83 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist$ ))(fun_app$cy (fun_app$cz lprefix$ (fun_app$a (fun_app$b ltake$ ?v0 )?v1 ))?v1 )):named a84 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (and (forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (fun_app$c (fun_app$d less_eq$ ?v3 )?v4 )(fun_app$c (fun_app$d ?v0 ?v3 )?v4 )))(=> (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(fun_app$c (fun_app$d ?v0 ?v2 )?v1 )))(fun_app$c (fun_app$d ?v0 ?v2 )?v1 ))):named a85 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_enat_fun$ ))(=> (and (monotone$ ?v0 lprefix$ ?v1 )(monotone$b ?v2 ?v0 ?v3 ))(monotone$ ?v2 lprefix$ (fun_app$bb (uua$ ?v1 )?v3 )))):named a86 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_a_llist_fun$ ))(=> (and (monotone$c ?v0 lprefix$ ?v1 )(monotone$ ?v2 ?v0 ?v3 ))(monotone$ ?v2 lprefix$ (fun_app$ai (uub$ ?v1 )?v3 )))):named a87 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_enat_fun$ ))(=> (and (monotone$ ?v0 lprefix$ ?v1 )(monotone$d ?v2 ?v0 ?v3 ))(monotone$c ?v2 lprefix$ (fun_app$ay (uuc$ ?v1 )?v3 )))):named a88 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v3 Enat_a_llist_prod_enat_fun$ ))(=> (and (monotone$ ?v0 lprefix$ ?v1 )(monotone$e ?v2 ?v0 ?v3 ))(monotone$a ?v2 lprefix$ (fun_app$ba (uud$ ?v1 )?v3 )))):named a89 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_enat_a_llist_prod_fun$ ))(=> (and (monotone$a ?v0 lprefix$ ?v1 )(monotone$f ?v2 ?v0 ?v3 ))(monotone$ ?v2 lprefix$ (fun_app$aw (uue$ ?v1 )?v3 )))):named a90 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v3 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$c ?v0 lprefix$ ?v1 )(monotone$a ?v2 ?v0 ?v3 ))(monotone$a ?v2 lprefix$ (fun_app$ah (uuf$ ?v1 )?v3 )))):named a91 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$ ?v0 lprefix$ ?v1 )(monotone$g ?v2 ?v0 ?v3 ))(monotone$h ?v2 lprefix$ (fun_app$az (uug$ ?v1 )?v3 )))):named a92 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_a_llist_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_a_llist_a_llist_prod_fun$ ))(=> (and (monotone$h ?v0 lprefix$ ?v1 )(monotone$i ?v2 ?v0 ?v3 ))(monotone$ ?v2 lprefix$ (fun_app$an (uuh$ ?v1 )?v3 )))):named a93 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$c ?v0 lprefix$ ?v1 )(monotone$h ?v2 ?v0 ?v3 ))(monotone$h ?v2 lprefix$ (fun_app$ag (uui$ ?v1 )?v3 )))):named a94 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_fun$ ))(=> (and (monotone$a ?v0 lprefix$ ?v1 )(monotone$j ?v2 ?v0 ?v3 ))(monotone$a ?v2 lprefix$ (fun_app$au (uuj$ ?v1 )?v3 )))):named a95 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 Enat$ ))(=> (and (= (fun_app$a (fun_app$b ltake$ ?v0 )?v1 )(fun_app$a (fun_app$b ltake$ ?v0 )?v2 ))(fun_app$c (fun_app$d less_eq$ ?v3 )?v0 ))(= (fun_app$a (fun_app$b ltake$ ?v3 )?v1 )(fun_app$a (fun_app$b ltake$ ?v3 )?v2 )))):named a96 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$cy (fun_app$cz lprefix$ ?v0 )?v1 )(fun_app$cy (fun_app$cz lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a97 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$cy (fun_app$cz lprefix$ ?v0 )?v1 )(fun_app$cy (fun_app$cz lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a98 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$cy (fun_app$cz lprefix$ ?v0 )?v1 )(fun_app$cy (fun_app$cz lprefix$ ?v2 )?v1 ))(or (fun_app$cy (fun_app$cz lprefix$ ?v0 )?v2 )(fun_app$cy (fun_app$cz lprefix$ ?v2 )?v0 )))):named a99 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$cy (fun_app$cz lprefix$ ?v0 )?v1 )(fun_app$cy (fun_app$cz lprefix$ ?v1 )?v2 ))(fun_app$cy (fun_app$cz lprefix$ ?v0 )?v2 ))):named a100 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$cy (fun_app$cz lprefix$ ?v0 )?v1 )(fun_app$cy (fun_app$cz lprefix$ ?v1 )?v2 ))(fun_app$cy (fun_app$cz lprefix$ ?v0 )?v2 ))):named a101 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 A_llist$ ))(monotone$k ?v0 lprefix$ (uuk$ ?v1 ))):named a102 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist$ ))(monotone$h ?v0 lprefix$ (uul$ ?v1 ))):named a103 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 A_llist$ ))(monotone$a ?v0 lprefix$ (uum$ ?v1 ))):named a104 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist$ ))(monotone$ ?v0 lprefix$ (uun$ ?v1 ))):named a105 ))
(assert (! (forall ((?v0 Enat$ ))(fun_app$c (fun_app$d less_eq$ ?v0 )?v0 )):named a106 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_prod_fun$ )(?v1 Enat$ )(?v2 A_llist_a_llist_prod$ )(?v3 Enat_a_llist_a_llist_prod_fun$ )(?v4 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$ao ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )?v2 (fun_app$ao ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v6 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )))(fun_app$da (fun_app$db ?v4 (fun_app$ao ?v3 ?v5 ))(fun_app$ao ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 ))(fun_app$da (fun_app$db ?v4 ?v2 )(fun_app$ao ?v3 ?v5 ))))(fun_app$da (fun_app$db ?v4 ?v2 )?v2 ))))(monotone$i uuo$ ?v4 ?v0 ))):named a107 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_prod_fun$ )(?v1 Enat$ )(?v2 Enat_a_llist_prod$ )(?v3 Enat_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$ax ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )?v2 (fun_app$ax ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v6 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )))(fun_app$dc (fun_app$dd ?v4 (fun_app$ax ?v3 ?v5 ))(fun_app$ax ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 ))(fun_app$dc (fun_app$dd ?v4 ?v2 )(fun_app$ax ?v3 ?v5 ))))(fun_app$dc (fun_app$dd ?v4 ?v2 )?v2 ))))(monotone$f uuo$ ?v4 ?v0 ))):named a108 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 Enat$ )(?v2 Enat$ )(?v3 Enat_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$l ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )?v2 (fun_app$l ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v6 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )))(fun_app$c (fun_app$d ?v4 (fun_app$l ?v3 ?v5 ))(fun_app$l ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 ))(fun_app$c (fun_app$d ?v4 ?v2 )(fun_app$l ?v3 ?v5 ))))(fun_app$c (fun_app$d ?v4 ?v2 )?v2 ))))(monotone$b uuo$ ?v4 ?v0 ))):named a109 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat$ )(?v2 A_llist$ )(?v3 Enat_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$ ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )?v2 (fun_app$ ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v6 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 )))(fun_app$cy (fun_app$cz ?v4 (fun_app$ ?v3 ?v5 ))(fun_app$ ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v1 )?v5 ))(fun_app$cy (fun_app$cz ?v4 ?v2 )(fun_app$ ?v3 ?v5 ))))(fun_app$cy (fun_app$cz ?v4 ?v2 )?v2 ))))(monotone$ uuo$ ?v4 ?v0 ))):named a110 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_prod_fun$ )(?v3 A_llist_a_llist_prod$ ))(=> (and (forall ((?v4 Enat$ )(?v5 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v4 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 )))(fun_app$da (fun_app$db ?v1 (fun_app$ao ?v2 ?v4 ))(fun_app$ao ?v2 ?v5 ))))(and (forall ((?v4 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 ))(fun_app$da (fun_app$db ?v1 ?v3 )(fun_app$ao ?v2 ?v4 ))))(fun_app$da (fun_app$db ?v1 ?v3 )?v3 )))(monotone$i less_eq$ ?v1 (fun_app$bw (fun_app$bx (uup$ ?v0 )?v2 )?v3 )))):named a111 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 Enat_enat_a_llist_prod_fun$ )(?v3 Enat_a_llist_prod$ ))(=> (and (forall ((?v4 Enat$ )(?v5 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v4 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 )))(fun_app$dc (fun_app$dd ?v1 (fun_app$ax ?v2 ?v4 ))(fun_app$ax ?v2 ?v5 ))))(and (forall ((?v4 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 ))(fun_app$dc (fun_app$dd ?v1 ?v3 )(fun_app$ax ?v2 ?v4 ))))(fun_app$dc (fun_app$dd ?v1 ?v3 )?v3 )))(monotone$f less_eq$ ?v1 (fun_app$by (fun_app$bz (uuq$ ?v0 )?v2 )?v3 )))):named a112 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_fun$ )(?v3 Enat$ ))(=> (and (forall ((?v4 Enat$ )(?v5 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v4 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 )))(fun_app$c (fun_app$d ?v1 (fun_app$l ?v2 ?v4 ))(fun_app$l ?v2 ?v5 ))))(and (forall ((?v4 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 ))(fun_app$c (fun_app$d ?v1 ?v3 )(fun_app$l ?v2 ?v4 ))))(fun_app$c (fun_app$d ?v1 ?v3 )?v3 )))(monotone$b less_eq$ ?v1 (fun_app$bu (fun_app$ca (uur$ ?v0 )?v2 )?v3 )))):named a113 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 A_llist$ ))(=> (and (forall ((?v4 Enat$ )(?v5 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v4 )?v5 )(not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 )))(fun_app$cy (fun_app$cz ?v1 (fun_app$ ?v2 ?v4 ))(fun_app$ ?v2 ?v5 ))))(and (forall ((?v4 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v4 )?v0 ))(fun_app$cy (fun_app$cz ?v1 ?v3 )(fun_app$ ?v2 ?v4 ))))(fun_app$cy (fun_app$cz ?v1 ?v3 )?v3 )))(monotone$ less_eq$ ?v1 (fun_app$bp (fun_app$bv (uus$ ?v0 )?v2 )?v3 )))):named a114 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_a_llist_fun$ ))(=> (and (monotone$d ?v0 uuo$ ?v1 )(monotone$ ?v2 ?v0 ?v3 ))(monotone$b ?v2 uuo$ (fun_app$am (uut$ ?v1 )?v3 )))):named a115 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_enat_fun$ ))(=> (and (monotone$b ?v0 uuo$ ?v1 )(monotone$b ?v2 ?v0 ?v3 ))(monotone$b ?v2 uuo$ (fun_app$be (uuu$ ?v1 )?v3 )))):named a116 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_enat_fun$ ))(=> (and (monotone$b ?v0 uuo$ ?v1 )(monotone$d ?v2 ?v0 ?v3 ))(monotone$d ?v2 uuo$ (fun_app$bc (uuv$ ?v1 )?v3 )))):named a117 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_fun$ ))(=> (and (monotone$d ?v0 uuo$ ?v1 )(monotone$c ?v2 ?v0 ?v3 ))(monotone$d ?v2 uuo$ (fun_app$aj (uuw$ ?v1 )?v3 )))):named a118 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v3 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$d ?v0 uuo$ ?v1 )(monotone$a ?v2 ?v0 ?v3 ))(monotone$e ?v2 uuo$ (fun_app$al (uux$ ?v1 )?v3 )))):named a119 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_a_llist_a_llist_prod_fun$ ))(=> (and (monotone$g ?v0 uuo$ ?v1 )(monotone$i ?v2 ?v0 ?v3 ))(monotone$b ?v2 uuo$ (fun_app$at (uuy$ ?v1 )?v3 )))):named a120 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$b ?v0 uuo$ ?v1 )(monotone$g ?v2 ?v0 ?v3 ))(monotone$g ?v2 uuo$ (fun_app$bd (uuz$ ?v1 )?v3 )))):named a121 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$d ?v0 uuo$ ?v1 )(monotone$h ?v2 ?v0 ?v3 ))(monotone$g ?v2 uuo$ (fun_app$ak (uva$ ?v1 )?v3 )))):named a122 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_a_llist_prod_fun$ ))(=> (and (monotone$g ?v0 uuo$ ?v1 )(monotone$l ?v2 ?v0 ?v3 ))(monotone$d ?v2 uuo$ (fun_app$ap (uvb$ ?v1 )?v3 )))):named a123 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ ))(=> (and (monotone$g ?v0 uuo$ ?v1 )(monotone$m ?v2 ?v0 ?v3 ))(monotone$g ?v2 uuo$ (fun_app$ar (uvc$ ?v1 )?v3 )))):named a124 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_a_llist_fun$ ))(=> (and (monotone$d ?v0 less_eq$ ?v1 )(monotone$ ?v2 ?v0 ?v3 ))(monotone$b ?v2 less_eq$ (fun_app$am (uut$ ?v1 )?v3 )))):named a125 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_enat_fun$ ))(=> (and (monotone$b ?v0 less_eq$ ?v1 )(monotone$b ?v2 ?v0 ?v3 ))(monotone$b ?v2 less_eq$ (fun_app$be (uuu$ ?v1 )?v3 )))):named a126 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_enat_fun$ ))(=> (and (monotone$b ?v0 less_eq$ ?v1 )(monotone$d ?v2 ?v0 ?v3 ))(monotone$d ?v2 less_eq$ (fun_app$bc (uuv$ ?v1 )?v3 )))):named a127 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_fun$ ))(=> (and (monotone$d ?v0 less_eq$ ?v1 )(monotone$c ?v2 ?v0 ?v3 ))(monotone$d ?v2 less_eq$ (fun_app$aj (uuw$ ?v1 )?v3 )))):named a128 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v3 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$d ?v0 less_eq$ ?v1 )(monotone$a ?v2 ?v0 ?v3 ))(monotone$e ?v2 less_eq$ (fun_app$al (uux$ ?v1 )?v3 )))):named a129 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_a_llist_a_llist_prod_fun$ ))(=> (and (monotone$g ?v0 less_eq$ ?v1 )(monotone$i ?v2 ?v0 ?v3 ))(monotone$b ?v2 less_eq$ (fun_app$at (uuy$ ?v1 )?v3 )))):named a130 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$b ?v0 less_eq$ ?v1 )(monotone$g ?v2 ?v0 ?v3 ))(monotone$g ?v2 less_eq$ (fun_app$bd (uuz$ ?v1 )?v3 )))):named a131 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$d ?v0 less_eq$ ?v1 )(monotone$h ?v2 ?v0 ?v3 ))(monotone$g ?v2 less_eq$ (fun_app$ak (uva$ ?v1 )?v3 )))):named a132 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_a_llist_prod_fun$ ))(=> (and (monotone$g ?v0 less_eq$ ?v1 )(monotone$l ?v2 ?v0 ?v3 ))(monotone$d ?v2 less_eq$ (fun_app$ap (uvb$ ?v1 )?v3 )))):named a133 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_enat_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_fun$ ))(=> (and (monotone$g ?v0 less_eq$ ?v1 )(monotone$m ?v2 ?v0 ?v3 ))(monotone$g ?v2 less_eq$ (fun_app$ar (uvc$ ?v1 )?v3 )))):named a134 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$e ?v0 uuo$ (uvd$ ?v1 ))):named a135 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$n ?v0 uuo$ (uve$ ?v1 ))):named a136 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat$ ))(monotone$d ?v0 uuo$ (uvf$ ?v1 ))):named a137 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$g ?v0 uuo$ (uvg$ ?v1 ))):named a138 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ ))(monotone$b ?v0 uuo$ (uvh$ ?v1 ))):named a139 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$e ?v0 less_eq$ (uvd$ ?v1 ))):named a140 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$n ?v0 less_eq$ (uve$ ?v1 ))):named a141 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat$ ))(monotone$d ?v0 less_eq$ (uvf$ ?v1 ))):named a142 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$g ?v0 less_eq$ (uvg$ ?v1 ))):named a143 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ ))(monotone$b ?v0 less_eq$ (uvh$ ?v1 ))):named a144 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$e ?v0 less_eq$ (uvd$ ?v1 ))):named a145 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$n ?v0 less_eq$ (uve$ ?v1 ))):named a146 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat$ ))(monotone$d ?v0 less_eq$ (uvf$ ?v1 ))):named a147 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 Enat$ ))(monotone$g ?v0 less_eq$ (uvg$ ?v1 ))):named a148 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ ))(monotone$b ?v0 less_eq$ (uvh$ ?v1 ))):named a149 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (lstrict_prefix$ ?v0 ?v1 )(and (fun_app$cy (fun_app$cz lprefix$ ?v0 )?v1 )(not (= ?v0 ?v1 )))):pattern ((lstrict_prefix$ ?v0 ?v1 )))):named a150 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_a_llist_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (monotone$h (rel_prod$a ?v0 ?v1 )lprefix$ (case_prod$a ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$ai (fun_app$cc (uvi$ ?v2 )?v4 )?v5 )))):named a151 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_enat_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (monotone$k (rel_prod$b ?v0 ?v1 )lprefix$ (case_prod$d ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$bb (fun_app$cu (uvj$ ?v2 )?v4 )?v5 )))):named a152 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_a_llist_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_a_llist_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (monotone$o (rel_prod$c ?v0 ?v1 )lprefix$ (case_prod$e ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$bb (fun_app$cg (uvk$ ?v2 )?v4 )?v5 )))):named a153 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_enat_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (monotone$k (rel_prod$b ?v0 ?v1 )lprefix$ (case_prod$d ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$d ?v3 ?v1 ?v5 )))(monotone$c ?v3 lprefix$ (fun_app$ay (fun_app$cr (uvl$ ?v2 )?v4 )?v5 )))):named a154 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_enat_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (monotone$a (rel_prod$ ?v0 ?v1 )lprefix$ (case_prod$b ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$ (fun_app$ai (fun_app$cm (uvm$ ?v2 )?v4 )?v5 )))):named a155 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_enat_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (monotone$a (rel_prod$ ?v0 ?v1 )lprefix$ (case_prod$b ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$c ?v3 ?v1 ?v5 )))(monotone$c ?v3 lprefix$ (fun_app$cj (fun_app$ck (uvn$ ?v2 )?v4 )?v5 )))):named a156 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_enat_fun$ )(?v5 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$k (rel_prod$b ?v0 ?v1 )lprefix$ (case_prod$d ?v2 ))(and (monotone$g ?v3 ?v0 ?v4 )(monotone$g ?v3 ?v1 ?v5 )))(monotone$h ?v3 lprefix$ (fun_app$az (fun_app$ct (uvo$ ?v2 )?v4 )?v5 )))):named a157 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_enat_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$a (rel_prod$ ?v0 ?v1 )lprefix$ (case_prod$b ?v2 ))(and (monotone$e ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$a ?v3 lprefix$ (fun_app$ah (fun_app$cl (uvp$ ?v2 )?v4 )?v5 )))):named a158 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_a_llist_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_a_llist_fun$ )(?v5 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$o (rel_prod$c ?v0 ?v1 )lprefix$ (case_prod$e ?v2 ))(and (monotone$h ?v3 ?v0 ?v4 )(monotone$g ?v3 ?v1 ?v5 )))(monotone$h ?v3 lprefix$ (fun_app$az (fun_app$cf (uvq$ ?v2 )?v4 )?v5 )))):named a159 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_a_llist_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$h (rel_prod$a ?v0 ?v1 )lprefix$ (case_prod$a ?v2 ))(and (monotone$a ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$a ?v3 lprefix$ (fun_app$ah (fun_app$cb (uvr$ ?v2 )?v4 )?v5 )))):named a160 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_prod_fun$ )(?v1 Enat$ )(?v2 A_llist_a_llist_prod$ )(?v3 Enat_a_llist_a_llist_prod_fun$ )(?v4 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$ao ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )?v2 (fun_app$ao ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v5 )?v6 )(not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )))(fun_app$da (fun_app$db ?v4 (fun_app$ao ?v3 ?v5 ))(fun_app$ao ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 ))(fun_app$da (fun_app$db ?v4 ?v2 )(fun_app$ao ?v3 ?v5 ))))(fun_app$da (fun_app$db ?v4 ?v2 )?v2 ))))(monotone$i less_eq$ ?v4 ?v0 ))):named a161 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_prod_fun$ )(?v1 Enat$ )(?v2 Enat_a_llist_prod$ )(?v3 Enat_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$ax ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )?v2 (fun_app$ax ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v5 )?v6 )(not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )))(fun_app$dc (fun_app$dd ?v4 (fun_app$ax ?v3 ?v5 ))(fun_app$ax ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 ))(fun_app$dc (fun_app$dd ?v4 ?v2 )(fun_app$ax ?v3 ?v5 ))))(fun_app$dc (fun_app$dd ?v4 ?v2 )?v2 ))))(monotone$f less_eq$ ?v4 ?v0 ))):named a162 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 Enat$ )(?v2 Enat$ )(?v3 Enat_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$l ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )?v2 (fun_app$l ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v5 )?v6 )(not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )))(fun_app$c (fun_app$d ?v4 (fun_app$l ?v3 ?v5 ))(fun_app$l ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 ))(fun_app$c (fun_app$d ?v4 ?v2 )(fun_app$l ?v3 ?v5 ))))(fun_app$c (fun_app$d ?v4 ?v2 )?v2 ))))(monotone$b less_eq$ ?v4 ?v0 ))):named a163 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat$ )(?v2 A_llist$ )(?v3 Enat_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ ))(=> (and (forall ((?v5 Enat$ ))(= (fun_app$ ?v0 ?v5 )(ite (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )?v2 (fun_app$ ?v3 ?v5 ))))(and (forall ((?v5 Enat$ )(?v6 Enat$ ))(=> (and (fun_app$c (fun_app$d less_eq$ ?v5 )?v6 )(not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 )))(fun_app$cy (fun_app$cz ?v4 (fun_app$ ?v3 ?v5 ))(fun_app$ ?v3 ?v6 ))))(and (forall ((?v5 Enat$ ))(=> (not (fun_app$c (fun_app$d less_eq$ ?v5 )?v1 ))(fun_app$cy (fun_app$cz ?v4 ?v2 )(fun_app$ ?v3 ?v5 ))))(fun_app$cy (fun_app$cz ?v4 ?v2 )?v2 ))))(monotone$ less_eq$ ?v4 ?v0 ))):named a164 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist$ )(?v2 Enat$ ))(= (fun_app$cy (fun_app$cz lprefix$ (fun_app$a (fun_app$b ltake$ ?v0 )?v1 ))(fun_app$a (fun_app$b ltake$ ?v2 )?v1 ))(or (fun_app$c (fun_app$d less_eq$ ?v0 )?v2 )(fun_app$c (fun_app$d less_eq$ (fun_app$e llength$ ?v1 ))?v2 )))):named a165 ))
(assert (! (forall ((?v0 A_llist_enat_fun$ )(?v1 A_llist$ )(?v2 Enat$ )(?v3 A_llist_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ ))(=> (and (forall ((?v5 A_llist$ ))(= (fun_app$e ?v0 ?v5 )(ite (fun_app$cy (fun_app$cz lprefix$ ?v5 )?v1 )?v2 (fun_app$e ?v3 ?v5 ))))(and (forall ((?v5 A_llist$ )(?v6 A_llist$ ))(=> (and (fun_app$cy (fun_app$cz lprefix$ ?v5 )?v6 )(not (fun_app$cy (fun_app$cz lprefix$ ?v5 )?v1 )))(fun_app$c (fun_app$d ?v4 (fun_app$e ?v3 ?v5 ))(fun_app$e ?v3 ?v6 ))))(and (forall ((?v5 A_llist$ ))(=> (not (fun_app$cy (fun_app$cz lprefix$ ?v5 )?v1 ))(fun_app$c (fun_app$d ?v4 ?v2 )(fun_app$e ?v3 ?v5 ))))(fun_app$c (fun_app$d ?v4 ?v2 )?v2 ))))(monotone$d lprefix$ ?v4 ?v0 ))):named a166 ))
(assert (! (monotone$d lprefix$ less_eq$ llength$ ):named a167 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_bool_fun_fun$ )(?v1 Enat_enat_prod_a_llist_fun$ ))(=> (monotone$k ?v0 lprefix$ ?v1 )(monotone$n ?v0 less_eq$ (uvs$ ?v1 )))):named a168 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_fun$ ))(=> (monotone$c ?v0 lprefix$ ?v1 )(monotone$d ?v0 less_eq$ (uvt$ ?v1 )))):named a169 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_prod_a_llist_fun$ ))(=> (monotone$h ?v0 lprefix$ ?v1 )(monotone$g ?v0 less_eq$ (uvu$ ?v1 )))):named a170 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ ))(=> (monotone$a ?v0 lprefix$ ?v1 )(monotone$e ?v0 less_eq$ (uvv$ ?v1 )))):named a171 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_a_llist_fun$ ))(=> (monotone$ ?v0 lprefix$ ?v1 )(monotone$b ?v0 less_eq$ (uvw$ ?v1 )))):named a172 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_enat_a_llist_a_llist_fun_fun_fun$ )(?v3 Enat_a_llist_prod$ ))(=> (forall ((?v4 Enat$ )(?v5 A_llist$ ))(monotone$ ?v0 ?v1 (fun_app$bp (fun_app$bt (uvx$ ?v2 )?v4 )?v5 )))(monotone$ ?v0 ?v1 (fun_app$ac (uvy$ ?v2 )?v3 )))):named a173 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_enat_fun_fun_fun$ )(?v3 A_llist_a_llist_prod$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(monotone$b ?v0 ?v1 (fun_app$br (fun_app$bs (uvz$ ?v2 )?v4 )?v5 )))(monotone$b ?v0 ?v1 (fun_app$aa (uwa$ ?v2 )?v3 )))):named a174 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v3 A_llist_a_llist_prod$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(monotone$ ?v0 ?v1 (fun_app$bp (fun_app$bq (uwb$ ?v2 )?v4 )?v5 )))(monotone$ ?v0 ?v1 (fun_app$y (uwc$ ?v2 )?v3 )))):named a175 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_enat_fun_fun_fun$ )(?v3 A_llist_a_llist_prod$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(monotone$d ?v0 ?v1 (fun_app$bf (fun_app$n (uwd$ ?v2 )?v4 )?v5 )))(monotone$d ?v0 ?v1 (fun_app$m (uwe$ ?v2 )?v3 )))):named a176 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )(?v3 Enat_a_llist_prod$ ))(=> (forall ((?v4 Enat$ )(?v5 A_llist$ ))(monotone$a ?v0 ?v1 (fun_app$bm (fun_app$bo (uwf$ ?v2 )?v4 )?v5 )))(monotone$a ?v0 ?v1 (fun_app$w (uwg$ ?v2 )?v3 )))):named a177 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_enat_a_llist_a_llist_fun_fun_fun$ )(?v3 Enat_a_llist_prod$ ))(=> (forall ((?v4 Enat$ )(?v5 A_llist$ ))(monotone$h ?v0 ?v1 (fun_app$bg (fun_app$bl (uwh$ ?v2 )?v4 )?v5 )))(monotone$h ?v0 ?v1 (fun_app$s (uwi$ ?v2 )?v3 )))):named a178 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_enat_fun_fun_fun$ )(?v3 A_llist_a_llist_prod$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(monotone$g ?v0 ?v1 (fun_app$bj (fun_app$bk (uwj$ ?v2 )?v4 )?v5 )))(monotone$g ?v0 ?v1 (fun_app$q (uwk$ ?v2 )?v3 )))):named a179 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v3 A_llist_a_llist_prod$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(monotone$a ?v0 ?v1 (fun_app$bm (fun_app$bn (uwl$ ?v2 )?v4 )?v5 )))(monotone$a ?v0 ?v1 (fun_app$u (uwm$ ?v2 )?v3 )))):named a180 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_a_llist_a_llist_fun_fun_fun$ )(?v3 A_llist_a_llist_prod$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(monotone$h ?v0 ?v1 (fun_app$bg (fun_app$bh (uwn$ ?v2 )?v4 )?v5 )))(monotone$h ?v0 ?v1 (fun_app$o (uwo$ ?v2 )?v3 )))):named a181 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_enat_fun_fun_fun$ )(?v3 Enat_enat_prod$ ))(=> (forall ((?v4 Enat$ )(?v5 Enat$ ))(monotone$b ?v0 ?v1 (fun_app$bu (fun_app$af (uwp$ ?v2 )?v4 )?v5 )))(monotone$b ?v0 ?v1 (fun_app$ae (uwq$ ?v2 )?v3 )))):named a182 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_a_llist_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (monotone$g (rel_prod$a ?v0 ?v1 )less_eq$ (case_prod$ ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$b ?v3 less_eq$ (fun_app$am (fun_app$ce (uwr$ ?v2 )?v4 )?v5 )))):named a183 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_enat_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (monotone$n (rel_prod$b ?v0 ?v1 )less_eq$ (case_prod$c ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$b ?v3 less_eq$ (fun_app$be (fun_app$cx (uws$ ?v2 )?v4 )?v5 )))):named a184 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_a_llist_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (monotone$p (rel_prod$c ?v0 ?v1 )less_eq$ (case_prod$f ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$b ?v3 less_eq$ (fun_app$be (fun_app$ci (uwt$ ?v2 )?v4 )?v5 )))):named a185 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_enat_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (monotone$n (rel_prod$b ?v0 ?v1 )less_eq$ (case_prod$c ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$d ?v3 ?v1 ?v5 )))(monotone$d ?v3 less_eq$ (fun_app$bc (fun_app$cv (uwu$ ?v2 )?v4 )?v5 )))):named a186 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_enat_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$ ?v0 ?v1 )less_eq$ (case_prod$g ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$b ?v3 less_eq$ (fun_app$am (fun_app$cq (uwv$ ?v2 )?v4 )?v5 )))):named a187 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_enat_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$ ?v0 ?v1 )less_eq$ (case_prod$g ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$c ?v3 ?v1 ?v5 )))(monotone$d ?v3 less_eq$ (fun_app$aj (fun_app$cn (uww$ ?v2 )?v4 )?v5 )))):named a188 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_a_llist_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (monotone$g (rel_prod$a ?v0 ?v1 )less_eq$ (case_prod$ ?v2 ))(and (monotone$c ?v3 ?v0 ?v4 )(monotone$c ?v3 ?v1 ?v5 )))(monotone$d ?v3 less_eq$ (fun_app$aj (fun_app$cd (uwx$ ?v2 )?v4 )?v5 )))):named a189 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_enat_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$ ?v0 ?v1 )less_eq$ (case_prod$g ?v2 ))(and (monotone$e ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$e ?v3 less_eq$ (fun_app$al (fun_app$cp (uwy$ ?v2 )?v4 )?v5 )))):named a190 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_enat_fun$ )(?v5 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$n (rel_prod$b ?v0 ?v1 )less_eq$ (case_prod$c ?v2 ))(and (monotone$g ?v3 ?v0 ?v4 )(monotone$g ?v3 ?v1 ?v5 )))(monotone$g ?v3 less_eq$ (fun_app$bd (fun_app$cw (uwz$ ?v2 )?v4 )?v5 )))):named a191 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_a_llist_fun$ )(?v5 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$p (rel_prod$c ?v0 ?v1 )less_eq$ (case_prod$f ?v2 ))(and (monotone$h ?v3 ?v0 ?v4 )(monotone$g ?v3 ?v1 ?v5 )))(monotone$g ?v3 less_eq$ (fun_app$bd (fun_app$ch (uxa$ ?v2 )?v4 )?v5 )))):named a192 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_a_llist_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (monotone$g (rel_prod$a ?v0 ?v1 )uuo$ (case_prod$ ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$b ?v3 uuo$ (fun_app$am (fun_app$ce (uwr$ ?v2 )?v4 )?v5 )))):named a193 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_enat_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (monotone$n (rel_prod$b ?v0 ?v1 )uuo$ (case_prod$c ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$b ?v3 uuo$ (fun_app$be (fun_app$cx (uws$ ?v2 )?v4 )?v5 )))):named a194 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_a_llist_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (monotone$p (rel_prod$c ?v0 ?v1 )uuo$ (case_prod$f ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$b ?v3 uuo$ (fun_app$be (fun_app$ci (uwt$ ?v2 )?v4 )?v5 )))):named a195 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_enat_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (monotone$n (rel_prod$b ?v0 ?v1 )uuo$ (case_prod$c ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$d ?v3 ?v1 ?v5 )))(monotone$d ?v3 uuo$ (fun_app$bc (fun_app$cv (uwu$ ?v2 )?v4 )?v5 )))):named a196 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_enat_bool_fun_fun$ )(?v4 Enat_enat_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$ ?v0 ?v1 )uuo$ (case_prod$g ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$b ?v3 uuo$ (fun_app$am (fun_app$cq (uwv$ ?v2 )?v4 )?v5 )))):named a197 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_enat_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$ ?v0 ?v1 )uuo$ (case_prod$g ?v2 ))(and (monotone$d ?v3 ?v0 ?v4 )(monotone$c ?v3 ?v1 ?v5 )))(monotone$d ?v3 uuo$ (fun_app$aj (fun_app$cn (uww$ ?v2 )?v4 )?v5 )))):named a198 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_a_llist_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (monotone$g (rel_prod$a ?v0 ?v1 )uuo$ (case_prod$ ?v2 ))(and (monotone$c ?v3 ?v0 ?v4 )(monotone$c ?v3 ?v1 ?v5 )))(monotone$d ?v3 uuo$ (fun_app$aj (fun_app$cd (uwx$ ?v2 )?v4 )?v5 )))):named a199 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v4 Enat_a_llist_prod_enat_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (monotone$e (rel_prod$ ?v0 ?v1 )uuo$ (case_prod$g ?v2 ))(and (monotone$e ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$e ?v3 uuo$ (fun_app$al (fun_app$cp (uwy$ ?v2 )?v4 )?v5 )))):named a200 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_enat_fun$ )(?v5 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$n (rel_prod$b ?v0 ?v1 )uuo$ (case_prod$c ?v2 ))(and (monotone$g ?v3 ?v0 ?v4 )(monotone$g ?v3 ?v1 ?v5 )))(monotone$g ?v3 uuo$ (fun_app$bd (fun_app$cw (uwz$ ?v2 )?v4 )?v5 )))):named a201 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v4 A_llist_a_llist_prod_a_llist_fun$ )(?v5 A_llist_a_llist_prod_enat_fun$ ))(=> (and (monotone$p (rel_prod$c ?v0 ?v1 )uuo$ (case_prod$f ?v2 ))(and (monotone$h ?v3 ?v0 ?v4 )(monotone$g ?v3 ?v1 ?v5 )))(monotone$g ?v3 uuo$ (fun_app$bd (fun_app$ch (uxa$ ?v2 )?v4 )?v5 )))):named a202 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Enat$ ))(! (=> (fun_app$c (fun_app$d less_eq$ (fun_app$e llength$ ?v0 ))?v1 )(= (fun_app$a (fun_app$b ltake$ ?v1 )?v0 )?v0 )):pattern ((fun_app$a (fun_app$b ltake$ ?v1 )?v0 )))):named a203 ))
(check-sat )
;(get-unsat-core )
