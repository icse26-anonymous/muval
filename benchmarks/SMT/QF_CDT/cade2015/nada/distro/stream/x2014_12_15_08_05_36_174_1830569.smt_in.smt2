;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort B_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (B_stream$)B$)
(declare-fun stl$a (B_stream$)B_stream$)
(declare-fun sCons$a (B$ B_stream$ )B_stream$)
(declare-fun a$ ()A_set$ )
(declare-fun b$ ()B_set$ )
(declare-fun f$ ()A_b_fun$ )
(declare-fun s$ ()A_stream$ )
(declare-fun sset$ (A_stream$ )A_set$ )
(declare-fun image$ (A_b_fun$ A_set$ )B_set$ )
(declare-fun sset$a (B_stream$ )B_set$ )
(declare-fun image$a (A_a_fun$ A_set$ )A_set$ )
(declare-fun image$b (B_a_fun$ B_set$ )A_set$ )
(declare-fun image$c (B_b_fun$ B_set$ )B_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (A_b_fun$ A$ )B$ )
(declare-fun less_eq$ (B_set$ B_set$ )Bool )
(declare-fun member$a (B$ B_set$ )Bool )
(declare-fun smember$ (B$ B_stream$ )Bool )
(declare-fun fun_app$a (A_a_fun$ A$ )A$ )
(declare-fun fun_app$b (B_a_fun$ B$ )A$ )
(declare-fun fun_app$c (B_b_fun$ B$ )B$ )
(declare-fun less_eq$a (A_set$ A_set$ )Bool )
(declare-fun smember$a (A$ A_stream$ )Bool )
(assert (! (not (less_eq$ (image$ f$ (sset$ s$ ))b$ )):named a0 ))
(assert (! (less_eq$a (sset$ s$ )a$ ):named a1 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 a$ )(member$a (fun_app$ f$ ?v0 )b$ ))):named a2 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$a ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$a ?v1 ?v3 )))):named a3 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$ ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$ ?v1 ?v3 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_set$ ))(=> (and (= ?v0 (fun_app$b ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$b ?v1 ?v3 )))):named a5 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$c ?v1 ?v3 )))):named a6 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ ))(=> (forall ((?v2 B$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$a ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 B_set$ ))(less_eq$ ?v0 ?v0 )):named a11 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a12 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_set$ )(?v2 B_set$ ))(= (less_eq$ (image$ ?v0 ?v1 )?v2 )(forall ((?v3 A$ ))(=> (member$ ?v3 ?v1 )(member$a (fun_app$ ?v0 ?v3 )?v2 ))))):named a13 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_set$ )(?v2 B_set$ ))(= (less_eq$ (image$c ?v0 ?v1 )?v2 )(forall ((?v3 B$ ))(=> (member$a ?v3 ?v1 )(member$a (fun_app$c ?v0 ?v3 )?v2 ))))):named a14 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_set$ ))(= (less_eq$a (image$a ?v0 ?v1 )?v2 )(forall ((?v3 A$ ))(=> (member$ ?v3 ?v1 )(member$ (fun_app$a ?v0 ?v3 )?v2 ))))):named a15 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_set$ )(?v2 A_set$ ))(= (less_eq$a (image$b ?v0 ?v1 )?v2 )(forall ((?v3 B$ ))(=> (member$a ?v3 ?v1 )(member$ (fun_app$b ?v0 ?v3 )?v2 ))))):named a16 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_b_fun$ )(?v2 B_set$ ))(= (less_eq$ ?v0 (image$c ?v1 ?v2 ))(exists ((?v3 B_set$ ))(and (less_eq$ ?v3 ?v2 )(= ?v0 (image$c ?v1 ?v3 )))))):named a17 ))
(assert (! (forall ((?v0 B_set$ )(?v1 A_b_fun$ )(?v2 A_set$ ))(= (less_eq$ ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 A_set$ ))(and (less_eq$a ?v3 ?v2 )(= ?v0 (image$ ?v1 ?v3 )))))):named a18 ))
(assert (! (forall ((?v0 A_set$ )(?v1 B_a_fun$ )(?v2 B_set$ ))(= (less_eq$a ?v0 (image$b ?v1 ?v2 ))(exists ((?v3 B_set$ ))(and (less_eq$ ?v3 ?v2 )(= ?v0 (image$b ?v1 ?v3 )))))):named a19 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(= (less_eq$a ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 A_set$ ))(and (less_eq$a ?v3 ?v2 )(= ?v0 (image$a ?v1 ?v3 )))))):named a20 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_b_fun$ )(?v2 B_set$ ))(=> (forall ((?v3 A$ ))(=> (member$ ?v3 ?v0 )(member$a (fun_app$ ?v1 ?v3 )?v2 )))(less_eq$ (image$ ?v1 ?v0 )?v2 ))):named a21 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_b_fun$ )(?v2 B_set$ ))(=> (forall ((?v3 B$ ))(=> (member$a ?v3 ?v0 )(member$a (fun_app$c ?v1 ?v3 )?v2 )))(less_eq$ (image$c ?v1 ?v0 )?v2 ))):named a22 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(=> (forall ((?v3 A$ ))(=> (member$ ?v3 ?v0 )(member$ (fun_app$a ?v1 ?v3 )?v2 )))(less_eq$a (image$a ?v1 ?v0 )?v2 ))):named a23 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_a_fun$ )(?v2 A_set$ ))(=> (forall ((?v3 B$ ))(=> (member$a ?v3 ?v0 )(member$ (fun_app$b ?v1 ?v3 )?v2 )))(less_eq$a (image$b ?v1 ?v0 )?v2 ))):named a24 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_b_fun$ )(?v2 B_set$ ))(=> (and (less_eq$ ?v0 (image$c ?v1 ?v2 ))(forall ((?v3 B_set$ ))(=> (and (less_eq$ ?v3 ?v2 )(= ?v0 (image$c ?v1 ?v3 )))false )))false )):named a25 ))
(assert (! (forall ((?v0 B_set$ )(?v1 A_b_fun$ )(?v2 A_set$ ))(=> (and (less_eq$ ?v0 (image$ ?v1 ?v2 ))(forall ((?v3 A_set$ ))(=> (and (less_eq$a ?v3 ?v2 )(= ?v0 (image$ ?v1 ?v3 )))false )))false )):named a26 ))
(assert (! (forall ((?v0 A_set$ )(?v1 B_a_fun$ )(?v2 B_set$ ))(=> (and (less_eq$a ?v0 (image$b ?v1 ?v2 ))(forall ((?v3 B_set$ ))(=> (and (less_eq$ ?v3 ?v2 )(= ?v0 (image$b ?v1 ?v3 )))false )))false )):named a27 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(=> (and (less_eq$a ?v0 (image$a ?v1 ?v2 ))(forall ((?v3 A_set$ ))(=> (and (less_eq$a ?v3 ?v2 )(= ?v0 (image$a ?v1 ?v3 )))false )))false )):named a28 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ )(?v2 B_b_fun$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$ (image$c ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ )(?v2 B_a_fun$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$a (image$b ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_b_fun$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (image$ ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_fun$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$a (image$a ?v2 ?v0 )(image$a ?v2 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (smember$ ?v0 ?v1 )(member$a ?v0 (sset$a ?v1 ))):pattern ((smember$ ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (smember$a ?v0 ?v1 )(member$ ?v0 (sset$ ?v1 ))):pattern ((smember$a ?v0 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A_set$ ))(= (member$ ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 A$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$a ?v1 ?v3 )))))):named a35 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_fun$ )(?v2 B_set$ ))(= (member$ ?v0 (image$b ?v1 ?v2 ))(exists ((?v3 B$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$b ?v1 ?v3 )))))):named a36 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_fun$ )(?v2 A_set$ ))(= (member$a ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 A$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$ ?v1 ?v3 )))))):named a37 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ )(?v2 B_set$ ))(= (member$a ?v0 (image$c ?v1 ?v2 ))(exists ((?v3 B$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$c ?v1 ?v3 )))))):named a38 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$a ?v2 ?v4 )(fun_app$a ?v3 ?v4 )))))(= (image$a ?v2 ?v0 )(image$a ?v3 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 B$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$c ?v2 ?v4 )(fun_app$c ?v3 ?v4 )))))(= (image$c ?v2 ?v0 )(image$c ?v3 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 B$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$b ?v2 ?v4 )(fun_app$b ?v3 ?v4 )))))(= (image$b ?v2 ?v0 )(image$b ?v3 ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$ ?v2 ?v4 )(fun_app$ ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a42 ))
(assert (! (forall ((?v0 B_set$ ))(less_eq$ ?v0 ?v0 )):named a43 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a44 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ ))(! (=> (less_eq$ ?v0 ?v1 )(= (less_eq$ ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$ ?v1 ?v0 )))):named a45 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (=> (less_eq$a ?v0 ?v1 )(= (less_eq$a ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$a ?v1 ?v0 )))):named a46 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ )(?v2 B_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less_eq$ ?v0 ?v2 ))):named a47 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a48 ))
(check-sat )
;(get-unsat-core )
