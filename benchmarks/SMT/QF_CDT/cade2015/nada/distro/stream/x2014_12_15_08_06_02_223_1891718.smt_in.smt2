;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort Nat_a_fun$ 0 )
(declare-sort A_list_set$ 0 )
(declare-sort A_a_list_fun$ 0 )
(declare-sort A_list_a_fun$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort Nat_a_list_fun$ 0 )
(declare-sort A_list_list_set$ 0 )
(declare-sort Nat_a_stream_fun$ 0 )
(declare-sort A_list_a_list_fun$ 0 )
(declare-sort A_list_stream_set$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_list_set$ 0 )
(declare-sort A_list_a_stream_fun$ 0 )
(declare-sort A_stream_a_list_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_a_stream_stream_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_stream_stream_a_fun$ 0 )
(declare-sort A_list_stream_bool_fun$ 0 )
(declare-sort Nat_a_stream_stream_fun$ 0 )
(declare-sort A_list_stream_stream_set$ 0 )
(declare-sort A_stream_list_stream_set$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_list_set$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_list_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_list_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_stream_stream_set$ 0 )
(declare-sort A_stream_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-sort A_list$ 0)
(declare-fun nil$ ()A_list$)
(declare-fun hd$ (A_list$)A$)
(declare-fun tl$ (A_list$)A_list$)
(declare-fun cons$ (A$ A_list$ )A_list$)
(declare-sort A_list_stream$ 0)
(declare-sort A_list_stream_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-sort A_stream_stream_stream_stream$ 0)
(declare-fun shd$a (A_list_stream$)A_list$)
(declare-fun stl$a (A_list_stream$)A_list_stream$)
(declare-fun sCons$a (A_list$ A_list_stream$ )A_list_stream$)
(declare-fun shd$b (A_list_stream_stream$)A_list_stream$)
(declare-fun stl$b (A_list_stream_stream$)A_list_stream_stream$)
(declare-fun sCons$b (A_list_stream$ A_list_stream_stream$ )A_list_stream_stream$)
(declare-fun shd$c (A_stream_stream$)A_stream$)
(declare-fun stl$c (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$c (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$d (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$d (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$d (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun shd$e (A_stream_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun stl$e (A_stream_stream_stream_stream$)A_stream_stream_stream_stream$)
(declare-fun sCons$e (A_stream_stream_stream$ A_stream_stream_stream_stream$ )A_stream_stream_stream_stream$)
(declare-sort A_stream_list$ 0)
(declare-fun nil$a ()A_stream_list$)
(declare-fun hd$a (A_stream_list$)A_stream$)
(declare-fun tl$a (A_stream_list$)A_stream_list$)
(declare-fun cons$a (A_stream$ A_stream_list$ )A_stream_list$)
(declare-sort A_stream_list_stream$ 0)
(declare-fun shd$f (A_stream_list_stream$)A_stream_list$)
(declare-fun stl$f (A_stream_list_stream$)A_stream_list_stream$)
(declare-fun sCons$f (A_stream_list$ A_stream_list_stream$ )A_stream_list_stream$)
(declare-sort A_list_list$ 0)
(declare-sort A_stream_stream_list$ 0)
(declare-fun nil$b ()A_list_list$)
(declare-fun hd$b (A_list_list$)A_list$)
(declare-fun tl$b (A_list_list$)A_list_list$)
(declare-fun cons$b (A_list$ A_list_list$ )A_list_list$)
(declare-fun nil$c ()A_stream_stream_list$)
(declare-fun hd$c (A_stream_stream_list$)A_stream_stream$)
(declare-fun tl$c (A_stream_stream_list$)A_stream_stream_list$)
(declare-fun cons$c (A_stream_stream$ A_stream_stream_list$ )A_stream_stream_list$)
(declare-fun n$ ()Nat$ )
(declare-fun s$ ()A_stream$ )
(declare-fun x$ ()A_set$ )
(declare-fun smap$ (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun snth$ (A_stream$ )Nat_a_fun$ )
(declare-fun sset$ (A_list_stream_stream$ )A_list_stream_set$ )
(declare-fun zero$ ()Nat$ )
(declare-fun lists$ (A_list_set$ )A_list_list_set$ )
(declare-fun shift$ (A_list_list$ A_list_stream$ )A_list_stream$ )
(declare-fun smap$a (A_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun smap$b (A_stream_a_fun$ A_stream_stream$ )A_stream$ )
(declare-fun smap$c (A_stream_a_stream_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun smap$d (A_list_a_fun$ A_list_stream$ )A_stream$ )
(declare-fun smap$e (A_a_list_fun$ A_stream$ )A_list_stream$ )
(declare-fun smap$f (A_stream_stream_a_fun$ A_stream_stream_stream$ )A_stream$ )
(declare-fun smap$g (A_stream_a_list_fun$ A_stream_stream$ )A_list_stream$ )
(declare-fun smap$h (A_list_a_stream_fun$ A_list_stream$ )A_stream_stream$ )
(declare-fun smap$i (A_list_a_list_fun$ A_list_stream$ )A_list_stream$ )
(declare-fun smap$j (A_a_stream_stream_fun$ A_stream$ )A_stream_stream_stream$ )
(declare-fun snth$a (A_list_stream_stream$ Nat$ )A_list_stream$ )
(declare-fun snth$b (A_stream_stream_stream_stream$ Nat$ )A_stream_stream_stream$ )
(declare-fun snth$c (A_stream_list_stream$ Nat$ )A_stream_list$ )
(declare-fun snth$d (A_stream_stream_stream$ )Nat_a_stream_stream_fun$ )
(declare-fun snth$e (A_list_stream$ )Nat_a_list_fun$ )
(declare-fun snth$f (A_stream_stream$ )Nat_a_stream_fun$ )
(declare-fun sset$a (A_stream_stream_stream_stream$ )A_stream_stream_stream_set$ )
(declare-fun sset$b (A_stream_list_stream$ )A_stream_list_set$ )
(declare-fun sset$c (A_stream_stream_stream$ )A_stream_stream_set$ )
(declare-fun sset$d (A_list_stream$ )A_list_set$ )
(declare-fun sset$e (A_stream_stream$ )A_stream_set$ )
(declare-fun sset$f (A_stream$ )A_set$ )
(declare-fun lists$a (A_stream_stream_set$ )A_stream_stream_list_set$ )
(declare-fun lists$b (A_stream_set$ )A_stream_list_set$ )
(declare-fun lists$c (A_set$ )A_list_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun shift$a (A_stream_stream_list$ A_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun shift$b (A_stream_list$ A_stream_stream$ )A_stream_stream$ )
(declare-fun shift$c (A_list$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$ (Nat_a_fun$ Nat$ )A$ )
(declare-fun less_eq$ (A_list_set$ A_list_set$ )Bool )
(declare-fun member$a (A_stream$ A_stream_set$ )Bool )
(declare-fun member$b (A_list_stream_stream$ A_list_stream_stream_set$ )Bool )
(declare-fun member$c (A_list_stream$ A_list_stream_set$ )Bool )
(declare-fun member$d (A_stream_stream_stream_stream$ A_stream_stream_stream_stream_set$ )Bool )
(declare-fun member$e (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun member$f (A_stream_list_stream$ A_stream_list_stream_set$ )Bool )
(declare-fun member$g (A_stream_list$ A_stream_list_set$ )Bool )
(declare-fun member$h (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$i (A_list$ A_list_set$ )Bool )
(declare-fun member$j (A_list_list$ A_list_list_set$ )Bool )
(declare-fun member$k (A_stream_stream_list$ A_stream_stream_list_set$ )Bool )
(declare-fun streams$ (A_set$ )A_stream_set$ )
(declare-fun fun_app$a (Nat_a_stream_stream_fun$ Nat$ )A_stream_stream$ )
(declare-fun fun_app$b (Nat_a_list_fun$ Nat$ )A_list$ )
(declare-fun fun_app$c (Nat_a_stream_fun$ Nat$ )A_stream$ )
(declare-fun fun_app$d (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$e (A_a_fun$ A$ )A$ )
(declare-fun fun_app$f (A_a_stream_fun$ A$ )A_stream$ )
(declare-fun fun_app$g (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$h (A_list_a_fun$ A_list$ )A$ )
(declare-fun fun_app$i (A_a_list_fun$ A$ )A_list$ )
(declare-fun fun_app$j (A_stream_stream_a_fun$ A_stream_stream$ )A$ )
(declare-fun fun_app$k (A_stream_a_list_fun$ A_stream$ )A_list$ )
(declare-fun fun_app$l (A_list_a_stream_fun$ A_list$ )A_stream$ )
(declare-fun fun_app$m (A_list_a_list_fun$ A_list$ )A_list$ )
(declare-fun fun_app$n (A_a_stream_stream_fun$ A$ )A_stream_stream$ )
(declare-fun fun_app$o (A_list_stream_stream_bool_fun$ A_list_stream_stream$ )Bool )
(declare-fun fun_app$p (A_stream_stream_stream_stream_bool_fun$ A_stream_stream_stream_stream$ )Bool )
(declare-fun fun_app$q (A_stream_list_stream_bool_fun$ A_stream_list_stream$ )Bool )
(declare-fun fun_app$r (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun fun_app$s (A_list_stream_bool_fun$ A_list_stream$ )Bool )
(declare-fun fun_app$t (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$u (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun less_eq$a (A_stream_stream_set$ A_stream_stream_set$ )Bool )
(declare-fun less_eq$b (A_stream_set$ A_stream_set$ )Bool )
(declare-fun less_eq$c (A_set$ A_set$ )Bool )
(declare-fun streams$a (A_list_stream_set$ )A_list_stream_stream_set$ )
(declare-fun streams$b (A_stream_stream_stream_set$ )A_stream_stream_stream_stream_set$ )
(declare-fun streams$c (A_stream_list_set$ )A_stream_list_stream_set$ )
(declare-fun streams$d (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun streams$e (A_list_set$ )A_list_stream_set$ )
(declare-fun streams$f (A_stream_set$ )A_stream_stream_set$ )
(assert (! (not (member$ (fun_app$ (snth$ s$ )n$ )x$ )):named a0 ))
(assert (! (member$a s$ (streams$ x$ )):named a1 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(= (member$b ?v0 (streams$a ?v1 ))(forall ((?v2 Nat$ ))(member$c (snth$a ?v0 ?v2 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 A_stream_stream_stream_set$ ))(= (member$d ?v0 (streams$b ?v1 ))(forall ((?v2 Nat$ ))(member$e (snth$b ?v0 ?v2 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(= (member$f ?v0 (streams$c ?v1 ))(forall ((?v2 Nat$ ))(member$g (snth$c ?v0 ?v2 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(= (member$e ?v0 (streams$d ?v1 ))(forall ((?v2 Nat$ ))(member$h (fun_app$a (snth$d ?v0 )?v2 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(= (member$c ?v0 (streams$e ?v1 ))(forall ((?v2 Nat$ ))(member$i (fun_app$b (snth$e ?v0 )?v2 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(= (member$h ?v0 (streams$f ?v1 ))(forall ((?v2 Nat$ ))(member$a (fun_app$c (snth$f ?v0 )?v2 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(= (member$a ?v0 (streams$ ?v1 ))(forall ((?v2 Nat$ ))(member$ (fun_app$ (snth$ ?v0 )?v2 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 Nat$ ))(= (fun_app$ (snth$ (fun_app$d (smap$ ?v0 )?v1 ))?v2 )(fun_app$e ?v0 (fun_app$ (snth$ ?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ )(?v2 Nat$ ))(= (fun_app$c (snth$f (smap$a ?v0 ?v1 ))?v2 )(fun_app$f ?v0 (fun_app$ (snth$ ?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ )(?v2 Nat$ ))(= (fun_app$ (snth$ (smap$b ?v0 ?v1 ))?v2 )(fun_app$g ?v0 (fun_app$c (snth$f ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ )(?v2 Nat$ ))(= (fun_app$c (snth$f (smap$c ?v0 ?v1 ))?v2 )(fun_app$d ?v0 (fun_app$c (snth$f ?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_list_a_fun$ )(?v1 A_list_stream$ )(?v2 Nat$ ))(= (fun_app$ (snth$ (smap$d ?v0 ?v1 ))?v2 )(fun_app$h ?v0 (fun_app$b (snth$e ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_a_list_fun$ )(?v1 A_stream$ )(?v2 Nat$ ))(= (fun_app$b (snth$e (smap$e ?v0 ?v1 ))?v2 )(fun_app$i ?v0 (fun_app$ (snth$ ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_stream_stream_a_fun$ )(?v1 A_stream_stream_stream$ )(?v2 Nat$ ))(= (fun_app$ (snth$ (smap$f ?v0 ?v1 ))?v2 )(fun_app$j ?v0 (fun_app$a (snth$d ?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_stream_a_list_fun$ )(?v1 A_stream_stream$ )(?v2 Nat$ ))(= (fun_app$b (snth$e (smap$g ?v0 ?v1 ))?v2 )(fun_app$k ?v0 (fun_app$c (snth$f ?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_list_a_stream_fun$ )(?v1 A_list_stream$ )(?v2 Nat$ ))(= (fun_app$c (snth$f (smap$h ?v0 ?v1 ))?v2 )(fun_app$l ?v0 (fun_app$b (snth$e ?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_list_a_list_fun$ )(?v1 A_list_stream$ )(?v2 Nat$ ))(= (fun_app$b (snth$e (smap$i ?v0 ?v1 ))?v2 )(fun_app$m ?v0 (fun_app$b (snth$e ?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 Nat$ ))(member$c (snth$a ?v0 ?v1 )(sset$ ?v0 ))):named a19 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 Nat$ ))(member$e (snth$b ?v0 ?v1 )(sset$a ?v0 ))):named a20 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 Nat$ ))(member$g (snth$c ?v0 ?v1 )(sset$b ?v0 ))):named a21 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 Nat$ ))(member$h (fun_app$a (snth$d ?v0 )?v1 )(sset$c ?v0 ))):named a22 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 Nat$ ))(member$i (fun_app$b (snth$e ?v0 )?v1 )(sset$d ?v0 ))):named a23 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 Nat$ ))(member$a (fun_app$c (snth$f ?v0 )?v1 )(sset$e ?v0 ))):named a24 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 Nat$ ))(member$ (fun_app$ (snth$ ?v0 )?v1 )(sset$f ?v0 ))):named a25 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (member$b ?v0 (streams$a ?v1 ))(member$c (shd$b ?v0 )?v1 ))):named a26 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 A_stream_stream_stream_set$ ))(=> (member$d ?v0 (streams$b ?v1 ))(member$e (shd$e ?v0 )?v1 ))):named a27 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(=> (member$f ?v0 (streams$c ?v1 ))(member$g (shd$f ?v0 )?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$e ?v0 (streams$d ?v1 ))(member$h (shd$d ?v0 )?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (member$c ?v0 (streams$e ?v1 ))(member$i (shd$a ?v0 )?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$h ?v0 (streams$f ?v1 ))(member$a (shd$c ?v0 )?v1 ))):named a31 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$a ?v0 (streams$ ?v1 ))(member$ (shd$ ?v0 )?v1 ))):named a32 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (member$c ?v0 (streams$e ?v1 ))(member$c (stl$a ?v0 )(streams$e ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$e ?v0 (streams$d ?v1 ))(member$e (stl$d ?v0 )(streams$d ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$h ?v0 (streams$f ?v1 ))(member$h (stl$c ?v0 )(streams$f ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$a ?v0 (streams$ ?v1 ))(member$a (stl$ ?v0 )(streams$ ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_fun$ )(?v3 A_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(forall ((?v4 A$ ))(=> (member$ ?v4 ?v1 )(member$ (fun_app$e ?v2 ?v4 )?v3 ))))(member$a (fun_app$d (smap$ ?v2 )?v0 )(streams$ ?v3 )))):named a37 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$h ?v0 (streams$f ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$a ?v4 ?v1 )(member$ (fun_app$g ?v2 ?v4 )?v3 ))))(member$a (smap$b ?v2 ?v0 )(streams$ ?v3 )))):named a38 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(forall ((?v4 A$ ))(=> (member$ ?v4 ?v1 )(member$a (fun_app$f ?v2 ?v4 )?v3 ))))(member$h (smap$a ?v2 ?v0 )(streams$f ?v3 )))):named a39 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$h ?v0 (streams$f ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$a ?v4 ?v1 )(member$a (fun_app$d ?v2 ?v4 )?v3 ))))(member$h (smap$c ?v2 ?v0 )(streams$f ?v3 )))):named a40 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ )(?v2 A_list_a_fun$ )(?v3 A_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(forall ((?v4 A_list$ ))(=> (member$i ?v4 ?v1 )(member$ (fun_app$h ?v2 ?v4 )?v3 ))))(member$a (smap$d ?v2 ?v0 )(streams$ ?v3 )))):named a41 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_list_fun$ )(?v3 A_list_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(forall ((?v4 A$ ))(=> (member$ ?v4 ?v1 )(member$i (fun_app$i ?v2 ?v4 )?v3 ))))(member$c (smap$e ?v2 ?v0 )(streams$e ?v3 )))):named a42 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ )(?v2 A_list_a_list_fun$ )(?v3 A_list_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(forall ((?v4 A_list$ ))(=> (member$i ?v4 ?v1 )(member$i (fun_app$m ?v2 ?v4 )?v3 ))))(member$c (smap$i ?v2 ?v0 )(streams$e ?v3 )))):named a43 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$e ?v0 (streams$d ?v1 ))(forall ((?v4 A_stream_stream$ ))(=> (member$h ?v4 ?v1 )(member$ (fun_app$j ?v2 ?v4 )?v3 ))))(member$a (smap$f ?v2 ?v0 )(streams$ ?v3 )))):named a44 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ )(?v2 A_list_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(forall ((?v4 A_list$ ))(=> (member$i ?v4 ?v1 )(member$a (fun_app$l ?v2 ?v4 )?v3 ))))(member$h (smap$h ?v2 ?v0 )(streams$f ?v3 )))):named a45 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_stream_stream_fun$ )(?v3 A_stream_stream_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(forall ((?v4 A$ ))(=> (member$ ?v4 ?v1 )(member$h (fun_app$n ?v2 ?v4 )?v3 ))))(member$e (smap$j ?v2 ?v0 )(streams$d ?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_stream_stream$ )(?v2 A_list_stream_set$ ))(= (member$b (sCons$b ?v0 ?v1 )(streams$a ?v2 ))(and (member$c ?v0 ?v2 )(member$b ?v1 (streams$a ?v2 ))))):named a47 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream_stream$ )(?v2 A_stream_stream_stream_set$ ))(= (member$d (sCons$e ?v0 ?v1 )(streams$b ?v2 ))(and (member$e ?v0 ?v2 )(member$d ?v1 (streams$b ?v2 ))))):named a48 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list_stream$ )(?v2 A_stream_list_set$ ))(= (member$f (sCons$f ?v0 ?v1 )(streams$c ?v2 ))(and (member$g ?v0 ?v2 )(member$f ?v1 (streams$c ?v2 ))))):named a49 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(= (member$e (sCons$d ?v0 ?v1 )(streams$d ?v2 ))(and (member$h ?v0 ?v2 )(member$e ?v1 (streams$d ?v2 ))))):named a50 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_stream$ )(?v2 A_list_set$ ))(= (member$c (sCons$a ?v0 ?v1 )(streams$e ?v2 ))(and (member$i ?v0 ?v2 )(member$c ?v1 (streams$e ?v2 ))))):named a51 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(= (member$h (sCons$c ?v0 ?v1 )(streams$f ?v2 ))(and (member$a ?v0 ?v2 )(member$h ?v1 (streams$f ?v2 ))))):named a52 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_set$ ))(= (member$a (sCons$ ?v0 ?v1 )(streams$ ?v2 ))(and (member$ ?v0 ?v2 )(member$a ?v1 (streams$ ?v2 ))))):named a53 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(= (member$b ?v0 (streams$a ?v1 ))(exists ((?v2 A_list_stream$ )(?v3 A_list_stream_stream$ ))(and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$b ?v3 (streams$a ?v1 ))))))):named a54 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 A_stream_stream_stream_set$ ))(= (member$d ?v0 (streams$b ?v1 ))(exists ((?v2 A_stream_stream_stream$ )(?v3 A_stream_stream_stream_stream$ ))(and (= ?v0 (sCons$e ?v2 ?v3 ))(and (member$e ?v2 ?v1 )(member$d ?v3 (streams$b ?v1 ))))))):named a55 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(= (member$f ?v0 (streams$c ?v1 ))(exists ((?v2 A_stream_list$ )(?v3 A_stream_list_stream$ ))(and (= ?v0 (sCons$f ?v2 ?v3 ))(and (member$g ?v2 ?v1 )(member$f ?v3 (streams$c ?v1 ))))))):named a56 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(= (member$e ?v0 (streams$d ?v1 ))(exists ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(and (= ?v0 (sCons$d ?v2 ?v3 ))(and (member$h ?v2 ?v1 )(member$e ?v3 (streams$d ?v1 ))))))):named a57 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(= (member$c ?v0 (streams$e ?v1 ))(exists ((?v2 A_list$ )(?v3 A_list_stream$ ))(and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$i ?v2 ?v1 )(member$c ?v3 (streams$e ?v1 ))))))):named a58 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(= (member$h ?v0 (streams$f ?v1 ))(exists ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(and (= ?v0 (sCons$c ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$h ?v3 (streams$f ?v1 ))))))):named a59 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(= (member$a ?v0 (streams$ ?v1 ))(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$a ?v3 (streams$ ?v1 ))))))):named a60 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (and (member$b ?v0 (streams$a ?v1 ))(forall ((?v2 A_list_stream$ )(?v3 A_list_stream_stream$ ))(=> (and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$b ?v3 (streams$a ?v1 ))))false )))false )):named a61 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 A_stream_stream_stream_set$ ))(=> (and (member$d ?v0 (streams$b ?v1 ))(forall ((?v2 A_stream_stream_stream$ )(?v3 A_stream_stream_stream_stream$ ))(=> (and (= ?v0 (sCons$e ?v2 ?v3 ))(and (member$e ?v2 ?v1 )(member$d ?v3 (streams$b ?v1 ))))false )))false )):named a62 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(=> (and (member$f ?v0 (streams$c ?v1 ))(forall ((?v2 A_stream_list$ )(?v3 A_stream_list_stream$ ))(=> (and (= ?v0 (sCons$f ?v2 ?v3 ))(and (member$g ?v2 ?v1 )(member$f ?v3 (streams$c ?v1 ))))false )))false )):named a63 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$e ?v0 (streams$d ?v1 ))(forall ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(=> (and (= ?v0 (sCons$d ?v2 ?v3 ))(and (member$h ?v2 ?v1 )(member$e ?v3 (streams$d ?v1 ))))false )))false )):named a64 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(forall ((?v2 A_list$ )(?v3 A_list_stream$ ))(=> (and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$i ?v2 ?v1 )(member$c ?v3 (streams$e ?v1 ))))false )))false )):named a65 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$h ?v0 (streams$f ?v1 ))(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v0 (sCons$c ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$h ?v3 (streams$f ?v1 ))))false )))false )):named a66 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$a ?v3 (streams$ ?v1 ))))false )))false )):named a67 ))
(assert (! (forall ((?v0 A_list_stream_stream_bool_fun$ )(?v1 A_list_stream_stream$ )(?v2 A_list_stream_set$ ))(=> (and (fun_app$o ?v0 ?v1 )(forall ((?v3 A_list_stream_stream$ ))(=> (fun_app$o ?v0 ?v3 )(exists ((?v4 A_list_stream$ )(?v5 A_list_stream_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (member$c ?v4 ?v2 )(or (fun_app$o ?v0 ?v5 )(member$b ?v5 (streams$a ?v2 )))))))))(member$b ?v1 (streams$a ?v2 )))):named a68 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream_bool_fun$ )(?v1 A_stream_stream_stream_stream$ )(?v2 A_stream_stream_stream_set$ ))(=> (and (fun_app$p ?v0 ?v1 )(forall ((?v3 A_stream_stream_stream_stream$ ))(=> (fun_app$p ?v0 ?v3 )(exists ((?v4 A_stream_stream_stream$ )(?v5 A_stream_stream_stream_stream$ ))(and (= ?v3 (sCons$e ?v4 ?v5 ))(and (member$e ?v4 ?v2 )(or (fun_app$p ?v0 ?v5 )(member$d ?v5 (streams$b ?v2 )))))))))(member$d ?v1 (streams$b ?v2 )))):named a69 ))
(assert (! (forall ((?v0 A_stream_list_stream_bool_fun$ )(?v1 A_stream_list_stream$ )(?v2 A_stream_list_set$ ))(=> (and (fun_app$q ?v0 ?v1 )(forall ((?v3 A_stream_list_stream$ ))(=> (fun_app$q ?v0 ?v3 )(exists ((?v4 A_stream_list$ )(?v5 A_stream_list_stream$ ))(and (= ?v3 (sCons$f ?v4 ?v5 ))(and (member$g ?v4 ?v2 )(or (fun_app$q ?v0 ?v5 )(member$f ?v5 (streams$c ?v2 )))))))))(member$f ?v1 (streams$c ?v2 )))):named a70 ))
(assert (! (forall ((?v0 A_stream_stream_stream_bool_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(=> (and (fun_app$r ?v0 ?v1 )(forall ((?v3 A_stream_stream_stream$ ))(=> (fun_app$r ?v0 ?v3 )(exists ((?v4 A_stream_stream$ )(?v5 A_stream_stream_stream$ ))(and (= ?v3 (sCons$d ?v4 ?v5 ))(and (member$h ?v4 ?v2 )(or (fun_app$r ?v0 ?v5 )(member$e ?v5 (streams$d ?v2 )))))))))(member$e ?v1 (streams$d ?v2 )))):named a71 ))
(assert (! (forall ((?v0 A_list_stream_bool_fun$ )(?v1 A_list_stream$ )(?v2 A_list_set$ ))(=> (and (fun_app$s ?v0 ?v1 )(forall ((?v3 A_list_stream$ ))(=> (fun_app$s ?v0 ?v3 )(exists ((?v4 A_list$ )(?v5 A_list_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (member$i ?v4 ?v2 )(or (fun_app$s ?v0 ?v5 )(member$c ?v5 (streams$e ?v2 )))))))))(member$c ?v1 (streams$e ?v2 )))):named a72 ))
(assert (! (forall ((?v0 A_stream_stream_bool_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(=> (and (fun_app$t ?v0 ?v1 )(forall ((?v3 A_stream_stream$ ))(=> (fun_app$t ?v0 ?v3 )(exists ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(and (= ?v3 (sCons$c ?v4 ?v5 ))(and (member$a ?v4 ?v2 )(or (fun_app$t ?v0 ?v5 )(member$h ?v5 (streams$f ?v2 )))))))))(member$h ?v1 (streams$f ?v2 )))):named a73 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_set$ ))(=> (and (fun_app$u ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$u ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (member$ ?v4 ?v2 )(or (fun_app$u ?v0 ?v5 )(member$a ?v5 (streams$ ?v2 )))))))))(member$a ?v1 (streams$ ?v2 )))):named a74 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ )(?v2 A_list_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(less_eq$ ?v1 ?v2 ))(member$c ?v0 (streams$e ?v2 )))):named a75 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_set$ ))(=> (and (member$e ?v0 (streams$d ?v1 ))(less_eq$a ?v1 ?v2 ))(member$e ?v0 (streams$d ?v2 )))):named a76 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_set$ ))(=> (and (member$h ?v0 (streams$f ?v1 ))(less_eq$b ?v1 ?v2 ))(member$h ?v0 (streams$f ?v2 )))):named a77 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(less_eq$c ?v1 ?v2 ))(member$a ?v0 (streams$ ?v2 )))):named a78 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_set$ )(?v2 A_list_stream$ ))(=> (and (member$j ?v0 (lists$ ?v1 ))(member$c ?v2 (streams$e ?v1 )))(member$c (shift$ ?v0 ?v2 )(streams$e ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_stream_stream_list$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_stream$ ))(=> (and (member$k ?v0 (lists$a ?v1 ))(member$e ?v2 (streams$d ?v1 )))(member$e (shift$a ?v0 ?v2 )(streams$d ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_set$ )(?v2 A_stream_stream$ ))(=> (and (member$g ?v0 (lists$b ?v1 ))(member$h ?v2 (streams$f ?v1 )))(member$h (shift$b ?v0 ?v2 )(streams$f ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_set$ )(?v2 A_stream$ ))(=> (and (member$i ?v0 (lists$c ?v1 ))(member$a ?v2 (streams$ ?v1 )))(member$a (fun_app$d (shift$c ?v0 )?v2 )(streams$ ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_list_stream$ ))(! (= (fun_app$b (snth$e ?v0 )zero$ )(shd$a ?v0 )):pattern ((snth$e ?v0 )))):named a83 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ ))(! (= (fun_app$a (snth$d ?v0 )zero$ )(shd$d ?v0 )):pattern ((snth$d ?v0 )))):named a84 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(! (= (fun_app$c (snth$f ?v0 )zero$ )(shd$c ?v0 )):pattern ((snth$f ?v0 )))):named a85 ))
(assert (! (forall ((?v0 A_stream$ ))(! (= (fun_app$ (snth$ ?v0 )zero$ )(shd$ ?v0 )):pattern ((snth$ ?v0 )))):named a86 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_stream$ )(?v2 A_list$ )(?v3 A_list_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a87 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(= (= (sCons$d ?v0 ?v1 )(sCons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a88 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a89 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (sCons$c ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a90 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(= (= (shift$b ?v0 ?v1 )(shift$b ?v0 ?v2 ))(= ?v1 ?v2 ))):named a91 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (= (fun_app$d (shift$c ?v0 )?v1 )(fun_app$d (shift$c ?v0 )?v2 ))(= ?v1 ?v2 ))):named a92 ))
(assert (! (forall ((?v0 A_list_a_stream_fun$ )(?v1 A_list_stream$ ))(= (stl$c (smap$h ?v0 ?v1 ))(smap$h ?v0 (stl$a ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_list_a_list_fun$ )(?v1 A_list_stream$ ))(= (stl$a (smap$i ?v0 ?v1 ))(smap$i ?v0 (stl$a ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_list_a_fun$ )(?v1 A_list_stream$ ))(= (stl$ (smap$d ?v0 ?v1 ))(smap$d ?v0 (stl$a ?v1 )))):named a95 ))
(assert (! (forall ((?v0 A_a_stream_stream_fun$ )(?v1 A_stream$ ))(= (stl$d (smap$j ?v0 ?v1 ))(smap$j ?v0 (stl$ ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A_a_list_fun$ )(?v1 A_stream$ ))(= (stl$a (smap$e ?v0 ?v1 ))(smap$e ?v0 (stl$ ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (stl$ (fun_app$d (smap$ ?v0 )?v1 ))(fun_app$d (smap$ ?v0 )(stl$ ?v1 )))):named a98 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (stl$c (smap$a ?v0 ?v1 ))(smap$a ?v0 (stl$ ?v1 )))):named a99 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (stl$ (smap$b ?v0 ?v1 ))(smap$b ?v0 (stl$c ?v1 )))):named a100 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (stl$c (smap$c ?v0 ?v1 ))(smap$c ?v0 (stl$c ?v1 )))):named a101 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (shd$ (fun_app$d (smap$ ?v0 )?v1 ))(fun_app$e ?v0 (shd$ ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (shd$c (smap$a ?v0 ?v1 ))(fun_app$f ?v0 (shd$ ?v1 )))):named a103 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (shd$ (smap$b ?v0 ?v1 ))(fun_app$g ?v0 (shd$c ?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (shd$c (smap$c ?v0 ?v1 ))(fun_app$d ?v0 (shd$c ?v1 )))):named a105 ))
(assert (! (forall ((?v0 A_list_a_fun$ )(?v1 A_list_stream$ ))(= (shd$ (smap$d ?v0 ?v1 ))(fun_app$h ?v0 (shd$a ?v1 )))):named a106 ))
(assert (! (forall ((?v0 A_a_list_fun$ )(?v1 A_stream$ ))(= (shd$a (smap$e ?v0 ?v1 ))(fun_app$i ?v0 (shd$ ?v1 )))):named a107 ))
(assert (! (forall ((?v0 A_stream_stream_a_fun$ )(?v1 A_stream_stream_stream$ ))(= (shd$ (smap$f ?v0 ?v1 ))(fun_app$j ?v0 (shd$d ?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_stream_a_list_fun$ )(?v1 A_stream_stream$ ))(= (shd$a (smap$g ?v0 ?v1 ))(fun_app$k ?v0 (shd$c ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_list_a_stream_fun$ )(?v1 A_list_stream$ ))(= (shd$c (smap$h ?v0 ?v1 ))(fun_app$l ?v0 (shd$a ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_list_a_list_fun$ )(?v1 A_list_stream$ ))(= (shd$a (smap$i ?v0 ?v1 ))(fun_app$m ?v0 (shd$a ?v1 )))):named a111 ))
(check-sat )
;(get-unsat-core )
