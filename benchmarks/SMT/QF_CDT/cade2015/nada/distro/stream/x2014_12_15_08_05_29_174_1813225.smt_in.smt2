;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_list_set$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_list_list_set$ 0 )
(declare-sort A_list_stream_set$ 0 )
(declare-sort A_stream_list_set$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_list_stream_stream_set$ 0 )
(declare-sort A_stream_list_stream_set$ 0 )
(declare-sort A_stream_stream_list_set$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_stream_stream_stream_stream_set$ 0 )
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-sort A_stream_list$ 0)
(declare-fun nil$ ()A_stream_list$)
(declare-fun hd$ (A_stream_list$)A_stream$)
(declare-fun tl$ (A_stream_list$)A_stream_list$)
(declare-fun cons$ (A_stream$ A_stream_list$ )A_stream_list$)
(declare-sort A_stream_stream$ 0)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-sort A_list$ 0)
(declare-fun nil$a ()A_list$)
(declare-fun hd$a (A_list$)A$)
(declare-fun tl$a (A_list$)A_list$)
(declare-fun cons$a (A$ A_list$ )A_list$)
(declare-sort A_stream_list_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-sort A_stream_stream_stream_stream$ 0)
(declare-sort A_list_stream$ 0)
(declare-sort A_list_stream_stream$ 0)
(declare-fun shd$b (A_stream_list_stream$)A_stream_list$)
(declare-fun stl$b (A_stream_list_stream$)A_stream_list_stream$)
(declare-fun sCons$b (A_stream_list$ A_stream_list_stream$ )A_stream_list_stream$)
(declare-fun shd$c (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$c (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$c (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun shd$d (A_stream_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun stl$d (A_stream_stream_stream_stream$)A_stream_stream_stream_stream$)
(declare-fun sCons$d (A_stream_stream_stream$ A_stream_stream_stream_stream$ )A_stream_stream_stream_stream$)
(declare-fun shd$e (A_list_stream$)A_list$)
(declare-fun stl$e (A_list_stream$)A_list_stream$)
(declare-fun sCons$e (A_list$ A_list_stream$ )A_list_stream$)
(declare-fun shd$f (A_list_stream_stream$)A_list_stream$)
(declare-fun stl$f (A_list_stream_stream$)A_list_stream_stream$)
(declare-fun sCons$f (A_list_stream$ A_list_stream_stream$ )A_list_stream_stream$)
(declare-sort A_stream_stream_list$ 0)
(declare-sort A_list_list$ 0)
(declare-fun nil$b ()A_stream_stream_list$)
(declare-fun hd$b (A_stream_stream_list$)A_stream_stream$)
(declare-fun tl$b (A_stream_stream_list$)A_stream_stream_list$)
(declare-fun cons$b (A_stream_stream$ A_stream_stream_list$ )A_stream_stream_list$)
(declare-fun nil$c ()A_list_list$)
(declare-fun hd$c (A_list_list$)A_list$)
(declare-fun tl$c (A_list_list$)A_list_list$)
(declare-fun cons$c (A_list$ A_list_list$ )A_list_list$)
(declare-fun a$ ()A_set$ )
(declare-fun s$ ()A_stream$ )
(declare-fun x$ ()A$ )
(declare-fun sset$ (A_stream$ )A_set$ )
(declare-fun lists$ (A_stream_stream_set$ )A_stream_stream_list_set$ )
(declare-fun shift$ (A_stream_list$ A_stream_stream$ )A_stream_stream$ )
(declare-fun sset$a (A_stream_list_stream$ )A_stream_list_set$ )
(declare-fun sset$b (A_stream_stream_stream_stream$ )A_stream_stream_stream_set$ )
(declare-fun sset$c (A_list_stream_stream$ )A_list_stream_set$ )
(declare-fun sset$d (A_list_stream$ )A_list_set$ )
(declare-fun sset$e (A_stream_stream_stream$ )A_stream_stream_set$ )
(declare-fun sset$f (A_stream_stream$ )A_stream_set$ )
(declare-fun append$ (A_stream_list$ A_stream_list$ )A_stream_list$ )
(declare-fun lists$a (A_list_set$ )A_list_list_set$ )
(declare-fun lists$b (A_stream_set$ )A_stream_list_set$ )
(declare-fun lists$c (A_set$ )A_list_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun shift$a (A_list$ A_stream$ )A_stream$ )
(declare-fun shift$b (A_stream_stream_list$ A_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun shift$c (A_list_list$ A_list_stream$ )A_list_stream$ )
(declare-fun append$a (A_list$ A_list$ )A_list$ )
(declare-fun less_eq$ (A_stream_stream_set$ A_stream_stream_set$ )Bool )
(declare-fun member$a (A_stream$ A_stream_set$ )Bool )
(declare-fun member$b (A_stream_list$ A_stream_list_set$ )Bool )
(declare-fun member$c (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun member$d (A_list_stream$ A_list_stream_set$ )Bool )
(declare-fun member$e (A_list$ A_list_set$ )Bool )
(declare-fun member$f (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$g (A_stream_stream_list$ A_stream_stream_list_set$ )Bool )
(declare-fun member$h (A_list_list$ A_list_list_set$ )Bool )
(declare-fun member$i (A_stream_list_stream$ A_stream_list_stream_set$ )Bool )
(declare-fun member$j (A_stream_stream_stream_stream$ A_stream_stream_stream_stream_set$ )Bool )
(declare-fun member$k (A_list_stream_stream$ A_list_stream_stream_set$ )Bool )
(declare-fun smember$ (A_stream_list$ A_stream_list_stream$ )Bool )
(declare-fun streams$ (A_set$ )A_stream_set$ )
(declare-fun less_eq$a (A_list_set$ A_list_set$ )Bool )
(declare-fun less_eq$b (A_stream_set$ A_stream_set$ )Bool )
(declare-fun less_eq$c (A_set$ A_set$ )Bool )
(declare-fun smember$a (A_stream_stream_stream$ A_stream_stream_stream_stream$ )Bool )
(declare-fun smember$b (A_list_stream$ A_list_stream_stream$ )Bool )
(declare-fun smember$c (A_list$ A_list_stream$ )Bool )
(declare-fun smember$d (A_stream_stream$ A_stream_stream_stream$ )Bool )
(declare-fun smember$e (A_stream$ A_stream_stream$ )Bool )
(declare-fun smember$f (A$ A_stream$ )Bool )
(declare-fun streams$a (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun streams$b (A_list_set$ )A_list_stream_set$ )
(declare-fun streams$c (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$d (A_stream_list_set$ )A_stream_list_stream_set$ )
(declare-fun streams$e (A_stream_stream_stream_set$ )A_stream_stream_stream_stream_set$ )
(declare-fun streams$f (A_list_stream_set$ )A_list_stream_stream_set$ )
(assert (! (not (member$ x$ a$ )):named a0 ))
(assert (! (member$a s$ (streams$ a$ )):named a1 ))
(assert (! (member$ x$ (sset$ s$ )):named a2 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(= (= (shift$ ?v0 ?v1 )(shift$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a3 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (= (shift$a ?v0 ?v1 )(shift$a ?v0 ?v2 ))(= ?v1 ?v2 ))):named a4 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list_stream$ ))(! (= (smember$ ?v0 ?v1 )(member$b ?v0 (sset$a ?v1 ))):pattern ((smember$ ?v0 ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream_stream$ ))(! (= (smember$a ?v0 ?v1 )(member$c ?v0 (sset$b ?v1 ))):pattern ((smember$a ?v0 ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_stream_stream$ ))(! (= (smember$b ?v0 ?v1 )(member$d ?v0 (sset$c ?v1 ))):pattern ((smember$b ?v0 ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_stream$ ))(! (= (smember$c ?v0 ?v1 )(member$e ?v0 (sset$d ?v1 ))):pattern ((smember$c ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(! (= (smember$d ?v0 ?v1 )(member$f ?v0 (sset$e ?v1 ))):pattern ((smember$d ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(! (= (smember$e ?v0 ?v1 )(member$a ?v0 (sset$f ?v1 ))):pattern ((smember$e ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (smember$f ?v0 ?v1 )(member$ ?v0 (sset$ ?v1 ))):pattern ((smember$f ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_stream_stream_list$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_stream$ ))(=> (and (member$g ?v0 (lists$ ?v1 ))(member$c ?v2 (streams$a ?v1 )))(member$c (shift$b ?v0 ?v2 )(streams$a ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_set$ )(?v2 A_list_stream$ ))(=> (and (member$h ?v0 (lists$a ?v1 ))(member$d ?v2 (streams$b ?v1 )))(member$d (shift$c ?v0 ?v2 )(streams$b ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_set$ )(?v2 A_stream_stream$ ))(=> (and (member$b ?v0 (lists$b ?v1 ))(member$f ?v2 (streams$c ?v1 )))(member$f (shift$ ?v0 ?v2 )(streams$c ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_set$ )(?v2 A_stream$ ))(=> (and (member$e ?v0 (lists$c ?v1 ))(member$a ?v2 (streams$ ?v1 )))(member$a (shift$a ?v0 ?v2 )(streams$ ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream_stream$ ))(! (= (smember$d ?v0 (sCons$c ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$d ?v0 ?v2 ))):pattern ((smember$d ?v0 (sCons$c ?v1 ?v2 ))))):named a16 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ )(?v2 A_list_stream$ ))(! (= (smember$c ?v0 (sCons$e ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$c ?v0 ?v2 ))):pattern ((smember$c ?v0 (sCons$e ?v1 ?v2 ))))):named a17 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (smember$f ?v0 (sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$f ?v0 ?v2 ))):pattern ((smember$f ?v0 (sCons$ ?v1 ?v2 ))))):named a18 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (smember$e ?v0 (sCons$a ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$e ?v0 ?v2 ))):pattern ((smember$e ?v0 (sCons$a ?v1 ?v2 ))))):named a19 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (less_eq$ (sset$e ?v0 )?v1 )(member$c ?v0 (streams$a ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (less_eq$a (sset$d ?v0 )?v1 )(member$d ?v0 (streams$b ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (less_eq$b (sset$f ?v0 )?v1 )(member$f ?v0 (streams$c ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (less_eq$c (sset$ ?v0 )?v1 )(member$a ?v0 (streams$ ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(=> (member$i ?v0 (streams$d ?v1 ))(member$b (shd$b ?v0 )?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 A_stream_stream_stream_set$ ))(=> (member$j ?v0 (streams$e ?v1 ))(member$c (shd$d ?v0 )?v1 ))):named a25 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (member$k ?v0 (streams$f ?v1 ))(member$d (shd$f ?v0 )?v1 ))):named a26 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (member$d ?v0 (streams$b ?v1 ))(member$e (shd$e ?v0 )?v1 ))):named a27 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$c ?v0 (streams$a ?v1 ))(member$f (shd$c ?v0 )?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$f ?v0 (streams$c ?v1 ))(member$a (shd$a ?v0 )?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$a ?v0 (streams$ ?v1 ))(member$ (shd$ ?v0 )?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$c ?v0 (streams$a ?v1 ))(member$c (stl$c ?v0 )(streams$a ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (member$d ?v0 (streams$b ?v1 ))(member$d (stl$e ?v0 )(streams$b ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$f ?v0 (streams$c ?v1 ))(member$f (stl$a ?v0 )(streams$c ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$a ?v0 (streams$ ?v1 ))(member$a (stl$ ?v0 )(streams$ ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list$ )(?v2 A_stream_stream$ ))(= (shift$ (append$ ?v0 ?v1 )?v2 )(shift$ ?v0 (shift$ ?v1 ?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ )(?v2 A_stream$ ))(= (shift$a (append$a ?v0 ?v1 )?v2 )(shift$a ?v0 (shift$a ?v1 ?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_stream_list_stream$ ))(member$b (shd$b ?v0 )(sset$a ?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ ))(member$c (shd$d ?v0 )(sset$b ?v0 ))):named a38 ))
(assert (! (forall ((?v0 A_list_stream_stream$ ))(member$d (shd$f ?v0 )(sset$c ?v0 ))):named a39 ))
(assert (! (forall ((?v0 A_list_stream$ ))(member$e (shd$e ?v0 )(sset$d ?v0 ))):named a40 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ ))(member$f (shd$c ?v0 )(sset$e ?v0 ))):named a41 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(member$a (shd$a ?v0 )(sset$f ?v0 ))):named a42 ))
(assert (! (forall ((?v0 A_stream$ ))(member$ (shd$ ?v0 )(sset$ ?v0 ))):named a43 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list_stream$ )(?v2 A_stream_list_set$ ))(= (member$i (sCons$b ?v0 ?v1 )(streams$d ?v2 ))(and (member$b ?v0 ?v2 )(member$i ?v1 (streams$d ?v2 ))))):named a44 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream_stream$ )(?v2 A_stream_stream_stream_set$ ))(= (member$j (sCons$d ?v0 ?v1 )(streams$e ?v2 ))(and (member$c ?v0 ?v2 )(member$j ?v1 (streams$e ?v2 ))))):named a45 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_stream_stream$ )(?v2 A_list_stream_set$ ))(= (member$k (sCons$f ?v0 ?v1 )(streams$f ?v2 ))(and (member$d ?v0 ?v2 )(member$k ?v1 (streams$f ?v2 ))))):named a46 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_stream$ )(?v2 A_list_set$ ))(= (member$d (sCons$e ?v0 ?v1 )(streams$b ?v2 ))(and (member$e ?v0 ?v2 )(member$d ?v1 (streams$b ?v2 ))))):named a47 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(= (member$c (sCons$c ?v0 ?v1 )(streams$a ?v2 ))(and (member$f ?v0 ?v2 )(member$c ?v1 (streams$a ?v2 ))))):named a48 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(= (member$f (sCons$a ?v0 ?v1 )(streams$c ?v2 ))(and (member$a ?v0 ?v2 )(member$f ?v1 (streams$c ?v2 ))))):named a49 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_set$ ))(= (member$a (sCons$ ?v0 ?v1 )(streams$ ?v2 ))(and (member$ ?v0 ?v2 )(member$a ?v1 (streams$ ?v2 ))))):named a50 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(= (= (sCons$c ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_stream$ )(?v2 A_list$ )(?v3 A_list_stream$ ))(= (= (sCons$e ?v0 ?v1 )(sCons$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a54 ))
(check-sat )
;(get-unsat-core )
