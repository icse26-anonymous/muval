;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort A_list$ 0)
(declare-fun nil$ ()A_list$)
(declare-fun hd$ (A_list$)A$)
(declare-fun tl$ (A_list$)A_list$)
(declare-fun cons$ (A$ A_list$ )A_list$)
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun ma$ ()Nat$ )
(declare-fun na$ ()Nat$ )
(declare-fun sa$ ()A_stream$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun drop$ (Nat$ A_list$ )A_list$ )
(declare-fun minus$ (Nat$ Nat$ )Nat$ )
(declare-fun sdrop$ (Nat$ A_stream$ )A_stream$ )
(declare-fun stake$ (Nat$ A_stream$ )A_list$ )
(declare-fun fun_app$ (Nat_bool_fun$ Nat$ )Bool )
(assert (! (not (= (drop$ na$ (stake$ (suc$ ma$ )sa$ ))(stake$ (minus$ (suc$ ma$ )na$ )(sdrop$ na$ sa$ )))):named a0 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (drop$ ?v0 (stake$ ma$ ?v1 ))(stake$ (minus$ ma$ ?v0 )(sdrop$ ?v0 ?v1 )))):named a1 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (minus$ (minus$ (suc$ ?v0 )?v1 )(suc$ ?v2 ))(minus$ (minus$ ?v0 ?v1 )?v2 ))):named a2 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (minus$ (suc$ ?v0 )(suc$ ?v1 ))(minus$ ?v0 ?v1 )):pattern ((minus$ (suc$ ?v0 )(suc$ ?v1 ))))):named a3 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (and (fun_app$ ?v0 ?v1 )(forall ((?v3 Nat$ ))(=> (fun_app$ ?v0 (suc$ ?v3 ))(fun_app$ ?v0 ?v3 ))))(fun_app$ ?v0 (minus$ ?v1 ?v2 )))):named a6 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (stl$ (sdrop$ ?v0 ?v1 ))(sdrop$ (suc$ ?v0 )?v1 ))):named a7 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (minus$ (minus$ ?v0 ?v1 )?v2 )(minus$ (minus$ ?v0 ?v2 )?v1 ))):named a8 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 Nat$ ))(not (= ?v0 (suc$ ?v0 )))):named a10 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (minus$ (minus$ ?v0 ?v1 )?v2 )(minus$ (minus$ ?v0 ?v2 )?v1 ))):named a11 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (sdrop$ ?v0 (stl$ ?v1 ))(stl$ (sdrop$ ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(! (= (sdrop$ (suc$ ?v0 )?v1 )(sdrop$ ?v0 (stl$ ?v1 ))):pattern ((sdrop$ (suc$ ?v0 )?v1 )))):named a13 ))
(check-sat )
;(get-unsat-core )
