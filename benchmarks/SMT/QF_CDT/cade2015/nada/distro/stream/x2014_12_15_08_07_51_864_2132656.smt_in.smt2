;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$b (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$b (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$b (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun s$ ()A_stream$ )
(declare-fun x$ ()A$ )
(declare-fun sa$ ()A_stream$ )
(declare-fun bot$ ()A_set$ )
(declare-fun smap$ (A_stream_a_fun$ A_stream_stream$ )A_stream$ )
(declare-fun snth$ (A_stream_stream$ Nat$ )A_stream$ )
(declare-fun sset$ (A_stream$ )A_set$ )
(declare-fun sdrop$ (Nat$ A_stream_stream$ )A_stream_stream$ )
(declare-fun smap$a (A_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun smap$b (A_stream_a_stream_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun smap$c (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun snth$a (A_stream$ Nat$ )A$ )
(declare-fun sset$a (A_stream_stream_stream$ )A_stream_stream_set$ )
(declare-fun sset$b (A_stream_stream$ )A_stream_set$ )
(declare-fun insert$ (A$ A_set$ )A_set$ )
(declare-fun member$ (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun sdrop$a (Nat$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$ (A_a_stream_fun$ A$ )A_stream$ )
(declare-fun member$a (A_stream$ A_stream_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun streams$ (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun fun_app$a (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$b (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$c (A_a_fun$ A$ )A$ )
(declare-fun fun_app$d (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$e (A_stream_stream_a_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$f (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$g (A_stream_a_stream_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$h (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun fun_app$i (A_stream_stream_a_stream_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun fun_app$j (A_stream_a_stream_stream_bool_fun_fun$ A_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$k (A_a_stream_bool_fun_fun$ A$ )A_stream_bool_fun$ )
(declare-fun siterate$ (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun streams$a (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$b (A_set$ )A_stream_set$ )
(declare-fun siterate$a (A_a_fun$ )A_a_stream_fun$ )
(assert (! (not (= (shd$ sa$ )x$ )):named a0 ))
(assert (! (= (sset$ sa$ )(insert$ x$ bot$ )):named a1 ))
(assert (! (= (sset$ s$ )(insert$ x$ bot$ )):named a2 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ ))(member$ (shd$b ?v0 )(sset$a ?v0 ))):named a3 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(member$a (shd$a ?v0 )(sset$b ?v0 ))):named a4 ))
(assert (! (forall ((?v0 A_stream$ ))(member$b (shd$ ?v0 )(sset$ ?v0 ))):named a5 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ ))(= (shd$a (siterate$ ?v0 ?v1 ))?v1 )):named a6 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (shd$ (fun_app$ (siterate$a ?v0 )?v1 ))?v1 )):named a7 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (shd$ (smap$ ?v0 ?v1 ))(fun_app$a ?v0 (shd$a ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (shd$a (smap$a ?v0 ?v1 ))(fun_app$ ?v0 (shd$ ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (shd$a (smap$b ?v0 ?v1 ))(fun_app$b ?v0 (shd$a ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (shd$ (fun_app$b (smap$c ?v0 )?v1 ))(fun_app$c ?v0 (shd$ ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$c ?v0 (streams$ ?v1 ))(member$ (shd$b ?v0 )?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$ ?v0 (streams$a ?v1 ))(member$a (shd$a ?v0 )?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$a ?v0 (streams$b ?v1 ))(member$b (shd$ ?v0 )?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(=> (and (= (shd$a ?v0 )(shd$a ?v1 ))(= (stl$a ?v0 )(stl$a ?v1 )))(= ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(or (fun_app$d (fun_app$e ?v0 (stl$a ?v3 ))(stl$a ?v4 ))(= (stl$a ?v3 )(stl$a ?v4 )))))))(= ?v1 ?v2 ))):named a17 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$f (fun_app$g ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a18 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(fun_app$d (fun_app$e ?v0 (stl$a ?v3 ))(stl$a ?v4 ))))))(= ?v1 ?v2 ))):named a19 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$f (fun_app$g ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a20 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(! (= (shd$a (sCons$a ?v0 ?v1 ))?v0 ):pattern ((sCons$a ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (shd$ (sCons$ ?v0 ?v1 ))?v0 ):pattern ((sCons$ ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_a_stream_stream_stream_bool_fun_fun$ ))(=> (and (member$ ?v0 (sset$a ?v1 ))(and (forall ((?v3 A_stream_stream_stream$ ))(fun_app$h (fun_app$i ?v2 (shd$b ?v3 ))?v3 ))(forall ((?v3 A_stream_stream_stream$ )(?v4 A_stream_stream$ ))(=> (and (member$ ?v4 (sset$a (stl$b ?v3 )))(fun_app$h (fun_app$i ?v2 ?v4 )(stl$b ?v3 )))(fun_app$h (fun_app$i ?v2 ?v4 )?v3 )))))(fun_app$h (fun_app$i ?v2 ?v0 )?v1 ))):named a23 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (member$a ?v0 (sset$b ?v1 ))(and (forall ((?v3 A_stream_stream$ ))(fun_app$d (fun_app$j ?v2 (shd$a ?v3 ))?v3 ))(forall ((?v3 A_stream_stream$ )(?v4 A_stream$ ))(=> (and (member$a ?v4 (sset$b (stl$a ?v3 )))(fun_app$d (fun_app$j ?v2 ?v4 )(stl$a ?v3 )))(fun_app$d (fun_app$j ?v2 ?v4 )?v3 )))))(fun_app$d (fun_app$j ?v2 ?v0 )?v1 ))):named a24 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_a_stream_bool_fun_fun$ ))(=> (and (member$b ?v0 (sset$ ?v1 ))(and (forall ((?v3 A_stream$ ))(fun_app$f (fun_app$k ?v2 (shd$ ?v3 ))?v3 ))(forall ((?v3 A_stream$ )(?v4 A$ ))(=> (and (member$b ?v4 (sset$ (stl$ ?v3 )))(fun_app$f (fun_app$k ?v2 ?v4 )(stl$ ?v3 )))(fun_app$f (fun_app$k ?v2 ?v4 )?v3 )))))(fun_app$f (fun_app$k ?v2 ?v0 )?v1 ))):named a25 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream_stream$ ))(= (shd$a (sdrop$ ?v0 ?v1 ))(snth$ ?v1 ?v0 ))):named a26 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (shd$ (fun_app$b (sdrop$a ?v0 )?v1 ))(snth$a ?v1 ?v0 ))):named a27 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a28 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (stl$ (smap$ ?v0 ?v1 ))(smap$ ?v0 (stl$a ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (stl$a (smap$a ?v0 ?v1 ))(smap$a ?v0 (stl$ ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (stl$a (smap$b ?v0 ?v1 ))(smap$b ?v0 (stl$a ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (stl$ (fun_app$b (smap$c ?v0 )?v1 ))(fun_app$b (smap$c ?v0 )(stl$ ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 Nat$ ))(= (snth$a (fun_app$b (smap$c ?v0 )?v1 )?v2 )(fun_app$c ?v0 (snth$a ?v1 ?v2 )))):named a33 ))
(check-sat )
;(get-unsat-core )
