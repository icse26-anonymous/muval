;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_list_set$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_list_bool_fun$ 0 )
(declare-sort A_list_list_set$ 0 )
(declare-sort A_list_stream_set$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_list_list_bool_fun$ 0 )
(declare-sort A_list_list_list_set$ 0 )
(declare-sort A_list_list_stream_set$ 0 )
(declare-sort A_list_stream_bool_fun$ 0 )
(declare-sort A_list_stream_stream_set$ 0 )
(declare-sort A_list_list_list_bool_fun$ 0 )
(declare-sort A_list_list_list_stream_set$ 0 )
(declare-sort A_list_list_stream_bool_fun$ 0 )
(declare-sort A_list_list_stream_stream_set$ 0 )
(declare-sort A_list_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_list_stream_stream_stream_set$ 0 )
(declare-sort A_list_list_list_stream_bool_fun$ 0 )
(declare-sort A_list_stream_a_list_stream_bool_fun_fun$ 0 )
(declare-sort A_list_list_stream_a_list_list_stream_bool_fun_fun$ 0 )
(declare-sort A_list_stream_stream_a_list_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_list_list_list_stream_a_list_list_list_stream_bool_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-sort A_list$ 0)
(declare-fun nil$ ()A_list$)
(declare-fun hd$ (A_list$)A$)
(declare-fun tl$ (A_list$)A_list$)
(declare-fun cons$ (A$ A_list$ )A_list$)
(declare-sort A_list_stream$ 0)
(declare-fun shd$a (A_list_stream$)A_list$)
(declare-fun stl$a (A_list_stream$)A_list_stream$)
(declare-fun sCons$a (A_list$ A_list_stream$ )A_list_stream$)
(declare-sort A_list_list$ 0)
(declare-sort A_list_list_list$ 0)
(declare-fun nil$a ()A_list_list$)
(declare-fun hd$a (A_list_list$)A_list$)
(declare-fun tl$a (A_list_list$)A_list_list$)
(declare-fun cons$a (A_list$ A_list_list$ )A_list_list$)
(declare-fun nil$b ()A_list_list_list$)
(declare-fun hd$b (A_list_list_list$)A_list_list$)
(declare-fun tl$b (A_list_list_list$)A_list_list_list$)
(declare-fun cons$b (A_list_list$ A_list_list_list$ )A_list_list_list$)
(declare-sort A_list_list_stream$ 0)
(declare-sort A_list_list_list_stream$ 0)
(declare-sort A_list_stream_stream$ 0)
(declare-fun shd$b (A_list_list_stream$)A_list_list$)
(declare-fun stl$b (A_list_list_stream$)A_list_list_stream$)
(declare-fun sCons$b (A_list_list$ A_list_list_stream$ )A_list_list_stream$)
(declare-fun shd$c (A_list_list_list_stream$)A_list_list_list$)
(declare-fun stl$c (A_list_list_list_stream$)A_list_list_list_stream$)
(declare-fun sCons$c (A_list_list_list$ A_list_list_list_stream$ )A_list_list_list_stream$)
(declare-fun shd$d (A_list_stream_stream$)A_list_stream$)
(declare-fun stl$d (A_list_stream_stream$)A_list_stream_stream$)
(declare-fun sCons$d (A_list_stream$ A_list_stream_stream$ )A_list_stream_stream$)
(declare-sort A_list_list_list_list$ 0)
(declare-sort A_list_stream_list$ 0)
(declare-fun nil$c ()A_list_list_list_list$)
(declare-fun hd$c (A_list_list_list_list$)A_list_list_list$)
(declare-fun tl$c (A_list_list_list_list$)A_list_list_list_list$)
(declare-fun cons$c (A_list_list_list$ A_list_list_list_list$ )A_list_list_list_list$)
(declare-fun nil$d ()A_list_stream_list$)
(declare-fun hd$d (A_list_stream_list$)A_list_stream$)
(declare-fun tl$d (A_list_stream_list$)A_list_stream_list$)
(declare-fun cons$d (A_list_stream$ A_list_stream_list$ )A_list_stream_list$)
(declare-sort A_list_list_list_list_stream$ 0)
(declare-sort A_list_stream_list_stream$ 0)
(declare-sort A_list_list_stream_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_list_stream_stream_stream$ 0)
(declare-fun shd$e (A_list_list_list_list_stream$)A_list_list_list_list$)
(declare-fun stl$e (A_list_list_list_list_stream$)A_list_list_list_list_stream$)
(declare-fun sCons$e (A_list_list_list_list$ A_list_list_list_list_stream$ )A_list_list_list_list_stream$)
(declare-fun shd$f (A_list_stream_list_stream$)A_list_stream_list$)
(declare-fun stl$f (A_list_stream_list_stream$)A_list_stream_list_stream$)
(declare-fun sCons$f (A_list_stream_list$ A_list_stream_list_stream$ )A_list_stream_list_stream$)
(declare-fun shd$g (A_list_list_stream_stream$)A_list_list_stream$)
(declare-fun stl$g (A_list_list_stream_stream$)A_list_list_stream_stream$)
(declare-fun sCons$g (A_list_list_stream$ A_list_list_stream_stream$ )A_list_list_stream_stream$)
(declare-fun shd$h (A_stream_stream$)A_stream$)
(declare-fun stl$h (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$h (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$i (A_list_stream_stream_stream$)A_list_stream_stream$)
(declare-fun stl$i (A_list_stream_stream_stream$)A_list_stream_stream_stream$)
(declare-fun sCons$i (A_list_stream_stream$ A_list_stream_stream_stream$ )A_list_stream_stream_stream$)
(declare-fun ws$ ()A_list_stream$ )
(declare-fun flat$ (A_list_stream$ )A_stream$ )
(declare-fun cycle$ (A_list_list_list$ )A_list_list_stream$ )
(declare-fun flat$a (A_list_list_list_stream$ )A_list_list_stream$ )
(declare-fun flat$b (A_list_list_stream$ )A_list_stream$ )
(declare-fun flat$c (A_list_list_list_list_stream$ )A_list_list_list_stream$ )
(declare-fun flat$d (A_list_stream_list_stream$ )A_list_stream_stream$ )
(declare-fun shift$ (A_list$ A_stream$ )A_stream$ )
(declare-fun cycle$a (A_list_list$ )A_list_stream$ )
(declare-fun cycle$b (A_list$ )A_stream$ )
(declare-fun member$ (A_list_list_stream_stream$ A_list_list_stream_stream_set$ )Bool )
(declare-fun shift$a (A_list_list_list$ A_list_list_stream$ )A_list_list_stream$ )
(declare-fun shift$b (A_list_list$ A_list_stream$ )A_list_stream$ )
(declare-fun shift$c (A_list_list_list_list$ A_list_list_list_stream$ )A_list_list_list_stream$ )
(declare-fun shift$d (A_list_stream_list$ A_list_stream_stream$ )A_list_stream_stream$ )
(declare-fun fun_app$ (A_list_list_list_stream_bool_fun$ A_list_list_list_stream$ )Bool )
(declare-fun member$a (A_list_list_stream$ A_list_list_stream_set$ )Bool )
(declare-fun member$b (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$c (A_stream$ A_stream_set$ )Bool )
(declare-fun member$d (A_list_stream_stream_stream$ A_list_stream_stream_stream_set$ )Bool )
(declare-fun member$e (A_list_stream_stream$ A_list_stream_stream_set$ )Bool )
(declare-fun member$f (A_list_list_list_stream$ A_list_list_list_stream_set$ )Bool )
(declare-fun member$g (A_list_list_list$ A_list_list_list_set$ )Bool )
(declare-fun member$h (A_list_stream$ A_list_stream_set$ )Bool )
(declare-fun member$i (A$ A_set$ )Bool )
(declare-fun member$j (A_list_list$ A_list_list_set$ )Bool )
(declare-fun member$k (A_list$ A_list_set$ )Bool )
(declare-fun streams$ (A_list_list_stream_set$ )A_list_list_stream_stream_set$ )
(declare-fun fun_app$a (A_list_list_list_stream_a_list_list_list_stream_bool_fun_fun$ A_list_list_list_stream$ )A_list_list_list_stream_bool_fun$ )
(declare-fun fun_app$b (A_list_stream_stream_bool_fun$ A_list_stream_stream$ )Bool )
(declare-fun fun_app$c (A_list_stream_stream_a_list_stream_stream_bool_fun_fun$ A_list_stream_stream$ )A_list_stream_stream_bool_fun$ )
(declare-fun fun_app$d (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$e (A_stream_a_stream_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$f (A_list_list_stream_bool_fun$ A_list_list_stream$ )Bool )
(declare-fun fun_app$g (A_list_list_stream_a_list_list_stream_bool_fun_fun$ A_list_list_stream$ )A_list_list_stream_bool_fun$ )
(declare-fun fun_app$h (A_list_stream_bool_fun$ A_list_stream$ )Bool )
(declare-fun fun_app$i (A_list_stream_a_list_stream_bool_fun_fun$ A_list_stream$ )A_list_stream_bool_fun$ )
(declare-fun fun_app$j (A_list_list_list_bool_fun$ A_list_list_list$ )Bool )
(declare-fun fun_app$k (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$l (A_list_list_bool_fun$ A_list_list$ )Bool )
(declare-fun fun_app$m (A_list_bool_fun$ A_list$ )Bool )
(declare-fun streams$a (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$b (A_list_stream_stream_set$ )A_list_stream_stream_stream_set$ )
(declare-fun streams$c (A_list_list_list_set$ )A_list_list_list_stream_set$ )
(declare-fun streams$d (A_list_stream_set$ )A_list_stream_stream_set$ )
(declare-fun streams$e (A_set$ )A_stream_set$ )
(declare-fun streams$f (A_list_list_set$ )A_list_list_stream_set$ )
(declare-fun streams$g (A_list_set$ )A_list_stream_set$ )
(declare-fun sdrop_while$ (A_list_list_list_bool_fun$ A_list_list_list_stream$ )A_list_list_list_stream$ )
(declare-fun sdrop_while$a (A_list_stream_bool_fun$ A_list_stream_stream$ )A_list_stream_stream$ )
(declare-fun sdrop_while$b (A_bool_fun$ A_stream$ )A_stream$ )
(declare-fun sdrop_while$c (A_list_list_bool_fun$ A_list_list_stream$ )A_list_list_stream$ )
(declare-fun sdrop_while$d (A_list_bool_fun$ A_list_stream$ )A_list_stream$ )
(assert (! (not (= (flat$ ws$ )(shift$ (shd$a ws$ )(flat$ (stl$a ws$ ))))):named a0 ))
(assert (! (not (= (shd$a ws$ )nil$ )):named a1 ))
(assert (! (forall ((?v0 A_list_list_list$ )(?v1 A_list_list_stream$ )(?v2 A_list_list_stream$ ))(= (= (shift$a ?v0 ?v1 )(shift$a ?v0 ?v2 ))(= ?v1 ?v2 ))):named a2 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_stream$ )(?v2 A_list_stream$ ))(= (= (shift$b ?v0 ?v1 )(shift$b ?v0 ?v2 ))(= ?v1 ?v2 ))):named a3 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (= (shift$ ?v0 ?v1 )(shift$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a4 ))
(assert (! (forall ((?v0 A_list_list_stream$ ))(! (= (shift$a nil$b ?v0 )?v0 ):pattern ((shift$a nil$b ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_list_stream$ ))(! (= (shift$b nil$a ?v0 )?v0 ):pattern ((shift$b nil$a ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_stream$ ))(! (= (shift$ nil$ ?v0 )?v0 ):pattern ((shift$ nil$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_list_list_list_stream$ )(?v1 A_list_list_list_stream$ ))(=> (and (= (shd$c ?v0 )(shd$c ?v1 ))(= (stl$c ?v0 )(stl$c ?v1 )))(= ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_stream$ ))(=> (and (= (shd$d ?v0 )(shd$d ?v1 ))(= (stl$d ?v0 )(stl$d ?v1 )))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_stream$ ))(=> (and (= (shd$b ?v0 )(shd$b ?v1 ))(= (stl$b ?v0 )(stl$b ?v1 )))(= ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_stream$ ))(=> (and (= (shd$a ?v0 )(shd$a ?v1 ))(= (stl$a ?v0 )(stl$a ?v1 )))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_list_list_list_stream_a_list_list_list_stream_bool_fun_fun$ )(?v1 A_list_list_list_stream$ )(?v2 A_list_list_list_stream$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_list_list_list_stream$ )(?v4 A_list_list_list_stream$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (shd$c ?v3 )(shd$c ?v4 ))(or (fun_app$ (fun_app$a ?v0 (stl$c ?v3 ))(stl$c ?v4 ))(= (stl$c ?v3 )(stl$c ?v4 )))))))(= ?v1 ?v2 ))):named a13 ))
(assert (! (forall ((?v0 A_list_stream_stream_a_list_stream_stream_bool_fun_fun$ )(?v1 A_list_stream_stream$ )(?v2 A_list_stream_stream$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 A_list_stream_stream$ )(?v4 A_list_stream_stream$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (shd$d ?v3 )(shd$d ?v4 ))(or (fun_app$b (fun_app$c ?v0 (stl$d ?v3 ))(stl$d ?v4 ))(= (stl$d ?v3 )(stl$d ?v4 )))))))(= ?v1 ?v2 ))):named a14 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$d (fun_app$e ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a15 ))
(assert (! (forall ((?v0 A_list_list_stream_a_list_list_stream_bool_fun_fun$ )(?v1 A_list_list_stream$ )(?v2 A_list_list_stream$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 A_list_list_stream$ )(?v4 A_list_list_stream$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(or (fun_app$f (fun_app$g ?v0 (stl$b ?v3 ))(stl$b ?v4 ))(= (stl$b ?v3 )(stl$b ?v4 )))))))(= ?v1 ?v2 ))):named a16 ))
(assert (! (forall ((?v0 A_list_stream_a_list_stream_bool_fun_fun$ )(?v1 A_list_stream$ )(?v2 A_list_stream$ ))(=> (and (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(forall ((?v3 A_list_stream$ )(?v4 A_list_stream$ ))(=> (fun_app$h (fun_app$i ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(or (fun_app$h (fun_app$i ?v0 (stl$a ?v3 ))(stl$a ?v4 ))(= (stl$a ?v3 )(stl$a ?v4 )))))))(= ?v1 ?v2 ))):named a17 ))
(assert (! (forall ((?v0 A_list_list_list_stream_a_list_list_list_stream_bool_fun_fun$ )(?v1 A_list_list_list_stream$ )(?v2 A_list_list_list_stream$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_list_list_list_stream$ )(?v4 A_list_list_list_stream$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (shd$c ?v3 )(shd$c ?v4 ))(fun_app$ (fun_app$a ?v0 (stl$c ?v3 ))(stl$c ?v4 ))))))(= ?v1 ?v2 ))):named a18 ))
(assert (! (forall ((?v0 A_list_stream_stream_a_list_stream_stream_bool_fun_fun$ )(?v1 A_list_stream_stream$ )(?v2 A_list_stream_stream$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 A_list_stream_stream$ )(?v4 A_list_stream_stream$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (shd$d ?v3 )(shd$d ?v4 ))(fun_app$b (fun_app$c ?v0 (stl$d ?v3 ))(stl$d ?v4 ))))))(= ?v1 ?v2 ))):named a19 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$d (fun_app$e ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a20 ))
(assert (! (forall ((?v0 A_list_list_stream_a_list_list_stream_bool_fun_fun$ )(?v1 A_list_list_stream$ )(?v2 A_list_list_stream$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(forall ((?v3 A_list_list_stream$ )(?v4 A_list_list_stream$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(fun_app$f (fun_app$g ?v0 (stl$b ?v3 ))(stl$b ?v4 ))))))(= ?v1 ?v2 ))):named a21 ))
(assert (! (forall ((?v0 A_list_stream_a_list_stream_bool_fun_fun$ )(?v1 A_list_stream$ )(?v2 A_list_stream$ ))(=> (and (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(forall ((?v3 A_list_stream$ )(?v4 A_list_stream$ ))(=> (fun_app$h (fun_app$i ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(fun_app$h (fun_app$i ?v0 (stl$a ?v3 ))(stl$a ?v4 ))))))(= ?v1 ?v2 ))):named a22 ))
(assert (! (forall ((?v0 A_list_list_list$ )(?v1 A_list_list_list_stream$ ))(! (=> (not (= ?v0 nil$b ))(= (flat$a (sCons$c ?v0 ?v1 ))(shift$a ?v0 (flat$a ?v1 )))):pattern ((sCons$c ?v0 ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list_stream$ ))(! (=> (not (= ?v0 nil$a ))(= (flat$b (sCons$b ?v0 ?v1 ))(shift$b ?v0 (flat$b ?v1 )))):pattern ((sCons$b ?v0 ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_stream$ ))(! (=> (not (= ?v0 nil$ ))(= (flat$ (sCons$a ?v0 ?v1 ))(shift$ ?v0 (flat$ ?v1 )))):pattern ((sCons$a ?v0 ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_list_list_list_list$ )(?v1 A_list_list_list_stream$ ))(= (shd$c (shift$c ?v0 ?v1 ))(ite (= ?v0 nil$c )(shd$c ?v1 )(hd$c ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A_list_stream_list$ )(?v1 A_list_stream_stream$ ))(= (shd$d (shift$d ?v0 ?v1 ))(ite (= ?v0 nil$d )(shd$d ?v1 )(hd$d ?v0 )))):named a27 ))
(assert (! (forall ((?v0 A_list_list_list$ )(?v1 A_list_list_stream$ ))(= (shd$b (shift$a ?v0 ?v1 ))(ite (= ?v0 nil$b )(shd$b ?v1 )(hd$b ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_stream$ ))(= (shd$ (shift$ ?v0 ?v1 ))(ite (= ?v0 nil$ )(shd$ ?v1 )(hd$ ?v0 )))):named a29 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_stream$ ))(= (shd$a (shift$b ?v0 ?v1 ))(ite (= ?v0 nil$a )(shd$a ?v1 )(hd$a ?v0 )))):named a30 ))
(assert (! (forall ((?v0 A_list_list_list_list_stream$ ))(= (shd$c (flat$c ?v0 ))(hd$c (shd$e ?v0 )))):named a31 ))
(assert (! (forall ((?v0 A_list_stream_list_stream$ ))(= (shd$d (flat$d ?v0 ))(hd$d (shd$f ?v0 )))):named a32 ))
(assert (! (forall ((?v0 A_list_list_list_stream$ ))(= (shd$b (flat$a ?v0 ))(hd$b (shd$c ?v0 )))):named a33 ))
(assert (! (forall ((?v0 A_list_stream$ ))(= (shd$ (flat$ ?v0 ))(hd$ (shd$a ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_list_list_stream$ ))(= (shd$a (flat$b ?v0 ))(hd$a (shd$b ?v0 )))):named a35 ))
(assert (! (forall ((?v0 A_list_list_list_list$ )(?v1 A_list_list_list_stream$ ))(= (stl$c (shift$c ?v0 ?v1 ))(ite (= ?v0 nil$c )(stl$c ?v1 )(shift$c (tl$c ?v0 )?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_list_stream_list$ )(?v1 A_list_stream_stream$ ))(= (stl$d (shift$d ?v0 ?v1 ))(ite (= ?v0 nil$d )(stl$d ?v1 )(shift$d (tl$d ?v0 )?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_list_list_list$ )(?v1 A_list_list_stream$ ))(= (stl$b (shift$a ?v0 ?v1 ))(ite (= ?v0 nil$b )(stl$b ?v1 )(shift$a (tl$b ?v0 )?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_stream$ ))(= (stl$ (shift$ ?v0 ?v1 ))(ite (= ?v0 nil$ )(stl$ ?v1 )(shift$ (tl$ ?v0 )?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_stream$ ))(= (stl$a (shift$b ?v0 ?v1 ))(ite (= ?v0 nil$a )(stl$a ?v1 )(shift$b (tl$a ?v0 )?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_list_list_list_bool_fun$ )(?v1 A_list_list_list_stream$ ))(= (sdrop_while$ ?v0 ?v1 )(ite (fun_app$j ?v0 (shd$c ?v1 ))(sdrop_while$ ?v0 (stl$c ?v1 ))?v1 ))):named a41 ))
(assert (! (forall ((?v0 A_list_stream_bool_fun$ )(?v1 A_list_stream_stream$ ))(= (sdrop_while$a ?v0 ?v1 )(ite (fun_app$h ?v0 (shd$d ?v1 ))(sdrop_while$a ?v0 (stl$d ?v1 ))?v1 ))):named a42 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (sdrop_while$b ?v0 ?v1 )(ite (fun_app$k ?v0 (shd$ ?v1 ))(sdrop_while$b ?v0 (stl$ ?v1 ))?v1 ))):named a43 ))
(assert (! (forall ((?v0 A_list_list_bool_fun$ )(?v1 A_list_list_stream$ ))(= (sdrop_while$c ?v0 ?v1 )(ite (fun_app$l ?v0 (shd$b ?v1 ))(sdrop_while$c ?v0 (stl$b ?v1 ))?v1 ))):named a44 ))
(assert (! (forall ((?v0 A_list_bool_fun$ )(?v1 A_list_stream$ ))(= (sdrop_while$d ?v0 ?v1 )(ite (fun_app$m ?v0 (shd$a ?v1 ))(sdrop_while$d ?v0 (stl$a ?v1 ))?v1 ))):named a45 ))
(assert (! (forall ((?v0 A_list_list_list_list_stream$ ))(= (stl$c (flat$c ?v0 ))(flat$c (ite (= (tl$c (shd$e ?v0 ))nil$c )(stl$e ?v0 )(sCons$e (tl$c (shd$e ?v0 ))(stl$e ?v0 )))))):named a46 ))
(assert (! (forall ((?v0 A_list_stream_list_stream$ ))(= (stl$d (flat$d ?v0 ))(flat$d (ite (= (tl$d (shd$f ?v0 ))nil$d )(stl$f ?v0 )(sCons$f (tl$d (shd$f ?v0 ))(stl$f ?v0 )))))):named a47 ))
(assert (! (forall ((?v0 A_list_list_list_stream$ ))(= (stl$b (flat$a ?v0 ))(flat$a (ite (= (tl$b (shd$c ?v0 ))nil$b )(stl$c ?v0 )(sCons$c (tl$b (shd$c ?v0 ))(stl$c ?v0 )))))):named a48 ))
(assert (! (forall ((?v0 A_list_stream$ ))(= (stl$ (flat$ ?v0 ))(flat$ (ite (= (tl$ (shd$a ?v0 ))nil$ )(stl$a ?v0 )(sCons$a (tl$ (shd$a ?v0 ))(stl$a ?v0 )))))):named a49 ))
(assert (! (forall ((?v0 A_list_list_stream$ ))(= (stl$a (flat$b ?v0 ))(flat$b (ite (= (tl$a (shd$b ?v0 ))nil$a )(stl$b ?v0 )(sCons$b (tl$a (shd$b ?v0 ))(stl$b ?v0 )))))):named a50 ))
(assert (! (forall ((?v0 A_list_list_list$ ))(=> (and (=> (= ?v0 nil$b )false )(=> (not (= ?v0 nil$b ))false ))false )):named a51 ))
(assert (! (forall ((?v0 A_list_list$ ))(=> (and (=> (= ?v0 nil$a )false )(=> (not (= ?v0 nil$a ))false ))false )):named a52 ))
(assert (! (forall ((?v0 A_list$ ))(=> (and (=> (= ?v0 nil$ )false )(=> (not (= ?v0 nil$ ))false ))false )):named a53 ))
(assert (! (forall ((?v0 A_list_list_list$ ))(! (=> (not (= ?v0 nil$b ))(= (cycle$ ?v0 )(shift$a ?v0 (cycle$ ?v0 )))):pattern ((cycle$ ?v0 )))):named a54 ))
(assert (! (forall ((?v0 A_list_list$ ))(! (=> (not (= ?v0 nil$a ))(= (cycle$a ?v0 )(shift$b ?v0 (cycle$a ?v0 )))):pattern ((cycle$a ?v0 )))):named a55 ))
(assert (! (forall ((?v0 A_list$ ))(! (=> (not (= ?v0 nil$ ))(= (cycle$b ?v0 )(shift$ ?v0 (cycle$b ?v0 )))):pattern ((cycle$b ?v0 )))):named a56 ))
(assert (! (forall ((?v0 A_list_stream_stream$ ))(= (sCons$d (shd$d ?v0 )(stl$d ?v0 ))?v0 )):named a57 ))
(assert (! (forall ((?v0 A_list_list_list_stream$ ))(= (sCons$c (shd$c ?v0 )(stl$c ?v0 ))?v0 )):named a58 ))
(assert (! (forall ((?v0 A_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a59 ))
(assert (! (forall ((?v0 A_list_list_stream$ ))(= (sCons$b (shd$b ?v0 )(stl$b ?v0 ))?v0 )):named a60 ))
(assert (! (forall ((?v0 A_list_stream$ ))(= (sCons$a (shd$a ?v0 )(stl$a ?v0 ))?v0 )):named a61 ))
(assert (! (forall ((?v0 A_list_list_stream_stream$ )(?v1 A_list_list_stream_set$ ))(=> (and (member$ (stl$g ?v0 )(streams$ ?v1 ))(member$a (shd$g ?v0 )?v1 ))(member$ ?v0 (streams$ ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$b (stl$h ?v0 )(streams$a ?v1 ))(member$c (shd$h ?v0 )?v1 ))(member$b ?v0 (streams$a ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_list_stream_stream_stream$ )(?v1 A_list_stream_stream_set$ ))(=> (and (member$d (stl$i ?v0 )(streams$b ?v1 ))(member$e (shd$i ?v0 )?v1 ))(member$d ?v0 (streams$b ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_list_list_list_stream$ )(?v1 A_list_list_list_set$ ))(=> (and (member$f (stl$c ?v0 )(streams$c ?v1 ))(member$g (shd$c ?v0 )?v1 ))(member$f ?v0 (streams$c ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (and (member$e (stl$d ?v0 )(streams$d ?v1 ))(member$h (shd$d ?v0 )?v1 ))(member$e ?v0 (streams$d ?v1 )))):named a66 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$c (stl$ ?v0 )(streams$e ?v1 ))(member$i (shd$ ?v0 )?v1 ))(member$c ?v0 (streams$e ?v1 )))):named a67 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_set$ ))(=> (and (member$a (stl$b ?v0 )(streams$f ?v1 ))(member$j (shd$b ?v0 )?v1 ))(member$a ?v0 (streams$f ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (and (member$h (stl$a ?v0 )(streams$g ?v1 ))(member$k (shd$a ?v0 )?v1 ))(member$h ?v0 (streams$g ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_list_list_stream_stream$ )(?v1 A_list_list_stream_set$ ))(=> (and (member$ ?v0 (streams$ ?v1 ))(=> (and (member$a (shd$g ?v0 )?v1 )(member$ (stl$g ?v0 )(streams$ ?v1 )))false ))false )):named a70 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$b ?v0 (streams$a ?v1 ))(=> (and (member$c (shd$h ?v0 )?v1 )(member$b (stl$h ?v0 )(streams$a ?v1 )))false ))false )):named a71 ))
(assert (! (forall ((?v0 A_list_stream_stream_stream$ )(?v1 A_list_stream_stream_set$ ))(=> (and (member$d ?v0 (streams$b ?v1 ))(=> (and (member$e (shd$i ?v0 )?v1 )(member$d (stl$i ?v0 )(streams$b ?v1 )))false ))false )):named a72 ))
(assert (! (forall ((?v0 A_list_list_list_stream$ )(?v1 A_list_list_list_set$ ))(=> (and (member$f ?v0 (streams$c ?v1 ))(=> (and (member$g (shd$c ?v0 )?v1 )(member$f (stl$c ?v0 )(streams$c ?v1 )))false ))false )):named a73 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (and (member$e ?v0 (streams$d ?v1 ))(=> (and (member$h (shd$d ?v0 )?v1 )(member$e (stl$d ?v0 )(streams$d ?v1 )))false ))false )):named a74 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(=> (and (member$i (shd$ ?v0 )?v1 )(member$c (stl$ ?v0 )(streams$e ?v1 )))false ))false )):named a75 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_set$ ))(=> (and (member$a ?v0 (streams$f ?v1 ))(=> (and (member$j (shd$b ?v0 )?v1 )(member$a (stl$b ?v0 )(streams$f ?v1 )))false ))false )):named a76 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (and (member$h ?v0 (streams$g ?v1 ))(=> (and (member$k (shd$a ?v0 )?v1 )(member$h (stl$a ?v0 )(streams$g ?v1 )))false ))false )):named a77 ))
(check-sat )
;(get-unsat-core )
