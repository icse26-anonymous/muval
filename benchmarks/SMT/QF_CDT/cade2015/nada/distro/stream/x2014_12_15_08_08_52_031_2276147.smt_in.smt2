;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_a_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-sort A_stream_stream_stream_stream$ 0)
(declare-sort A_stream_stream_stream_stream_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$b (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$b (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$b (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun shd$c (A_stream_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun stl$c (A_stream_stream_stream_stream$)A_stream_stream_stream_stream$)
(declare-fun sCons$c (A_stream_stream_stream$ A_stream_stream_stream_stream$ )A_stream_stream_stream_stream$)
(declare-fun shd$d (A_stream_stream_stream_stream_stream$)A_stream_stream_stream_stream$)
(declare-fun stl$d (A_stream_stream_stream_stream_stream$)A_stream_stream_stream_stream_stream$)
(declare-fun sCons$d (A_stream_stream_stream_stream$ A_stream_stream_stream_stream_stream$ )A_stream_stream_stream_stream_stream$)
(declare-fun s$ ()A_stream$ )
(declare-fun x$ ()A$ )
(declare-fun ss$ ()A_stream_stream$ )
(declare-fun snth$ (A_stream_stream_stream_stream$ Nat$ )A_stream_stream_stream$ )
(declare-fun sset$ (A_stream$ )A_set$ )
(declare-fun snth$a (A_stream_stream_stream_stream_stream$ Nat$ )A_stream_stream_stream_stream$ )
(declare-fun snth$b (A_stream_stream_stream$ Nat$ )A_stream_stream$ )
(declare-fun snth$c (A_stream$ Nat$ )A$ )
(declare-fun snth$d (A_stream_stream$ Nat$ )A_stream$ )
(declare-fun sset$a (A_stream_stream_stream_stream$ )A_stream_stream_stream_set$ )
(declare-fun sset$b (A_stream_stream_stream$ )A_stream_stream_set$ )
(declare-fun sset$c (A_stream_stream$ )A_stream_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun smerge$ (A_stream_stream$ )A_stream$ )
(declare-fun fun_app$ (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun member$a (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun member$b (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$c (A_stream$ A_stream_set$ )Bool )
(declare-fun smember$ (A_stream_stream$ A_stream_stream_stream$ )Bool )
(declare-fun smerge$a (A_stream_stream_stream_stream_stream$ )A_stream_stream_stream_stream$ )
(declare-fun smerge$b (A_stream_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun smerge$c (A_stream_stream_stream$ )A_stream_stream$ )
(declare-fun fun_app$a (A_stream_stream_a_stream_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun fun_app$b (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$c (A_a_stream_bool_fun_fun$ A$ )A_stream_bool_fun$ )
(declare-fun fun_app$d (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$e (A_stream_a_stream_stream_bool_fun_fun$ A_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$f (A_a_stream_stream_bool_fun_fun$ A$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$g (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$h (A_stream_stream_a_bool_fun_fun$ A_stream_stream$ )A_bool_fun$ )
(declare-fun fun_app$i (A_stream_stream_a_stream_bool_fun_fun$ A_stream_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$j (A_stream_stream_a_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$k (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$l (A_stream_a_bool_fun_fun$ A_stream$ )A_bool_fun$ )
(declare-fun fun_app$m (A_stream_a_stream_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(declare-fun smember$a (A$ A_stream$ )Bool )
(declare-fun smember$b (A_stream$ A_stream_stream$ )Bool )
(declare-fun stream_all2$ (A_a_stream_stream_bool_fun_fun$ A_stream$ A_stream_stream_stream$ )Bool )
(declare-fun stream_all2$a (A_stream_a_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun stream_all2$b (A_stream_stream_a_bool_fun_fun$ A_stream_stream_stream$ A_stream$ )Bool )
(declare-fun stream_all2$c (A_stream_stream_a_stream_bool_fun_fun$ A_stream_stream_stream$ A_stream_stream$ )Bool )
(declare-fun stream_all2$d (A_stream_stream_a_stream_stream_bool_fun_fun$ A_stream_stream_stream$ A_stream_stream_stream$ )Bool )
(declare-fun stream_all2$e (A_a_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(declare-fun stream_all2$f (A_a_stream_bool_fun_fun$ A_stream$ )A_stream_stream_bool_fun$ )
(declare-fun stream_all2$g (A_stream_a_bool_fun_fun$ A_stream_stream$ )A_stream_bool_fun$ )
(declare-fun stream_all2$h (A_stream_a_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_bool_fun$ )
(assert (! (not (member$ x$ (sset$ (smerge$ ss$ )))):named a0 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream_stream$ )(?v1 Nat$ )(?v2 Nat$ ))(member$a (snth$ (snth$a ?v0 ?v1 )?v2 )(sset$a (smerge$a ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 Nat$ )(?v2 Nat$ ))(member$b (snth$b (snth$ ?v0 ?v1 )?v2 )(sset$b (smerge$b ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 Nat$ )(?v2 Nat$ ))(member$ (snth$c (snth$d ?v0 ?v1 )?v2 )(sset$ (smerge$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 Nat$ )(?v2 Nat$ ))(member$c (snth$d (snth$b ?v0 ?v1 )?v2 )(sset$c (smerge$c ?v0 )))):named a4 ))
(assert (! (member$c s$ (sset$c ss$ )):named a5 ))
(assert (! (member$ x$ (sset$ s$ )):named a6 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 Nat$ ))(member$a (snth$ ?v0 ?v1 )(sset$a ?v0 ))):named a7 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 Nat$ ))(member$b (snth$b ?v0 ?v1 )(sset$b ?v0 ))):named a8 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 Nat$ ))(member$ (snth$c ?v0 ?v1 )(sset$ ?v0 ))):named a9 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 Nat$ ))(member$c (snth$d ?v0 ?v1 )(sset$c ?v0 ))):named a10 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(! (= (smember$ ?v0 ?v1 )(member$b ?v0 (sset$b ?v1 ))):pattern ((smember$ ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(! (= (smember$a ?v0 ?v1 )(member$ ?v0 (sset$ ?v1 ))):pattern ((smember$a ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(! (= (smember$b ?v0 ?v1 )(member$c ?v0 (sset$c ?v1 ))):pattern ((smember$b ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ ))(member$b (shd$b ?v0 )(sset$b ?v0 ))):named a14 ))
(assert (! (forall ((?v0 A_stream$ ))(member$ (shd$ ?v0 )(sset$ ?v0 ))):named a15 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(member$c (shd$a ?v0 )(sset$c ?v0 ))):named a16 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(=> (member$b ?v0 (sset$b (stl$b ?v1 )))(member$b ?v0 (sset$b ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(=> (member$ ?v0 (sset$ (stl$ ?v1 )))(member$ ?v0 (sset$ ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(=> (member$c ?v0 (sset$c (stl$a ?v1 )))(member$c ?v0 (sset$c ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_a_stream_stream_stream_bool_fun_fun$ ))(=> (and (member$b ?v0 (sset$b ?v1 ))(and (forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream_stream$ ))(fun_app$ (fun_app$a ?v2 ?v3 )(sCons$b ?v3 ?v4 )))(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream_stream$ )(?v5 A_stream_stream$ ))(=> (and (member$b ?v5 (sset$b ?v4 ))(fun_app$ (fun_app$a ?v2 ?v5 )?v4 ))(fun_app$ (fun_app$a ?v2 ?v5 )(sCons$b ?v3 ?v4 ))))))(fun_app$ (fun_app$a ?v2 ?v0 )?v1 ))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_a_stream_bool_fun_fun$ ))(=> (and (member$ ?v0 (sset$ ?v1 ))(and (forall ((?v3 A$ )(?v4 A_stream$ ))(fun_app$b (fun_app$c ?v2 ?v3 )(sCons$ ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_stream$ )(?v5 A$ ))(=> (and (member$ ?v5 (sset$ ?v4 ))(fun_app$b (fun_app$c ?v2 ?v5 )?v4 ))(fun_app$b (fun_app$c ?v2 ?v5 )(sCons$ ?v3 ?v4 ))))))(fun_app$b (fun_app$c ?v2 ?v0 )?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (member$c ?v0 (sset$c ?v1 ))(and (forall ((?v3 A_stream$ )(?v4 A_stream_stream$ ))(fun_app$d (fun_app$e ?v2 ?v3 )(sCons$a ?v3 ?v4 )))(forall ((?v3 A_stream$ )(?v4 A_stream_stream$ )(?v5 A_stream$ ))(=> (and (member$c ?v5 (sset$c ?v4 ))(fun_app$d (fun_app$e ?v2 ?v5 )?v4 ))(fun_app$d (fun_app$e ?v2 ?v5 )(sCons$a ?v3 ?v4 ))))))(fun_app$d (fun_app$e ?v2 ?v0 )?v1 ))):named a22 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(=> (and (member$b ?v0 (sset$b ?v1 ))(and (forall ((?v2 A_stream_stream_stream$ ))(=> (= ?v1 (sCons$b ?v0 ?v2 ))false ))(forall ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(=> (and (= ?v1 (sCons$b ?v2 ?v3 ))(member$b ?v0 (sset$b ?v3 )))false ))))false )):named a23 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(=> (and (member$ ?v0 (sset$ ?v1 ))(and (forall ((?v2 A_stream$ ))(=> (= ?v1 (sCons$ ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v1 (sCons$ ?v2 ?v3 ))(member$ ?v0 (sset$ ?v3 )))false ))))false )):named a24 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(=> (and (member$c ?v0 (sset$c ?v1 ))(and (forall ((?v2 A_stream_stream$ ))(=> (= ?v1 (sCons$a ?v0 ?v2 ))false ))(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v1 (sCons$a ?v2 ?v3 ))(member$c ?v0 (sset$c ?v3 )))false ))))false )):named a25 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream$ ))(=> (member$b ?v0 (sset$b ?v1 ))(member$b ?v0 (sset$b (sCons$b ?v2 ?v1 ))))):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ ))(=> (member$ ?v0 (sset$ ?v1 ))(member$ ?v0 (sset$ (sCons$ ?v2 ?v1 ))))):named a27 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ ))(=> (member$c ?v0 (sset$c ?v1 ))(member$c ?v0 (sset$c (sCons$a ?v2 ?v1 ))))):named a28 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ ))(member$b ?v0 (sset$b (sCons$b ?v0 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(member$ ?v0 (sset$ (sCons$ ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ ))(member$c ?v0 (sset$c (sCons$a ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_a_stream_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream_stream$ )(?v3 A_a_stream_stream_bool_fun_fun$ ))(=> (and (stream_all2$ ?v0 ?v1 ?v2 )(forall ((?v4 A$ )(?v5 A_stream_stream$ ))(=> (and (member$ ?v4 (sset$ ?v1 ))(and (member$b ?v5 (sset$b ?v2 ))(fun_app$d (fun_app$f ?v0 ?v4 )?v5 )))(fun_app$d (fun_app$f ?v3 ?v4 )?v5 ))))(stream_all2$ ?v3 ?v1 ?v2 ))):named a32 ))
(assert (! (forall ((?v0 A_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream_stream$ )(?v3 A_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (fun_app$ (stream_all2$a ?v0 ?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(=> (and (member$c ?v4 (sset$c ?v1 ))(and (member$b ?v5 (sset$b ?v2 ))(fun_app$d (fun_app$e ?v0 ?v4 )?v5 )))(fun_app$d (fun_app$e ?v3 ?v4 )?v5 ))))(fun_app$ (stream_all2$a ?v3 ?v1 )?v2 ))):named a33 ))
(assert (! (forall ((?v0 A_stream_stream_a_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream_a_bool_fun_fun$ ))(=> (and (stream_all2$b ?v0 ?v1 ?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A$ ))(=> (and (member$b ?v4 (sset$b ?v1 ))(and (member$ ?v5 (sset$ ?v2 ))(fun_app$g (fun_app$h ?v0 ?v4 )?v5 )))(fun_app$g (fun_app$h ?v3 ?v4 )?v5 ))))(stream_all2$b ?v3 ?v1 ?v2 ))):named a34 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream_stream_a_stream_bool_fun_fun$ ))(=> (and (stream_all2$c ?v0 ?v1 ?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A_stream$ ))(=> (and (member$b ?v4 (sset$b ?v1 ))(and (member$c ?v5 (sset$c ?v2 ))(fun_app$b (fun_app$i ?v0 ?v4 )?v5 )))(fun_app$b (fun_app$i ?v3 ?v4 )?v5 ))))(stream_all2$c ?v3 ?v1 ?v2 ))):named a35 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_stream$ )(?v3 A_stream_stream_a_stream_stream_bool_fun_fun$ ))(=> (and (stream_all2$d ?v0 ?v1 ?v2 )(forall ((?v4 A_stream_stream$ )(?v5 A_stream_stream$ ))(=> (and (member$b ?v4 (sset$b ?v1 ))(and (member$b ?v5 (sset$b ?v2 ))(fun_app$d (fun_app$j ?v0 ?v4 )?v5 )))(fun_app$d (fun_app$j ?v3 ?v4 )?v5 ))))(stream_all2$d ?v3 ?v1 ?v2 ))):named a36 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (stream_all2$e ?v0 ?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (and (member$ ?v4 (sset$ ?v1 ))(and (member$ ?v5 (sset$ ?v2 ))(fun_app$g (fun_app$k ?v0 ?v4 )?v5 )))(fun_app$g (fun_app$k ?v3 ?v4 )?v5 ))))(fun_app$b (stream_all2$e ?v3 ?v1 )?v2 ))):named a37 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A_a_stream_bool_fun_fun$ ))(=> (and (fun_app$d (stream_all2$f ?v0 ?v1 )?v2 )(forall ((?v4 A$ )(?v5 A_stream$ ))(=> (and (member$ ?v4 (sset$ ?v1 ))(and (member$c ?v5 (sset$c ?v2 ))(fun_app$b (fun_app$c ?v0 ?v4 )?v5 )))(fun_app$b (fun_app$c ?v3 ?v4 )?v5 ))))(fun_app$d (stream_all2$f ?v3 ?v1 )?v2 ))):named a38 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_a_bool_fun_fun$ ))(=> (and (fun_app$b (stream_all2$g ?v0 ?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A$ ))(=> (and (member$c ?v4 (sset$c ?v1 ))(and (member$ ?v5 (sset$ ?v2 ))(fun_app$g (fun_app$l ?v0 ?v4 )?v5 )))(fun_app$g (fun_app$l ?v3 ?v4 )?v5 ))))(fun_app$b (stream_all2$g ?v3 ?v1 )?v2 ))):named a39 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream_a_stream_bool_fun_fun$ ))(=> (and (fun_app$d (stream_all2$h ?v0 ?v1 )?v2 )(forall ((?v4 A_stream$ )(?v5 A_stream$ ))(=> (and (member$c ?v4 (sset$c ?v1 ))(and (member$c ?v5 (sset$c ?v2 ))(fun_app$b (fun_app$m ?v0 ?v4 )?v5 )))(fun_app$b (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$d (stream_all2$h ?v3 ?v1 )?v2 ))):named a40 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a41 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a42 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(! (= (fun_app$d (stream_all2$h ?v0 (sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(and (fun_app$b (fun_app$m ?v0 ?v1 )?v3 )(fun_app$d (stream_all2$h ?v0 ?v2 )?v4 ))):pattern ((fun_app$d (stream_all2$h ?v0 (sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a43 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A$ )(?v4 A_stream$ ))(! (= (fun_app$b (stream_all2$g ?v0 (sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(and (fun_app$g (fun_app$l ?v0 ?v1 )?v3 )(fun_app$b (stream_all2$g ?v0 ?v2 )?v4 ))):pattern ((fun_app$b (stream_all2$g ?v0 (sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a44 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(! (= (fun_app$d (stream_all2$f ?v0 (sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(and (fun_app$b (fun_app$c ?v0 ?v1 )?v3 )(fun_app$d (stream_all2$f ?v0 ?v2 )?v4 ))):pattern ((fun_app$d (stream_all2$f ?v0 (sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a45 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A$ )(?v4 A_stream$ ))(! (= (fun_app$b (stream_all2$e ?v0 (sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(and (fun_app$g (fun_app$k ?v0 ?v1 )?v3 )(fun_app$b (stream_all2$e ?v0 ?v2 )?v4 ))):pattern ((fun_app$b (stream_all2$e ?v0 (sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a46 ))
(check-sat )
;(get-unsat-core )
