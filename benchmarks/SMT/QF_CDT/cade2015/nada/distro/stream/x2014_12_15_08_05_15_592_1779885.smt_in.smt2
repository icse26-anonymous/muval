;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_list_set$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_list_list_set$ 0 )
(declare-sort A_list_stream_set$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_list_set$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_list_list_list_set$ 0 )
(declare-sort A_list_list_stream_set$ 0 )
(declare-sort A_list_stream_bool_fun$ 0 )
(declare-sort A_list_stream_list_set$ 0 )
(declare-sort A_stream_list_list_set$ 0 )
(declare-sort A_list_stream_stream_set$ 0 )
(declare-sort A_stream_list_stream_set$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_list_set$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_list_list_stream_bool_fun$ 0 )
(declare-sort A_list_list_stream_list_set$ 0 )
(declare-sort A_list_stream_list_list_set$ 0 )
(declare-sort A_list_list_stream_stream_set$ 0 )
(declare-sort A_list_stream_list_stream_set$ 0 )
(declare-sort A_list_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_list_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_list_list_set$ 0 )
(declare-sort A_stream_stream_list_stream_set$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_list_list_stream_stream_bool_fun$ 0 )
(declare-sort A_list_stream_list_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_list_stream_bool_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-sort A_list$ 0)
(declare-fun nil$ ()A_list$)
(declare-fun hd$ (A_list$)A$)
(declare-fun tl$ (A_list$)A_list$)
(declare-fun cons$ (A$ A_list$ )A_list$)
(declare-sort A_stream_stream$ 0)
(declare-sort A_list_stream$ 0)
(declare-sort A_list_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$b (A_list_stream$)A_list$)
(declare-fun stl$b (A_list_stream$)A_list_stream$)
(declare-fun sCons$b (A_list$ A_list_stream$ )A_list_stream$)
(declare-fun shd$c (A_list_stream_stream$)A_list_stream$)
(declare-fun stl$c (A_list_stream_stream$)A_list_stream_stream$)
(declare-fun sCons$c (A_list_stream$ A_list_stream_stream$ )A_list_stream_stream$)
(declare-fun shd$d (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$d (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$d (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-sort A_list_list$ 0)
(declare-fun nil$a ()A_list_list$)
(declare-fun hd$a (A_list_list$)A_list$)
(declare-fun tl$a (A_list_list$)A_list_list$)
(declare-fun cons$a (A_list$ A_list_list$ )A_list_list$)
(declare-sort A_list_list_stream$ 0)
(declare-fun shd$e (A_list_list_stream$)A_list_list$)
(declare-fun stl$e (A_list_list_stream$)A_list_list_stream$)
(declare-fun sCons$e (A_list_list$ A_list_list_stream$ )A_list_list_stream$)
(declare-sort A_stream_list$ 0)
(declare-fun nil$b ()A_stream_list$)
(declare-fun hd$b (A_stream_list$)A_stream$)
(declare-fun tl$b (A_stream_list$)A_stream_list$)
(declare-fun cons$b (A_stream$ A_stream_list$ )A_stream_list$)
(declare-sort A_stream_list_stream$ 0)
(declare-sort A_list_list_stream_stream$ 0)
(declare-fun shd$f (A_stream_list_stream$)A_stream_list$)
(declare-fun stl$f (A_stream_list_stream$)A_stream_list_stream$)
(declare-fun sCons$f (A_stream_list$ A_stream_list_stream$ )A_stream_list_stream$)
(declare-fun shd$g (A_list_list_stream_stream$)A_list_list_stream$)
(declare-fun stl$g (A_list_list_stream_stream$)A_list_list_stream_stream$)
(declare-fun sCons$g (A_list_list_stream$ A_list_list_stream_stream$ )A_list_list_stream_stream$)
(declare-sort A_stream_stream_list$ 0)
(declare-fun nil$c ()A_stream_stream_list$)
(declare-fun hd$c (A_stream_stream_list$)A_stream_stream$)
(declare-fun tl$c (A_stream_stream_list$)A_stream_stream_list$)
(declare-fun cons$c (A_stream_stream$ A_stream_stream_list$ )A_stream_stream_list$)
(declare-sort A_stream_stream_list_stream$ 0)
(declare-fun shd$h (A_stream_stream_list_stream$)A_stream_stream_list$)
(declare-fun stl$h (A_stream_stream_list_stream$)A_stream_stream_list_stream$)
(declare-fun sCons$h (A_stream_stream_list$ A_stream_stream_list_stream$ )A_stream_stream_list_stream$)
(declare-sort A_list_stream_list$ 0)
(declare-fun nil$d ()A_list_stream_list$)
(declare-fun hd$d (A_list_stream_list$)A_list_stream$)
(declare-fun tl$d (A_list_stream_list$)A_list_stream_list$)
(declare-fun cons$d (A_list_stream$ A_list_stream_list$ )A_list_stream_list$)
(declare-sort A_list_stream_list_stream$ 0)
(declare-fun shd$i (A_list_stream_list_stream$)A_list_stream_list$)
(declare-fun stl$i (A_list_stream_list_stream$)A_list_stream_list_stream$)
(declare-fun sCons$i (A_list_stream_list$ A_list_stream_list_stream$ )A_list_stream_list_stream$)
(declare-sort A_list_list_list$ 0)
(declare-sort A_stream_list_list$ 0)
(declare-sort A_list_list_stream_list$ 0)
(declare-sort A_stream_stream_list_list$ 0)
(declare-sort A_list_stream_list_list$ 0)
(declare-fun nil$e ()A_list_list_list$)
(declare-fun hd$e (A_list_list_list$)A_list_list$)
(declare-fun tl$e (A_list_list_list$)A_list_list_list$)
(declare-fun cons$e (A_list_list$ A_list_list_list$ )A_list_list_list$)
(declare-fun nil$f ()A_stream_list_list$)
(declare-fun hd$f (A_stream_list_list$)A_stream_list$)
(declare-fun tl$f (A_stream_list_list$)A_stream_list_list$)
(declare-fun cons$f (A_stream_list$ A_stream_list_list$ )A_stream_list_list$)
(declare-fun nil$g ()A_list_list_stream_list$)
(declare-fun hd$g (A_list_list_stream_list$)A_list_list_stream$)
(declare-fun tl$g (A_list_list_stream_list$)A_list_list_stream_list$)
(declare-fun cons$g (A_list_list_stream$ A_list_list_stream_list$ )A_list_list_stream_list$)
(declare-fun nil$h ()A_stream_stream_list_list$)
(declare-fun hd$h (A_stream_stream_list_list$)A_stream_stream_list$)
(declare-fun tl$h (A_stream_stream_list_list$)A_stream_stream_list_list$)
(declare-fun cons$h (A_stream_stream_list$ A_stream_stream_list_list$ )A_stream_stream_list_list$)
(declare-fun nil$i ()A_list_stream_list_list$)
(declare-fun hd$i (A_list_stream_list_list$)A_list_stream_list$)
(declare-fun tl$i (A_list_stream_list_list$)A_list_stream_list_list$)
(declare-fun cons$i (A_list_stream_list$ A_list_stream_list_list$ )A_list_stream_list_list$)
(declare-fun a$ ()A_set$ )
(declare-fun s$ ()A_stream$ )
(declare-fun w$ ()A_list$ )
(declare-fun map$ (A_a_fun$ A_list$ )A_list$ )
(declare-fun set$ (A_list$ )A_set$ )
(declare-fun set$a (A_stream_list$ )A_stream_set$ )
(declare-fun set$b (A_list_list$ )A_list_set$ )
(declare-fun set$c (A_list_stream_list$ )A_list_stream_set$ )
(declare-fun set$d (A_stream_stream_list$ )A_stream_stream_set$ )
(declare-fun set$e (A_list_list_list$ )A_list_list_set$ )
(declare-fun set$f (A_stream_list_list$ )A_stream_list_set$ )
(declare-fun set$g (A_list_list_stream_list$ )A_list_list_stream_set$ )
(declare-fun set$h (A_stream_stream_list_list$ )A_stream_stream_list_set$ )
(declare-fun set$i (A_list_stream_list_list$ )A_list_stream_list_set$ )
(declare-fun smap$ (A_a_fun$ A_stream$ )A_stream$ )
(declare-fun lists$ (A_set$ )A_list_set$ )
(declare-fun shift$ (A_list$ A_stream$ )A_stream$ )
(declare-fun append$ (A_stream_list$ A_stream_list$ )A_stream_list$ )
(declare-fun lists$a (A_stream_set$ )A_stream_list_set$ )
(declare-fun lists$b (A_list_set$ )A_list_list_set$ )
(declare-fun lists$c (A_list_stream_set$ )A_list_stream_list_set$ )
(declare-fun lists$d (A_stream_stream_set$ )A_stream_stream_list_set$ )
(declare-fun lists$e (A_list_list_set$ )A_list_list_list_set$ )
(declare-fun lists$f (A_stream_list_set$ )A_stream_list_list_set$ )
(declare-fun lists$g (A_list_list_stream_set$ )A_list_list_stream_list_set$ )
(declare-fun lists$h (A_stream_stream_list_set$ )A_stream_stream_list_list_set$ )
(declare-fun lists$i (A_list_stream_list_set$ )A_list_stream_list_list_set$ )
(declare-fun member$ (A_stream$ A_stream_set$ )Bool )
(declare-fun shift$a (A_stream_list$ A_stream_stream$ )A_stream_stream$ )
(declare-fun shift$b (A_list_list$ A_list_stream$ )A_list_stream$ )
(declare-fun append$a (A_list_list$ A_list_list$ )A_list_list$ )
(declare-fun append$b (A_list$ A_list$ )A_list$ )
(declare-fun append$c (A_stream_stream_list$ A_stream_stream_list$ )A_stream_stream_list$ )
(declare-fun append$d (A_list_stream_list$ A_list_stream_list$ )A_list_stream_list$ )
(declare-fun append$e (A_stream_list_list$ A_stream_list_list$ )A_stream_list_list$ )
(declare-fun append$f (A_list_list_list$ A_list_list_list$ )A_list_list_list$ )
(declare-fun fun_app$ (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun member$a (A_list$ A_list_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$d (A_list_stream$ A_list_stream_set$ )Bool )
(declare-fun member$e (A_list_stream_stream$ A_list_stream_stream_set$ )Bool )
(declare-fun member$f (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun member$g (A_list_list_stream$ A_list_list_stream_set$ )Bool )
(declare-fun member$h (A_list_list$ A_list_list_set$ )Bool )
(declare-fun member$i (A_stream_list_stream$ A_stream_list_stream_set$ )Bool )
(declare-fun member$j (A_stream_list$ A_stream_list_set$ )Bool )
(declare-fun member$k (A_list_list_stream_stream$ A_list_list_stream_stream_set$ )Bool )
(declare-fun member$l (A_stream_stream_list_stream$ A_stream_stream_list_stream_set$ )Bool )
(declare-fun member$m (A_stream_stream_list$ A_stream_stream_list_set$ )Bool )
(declare-fun member$n (A_list_stream_list_stream$ A_list_stream_list_stream_set$ )Bool )
(declare-fun member$o (A_list_stream_list$ A_list_stream_list_set$ )Bool )
(declare-fun member$p (A_list_list_list$ A_list_list_list_set$ )Bool )
(declare-fun member$q (A_stream_list_list$ A_stream_list_list_set$ )Bool )
(declare-fun member$r (A_list_list_stream_list$ A_list_list_stream_list_set$ )Bool )
(declare-fun member$s (A_stream_stream_list_list$ A_stream_stream_list_list_set$ )Bool )
(declare-fun member$t (A_list_stream_list_list$ A_list_stream_list_list_set$ )Bool )
(declare-fun streams$ (A_set$ )A_stream_set$ )
(declare-fun fun_app$a (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$b (A_list_stream_bool_fun$ A_list_stream$ )Bool )
(declare-fun fun_app$c (A_list_stream_stream_bool_fun$ A_list_stream_stream$ )Bool )
(declare-fun fun_app$d (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun fun_app$e (A_list_list_stream_bool_fun$ A_list_list_stream$ )Bool )
(declare-fun fun_app$f (A_stream_list_stream_bool_fun$ A_stream_list_stream$ )Bool )
(declare-fun fun_app$g (A_list_list_stream_stream_bool_fun$ A_list_list_stream_stream$ )Bool )
(declare-fun fun_app$h (A_stream_stream_list_stream_bool_fun$ A_stream_stream_list_stream$ )Bool )
(declare-fun fun_app$i (A_list_stream_list_stream_bool_fun$ A_list_stream_list_stream$ )Bool )
(declare-fun streams$a (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$b (A_list_set$ )A_list_stream_set$ )
(declare-fun streams$c (A_list_stream_set$ )A_list_stream_stream_set$ )
(declare-fun streams$d (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun streams$e (A_list_list_set$ )A_list_list_stream_set$ )
(declare-fun streams$f (A_stream_list_set$ )A_stream_list_stream_set$ )
(declare-fun streams$g (A_list_list_stream_set$ )A_list_list_stream_stream_set$ )
(declare-fun streams$h (A_stream_stream_list_set$ )A_stream_stream_list_stream_set$ )
(declare-fun streams$i (A_list_stream_list_set$ )A_list_stream_list_stream_set$ )
(assert (! (not (member$ (shift$ w$ s$ )(streams$ a$ ))):named a0 ))
(assert (! (member$a w$ (lists$ a$ )):named a1 ))
(assert (! (member$ s$ (streams$ a$ )):named a2 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (= (shift$ ?v0 ?v1 )(shift$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a3 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(= (member$ ?v0 (streams$ ?v1 ))(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$ ?v3 (streams$ ?v1 ))))))):named a4 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(= (member$c ?v0 (streams$a ?v1 ))(exists ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$a ?v1 ))))))):named a5 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(= (member$d ?v0 (streams$b ?v1 ))(exists ((?v2 A_list$ )(?v3 A_list_stream$ ))(and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$d ?v3 (streams$b ?v1 ))))))):named a6 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(= (member$e ?v0 (streams$c ?v1 ))(exists ((?v2 A_list_stream$ )(?v3 A_list_stream_stream$ ))(and (= ?v0 (sCons$c ?v2 ?v3 ))(and (member$d ?v2 ?v1 )(member$e ?v3 (streams$c ?v1 ))))))):named a7 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(= (member$f ?v0 (streams$d ?v1 ))(exists ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(and (= ?v0 (sCons$d ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$f ?v3 (streams$d ?v1 ))))))):named a8 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_set$ ))(= (member$g ?v0 (streams$e ?v1 ))(exists ((?v2 A_list_list$ )(?v3 A_list_list_stream$ ))(and (= ?v0 (sCons$e ?v2 ?v3 ))(and (member$h ?v2 ?v1 )(member$g ?v3 (streams$e ?v1 ))))))):named a9 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(= (member$i ?v0 (streams$f ?v1 ))(exists ((?v2 A_stream_list$ )(?v3 A_stream_list_stream$ ))(and (= ?v0 (sCons$f ?v2 ?v3 ))(and (member$j ?v2 ?v1 )(member$i ?v3 (streams$f ?v1 ))))))):named a10 ))
(assert (! (forall ((?v0 A_list_list_stream_stream$ )(?v1 A_list_list_stream_set$ ))(= (member$k ?v0 (streams$g ?v1 ))(exists ((?v2 A_list_list_stream$ )(?v3 A_list_list_stream_stream$ ))(and (= ?v0 (sCons$g ?v2 ?v3 ))(and (member$g ?v2 ?v1 )(member$k ?v3 (streams$g ?v1 ))))))):named a11 ))
(assert (! (forall ((?v0 A_stream_stream_list_stream$ )(?v1 A_stream_stream_list_set$ ))(= (member$l ?v0 (streams$h ?v1 ))(exists ((?v2 A_stream_stream_list$ )(?v3 A_stream_stream_list_stream$ ))(and (= ?v0 (sCons$h ?v2 ?v3 ))(and (member$m ?v2 ?v1 )(member$l ?v3 (streams$h ?v1 ))))))):named a12 ))
(assert (! (forall ((?v0 A_list_stream_list_stream$ )(?v1 A_list_stream_list_set$ ))(= (member$n ?v0 (streams$i ?v1 ))(exists ((?v2 A_list_stream_list$ )(?v3 A_list_stream_list_stream$ ))(and (= ?v0 (sCons$i ?v2 ?v3 ))(and (member$o ?v2 ?v1 )(member$n ?v3 (streams$i ?v1 ))))))):named a13 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (streams$ ?v1 ))(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$ ?v3 (streams$ ?v1 ))))false )))false )):named a14 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$a ?v1 ))))false )))false )):named a15 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (and (member$d ?v0 (streams$b ?v1 ))(forall ((?v2 A_list$ )(?v3 A_list_stream$ ))(=> (and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$d ?v3 (streams$b ?v1 ))))false )))false )):named a16 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (and (member$e ?v0 (streams$c ?v1 ))(forall ((?v2 A_list_stream$ )(?v3 A_list_stream_stream$ ))(=> (and (= ?v0 (sCons$c ?v2 ?v3 ))(and (member$d ?v2 ?v1 )(member$e ?v3 (streams$c ?v1 ))))false )))false )):named a17 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$f ?v0 (streams$d ?v1 ))(forall ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(=> (and (= ?v0 (sCons$d ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$f ?v3 (streams$d ?v1 ))))false )))false )):named a18 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_set$ ))(=> (and (member$g ?v0 (streams$e ?v1 ))(forall ((?v2 A_list_list$ )(?v3 A_list_list_stream$ ))(=> (and (= ?v0 (sCons$e ?v2 ?v3 ))(and (member$h ?v2 ?v1 )(member$g ?v3 (streams$e ?v1 ))))false )))false )):named a19 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(=> (and (member$i ?v0 (streams$f ?v1 ))(forall ((?v2 A_stream_list$ )(?v3 A_stream_list_stream$ ))(=> (and (= ?v0 (sCons$f ?v2 ?v3 ))(and (member$j ?v2 ?v1 )(member$i ?v3 (streams$f ?v1 ))))false )))false )):named a20 ))
(assert (! (forall ((?v0 A_list_list_stream_stream$ )(?v1 A_list_list_stream_set$ ))(=> (and (member$k ?v0 (streams$g ?v1 ))(forall ((?v2 A_list_list_stream$ )(?v3 A_list_list_stream_stream$ ))(=> (and (= ?v0 (sCons$g ?v2 ?v3 ))(and (member$g ?v2 ?v1 )(member$k ?v3 (streams$g ?v1 ))))false )))false )):named a21 ))
(assert (! (forall ((?v0 A_stream_stream_list_stream$ )(?v1 A_stream_stream_list_set$ ))(=> (and (member$l ?v0 (streams$h ?v1 ))(forall ((?v2 A_stream_stream_list$ )(?v3 A_stream_stream_list_stream$ ))(=> (and (= ?v0 (sCons$h ?v2 ?v3 ))(and (member$m ?v2 ?v1 )(member$l ?v3 (streams$h ?v1 ))))false )))false )):named a22 ))
(assert (! (forall ((?v0 A_list_stream_list_stream$ )(?v1 A_list_stream_list_set$ ))(=> (and (member$n ?v0 (streams$i ?v1 ))(forall ((?v2 A_list_stream_list$ )(?v3 A_list_stream_list_stream$ ))(=> (and (= ?v0 (sCons$i ?v2 ?v3 ))(and (member$o ?v2 ?v1 )(member$n ?v3 (streams$i ?v1 ))))false )))false )):named a23 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_set$ ))(=> (and (fun_app$ ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$ ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (member$b ?v4 ?v2 )(or (fun_app$ ?v0 ?v5 )(member$ ?v5 (streams$ ?v2 )))))))))(member$ ?v1 (streams$ ?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_stream_stream_bool_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 A_stream_stream$ ))(=> (fun_app$a ?v0 ?v3 )(exists ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (member$ ?v4 ?v2 )(or (fun_app$a ?v0 ?v5 )(member$c ?v5 (streams$a ?v2 )))))))))(member$c ?v1 (streams$a ?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_list_stream_bool_fun$ )(?v1 A_list_stream$ )(?v2 A_list_set$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_list_stream$ ))(=> (fun_app$b ?v0 ?v3 )(exists ((?v4 A_list$ )(?v5 A_list_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (member$a ?v4 ?v2 )(or (fun_app$b ?v0 ?v5 )(member$d ?v5 (streams$b ?v2 )))))))))(member$d ?v1 (streams$b ?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_list_stream_stream_bool_fun$ )(?v1 A_list_stream_stream$ )(?v2 A_list_stream_set$ ))(=> (and (fun_app$c ?v0 ?v1 )(forall ((?v3 A_list_stream_stream$ ))(=> (fun_app$c ?v0 ?v3 )(exists ((?v4 A_list_stream$ )(?v5 A_list_stream_stream$ ))(and (= ?v3 (sCons$c ?v4 ?v5 ))(and (member$d ?v4 ?v2 )(or (fun_app$c ?v0 ?v5 )(member$e ?v5 (streams$c ?v2 )))))))))(member$e ?v1 (streams$c ?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_stream_stream_stream_bool_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(=> (and (fun_app$d ?v0 ?v1 )(forall ((?v3 A_stream_stream_stream$ ))(=> (fun_app$d ?v0 ?v3 )(exists ((?v4 A_stream_stream$ )(?v5 A_stream_stream_stream$ ))(and (= ?v3 (sCons$d ?v4 ?v5 ))(and (member$c ?v4 ?v2 )(or (fun_app$d ?v0 ?v5 )(member$f ?v5 (streams$d ?v2 )))))))))(member$f ?v1 (streams$d ?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_list_list_stream_bool_fun$ )(?v1 A_list_list_stream$ )(?v2 A_list_list_set$ ))(=> (and (fun_app$e ?v0 ?v1 )(forall ((?v3 A_list_list_stream$ ))(=> (fun_app$e ?v0 ?v3 )(exists ((?v4 A_list_list$ )(?v5 A_list_list_stream$ ))(and (= ?v3 (sCons$e ?v4 ?v5 ))(and (member$h ?v4 ?v2 )(or (fun_app$e ?v0 ?v5 )(member$g ?v5 (streams$e ?v2 )))))))))(member$g ?v1 (streams$e ?v2 )))):named a29 ))
(assert (! (forall ((?v0 A_stream_list_stream_bool_fun$ )(?v1 A_stream_list_stream$ )(?v2 A_stream_list_set$ ))(=> (and (fun_app$f ?v0 ?v1 )(forall ((?v3 A_stream_list_stream$ ))(=> (fun_app$f ?v0 ?v3 )(exists ((?v4 A_stream_list$ )(?v5 A_stream_list_stream$ ))(and (= ?v3 (sCons$f ?v4 ?v5 ))(and (member$j ?v4 ?v2 )(or (fun_app$f ?v0 ?v5 )(member$i ?v5 (streams$f ?v2 )))))))))(member$i ?v1 (streams$f ?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_list_list_stream_stream_bool_fun$ )(?v1 A_list_list_stream_stream$ )(?v2 A_list_list_stream_set$ ))(=> (and (fun_app$g ?v0 ?v1 )(forall ((?v3 A_list_list_stream_stream$ ))(=> (fun_app$g ?v0 ?v3 )(exists ((?v4 A_list_list_stream$ )(?v5 A_list_list_stream_stream$ ))(and (= ?v3 (sCons$g ?v4 ?v5 ))(and (member$g ?v4 ?v2 )(or (fun_app$g ?v0 ?v5 )(member$k ?v5 (streams$g ?v2 )))))))))(member$k ?v1 (streams$g ?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_stream_stream_list_stream_bool_fun$ )(?v1 A_stream_stream_list_stream$ )(?v2 A_stream_stream_list_set$ ))(=> (and (fun_app$h ?v0 ?v1 )(forall ((?v3 A_stream_stream_list_stream$ ))(=> (fun_app$h ?v0 ?v3 )(exists ((?v4 A_stream_stream_list$ )(?v5 A_stream_stream_list_stream$ ))(and (= ?v3 (sCons$h ?v4 ?v5 ))(and (member$m ?v4 ?v2 )(or (fun_app$h ?v0 ?v5 )(member$l ?v5 (streams$h ?v2 )))))))))(member$l ?v1 (streams$h ?v2 )))):named a32 ))
(assert (! (forall ((?v0 A_list_stream_list_stream_bool_fun$ )(?v1 A_list_stream_list_stream$ )(?v2 A_list_stream_list_set$ ))(=> (and (fun_app$i ?v0 ?v1 )(forall ((?v3 A_list_stream_list_stream$ ))(=> (fun_app$i ?v0 ?v3 )(exists ((?v4 A_list_stream_list$ )(?v5 A_list_stream_list_stream$ ))(and (= ?v3 (sCons$i ?v4 ?v5 ))(and (member$o ?v4 ?v2 )(or (fun_app$i ?v0 ?v5 )(member$n ?v5 (streams$i ?v2 )))))))))(member$n ?v1 (streams$i ?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list$ )(?v2 A_stream_stream$ ))(= (shift$a (append$ ?v0 ?v1 )?v2 )(shift$a ?v0 (shift$a ?v1 ?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list$ )(?v2 A_list_stream$ ))(= (shift$b (append$a ?v0 ?v1 )?v2 )(shift$b ?v0 (shift$b ?v1 ?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ )(?v2 A_stream$ ))(= (shift$ (append$b ?v0 ?v1 )?v2 )(shift$ ?v0 (shift$ ?v1 ?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(! (= (shift$a nil$b ?v0 )?v0 ):pattern ((shift$a nil$b ?v0 )))):named a37 ))
(assert (! (forall ((?v0 A_list_stream$ ))(! (= (shift$b nil$a ?v0 )?v0 ):pattern ((shift$b nil$a ?v0 )))):named a38 ))
(assert (! (forall ((?v0 A_stream$ ))(! (= (shift$ nil$ ?v0 )?v0 ):pattern ((shift$ nil$ ?v0 )))):named a39 ))
(assert (! (forall ((?v0 A$ )(?v1 A_list$ )(?v2 A_set$ ))(= (member$a (cons$ ?v0 ?v1 )(lists$ ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (lists$ ?v2 ))))):named a40 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_list$ )(?v2 A_stream_set$ ))(= (member$j (cons$b ?v0 ?v1 )(lists$a ?v2 ))(and (member$ ?v0 ?v2 )(member$j ?v1 (lists$a ?v2 ))))):named a41 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_list$ )(?v2 A_list_set$ ))(= (member$h (cons$a ?v0 ?v1 )(lists$b ?v2 ))(and (member$a ?v0 ?v2 )(member$h ?v1 (lists$b ?v2 ))))):named a42 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_stream_list$ )(?v2 A_list_stream_set$ ))(= (member$o (cons$d ?v0 ?v1 )(lists$c ?v2 ))(and (member$d ?v0 ?v2 )(member$o ?v1 (lists$c ?v2 ))))):named a43 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_list$ )(?v2 A_stream_stream_set$ ))(= (member$m (cons$c ?v0 ?v1 )(lists$d ?v2 ))(and (member$c ?v0 ?v2 )(member$m ?v1 (lists$d ?v2 ))))):named a44 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list_list$ )(?v2 A_list_list_set$ ))(= (member$p (cons$e ?v0 ?v1 )(lists$e ?v2 ))(and (member$h ?v0 ?v2 )(member$p ?v1 (lists$e ?v2 ))))):named a45 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list_list$ )(?v2 A_stream_list_set$ ))(= (member$q (cons$f ?v0 ?v1 )(lists$f ?v2 ))(and (member$j ?v0 ?v2 )(member$q ?v1 (lists$f ?v2 ))))):named a46 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_stream_list$ )(?v2 A_list_list_stream_set$ ))(= (member$r (cons$g ?v0 ?v1 )(lists$g ?v2 ))(and (member$g ?v0 ?v2 )(member$r ?v1 (lists$g ?v2 ))))):named a47 ))
(assert (! (forall ((?v0 A_stream_stream_list$ )(?v1 A_stream_stream_list_list$ )(?v2 A_stream_stream_list_set$ ))(= (member$s (cons$h ?v0 ?v1 )(lists$h ?v2 ))(and (member$m ?v0 ?v2 )(member$s ?v1 (lists$h ?v2 ))))):named a48 ))
(assert (! (forall ((?v0 A_list_stream_list$ )(?v1 A_list_stream_list_list$ )(?v2 A_list_stream_list_set$ ))(= (member$t (cons$i ?v0 ?v1 )(lists$i ?v2 ))(and (member$o ?v0 ?v2 )(member$t ?v1 (lists$i ?v2 ))))):named a49 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$ (stl$ ?v0 )(streams$ ?v1 ))(member$b (shd$ ?v0 )?v1 ))(member$ ?v0 (streams$ ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$c (stl$a ?v0 )(streams$a ?v1 ))(member$ (shd$a ?v0 )?v1 ))(member$c ?v0 (streams$a ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (and (member$d (stl$b ?v0 )(streams$b ?v1 ))(member$a (shd$b ?v0 )?v1 ))(member$d ?v0 (streams$b ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (and (member$e (stl$c ?v0 )(streams$c ?v1 ))(member$d (shd$c ?v0 )?v1 ))(member$e ?v0 (streams$c ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$f (stl$d ?v0 )(streams$d ?v1 ))(member$c (shd$d ?v0 )?v1 ))(member$f ?v0 (streams$d ?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_set$ ))(=> (and (member$g (stl$e ?v0 )(streams$e ?v1 ))(member$h (shd$e ?v0 )?v1 ))(member$g ?v0 (streams$e ?v1 )))):named a55 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(=> (and (member$i (stl$f ?v0 )(streams$f ?v1 ))(member$j (shd$f ?v0 )?v1 ))(member$i ?v0 (streams$f ?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_list_list_stream_stream$ )(?v1 A_list_list_stream_set$ ))(=> (and (member$k (stl$g ?v0 )(streams$g ?v1 ))(member$g (shd$g ?v0 )?v1 ))(member$k ?v0 (streams$g ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_stream_stream_list_stream$ )(?v1 A_stream_stream_list_set$ ))(=> (and (member$l (stl$h ?v0 )(streams$h ?v1 ))(member$m (shd$h ?v0 )?v1 ))(member$l ?v0 (streams$h ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_list_stream_list_stream$ )(?v1 A_list_stream_list_set$ ))(=> (and (member$n (stl$i ?v0 )(streams$i ?v1 ))(member$o (shd$i ?v0 )?v1 ))(member$n ?v0 (streams$i ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (streams$ ?v1 ))(=> (and (member$b (shd$ ?v0 )?v1 )(member$ (stl$ ?v0 )(streams$ ?v1 )))false ))false )):named a60 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(=> (and (member$ (shd$a ?v0 )?v1 )(member$c (stl$a ?v0 )(streams$a ?v1 )))false ))false )):named a61 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_set$ ))(=> (and (member$d ?v0 (streams$b ?v1 ))(=> (and (member$a (shd$b ?v0 )?v1 )(member$d (stl$b ?v0 )(streams$b ?v1 )))false ))false )):named a62 ))
(assert (! (forall ((?v0 A_list_stream_stream$ )(?v1 A_list_stream_set$ ))(=> (and (member$e ?v0 (streams$c ?v1 ))(=> (and (member$d (shd$c ?v0 )?v1 )(member$e (stl$c ?v0 )(streams$c ?v1 )))false ))false )):named a63 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$f ?v0 (streams$d ?v1 ))(=> (and (member$c (shd$d ?v0 )?v1 )(member$f (stl$d ?v0 )(streams$d ?v1 )))false ))false )):named a64 ))
(assert (! (forall ((?v0 A_list_list_stream$ )(?v1 A_list_list_set$ ))(=> (and (member$g ?v0 (streams$e ?v1 ))(=> (and (member$h (shd$e ?v0 )?v1 )(member$g (stl$e ?v0 )(streams$e ?v1 )))false ))false )):named a65 ))
(assert (! (forall ((?v0 A_stream_list_stream$ )(?v1 A_stream_list_set$ ))(=> (and (member$i ?v0 (streams$f ?v1 ))(=> (and (member$j (shd$f ?v0 )?v1 )(member$i (stl$f ?v0 )(streams$f ?v1 )))false ))false )):named a66 ))
(assert (! (forall ((?v0 A_list_list_stream_stream$ )(?v1 A_list_list_stream_set$ ))(=> (and (member$k ?v0 (streams$g ?v1 ))(=> (and (member$g (shd$g ?v0 )?v1 )(member$k (stl$g ?v0 )(streams$g ?v1 )))false ))false )):named a67 ))
(assert (! (forall ((?v0 A_stream_stream_list_stream$ )(?v1 A_stream_stream_list_set$ ))(=> (and (member$l ?v0 (streams$h ?v1 ))(=> (and (member$m (shd$h ?v0 )?v1 )(member$l (stl$h ?v0 )(streams$h ?v1 )))false ))false )):named a68 ))
(assert (! (forall ((?v0 A_list_stream_list_stream$ )(?v1 A_list_stream_list_set$ ))(=> (and (member$n ?v0 (streams$i ?v1 ))(=> (and (member$o (shd$i ?v0 )?v1 )(member$n (stl$i ?v0 )(streams$i ?v1 )))false ))false )):named a69 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$b ?v2 (set$ ?v0 ))(member$b ?v2 ?v1 )))(member$a ?v0 (lists$ ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_set$ ))(=> (forall ((?v2 A_stream$ ))(=> (member$ ?v2 (set$a ?v0 ))(member$ ?v2 ?v1 )))(member$j ?v0 (lists$a ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_set$ ))(=> (forall ((?v2 A_list$ ))(=> (member$a ?v2 (set$b ?v0 ))(member$a ?v2 ?v1 )))(member$h ?v0 (lists$b ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_list_stream_list$ )(?v1 A_list_stream_set$ ))(=> (forall ((?v2 A_list_stream$ ))(=> (member$d ?v2 (set$c ?v0 ))(member$d ?v2 ?v1 )))(member$o ?v0 (lists$c ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_stream_stream_list$ )(?v1 A_stream_stream_set$ ))(=> (forall ((?v2 A_stream_stream$ ))(=> (member$c ?v2 (set$d ?v0 ))(member$c ?v2 ?v1 )))(member$m ?v0 (lists$d ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_list_list_list$ )(?v1 A_list_list_set$ ))(=> (forall ((?v2 A_list_list$ ))(=> (member$h ?v2 (set$e ?v0 ))(member$h ?v2 ?v1 )))(member$p ?v0 (lists$e ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_stream_list_list$ )(?v1 A_stream_list_set$ ))(=> (forall ((?v2 A_stream_list$ ))(=> (member$j ?v2 (set$f ?v0 ))(member$j ?v2 ?v1 )))(member$q ?v0 (lists$f ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_list_list_stream_list$ )(?v1 A_list_list_stream_set$ ))(=> (forall ((?v2 A_list_list_stream$ ))(=> (member$g ?v2 (set$g ?v0 ))(member$g ?v2 ?v1 )))(member$r ?v0 (lists$g ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_stream_stream_list_list$ )(?v1 A_stream_stream_list_set$ ))(=> (forall ((?v2 A_stream_stream_list$ ))(=> (member$m ?v2 (set$h ?v0 ))(member$m ?v2 ?v1 )))(member$s ?v0 (lists$h ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_list_stream_list_list$ )(?v1 A_list_stream_list_set$ ))(=> (forall ((?v2 A_list_stream_list$ ))(=> (member$o ?v2 (set$i ?v0 ))(member$o ?v2 ?v1 )))(member$t ?v0 (lists$i ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_stream_stream_list$ )(?v1 A_stream_stream_list$ )(?v2 A_stream_stream_set$ ))(= (member$m (append$c ?v0 ?v1 )(lists$d ?v2 ))(and (member$m ?v0 (lists$d ?v2 ))(member$m ?v1 (lists$d ?v2 ))))):named a80 ))
(assert (! (forall ((?v0 A_list_stream_list$ )(?v1 A_list_stream_list$ )(?v2 A_list_stream_set$ ))(= (member$o (append$d ?v0 ?v1 )(lists$c ?v2 ))(and (member$o ?v0 (lists$c ?v2 ))(member$o ?v1 (lists$c ?v2 ))))):named a81 ))
(assert (! (forall ((?v0 A_stream_list_list$ )(?v1 A_stream_list_list$ )(?v2 A_stream_list_set$ ))(= (member$q (append$e ?v0 ?v1 )(lists$f ?v2 ))(and (member$q ?v0 (lists$f ?v2 ))(member$q ?v1 (lists$f ?v2 ))))):named a82 ))
(assert (! (forall ((?v0 A_list_list_list$ )(?v1 A_list_list_list$ )(?v2 A_list_list_set$ ))(= (member$p (append$f ?v0 ?v1 )(lists$e ?v2 ))(and (member$p ?v0 (lists$e ?v2 ))(member$p ?v1 (lists$e ?v2 ))))):named a83 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list$ )(?v2 A_list_set$ ))(= (member$h (append$a ?v0 ?v1 )(lists$b ?v2 ))(and (member$h ?v0 (lists$b ?v2 ))(member$h ?v1 (lists$b ?v2 ))))):named a84 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list$ )(?v2 A_stream_set$ ))(= (member$j (append$ ?v0 ?v1 )(lists$a ?v2 ))(and (member$j ?v0 (lists$a ?v2 ))(member$j ?v1 (lists$a ?v2 ))))):named a85 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ )(?v2 A_set$ ))(= (member$a (append$b ?v0 ?v1 )(lists$ ?v2 ))(and (member$a ?v0 (lists$ ?v2 ))(member$a ?v1 (lists$ ?v2 ))))):named a86 ))
(assert (! (forall ((?v0 A_stream_stream_set$ ))(member$m nil$c (lists$d ?v0 ))):named a87 ))
(assert (! (forall ((?v0 A_list_stream_set$ ))(member$o nil$d (lists$c ?v0 ))):named a88 ))
(assert (! (forall ((?v0 A_stream_list_set$ ))(member$q nil$f (lists$f ?v0 ))):named a89 ))
(assert (! (forall ((?v0 A_list_list_set$ ))(member$p nil$e (lists$e ?v0 ))):named a90 ))
(assert (! (forall ((?v0 A_list_set$ ))(member$h nil$a (lists$b ?v0 ))):named a91 ))
(assert (! (forall ((?v0 A_stream_set$ ))(member$j nil$b (lists$a ?v0 ))):named a92 ))
(assert (! (forall ((?v0 A_set$ ))(member$a nil$ (lists$ ?v0 ))):named a93 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_list$ )(?v2 A_stream$ ))(= (smap$ ?v0 (shift$ ?v1 ?v2 ))(shift$ (map$ ?v0 ?v1 )(smap$ ?v0 ?v2 )))):named a94 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list_list$ )(?v2 A_stream_list$ )(?v3 A_stream_list_list$ ))(= (= (cons$f ?v0 ?v1 )(cons$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a95 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list_list$ )(?v2 A_list_list$ )(?v3 A_list_list_list$ ))(= (= (cons$e ?v0 ?v1 )(cons$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a96 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_list$ )(?v2 A_stream_stream$ )(?v3 A_stream_stream_list$ ))(= (= (cons$c ?v0 ?v1 )(cons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a97 ))
(assert (! (forall ((?v0 A_list_stream$ )(?v1 A_list_stream_list$ )(?v2 A_list_stream$ )(?v3 A_list_stream_list$ ))(= (= (cons$d ?v0 ?v1 )(cons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a98 ))
(assert (! (forall ((?v0 A$ )(?v1 A_list$ )(?v2 A$ )(?v3 A_list$ ))(= (= (cons$ ?v0 ?v1 )(cons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a99 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list_list$ )(?v2 A_list$ )(?v3 A_list_list$ ))(= (= (cons$a ?v0 ?v1 )(cons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a100 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_list$ )(?v2 A_stream$ )(?v3 A_stream_list$ ))(= (= (cons$b ?v0 ?v1 )(cons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a101 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list$ )(?v2 A_stream_list$ ))(= (= (append$ ?v0 ?v1 )(append$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a102 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list$ )(?v2 A_list_list$ ))(= (= (append$a ?v0 ?v1 )(append$a ?v0 ?v2 ))(= ?v1 ?v2 ))):named a103 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ )(?v2 A_list$ ))(= (= (append$b ?v0 ?v1 )(append$b ?v0 ?v2 ))(= ?v1 ?v2 ))):named a104 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list$ )(?v2 A_stream_list$ ))(= (= (append$ ?v0 ?v1 )(append$ ?v2 ?v1 ))(= ?v0 ?v2 ))):named a105 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list$ )(?v2 A_list_list$ ))(= (= (append$a ?v0 ?v1 )(append$a ?v2 ?v1 ))(= ?v0 ?v2 ))):named a106 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ )(?v2 A_list$ ))(= (= (append$b ?v0 ?v1 )(append$b ?v2 ?v1 ))(= ?v0 ?v2 ))):named a107 ))
(assert (! (forall ((?v0 A_stream_list$ )(?v1 A_stream_list$ )(?v2 A_stream_list$ ))(= (append$ (append$ ?v0 ?v1 )?v2 )(append$ ?v0 (append$ ?v1 ?v2 )))):named a108 ))
(assert (! (forall ((?v0 A_list_list$ )(?v1 A_list_list$ )(?v2 A_list_list$ ))(= (append$a (append$a ?v0 ?v1 )?v2 )(append$a ?v0 (append$a ?v1 ?v2 )))):named a109 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ )(?v2 A_list$ ))(= (append$b (append$b ?v0 ?v1 )?v2 )(append$b ?v0 (append$b ?v1 ?v2 )))):named a110 ))
(check-sat )
;(get-unsat-core )
