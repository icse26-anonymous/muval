;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_process_a_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_process_bool_fun$ 0 )
(declare-sort A_a_process_a_fun_fun$ 0 )
(declare-sort A_b_process_term_a_fun$ 0 )
(declare-sort B_a_b_process_term_fun$ 0 )
(declare-sort A_process_a_process_fun$ 0 )
(declare-sort A_b_process_term_bool_fun$ 0 )
(declare-sort A_a_b_process_term_a_fun_fun$ 0 )
(declare-sort A_a_process_a_process_fun_fun$ 0 )
(declare-sort A_process_a_process_a_fun_fun$ 0 )
(declare-sort A_process_a_b_process_term_fun$ 0 )
(declare-sort A_a_b_process_term_bool_fun_fun$ 0 )
(declare-sort A_b_process_term_a_bool_fun_fun$ 0 )
(declare-sort A_process_a_stream_bool_fun_fun$ 0 )
(declare-sort A_process_process_a_process_fun$ 0 )
(declare-sort A_process_a_process_bool_fun_fun$ 0 )
(declare-sort A_b_process_term_process_bool_fun$ 0 )
(declare-sort A_b_process_term_a_b_process_term_fun$ 0 )
(declare-sort A_process_a_process_a_process_fun_fun$ 0 )
(declare-sort B_bool_fun_a_b_process_term_bool_fun_fun$ 0 )
(declare-sort A_a_b_process_term_a_b_process_term_fun_fun$ 0 )
(declare-sort A_b_process_term_a_b_process_term_a_fun_fun$ 0 )
(declare-sort A_b_process_term_process_a_b_process_term_fun$ 0 )
(declare-sort A_process_a_process_process_a_process_fun_fun$ 0 )
(declare-sort A_b_process_term_a_b_process_term_bool_fun_fun$ 0 )
(declare-sort A_b_process_term_process_a_process_bool_fun_fun$ 0 )
(declare-sort A_process_a_b_process_term_process_bool_fun_fun$ 0 )
(declare-sort A_process_a_process_a_fun_fun_a_process_a_fun_fun$ 0 )
(declare-sort A_process_process_a_process_process_a_process_fun_fun$ 0 )
(declare-sort A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ 0 )
(declare-sort A_b_process_term_process_a_b_process_term_process_bool_fun_fun$ 0 )
(declare-sort A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ 0 )
(declare-sort A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ 0 )
(declare-sort A_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun$ 0 )
(declare-sort A_a_b_process_term_bool_fun_fun_a_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun_fun$ 0 )
(declare-sort A_process_bool_fun_a_a_b_process_term_bool_fun_fun_a_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_process$ 0)
(declare-fun prefOf$ (A_process$)A$)
(declare-fun contOf$ (A_process$)A_process$)
(declare-fun action$ (A$ A_process$ )A_process$)
(declare-fun ch1Of$ (A_process$)A_process$)
(declare-fun ch2Of$ (A_process$)A_process$)
(declare-fun choice$ (A_process$ A_process$ )A_process$)
(declare-sort A_b_process_term$ 0)
(declare-fun select$ (A_b_process_term$)B$)
(declare-fun var$ (B$ )A_b_process_term$)
(declare-fun selecta$ (A_b_process_term$)A_process$)
(declare-fun proc$ (A_process$ )A_b_process_term$)
(declare-fun selectb$ (A_b_process_term$)A$)
(declare-fun selectc$ (A_b_process_term$)A_b_process_term$)
(declare-fun act$ (A$ A_b_process_term$ )A_b_process_term$)
(declare-fun selectd$ (A_b_process_term$)A_b_process_term$)
(declare-fun selecte$ (A_b_process_term$)A_b_process_term$)
(declare-fun ch$ (A_b_process_term$ A_b_process_term$ )A_b_process_term$)
(declare-sort A_b_process_term_process$ 0)
(declare-sort A_stream$ 0)
(declare-sort A_process_process$ 0)
(declare-fun prefOf$a (A_b_process_term_process$)A_b_process_term$)
(declare-fun contOf$a (A_b_process_term_process$)A_b_process_term_process$)
(declare-fun action$a (A_b_process_term$ A_b_process_term_process$ )A_b_process_term_process$)
(declare-fun ch1Of$a (A_b_process_term_process$)A_b_process_term_process$)
(declare-fun ch2Of$a (A_b_process_term_process$)A_b_process_term_process$)
(declare-fun choice$a (A_b_process_term_process$ A_b_process_term_process$ )A_b_process_term_process$)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun prefOf$b (A_process_process$)A_process$)
(declare-fun contOf$b (A_process_process$)A_process_process$)
(declare-fun action$b (A_process$ A_process_process$ )A_process_process$)
(declare-fun ch1Of$b (A_process_process$)A_process_process$)
(declare-fun ch2Of$b (A_process_process$)A_process_process$)
(declare-fun choice$b (A_process_process$ A_process_process$ )A_process_process$)
(declare-fun p$ ()A_process$ )
(declare-fun q$ ()A_process$ )
(declare-fun p$a ()A_process$ )
(declare-fun pa$ ()A_process$ )
(declare-fun q$a ()A_process$ )
(declare-fun qa$ ()A_process$ )
(declare-fun uu$ ()A_process_a_process_process_a_process_fun_fun$ )
(declare-fun cH1$ (B_a_b_process_term_fun$ A_b_process_term$ )A_b_process_term$ )
(declare-fun cH2$ (B_a_b_process_term_fun$ A_b_process_term$ )A_b_process_term$ )
(declare-fun sys$ ()B_a_b_process_term_fun$ )
(declare-fun uua$ ()A_process_process_a_process_process_a_process_fun_fun$ )
(declare-fun uub$ ()A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ )
(declare-fun uuc$ ()A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ )
(declare-fun uud$ ()A_a_process_a_fun_fun$ )
(declare-fun uue$ ()A_process_a_process_a_fun_fun$ )
(declare-fun uuf$ ()B_bool_fun$ )
(declare-fun uug$ ()A_a_b_process_term_bool_fun_fun$ )
(declare-fun uuh$ ()A_b_process_term_a_b_process_term_bool_fun_fun$ )
(declare-fun uui$ ()A_a_bool_fun_fun$ )
(declare-fun uuj$ ()A_process_a_process_bool_fun_fun$ )
(declare-fun uuk$ ()A_a_process_a_process_fun_fun$ )
(declare-fun uul$ ()A_process_a_process_a_process_fun_fun$ )
(declare-fun uum$ ()A_a_process_a_process_fun_fun$ )
(declare-fun uun$ ()A_process_a_process_a_process_fun_fun$ )
(declare-fun uuo$ ()A_process_a_process_a_process_fun_fun$ )
(declare-fun uup$ ()B_a_b_process_term_fun$ )
(declare-fun uuq$ ()A_process_a_b_process_term_fun$ )
(declare-fun uur$ ()A_a_b_process_term_a_b_process_term_fun_fun$ )
(declare-fun uus$ ()A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ )
(declare-fun uut$ ()A_process_a_b_process_term_fun$ )
(declare-fun uuu$ ()A_a_b_process_term_a_b_process_term_fun_fun$ )
(declare-fun uuv$ ()A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ )
(declare-fun uuw$ ()A_process_a_b_process_term_fun$ )
(declare-fun uux$ ()A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ )
(declare-fun uuy$ ()B_a_fun$ )
(declare-fun uuz$ ()A_process_a_fun$ )
(declare-fun uva$ ()A_a_b_process_term_a_fun_fun$ )
(declare-fun uvb$ ()A_b_process_term_a_b_process_term_a_fun_fun$ )
(declare-fun cont$ (B_a_b_process_term_fun$ A_b_process_term$ )A_b_process_term$ )
(declare-fun pref$ (B_a_b_process_term_fun$ A_b_process_term$ )A$ )
(declare-fun isACT$ (B_a_b_process_term_fun$ )A_b_process_term_bool_fun$ )
(declare-fun trace$ (A_process$ A_stream$ )Bool )
(declare-fun fun_app$ (A_process_a_b_process_term_fun$ A_process$ )A_b_process_term$ )
(declare-fun guarded$ (B_a_b_process_term_fun$ )Bool )
(declare-fun smember$ (A$ A_stream$ )Bool )
(declare-fun fun_app$a (A_process_a_fun$ A_process$ )A$ )
(declare-fun fun_app$b (A_process_bool_fun$ A_process$ )Bool )
(declare-fun fun_app$c (A_process_a_process_bool_fun_fun$ A_process$ )A_process_bool_fun$ )
(declare-fun fun_app$d (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$e (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$f (A_b_process_term_a_b_process_term_fun$ A_b_process_term$ )A_b_process_term$ )
(declare-fun fun_app$g (A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ A_b_process_term$ )A_b_process_term_a_b_process_term_fun$ )
(declare-fun fun_app$h (A_b_process_term_process_a_b_process_term_fun$ A_b_process_term_process$ )A_b_process_term$ )
(declare-fun fun_app$i (A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ A_b_process_term$ )A_b_process_term_process_a_b_process_term_fun$ )
(declare-fun fun_app$j (A_process_process_a_process_fun$ A_process_process$ )A_process$ )
(declare-fun fun_app$k (A_process_a_process_process_a_process_fun_fun$ A_process$ )A_process_process_a_process_fun$ )
(declare-fun fun_app$l (A_process_a_process_fun$ A_process$ )A_process$ )
(declare-fun fun_app$m (A_process_a_process_a_process_fun_fun$ A_process$ )A_process_a_process_fun$ )
(declare-fun fun_app$n (A_b_process_term_a_fun$ A_b_process_term$ )A$ )
(declare-fun fun_app$o (A_a_b_process_term_a_fun_fun$ A$ )A_b_process_term_a_fun$ )
(declare-fun fun_app$p (A_a_process_a_fun_fun$ A$ )A_process_a_fun$ )
(declare-fun fun_app$q (A_a_b_process_term_a_b_process_term_fun_fun$ A$ )A_b_process_term_a_b_process_term_fun$ )
(declare-fun fun_app$r (A_a_process_a_process_fun_fun$ A$ )A_process_a_process_fun$ )
(declare-fun fun_app$s (A_b_process_term_a_b_process_term_a_fun_fun$ A_b_process_term$ )A_b_process_term_a_fun$ )
(declare-fun fun_app$t (A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ A_b_process_term_process$ )A_b_process_term_process_a_b_process_term_fun$ )
(declare-fun fun_app$u (A_process_process_a_process_process_a_process_fun_fun$ A_process_process$ )A_process_process_a_process_fun$ )
(declare-fun fun_app$v (A_process_a_process_a_fun_fun$ A_process$ )A_process_a_fun$ )
(declare-fun fun_app$w (A_b_process_term_bool_fun$ A_b_process_term$ )Bool )
(declare-fun fun_app$x (A_b_process_term_a_b_process_term_bool_fun_fun$ A_b_process_term$ )A_b_process_term_bool_fun$ )
(declare-fun fun_app$y (A_a_b_process_term_bool_fun_fun$ A$ )A_b_process_term_bool_fun$ )
(declare-fun fun_app$z (B_a_b_process_term_fun$ B$ )A_b_process_term$ )
(declare-fun isAction$ ()A_process_bool_fun$ )
(declare-fun isChoice$ (A_process$ )Bool )
(declare-fun solution$ (B_a_b_process_term_fun$ A_b_process_term$ )A_process$ )
(declare-fun fun_app$aa (B_a_fun$ B$ )A$ )
(declare-fun fun_app$ab (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$ac (A_process_a_process_a_fun_fun_a_process_a_fun_fun$ A_process_a_process_a_fun_fun$ )A_process_a_fun$ )
(declare-fun fun_app$ad (B_bool_fun_a_b_process_term_bool_fun_fun$ B_bool_fun$ )A_b_process_term_bool_fun$ )
(declare-fun fun_app$ae (A_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun$ A_b_process_term_a_b_process_term_bool_fun_fun$ )A_b_process_term_bool_fun$ )
(declare-fun fun_app$af (A_a_b_process_term_bool_fun_fun_a_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun_fun$ A_a_b_process_term_bool_fun_fun$ )A_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun$ )
(declare-fun fun_app$ag (A_process_bool_fun_a_a_b_process_term_bool_fun_fun_a_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun_fun_fun$ A_process_bool_fun$ )A_a_b_process_term_bool_fun_fun_a_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun_fun$ )
(declare-fun fun_app$ah (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$ai (A_process_a_stream_bool_fun_fun$ A_process$ )A_stream_bool_fun$ )
(declare-fun fun_app$aj (A_b_process_term_process_bool_fun$ A_b_process_term_process$ )Bool )
(declare-fun fun_app$ak (A_b_process_term_process_a_b_process_term_process_bool_fun_fun$ A_b_process_term_process$ )A_b_process_term_process_bool_fun$ )
(declare-fun fun_app$al (A_b_process_term_process_a_process_bool_fun_fun$ A_b_process_term_process$ )A_process_bool_fun$ )
(declare-fun fun_app$am (A_b_process_term_a_bool_fun_fun$ A_b_process_term$ )A_bool_fun$ )
(declare-fun fun_app$an (A_process_a_b_process_term_process_bool_fun_fun$ A_process$ )A_b_process_term_process_bool_fun$ )
(declare-fun isAction$a (A_b_process_term_process$ )Bool )
(declare-fun isChoice$a (A_b_process_term_process$ )Bool )
(declare-fun undefined$ ()A_b_process_term$ )
(declare-fun stream_all$ (A_bool_fun$ A_stream$ )Bool )
(declare-fun undefined$a ()A$ )
(declare-fun undefined$b ()A_process$ )
(declare-fun pred_stream$ (A_bool_fun$ A_stream$ )Bool )
(declare-fun rel_process$ (A_b_process_term_a_b_process_term_bool_fun_fun$ A_b_process_term_process$ )A_b_process_term_process_bool_fun$ )
(declare-fun case_process$ (A_a_process_a_fun_fun$ )A_process_a_process_a_fun_fun_a_process_a_fun_fun$ )
(declare-fun pred_process$ (A_bool_fun$ )A_process_bool_fun$ )
(declare-fun rel_process$a (A_b_process_term_a_bool_fun_fun$ )A_b_process_term_process_a_process_bool_fun_fun$ )
(declare-fun rel_process$b (A_a_b_process_term_bool_fun_fun$ A_process$ )A_b_process_term_process_bool_fun$ )
(declare-fun rel_process$c (A_a_bool_fun_fun$ )A_process_a_process_bool_fun_fun$ )
(declare-fun case_process$a (A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ A_b_process_term_process$ )A_b_process_term$ )
(declare-fun case_process$b (A_a_process_a_process_fun_fun$ A_process_a_process_a_process_fun_fun$ A_process$ )A_process$ )
(declare-fun case_process$c (A_process_a_process_process_a_process_fun_fun$ A_process_process_a_process_process_a_process_fun_fun$ A_process_process$ )A_process$ )
(declare-fun case_process_term$ (B_a_fun$ A_process_a_fun$ A_a_b_process_term_a_fun_fun$ A_b_process_term_a_b_process_term_a_fun_fun$ A_b_process_term$ )A$ )
(declare-fun pred_process_term$ (A_bool_fun$ )B_bool_fun_a_b_process_term_bool_fun_fun$ )
(declare-fun case_process_term$a (B_bool_fun$ )A_process_bool_fun_a_a_b_process_term_bool_fun_fun_a_b_process_term_a_b_process_term_bool_fun_fun_a_b_process_term_bool_fun_fun_fun_fun$ )
(declare-fun case_process_term$b (B_a_b_process_term_fun$ A_process_a_b_process_term_fun$ A_a_b_process_term_a_b_process_term_fun_fun$ A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ A_b_process_term$ )A_b_process_term$ )
(assert (! (forall ((?v0 A_process$ ))(! (= (fun_app$ uuq$ ?v0 )(proc$ (contOf$ ?v0 ))):pattern ((fun_app$ uuq$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_process$ ))(! (= (fun_app$ uut$ ?v0 )(proc$ (ch2Of$ ?v0 ))):pattern ((fun_app$ uut$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_process$ ))(! (= (fun_app$ uuw$ ?v0 )(proc$ (ch1Of$ ?v0 ))):pattern ((fun_app$ uuw$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_process$ ))(! (= (fun_app$a uuz$ ?v0 )(prefOf$ ?v0 )):pattern ((fun_app$a uuz$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(! (= (fun_app$b (fun_app$c uuj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uuj$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$d (fun_app$e uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uui$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term$ ))(! (= (fun_app$f (fun_app$g uux$ ?v0 )?v1 )?v0 ):pattern ((fun_app$f (fun_app$g uux$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term_process$ ))(! (= (fun_app$h (fun_app$i uub$ ?v0 )?v1 )?v0 ):pattern ((fun_app$h (fun_app$i uub$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process_process$ ))(! (= (fun_app$j (fun_app$k uu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (fun_app$k uu$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(! (= (fun_app$l (fun_app$m uuo$ ?v0 )?v1 )?v0 ):pattern ((fun_app$l (fun_app$m uuo$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_process_term$ ))(! (= (fun_app$n (fun_app$o uva$ ?v0 )?v1 )?v0 ):pattern ((fun_app$n (fun_app$o uva$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ ))(! (= (fun_app$a (fun_app$p uud$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (fun_app$p uud$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term$ ))(! (= (fun_app$f (fun_app$g uuv$ ?v0 )?v1 )?v1 ):pattern ((fun_app$f (fun_app$g uuv$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(! (= (fun_app$l (fun_app$m uun$ ?v0 )?v1 )?v1 ):pattern ((fun_app$l (fun_app$m uun$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_process_term$ ))(! (= (fun_app$f (fun_app$q uur$ ?v0 )?v1 )?v1 ):pattern ((fun_app$f (fun_app$q uur$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ ))(! (= (fun_app$l (fun_app$r uuk$ ?v0 )?v1 )?v1 ):pattern ((fun_app$l (fun_app$r uuk$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term$ ))(! (= (fun_app$f (fun_app$g uus$ ?v0 )?v1 )undefined$ ):pattern ((fun_app$f (fun_app$g uus$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term$ ))(! (= (fun_app$n (fun_app$s uvb$ ?v0 )?v1 )undefined$a ):pattern ((fun_app$n (fun_app$s uvb$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_b_process_term_process$ )(?v1 A_b_process_term_process$ ))(! (= (fun_app$h (fun_app$t uuc$ ?v0 )?v1 )undefined$ ):pattern ((fun_app$h (fun_app$t uuc$ ?v0 )?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_process_process$ )(?v1 A_process_process$ ))(! (= (fun_app$j (fun_app$u uua$ ?v0 )?v1 )undefined$b ):pattern ((fun_app$j (fun_app$u uua$ ?v0 )?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(! (= (fun_app$l (fun_app$m uul$ ?v0 )?v1 )undefined$b ):pattern ((fun_app$l (fun_app$m uul$ ?v0 )?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(! (= (fun_app$a (fun_app$v uue$ ?v0 )?v1 )undefined$a ):pattern ((fun_app$a (fun_app$v uue$ ?v0 )?v1 )))):named a21 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_process_term$ ))(! (= (fun_app$f (fun_app$q uuu$ ?v0 )?v1 )undefined$ ):pattern ((fun_app$f (fun_app$q uuu$ ?v0 )?v1 )))):named a22 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ ))(! (= (fun_app$l (fun_app$r uum$ ?v0 )?v1 )undefined$b ):pattern ((fun_app$l (fun_app$r uum$ ?v0 )?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term$ ))(! (= (fun_app$w (fun_app$x uuh$ ?v0 )?v1 )false ):pattern ((fun_app$w (fun_app$x uuh$ ?v0 )?v1 )))):named a24 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_process_term$ ))(! (= (fun_app$w (fun_app$y uug$ ?v0 )?v1 )true ):pattern ((fun_app$w (fun_app$y uug$ ?v0 )?v1 )))):named a25 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$z uup$ ?v0 )undefined$ ):pattern ((fun_app$z uup$ ?v0 )))):named a26 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$aa uuy$ ?v0 )undefined$a ):pattern ((fun_app$aa uuy$ ?v0 )))):named a27 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$ab uuf$ ?v0 )false ):pattern ((fun_app$ab uuf$ ?v0 )))):named a28 ))
(assert (! (not (not (fun_app$w (isACT$ sys$ )(proc$ (choice$ pa$ qa$ ))))):named a29 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(= (= (proc$ ?v0 )(proc$ ?v1 ))(= ?v0 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ )(?v2 A_process$ )(?v3 A_process$ ))(= (= (choice$ ?v0 ?v1 )(choice$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a31 ))
(assert (! (= q$ (solution$ sys$ (proc$ p$ ))):named a32 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (and (=> (fun_app$w (isACT$ ?v0 )?v1 )false )(=> (not (fun_app$w (isACT$ ?v0 )?v1 ))false ))false )):named a33 ))
(assert (! (= (choice$ p$a q$a )(solution$ sys$ (proc$ (choice$ pa$ qa$ )))):named a34 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_process$ ))(! (= (fun_app$w (isACT$ ?v0 )(proc$ ?v1 ))(fun_app$b isAction$ ?v1 )):pattern ((fun_app$w (isACT$ ?v0 )(proc$ ?v1 ))))):named a35 ))
(assert (! (forall ((?v0 A_process$ ))(= (isChoice$ ?v0 )(exists ((?v1 A_process$ )(?v2 A_process$ ))(= ?v0 (choice$ ?v1 ?v2 ))))):named a36 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ )(?v2 A_process$ ))(=> (= ?v0 (choice$ ?v1 ?v2 ))(isChoice$ ?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(isChoice$ (choice$ ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(= (isChoice$ (solution$ ?v0 ?v1 ))(not (fun_app$w (isACT$ ?v0 )?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(not (fun_app$b isAction$ (choice$ ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(= (fun_app$b isAction$ (solution$ ?v0 ?v1 ))(fun_app$w (isACT$ ?v0 )?v1 ))):named a41 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (not (fun_app$w (isACT$ ?v0 )?v1 ))(isChoice$ (solution$ ?v0 ?v1 )))):named a42 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_process$ )(?v2 A_process$ ))(! (= (fun_app$b (pred_process$ ?v0 )(choice$ ?v1 ?v2 ))(and (fun_app$b (pred_process$ ?v0 )?v1 )(fun_app$b (pred_process$ ?v0 )?v2 ))):pattern ((fun_app$b (pred_process$ ?v0 )(choice$ ?v1 ?v2 ))))):named a43 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (fun_app$w (isACT$ ?v0 )?v1 )(fun_app$b isAction$ (solution$ ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_a_process_a_fun_fun$ )(?v1 A_process_a_process_a_fun_fun$ )(?v2 A_process$ )(?v3 A_process$ ))(! (= (fun_app$a (fun_app$ac (case_process$ ?v0 )?v1 )(choice$ ?v2 ?v3 ))(fun_app$a (fun_app$v ?v1 ?v2 )?v3 )):pattern ((fun_app$a (fun_app$ac (case_process$ ?v0 )?v1 )(choice$ ?v2 ?v3 ))))):named a45 ))
(assert (! (forall ((?v0 A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v1 A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v2 A_b_process_term_process$ )(?v3 A_b_process_term_process$ ))(! (= (case_process$a ?v0 ?v1 (choice$a ?v2 ?v3 ))(fun_app$h (fun_app$t ?v1 ?v2 )?v3 )):pattern ((case_process$a ?v0 ?v1 (choice$a ?v2 ?v3 ))))):named a46 ))
(assert (! (forall ((?v0 A_a_process_a_process_fun_fun$ )(?v1 A_process_a_process_a_process_fun_fun$ )(?v2 A_process$ )(?v3 A_process$ ))(! (= (case_process$b ?v0 ?v1 (choice$ ?v2 ?v3 ))(fun_app$l (fun_app$m ?v1 ?v2 )?v3 )):pattern ((case_process$b ?v0 ?v1 (choice$ ?v2 ?v3 ))))):named a47 ))
(assert (! (forall ((?v0 A_process$ ))(not (and (fun_app$b isAction$ ?v0 )(isChoice$ ?v0 )))):named a48 ))
(assert (! (forall ((?v0 A_process$ ))(or (fun_app$b isAction$ ?v0 )(isChoice$ ?v0 ))):named a49 ))
(assert (! (forall ((?v0 A_process$ ))(=> (isChoice$ ?v0 )(not (fun_app$b isAction$ ?v0 )))):named a50 ))
(assert (! (forall ((?v0 A_process$ ))(=> (fun_app$b isAction$ ?v0 )(not (isChoice$ ?v0 )))):named a51 ))
(assert (! (forall ((?v0 A_process$ ))(=> (and (=> (fun_app$b isAction$ ?v0 )false )(=> (isChoice$ ?v0 )false ))false )):named a52 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 A_process$ ))(! (= (fun_app$w (fun_app$ad (pred_process_term$ ?v0 )?v1 )(proc$ ?v2 ))(fun_app$b (pred_process$ ?v0 )?v2 )):pattern ((fun_app$w (fun_app$ad (pred_process_term$ ?v0 )?v1 )(proc$ ?v2 ))))):named a53 ))
(assert (! (forall ((?v0 A_process_a_process_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(and (forall ((?v3 A_process$ )(?v4 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (fun_app$b isAction$ ?v3 )(fun_app$b isAction$ ?v4 ))(= (isChoice$ ?v3 )(isChoice$ ?v4 )))))(and (forall ((?v3 A$ )(?v4 A$ )(?v5 A_process$ )(?v6 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 (action$ ?v3 ?v5 ))(action$ ?v4 ?v6 ))(and (= ?v3 ?v4 )(fun_app$b (fun_app$c ?v0 ?v5 )?v6 ))))(forall ((?v3 A_process$ )(?v4 A_process$ )(?v5 A_process$ )(?v6 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 (choice$ ?v3 ?v4 ))(choice$ ?v5 ?v6 ))(and (fun_app$b (fun_app$c ?v0 ?v3 )?v5 )(fun_app$b (fun_app$c ?v0 ?v4 )?v6 )))))))(= ?v1 ?v2 ))):named a54 ))
(assert (! (forall ((?v0 A_process_a_process_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(and (forall ((?v3 A_process$ )(?v4 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (fun_app$b isAction$ ?v3 )(fun_app$b isAction$ ?v4 ))(= (isChoice$ ?v3 )(isChoice$ ?v4 )))))(and (forall ((?v3 A$ )(?v4 A$ )(?v5 A_process$ )(?v6 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 (action$ ?v3 ?v5 ))(action$ ?v4 ?v6 ))(and (= ?v3 ?v4 )(or (fun_app$b (fun_app$c ?v0 ?v5 )?v6 )(= ?v5 ?v6 )))))(forall ((?v3 A_process$ )(?v4 A_process$ )(?v5 A_process$ )(?v6 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 (choice$ ?v3 ?v4 ))(choice$ ?v5 ?v6 ))(and (or (fun_app$b (fun_app$c ?v0 ?v3 )?v5 )(= ?v3 ?v5 ))(or (fun_app$b (fun_app$c ?v0 ?v4 )?v6 )(= ?v4 ?v6 ))))))))(= ?v1 ?v2 ))):named a55 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (not (fun_app$w (isACT$ ?v0 )?v1 ))(= (solution$ ?v0 ?v1 )(choice$ (solution$ ?v0 (cH1$ ?v0 ?v1 ))(solution$ ?v0 (cH2$ ?v0 ?v1 )))))):named a56 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_process_a_fun$ )(?v2 A_a_b_process_term_a_fun_fun$ )(?v3 A_b_process_term_a_b_process_term_a_fun_fun$ )(?v4 A_process$ ))(! (= (case_process_term$ ?v0 ?v1 ?v2 ?v3 (proc$ ?v4 ))(fun_app$a ?v1 ?v4 )):pattern ((case_process_term$ ?v0 ?v1 ?v2 ?v3 (proc$ ?v4 ))))):named a57 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_process_bool_fun$ )(?v2 A_a_b_process_term_bool_fun_fun$ )(?v3 A_b_process_term_a_b_process_term_bool_fun_fun$ )(?v4 A_process$ ))(! (= (fun_app$w (fun_app$ae (fun_app$af (fun_app$ag (case_process_term$a ?v0 )?v1 )?v2 )?v3 )(proc$ ?v4 ))(fun_app$b ?v1 ?v4 )):pattern ((fun_app$w (fun_app$ae (fun_app$af (fun_app$ag (case_process_term$a ?v0 )?v1 )?v2 )?v3 )(proc$ ?v4 ))))):named a58 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_process_a_b_process_term_fun$ )(?v2 A_a_b_process_term_a_b_process_term_fun_fun$ )(?v3 A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ )(?v4 A_process$ ))(! (= (case_process_term$b ?v0 ?v1 ?v2 ?v3 (proc$ ?v4 ))(fun_app$ ?v1 ?v4 )):pattern ((case_process_term$b ?v0 ?v1 ?v2 ?v3 (proc$ ?v4 ))))):named a59 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_process$ ))(! (= (fun_app$b (pred_process$ ?v0 )(action$ ?v1 ?v2 ))(and (fun_app$d ?v0 ?v1 )(fun_app$b (pred_process$ ?v0 )?v2 ))):pattern ((fun_app$b (pred_process$ ?v0 )(action$ ?v1 ?v2 ))))):named a60 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_stream$ )(?v2 A_process$ ))(=> (or (trace$ ?v0 ?v1 )(trace$ ?v2 ?v1 ))(trace$ (choice$ ?v0 ?v2 )?v1 ))):named a61 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ )(?v2 A$ )(?v3 A_process$ ))(= (= (action$ ?v0 ?v1 )(action$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a62 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ ))(fun_app$b isAction$ (action$ ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A$ )(?v2 A_process$ ))(=> (= ?v0 (action$ ?v1 ?v2 ))(fun_app$b isAction$ ?v0 ))):named a64 ))
(assert (! (forall ((?v0 A_process$ ))(= (fun_app$b isAction$ ?v0 )(exists ((?v1 A$ )(?v2 A_process$ ))(= ?v0 (action$ ?v1 ?v2 ))))):named a65 ))
(assert (! (forall ((?v0 A_process$ ))(=> (and (forall ((?v1 A$ )(?v2 A_process$ ))(=> (= ?v0 (action$ ?v1 ?v2 ))false ))(forall ((?v1 A_process$ )(?v2 A_process$ ))(=> (= ?v0 (choice$ ?v1 ?v2 ))false )))false )):named a66 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ )(?v2 A_process$ )(?v3 A_process$ ))(not (= (action$ ?v0 ?v1 )(choice$ ?v2 ?v3 )))):named a67 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ ))(not (isChoice$ (action$ ?v0 ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_a_process_a_fun_fun$ )(?v1 A_process_a_process_a_fun_fun$ )(?v2 A$ )(?v3 A_process$ ))(! (= (fun_app$a (fun_app$ac (case_process$ ?v0 )?v1 )(action$ ?v2 ?v3 ))(fun_app$a (fun_app$p ?v0 ?v2 )?v3 )):pattern ((fun_app$a (fun_app$ac (case_process$ ?v0 )?v1 )(action$ ?v2 ?v3 ))))):named a69 ))
(assert (! (forall ((?v0 A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v1 A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v2 A_b_process_term$ )(?v3 A_b_process_term_process$ ))(! (= (case_process$a ?v0 ?v1 (action$a ?v2 ?v3 ))(fun_app$h (fun_app$i ?v0 ?v2 )?v3 )):pattern ((case_process$a ?v0 ?v1 (action$a ?v2 ?v3 ))))):named a70 ))
(assert (! (forall ((?v0 A_a_process_a_process_fun_fun$ )(?v1 A_process_a_process_a_process_fun_fun$ )(?v2 A$ )(?v3 A_process$ ))(! (= (case_process$b ?v0 ?v1 (action$ ?v2 ?v3 ))(fun_app$l (fun_app$r ?v0 ?v2 )?v3 )):pattern ((case_process$b ?v0 ?v1 (action$ ?v2 ?v3 ))))):named a71 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(= (solution$ ?v0 ?v1 )(ite (fun_app$w (isACT$ ?v0 )?v1 )(action$ (pref$ ?v0 ?v1 )(solution$ ?v0 (cont$ ?v0 ?v1 )))(choice$ (solution$ ?v0 (cH1$ ?v0 ?v1 ))(solution$ ?v0 (cH2$ ?v0 ?v1 )))))):named a72 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (not (fun_app$w (isACT$ ?v0 )?v1 ))(= (ch1Of$ (solution$ ?v0 ?v1 ))(solution$ ?v0 (cH1$ ?v0 ?v1 ))))):named a73 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (not (fun_app$w (isACT$ ?v0 )?v1 ))(= (ch2Of$ (solution$ ?v0 ?v1 ))(solution$ ?v0 (cH2$ ?v0 ?v1 ))))):named a74 ))
(assert (! (forall ((?v0 A_process_a_stream_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_stream$ ))(=> (and (fun_app$ah (fun_app$ai ?v0 ?v1 )?v2 )(forall ((?v3 A_process$ )(?v4 A_stream$ ))(=> (fun_app$ah (fun_app$ai ?v0 ?v3 )?v4 )(or (exists ((?v5 A_process$ )(?v6 A_stream$ )(?v7 A$ ))(and (= ?v3 (action$ ?v7 ?v5 ))(and (= ?v4 (sCons$ ?v7 ?v6 ))(or (fun_app$ah (fun_app$ai ?v0 ?v5 )?v6 )(trace$ ?v5 ?v6 )))))(exists ((?v5 A_process$ )(?v6 A_stream$ )(?v7 A_process$ ))(and (= ?v3 (choice$ ?v5 ?v7 ))(and (= ?v4 ?v6 )(or (or (fun_app$ah (fun_app$ai ?v0 ?v5 )?v6 )(trace$ ?v5 ?v6 ))(or (fun_app$ah (fun_app$ai ?v0 ?v7 )?v6 )(trace$ ?v7 ?v6 ))))))))))(trace$ ?v1 ?v2 ))):named a75 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_stream$ ))(=> (and (trace$ ?v0 ?v1 )(and (forall ((?v2 A_process$ )(?v3 A_stream$ )(?v4 A$ ))(=> (and (= ?v0 (action$ ?v4 ?v2 ))(and (= ?v1 (sCons$ ?v4 ?v3 ))(trace$ ?v2 ?v3 )))false ))(forall ((?v2 A_process$ )(?v3 A_stream$ )(?v4 A_process$ ))(=> (and (= ?v0 (choice$ ?v2 ?v4 ))(and (= ?v1 ?v3 )(or (trace$ ?v2 ?v3 )(trace$ ?v4 ?v3 ))))false ))))false )):named a76 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_stream$ ))(= (trace$ ?v0 ?v1 )(or (exists ((?v2 A_process$ )(?v3 A_stream$ )(?v4 A$ ))(and (= ?v0 (action$ ?v4 ?v2 ))(and (= ?v1 (sCons$ ?v4 ?v3 ))(trace$ ?v2 ?v3 ))))(exists ((?v2 A_process$ )(?v3 A_stream$ )(?v4 A_process$ ))(and (= ?v0 (choice$ ?v2 ?v4 ))(and (= ?v1 ?v3 )(or (trace$ ?v2 ?v3 )(trace$ ?v4 ?v3 )))))))):named a77 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (fun_app$w (isACT$ ?v0 )?v1 )(= (solution$ ?v0 ?v1 )(action$ (pref$ ?v0 ?v1 )(solution$ ?v0 (cont$ ?v0 ?v1 )))))):named a78 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_process$ ))(! (= (cH1$ ?v0 (proc$ ?v1 ))(proc$ (ch1Of$ ?v1 ))):pattern ((cH1$ ?v0 (proc$ ?v1 ))))):named a79 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_process$ ))(! (= (cH2$ ?v0 (proc$ ?v1 ))(proc$ (ch2Of$ ?v1 ))):pattern ((cH2$ ?v0 (proc$ ?v1 ))))):named a80 ))
(assert (! (forall ((?v0 A_process$ ))(=> (isChoice$ ?v0 )(= (choice$ (ch1Of$ ?v0 )(ch2Of$ ?v0 ))?v0 ))):named a81 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(! (= (ch2Of$ (choice$ ?v0 ?v1 ))?v1 ):pattern ((choice$ ?v0 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(! (= (ch1Of$ (choice$ ?v0 ?v1 ))?v0 ):pattern ((choice$ ?v0 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_stream$ )(?v2 A$ ))(=> (trace$ ?v0 ?v1 )(trace$ (action$ ?v2 ?v0 )(sCons$ ?v2 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a85 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (fun_app$w (isACT$ ?v0 )?v1 )(= (prefOf$ (solution$ ?v0 ?v1 ))(pref$ ?v0 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (fun_app$w (isACT$ ?v0 )?v1 )(= (contOf$ (solution$ ?v0 ?v1 ))(solution$ ?v0 (cont$ ?v0 ?v1 ))))):named a87 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (forall ((?v1 A$ )(?v2 A_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a88 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_process_a_fun_fun$ )(?v2 A_process_a_process_a_fun_fun$ )(?v3 A_process$ ))(= (fun_app$d ?v0 (fun_app$a (fun_app$ac (case_process$ ?v1 )?v2 )?v3 ))(not (or (and (= ?v3 (action$ (prefOf$ ?v3 )(contOf$ ?v3 )))(not (fun_app$d ?v0 (fun_app$a (fun_app$p ?v1 (prefOf$ ?v3 ))(contOf$ ?v3 )))))(and (= ?v3 (choice$ (ch1Of$ ?v3 )(ch2Of$ ?v3 )))(not (fun_app$d ?v0 (fun_app$a (fun_app$v ?v2 (ch1Of$ ?v3 ))(ch2Of$ ?v3 ))))))))):named a89 ))
(assert (! (forall ((?v0 A_b_process_term_bool_fun$ )(?v1 A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v2 A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v3 A_b_process_term_process$ ))(= (fun_app$w ?v0 (case_process$a ?v1 ?v2 ?v3 ))(not (or (and (= ?v3 (action$a (prefOf$a ?v3 )(contOf$a ?v3 )))(not (fun_app$w ?v0 (fun_app$h (fun_app$i ?v1 (prefOf$a ?v3 ))(contOf$a ?v3 )))))(and (= ?v3 (choice$a (ch1Of$a ?v3 )(ch2Of$a ?v3 )))(not (fun_app$w ?v0 (fun_app$h (fun_app$t ?v2 (ch1Of$a ?v3 ))(ch2Of$a ?v3 ))))))))):named a90 ))
(assert (! (forall ((?v0 A_process_bool_fun$ )(?v1 A_a_process_a_process_fun_fun$ )(?v2 A_process_a_process_a_process_fun_fun$ )(?v3 A_process$ ))(= (fun_app$b ?v0 (case_process$b ?v1 ?v2 ?v3 ))(not (or (and (= ?v3 (action$ (prefOf$ ?v3 )(contOf$ ?v3 )))(not (fun_app$b ?v0 (fun_app$l (fun_app$r ?v1 (prefOf$ ?v3 ))(contOf$ ?v3 )))))(and (= ?v3 (choice$ (ch1Of$ ?v3 )(ch2Of$ ?v3 )))(not (fun_app$b ?v0 (fun_app$l (fun_app$m ?v2 (ch1Of$ ?v3 ))(ch2Of$ ?v3 ))))))))):named a91 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_process_a_fun_fun$ )(?v2 A_process_a_process_a_fun_fun$ )(?v3 A_process$ ))(= (fun_app$d ?v0 (fun_app$a (fun_app$ac (case_process$ ?v1 )?v2 )?v3 ))(and (=> (= ?v3 (action$ (prefOf$ ?v3 )(contOf$ ?v3 )))(fun_app$d ?v0 (fun_app$a (fun_app$p ?v1 (prefOf$ ?v3 ))(contOf$ ?v3 ))))(=> (= ?v3 (choice$ (ch1Of$ ?v3 )(ch2Of$ ?v3 )))(fun_app$d ?v0 (fun_app$a (fun_app$v ?v2 (ch1Of$ ?v3 ))(ch2Of$ ?v3 ))))))):named a92 ))
(assert (! (forall ((?v0 A_b_process_term_bool_fun$ )(?v1 A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v2 A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v3 A_b_process_term_process$ ))(= (fun_app$w ?v0 (case_process$a ?v1 ?v2 ?v3 ))(and (=> (= ?v3 (action$a (prefOf$a ?v3 )(contOf$a ?v3 )))(fun_app$w ?v0 (fun_app$h (fun_app$i ?v1 (prefOf$a ?v3 ))(contOf$a ?v3 ))))(=> (= ?v3 (choice$a (ch1Of$a ?v3 )(ch2Of$a ?v3 )))(fun_app$w ?v0 (fun_app$h (fun_app$t ?v2 (ch1Of$a ?v3 ))(ch2Of$a ?v3 ))))))):named a93 ))
(assert (! (forall ((?v0 A_process_bool_fun$ )(?v1 A_a_process_a_process_fun_fun$ )(?v2 A_process_a_process_a_process_fun_fun$ )(?v3 A_process$ ))(= (fun_app$b ?v0 (case_process$b ?v1 ?v2 ?v3 ))(and (=> (= ?v3 (action$ (prefOf$ ?v3 )(contOf$ ?v3 )))(fun_app$b ?v0 (fun_app$l (fun_app$r ?v1 (prefOf$ ?v3 ))(contOf$ ?v3 ))))(=> (= ?v3 (choice$ (ch1Of$ ?v3 )(ch2Of$ ?v3 )))(fun_app$b ?v0 (fun_app$l (fun_app$m ?v2 (ch1Of$ ?v3 ))(ch2Of$ ?v3 ))))))):named a94 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_process$ ))(! (= (pref$ ?v0 (proc$ ?v1 ))(prefOf$ ?v1 )):pattern ((pref$ ?v0 (proc$ ?v1 ))))):named a95 ))
(assert (! (forall ((?v0 A_b_process_term_process$ ))(=> (isAction$a ?v0 )(= (action$a (prefOf$a ?v0 )(contOf$a ?v0 ))?v0 ))):named a96 ))
(assert (! (forall ((?v0 A_process$ ))(=> (fun_app$b isAction$ ?v0 )(= (action$ (prefOf$ ?v0 )(contOf$ ?v0 ))?v0 ))):named a97 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ ))(! (= (contOf$ (action$ ?v0 ?v1 ))?v1 ):pattern ((action$ ?v0 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term_process$ ))(! (= (prefOf$a (action$a ?v0 ?v1 ))?v0 ):pattern ((action$a ?v0 ?v1 )))):named a99 ))
(assert (! (forall ((?v0 A$ )(?v1 A_process$ ))(! (= (prefOf$ (action$ ?v0 ?v1 ))?v0 ):pattern ((action$ ?v0 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 A_b_process_term_process$ ))(=> (and (=> (= ?v0 (action$a (prefOf$a ?v0 )(contOf$a ?v0 )))false )(=> (= ?v0 (choice$a (ch1Of$a ?v0 )(ch2Of$a ?v0 )))false ))false )):named a101 ))
(assert (! (forall ((?v0 A_process$ ))(=> (and (=> (= ?v0 (action$ (prefOf$ ?v0 )(contOf$ ?v0 )))false )(=> (= ?v0 (choice$ (ch1Of$ ?v0 )(ch2Of$ ?v0 )))false ))false )):named a102 ))
(assert (! (forall ((?v0 A_b_process_term_process_a_b_process_term_process_bool_fun_fun$ )(?v1 A_b_process_term_process$ )(?v2 A_b_process_term_process$ ))(=> (and (fun_app$aj (fun_app$ak ?v0 ?v1 )?v2 )(forall ((?v3 A_b_process_term_process$ )(?v4 A_b_process_term_process$ ))(=> (fun_app$aj (fun_app$ak ?v0 ?v3 )?v4 )(and (= (isAction$a ?v3 )(isAction$a ?v4 ))(and (=> (and (isAction$a ?v3 )(isAction$a ?v4 ))(and (= (prefOf$a ?v3 )(prefOf$a ?v4 ))(fun_app$aj (fun_app$ak ?v0 (contOf$a ?v3 ))(contOf$a ?v4 ))))(=> (and (isChoice$a ?v3 )(isChoice$a ?v4 ))(and (fun_app$aj (fun_app$ak ?v0 (ch1Of$a ?v3 ))(ch1Of$a ?v4 ))(fun_app$aj (fun_app$ak ?v0 (ch2Of$a ?v3 ))(ch2Of$a ?v4 )))))))))(= ?v1 ?v2 ))):named a103 ))
(assert (! (forall ((?v0 A_process_a_process_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 A_process$ )(?v4 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (fun_app$b isAction$ ?v3 )(fun_app$b isAction$ ?v4 ))(and (=> (and (fun_app$b isAction$ ?v3 )(fun_app$b isAction$ ?v4 ))(and (= (prefOf$ ?v3 )(prefOf$ ?v4 ))(fun_app$b (fun_app$c ?v0 (contOf$ ?v3 ))(contOf$ ?v4 ))))(=> (and (isChoice$ ?v3 )(isChoice$ ?v4 ))(and (fun_app$b (fun_app$c ?v0 (ch1Of$ ?v3 ))(ch1Of$ ?v4 ))(fun_app$b (fun_app$c ?v0 (ch2Of$ ?v3 ))(ch2Of$ ?v4 )))))))))(= ?v1 ?v2 ))):named a104 ))
(assert (! (forall ((?v0 A_b_process_term_process_a_b_process_term_process_bool_fun_fun$ )(?v1 A_b_process_term_process$ )(?v2 A_b_process_term_process$ ))(=> (and (fun_app$aj (fun_app$ak ?v0 ?v1 )?v2 )(forall ((?v3 A_b_process_term_process$ )(?v4 A_b_process_term_process$ ))(=> (fun_app$aj (fun_app$ak ?v0 ?v3 )?v4 )(and (= (isAction$a ?v3 )(isAction$a ?v4 ))(and (=> (and (isAction$a ?v3 )(isAction$a ?v4 ))(and (= (prefOf$a ?v3 )(prefOf$a ?v4 ))(or (fun_app$aj (fun_app$ak ?v0 (contOf$a ?v3 ))(contOf$a ?v4 ))(= (contOf$a ?v3 )(contOf$a ?v4 )))))(=> (and (isChoice$a ?v3 )(isChoice$a ?v4 ))(and (or (fun_app$aj (fun_app$ak ?v0 (ch1Of$a ?v3 ))(ch1Of$a ?v4 ))(= (ch1Of$a ?v3 )(ch1Of$a ?v4 )))(or (fun_app$aj (fun_app$ak ?v0 (ch2Of$a ?v3 ))(ch2Of$a ?v4 ))(= (ch2Of$a ?v3 )(ch2Of$a ?v4 ))))))))))(= ?v1 ?v2 ))):named a105 ))
(assert (! (forall ((?v0 A_process_a_process_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 A_process$ )(?v4 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (fun_app$b isAction$ ?v3 )(fun_app$b isAction$ ?v4 ))(and (=> (and (fun_app$b isAction$ ?v3 )(fun_app$b isAction$ ?v4 ))(and (= (prefOf$ ?v3 )(prefOf$ ?v4 ))(or (fun_app$b (fun_app$c ?v0 (contOf$ ?v3 ))(contOf$ ?v4 ))(= (contOf$ ?v3 )(contOf$ ?v4 )))))(=> (and (isChoice$ ?v3 )(isChoice$ ?v4 ))(and (or (fun_app$b (fun_app$c ?v0 (ch1Of$ ?v3 ))(ch1Of$ ?v4 ))(= (ch1Of$ ?v3 )(ch1Of$ ?v4 )))(or (fun_app$b (fun_app$c ?v0 (ch2Of$ ?v3 ))(ch2Of$ ?v4 ))(= (ch2Of$ ?v3 )(ch2Of$ ?v4 ))))))))))(= ?v1 ?v2 ))):named a106 ))
(assert (! (forall ((?v0 A_b_process_term_process$ )(?v1 A_b_process_term_process$ ))(=> (and (= (isAction$a ?v0 )(isAction$a ?v1 ))(and (=> (and (isAction$a ?v0 )(isAction$a ?v1 ))(and (= (prefOf$a ?v0 )(prefOf$a ?v1 ))(= (contOf$a ?v0 )(contOf$a ?v1 ))))(=> (and (isChoice$a ?v0 )(isChoice$a ?v1 ))(and (= (ch1Of$a ?v0 )(ch1Of$a ?v1 ))(= (ch2Of$a ?v0 )(ch2Of$a ?v1 ))))))(= ?v0 ?v1 ))):named a107 ))
(assert (! (forall ((?v0 A_process$ )(?v1 A_process$ ))(=> (and (= (fun_app$b isAction$ ?v0 )(fun_app$b isAction$ ?v1 ))(and (=> (and (fun_app$b isAction$ ?v0 )(fun_app$b isAction$ ?v1 ))(and (= (prefOf$ ?v0 )(prefOf$ ?v1 ))(= (contOf$ ?v0 )(contOf$ ?v1 ))))(=> (and (isChoice$ ?v0 )(isChoice$ ?v1 ))(and (= (ch1Of$ ?v0 )(ch1Of$ ?v1 ))(= (ch2Of$ ?v0 )(ch2Of$ ?v1 ))))))(= ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 A_a_process_a_fun_fun$ )(?v1 A_process_a_process_a_fun_fun$ )(?v2 A_process$ ))(! (= (fun_app$a (fun_app$ac (case_process$ ?v0 )?v1 )?v2 )(ite (fun_app$b isAction$ ?v2 )(fun_app$a (fun_app$p ?v0 (prefOf$ ?v2 ))(contOf$ ?v2 ))(fun_app$a (fun_app$v ?v1 (ch1Of$ ?v2 ))(ch2Of$ ?v2 )))):pattern ((fun_app$a (fun_app$ac (case_process$ ?v0 )?v1 )?v2 )))):named a109 ))
(assert (! (forall ((?v0 A_b_process_term_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v1 A_b_process_term_process_a_b_process_term_process_a_b_process_term_fun_fun$ )(?v2 A_b_process_term_process$ ))(! (= (case_process$a ?v0 ?v1 ?v2 )(ite (isAction$a ?v2 )(fun_app$h (fun_app$i ?v0 (prefOf$a ?v2 ))(contOf$a ?v2 ))(fun_app$h (fun_app$t ?v1 (ch1Of$a ?v2 ))(ch2Of$a ?v2 )))):pattern ((case_process$a ?v0 ?v1 ?v2 )))):named a110 ))
(assert (! (forall ((?v0 A_a_process_a_process_fun_fun$ )(?v1 A_process_a_process_a_process_fun_fun$ )(?v2 A_process$ ))(! (= (case_process$b ?v0 ?v1 ?v2 )(ite (fun_app$b isAction$ ?v2 )(fun_app$l (fun_app$r ?v0 (prefOf$ ?v2 ))(contOf$ ?v2 ))(fun_app$l (fun_app$m ?v1 (ch1Of$ ?v2 ))(ch2Of$ ?v2 )))):pattern ((case_process$b ?v0 ?v1 ?v2 )))):named a111 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_process$ ))(! (= (cont$ ?v0 (proc$ ?v1 ))(proc$ (contOf$ ?v1 ))):pattern ((cont$ ?v0 (proc$ ?v1 ))))):named a112 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (smember$ ?v0 (sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$ ?v0 ?v2 ))):pattern ((smember$ ?v0 (sCons$ ?v1 ?v2 ))))):named a113 ))
(assert (! (forall ((?v0 A_b_process_term_a_b_process_term_bool_fun_fun$ )(?v1 A_b_process_term_process$ )(?v2 A_b_process_term_process$ ))(= (fun_app$aj (rel_process$ ?v0 ?v1 )?v2 )(and (= (isAction$a ?v1 )(isAction$a ?v2 ))(and (=> (and (isAction$a ?v1 )(isAction$a ?v2 ))(and (fun_app$w (fun_app$x ?v0 (prefOf$a ?v1 ))(prefOf$a ?v2 ))(fun_app$aj (rel_process$ ?v0 (contOf$a ?v1 ))(contOf$a ?v2 ))))(=> (and (isChoice$a ?v1 )(isChoice$a ?v2 ))(and (fun_app$aj (rel_process$ ?v0 (ch1Of$a ?v1 ))(ch1Of$a ?v2 ))(fun_app$aj (rel_process$ ?v0 (ch2Of$a ?v1 ))(ch2Of$a ?v2 )))))))):named a114 ))
(assert (! (forall ((?v0 A_b_process_term_a_bool_fun_fun$ )(?v1 A_b_process_term_process$ )(?v2 A_process$ ))(= (fun_app$b (fun_app$al (rel_process$a ?v0 )?v1 )?v2 )(and (= (isAction$a ?v1 )(fun_app$b isAction$ ?v2 ))(and (=> (and (isAction$a ?v1 )(fun_app$b isAction$ ?v2 ))(and (fun_app$d (fun_app$am ?v0 (prefOf$a ?v1 ))(prefOf$ ?v2 ))(fun_app$b (fun_app$al (rel_process$a ?v0 )(contOf$a ?v1 ))(contOf$ ?v2 ))))(=> (and (isChoice$a ?v1 )(isChoice$ ?v2 ))(and (fun_app$b (fun_app$al (rel_process$a ?v0 )(ch1Of$a ?v1 ))(ch1Of$ ?v2 ))(fun_app$b (fun_app$al (rel_process$a ?v0 )(ch2Of$a ?v1 ))(ch2Of$ ?v2 )))))))):named a115 ))
(assert (! (forall ((?v0 A_a_b_process_term_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_b_process_term_process$ ))(= (fun_app$aj (rel_process$b ?v0 ?v1 )?v2 )(and (= (fun_app$b isAction$ ?v1 )(isAction$a ?v2 ))(and (=> (and (fun_app$b isAction$ ?v1 )(isAction$a ?v2 ))(and (fun_app$w (fun_app$y ?v0 (prefOf$ ?v1 ))(prefOf$a ?v2 ))(fun_app$aj (rel_process$b ?v0 (contOf$ ?v1 ))(contOf$a ?v2 ))))(=> (and (isChoice$ ?v1 )(isChoice$a ?v2 ))(and (fun_app$aj (rel_process$b ?v0 (ch1Of$ ?v1 ))(ch1Of$a ?v2 ))(fun_app$aj (rel_process$b ?v0 (ch2Of$ ?v1 ))(ch2Of$a ?v2 )))))))):named a116 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ ))(= (fun_app$b (fun_app$c (rel_process$c ?v0 )?v1 )?v2 )(and (= (fun_app$b isAction$ ?v1 )(fun_app$b isAction$ ?v2 ))(and (=> (and (fun_app$b isAction$ ?v1 )(fun_app$b isAction$ ?v2 ))(and (fun_app$d (fun_app$e ?v0 (prefOf$ ?v1 ))(prefOf$ ?v2 ))(fun_app$b (fun_app$c (rel_process$c ?v0 )(contOf$ ?v1 ))(contOf$ ?v2 ))))(=> (and (isChoice$ ?v1 )(isChoice$ ?v2 ))(and (fun_app$b (fun_app$c (rel_process$c ?v0 )(ch1Of$ ?v1 ))(ch1Of$ ?v2 ))(fun_app$b (fun_app$c (rel_process$c ?v0 )(ch2Of$ ?v1 ))(ch2Of$ ?v2 )))))))):named a117 ))
(assert (! (forall ((?v0 A_b_process_term_process_a_b_process_term_process_bool_fun_fun$ )(?v1 A_b_process_term_process$ )(?v2 A_b_process_term_process$ )(?v3 A_b_process_term_a_b_process_term_bool_fun_fun$ ))(=> (and (fun_app$aj (fun_app$ak ?v0 ?v1 )?v2 )(forall ((?v4 A_b_process_term_process$ )(?v5 A_b_process_term_process$ ))(=> (fun_app$aj (fun_app$ak ?v0 ?v4 )?v5 )(and (= (isAction$a ?v4 )(isAction$a ?v5 ))(and (=> (and (isAction$a ?v4 )(isAction$a ?v5 ))(and (fun_app$w (fun_app$x ?v3 (prefOf$a ?v4 ))(prefOf$a ?v5 ))(fun_app$aj (fun_app$ak ?v0 (contOf$a ?v4 ))(contOf$a ?v5 ))))(=> (and (isChoice$a ?v4 )(isChoice$a ?v5 ))(and (fun_app$aj (fun_app$ak ?v0 (ch1Of$a ?v4 ))(ch1Of$a ?v5 ))(fun_app$aj (fun_app$ak ?v0 (ch2Of$a ?v4 ))(ch2Of$a ?v5 )))))))))(fun_app$aj (rel_process$ ?v3 ?v1 )?v2 ))):named a118 ))
(assert (! (forall ((?v0 A_b_process_term_process_a_process_bool_fun_fun$ )(?v1 A_b_process_term_process$ )(?v2 A_process$ )(?v3 A_b_process_term_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$al ?v0 ?v1 )?v2 )(forall ((?v4 A_b_process_term_process$ )(?v5 A_process$ ))(=> (fun_app$b (fun_app$al ?v0 ?v4 )?v5 )(and (= (isAction$a ?v4 )(fun_app$b isAction$ ?v5 ))(and (=> (and (isAction$a ?v4 )(fun_app$b isAction$ ?v5 ))(and (fun_app$d (fun_app$am ?v3 (prefOf$a ?v4 ))(prefOf$ ?v5 ))(fun_app$b (fun_app$al ?v0 (contOf$a ?v4 ))(contOf$ ?v5 ))))(=> (and (isChoice$a ?v4 )(isChoice$ ?v5 ))(and (fun_app$b (fun_app$al ?v0 (ch1Of$a ?v4 ))(ch1Of$ ?v5 ))(fun_app$b (fun_app$al ?v0 (ch2Of$a ?v4 ))(ch2Of$ ?v5 )))))))))(fun_app$b (fun_app$al (rel_process$a ?v3 )?v1 )?v2 ))):named a119 ))
(assert (! (forall ((?v0 A_process_a_b_process_term_process_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_b_process_term_process$ )(?v3 A_a_b_process_term_bool_fun_fun$ ))(=> (and (fun_app$aj (fun_app$an ?v0 ?v1 )?v2 )(forall ((?v4 A_process$ )(?v5 A_b_process_term_process$ ))(=> (fun_app$aj (fun_app$an ?v0 ?v4 )?v5 )(and (= (fun_app$b isAction$ ?v4 )(isAction$a ?v5 ))(and (=> (and (fun_app$b isAction$ ?v4 )(isAction$a ?v5 ))(and (fun_app$w (fun_app$y ?v3 (prefOf$ ?v4 ))(prefOf$a ?v5 ))(fun_app$aj (fun_app$an ?v0 (contOf$ ?v4 ))(contOf$a ?v5 ))))(=> (and (isChoice$ ?v4 )(isChoice$a ?v5 ))(and (fun_app$aj (fun_app$an ?v0 (ch1Of$ ?v4 ))(ch1Of$a ?v5 ))(fun_app$aj (fun_app$an ?v0 (ch2Of$ ?v4 ))(ch2Of$a ?v5 )))))))))(fun_app$aj (rel_process$b ?v3 ?v1 )?v2 ))):named a120 ))
(assert (! (forall ((?v0 A_process_a_process_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v4 A_process$ )(?v5 A_process$ ))(=> (fun_app$b (fun_app$c ?v0 ?v4 )?v5 )(and (= (fun_app$b isAction$ ?v4 )(fun_app$b isAction$ ?v5 ))(and (=> (and (fun_app$b isAction$ ?v4 )(fun_app$b isAction$ ?v5 ))(and (fun_app$d (fun_app$e ?v3 (prefOf$ ?v4 ))(prefOf$ ?v5 ))(fun_app$b (fun_app$c ?v0 (contOf$ ?v4 ))(contOf$ ?v5 ))))(=> (and (isChoice$ ?v4 )(isChoice$ ?v5 ))(and (fun_app$b (fun_app$c ?v0 (ch1Of$ ?v4 ))(ch1Of$ ?v5 ))(fun_app$b (fun_app$c ?v0 (ch2Of$ ?v4 ))(ch2Of$ ?v5 )))))))))(fun_app$b (fun_app$c (rel_process$c ?v3 )?v1 )?v2 ))):named a121 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (pred_stream$ ?v0 (sCons$ ?v1 ?v2 ))(and (fun_app$d ?v0 ?v1 )(pred_stream$ ?v0 ?v2 ))):pattern ((pred_stream$ ?v0 (sCons$ ?v1 ?v2 ))))):named a122 ))
(assert (! (forall ((?v0 A_process_process$ ))(= (prefOf$b ?v0 )(case_process$c uu$ uua$ ?v0 ))):named a123 ))
(assert (! (forall ((?v0 A_b_process_term_process$ ))(= (prefOf$a ?v0 )(case_process$a uub$ uuc$ ?v0 ))):named a124 ))
(assert (! (forall ((?v0 A_process$ ))(= (prefOf$ ?v0 )(fun_app$a (fun_app$ac (case_process$ uud$ )uue$ )?v0 ))):named a125 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 B$ ))(! (= (fun_app$w (isACT$ ?v0 )(var$ ?v1 ))(fun_app$w (fun_app$ae (fun_app$af (fun_app$ag (case_process_term$a uuf$ )isAction$ )uug$ )uuh$ )(fun_app$z ?v0 ?v1 ))):pattern ((fun_app$w (isACT$ ?v0 )(var$ ?v1 ))))):named a126 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (stream_all$ ?v0 (sCons$ ?v1 ?v2 ))(and (fun_app$d ?v0 ?v1 )(stream_all$ ?v0 ?v2 ))):pattern ((stream_all$ ?v0 (sCons$ ?v1 ?v2 ))))):named a127 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (var$ ?v0 )(var$ ?v1 ))(= ?v0 ?v1 ))):named a128 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ )(?v3 A_process$ )(?v4 A_process$ ))(! (= (fun_app$b (fun_app$c (rel_process$c ?v0 )(choice$ ?v1 ?v2 ))(choice$ ?v3 ?v4 ))(and (fun_app$b (fun_app$c (rel_process$c ?v0 )?v1 )?v3 )(fun_app$b (fun_app$c (rel_process$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$c (rel_process$c ?v0 )(choice$ ?v1 ?v2 ))(choice$ ?v3 ?v4 ))))):named a129 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_process$ )(?v3 A$ )(?v4 A_process$ ))(! (= (fun_app$b (fun_app$c (rel_process$c ?v0 )(action$ ?v1 ?v2 ))(action$ ?v3 ?v4 ))(and (fun_app$d (fun_app$e ?v0 ?v1 )?v3 )(fun_app$b (fun_app$c (rel_process$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$c (rel_process$c ?v0 )(action$ ?v1 ?v2 ))(action$ ?v3 ?v4 ))))):named a130 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B$ ))(! (= (fun_app$w (fun_app$ad (pred_process_term$ ?v0 )?v1 )(var$ ?v2 ))(fun_app$ab ?v1 ?v2 )):pattern ((fun_app$w (fun_app$ad (pred_process_term$ ?v0 )?v1 )(var$ ?v2 ))))):named a131 ))
(assert (! (= (rel_process$c uui$ )uuj$ ):named a132 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ )(?v3 A_process$ )(?v4 A_process$ ))(=> (and (fun_app$b (fun_app$c (rel_process$c ?v0 )?v1 )?v2 )(fun_app$b (fun_app$c (rel_process$c ?v0 )?v3 )?v4 ))(fun_app$b (fun_app$c (rel_process$c ?v0 )(choice$ ?v1 ?v3 ))(choice$ ?v2 ?v4 )))):named a133 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_process$ )(?v4 A_process$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c (rel_process$c ?v0 )?v3 )?v4 ))(fun_app$b (fun_app$c (rel_process$c ?v0 )(action$ ?v1 ?v3 ))(action$ ?v2 ?v4 )))):named a134 ))
(assert (! (forall ((?v0 B$ )(?v1 A_process$ ))(not (= (var$ ?v0 )(proc$ ?v1 )))):named a135 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_process_a_fun$ )(?v2 A_a_b_process_term_a_fun_fun$ )(?v3 A_b_process_term_a_b_process_term_a_fun_fun$ )(?v4 B$ ))(! (= (case_process_term$ ?v0 ?v1 ?v2 ?v3 (var$ ?v4 ))(fun_app$aa ?v0 ?v4 )):pattern ((case_process_term$ ?v0 ?v1 ?v2 ?v3 (var$ ?v4 ))))):named a136 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_process_bool_fun$ )(?v2 A_a_b_process_term_bool_fun_fun$ )(?v3 A_b_process_term_a_b_process_term_bool_fun_fun$ )(?v4 B$ ))(! (= (fun_app$w (fun_app$ae (fun_app$af (fun_app$ag (case_process_term$a ?v0 )?v1 )?v2 )?v3 )(var$ ?v4 ))(fun_app$ab ?v0 ?v4 )):pattern ((fun_app$w (fun_app$ae (fun_app$af (fun_app$ag (case_process_term$a ?v0 )?v1 )?v2 )?v3 )(var$ ?v4 ))))):named a137 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_process_a_b_process_term_fun$ )(?v2 A_a_b_process_term_a_b_process_term_fun_fun$ )(?v3 A_b_process_term_a_b_process_term_a_b_process_term_fun_fun$ )(?v4 B$ ))(! (= (case_process_term$b ?v0 ?v1 ?v2 ?v3 (var$ ?v4 ))(fun_app$z ?v0 ?v4 )):pattern ((case_process_term$b ?v0 ?v1 ?v2 ?v3 (var$ ?v4 ))))):named a138 ))
(assert (! (forall ((?v0 A_process$ ))(= (contOf$ ?v0 )(case_process$b uuk$ uul$ ?v0 ))):named a139 ))
(assert (! (forall ((?v0 A_process$ ))(= (ch2Of$ ?v0 )(case_process$b uum$ uun$ ?v0 ))):named a140 ))
(assert (! (forall ((?v0 A_process$ ))(= (ch1Of$ ?v0 )(case_process$b uum$ uuo$ ?v0 ))):named a141 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 B$ ))(= (cont$ ?v0 (var$ ?v1 ))(case_process_term$b uup$ uuq$ uur$ uus$ (fun_app$z ?v0 ?v1 )))):named a142 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 B$ ))(= (cH2$ ?v0 (var$ ?v1 ))(case_process_term$b uup$ uut$ uuu$ uuv$ (fun_app$z ?v0 ?v1 )))):named a143 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 B$ ))(= (cH1$ ?v0 (var$ ?v1 ))(case_process_term$b uup$ uuw$ uuu$ uux$ (fun_app$z ?v0 ?v1 )))):named a144 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ )(?v3 A$ )(?v4 A_process$ ))(not (fun_app$b (fun_app$c (rel_process$c ?v0 )(choice$ ?v1 ?v2 ))(action$ ?v3 ?v4 )))):named a145 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_process$ )(?v3 A_process$ )(?v4 A_process$ ))(not (fun_app$b (fun_app$c (rel_process$c ?v0 )(action$ ?v1 ?v2 ))(choice$ ?v3 ?v4 )))):named a146 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_process$ )(?v2 A_process$ ))(=> (and (fun_app$b (fun_app$c (rel_process$c ?v0 )?v1 )?v2 )(and (forall ((?v3 A$ )(?v4 A_process$ )(?v5 A$ )(?v6 A_process$ ))(=> (and (= ?v1 (action$ ?v3 ?v4 ))(and (= ?v2 (action$ ?v5 ?v6 ))(and (fun_app$d (fun_app$e ?v0 ?v3 )?v5 )(fun_app$b (fun_app$c (rel_process$c ?v0 )?v4 )?v6 ))))false ))(forall ((?v3 A_process$ )(?v4 A_process$ )(?v5 A_process$ )(?v6 A_process$ ))(=> (and (= ?v1 (choice$ ?v3 ?v4 ))(and (= ?v2 (choice$ ?v5 ?v6 ))(and (fun_app$b (fun_app$c (rel_process$c ?v0 )?v3 )?v5 )(fun_app$b (fun_app$c (rel_process$c ?v0 )?v4 )?v6 ))))false ))))false )):named a147 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 B$ ))(= (pref$ ?v0 (var$ ?v1 ))(case_process_term$ uuy$ uuz$ uva$ uvb$ (fun_app$z ?v0 ?v1 )))):named a148 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 B$ ))(! (=> (guarded$ ?v0 )(= (solution$ ?v0 (var$ ?v1 ))(solution$ ?v0 (fun_app$z ?v0 ?v1 )))):pattern ((solution$ ?v0 (var$ ?v1 ))))):named a149 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 B$ ))(! (=> (guarded$ ?v0 )(= (fun_app$w (isACT$ ?v0 )(var$ ?v1 ))(fun_app$w (isACT$ ?v0 )(fun_app$z ?v0 ?v1 )))):pattern ((fun_app$w (isACT$ ?v0 )(var$ ?v1 ))))):named a150 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (and (fun_app$w (isACT$ ?v0 )?v1 )(and (forall ((?v2 B_a_b_process_term_fun$ )(?v3 B$ ))(=> (and (= ?v0 ?v2 )(and (= ?v1 (var$ ?v3 ))(fun_app$w (fun_app$ae (fun_app$af (fun_app$ag (case_process_term$a uuf$ )isAction$ )uug$ )uuh$ )(fun_app$z ?v2 ?v3 ))))false ))(and (forall ((?v2 B_a_b_process_term_fun$ )(?v3 A_process$ ))(=> (and (= ?v0 ?v2 )(and (= ?v1 (proc$ ?v3 ))(fun_app$b isAction$ ?v3 )))false ))(forall ((?v2 B_a_b_process_term_fun$ )(?v3 A$ )(?v4 A_b_process_term$ ))(=> (and (= ?v0 ?v2 )(= ?v1 (act$ ?v3 ?v4 )))false )))))false )):named a151 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ ))(=> (and (not (fun_app$w (isACT$ ?v0 )?v1 ))(and (forall ((?v2 B_a_b_process_term_fun$ )(?v3 B$ ))(=> (and (= ?v0 ?v2 )(and (= ?v1 (var$ ?v3 ))(not (fun_app$w (fun_app$ae (fun_app$af (fun_app$ag (case_process_term$a uuf$ )isAction$ )uug$ )uuh$ )(fun_app$z ?v2 ?v3 )))))false ))(and (forall ((?v2 B_a_b_process_term_fun$ )(?v3 A_process$ ))(=> (and (= ?v0 ?v2 )(and (= ?v1 (proc$ ?v3 ))(not (fun_app$b isAction$ ?v3 ))))false ))(forall ((?v2 B_a_b_process_term_fun$ )(?v3 A_b_process_term$ )(?v4 A_b_process_term$ ))(=> (and (= ?v0 ?v2 )(= ?v1 (ch$ ?v3 ?v4 )))false )))))false )):named a152 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ ))(= (guarded$ ?v0 )(forall ((?v1 B$ )(?v2 B$ ))(not (= (fun_app$z ?v0 ?v1 )(var$ ?v2 )))))):named a153 ))
(assert (! (forall ((?v0 B_a_b_process_term_fun$ )(?v1 A_b_process_term$ )(?v2 A$ ))(=> (and (= (pref$ ?v0 ?v1 )?v2 )(and (forall ((?v3 B_a_b_process_term_fun$ )(?v4 B$ ))(=> (and (= ?v0 ?v3 )(and (= ?v1 (var$ ?v4 ))(= ?v2 (case_process_term$ uuy$ uuz$ uva$ uvb$ (fun_app$z ?v3 ?v4 )))))false ))(and (forall ((?v3 B_a_b_process_term_fun$ )(?v4 A_process$ ))(=> (and (= ?v0 ?v3 )(and (= ?v1 (proc$ ?v4 ))(= ?v2 (prefOf$ ?v4 ))))false ))(and (forall ((?v3 B_a_b_process_term_fun$ )(?v4 A$ )(?v5 A_b_process_term$ ))(=> (and (= ?v0 ?v3 )(and (= ?v1 (act$ ?v4 ?v5 ))(= ?v2 ?v4 )))false ))(forall ((?v3 B_a_b_process_term_fun$ )(?v4 A_b_process_term$ )(?v5 A_b_process_term$ ))(=> (and (= ?v0 ?v3 )(and (= ?v1 (ch$ ?v4 ?v5 ))(= ?v2 undefined$a )))false ))))))false )):named a154 ))
(assert (! (forall ((?v0 A_b_process_term$ )(?v1 A_b_process_term$ )(?v2 A_b_process_term$ )(?v3 A_b_process_term$ ))(= (= (ch$ ?v0 ?v1 )(ch$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a155 ))
(check-sat )
;(get-unsat-core )
