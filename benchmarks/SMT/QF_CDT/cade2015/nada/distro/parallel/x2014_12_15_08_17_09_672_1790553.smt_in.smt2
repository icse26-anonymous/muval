;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort Dtree_dtree_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_set$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_bool_fun$ 0 )
(declare-sort T_dtree_sum_dtree_set_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_prod_set$ 0 )
(declare-sort Dtree_dtree_dtree_prod_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_fun$ 0 )
(declare-sort T_dtree_sum_dtree_prod_set$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort Dtree_set_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_set_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_prod_set$ 0 )
(declare-sort Dtree_dtree_prod_dtree_prod_set$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_set_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_dtree_prod_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_prod_dtree_fun$ 0 )
(declare-sort Dtree_dtree_T_dtree_sum_prod_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_prod_set$ 0 )
(declare-sort T_dtree_sum_dtree_dtree_prod_fun$ 0 )
(declare-sort T_dtree_sum_dtree_prod_dtree_fun$ 0 )
(declare-sort Dtree_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_set_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_dtree_prod_set_fun$ 0 )
(declare-sort Dtree_dtree_T_dtree_sum_prod_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_dtree_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_dtree_dtree_prod_set_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_dtree_prod_prod_set$ 0 )
(declare-sort Dtree_dtree_T_dtree_sum_prod_prod_set$ 0 )
(declare-sort Dtree_dtree_prod_T_dtree_sum_prod_set$ 0 )
(declare-sort T_dtree_sum_dtree_dtree_prod_prod_set$ 0 )
(declare-sort Dtree_T_dtree_sum_T_dtree_sum_prod_fun$ 0 )
(declare-sort T_dtree_sum_dtree_T_dtree_sum_prod_fun$ 0 )
(declare-sort Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_prod_set_dtree_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_prod_set_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_prod_set_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_dtree_prod_set_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_prod_set_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_prod_set_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ 0 )
(declare-sort T_dtree_sum_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ 0 )
(declare-sort T_dtree_sum$ 0)
(declare-sort Dtree_dtree_prod$ 0)
(declare-sort T_dtree_sum_dtree_prod$ 0)
(declare-sort Dtree_T_dtree_sum_prod$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_prod$ 0)
(declare-sort Dtree_dtree_dtree_prod_prod$ 0)
(declare-sort Dtree_dtree_prod_dtree_prod$ 0)
(declare-sort T_dtree_sum_dtree_dtree_prod_prod$ 0)
(declare-sort Dtree_dtree_T_dtree_sum_prod_prod$ 0)
(declare-sort Dtree_T_dtree_sum_dtree_prod_prod$ 0)
(declare-sort Dtree_dtree_prod_T_dtree_sum_prod$ 0)
(declare-fun projl$ (T_dtree_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$)Dtree$)
(declare-fun inr$ (Dtree$ )T_dtree_sum$)
(declare-fun fst$ (Dtree_dtree_prod$)Dtree$)
(declare-fun snd$ (Dtree_dtree_prod$)Dtree$)
(declare-fun pair$ (Dtree$ Dtree$ )Dtree_dtree_prod$)
(declare-fun fst$a (T_dtree_sum_dtree_prod$)T_dtree_sum$)
(declare-fun snd$a (T_dtree_sum_dtree_prod$)Dtree$)
(declare-fun pair$a (T_dtree_sum$ Dtree$ )T_dtree_sum_dtree_prod$)
(declare-fun fst$b (Dtree_T_dtree_sum_prod$)Dtree$)
(declare-fun snd$b (Dtree_T_dtree_sum_prod$)T_dtree_sum$)
(declare-fun pair$b (Dtree$ T_dtree_sum$ )Dtree_T_dtree_sum_prod$)
(declare-fun fst$c (T_dtree_sum_T_dtree_sum_prod$)T_dtree_sum$)
(declare-fun snd$c (T_dtree_sum_T_dtree_sum_prod$)T_dtree_sum$)
(declare-fun pair$c (T_dtree_sum$ T_dtree_sum$ )T_dtree_sum_T_dtree_sum_prod$)
(declare-fun fst$d (Dtree_dtree_dtree_prod_prod$)Dtree$)
(declare-fun snd$d (Dtree_dtree_dtree_prod_prod$)Dtree_dtree_prod$)
(declare-fun pair$d (Dtree$ Dtree_dtree_prod$ )Dtree_dtree_dtree_prod_prod$)
(declare-fun fst$e (Dtree_dtree_prod_dtree_prod$)Dtree_dtree_prod$)
(declare-fun snd$e (Dtree_dtree_prod_dtree_prod$)Dtree$)
(declare-fun pair$e (Dtree_dtree_prod$ Dtree$ )Dtree_dtree_prod_dtree_prod$)
(declare-fun fst$f (T_dtree_sum_dtree_dtree_prod_prod$)T_dtree_sum$)
(declare-fun snd$f (T_dtree_sum_dtree_dtree_prod_prod$)Dtree_dtree_prod$)
(declare-fun pair$f (T_dtree_sum$ Dtree_dtree_prod$ )T_dtree_sum_dtree_dtree_prod_prod$)
(declare-fun fst$g (Dtree_dtree_T_dtree_sum_prod_prod$)Dtree$)
(declare-fun snd$g (Dtree_dtree_T_dtree_sum_prod_prod$)Dtree_T_dtree_sum_prod$)
(declare-fun pair$g (Dtree$ Dtree_T_dtree_sum_prod$ )Dtree_dtree_T_dtree_sum_prod_prod$)
(declare-fun fst$h (Dtree_T_dtree_sum_dtree_prod_prod$)Dtree$)
(declare-fun snd$h (Dtree_T_dtree_sum_dtree_prod_prod$)T_dtree_sum_dtree_prod$)
(declare-fun pair$h (Dtree$ T_dtree_sum_dtree_prod$ )Dtree_T_dtree_sum_dtree_prod_prod$)
(declare-fun fst$i (Dtree_dtree_prod_T_dtree_sum_prod$)Dtree_dtree_prod$)
(declare-fun snd$i (Dtree_dtree_prod_T_dtree_sum_prod$)T_dtree_sum$)
(declare-fun pair$i (Dtree_dtree_prod$ T_dtree_sum$ )Dtree_dtree_prod_T_dtree_sum_prod$)
(declare-fun t$ ()Dtree$ )
(declare-fun uu$ ()Dtree_bool_fun$ )
(declare-fun par$ ()Dtree_dtree_prod_dtree_fun$ )
(declare-fun tr1$ ()Dtree$ )
(declare-fun tr2$ ()Dtree$ )
(declare-fun uua$ ()Dtree_bool_fun$ )
(declare-fun uub$ ()Dtree_dtree_set_fun$ )
(declare-fun uuc$ ()Dtree_dtree_fun$ )
(declare-fun uud$ ()T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun uue$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun uuf$ (Dtree$ )Dtree_dtree_set_fun$ )
(declare-fun uug$ (T_dtree_sum_dtree_fun$ )Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuh$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uui$ (Dtree_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uuj$ (Dtree_dtree_fun$ )Dtree_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uuk$ (Dtree_dtree_fun$ )Dtree_set_dtree_bool_fun_fun$ )
(declare-fun uul$ (Dtree_T_dtree_sum_fun$ )T_dtree_sum_set_dtree_bool_fun_fun$ )
(declare-fun uum$ (Dtree_dtree_dtree_prod_fun$ )Dtree_dtree_prod_set_dtree_bool_fun_fun$ )
(declare-fun uun$ (T_dtree_sum_dtree_fun$ )Dtree_set_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuo$ (Dtree_dtree_T_dtree_sum_prod_fun$ )Dtree_T_dtree_sum_prod_set_dtree_bool_fun_fun$ )
(declare-fun uup$ (Dtree_T_dtree_sum_dtree_prod_fun$ )T_dtree_sum_dtree_prod_set_dtree_bool_fun_fun$ )
(declare-fun uuq$ (T_dtree_sum_dtree_dtree_prod_fun$ )Dtree_dtree_prod_set_T_dtree_sum_bool_fun_fun$ )
(declare-fun uur$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_set_T_dtree_sum_bool_fun_fun$ )
(declare-fun uus$ (Dtree_T_dtree_sum_T_dtree_sum_prod_fun$ )T_dtree_sum_T_dtree_sum_prod_set_dtree_bool_fun_fun$ )
(declare-fun uut$ (T_dtree_sum_dtree_T_dtree_sum_prod_fun$ )Dtree_T_dtree_sum_prod_set_T_dtree_sum_bool_fun_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun image$ (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod_set$ )Dtree_set$ )
(declare-fun sigma$ (Dtree_set$ Dtree_dtree_set_fun$ )Dtree_dtree_prod_set$ )
(declare-fun image$a (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun image$b (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$c (T_dtree_sum_dtree_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun image$d (Dtree_T_dtree_sum_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun image$e (Dtree_dtree_dtree_prod_fun$ Dtree_set$ )Dtree_dtree_prod_set$ )
(declare-fun image$f (T_dtree_sum_dtree_dtree_prod_fun$ T_dtree_sum_set$ )Dtree_dtree_prod_set$ )
(declare-fun image$g (Dtree_dtree_T_dtree_sum_prod_fun$ Dtree_set$ )Dtree_T_dtree_sum_prod_set$ )
(declare-fun image$h (Dtree_T_dtree_sum_dtree_prod_fun$ Dtree_set$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun image$i (Dtree_dtree_prod_T_dtree_sum_fun$ Dtree_dtree_prod_set$ )T_dtree_sum_set$ )
(declare-fun member$ (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun sigma$a (T_dtree_sum_set$ T_dtree_sum_dtree_set_fun$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun sigma$b (Dtree_set$ Dtree_T_dtree_sum_set_fun$ )Dtree_T_dtree_sum_prod_set$ )
(declare-fun sigma$c (T_dtree_sum_set$ T_dtree_sum_T_dtree_sum_set_fun$ )T_dtree_sum_T_dtree_sum_prod_set$ )
(declare-fun sigma$d (Dtree_set$ Dtree_dtree_dtree_prod_set_fun$ )Dtree_dtree_dtree_prod_prod_set$ )
(declare-fun sigma$e (Dtree_dtree_prod_set$ Dtree_dtree_prod_dtree_set_fun$ )Dtree_dtree_prod_dtree_prod_set$ )
(declare-fun sigma$f (T_dtree_sum_set$ T_dtree_sum_dtree_dtree_prod_set_fun$ )T_dtree_sum_dtree_dtree_prod_prod_set$ )
(declare-fun sigma$g (Dtree_set$ Dtree_dtree_T_dtree_sum_prod_set_fun$ )Dtree_dtree_T_dtree_sum_prod_prod_set$ )
(declare-fun sigma$h (Dtree_set$ Dtree_T_dtree_sum_dtree_prod_set_fun$ )Dtree_T_dtree_sum_dtree_prod_prod_set$ )
(declare-fun sigma$i (Dtree_dtree_prod_set$ Dtree_dtree_prod_T_dtree_sum_set_fun$ )Dtree_dtree_prod_T_dtree_sum_prod_set$ )
(declare-fun vimage$ (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun collect$ (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun fun_app$ (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun member$a (Dtree_T_dtree_sum_prod$ Dtree_T_dtree_sum_prod_set$ )Bool )
(declare-fun member$b (Dtree_dtree_prod$ Dtree_dtree_prod_set$ )Bool )
(declare-fun member$c (Dtree$ Dtree_set$ )Bool )
(declare-fun member$d (T_dtree_sum_T_dtree_sum_prod$ T_dtree_sum_T_dtree_sum_prod_set$ )Bool )
(declare-fun member$e (T_dtree_sum_dtree_prod$ T_dtree_sum_dtree_prod_set$ )Bool )
(declare-fun member$f (Dtree_dtree_dtree_prod_prod$ Dtree_dtree_dtree_prod_prod_set$ )Bool )
(declare-fun member$g (Dtree_dtree_prod_dtree_prod$ Dtree_dtree_prod_dtree_prod_set$ )Bool )
(declare-fun member$h (T_dtree_sum_dtree_dtree_prod_prod$ T_dtree_sum_dtree_dtree_prod_prod_set$ )Bool )
(declare-fun member$i (Dtree_dtree_T_dtree_sum_prod_prod$ Dtree_dtree_T_dtree_sum_prod_prod_set$ )Bool )
(declare-fun member$j (Dtree_T_dtree_sum_dtree_prod_prod$ Dtree_T_dtree_sum_dtree_prod_prod_set$ )Bool )
(declare-fun member$k (Dtree_dtree_prod_T_dtree_sum_prod$ Dtree_dtree_prod_T_dtree_sum_prod_set$ )Bool )
(declare-fun vimage$a (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun vimage$b (T_dtree_sum_dtree_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun vimage$c (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$d (Dtree_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$ )Dtree_set$ )
(declare-fun vimage$e (Dtree_dtree_prod_dtree_fun$ Dtree_set$ )Dtree_dtree_prod_set$ )
(declare-fun vimage$f (T_dtree_sum_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$ )T_dtree_sum_set$ )
(declare-fun vimage$g (Dtree_dtree_T_dtree_sum_prod_fun$ Dtree_T_dtree_sum_prod_set$ )Dtree_set$ )
(declare-fun vimage$h (Dtree_T_dtree_sum_dtree_prod_fun$ T_dtree_sum_dtree_prod_set$ )Dtree_set$ )
(declare-fun vimage$i (Dtree_dtree_prod_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_dtree_prod_set$ )
(declare-fun vimage$j (Dtree_T_dtree_sum_prod_dtree_fun$ Dtree_set$ )Dtree_T_dtree_sum_prod_set$ )
(declare-fun vimage$k (T_dtree_sum_dtree_prod_dtree_fun$ Dtree_set$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun vimage$l (Dtree_T_dtree_sum_T_dtree_sum_prod_fun$ T_dtree_sum_T_dtree_sum_prod_set$ )Dtree_set$ )
(declare-fun vimage$m (T_dtree_sum_dtree_T_dtree_sum_prod_fun$ Dtree_T_dtree_sum_prod_set$ )T_dtree_sum_set$ )
(declare-fun vimage$n (Dtree_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ T_dtree_sum_T_dtree_sum_prod_set$ )Dtree_dtree_prod_set$ )
(declare-fun vimage$o (Dtree_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ T_dtree_sum_T_dtree_sum_prod_set$ )Dtree_T_dtree_sum_prod_set$ )
(declare-fun vimage$p (T_dtree_sum_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ T_dtree_sum_T_dtree_sum_prod_set$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun vimage$q (T_dtree_sum_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ T_dtree_sum_T_dtree_sum_prod_set$ )T_dtree_sum_T_dtree_sum_prod_set$ )
(declare-fun collect$a (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun fun_app$a (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$b (Dtree_dtree_set_fun$ Dtree$ )Dtree_set$ )
(declare-fun fun_app$c (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$d (Dtree_T_dtree_sum_prod_set_T_dtree_sum_bool_fun_fun$ Dtree_T_dtree_sum_prod_set$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$e (T_dtree_sum_dtree_T_dtree_sum_prod_fun$ T_dtree_sum$ )Dtree_T_dtree_sum_prod$ )
(declare-fun fun_app$f (Dtree_dtree_prod_set_T_dtree_sum_bool_fun_fun$ Dtree_dtree_prod_set$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$g (T_dtree_sum_dtree_dtree_prod_fun$ T_dtree_sum$ )Dtree_dtree_prod$ )
(declare-fun fun_app$h (T_dtree_sum_set_T_dtree_sum_bool_fun_fun$ T_dtree_sum_set$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$i (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$j (Dtree_set_T_dtree_sum_bool_fun_fun$ Dtree_set$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$k (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$l (T_dtree_sum_T_dtree_sum_prod_set_dtree_bool_fun_fun$ T_dtree_sum_T_dtree_sum_prod_set$ )Dtree_bool_fun$ )
(declare-fun fun_app$m (Dtree_T_dtree_sum_T_dtree_sum_prod_fun$ Dtree$ )T_dtree_sum_T_dtree_sum_prod$ )
(declare-fun fun_app$n (T_dtree_sum_dtree_prod_set_dtree_bool_fun_fun$ T_dtree_sum_dtree_prod_set$ )Dtree_bool_fun$ )
(declare-fun fun_app$o (Dtree_T_dtree_sum_dtree_prod_fun$ Dtree$ )T_dtree_sum_dtree_prod$ )
(declare-fun fun_app$p (Dtree_T_dtree_sum_prod_set_dtree_bool_fun_fun$ Dtree_T_dtree_sum_prod_set$ )Dtree_bool_fun$ )
(declare-fun fun_app$q (Dtree_dtree_T_dtree_sum_prod_fun$ Dtree$ )Dtree_T_dtree_sum_prod$ )
(declare-fun fun_app$r (Dtree_dtree_prod_set_dtree_bool_fun_fun$ Dtree_dtree_prod_set$ )Dtree_bool_fun$ )
(declare-fun fun_app$s (Dtree_dtree_dtree_prod_fun$ Dtree$ )Dtree_dtree_prod$ )
(declare-fun fun_app$t (T_dtree_sum_set_dtree_bool_fun_fun$ T_dtree_sum_set$ )Dtree_bool_fun$ )
(declare-fun fun_app$u (Dtree_set_dtree_bool_fun_fun$ Dtree_set$ )Dtree_bool_fun$ )
(declare-fun fun_app$v (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$w (T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$x (Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ Dtree_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$y (T_dtree_sum_bool_fun_dtree_bool_fun_fun$ T_dtree_sum_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$z (Dtree_bool_fun_dtree_bool_fun_fun$ Dtree_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$aa (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod$ )Dtree$ )
(declare-fun fun_app$ab (T_dtree_sum_dtree_set_fun$ T_dtree_sum$ )Dtree_set$ )
(declare-fun fun_app$ac (Dtree_T_dtree_sum_set_fun$ Dtree$ )T_dtree_sum_set$ )
(declare-fun fun_app$ad (T_dtree_sum_T_dtree_sum_set_fun$ T_dtree_sum$ )T_dtree_sum_set$ )
(declare-fun fun_app$ae (Dtree_dtree_dtree_prod_set_fun$ Dtree$ )Dtree_dtree_prod_set$ )
(declare-fun fun_app$af (Dtree_dtree_prod_dtree_set_fun$ Dtree_dtree_prod$ )Dtree_set$ )
(declare-fun fun_app$ag (T_dtree_sum_dtree_dtree_prod_set_fun$ T_dtree_sum$ )Dtree_dtree_prod_set$ )
(declare-fun fun_app$ah (Dtree_dtree_T_dtree_sum_prod_set_fun$ Dtree$ )Dtree_T_dtree_sum_prod_set$ )
(declare-fun fun_app$ai (Dtree_T_dtree_sum_dtree_prod_set_fun$ Dtree$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun fun_app$aj (Dtree_dtree_prod_T_dtree_sum_set_fun$ Dtree_dtree_prod$ )T_dtree_sum_set$ )
(declare-fun fun_app$ak (Dtree_dtree_prod_T_dtree_sum_fun$ Dtree_dtree_prod$ )T_dtree_sum$ )
(declare-fun fun_app$al (Dtree_T_dtree_sum_prod_dtree_fun$ Dtree_T_dtree_sum_prod$ )Dtree$ )
(declare-fun fun_app$am (T_dtree_sum_dtree_prod_dtree_fun$ T_dtree_sum_dtree_prod$ )Dtree$ )
(declare-fun fun_app$an (Dtree_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ Dtree_dtree_prod$ )T_dtree_sum_T_dtree_sum_prod$ )
(declare-fun fun_app$ao (Dtree_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ Dtree_T_dtree_sum_prod$ )T_dtree_sum_T_dtree_sum_prod$ )
(declare-fun fun_app$ap (T_dtree_sum_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ T_dtree_sum_dtree_prod$ )T_dtree_sum_T_dtree_sum_prod$ )
(declare-fun fun_app$aq (T_dtree_sum_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ T_dtree_sum_T_dtree_sum_prod$ )T_dtree_sum_T_dtree_sum_prod$ )
(declare-fun fun_app$ar (Dtree_dtree_prod_bool_fun$ Dtree_dtree_prod$ )Bool )
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$ uua$ ?v0 )(member$ (inr$ ?v0 )(cont$ tr2$ ))):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$ uu$ ?v0 )(member$ (inr$ ?v0 )(cont$ tr1$ ))):pattern ((fun_app$ uu$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$a uue$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$a uue$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uub$ ?v0 )(collect$ uua$ )):pattern ((fun_app$b uub$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(! (= (fun_app$b (uuf$ ?v0 )?v1 )(vimage$ uue$ (cont$ ?v0 ))):pattern ((fun_app$b (uuf$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_T_dtree_sum_prod_fun$ )(?v1 Dtree_T_dtree_sum_prod_set$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$d (uut$ ?v0 )?v1 )?v2 )(member$a (fun_app$e ?v0 ?v2 )?v1 )):pattern ((fun_app$c (fun_app$d (uut$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_dtree_prod_fun$ )(?v1 Dtree_dtree_prod_set$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$f (uuq$ ?v0 )?v1 )?v2 )(member$b (fun_app$g ?v0 ?v2 )?v1 )):pattern ((fun_app$c (fun_app$f (uuq$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$h (uur$ ?v0 )?v1 )?v2 )(member$ (fun_app$i ?v0 ?v2 )?v1 )):pattern ((fun_app$c (fun_app$h (uur$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$j (uun$ ?v0 )?v1 )?v2 )(member$c (fun_app$k ?v0 ?v2 )?v1 )):pattern ((fun_app$c (fun_app$j (uun$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_T_dtree_sum_prod_fun$ )(?v1 T_dtree_sum_T_dtree_sum_prod_set$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$l (uus$ ?v0 )?v1 )?v2 )(member$d (fun_app$m ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$l (uus$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_dtree_prod_fun$ )(?v1 T_dtree_sum_dtree_prod_set$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$n (uup$ ?v0 )?v1 )?v2 )(member$e (fun_app$o ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$n (uup$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Dtree_dtree_T_dtree_sum_prod_fun$ )(?v1 Dtree_T_dtree_sum_prod_set$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$p (uuo$ ?v0 )?v1 )?v2 )(member$a (fun_app$q ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$p (uuo$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$ )(?v1 Dtree_dtree_prod_set$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$r (uum$ ?v0 )?v1 )?v2 )(member$b (fun_app$s ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$r (uum$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$t (uul$ ?v0 )?v1 )?v2 )(member$ (fun_app$a ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$t (uul$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$u (uuk$ ?v0 )?v1 )?v2 )(member$c (fun_app$v ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$u (uuk$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$w (uuh$ ?v0 )?v1 )?v2 )(fun_app$c ?v1 (fun_app$i ?v0 ?v2 ))):pattern ((fun_app$c (fun_app$w (uuh$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$c (fun_app$x (uug$ ?v0 )?v1 )?v2 )(fun_app$ ?v1 (fun_app$k ?v0 ?v2 ))):pattern ((fun_app$c (fun_app$x (uug$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$y (uui$ ?v0 )?v1 )?v2 )(fun_app$c ?v1 (fun_app$a ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$y (uui$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$ (fun_app$z (uuj$ ?v0 )?v1 )?v2 )(fun_app$ ?v1 (fun_app$v ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$z (uuj$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$i uud$ ?v0 )?v0 ):pattern ((fun_app$i uud$ ?v0 )))):named a19 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$v uuc$ ?v0 )?v0 ):pattern ((fun_app$v uuc$ ?v0 )))):named a20 ))
(assert (! (not (= (member$ (inr$ t$ )(cont$ (fun_app$aa par$ (pair$ tr1$ tr2$ ))))(member$c t$ (image$ par$ (sigma$ (collect$ uu$ )uub$ ))))):named a21 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ ))(=> (forall ((?v1 Dtree$ )(?v2 Dtree$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a22 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_set_fun$ ))(= (member$b (pair$ ?v0 ?v1 )(sigma$ ?v2 ?v3 ))(and (member$c ?v0 ?v2 )(member$c ?v1 (fun_app$b ?v3 ?v0 ))))):named a23 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_dtree_set_fun$ ))(= (member$e (pair$a ?v0 ?v1 )(sigma$a ?v2 ?v3 ))(and (member$ ?v0 ?v2 )(member$c ?v1 (fun_app$ab ?v3 ?v0 ))))):named a24 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum$ )(?v2 Dtree_set$ )(?v3 Dtree_T_dtree_sum_set_fun$ ))(= (member$a (pair$b ?v0 ?v1 )(sigma$b ?v2 ?v3 ))(and (member$c ?v0 ?v2 )(member$ ?v1 (fun_app$ac ?v3 ?v0 ))))):named a25 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_T_dtree_sum_set_fun$ ))(= (member$d (pair$c ?v0 ?v1 )(sigma$c ?v2 ?v3 ))(and (member$ ?v0 ?v2 )(member$ ?v1 (fun_app$ad ?v3 ?v0 ))))):named a26 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_prod$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_dtree_prod_set_fun$ ))(= (member$f (pair$d ?v0 ?v1 )(sigma$d ?v2 ?v3 ))(and (member$c ?v0 ?v2 )(member$b ?v1 (fun_app$ae ?v3 ?v0 ))))):named a27 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree$ )(?v2 Dtree_dtree_prod_set$ )(?v3 Dtree_dtree_prod_dtree_set_fun$ ))(= (member$g (pair$e ?v0 ?v1 )(sigma$e ?v2 ?v3 ))(and (member$b ?v0 ?v2 )(member$c ?v1 (fun_app$af ?v3 ?v0 ))))):named a28 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_dtree_prod$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_dtree_dtree_prod_set_fun$ ))(= (member$h (pair$f ?v0 ?v1 )(sigma$f ?v2 ?v3 ))(and (member$ ?v0 ?v2 )(member$b ?v1 (fun_app$ag ?v3 ?v0 ))))):named a29 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_prod$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_T_dtree_sum_prod_set_fun$ ))(= (member$i (pair$g ?v0 ?v1 )(sigma$g ?v2 ?v3 ))(and (member$c ?v0 ?v2 )(member$a ?v1 (fun_app$ah ?v3 ?v0 ))))):named a30 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_prod$ )(?v2 Dtree_set$ )(?v3 Dtree_T_dtree_sum_dtree_prod_set_fun$ ))(= (member$j (pair$h ?v0 ?v1 )(sigma$h ?v2 ?v3 ))(and (member$c ?v0 ?v2 )(member$e ?v1 (fun_app$ai ?v3 ?v0 ))))):named a31 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 T_dtree_sum$ )(?v2 Dtree_dtree_prod_set$ )(?v3 Dtree_dtree_prod_T_dtree_sum_set_fun$ ))(= (member$k (pair$i ?v0 ?v1 )(sigma$i ?v2 ?v3 ))(and (member$b ?v0 ?v2 )(member$ ?v1 (fun_app$aj ?v3 ?v0 ))))):named a32 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_set_fun$ ))(=> (and (member$c ?v0 ?v1 )(member$c ?v2 (fun_app$b ?v3 ?v0 )))(member$b (pair$ ?v0 ?v2 )(sigma$ ?v1 ?v3 )))):named a33 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree$ )(?v3 T_dtree_sum_dtree_set_fun$ ))(=> (and (member$ ?v0 ?v1 )(member$c ?v2 (fun_app$ab ?v3 ?v0 )))(member$e (pair$a ?v0 ?v2 )(sigma$a ?v1 ?v3 )))):named a34 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum$ )(?v3 Dtree_T_dtree_sum_set_fun$ ))(=> (and (member$c ?v0 ?v1 )(member$ ?v2 (fun_app$ac ?v3 ?v0 )))(member$a (pair$b ?v0 ?v2 )(sigma$b ?v1 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_set_fun$ ))(=> (and (member$ ?v0 ?v1 )(member$ ?v2 (fun_app$ad ?v3 ?v0 )))(member$d (pair$c ?v0 ?v2 )(sigma$c ?v1 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_dtree_prod_set_fun$ ))(=> (and (member$c ?v0 ?v1 )(member$b ?v2 (fun_app$ae ?v3 ?v0 )))(member$f (pair$d ?v0 ?v2 )(sigma$d ?v1 ?v3 )))):named a37 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_prod_dtree_set_fun$ ))(=> (and (member$b ?v0 ?v1 )(member$c ?v2 (fun_app$af ?v3 ?v0 )))(member$g (pair$e ?v0 ?v2 )(sigma$e ?v1 ?v3 )))):named a38 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree_dtree_prod$ )(?v3 T_dtree_sum_dtree_dtree_prod_set_fun$ ))(=> (and (member$ ?v0 ?v1 )(member$b ?v2 (fun_app$ag ?v3 ?v0 )))(member$h (pair$f ?v0 ?v2 )(sigma$f ?v1 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_T_dtree_sum_prod$ )(?v3 Dtree_dtree_T_dtree_sum_prod_set_fun$ ))(=> (and (member$c ?v0 ?v1 )(member$a ?v2 (fun_app$ah ?v3 ?v0 )))(member$i (pair$g ?v0 ?v2 )(sigma$g ?v1 ?v3 )))):named a40 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum_dtree_prod$ )(?v3 Dtree_T_dtree_sum_dtree_prod_set_fun$ ))(=> (and (member$c ?v0 ?v1 )(member$e ?v2 (fun_app$ai ?v3 ?v0 )))(member$j (pair$h ?v0 ?v2 )(sigma$h ?v1 ?v3 )))):named a41 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 T_dtree_sum$ )(?v3 Dtree_dtree_prod_T_dtree_sum_set_fun$ ))(=> (and (member$b ?v0 ?v1 )(member$ ?v2 (fun_app$aj ?v3 ?v0 )))(member$k (pair$i ?v0 ?v2 )(sigma$i ?v1 ?v3 )))):named a42 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (image$a uuc$ ?v0 )?v0 )):named a43 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (image$b uud$ ?v0 )?v0 )):named a44 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (vimage$ uue$ (cont$ (fun_app$aa par$ (pair$ ?v0 ?v1 ))))(image$ par$ (sigma$ (vimage$ uue$ (cont$ ?v0 ))(uuf$ ?v1 ))))):named a45 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a46 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a47 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$v ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (image$a ?v1 ?v3 )))):named a48 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_prod_dtree_fun$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$c ?v0 (image$ ?v1 ?v3 )))):named a49 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$k ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$c ?v0 (image$c ?v1 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$a ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$ ?v0 (image$d ?v1 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$b ?v1 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_dtree_prod_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$s ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$b ?v0 (image$e ?v1 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 T_dtree_sum_dtree_dtree_prod_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$g ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$f ?v1 ?v3 )))):named a54 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_prod$ )(?v1 Dtree_dtree_T_dtree_sum_prod_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$q ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$a ?v0 (image$g ?v1 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_prod$ )(?v1 Dtree_T_dtree_sum_dtree_prod_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$e ?v0 (image$h ?v1 ?v3 )))):named a56 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_dtree_prod_T_dtree_sum_fun$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= ?v0 (fun_app$ak ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$i ?v1 ?v3 )))):named a57 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum$ )(?v2 Dtree$ )(?v3 T_dtree_sum$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a58 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 Dtree$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a59 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a60 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a61 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum$ )(?v2 Dtree$ )(?v3 T_dtree_sum$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a62 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 Dtree$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a63 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a64 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a65 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_set_fun$ ))(=> (and (member$b (pair$ ?v0 ?v1 )(sigma$ ?v2 ?v3 ))(=> (and (member$c ?v0 ?v2 )(member$c ?v1 (fun_app$b ?v3 ?v0 )))false ))false )):named a66 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_dtree_set_fun$ ))(=> (and (member$e (pair$a ?v0 ?v1 )(sigma$a ?v2 ?v3 ))(=> (and (member$ ?v0 ?v2 )(member$c ?v1 (fun_app$ab ?v3 ?v0 )))false ))false )):named a67 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum$ )(?v2 Dtree_set$ )(?v3 Dtree_T_dtree_sum_set_fun$ ))(=> (and (member$a (pair$b ?v0 ?v1 )(sigma$b ?v2 ?v3 ))(=> (and (member$c ?v0 ?v2 )(member$ ?v1 (fun_app$ac ?v3 ?v0 )))false ))false )):named a68 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_T_dtree_sum_set_fun$ ))(=> (and (member$d (pair$c ?v0 ?v1 )(sigma$c ?v2 ?v3 ))(=> (and (member$ ?v0 ?v2 )(member$ ?v1 (fun_app$ad ?v3 ?v0 )))false ))false )):named a69 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_prod$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_dtree_prod_set_fun$ ))(=> (and (member$f (pair$d ?v0 ?v1 )(sigma$d ?v2 ?v3 ))(=> (and (member$c ?v0 ?v2 )(member$b ?v1 (fun_app$ae ?v3 ?v0 )))false ))false )):named a70 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree$ )(?v2 Dtree_dtree_prod_set$ )(?v3 Dtree_dtree_prod_dtree_set_fun$ ))(=> (and (member$g (pair$e ?v0 ?v1 )(sigma$e ?v2 ?v3 ))(=> (and (member$b ?v0 ?v2 )(member$c ?v1 (fun_app$af ?v3 ?v0 )))false ))false )):named a71 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_dtree_prod$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_dtree_dtree_prod_set_fun$ ))(=> (and (member$h (pair$f ?v0 ?v1 )(sigma$f ?v2 ?v3 ))(=> (and (member$ ?v0 ?v2 )(member$b ?v1 (fun_app$ag ?v3 ?v0 )))false ))false )):named a72 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_prod$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_T_dtree_sum_prod_set_fun$ ))(=> (and (member$i (pair$g ?v0 ?v1 )(sigma$g ?v2 ?v3 ))(=> (and (member$c ?v0 ?v2 )(member$a ?v1 (fun_app$ah ?v3 ?v0 )))false ))false )):named a73 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_prod$ )(?v2 Dtree_set$ )(?v3 Dtree_T_dtree_sum_dtree_prod_set_fun$ ))(=> (and (member$j (pair$h ?v0 ?v1 )(sigma$h ?v2 ?v3 ))(=> (and (member$c ?v0 ?v2 )(member$e ?v1 (fun_app$ai ?v3 ?v0 )))false ))false )):named a74 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 T_dtree_sum$ )(?v2 Dtree_dtree_prod_set$ )(?v3 Dtree_dtree_prod_T_dtree_sum_set_fun$ ))(=> (and (member$k (pair$i ?v0 ?v1 )(sigma$i ?v2 ?v3 ))(=> (and (member$b ?v0 ?v2 )(member$ ?v1 (fun_app$aj ?v3 ?v0 )))false ))false )):named a75 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum$ )(?v2 Dtree_set$ )(?v3 Dtree_T_dtree_sum_set_fun$ ))(=> (member$a (pair$b ?v0 ?v1 )(sigma$b ?v2 ?v3 ))(member$ ?v1 (fun_app$ac ?v3 ?v0 )))):named a76 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_dtree_set_fun$ ))(=> (member$e (pair$a ?v0 ?v1 )(sigma$a ?v2 ?v3 ))(member$c ?v1 (fun_app$ab ?v3 ?v0 )))):named a77 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_T_dtree_sum_set_fun$ ))(=> (member$d (pair$c ?v0 ?v1 )(sigma$c ?v2 ?v3 ))(member$ ?v1 (fun_app$ad ?v3 ?v0 )))):named a78 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_set_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )(sigma$ ?v2 ?v3 ))(member$c ?v1 (fun_app$b ?v3 ?v0 )))):named a79 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum$ )(?v2 Dtree_set$ )(?v3 Dtree_T_dtree_sum_set_fun$ ))(=> (member$a (pair$b ?v0 ?v1 )(sigma$b ?v2 ?v3 ))(member$c ?v0 ?v2 ))):named a80 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_dtree_set_fun$ ))(=> (member$e (pair$a ?v0 ?v1 )(sigma$a ?v2 ?v3 ))(member$ ?v0 ?v2 ))):named a81 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_T_dtree_sum_set_fun$ ))(=> (member$d (pair$c ?v0 ?v1 )(sigma$c ?v2 ?v3 ))(member$ ?v0 ?v2 ))):named a82 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree_set$ )(?v3 Dtree_dtree_set_fun$ ))(=> (member$b (pair$ ?v0 ?v1 )(sigma$ ?v2 ?v3 ))(member$c ?v0 ?v2 ))):named a83 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$c ?v0 (vimage$a ?v1 ?v2 ))(member$c (fun_app$v ?v1 ?v0 )?v2 ))):named a84 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$ ?v0 (vimage$b ?v1 ?v2 ))(member$c (fun_app$k ?v1 ?v0 )?v2 ))):named a85 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c ?v0 (vimage$ ?v1 ?v2 ))(member$ (fun_app$a ?v1 ?v0 )?v2 ))):named a86 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$c ?v1 ?v2 ))(member$ (fun_app$i ?v1 ?v0 )?v2 ))):named a87 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(= (member$c ?v0 (vimage$d ?v1 ?v2 ))(member$b (fun_app$s ?v1 ?v0 )?v2 ))):named a88 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (vimage$e ?v1 ?v2 ))(member$c (fun_app$aa ?v1 ?v0 )?v2 ))):named a89 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(= (member$ ?v0 (vimage$f ?v1 ?v2 ))(member$b (fun_app$g ?v1 ?v0 )?v2 ))):named a90 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_T_dtree_sum_prod_fun$ )(?v2 Dtree_T_dtree_sum_prod_set$ ))(= (member$c ?v0 (vimage$g ?v1 ?v2 ))(member$a (fun_app$q ?v1 ?v0 )?v2 ))):named a91 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_dtree_prod_fun$ )(?v2 T_dtree_sum_dtree_prod_set$ ))(= (member$c ?v0 (vimage$h ?v1 ?v2 ))(member$e (fun_app$o ?v1 ?v0 )?v2 ))):named a92 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b ?v0 (vimage$i ?v1 ?v2 ))(member$ (fun_app$ak ?v1 ?v0 )?v2 ))):named a93 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$v ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$c ?v1 (vimage$a ?v0 ?v3 )))):named a94 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$k ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$ ?v1 (vimage$b ?v0 ?v3 )))):named a95 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$a ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$c ?v1 (vimage$ ?v0 ?v3 )))):named a96 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$i ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (vimage$c ?v0 ?v3 )))):named a97 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_fun$ )(?v1 Dtree_dtree_prod$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$aa ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$b ?v1 (vimage$e ?v0 ?v3 )))):named a98 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$ )(?v1 Dtree$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= (fun_app$s ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$c ?v1 (vimage$d ?v0 ?v3 )))):named a99 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_T_dtree_sum_fun$ )(?v1 Dtree_dtree_prod$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$ak ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$b ?v1 (vimage$i ?v0 ?v3 )))):named a100 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_prod_dtree_fun$ )(?v1 Dtree_T_dtree_sum_prod$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$al ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$a ?v1 (vimage$j ?v0 ?v3 )))):named a101 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_prod_dtree_fun$ )(?v1 T_dtree_sum_dtree_prod$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$am ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$e ?v1 (vimage$k ?v0 ?v3 )))):named a102 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_dtree_prod_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= (fun_app$g ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$ ?v1 (vimage$f ?v0 ?v3 )))):named a103 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$b ?v0 (collect$ ?v1 ))(collect$a (fun_app$x (uug$ ?v0 )?v1 )))):named a104 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$c ?v0 (collect$a ?v1 ))(collect$a (fun_app$w (uuh$ ?v0 )?v1 )))):named a105 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$ ?v0 (collect$a ?v1 ))(collect$ (fun_app$y (uui$ ?v0 )?v1 )))):named a106 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$a ?v0 (collect$ ?v1 ))(collect$ (fun_app$z (uuj$ ?v0 )?v1 )))):named a107 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (vimage$a uuc$ ?v0 )?v0 )):named a108 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (vimage$c uud$ ?v0 )?v0 )):named a109 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ ))(= (vimage$a ?v0 ?v1 )(collect$ (fun_app$u (uuk$ ?v0 )?v1 )))):named a110 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$ ?v0 ?v1 )(collect$ (fun_app$t (uul$ ?v0 )?v1 )))):named a111 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$ )(?v1 Dtree_dtree_prod_set$ ))(= (vimage$d ?v0 ?v1 )(collect$ (fun_app$r (uum$ ?v0 )?v1 )))):named a112 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_set$ ))(= (vimage$b ?v0 ?v1 )(collect$a (fun_app$j (uun$ ?v0 )?v1 )))):named a113 ))
(assert (! (forall ((?v0 Dtree_dtree_T_dtree_sum_prod_fun$ )(?v1 Dtree_T_dtree_sum_prod_set$ ))(= (vimage$g ?v0 ?v1 )(collect$ (fun_app$p (uuo$ ?v0 )?v1 )))):named a114 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_dtree_prod_fun$ )(?v1 T_dtree_sum_dtree_prod_set$ ))(= (vimage$h ?v0 ?v1 )(collect$ (fun_app$n (uup$ ?v0 )?v1 )))):named a115 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_dtree_prod_fun$ )(?v1 Dtree_dtree_prod_set$ ))(= (vimage$f ?v0 ?v1 )(collect$a (fun_app$f (uuq$ ?v0 )?v1 )))):named a116 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$c ?v0 ?v1 )(collect$a (fun_app$h (uur$ ?v0 )?v1 )))):named a117 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_T_dtree_sum_prod_fun$ )(?v1 T_dtree_sum_T_dtree_sum_prod_set$ ))(= (vimage$l ?v0 ?v1 )(collect$ (fun_app$l (uus$ ?v0 )?v1 )))):named a118 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_T_dtree_sum_prod_fun$ )(?v1 Dtree_T_dtree_sum_prod_set$ ))(= (vimage$m ?v0 ?v1 )(collect$a (fun_app$d (uut$ ?v0 )?v1 )))):named a119 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$ ?v0 (fun_app$k ?v1 ?v3 ))(fun_app$c ?v2 ?v3 )))(= (vimage$b ?v1 (collect$ ?v0 ))(collect$a ?v2 )))):named a120 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$c ?v0 (fun_app$i ?v1 ?v3 ))(fun_app$c ?v2 ?v3 )))(= (vimage$c ?v1 (collect$a ?v0 ))(collect$a ?v2 )))):named a121 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(= (fun_app$c ?v0 (fun_app$a ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))(= (vimage$ ?v1 (collect$a ?v0 ))(collect$ ?v2 )))):named a122 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(= (fun_app$ ?v0 (fun_app$v ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))(= (vimage$a ?v1 (collect$ ?v0 ))(collect$ ?v2 )))):named a123 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(=> (and (member$c ?v0 (vimage$a ?v1 ?v2 ))(forall ((?v3 Dtree$ ))(=> (and (= (fun_app$v ?v1 ?v0 )?v3 )(member$c ?v3 ?v2 ))false )))false )):named a124 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(=> (and (member$ ?v0 (vimage$b ?v1 ?v2 ))(forall ((?v3 Dtree$ ))(=> (and (= (fun_app$k ?v1 ?v0 )?v3 )(member$c ?v3 ?v2 ))false )))false )):named a125 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$c ?v0 (vimage$ ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$a ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a126 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 (vimage$c ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$i ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a127 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(=> (and (member$c ?v0 (vimage$d ?v1 ?v2 ))(forall ((?v3 Dtree_dtree_prod$ ))(=> (and (= (fun_app$s ?v1 ?v0 )?v3 )(member$b ?v3 ?v2 ))false )))false )):named a128 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_dtree_fun$ )(?v2 Dtree_set$ ))(=> (and (member$b ?v0 (vimage$e ?v1 ?v2 ))(forall ((?v3 Dtree$ ))(=> (and (= (fun_app$aa ?v1 ?v0 )?v3 )(member$c ?v3 ?v2 ))false )))false )):named a129 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(=> (and (member$ ?v0 (vimage$f ?v1 ?v2 ))(forall ((?v3 Dtree_dtree_prod$ ))(=> (and (= (fun_app$g ?v1 ?v0 )?v3 )(member$b ?v3 ?v2 ))false )))false )):named a130 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_T_dtree_sum_prod_fun$ )(?v2 Dtree_T_dtree_sum_prod_set$ ))(=> (and (member$c ?v0 (vimage$g ?v1 ?v2 ))(forall ((?v3 Dtree_T_dtree_sum_prod$ ))(=> (and (= (fun_app$q ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a131 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_dtree_prod_fun$ )(?v2 T_dtree_sum_dtree_prod_set$ ))(=> (and (member$c ?v0 (vimage$h ?v1 ?v2 ))(forall ((?v3 T_dtree_sum_dtree_prod$ ))(=> (and (= (fun_app$o ?v1 ?v0 )?v3 )(member$e ?v3 ?v2 ))false )))false )):named a132 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$b ?v0 (vimage$i ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$ak ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a133 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$c ?v0 (vimage$a ?v1 ?v2 ))(member$c (fun_app$v ?v1 ?v0 )?v2 ))):named a134 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$ ?v0 (vimage$b ?v1 ?v2 ))(member$c (fun_app$k ?v1 ?v0 )?v2 ))):named a135 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$c ?v0 (vimage$ ?v1 ?v2 ))(member$ (fun_app$a ?v1 ?v0 )?v2 ))):named a136 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ ?v0 (vimage$c ?v1 ?v2 ))(member$ (fun_app$i ?v1 ?v0 )?v2 ))):named a137 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(=> (member$c ?v0 (vimage$d ?v1 ?v2 ))(member$b (fun_app$s ?v1 ?v0 )?v2 ))):named a138 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$b ?v0 (vimage$e ?v1 ?v2 ))(member$c (fun_app$aa ?v1 ?v0 )?v2 ))):named a139 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(=> (member$ ?v0 (vimage$f ?v1 ?v2 ))(member$b (fun_app$g ?v1 ?v0 )?v2 ))):named a140 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_T_dtree_sum_prod_fun$ )(?v2 Dtree_T_dtree_sum_prod_set$ ))(=> (member$c ?v0 (vimage$g ?v1 ?v2 ))(member$a (fun_app$q ?v1 ?v0 )?v2 ))):named a141 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_dtree_prod_fun$ )(?v2 T_dtree_sum_dtree_prod_set$ ))(=> (member$c ?v0 (vimage$h ?v1 ?v2 ))(member$e (fun_app$o ?v1 ?v0 )?v2 ))):named a142 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$b ?v0 (vimage$i ?v1 ?v2 ))(member$ (fun_app$ak ?v1 ?v0 )?v2 ))):named a143 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_T_dtree_sum_prod_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum_T_dtree_sum_prod_set$ ))(=> (member$d (fun_app$m ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$l ?v0 ?v2 )))):named a144 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ )(?v1 Dtree_dtree_prod$ )(?v2 T_dtree_sum_T_dtree_sum_prod_set$ ))(=> (member$d (fun_app$an ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$n ?v0 ?v2 )))):named a145 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ )(?v1 Dtree_T_dtree_sum_prod$ )(?v2 T_dtree_sum_T_dtree_sum_prod_set$ ))(=> (member$d (fun_app$ao ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$o ?v0 ?v2 )))):named a146 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_prod_T_dtree_sum_T_dtree_sum_prod_fun$ )(?v1 T_dtree_sum_dtree_prod$ )(?v2 T_dtree_sum_T_dtree_sum_prod_set$ ))(=> (member$d (fun_app$ap ?v0 ?v1 )?v2 )(member$e ?v1 (vimage$p ?v0 ?v2 )))):named a147 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_prod_T_dtree_sum_T_dtree_sum_prod_fun$ )(?v1 T_dtree_sum_T_dtree_sum_prod$ )(?v2 T_dtree_sum_T_dtree_sum_prod_set$ ))(=> (member$d (fun_app$aq ?v0 ?v1 )?v2 )(member$d ?v1 (vimage$q ?v0 ?v2 )))):named a148 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$i ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$c ?v0 ?v2 )))):named a149 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree_set$ ))(=> (member$c (fun_app$k ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$b ?v0 ?v2 )))):named a150 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree_set$ ))(=> (member$c (fun_app$v ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$a ?v0 ?v2 )))):named a151 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$a ?v0 ?v1 )?v2 )(member$c ?v1 (vimage$ ?v0 ?v2 )))):named a152 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ ))(exists ((?v1 Dtree$ )(?v2 Dtree$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a153 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a154 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ ))(=> (forall ((?v1 Dtree$ )(?v2 Dtree$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a155 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_bool_fun$ )(?v1 Dtree_dtree_prod$ ))(=> (forall ((?v2 Dtree$ )(?v3 Dtree$ ))(fun_app$ar ?v0 (pair$ ?v2 ?v3 )))(fun_app$ar ?v0 ?v1 ))):named a156 ))
(check-sat )
;(get-unsat-core )
