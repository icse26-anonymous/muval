;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort Dtree_dtree_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_set$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort Dtree_dtree_prod_bool_fun$ 0 )
(declare-sort T_dtree_sum_dtree_set_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_set$ 0 )
(declare-sort T_dtree_sum_dtree_prod_set$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_set_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_prod_set$ 0 )
(declare-sort Dtree_dtree_prod_dtree_prod_set$ 0 )
(declare-sort T_dtree_dtree_prod_sum_bool_fun$ 0 )
(declare-sort T_dtree_sum_dtree_prod_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_dtree_fun$ 0 )
(declare-sort T_dtree_sum_dtree_dtree_prod_fun$ 0 )
(declare-sort Dtree_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_set_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_prod_bool_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_dtree_set_fun$ 0 )
(declare-sort T_dtree_sum_dtree_dtree_prod_set_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_prod_set$ 0 )
(declare-sort Dtree_dtree_prod_dtree_dtree_prod_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_dtree_prod_set$ 0 )
(declare-sort T_dtree_sum_dtree_dtree_prod_prod_set$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_dtree_prod_set_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_dtree_prod_prod_set$ 0 )
(declare-sort T_dtree_sum_T_dtree_dtree_prod_sum_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_dtree_dtree_prod_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_dtree_prod_sum_prod_set$ 0 )
(declare-sort Dtree_bool_fun_dtree_dtree_prod_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort Dtree_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ 0 )
(declare-sort Dtree_dtree_prod_bool_fun_dtree_dtree_prod_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_set$ 0 )
(declare-sort T_dtree_dtree_prod_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_dtree_prod_bool_fun_T_dtree_sum_dtree_prod_bool_fun_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_prod_bool_fun_dtree_dtree_dtree_prod_prod_bool_fun_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ 0 )
(declare-sort Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_prod$ 0)
(declare-sort T_dtree_dtree_prod_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ 0)
(declare-sort T_dtree_sum_dtree_prod$ 0)
(declare-sort Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod$ 0)
(declare-sort Dtree_dtree_dtree_prod_prod$ 0)
(declare-sort Dtree_T_dtree_dtree_prod_sum_prod$ 0)
(declare-fun fst$ (Dtree_dtree_prod$)Dtree$)
(declare-fun snd$ (Dtree_dtree_prod$)Dtree$)
(declare-fun pair$ (Dtree$ Dtree$ )Dtree_dtree_prod$)
(declare-fun projl$ (T_dtree_dtree_prod_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_dtree_prod_sum$)
(declare-fun projr$ (T_dtree_dtree_prod_sum$)Dtree_dtree_prod$)
(declare-fun inr$ (Dtree_dtree_prod$ )T_dtree_dtree_prod_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun fst$a (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$)T_dtree_dtree_prod_sum$)
(declare-fun snd$a (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$)T_dtree_dtree_prod_sum$)
(declare-fun pair$a (T_dtree_dtree_prod_sum$ T_dtree_dtree_prod_sum$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$)
(declare-fun fst$b (T_dtree_sum_dtree_prod$)T_dtree_sum$)
(declare-fun snd$b (T_dtree_sum_dtree_prod$)Dtree$)
(declare-fun pair$b (T_dtree_sum$ Dtree$ )T_dtree_sum_dtree_prod$)
(declare-fun fst$c (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod$)Dtree$)
(declare-fun snd$c (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod$)T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$)
(declare-fun pair$c (Dtree$ T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ )Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod$)
(declare-fun fst$d (Dtree_dtree_dtree_prod_prod$)Dtree$)
(declare-fun snd$d (Dtree_dtree_dtree_prod_prod$)Dtree_dtree_prod$)
(declare-fun pair$d (Dtree$ Dtree_dtree_prod$ )Dtree_dtree_dtree_prod_prod$)
(declare-fun fst$e (Dtree_T_dtree_dtree_prod_sum_prod$)Dtree$)
(declare-fun snd$e (Dtree_T_dtree_dtree_prod_sum_prod$)T_dtree_dtree_prod_sum$)
(declare-fun pair$e (Dtree$ T_dtree_dtree_prod_sum$ )Dtree_T_dtree_dtree_prod_sum_prod$)
(declare-fun uu$ ()Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ )
(declare-fun tr1$ ()Dtree$ )
(declare-fun tr2$ ()Dtree$ )
(declare-fun uua$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun uub$ ()Dtree_dtree_set_fun$ )
(declare-fun uuc$ (Dtree_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uud$ (Dtree_dtree_fun$ )Dtree_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uue$ (T_dtree_sum_dtree_fun$ )Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuf$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uug$ (T_dtree_dtree_prod_sum_dtree_fun$ )Dtree_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ )
(declare-fun uuh$ (Dtree_T_dtree_dtree_prod_sum_fun$ )T_dtree_dtree_prod_sum_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uui$ (T_dtree_dtree_prod_sum_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ )
(declare-fun uuj$ (T_dtree_sum_T_dtree_dtree_prod_sum_fun$ )T_dtree_dtree_prod_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuk$ (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ )T_dtree_dtree_prod_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ )
(declare-fun uul$ (Dtree_dtree_prod_dtree_fun$ )Dtree_bool_fun_dtree_dtree_prod_bool_fun_fun$ )
(declare-fun uum$ ()T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun uun$ ()Dtree_dtree_fun$ )
(declare-fun uuo$ ()T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ )
(declare-fun uup$ (T_dtree_sum_dtree_prod_bool_fun$ )T_dtree_sum_dtree_prod_bool_fun_T_dtree_sum_dtree_prod_bool_fun_fun$ )
(declare-fun uuq$ (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_fun$ )
(declare-fun uur$ (Dtree_dtree_dtree_prod_prod_bool_fun$ )Dtree_dtree_dtree_prod_prod_bool_fun_dtree_dtree_dtree_prod_prod_bool_fun_fun$ )
(declare-fun uus$ (Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ )
(declare-fun uut$ (T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuu$ (Dtree_bool_fun$ )Dtree_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uuv$ (Dtree_dtree_prod_bool_fun$ )Dtree_dtree_prod_bool_fun_dtree_dtree_prod_bool_fun_fun$ )
(declare-fun uuw$ (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ )
(declare-fun uux$ (T_dtree_dtree_prod_sum_bool_fun$ )T_dtree_dtree_prod_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ )
(declare-fun uuy$ (T_dtree_sum_dtree_prod_bool_fun$ )T_dtree_sum_dtree_prod_bool_fun_T_dtree_sum_dtree_prod_bool_fun_fun$ )
(declare-fun uuz$ (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_fun$ )
(declare-fun uva$ (Dtree_dtree_dtree_prod_prod_bool_fun$ )Dtree_dtree_dtree_prod_prod_bool_fun_dtree_dtree_dtree_prod_prod_bool_fun_fun$ )
(declare-fun uvb$ (Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ )
(declare-fun uvc$ (T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uvd$ (Dtree_bool_fun$ )Dtree_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uve$ (Dtree_dtree_prod_bool_fun$ )Dtree_dtree_prod_bool_fun_dtree_dtree_prod_bool_fun_fun$ )
(declare-fun uvf$ (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ )
(declare-fun uvg$ (T_dtree_dtree_prod_sum_bool_fun$ )T_dtree_dtree_prod_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun image$ (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ Dtree_dtree_prod_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun sigma$ (Dtree_set$ Dtree_dtree_set_fun$ )Dtree_dtree_prod_set$ )
(declare-fun finite$ (T_dtree_dtree_prod_sum_set$ )Bool )
(declare-fun image$a (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun image$b (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun image$c (Dtree_dtree_dtree_prod_fun$ Dtree_set$ )Dtree_dtree_prod_set$ )
(declare-fun image$d (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod_set$ )Dtree_set$ )
(declare-fun image$e (T_dtree_dtree_prod_sum_dtree_fun$ T_dtree_dtree_prod_sum_set$ )Dtree_set$ )
(declare-fun image$f (Dtree_T_dtree_dtree_prod_sum_fun$ Dtree_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun image$g (Dtree_dtree_prod_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$ )Dtree_dtree_prod_set$ )
(declare-fun image$h (T_dtree_dtree_prod_sum_dtree_dtree_prod_fun$ T_dtree_dtree_prod_sum_set$ )Dtree_dtree_prod_set$ )
(declare-fun image$i (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_fun$ Dtree_set$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun image$j (Dtree_T_dtree_sum_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun image$k (T_dtree_sum_dtree_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun image$l (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$m (T_dtree_sum_dtree_dtree_prod_fun$ T_dtree_sum_set$ )Dtree_dtree_prod_set$ )
(declare-fun member$ (Dtree$ Dtree_set$ )Bool )
(declare-fun sigma$a (T_dtree_dtree_prod_sum_set$ T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun sigma$b (T_dtree_sum_set$ T_dtree_sum_dtree_set_fun$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun sigma$c (Dtree_set$ Dtree_dtree_dtree_prod_set_fun$ )Dtree_dtree_dtree_prod_prod_set$ )
(declare-fun sigma$d (Dtree_dtree_prod_set$ Dtree_dtree_prod_dtree_set_fun$ )Dtree_dtree_prod_dtree_prod_set$ )
(declare-fun sigma$e (T_dtree_sum_set$ T_dtree_sum_dtree_dtree_prod_set_fun$ )T_dtree_sum_dtree_dtree_prod_prod_set$ )
(declare-fun sigma$f (T_dtree_dtree_prod_sum_set$ T_dtree_dtree_prod_sum_dtree_set_fun$ )T_dtree_dtree_prod_sum_dtree_prod_set$ )
(declare-fun sigma$g (Dtree_set$ Dtree_T_dtree_dtree_prod_sum_set_fun$ )Dtree_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun sigma$h (Dtree_dtree_prod_set$ Dtree_dtree_prod_dtree_dtree_prod_set_fun$ )Dtree_dtree_prod_dtree_dtree_prod_prod_set$ )
(declare-fun sigma$i (T_dtree_sum_set$ T_dtree_sum_T_dtree_dtree_prod_sum_set_fun$ )T_dtree_sum_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun vimage$ (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun collect$ (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun finite$a (Dtree_set$ )Bool )
(declare-fun finite$b (Dtree_dtree_prod_set$ )Bool )
(declare-fun finite$c (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )Bool )
(declare-fun finite$d (T_dtree_sum_set$ )Bool )
(declare-fun finite$e (T_dtree_sum_dtree_prod_set$ )Bool )
(declare-fun finite$f (Dtree_dtree_dtree_prod_prod_set$ )Bool )
(declare-fun finite$g (Dtree_dtree_prod_dtree_prod_set$ )Bool )
(declare-fun finite$h (T_dtree_sum_dtree_dtree_prod_prod_set$ )Bool )
(declare-fun finite$i (T_dtree_dtree_prod_sum_dtree_prod_set$ )Bool )
(declare-fun finite$j (Dtree_T_dtree_dtree_prod_sum_prod_set$ )Bool )
(declare-fun finite$k (Dtree_dtree_prod_dtree_dtree_prod_prod_set$ )Bool )
(declare-fun finite$l (T_dtree_sum_T_dtree_dtree_prod_sum_prod_set$ )Bool )
(declare-fun finite$m (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_set$ )Bool )
(declare-fun fun_app$ (Dtree_dtree_set_fun$ Dtree$ )Dtree_set$ )
(declare-fun member$a (T_dtree_dtree_prod_sum$ T_dtree_dtree_prod_sum_set$ )Bool )
(declare-fun member$b (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$c (Dtree_dtree_prod$ Dtree_dtree_prod_set$ )Bool )
(declare-fun vimage$a (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun vimage$b (T_dtree_sum_dtree_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun vimage$c (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$d (T_dtree_dtree_prod_sum_dtree_fun$ Dtree_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun vimage$e (Dtree_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )Dtree_set$ )
(declare-fun vimage$f (T_dtree_dtree_prod_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun vimage$g (T_dtree_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$h (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun vimage$i (Dtree_dtree_prod_dtree_fun$ Dtree_set$ )Dtree_dtree_prod_set$ )
(declare-fun vimage$j (Dtree_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$ )Dtree_set$ )
(declare-fun vimage$k (T_dtree_sum_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$ )T_dtree_sum_set$ )
(declare-fun vimage$l (Dtree_dtree_prod_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_dtree_prod_set$ )
(declare-fun collect$a (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun collect$b (T_dtree_dtree_prod_sum_bool_fun$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun collect$c (Dtree_dtree_prod_bool_fun$ )Dtree_dtree_prod_set$ )
(declare-fun collect$d (T_dtree_sum_dtree_prod_bool_fun$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun collect$e (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_set$ )
(declare-fun collect$f (Dtree_dtree_dtree_prod_prod_bool_fun$ )Dtree_dtree_dtree_prod_prod_set$ )
(declare-fun collect$g (Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun collect$h (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun fun_app$a (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ Dtree_dtree_prod$ )T_dtree_dtree_prod_sum$ )
(declare-fun fun_app$b (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$c (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ )Bool )
(declare-fun fun_app$d (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )
(declare-fun fun_app$e (T_dtree_sum_dtree_prod_bool_fun$ T_dtree_sum_dtree_prod$ )Bool )
(declare-fun fun_app$f (T_dtree_sum_dtree_prod_bool_fun_T_dtree_sum_dtree_prod_bool_fun_fun$ T_dtree_sum_dtree_prod_bool_fun$ )T_dtree_sum_dtree_prod_bool_fun$ )
(declare-fun fun_app$g (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod$ )Bool )
(declare-fun fun_app$h (Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun_fun$ Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )
(declare-fun fun_app$i (Dtree_dtree_dtree_prod_prod_bool_fun$ Dtree_dtree_dtree_prod_prod$ )Bool )
(declare-fun fun_app$j (Dtree_dtree_dtree_prod_prod_bool_fun_dtree_dtree_dtree_prod_prod_bool_fun_fun$ Dtree_dtree_dtree_prod_prod_bool_fun$ )Dtree_dtree_dtree_prod_prod_bool_fun$ )
(declare-fun fun_app$k (Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ Dtree_T_dtree_dtree_prod_sum_prod$ )Bool )
(declare-fun fun_app$l (Dtree_T_dtree_dtree_prod_sum_prod_bool_fun_dtree_T_dtree_dtree_prod_sum_prod_bool_fun_fun$ Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )
(declare-fun fun_app$m (Dtree_dtree_prod_bool_fun$ Dtree_dtree_prod$ )Bool )
(declare-fun fun_app$n (Dtree_dtree_prod_bool_fun_dtree_dtree_prod_bool_fun_fun$ Dtree_dtree_prod_bool_fun$ )Dtree_dtree_prod_bool_fun$ )
(declare-fun fun_app$o (T_dtree_dtree_prod_sum_bool_fun$ T_dtree_dtree_prod_sum$ )Bool )
(declare-fun fun_app$p (T_dtree_dtree_prod_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ T_dtree_dtree_prod_sum_bool_fun$ )T_dtree_dtree_prod_sum_bool_fun$ )
(declare-fun fun_app$q (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$r (T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$s (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$t (Dtree_bool_fun_dtree_bool_fun_fun$ Dtree_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$u (Dtree_bool_fun_dtree_dtree_prod_bool_fun_fun$ Dtree_bool_fun$ )Dtree_dtree_prod_bool_fun$ )
(declare-fun fun_app$v (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod$ )Dtree$ )
(declare-fun fun_app$w (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum$ )T_dtree_dtree_prod_sum$ )
(declare-fun fun_app$x (T_dtree_sum_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_dtree_dtree_prod_sum_bool_fun$ )
(declare-fun fun_app$y (T_dtree_dtree_prod_sum_T_dtree_sum_fun$ T_dtree_dtree_prod_sum$ )T_dtree_sum$ )
(declare-fun fun_app$z (Dtree_bool_fun_T_dtree_dtree_prod_sum_bool_fun_fun$ Dtree_bool_fun$ )T_dtree_dtree_prod_sum_bool_fun$ )
(declare-fun fun_app$aa (T_dtree_dtree_prod_sum_dtree_fun$ T_dtree_dtree_prod_sum$ )Dtree$ )
(declare-fun fun_app$ab (T_dtree_dtree_prod_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_dtree_prod_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$ac (T_dtree_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_sum$ )T_dtree_dtree_prod_sum$ )
(declare-fun fun_app$ad (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$ae (Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ Dtree_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$af (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$ag (T_dtree_dtree_prod_sum_bool_fun_dtree_bool_fun_fun$ T_dtree_dtree_prod_sum_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$ah (Dtree_T_dtree_dtree_prod_sum_fun$ Dtree$ )T_dtree_dtree_prod_sum$ )
(declare-fun fun_app$ai (T_dtree_sum_bool_fun_dtree_bool_fun_fun$ T_dtree_sum_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$aj (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$ak (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ T_dtree_dtree_prod_sum$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun fun_app$al (T_dtree_sum_dtree_set_fun$ T_dtree_sum$ )Dtree_set$ )
(declare-fun fun_app$am (Dtree_dtree_dtree_prod_set_fun$ Dtree$ )Dtree_dtree_prod_set$ )
(declare-fun fun_app$an (Dtree_dtree_prod_dtree_set_fun$ Dtree_dtree_prod$ )Dtree_set$ )
(declare-fun fun_app$ao (T_dtree_sum_dtree_dtree_prod_set_fun$ T_dtree_sum$ )Dtree_dtree_prod_set$ )
(declare-fun fun_app$ap (T_dtree_dtree_prod_sum_dtree_set_fun$ T_dtree_dtree_prod_sum$ )Dtree_set$ )
(declare-fun fun_app$aq (Dtree_T_dtree_dtree_prod_sum_set_fun$ Dtree$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun fun_app$ar (Dtree_dtree_prod_dtree_dtree_prod_set_fun$ Dtree_dtree_prod$ )Dtree_dtree_prod_set$ )
(declare-fun fun_app$as (T_dtree_sum_T_dtree_dtree_prod_sum_set_fun$ T_dtree_sum$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun fun_app$at (Dtree_dtree_dtree_prod_fun$ Dtree$ )Dtree_dtree_prod$ )
(declare-fun fun_app$au (T_dtree_sum_dtree_dtree_prod_fun$ T_dtree_sum$ )Dtree_dtree_prod$ )
(declare-fun fun_app$av (Dtree_dtree_prod_T_dtree_sum_fun$ Dtree_dtree_prod$ )T_dtree_sum$ )
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$ uub$ ?v0 )(vimage$ uua$ (cont$ tr2$ ))):pattern ((fun_app$ uub$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ ))(! (= (fun_app$a uu$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$a uu$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uua$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$b uua$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v2 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ ))(! (= (fun_app$c (fun_app$d (uuw$ ?v0 )?v1 )?v2 )(or (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$d (uuw$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_prod_bool_fun$ )(?v1 T_dtree_sum_dtree_prod_bool_fun$ )(?v2 T_dtree_sum_dtree_prod$ ))(! (= (fun_app$e (fun_app$f (uup$ ?v0 )?v1 )?v2 )(or (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (uup$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )(?v2 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod$ ))(! (= (fun_app$g (fun_app$h (uuq$ ?v0 )?v1 )?v2 )(or (fun_app$g ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$h (uuq$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_prod_bool_fun$ )(?v1 Dtree_dtree_dtree_prod_prod_bool_fun$ )(?v2 Dtree_dtree_dtree_prod_prod$ ))(! (= (fun_app$i (fun_app$j (uur$ ?v0 )?v1 )?v2 )(or (fun_app$i ?v0 ?v2 )(fun_app$i ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$j (uur$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v2 Dtree_T_dtree_dtree_prod_sum_prod$ ))(! (= (fun_app$k (fun_app$l (uus$ ?v0 )?v1 )?v2 )(or (fun_app$k ?v0 ?v2 )(fun_app$k ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$l (uus$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_bool_fun$ )(?v1 Dtree_dtree_prod_bool_fun$ )(?v2 Dtree_dtree_prod$ ))(! (= (fun_app$m (fun_app$n (uuv$ ?v0 )?v1 )?v2 )(or (fun_app$m ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$n (uuv$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ )(?v2 T_dtree_dtree_prod_sum$ ))(! (= (fun_app$o (fun_app$p (uux$ ?v0 )?v1 )?v2 )(or (fun_app$o ?v0 ?v2 )(fun_app$o ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$p (uux$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$q (fun_app$r (uut$ ?v0 )?v1 )?v2 )(or (fun_app$q ?v0 ?v2 )(fun_app$q ?v1 ?v2 ))):pattern ((fun_app$q (fun_app$r (uut$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$s (fun_app$t (uuu$ ?v0 )?v1 )?v2 )(or (fun_app$s ?v0 ?v2 )(fun_app$s ?v1 ?v2 ))):pattern ((fun_app$s (fun_app$t (uuu$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v2 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ ))(! (= (fun_app$c (fun_app$d (uvf$ ?v0 )?v1 )?v2 )(and (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$d (uvf$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_prod_bool_fun$ )(?v1 T_dtree_sum_dtree_prod_bool_fun$ )(?v2 T_dtree_sum_dtree_prod$ ))(! (= (fun_app$e (fun_app$f (uuy$ ?v0 )?v1 )?v2 )(and (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (uuy$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )(?v2 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod$ ))(! (= (fun_app$g (fun_app$h (uuz$ ?v0 )?v1 )?v2 )(and (fun_app$g ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$h (uuz$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_prod_bool_fun$ )(?v1 Dtree_dtree_dtree_prod_prod_bool_fun$ )(?v2 Dtree_dtree_dtree_prod_prod$ ))(! (= (fun_app$i (fun_app$j (uva$ ?v0 )?v1 )?v2 )(and (fun_app$i ?v0 ?v2 )(fun_app$i ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$j (uva$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v2 Dtree_T_dtree_dtree_prod_sum_prod$ ))(! (= (fun_app$k (fun_app$l (uvb$ ?v0 )?v1 )?v2 )(and (fun_app$k ?v0 ?v2 )(fun_app$k ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$l (uvb$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_bool_fun$ )(?v1 Dtree_dtree_prod_bool_fun$ )(?v2 Dtree_dtree_prod$ ))(! (= (fun_app$m (fun_app$n (uve$ ?v0 )?v1 )?v2 )(and (fun_app$m ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$n (uve$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ )(?v2 T_dtree_dtree_prod_sum$ ))(! (= (fun_app$o (fun_app$p (uvg$ ?v0 )?v1 )?v2 )(and (fun_app$o ?v0 ?v2 )(fun_app$o ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$p (uvg$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$q (fun_app$r (uvc$ ?v0 )?v1 )?v2 )(and (fun_app$q ?v0 ?v2 )(fun_app$q ?v1 ?v2 ))):pattern ((fun_app$q (fun_app$r (uvc$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$s (fun_app$t (uvd$ ?v0 )?v1 )?v2 )(and (fun_app$s ?v0 ?v2 )(fun_app$s ?v1 ?v2 ))):pattern ((fun_app$s (fun_app$t (uvd$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 Dtree_dtree_prod$ ))(! (= (fun_app$m (fun_app$u (uul$ ?v0 )?v1 )?v2 )(fun_app$s ?v1 (fun_app$v ?v0 ?v2 ))):pattern ((fun_app$m (fun_app$u (uul$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ )(?v2 T_dtree_dtree_prod_sum$ ))(! (= (fun_app$o (fun_app$p (uuk$ ?v0 )?v1 )?v2 )(fun_app$o ?v1 (fun_app$w ?v0 ?v2 ))):pattern ((fun_app$o (fun_app$p (uuk$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_dtree_prod_sum$ ))(! (= (fun_app$o (fun_app$x (uui$ ?v0 )?v1 )?v2 )(fun_app$q ?v1 (fun_app$y ?v0 ?v2 ))):pattern ((fun_app$o (fun_app$x (uui$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 T_dtree_dtree_prod_sum$ ))(! (= (fun_app$o (fun_app$z (uug$ ?v0 )?v1 )?v2 )(fun_app$s ?v1 (fun_app$aa ?v0 ?v2 ))):pattern ((fun_app$o (fun_app$z (uug$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$q (fun_app$ab (uuj$ ?v0 )?v1 )?v2 )(fun_app$o ?v1 (fun_app$ac ?v0 ?v2 ))):pattern ((fun_app$q (fun_app$ab (uuj$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$q (fun_app$r (uuf$ ?v0 )?v1 )?v2 )(fun_app$q ?v1 (fun_app$ad ?v0 ?v2 ))):pattern ((fun_app$q (fun_app$r (uuf$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$q (fun_app$ae (uue$ ?v0 )?v1 )?v2 )(fun_app$s ?v1 (fun_app$af ?v0 ?v2 ))):pattern ((fun_app$q (fun_app$ae (uue$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$s (fun_app$ag (uuh$ ?v0 )?v1 )?v2 )(fun_app$o ?v1 (fun_app$ah ?v0 ?v2 ))):pattern ((fun_app$s (fun_app$ag (uuh$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$s (fun_app$ai (uuc$ ?v0 )?v1 )?v2 )(fun_app$q ?v1 (fun_app$b ?v0 ?v2 ))):pattern ((fun_app$s (fun_app$ai (uuc$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$s (fun_app$t (uud$ ?v0 )?v1 )?v2 )(fun_app$s ?v1 (fun_app$aj ?v0 ?v2 ))):pattern ((fun_app$s (fun_app$t (uud$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ ))(! (= (fun_app$w uuo$ ?v0 )?v0 ):pattern ((fun_app$w uuo$ ?v0 )))):named a31 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ad uum$ ?v0 )?v0 ):pattern ((fun_app$ad uum$ ?v0 )))):named a32 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$aj uun$ ?v0 )?v0 ):pattern ((fun_app$aj uun$ ?v0 )))):named a33 ))
(assert (! (not (finite$ (image$ uu$ (sigma$ (vimage$ uua$ (cont$ tr1$ ))uub$ )))):named a34 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_set_fun$ ))(=> (and (finite$a ?v0 )(forall ((?v2 Dtree$ ))(=> (member$ ?v2 ?v0 )(finite$a (fun_app$ ?v1 ?v2 )))))(finite$b (sigma$ ?v0 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ ))(=> (and (finite$ ?v0 )(forall ((?v2 T_dtree_dtree_prod_sum$ ))(=> (member$a ?v2 ?v0 )(finite$ (fun_app$ak ?v1 ?v2 )))))(finite$c (sigma$a ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_dtree_set_fun$ ))(=> (and (finite$d ?v0 )(forall ((?v2 T_dtree_sum$ ))(=> (member$b ?v2 ?v0 )(finite$a (fun_app$al ?v1 ?v2 )))))(finite$e (sigma$b ?v0 ?v1 )))):named a37 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_dtree_prod_set_fun$ ))(=> (and (finite$a ?v0 )(forall ((?v2 Dtree$ ))(=> (member$ ?v2 ?v0 )(finite$b (fun_app$am ?v1 ?v2 )))))(finite$f (sigma$c ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_dtree_set_fun$ ))(=> (and (finite$b ?v0 )(forall ((?v2 Dtree_dtree_prod$ ))(=> (member$c ?v2 ?v0 )(finite$a (fun_app$an ?v1 ?v2 )))))(finite$g (sigma$d ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_dtree_dtree_prod_set_fun$ ))(=> (and (finite$d ?v0 )(forall ((?v2 T_dtree_sum$ ))(=> (member$b ?v2 ?v0 )(finite$b (fun_app$ao ?v1 ?v2 )))))(finite$h (sigma$e ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_dtree_set_fun$ ))(=> (and (finite$ ?v0 )(forall ((?v2 T_dtree_dtree_prod_sum$ ))(=> (member$a ?v2 ?v0 )(finite$a (fun_app$ap ?v1 ?v2 )))))(finite$i (sigma$f ?v0 ?v1 )))):named a41 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_T_dtree_dtree_prod_sum_set_fun$ ))(=> (and (finite$a ?v0 )(forall ((?v2 Dtree$ ))(=> (member$ ?v2 ?v0 )(finite$ (fun_app$aq ?v1 ?v2 )))))(finite$j (sigma$g ?v0 ?v1 )))):named a42 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_dtree_dtree_prod_set_fun$ ))(=> (and (finite$b ?v0 )(forall ((?v2 Dtree_dtree_prod$ ))(=> (member$c ?v2 ?v0 )(finite$b (fun_app$ar ?v1 ?v2 )))))(finite$k (sigma$h ?v0 ?v1 )))):named a43 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_T_dtree_dtree_prod_sum_set_fun$ ))(=> (and (finite$d ?v0 )(forall ((?v2 T_dtree_sum$ ))(=> (member$b ?v2 ?v0 )(finite$ (fun_app$as ?v1 ?v2 )))))(finite$l (sigma$i ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ ))(=> (finite$b ?v0 )(finite$ (image$ ?v1 ?v0 )))):named a45 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ ))(=> (finite$ ?v0 )(finite$ (image$a ?v1 ?v0 )))):named a46 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_fun$ ))(=> (finite$a ?v0 )(finite$a (image$b ?v1 ?v0 )))):named a47 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_dtree_prod_fun$ ))(=> (finite$a ?v0 )(finite$b (image$c ?v1 ?v0 )))):named a48 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_dtree_fun$ ))(=> (finite$b ?v0 )(finite$a (image$d ?v1 ?v0 )))):named a49 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_dtree_fun$ ))(=> (finite$ ?v0 )(finite$a (image$e ?v1 ?v0 )))):named a50 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_T_dtree_dtree_prod_sum_fun$ ))(=> (finite$a ?v0 )(finite$ (image$f ?v1 ?v0 )))):named a51 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_dtree_dtree_prod_fun$ ))(=> (finite$b ?v0 )(finite$b (image$g ?v1 ?v0 )))):named a52 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_dtree_dtree_prod_fun$ ))(=> (finite$ ?v0 )(finite$b (image$h ?v1 ?v0 )))):named a53 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_fun$ ))(=> (finite$a ?v0 )(finite$c (image$i ?v1 ?v0 )))):named a54 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$ ?v0 (collect$ ?v1 ))(collect$a (fun_app$ai (uuc$ ?v0 )?v1 )))):named a55 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$a ?v0 (collect$a ?v1 ))(collect$a (fun_app$t (uud$ ?v0 )?v1 )))):named a56 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$b ?v0 (collect$a ?v1 ))(collect$ (fun_app$ae (uue$ ?v0 )?v1 )))):named a57 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$c ?v0 (collect$ ?v1 ))(collect$ (fun_app$r (uuf$ ?v0 )?v1 )))):named a58 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$d ?v0 (collect$a ?v1 ))(collect$b (fun_app$z (uug$ ?v0 )?v1 )))):named a59 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ ))(= (vimage$e ?v0 (collect$b ?v1 ))(collect$a (fun_app$ag (uuh$ ?v0 )?v1 )))):named a60 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$f ?v0 (collect$ ?v1 ))(collect$b (fun_app$x (uui$ ?v0 )?v1 )))):named a61 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ ))(= (vimage$g ?v0 (collect$b ?v1 ))(collect$ (fun_app$ab (uuj$ ?v0 )?v1 )))):named a62 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ ))(= (vimage$h ?v0 (collect$b ?v1 ))(collect$b (fun_app$p (uuk$ ?v0 )?v1 )))):named a63 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$i ?v0 (collect$a ?v1 ))(collect$c (fun_app$u (uul$ ?v0 )?v1 )))):named a64 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (vimage$c uum$ ?v0 )?v0 )):named a65 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (vimage$a uun$ ?v0 )?v0 )):named a66 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (image$b uun$ ?v0 )?v0 )):named a67 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ ))(= (image$a uuo$ ?v0 )?v0 )):named a68 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_prod_bool_fun$ )(?v1 T_dtree_sum_dtree_prod_bool_fun$ ))(= (finite$e (collect$d (fun_app$f (uup$ ?v0 )?v1 )))(and (finite$e (collect$d ?v0 ))(finite$e (collect$d ?v1 ))))):named a69 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ ))(= (finite$m (collect$e (fun_app$h (uuq$ ?v0 )?v1 )))(and (finite$m (collect$e ?v0 ))(finite$m (collect$e ?v1 ))))):named a70 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_prod_bool_fun$ )(?v1 Dtree_dtree_dtree_prod_prod_bool_fun$ ))(= (finite$f (collect$f (fun_app$j (uur$ ?v0 )?v1 )))(and (finite$f (collect$f ?v0 ))(finite$f (collect$f ?v1 ))))):named a71 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ ))(= (finite$j (collect$g (fun_app$l (uus$ ?v0 )?v1 )))(and (finite$j (collect$g ?v0 ))(finite$j (collect$g ?v1 ))))):named a72 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (finite$d (collect$ (fun_app$r (uut$ ?v0 )?v1 )))(and (finite$d (collect$ ?v0 ))(finite$d (collect$ ?v1 ))))):named a73 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree_bool_fun$ ))(= (finite$a (collect$a (fun_app$t (uuu$ ?v0 )?v1 )))(and (finite$a (collect$a ?v0 ))(finite$a (collect$a ?v1 ))))):named a74 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_bool_fun$ )(?v1 Dtree_dtree_prod_bool_fun$ ))(= (finite$b (collect$c (fun_app$n (uuv$ ?v0 )?v1 )))(and (finite$b (collect$c ?v0 ))(finite$b (collect$c ?v1 ))))):named a75 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ ))(= (finite$c (collect$h (fun_app$d (uuw$ ?v0 )?v1 )))(and (finite$c (collect$h ?v0 ))(finite$c (collect$h ?v1 ))))):named a76 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ ))(= (finite$ (collect$b (fun_app$p (uux$ ?v0 )?v1 )))(and (finite$ (collect$b ?v0 ))(finite$ (collect$b ?v1 ))))):named a77 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_prod_bool_fun$ )(?v1 T_dtree_sum_dtree_prod_bool_fun$ ))(=> (or (finite$e (collect$d ?v0 ))(finite$e (collect$d ?v1 )))(finite$e (collect$d (fun_app$f (uuy$ ?v0 )?v1 ))))):named a78 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_prod_bool_fun$ ))(=> (or (finite$m (collect$e ?v0 ))(finite$m (collect$e ?v1 )))(finite$m (collect$e (fun_app$h (uuz$ ?v0 )?v1 ))))):named a79 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_prod_bool_fun$ )(?v1 Dtree_dtree_dtree_prod_prod_bool_fun$ ))(=> (or (finite$f (collect$f ?v0 ))(finite$f (collect$f ?v1 )))(finite$f (collect$f (fun_app$j (uva$ ?v0 )?v1 ))))):named a80 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 Dtree_T_dtree_dtree_prod_sum_prod_bool_fun$ ))(=> (or (finite$j (collect$g ?v0 ))(finite$j (collect$g ?v1 )))(finite$j (collect$g (fun_app$l (uvb$ ?v0 )?v1 ))))):named a81 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(=> (or (finite$d (collect$ ?v0 ))(finite$d (collect$ ?v1 )))(finite$d (collect$ (fun_app$r (uvc$ ?v0 )?v1 ))))):named a82 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree_bool_fun$ ))(=> (or (finite$a (collect$a ?v0 ))(finite$a (collect$a ?v1 )))(finite$a (collect$a (fun_app$t (uvd$ ?v0 )?v1 ))))):named a83 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_bool_fun$ )(?v1 Dtree_dtree_prod_bool_fun$ ))(=> (or (finite$b (collect$c ?v0 ))(finite$b (collect$c ?v1 )))(finite$b (collect$c (fun_app$n (uve$ ?v0 )?v1 ))))):named a84 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_bool_fun$ ))(=> (or (finite$c (collect$h ?v0 ))(finite$c (collect$h ?v1 )))(finite$c (collect$h (fun_app$d (uvf$ ?v0 )?v1 ))))):named a85 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_bool_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ ))(=> (or (finite$ (collect$b ?v0 ))(finite$ (collect$b ?v1 )))(finite$ (collect$b (fun_app$p (uvg$ ?v0 )?v1 ))))):named a86 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$ ?v1 ?v2 ))(member$b (fun_app$b ?v1 ?v0 )?v2 ))):named a87 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$ ?v0 (vimage$a ?v1 ?v2 ))(member$ (fun_app$aj ?v1 ?v0 )?v2 ))):named a88 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(= (member$ ?v0 (vimage$j ?v1 ?v2 ))(member$c (fun_app$at ?v1 ?v0 )?v2 ))):named a89 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (vimage$b ?v1 ?v2 ))(member$ (fun_app$af ?v1 ?v0 )?v2 ))):named a90 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$c ?v0 (vimage$i ?v1 ?v2 ))(member$ (fun_app$v ?v1 ?v0 )?v2 ))):named a91 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_dtree_prod_sum_fun$ )(?v2 T_dtree_dtree_prod_sum_set$ ))(= (member$ ?v0 (vimage$e ?v1 ?v2 ))(member$a (fun_app$ah ?v1 ?v0 )?v2 ))):named a92 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 T_dtree_dtree_prod_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$a ?v0 (vimage$d ?v1 ?v2 ))(member$ (fun_app$aa ?v1 ?v0 )?v2 ))):named a93 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b ?v0 (vimage$c ?v1 ?v2 ))(member$b (fun_app$ad ?v1 ?v0 )?v2 ))):named a94 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_dtree_prod_fun$ )(?v2 Dtree_dtree_prod_set$ ))(= (member$b ?v0 (vimage$k ?v1 ?v2 ))(member$c (fun_app$au ?v1 ?v0 )?v2 ))):named a95 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c ?v0 (vimage$l ?v1 ?v2 ))(member$b (fun_app$av ?v1 ?v0 )?v2 ))):named a96 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$b ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$ ?v1 (vimage$ ?v0 ?v3 )))):named a97 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$aj ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (vimage$a ?v0 ?v3 )))):named a98 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$af ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$b ?v1 (vimage$b ?v0 ?v3 )))):named a99 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_fun$ )(?v1 Dtree_dtree_prod$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$v ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$c ?v1 (vimage$i ?v0 ?v3 )))):named a100 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$ )(?v1 Dtree$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= (fun_app$at ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$ ?v1 (vimage$j ?v0 ?v3 )))):named a101 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_dtree_fun$ )(?v1 T_dtree_dtree_prod_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$aa ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$a ?v1 (vimage$d ?v0 ?v3 )))):named a102 ))
(assert (! (forall ((?v0 Dtree_T_dtree_dtree_prod_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_dtree_prod_sum$ )(?v3 T_dtree_dtree_prod_sum_set$ ))(=> (and (= (fun_app$ah ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$ ?v1 (vimage$e ?v0 ?v3 )))):named a103 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$ad ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$b ?v1 (vimage$c ?v0 ?v3 )))):named a104 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_T_dtree_sum_fun$ )(?v1 Dtree_dtree_prod$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$av ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$c ?v1 (vimage$l ?v0 ?v3 )))):named a105 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_dtree_prod_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= (fun_app$au ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$b ?v1 (vimage$k ?v0 ?v3 )))):named a106 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a107 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a109 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a110 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= ?v0 (fun_app$a ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$a ?v0 (image$ ?v1 ?v3 )))):named a111 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$aj ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$b ?v1 ?v3 )))):named a112 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$b ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$j ?v1 ?v3 )))):named a113 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_dtree_prod_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$at ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$c ?v0 (image$c ?v1 ?v3 )))):named a114 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$af ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$k ?v1 ?v3 )))):named a115 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_prod_dtree_fun$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= ?v0 (fun_app$v ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$ ?v0 (image$d ?v1 ?v3 )))):named a116 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 Dtree_T_dtree_dtree_prod_sum_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$ah ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$f ?v1 ?v3 )))):named a117 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_dtree_prod_sum_dtree_fun$ )(?v2 T_dtree_dtree_prod_sum$ )(?v3 T_dtree_dtree_prod_sum_set$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$e ?v1 ?v3 )))):named a118 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$ad ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$b ?v0 (image$l ?v1 ?v3 )))):named a119 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 T_dtree_sum_dtree_dtree_prod_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$au ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$c ?v0 (image$m ?v1 ?v3 )))):named a120 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ ))(=> (member$c ?v0 ?v1 )(member$a (fun_app$a ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a121 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$aj ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a122 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$b (fun_app$b ?v2 ?v0 )(image$j ?v2 ?v1 )))):named a123 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_dtree_prod_fun$ ))(=> (member$ ?v0 ?v1 )(member$c (fun_app$at ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a124 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_dtree_fun$ ))(=> (member$b ?v0 ?v1 )(member$ (fun_app$af ?v2 ?v0 )(image$k ?v2 ?v1 )))):named a125 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 Dtree_dtree_prod_dtree_fun$ ))(=> (member$c ?v0 ?v1 )(member$ (fun_app$v ?v2 ?v0 )(image$d ?v2 ?v1 )))):named a126 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_T_dtree_dtree_prod_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$ah ?v2 ?v0 )(image$f ?v2 ?v1 )))):named a127 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 T_dtree_dtree_prod_sum_set$ )(?v2 T_dtree_dtree_prod_sum_dtree_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$aa ?v2 ?v0 )(image$e ?v2 ?v1 )))):named a128 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ ))(=> (member$b ?v0 ?v1 )(member$b (fun_app$ad ?v2 ?v0 )(image$l ?v2 ?v1 )))):named a129 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_dtree_dtree_prod_fun$ ))(=> (member$b ?v0 ?v1 )(member$c (fun_app$au ?v2 ?v0 )(image$m ?v2 ?v1 )))):named a130 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 T_dtree_dtree_prod_sum$ )(?v3 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$a ?v3 ?v0 )))(member$a ?v2 (image$ ?v3 ?v1 )))):named a131 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$aj ?v3 ?v0 )))(member$ ?v2 (image$b ?v3 ?v1 )))):named a132 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum$ )(?v3 Dtree_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$b ?v3 ?v0 )))(member$b ?v2 (image$j ?v3 ?v1 )))):named a133 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_dtree_prod_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$at ?v3 ?v0 )))(member$c ?v2 (image$c ?v3 ?v1 )))):named a134 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree$ )(?v3 T_dtree_sum_dtree_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$af ?v3 ?v0 )))(member$ ?v2 (image$k ?v3 ?v1 )))):named a135 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_prod_dtree_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$v ?v3 ?v0 )))(member$ ?v2 (image$d ?v3 ?v1 )))):named a136 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 T_dtree_dtree_prod_sum$ )(?v3 Dtree_T_dtree_dtree_prod_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$ah ?v3 ?v0 )))(member$a ?v2 (image$f ?v3 ?v1 )))):named a137 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 T_dtree_dtree_prod_sum_set$ )(?v2 Dtree$ )(?v3 T_dtree_dtree_prod_sum_dtree_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$aa ?v3 ?v0 )))(member$ ?v2 (image$e ?v3 ?v1 )))):named a138 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$ad ?v3 ?v0 )))(member$b ?v2 (image$l ?v3 ?v1 )))):named a139 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree_dtree_prod$ )(?v3 T_dtree_sum_dtree_dtree_prod_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$au ?v3 ?v0 )))(member$c ?v2 (image$m ?v3 ?v1 )))):named a140 ))
(check-sat )
;(get-unsat-core )
