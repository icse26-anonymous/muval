;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_c_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort A_b_sp_nu$ 0 )
(declare-sort A_c_sp_nu$ 0 )
(declare-sort C_b_sp_nu$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort B_stream_set$ 0 )
(declare-sort A_c_sp_nu_set$ 0 )
(declare-sort B_b_b_fun_fun$ 0 )
(declare-sort C_b_sp_nu_set$ 0 )
(declare-sort B_stream_b_fun$ 0 )
(declare-sort C_stream_c_fun$ 0 )
(declare-sort A_a_c_sp_nu_fun$ 0 )
(declare-sort A_c_sp_nu_b_fun$ 0 )
(declare-sort A_c_sp_nu_c_fun$ 0 )
(declare-sort B_a_c_sp_nu_fun$ 0 )
(declare-sort C_a_c_sp_nu_fun$ 0 )
(declare-sort B_stream_bool_fun$ 0 )
(declare-sort C_stream_bool_fun$ 0 )
(declare-sort A_c_sp_nu_bool_fun$ 0 )
(declare-sort C_b_sp_nu_bool_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu$ 0 )
(declare-sort A_c_fun_a_c_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu$ 0 )
(declare-sort C_c_fun_c_c_fun_fun$ 0 )
(declare-sort B_b_stream_b_fun_fun$ 0 )
(declare-sort C_c_stream_c_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun$ 0 )
(declare-sort C_stream_c_stream_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_set$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_set$ 0 )
(declare-sort A_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_b_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort B_b_stream_b_stream_fun_fun$ 0 )
(declare-sort C_c_stream_c_stream_fun_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort B_stream_b_stream_bool_fun_fun$ 0 )
(declare-sort C_stream_c_stream_bool_fun_fun$ 0 )
(declare-sort A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ 0 )
(declare-sort A_a_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_c_a_c_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun_c_c_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ 0 )
(declare-sort A_c_sp_nu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_b_sp_nu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_bool_fun$ 0 )
(declare-sort C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_fun_c_b_c_b_sp_nu_sp_mu_c_fun_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_a_c_a_c_sp_nu_sp_mu_fun_a_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_c_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort B_stream$ 0)
(declare-sort A_stream$ 0)
(declare-sort C_stream$ 0)
(declare-fun shd$ (B_stream$)B$)
(declare-fun stl$ (B_stream$)B_stream$)
(declare-fun sCons$ (B$ B_stream$ )B_stream$)
(declare-fun shd$a (A_stream$)A$)
(declare-fun stl$a (A_stream$)A_stream$)
(declare-fun sCons$a (A$ A_stream$ )A_stream$)
(declare-fun shd$b (C_stream$)C$)
(declare-fun stl$b (C_stream$)C_stream$)
(declare-fun sCons$b (C$ C_stream$ )C_stream$)
(declare-sort C_b_sp_nu_a_c_sp_nu_prod$ 0)
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ 0)
(declare-sort B_c_b_sp_nu_prod$ 0)
(declare-sort B_c_b_sp_nu_prod_c_stream_prod$ 0)
(declare-sort C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ 0)
(declare-sort C_a_c_sp_nu_prod$ 0)
(declare-sort C_a_c_sp_nu_prod_a_stream_prod$ 0)
(declare-fun fst$ (C_b_sp_nu_a_c_sp_nu_prod$)C_b_sp_nu$)
(declare-fun snd$ (C_b_sp_nu_a_c_sp_nu_prod$)A_c_sp_nu$)
(declare-fun pair$ (C_b_sp_nu$ A_c_sp_nu$ )C_b_sp_nu_a_c_sp_nu_prod$)
(declare-fun fst$a (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$)C_b_c_b_sp_nu_sp_mu$)
(declare-fun snd$a (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$)C_b_c_b_sp_nu_sp_mu$)
(declare-fun pair$a (C_b_c_b_sp_nu_sp_mu$ C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$)
(declare-fun fst$b (B_c_b_sp_nu_prod$)B$)
(declare-fun snd$b (B_c_b_sp_nu_prod$)C_b_sp_nu$)
(declare-fun pair$b (B$ C_b_sp_nu$ )B_c_b_sp_nu_prod$)
(declare-fun fst$c (B_c_b_sp_nu_prod_c_stream_prod$)B_c_b_sp_nu_prod$)
(declare-fun snd$c (B_c_b_sp_nu_prod_c_stream_prod$)C_stream$)
(declare-fun pair$c (B_c_b_sp_nu_prod$ C_stream$ )B_c_b_sp_nu_prod_c_stream_prod$)
(declare-fun fst$d (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)C_b_c_b_sp_nu_sp_mu$)
(declare-fun snd$d (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)A_c_a_c_sp_nu_sp_mu$)
(declare-fun pair$d (C_b_c_b_sp_nu_sp_mu$ A_c_a_c_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$)
(declare-fun fst$e (C_a_c_sp_nu_prod$)C$)
(declare-fun snd$e (C_a_c_sp_nu_prod$)A_c_sp_nu$)
(declare-fun pair$e (C$ A_c_sp_nu$ )C_a_c_sp_nu_prod$)
(declare-fun fst$f (C_a_c_sp_nu_prod_a_stream_prod$)C_a_c_sp_nu_prod$)
(declare-fun snd$f (C_a_c_sp_nu_prod_a_stream_prod$)A_stream$)
(declare-fun pair$f (C_a_c_sp_nu_prod$ A_stream$ )C_a_c_sp_nu_prod_a_stream_prod$)
(declare-fun b$ ()C$ )
(declare-fun f$ ()C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun in$ (A_c_a_c_sp_nu_sp_mu$ )A_c_sp_nu$ )
(declare-fun sc$ ()A_stream$ )
(declare-fun sp$ ()A_c_sp_nu$ )
(declare-fun uu$ ()C_c_stream_c_fun_fun$ )
(declare-fun get$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun in$a (C_b_c_b_sp_nu_sp_mu$ )C_b_sp_nu$ )
(declare-fun out$ (C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun put$ (C$ A_c_sp_nu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun spb$ ()C_b_sp_nu$ )
(declare-fun spc$ ()C_b_sp_nu$ )
(declare-fun sub$ ()C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )
(declare-fun top$ ()C_set$ )
(declare-fun uua$ ()B_b_stream_b_fun_fun$ )
(declare-fun uub$ ()C_c_stream_c_stream_fun_fun$ )
(declare-fun uuc$ ()B_b_stream_b_stream_fun_fun$ )
(declare-fun uud$ ()C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun uue$ ()C_c_fun$ )
(declare-fun uuf$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun uug$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun uuh$ (C_c_fun$ )C_c_fun_c_c_fun_fun$ )
(declare-fun uui$ (C_c_fun$ )A_c_fun_a_c_fun_fun$ )
(declare-fun uuj$ (A_a_c_a_c_sp_nu_sp_mu_fun$ )C_a_fun_c_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun uuk$ (C_b_c_b_sp_nu_sp_mu_c_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_c_fun_fun$ )
(declare-fun uul$ (C_c_fun$ )C_b_c_b_sp_nu_sp_mu_c_fun_c_b_c_b_sp_nu_sp_mu_c_fun_fun$ )
(declare-fun uum$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )A_c_fun_a_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun uun$ (A_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ )
(declare-fun uuo$ (A_a_c_a_c_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu_a_fun$ )C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun uup$ (B$ )B_stream_b_stream_fun$ )
(declare-fun uuq$ (A_c_sp_nu_set$ )A_c_sp_nu_bool_fun$ )
(declare-fun uur$ (A_c_a_c_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_bool_fun$ )
(declare-fun uus$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun uut$ (B_set$ )B_bool_fun$ )
(declare-fun uuu$ (C_set$ )C_bool_fun$ )
(declare-fun uuv$ (C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun uuw$ ()C_bool_fun$ )
(declare-fun uux$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uuy$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun_fun$ )
(declare-fun uuz$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uva$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ )
(declare-fun uvb$ ()A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun uvc$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )A_a_c_a_c_sp_nu_sp_mu_fun_a_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun accp$ (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_c_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ )Bool )
(declare-fun get$a (A_a_c_a_c_sp_nu_sp_mu_fun$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun get$b (A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun out$a (A_c_sp_nu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun put$a (B$ C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun put$b (B$ C_b_sp_nu_a_c_sp_nu_prod$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun sp_c$ ()A_c_sp_nu$ )
(declare-fun top$a ()A_c_sp_nu_set$ )
(declare-fun top$b ()A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun top$c ()C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )
(declare-fun top$d ()B_set$ )
(declare-fun top$e ()A_set$ )
(declare-fun top$f ()C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun top$g ()C_bool_fun$ )
(declare-fun top$h ()Bool )
(declare-fun top$i ()C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun top$j ()A_bool_fun$ )
(declare-fun image$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun smap2$ (B_b_b_fun_fun$ B_stream$ B_stream$ )B_stream$ )
(declare-fun image$a (C_c_b_c_b_sp_nu_sp_mu_fun$ C_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun image$b (C_c_fun$ C_set$ )C_set$ )
(declare-fun image$c (C_b_fun$ C_set$ )B_set$ )
(declare-fun image$d (B_c_fun$ B_set$ )C_set$ )
(declare-fun image$e (B_b_fun$ B_set$ )B_set$ )
(declare-fun image$f (A_c_sp_nu_c_fun$ A_c_sp_nu_set$ )C_set$ )
(declare-fun image$g (A_c_sp_nu_b_fun$ A_c_sp_nu_set$ )B_set$ )
(declare-fun image$h (C_a_c_sp_nu_fun$ C_set$ )A_c_sp_nu_set$ )
(declare-fun image$i (B_a_c_sp_nu_fun$ B_set$ )A_c_sp_nu_set$ )
(declare-fun image$j (A_c_fun$ A_set$ )C_set$ )
(declare-fun image$k (C_a_c_a_c_sp_nu_sp_mu_fun$ C_set$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun image$l (A_a_c_a_c_sp_nu_sp_mu_fun$ A_set$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun image$m (C_a_fun$ C_set$ )A_set$ )
(declare-fun image$n (C_b_c_b_sp_nu_sp_mu_c_fun$ C_b_c_b_sp_nu_sp_mu_set$ )C_set$ )
(declare-fun image$o (A_c_b_c_b_sp_nu_sp_mu_fun$ A_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun image$p (A_a_fun$ A_set$ )A_set$ )
(declare-fun image$q (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu_set$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun image$r (C_b_c_b_sp_nu_sp_mu_a_fun$ C_b_c_b_sp_nu_sp_mu_set$ )A_set$ )
(declare-fun image$s (A_b_fun$ A_set$ )B_set$ )
(declare-fun image$t (A_a_c_sp_nu_fun$ A_set$ )A_c_sp_nu_set$ )
(declare-fun image$u (C_b_c_b_sp_nu_sp_mu_b_fun$ C_b_c_b_sp_nu_sp_mu_set$ )B_set$ )
(declare-fun image$v (B_stream_b_stream_fun$ B_stream_set$ )B_stream_set$ )
(declare-fun member$ (A_c_sp_nu$ A_c_sp_nu_set$ )Bool )
(declare-fun run_mu$ (C_b_c_b_sp_nu_sp_mu$ C_stream$ )B_c_b_sp_nu_prod_c_stream_prod$ )
(declare-fun run_nu$ (A_b_sp_nu$ A_stream$ )B_stream$ )
(declare-fun collect$ (C_b_c_b_sp_nu_sp_mu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun fun_app$ (B_stream_b_stream_fun$ B_stream$ )B_stream$ )
(declare-fun member$a (C_b_c_b_sp_nu_sp_mu$ C_b_c_b_sp_nu_sp_mu_set$ )Bool )
(declare-fun member$b (A_c_a_c_sp_nu_sp_mu$ A_c_a_c_sp_nu_sp_mu_set$ )Bool )
(declare-fun member$c (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )Bool )
(declare-fun member$d (C$ C_set$ )Bool )
(declare-fun member$e (B$ B_set$ )Bool )
(declare-fun member$f (A$ A_set$ )Bool )
(declare-fun member$g (B_stream$ B_stream_set$ )Bool )
(declare-fun member$h (C_b_sp_nu$ C_b_sp_nu_set$ )Bool )
(declare-fun run_mu$a (A_c_a_c_sp_nu_sp_mu$ A_stream$ )C_a_c_sp_nu_prod_a_stream_prod$ )
(declare-fun run_nu$a (C_b_sp_nu$ C_stream$ )B_stream$ )
(declare-fun run_nu$b (A_c_sp_nu$ A_stream$ )C_stream$ )
(declare-fun smember$ (B$ )B_stream_bool_fun$ )
(declare-fun collect$a (A_bool_fun$ )A_set$ )
(declare-fun collect$b (C_bool_fun$ )C_set$ )
(declare-fun collect$c (A_c_sp_nu_bool_fun$ )A_c_sp_nu_set$ )
(declare-fun collect$d (A_c_a_c_sp_nu_sp_mu_bool_fun$ )A_c_a_c_sp_nu_sp_mu_set$ )
(declare-fun collect$e (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_bool_fun$ )C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )
(declare-fun collect$f (B_bool_fun$ )B_set$ )
(declare-fun fun_app$a (A_c_sp_nu_bool_fun$ A_c_sp_nu$ )Bool )
(declare-fun fun_app$b (C_b_c_b_sp_nu_sp_mu_bool_fun$ C_b_c_b_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$c (A_c_a_c_sp_nu_sp_mu_bool_fun$ A_c_a_c_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$d (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_bool_fun$ C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ )Bool )
(declare-fun fun_app$e (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$f (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$g (A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ A$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$h (A_a_c_a_c_sp_nu_sp_mu_fun_a_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun_fun$ A_a_c_a_c_sp_nu_sp_mu_fun$ )A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$i (A_a_c_a_c_sp_nu_sp_mu_fun$ A$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$j (C_c_b_c_b_sp_nu_sp_mu_fun$ C$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$k (C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$l (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$m (C_c_fun$ C$ )C$ )
(declare-fun fun_app$n (C_c_b_c_b_sp_nu_sp_mu_fun_c_c_fun_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_fun$ )
(declare-fun fun_app$o (C_b_c_b_sp_nu_sp_mu_c_fun$ C_b_c_b_sp_nu_sp_mu$ )C$ )
(declare-fun fun_app$p (C_c_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ C_c_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$q (A_c_b_c_b_sp_nu_sp_mu_fun$ A$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$r (A_c_fun_a_c_b_c_b_sp_nu_sp_mu_fun_fun$ A_c_fun$ )A_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$s (A_c_fun$ A$ )C$ )
(declare-fun fun_app$t (C_b_c_b_sp_nu_sp_mu_c_fun_c_b_c_b_sp_nu_sp_mu_c_fun_fun$ C_b_c_b_sp_nu_sp_mu_c_fun$ )C_b_c_b_sp_nu_sp_mu_c_fun$ )
(declare-fun fun_app$u (C_c_fun_c_c_fun_fun$ C_c_fun$ )C_c_fun$ )
(declare-fun fun_app$v (A_c_fun_a_c_fun_fun$ A_c_fun$ )A_c_fun$ )
(declare-fun fun_app$w (C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$x (C_b_c_b_sp_nu_sp_mu_a_fun$ C_b_c_b_sp_nu_sp_mu$ )A$ )
(declare-fun fun_app$y (C_a_c_a_c_sp_nu_sp_mu_fun$ C$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$z (C_a_fun_c_a_c_a_c_sp_nu_sp_mu_fun_fun$ C_a_fun$ )C_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun pred_fun$ (C_b_c_b_sp_nu_sp_mu_bool_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )Bool )
(declare-fun fun_app$aa (C_a_fun$ C$ )A$ )
(declare-fun fun_app$ab (A_a_fun_a_a_c_a_c_sp_nu_sp_mu_fun_fun$ A_a_fun$ )A_a_c_a_c_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$ac (A_a_fun$ A$ )A$ )
(declare-fun fun_app$ad (C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$ae (C_b_c_b_sp_nu_sp_mu_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$af (C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun_fun$ C_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun fun_app$ag (C_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_bool_fun$ )C_bool_fun$ )
(declare-fun fun_app$ah (C_set_c_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun_fun$ C_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun_c_bool_fun_fun$ )
(declare-fun fun_app$ai (C_stream_c_fun$ C_stream$ )C$ )
(declare-fun fun_app$aj (C_c_stream_c_fun_fun$ C$ )C_stream_c_fun$ )
(declare-fun fun_app$ak (B_stream_b_fun$ B_stream$ )B$ )
(declare-fun fun_app$al (B_b_stream_b_fun_fun$ B$ )B_stream_b_fun$ )
(declare-fun fun_app$am (C_stream_c_stream_fun$ C_stream$ )C_stream$ )
(declare-fun fun_app$an (C_c_stream_c_stream_fun_fun$ C$ )C_stream_c_stream_fun$ )
(declare-fun fun_app$ao (B_b_stream_b_stream_fun_fun$ B$ )B_stream_b_stream_fun$ )
(declare-fun fun_app$ap (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ A_c_a_c_sp_nu_sp_mu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun fun_app$aq (C_stream_bool_fun$ C_stream$ )Bool )
(declare-fun fun_app$ar (C_stream_c_stream_bool_fun_fun$ C_stream$ )C_stream_bool_fun$ )
(declare-fun fun_app$as (B_stream_bool_fun$ B_stream$ )Bool )
(declare-fun fun_app$at (B_stream_b_stream_bool_fun_fun$ B_stream$ )B_stream_bool_fun$ )
(declare-fun fun_app$au (C_b_fun$ C$ )B$ )
(declare-fun fun_app$av (B_c_fun$ B$ )C$ )
(declare-fun fun_app$aw (B_b_fun$ B$ )B$ )
(declare-fun fun_app$ax (A_c_sp_nu_c_fun$ A_c_sp_nu$ )C$ )
(declare-fun fun_app$ay (A_c_sp_nu_b_fun$ A_c_sp_nu$ )B$ )
(declare-fun fun_app$az (C_a_c_sp_nu_fun$ C$ )A_c_sp_nu$ )
(declare-fun fun_app$ba (B_a_c_sp_nu_fun$ B$ )A_c_sp_nu$ )
(declare-fun fun_app$bb (A_b_fun$ A$ )B$ )
(declare-fun fun_app$bc (A_a_c_sp_nu_fun$ A$ )A_c_sp_nu$ )
(declare-fun fun_app$bd (C_b_c_b_sp_nu_sp_mu_b_fun$ C_b_c_b_sp_nu_sp_mu$ )B$ )
(declare-fun fun_app$be (A_c_sp_nu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ A_c_sp_nu_bool_fun$ )A_c_a_c_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$bf (B_b_b_fun_fun$ B$ )B_b_fun$ )
(declare-fun fun_app$bg (C_b_sp_nu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ C_b_sp_nu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun case_sp_nu$ (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun pred_sp_mu$ (C_bool_fun$ )A_c_sp_nu_bool_fun_a_c_a_c_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun set1_sp_mu$ (C_b_c_b_sp_nu_sp_mu$ )B_set$ )
(declare-fun set2_sp_mu$ (C_b_c_b_sp_nu_sp_mu$ )C_b_sp_nu_set$ )
(declare-fun sp_mu_comp$ (C_b_c_b_sp_nu_sp_mu$ A_c_a_c_sp_nu_sp_mu$ )A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ )
(declare-fun case_sp_nu$a (A_c_a_c_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_fun$ A_c_sp_nu$ )A_c_a_c_sp_nu_sp_mu$ )
(declare-fun case_stream$ (B_b_stream_b_fun_fun$ B_stream$ )B$ )
(declare-fun pred_sp_mu$a (B_bool_fun$ )C_b_sp_nu_bool_fun_c_b_c_b_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun sdrop_while$ (C_bool_fun$ C_stream$ )C_stream$ )
(declare-fun set1_sp_mu$a (A_c_a_c_sp_nu_sp_mu$ )C_set$ )
(declare-fun set2_sp_mu$a (A_c_a_c_sp_nu_sp_mu$ )A_c_sp_nu_set$ )
(declare-fun sinterleave$ (B_stream$ B_stream$ )B_stream$ )
(declare-fun sp_nu_comp2$ (C_b_sp_nu$ A_c_sp_nu$ )A_b_sp_nu$ )
(declare-fun case_stream$a (B_b_stream_b_stream_fun_fun$ B_stream$ )B_stream$ )
(declare-fun case_stream$b (C_c_stream_c_fun_fun$ C_stream$ )C$ )
(declare-fun case_stream$c (C_c_stream_c_stream_fun_fun$ C_stream$ )C_stream$ )
(declare-fun sdrop_while$a (B_bool_fun$ B_stream$ )B_stream$ )
(declare-fun sp_mu_comp_rel$ ()C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_c_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod_bool_fun_fun$ )
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (fun_app$ (uup$ ?v0 )?v1 )(sCons$ ?v0 ?v1 )):pattern ((fun_app$ (uup$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_c_sp_nu_set$ )(?v1 A_c_sp_nu$ ))(! (= (fun_app$a (uuq$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$a (uuq$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$b (uuv$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$b (uuv$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$c (uur$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$c (uur$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ ))(! (= (fun_app$d (uus$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$d (uus$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C$ ))(! (= (fun_app$e (uuu$ ?v0 )?v1 )(member$d ?v1 ?v0 )):pattern ((fun_app$e (uuu$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B$ ))(! (= (fun_app$f (uut$ ?v0 )?v1 )(member$e ?v1 ?v0 )):pattern ((fun_app$f (uut$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v2 A$ ))(! (= (fun_app$g (fun_app$h (uvc$ ?v0 )?v1 )?v2 )(sp_mu_comp$ (get$ ?v0 )(fun_app$i ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$h (uvc$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ ))(! (= (fun_app$j (fun_app$k (uug$ ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$k (uug$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ ))(! (= (fun_app$m (fun_app$n (uuk$ ?v0 )?v1 )?v2 )(fun_app$o ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$n (uuk$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$j (fun_app$p (uuf$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$p (uuf$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_fun$ )(?v2 A$ ))(! (= (fun_app$q (fun_app$r (uum$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$s ?v1 ?v2 ))):pattern ((fun_app$q (fun_app$r (uum$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$o (fun_app$t (uul$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$t (uul$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$m (fun_app$u (uuh$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$u (uuh$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 A_c_fun$ )(?v2 A$ ))(! (= (fun_app$s (fun_app$v (uui$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$s ?v1 ?v2 ))):pattern ((fun_app$s (fun_app$v (uui$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$w (uuo$ ?v0 ?v1 )?v2 )(fun_app$i ?v0 (fun_app$x ?v1 ?v2 ))):pattern ((fun_app$w (uuo$ ?v0 ?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_a_fun$ )(?v2 C$ ))(! (= (fun_app$y (fun_app$z (uuj$ ?v0 )?v1 )?v2 )(fun_app$i ?v0 (fun_app$aa ?v1 ?v2 ))):pattern ((fun_app$y (fun_app$z (uuj$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$i (fun_app$ab (uun$ ?v0 )?v1 )?v2 )(fun_app$i ?v0 (fun_app$ac ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$ab (uun$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$ad (fun_app$ae (uuz$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (image$ ?v0 ?v1 ))(fun_app$b ?v2 ?v3 ))):pattern ((fun_app$b (fun_app$ad (fun_app$ae (uuz$ ?v0 )?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$ad (fun_app$af (uux$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$b ?v2 ?v3 ))):pattern ((fun_app$b (fun_app$ad (fun_app$af (uux$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$b (fun_app$ad (fun_app$ae (uva$ ?v0 )?v1 )?v2 )?v3 )(and (member$a ?v3 ?v1 )(fun_app$b ?v2 (fun_app$l ?v0 ?v3 )))):pattern ((fun_app$b (fun_app$ad (fun_app$ae (uva$ ?v0 )?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v3 C$ ))(! (= (fun_app$e (fun_app$ag (fun_app$ah (uuy$ ?v0 )?v1 )?v2 )?v3 )(and (member$d ?v3 ?v1 )(fun_app$b ?v2 (fun_app$j ?v0 ?v3 )))):pattern ((fun_app$e (fun_app$ag (fun_app$ah (uuy$ ?v0 )?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(! (= (fun_app$ai (fun_app$aj uu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ai (fun_app$aj uu$ ?v0 )?v1 )))):named a22 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (fun_app$ak (fun_app$al uua$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ak (fun_app$al uua$ ?v0 )?v1 )))):named a23 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(! (= (fun_app$am (fun_app$an uub$ ?v0 )?v1 )?v1 ):pattern ((fun_app$am (fun_app$an uub$ ?v0 )?v1 )))):named a24 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (fun_app$ (fun_app$ao uuc$ ?v0 )?v1 )?v1 ):pattern ((fun_app$ (fun_app$ao uuc$ ?v0 )?v1 )))):named a25 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$l uud$ ?v0 )?v0 ):pattern ((fun_app$l uud$ ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(! (= (fun_app$ap uvb$ ?v0 )?v0 ):pattern ((fun_app$ap uvb$ ?v0 )))):named a27 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$m uue$ ?v0 )?v0 ):pattern ((fun_app$m uue$ ?v0 )))):named a28 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$e uuw$ ?v0 )true ):pattern ((fun_app$e uuw$ ?v0 )))):named a29 ))
(assert (! (not (and (= (shd$ (run_nu$ (sp_nu_comp2$ spc$ sp_c$ )sc$ ))(shd$ (run_nu$a spc$ (run_nu$b sp_c$ sc$ ))))(exists ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ spc$ sp_c$ )sc$ ))(run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(= (stl$ (run_nu$a spc$ (run_nu$b sp_c$ sc$ )))(run_nu$a ?v0 (run_nu$b ?v1 ?v2 ))))))):named a30 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(=> (member$a (out$ ?v0 )(image$a f$ top$ ))(and (= (shd$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(shd$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 ))))(exists ((?v3 C_b_sp_nu$ )(?v4 A_c_sp_nu$ )(?v5 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(run_nu$ (sp_nu_comp2$ ?v3 ?v4 )?v5 ))(= (stl$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 )))(run_nu$a ?v3 (run_nu$b ?v4 ?v5 )))))))):named a31 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_stream$ ))(=> (and (= (shd$b ?v0 )(shd$b ?v1 ))(= (stl$b ?v0 )(stl$b ?v1 )))(= ?v0 ?v1 ))):named a32 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a33 ))
(assert (! (forall ((?v0 C_stream_c_stream_bool_fun_fun$ )(?v1 C_stream$ )(?v2 C_stream$ ))(=> (and (fun_app$aq (fun_app$ar ?v0 ?v1 )?v2 )(forall ((?v3 C_stream$ )(?v4 C_stream$ ))(=> (fun_app$aq (fun_app$ar ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(or (fun_app$aq (fun_app$ar ?v0 (stl$b ?v3 ))(stl$b ?v4 ))(= (stl$b ?v3 )(stl$b ?v4 )))))))(= ?v1 ?v2 ))):named a34 ))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(=> (and (fun_app$as (fun_app$at ?v0 ?v1 )?v2 )(forall ((?v3 B_stream$ )(?v4 B_stream$ ))(=> (fun_app$as (fun_app$at ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$as (fun_app$at ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a35 ))
(assert (! (forall ((?v0 C_stream_c_stream_bool_fun_fun$ )(?v1 C_stream$ )(?v2 C_stream$ ))(=> (and (fun_app$aq (fun_app$ar ?v0 ?v1 )?v2 )(forall ((?v3 C_stream$ )(?v4 C_stream$ ))(=> (fun_app$aq (fun_app$ar ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(fun_app$aq (fun_app$ar ?v0 (stl$b ?v3 ))(stl$b ?v4 ))))))(= ?v1 ?v2 ))):named a36 ))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(=> (and (fun_app$as (fun_app$at ?v0 ?v1 )?v2 )(forall ((?v3 B_stream$ )(?v4 B_stream$ ))(=> (fun_app$as (fun_app$at ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$as (fun_app$at ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a37 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(= (= (in$ ?v0 )(in$ ?v1 ))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(= (= (in$a ?v0 )(in$a ?v1 ))(= ?v0 ?v1 ))):named a39 ))
(assert (! (= (put$ b$ sp$ )(out$a sp_c$ )):named a40 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (member$a (out$ (in$a (fun_app$j f$ b$ )))(image$a f$ top$ ))(and (= (shd$ (run_nu$ (sp_nu_comp2$ (in$a (fun_app$j f$ b$ ))sp$ )?v0 ))(shd$ (run_nu$a (in$a (fun_app$j f$ b$ ))(run_nu$b sp$ ?v0 ))))(exists ((?v1 C_b_sp_nu$ )(?v2 A_c_sp_nu$ )(?v3 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ (in$a (fun_app$j f$ b$ ))sp$ )?v0 ))(run_nu$ (sp_nu_comp2$ ?v1 ?v2 )?v3 ))(= (stl$ (run_nu$a (in$a (fun_app$j f$ b$ ))(run_nu$b sp$ ?v0 )))(run_nu$a ?v1 (run_nu$b ?v2 ?v3 )))))))):named a41 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(=> (member$a (out$ ?v0 )(image$a f$ top$ ))(and (= (shd$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(shd$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 ))))(exists ((?v3 C_b_sp_nu$ )(?v4 A_c_sp_nu$ )(?v5 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(run_nu$ (sp_nu_comp2$ ?v3 ?v4 )?v5 ))(= (stl$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 )))(run_nu$a ?v3 (run_nu$b ?v4 ?v5 )))))))):named a42 ))
(assert (! (forall ((?v0 B_b_stream_b_fun_fun$ )(?v1 B_stream$ ))(! (= (case_stream$ ?v0 ?v1 )(fun_app$ak (fun_app$al ?v0 (shd$ ?v1 ))(stl$ ?v1 ))):pattern ((case_stream$ ?v0 ?v1 )))):named a43 ))
(assert (! (forall ((?v0 B_b_stream_b_stream_fun_fun$ )(?v1 B_stream$ ))(! (= (case_stream$a ?v0 ?v1 )(fun_app$ (fun_app$ao ?v0 (shd$ ?v1 ))(stl$ ?v1 ))):pattern ((case_stream$a ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C_stream$ ))(= (sdrop_while$ ?v0 ?v1 )(ite (fun_app$e ?v0 (shd$b ?v1 ))(sdrop_while$ ?v0 (stl$b ?v1 ))?v1 ))):named a45 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(= (sdrop_while$a ?v0 ?v1 )(ite (fun_app$f ?v0 (shd$ ?v1 ))(sdrop_while$a ?v0 (stl$ ?v1 ))?v1 ))):named a46 ))
(assert (! (forall ((?v0 C_stream$ ))(= (sCons$b (shd$b ?v0 )(stl$b ?v0 ))?v0 )):named a47 ))
(assert (! (forall ((?v0 B_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a48 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B$ )(?v3 B_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a49 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_sp_nu$ )(?v2 B$ )(?v3 C_b_sp_nu$ ))(= (= (put$a ?v0 ?v1 )(put$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_sp_nu_a_c_sp_nu_prod$ )(?v2 B$ )(?v3 C_b_sp_nu_a_c_sp_nu_prod$ ))(= (= (put$b ?v0 ?v1 )(put$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_sp_nu$ )(?v2 C$ )(?v3 A_c_sp_nu$ ))(= (= (put$ ?v0 ?v1 )(put$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 C_b_sp_nu$ ))(= (in$a (out$ ?v0 ))?v0 )):named a53 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(= (in$ (out$a ?v0 ))?v0 )):named a54 ))
(assert (! (= (get$ f$ )(out$ spc$ )):named a55 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (sdrop_while$a ?v0 (sCons$ ?v1 ?v2 ))(ite (fun_app$f ?v0 ?v1 )(sdrop_while$a ?v0 ?v2 )(sCons$ ?v1 ?v2 ))):pattern ((sdrop_while$a ?v0 (sCons$ ?v1 ?v2 ))))):named a56 ))
(assert (! (forall ((?v0 B_b_stream_b_fun_fun$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (case_stream$ ?v0 (sCons$ ?v1 ?v2 ))(fun_app$ak (fun_app$al ?v0 ?v1 )?v2 )):pattern ((case_stream$ ?v0 (sCons$ ?v1 ?v2 ))))):named a57 ))
(assert (! (forall ((?v0 B_b_stream_b_stream_fun_fun$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (case_stream$a ?v0 (sCons$ ?v1 ?v2 ))(fun_app$ (fun_app$ao ?v0 ?v1 )?v2 )):pattern ((case_stream$a ?v0 (sCons$ ?v1 ?v2 ))))):named a58 ))
(assert (! (forall ((?v0 C_stream$ ))(= (shd$b ?v0 )(case_stream$b uu$ ?v0 ))):named a59 ))
(assert (! (forall ((?v0 B_stream$ ))(= (shd$ ?v0 )(case_stream$ uua$ ?v0 ))):named a60 ))
(assert (! (forall ((?v0 C_stream$ ))(= (stl$b ?v0 )(case_stream$c uub$ ?v0 ))):named a61 ))
(assert (! (forall ((?v0 B_stream$ ))(= (stl$ ?v0 )(case_stream$a uuc$ ?v0 ))):named a62 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (forall ((?v1 B$ )(?v2 B_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a63 ))
(assert (! (forall ((?v0 C_b_sp_nu$ ))(=> (=> (= ?v0 (in$a (out$ ?v0 )))false )false )):named a64 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(=> (=> (= ?v0 (in$ (out$a ?v0 )))false )false )):named a65 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(! (= (out$ (in$a ?v0 ))?v0 ):pattern ((in$a ?v0 )))):named a66 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(! (= (out$a (in$ ?v0 ))?v0 ):pattern ((in$ ?v0 )))):named a67 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(! (= (stl$b (sCons$b ?v0 ?v1 ))?v1 ):pattern ((sCons$b ?v0 ?v1 )))):named a68 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (stl$ (sCons$ ?v0 ?v1 ))?v1 ):pattern ((sCons$ ?v0 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(! (= (shd$b (sCons$b ?v0 ?v1 ))?v0 ):pattern ((sCons$b ?v0 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (shd$ (sCons$ ?v0 ?v1 ))?v0 ):pattern ((sCons$ ?v0 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_stream_b_fun_fun$ )(?v2 B_stream$ ))(= (fun_app$f ?v0 (case_stream$ ?v1 ?v2 ))(=> (= ?v2 (sCons$ (shd$ ?v2 )(stl$ ?v2 )))(fun_app$f ?v0 (fun_app$ak (fun_app$al ?v1 (shd$ ?v2 ))(stl$ ?v2 )))))):named a72 ))
(assert (! (forall ((?v0 B_stream_bool_fun$ )(?v1 B_b_stream_b_stream_fun_fun$ )(?v2 B_stream$ ))(= (fun_app$as ?v0 (case_stream$a ?v1 ?v2 ))(=> (= ?v2 (sCons$ (shd$ ?v2 )(stl$ ?v2 )))(fun_app$as ?v0 (fun_app$ (fun_app$ao ?v1 (shd$ ?v2 ))(stl$ ?v2 )))))):named a73 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_stream_b_fun_fun$ )(?v2 B_stream$ ))(= (fun_app$f ?v0 (case_stream$ ?v1 ?v2 ))(not (and (= ?v2 (sCons$ (shd$ ?v2 )(stl$ ?v2 )))(not (fun_app$f ?v0 (fun_app$ak (fun_app$al ?v1 (shd$ ?v2 ))(stl$ ?v2 )))))))):named a74 ))
(assert (! (forall ((?v0 B_stream_bool_fun$ )(?v1 B_b_stream_b_stream_fun_fun$ )(?v2 B_stream$ ))(= (fun_app$as ?v0 (case_stream$a ?v1 ?v2 ))(not (and (= ?v2 (sCons$ (shd$ ?v2 )(stl$ ?v2 )))(not (fun_app$as ?v0 (fun_app$ (fun_app$ao ?v1 (shd$ ?v2 ))(stl$ ?v2 )))))))):named a75 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu$ ))(=> (= (out$ ?v0 )(out$ ?v1 ))(= ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_c_sp_nu$ ))(=> (= (out$a ?v0 )(out$a ?v1 ))(= ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 C_stream$ ))(=> (=> (= ?v0 (sCons$b (shd$b ?v0 )(stl$b ?v0 )))false )false )):named a78 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (=> (= ?v0 (sCons$ (shd$ ?v0 )(stl$ ?v0 )))false )false )):named a79 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(=> (forall ((?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (= ?v0 (in$ ?v1 ))false ))false )):named a80 ))
(assert (! (forall ((?v0 C_b_sp_nu$ ))(=> (forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (= ?v0 (in$a ?v1 ))false ))false )):named a81 ))
(assert (! (= (get$ f$ )(out$ spb$ )):named a82 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ ))(= (image$ uud$ ?v0 )?v0 )):named a83 ))
(assert (! (forall ((?v0 C_set$ ))(= (image$b uue$ ?v0 )?v0 )):named a84 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$a ?v0 (image$a ?v1 ?v3 )))):named a85 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$ ?v1 ?v3 )))):named a86 ))
(assert (! (forall ((?v0 C$ )(?v1 C_c_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$d ?v0 (image$b ?v1 ?v3 )))):named a87 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$au ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$e ?v0 (image$c ?v1 ?v3 )))):named a88 ))
(assert (! (forall ((?v0 C$ )(?v1 B_c_fun$ )(?v2 B$ )(?v3 B_set$ ))(=> (and (= ?v0 (fun_app$av ?v1 ?v2 ))(member$e ?v2 ?v3 ))(member$d ?v0 (image$d ?v1 ?v3 )))):named a89 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B_set$ ))(=> (and (= ?v0 (fun_app$aw ?v1 ?v2 ))(member$e ?v2 ?v3 ))(member$e ?v0 (image$e ?v1 ?v3 )))):named a90 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_sp_nu_c_fun$ )(?v2 A_c_sp_nu$ )(?v3 A_c_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$ax ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$d ?v0 (image$f ?v1 ?v3 )))):named a91 ))
(assert (! (forall ((?v0 B$ )(?v1 A_c_sp_nu_b_fun$ )(?v2 A_c_sp_nu$ )(?v3 A_c_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$ay ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$e ?v0 (image$g ?v1 ?v3 )))):named a92 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 C_a_c_sp_nu_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$az ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$ ?v0 (image$h ?v1 ?v3 )))):named a93 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 B_a_c_sp_nu_fun$ )(?v2 B$ )(?v3 B_set$ ))(=> (and (= ?v0 (fun_app$ba ?v1 ?v2 ))(member$e ?v2 ?v3 ))(member$ ?v0 (image$i ?v1 ?v3 )))):named a94 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(= (member$ ?v0 top$a )true )):named a95 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(= (member$b ?v0 top$b )true )):named a96 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ ))(= (member$c ?v0 top$c )true )):named a97 ))
(assert (! (forall ((?v0 B$ ))(= (member$e ?v0 top$d )true )):named a98 ))
(assert (! (forall ((?v0 A$ ))(= (member$f ?v0 top$e )true )):named a99 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(= (member$a ?v0 top$f )true )):named a100 ))
(assert (! (forall ((?v0 C$ ))(= (member$d ?v0 top$ )true )):named a101 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(member$ ?v0 top$a )):named a102 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(member$b ?v0 top$b )):named a103 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ ))(member$c ?v0 top$c )):named a104 ))
(assert (! (forall ((?v0 B$ ))(member$e ?v0 top$d )):named a105 ))
(assert (! (forall ((?v0 A$ ))(member$f ?v0 top$e )):named a106 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(member$a ?v0 top$f )):named a107 ))
(assert (! (forall ((?v0 C$ ))(member$d ?v0 top$ )):named a108 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$e top$g ?v0 )top$h ):pattern ((fun_app$e top$g ?v0 )))):named a109 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$b top$i ?v0 )top$h ):pattern ((fun_app$b top$i ?v0 )))):named a110 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (fun_app$as (smember$ ?v0 )(sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$as (smember$ ?v0 )?v2 ))):pattern ((fun_app$as (smember$ ?v0 )(sCons$ ?v1 ?v2 ))))):named a111 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_fun$ ))(= (image$a (fun_app$p (uuf$ ?v0 )?v1 )top$ )(image$a ?v0 (image$b ?v1 top$ )))):named a112 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (image$a (fun_app$k (uug$ ?v0 )?v1 )top$ )(image$ ?v0 (image$a ?v1 top$ )))):named a113 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ ))(= (image$b (fun_app$u (uuh$ ?v0 )?v1 )top$ )(image$b ?v0 (image$b ?v1 top$ )))):named a114 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 A_c_fun$ ))(= (image$j (fun_app$v (uui$ ?v0 )?v1 )top$e )(image$b ?v0 (image$j ?v1 top$e )))):named a115 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_a_fun$ ))(= (image$k (fun_app$z (uuj$ ?v0 )?v1 )top$ )(image$l ?v0 (image$m ?v1 top$ )))):named a116 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (image$b (fun_app$n (uuk$ ?v0 )?v1 )top$ )(image$n ?v0 (image$a ?v1 top$ )))):named a117 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_fun$ ))(= (image$n (fun_app$t (uul$ ?v0 )?v1 )top$f )(image$b ?v0 (image$n ?v1 top$f )))):named a118 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 A_c_fun$ ))(= (image$o (fun_app$r (uum$ ?v0 )?v1 )top$e )(image$a ?v0 (image$j ?v1 top$e )))):named a119 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_fun$ ))(= (image$l (fun_app$ab (uun$ ?v0 )?v1 )top$e )(image$l ?v0 (image$p ?v1 top$e )))):named a120 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_a_fun$ ))(= (image$q (uuo$ ?v0 ?v1 )top$f )(image$l ?v0 (image$r ?v1 top$f )))):named a121 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$a ?v0 (image$a ?v1 top$ ))(forall ((?v2 C$ ))(=> (= ?v0 (fun_app$j ?v1 ?v2 ))false )))false )):named a122 ))
(assert (! (forall ((?v0 C$ )(?v1 C_c_fun$ ))(=> (and (member$d ?v0 (image$b ?v1 top$ ))(forall ((?v2 C$ ))(=> (= ?v0 (fun_app$m ?v1 ?v2 ))false )))false )):named a123 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_fun$ ))(=> (and (member$e ?v0 (image$c ?v1 top$ ))(forall ((?v2 C$ ))(=> (= ?v0 (fun_app$au ?v1 ?v2 ))false )))false )):named a124 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_fun$ ))(=> (and (member$d ?v0 (image$j ?v1 top$e ))(forall ((?v2 A$ ))(=> (= ?v0 (fun_app$s ?v1 ?v2 ))false )))false )):named a125 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_fun$ ))(=> (and (member$e ?v0 (image$s ?v1 top$e ))(forall ((?v2 A$ ))(=> (= ?v0 (fun_app$bb ?v1 ?v2 ))false )))false )):named a126 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 C_a_c_sp_nu_fun$ ))(=> (and (member$ ?v0 (image$h ?v1 top$ ))(forall ((?v2 C$ ))(=> (= ?v0 (fun_app$az ?v1 ?v2 ))false )))false )):named a127 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_a_c_sp_nu_fun$ ))(=> (and (member$ ?v0 (image$t ?v1 top$e ))(forall ((?v2 A$ ))(=> (= ?v0 (fun_app$bc ?v1 ?v2 ))false )))false )):named a128 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 C_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (member$b ?v0 (image$k ?v1 top$ ))(forall ((?v2 C$ ))(=> (= ?v0 (fun_app$y ?v1 ?v2 ))false )))false )):named a129 ))
(assert (! (forall ((?v0 C$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_fun$ ))(=> (and (member$d ?v0 (image$n ?v1 top$f ))(forall ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(=> (= ?v0 (fun_app$o ?v1 ?v2 ))false )))false )):named a130 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_c_b_sp_nu_sp_mu_b_fun$ ))(=> (and (member$e ?v0 (image$u ?v1 top$f ))(forall ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(=> (= ?v0 (fun_app$bd ?v1 ?v2 ))false )))false )):named a131 ))
(assert (! (forall ((?v0 C_a_fun$ ))(= (= (image$m ?v0 top$ )top$e )(forall ((?v1 A$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$aa ?v0 ?v2 )))))):named a132 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_fun$ ))(= (= (image$n ?v0 top$f )top$ )(forall ((?v1 C$ ))(exists ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(= ?v1 (fun_app$o ?v0 ?v2 )))))):named a133 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (image$ ?v0 top$f )top$f )(forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(exists ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(= ?v1 (fun_app$l ?v0 ?v2 )))))):named a134 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_fun$ ))(= (= (image$r ?v0 top$f )top$e )(forall ((?v1 A$ ))(exists ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(= ?v1 (fun_app$x ?v0 ?v2 )))))):named a135 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(= (= (image$l ?v0 top$e )top$b )(forall ((?v1 A_c_a_c_sp_nu_sp_mu$ ))(exists ((?v2 A$ ))(= ?v1 (fun_app$i ?v0 ?v2 )))))):named a136 ))
(assert (! (forall ((?v0 A_c_fun$ ))(= (= (image$j ?v0 top$e )top$ )(forall ((?v1 C$ ))(exists ((?v2 A$ ))(= ?v1 (fun_app$s ?v0 ?v2 )))))):named a137 ))
(assert (! (forall ((?v0 A_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (image$o ?v0 top$e )top$f )(forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(exists ((?v2 A$ ))(= ?v1 (fun_app$q ?v0 ?v2 )))))):named a138 ))
(assert (! (forall ((?v0 A_a_fun$ ))(= (= (image$p ?v0 top$e )top$e )(forall ((?v1 A$ ))(exists ((?v2 A$ ))(= ?v1 (fun_app$ac ?v0 ?v2 )))))):named a139 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (image$a ?v0 top$ )top$f )(forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$j ?v0 ?v2 )))))):named a140 ))
(assert (! (forall ((?v0 C_c_fun$ ))(= (= (image$b ?v0 top$ )top$ )(forall ((?v1 C$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$m ?v0 ?v2 )))))):named a141 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(= (= (get$a ?v0 )(get$a ?v1 ))(= ?v0 ?v1 ))):named a142 ))
(assert (! (forall ((?v0 A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ )(?v1 A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ ))(= (= (get$b ?v0 )(get$b ?v1 ))(= ?v0 ?v1 ))):named a143 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (get$ ?v0 )(get$ ?v1 ))(= ?v0 ?v1 ))):named a144 ))
(assert (! (= top$f (collect$ top$i )):named a145 ))
(assert (! (= top$e (collect$a top$j )):named a146 ))
(assert (! (= top$ (collect$b top$g )):named a147 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B$ )(?v3 B_stream_set$ ))(= (member$g (sCons$ ?v0 ?v1 )(image$v (uup$ ?v2 )?v3 ))(and (= ?v0 ?v2 )(member$g ?v1 ?v3 )))):named a148 ))
(assert (! (forall ((?v0 A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ )(?v1 B$ )(?v2 C_b_sp_nu_a_c_sp_nu_prod$ ))(not (= (get$b ?v0 )(put$b ?v1 ?v2 )))):named a149 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 B$ )(?v2 C_b_sp_nu$ ))(not (= (get$ ?v0 )(put$a ?v1 ?v2 )))):named a150 ))
(assert (! (forall ((?v0 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v1 C$ )(?v2 A_c_sp_nu$ ))(not (= (get$a ?v0 )(put$ ?v1 ?v2 )))):named a151 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C_bool_fun$ ))(=> (forall ((?v2 C$ ))(= (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 )))(= (collect$b ?v0 )(collect$b ?v1 )))):named a152 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(= (fun_app$b ?v0 ?v2 )(fun_app$b ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a153 ))
(assert (! (forall ((?v0 A_c_sp_nu_set$ ))(= (collect$c (uuq$ ?v0 ))?v0 )):named a154 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ ))(= (collect$d (uur$ ?v0 ))?v0 )):named a155 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ ))(= (collect$e (uus$ ?v0 ))?v0 )):named a156 ))
(assert (! (forall ((?v0 B_set$ ))(= (collect$f (uut$ ?v0 ))?v0 )):named a157 ))
(assert (! (forall ((?v0 C_set$ ))(= (collect$b (uuu$ ?v0 ))?v0 )):named a158 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ ))(= (collect$ (uuv$ ?v0 ))?v0 )):named a159 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_c_sp_nu_bool_fun$ ))(= (member$ ?v0 (collect$c ?v1 ))(fun_app$a ?v1 ?v0 ))):named a160 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu_bool_fun$ ))(= (member$b ?v0 (collect$d ?v1 ))(fun_app$c ?v1 ?v0 ))):named a161 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_bool_fun$ ))(= (member$c ?v0 (collect$e ?v1 ))(fun_app$d ?v1 ?v0 ))):named a162 ))
(assert (! (forall ((?v0 B$ )(?v1 B_bool_fun$ ))(= (member$e ?v0 (collect$f ?v1 ))(fun_app$f ?v1 ?v0 ))):named a163 ))
(assert (! (forall ((?v0 C$ )(?v1 C_bool_fun$ ))(= (member$d ?v0 (collect$b ?v1 ))(fun_app$e ?v1 ?v0 ))):named a164 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (member$a ?v0 (collect$ ?v1 ))(fun_app$b ?v1 ?v0 ))):named a165 ))
(assert (! (forall ((?v0 A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ ))(=> (and (forall ((?v1 A_a_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu_fun$ ))(=> (= ?v0 (get$b ?v1 ))false ))(forall ((?v1 B$ )(?v2 C_b_sp_nu_a_c_sp_nu_prod$ ))(=> (= ?v0 (put$b ?v1 ?v2 ))false )))false )):named a166 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (forall ((?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (get$ ?v1 ))false ))(forall ((?v1 B$ )(?v2 C_b_sp_nu$ ))(=> (= ?v0 (put$a ?v1 ?v2 ))false )))false )):named a167 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (forall ((?v1 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (get$a ?v1 ))false ))(forall ((?v1 C$ )(?v2 A_c_sp_nu$ ))(=> (= ?v0 (put$ ?v1 ?v2 ))false )))false )):named a168 ))
(assert (! (exists ((?v0 A_c_sp_nu$ ))(member$ ?v0 top$a )):named a169 ))
(assert (! (exists ((?v0 A_c_a_c_sp_nu_sp_mu$ ))(member$b ?v0 top$b )):named a170 ))
(assert (! (exists ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ ))(member$c ?v0 top$c )):named a171 ))
(assert (! (exists ((?v0 B$ ))(member$e ?v0 top$d )):named a172 ))
(assert (! (exists ((?v0 A$ ))(member$f ?v0 top$e )):named a173 ))
(assert (! (exists ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(member$a ?v0 top$f )):named a174 ))
(assert (! (exists ((?v0 C$ ))(member$d ?v0 top$ )):named a175 ))
(assert (! (forall ((?v0 A_c_sp_nu_set$ ))(=> (forall ((?v1 A_c_sp_nu$ ))(member$ ?v1 ?v0 ))(= top$a ?v0 ))):named a176 ))
(assert (! (forall ((?v0 A_c_a_c_sp_nu_sp_mu_set$ ))(=> (forall ((?v1 A_c_a_c_sp_nu_sp_mu$ ))(member$b ?v1 ?v0 ))(= top$b ?v0 ))):named a177 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod_set$ ))(=> (forall ((?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_prod$ ))(member$c ?v1 ?v0 ))(= top$c ?v0 ))):named a178 ))
(assert (! (forall ((?v0 B_set$ ))(=> (forall ((?v1 B$ ))(member$e ?v1 ?v0 ))(= top$d ?v0 ))):named a179 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(member$f ?v1 ?v0 ))(= top$e ?v0 ))):named a180 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(member$a ?v1 ?v0 ))(= top$f ?v0 ))):named a181 ))
(assert (! (forall ((?v0 C_set$ ))(=> (forall ((?v1 C$ ))(member$d ?v1 ?v0 ))(= top$ ?v0 ))):named a182 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (member$d ?v0 ?v1 )(member$a (fun_app$j ?v2 ?v0 )(image$a ?v2 ?v1 )))):named a183 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$l ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a184 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_c_fun$ ))(=> (member$d ?v0 ?v1 )(member$d (fun_app$m ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a185 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_b_fun$ ))(=> (member$d ?v0 ?v1 )(member$e (fun_app$au ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a186 ))
(assert (! (forall ((?v0 B$ )(?v1 B_set$ )(?v2 B_c_fun$ ))(=> (member$e ?v0 ?v1 )(member$d (fun_app$av ?v2 ?v0 )(image$d ?v2 ?v1 )))):named a187 ))
(assert (! (forall ((?v0 B$ )(?v1 B_set$ )(?v2 B_b_fun$ ))(=> (member$e ?v0 ?v1 )(member$e (fun_app$aw ?v2 ?v0 )(image$e ?v2 ?v1 )))):named a188 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_c_sp_nu_set$ )(?v2 A_c_sp_nu_c_fun$ ))(=> (member$ ?v0 ?v1 )(member$d (fun_app$ax ?v2 ?v0 )(image$f ?v2 ?v1 )))):named a189 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_c_sp_nu_set$ )(?v2 A_c_sp_nu_b_fun$ ))(=> (member$ ?v0 ?v1 )(member$e (fun_app$ay ?v2 ?v0 )(image$g ?v2 ?v1 )))):named a190 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_a_c_sp_nu_fun$ ))(=> (member$d ?v0 ?v1 )(member$ (fun_app$az ?v2 ?v0 )(image$h ?v2 ?v1 )))):named a191 ))
(assert (! (forall ((?v0 B$ )(?v1 B_set$ )(?v2 B_a_c_sp_nu_fun$ ))(=> (member$e ?v0 ?v1 )(member$ (fun_app$ba ?v2 ?v0 )(image$i ?v2 ?v1 )))):named a192 ))
(assert (! (forall ((?v0 B$ )(?v1 B_set$ )(?v2 C$ )(?v3 B_c_fun$ ))(=> (and (member$e ?v0 ?v1 )(= ?v2 (fun_app$av ?v3 ?v0 )))(member$d ?v2 (image$d ?v3 ?v1 )))):named a193 ))
(assert (! (forall ((?v0 B$ )(?v1 B_set$ )(?v2 B$ )(?v3 B_b_fun$ ))(=> (and (member$e ?v0 ?v1 )(= ?v2 (fun_app$aw ?v3 ?v0 )))(member$e ?v2 (image$e ?v3 ?v1 )))):named a194 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$d ?v0 ?v1 )(= ?v2 (fun_app$j ?v3 ?v0 )))(member$a ?v2 (image$a ?v3 ?v1 )))):named a195 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$l ?v3 ?v0 )))(member$a ?v2 (image$ ?v3 ?v1 )))):named a196 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 C$ ))(=> (member$d ?v3 ?v1 )(fun_app$b ?v2 (fun_app$j ?v0 ?v3 )))))):named a197 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$a ?v3 (image$ ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$a ?v3 ?v1 )(fun_app$b ?v2 (fun_app$l ?v0 ?v3 )))))):named a198 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 C$ ))(and (member$d ?v3 ?v1 )(fun_app$b ?v2 (fun_app$j ?v0 ?v3 )))))):named a199 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$a ?v3 (image$ ?v0 ?v1 ))(fun_app$b ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v1 )(fun_app$b ?v2 (fun_app$l ?v0 ?v3 )))))):named a200 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C_set$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 C$ ))(=> (member$d ?v4 ?v1 )(= (fun_app$j ?v2 ?v4 )(fun_app$j ?v3 ?v4 )))))(= (image$a ?v2 ?v0 )(image$a ?v3 ?v1 )))):named a201 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(= (member$a ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 C$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$j ?v1 ?v3 )))))):named a202 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(= (member$a ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$l ?v1 ?v3 )))))):named a203 ))
(assert (! (= top$ (collect$b uuw$ )):named a204 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(=> (and (member$a ?v0 (image$a ?v1 ?v2 ))(forall ((?v3 C$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v3 ))(member$d ?v3 ?v2 ))false )))false )):named a205 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (member$a ?v0 (image$ ?v1 ?v2 ))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v3 ))(member$a ?v3 ?v2 ))false )))false )):named a206 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (collect$ (fun_app$ad (fun_app$af (uux$ ?v0 )?v1 )?v2 ))(image$a ?v0 (collect$b (fun_app$ag (fun_app$ah (uuy$ ?v0 )?v1 )?v2 ))))):named a207 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (collect$ (fun_app$ad (fun_app$ae (uuz$ ?v0 )?v1 )?v2 ))(image$ ?v0 (collect$ (fun_app$ad (fun_app$ae (uva$ ?v0 )?v1 )?v2 ))))):named a208 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(= (image$ ?v0 (image$a ?v1 ?v2 ))(image$a (fun_app$k (uug$ ?v0 )?v1 )?v2 ))):named a209 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_fun$ )(?v2 C_set$ ))(= (image$a ?v0 (image$b ?v1 ?v2 ))(image$a (fun_app$p (uuf$ ?v0 )?v1 )?v2 ))):named a210 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ ))(member$a (fun_app$j ?v0 ?v1 )(image$a ?v0 top$ ))):named a211 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ ))(=> (= ?v0 (fun_app$j ?v1 ?v2 ))(member$a ?v0 (image$a ?v1 top$ )))):named a212 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (= (image$a ?v0 top$ )top$f )(exists ((?v2 C$ ))(= ?v1 (fun_app$j ?v0 ?v2 ))))):named a213 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(=> (= (image$b ?v0 top$ )top$ )(exists ((?v2 C$ ))(= ?v1 (fun_app$m ?v0 ?v2 ))))):named a214 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= (image$a ?v0 top$ )top$f )(forall ((?v2 C$ ))(=> (= ?v1 (fun_app$j ?v0 ?v2 ))false )))false )):named a215 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(=> (and (= (image$b ?v0 top$ )top$ )(forall ((?v2 C$ ))(=> (= ?v1 (fun_app$m ?v0 ?v2 ))false )))false )):named a216 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_fun$ ))(=> (forall ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(= (fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))?v2 ))(= (image$a ?v0 top$ )top$f ))):named a217 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ ))(=> (forall ((?v2 C$ ))(= (fun_app$m ?v0 (fun_app$m ?v1 ?v2 ))?v2 ))(= (image$b ?v0 top$ )top$ ))):named a218 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_stream$ ))(! (= (run_mu$ (get$ ?v0 )?v1 )(run_mu$ (fun_app$j ?v0 (shd$b ?v1 ))(stl$b ?v1 ))):pattern ((run_mu$ (get$ ?v0 )?v1 )))):named a219 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$h ?v0 (set2_sp_mu$ ?v1 ))(and (forall ((?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$ ?v2 ))(and (member$a ?v3 (image$a ?v2 top$ ))(member$h ?v0 (set2_sp_mu$ ?v3 ))))false ))(forall ((?v2 B$ ))(=> (= ?v1 (put$a ?v2 ?v0 ))false ))))false )):named a220 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (member$ ?v0 (set2_sp_mu$a ?v1 ))(and (forall ((?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$a ?v2 ))(and (member$b ?v3 (image$l ?v2 top$e ))(member$ ?v0 (set2_sp_mu$a ?v3 ))))false ))(forall ((?v2 C$ ))(=> (= ?v1 (put$ ?v2 ?v0 ))false ))))false )):named a221 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$e ?v0 (set1_sp_mu$ ?v1 ))(and (forall ((?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$ ?v2 ))(and (member$a ?v3 (image$a ?v2 top$ ))(member$e ?v0 (set1_sp_mu$ ?v3 ))))false ))(forall ((?v2 C_b_sp_nu$ ))(=> (= ?v1 (put$a ?v0 ?v2 ))false ))))false )):named a222 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (member$d ?v0 (set1_sp_mu$a ?v1 ))(and (forall ((?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v1 (get$a ?v2 ))(and (member$b ?v3 (image$l ?v2 top$e ))(member$d ?v0 (set1_sp_mu$a ?v3 ))))false ))(forall ((?v2 A_c_sp_nu$ ))(=> (= ?v1 (put$ ?v0 ?v2 ))false ))))false )):named a223 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (sinterleave$ ?v0 ?v1 )(sCons$ (shd$ ?v0 )(sinterleave$ ?v1 (stl$ ?v0 ))))):named a224 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ )(?v2 A_c_sp_nu$ ))(! (= (sp_mu_comp$ (get$ ?v0 )(put$ ?v1 ?v2 ))(sp_mu_comp$ (fun_app$j ?v0 ?v1 )(out$a ?v2 ))):pattern ((sp_mu_comp$ (get$ ?v0 )(put$ ?v1 ?v2 ))))):named a225 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_sp_nu$ ))(=> (and (member$a ?v0 (image$a ?v1 top$ ))(member$h ?v2 (set2_sp_mu$ ?v0 )))(member$h ?v2 (set2_sp_mu$ (get$ ?v1 ))))):named a226 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_sp_nu$ ))(member$d ?v0 (set1_sp_mu$a (put$ ?v0 ?v1 )))):named a227 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 C$ ))(member$ ?v0 (set2_sp_mu$a (put$ ?v1 ?v0 )))):named a228 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (stl$ (sinterleave$ ?v0 ?v1 ))(sinterleave$ ?v1 (stl$ ?v0 )))):named a229 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (shd$ (sinterleave$ ?v0 ?v1 ))(shd$ ?v0 ))):named a230 ))
(assert (! (forall ((?v0 C_b_sp_nu$ ))(= (out$ ?v0 )(case_sp_nu$ uud$ ?v0 ))):named a231 ))
(assert (! (forall ((?v0 A_c_sp_nu$ ))(= (out$a ?v0 )(case_sp_nu$a uvb$ ?v0 ))):named a232 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 B$ ))(=> (and (member$a ?v0 (image$a ?v1 top$ ))(member$e ?v2 (set1_sp_mu$ ?v0 )))(member$e ?v2 (set1_sp_mu$ (get$ ?v1 ))))):named a233 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ )(?v2 A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ ))(=> (and (= (sp_mu_comp$ ?v0 ?v1 )?v2 )(and (forall ((?v3 B$ )(?v4 C_b_sp_nu$ )(?v5 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v0 (put$a ?v3 ?v4 ))(and (= ?v1 ?v5 )(= ?v2 (put$b ?v3 (pair$ ?v4 (in$ ?v5 ))))))false ))(and (forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 C$ )(?v5 A_c_sp_nu$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (put$ ?v4 ?v5 ))(= ?v2 (sp_mu_comp$ (fun_app$j ?v3 ?v4 )(out$a ?v5 )))))false ))(forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (get$a ?v4 ))(= ?v2 (get$b (fun_app$h (uvc$ ?v3 )?v4 )))))false )))))false )):named a234 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$b top$i ?v0 )(member$a ?v0 top$f )):pattern ((fun_app$b top$i ?v0 )))):named a235 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$e top$g ?v0 )(member$d ?v0 top$ )):pattern ((fun_app$e top$g ?v0 )))):named a236 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_a_c_a_c_sp_nu_sp_mu_prod$ ))(=> (and (forall ((?v1 B$ )(?v2 C_b_sp_nu$ )(?v3 A_c_a_c_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$d (put$a ?v1 ?v2 )?v3 ))false ))(and (forall ((?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ )(?v3 A_c_sp_nu$ ))(=> (= ?v0 (pair$d (get$ ?v1 )(put$ ?v2 ?v3 )))false ))(forall ((?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (pair$d (get$ ?v1 )(get$a ?v2 )))false ))))false )):named a237 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 A_c_sp_nu_bool_fun$ )(?v2 C$ )(?v3 A_c_sp_nu$ ))(! (= (fun_app$c (fun_app$be (pred_sp_mu$ ?v0 )?v1 )(put$ ?v2 ?v3 ))(and (fun_app$e ?v0 ?v2 )(fun_app$a ?v1 ?v3 ))):pattern ((fun_app$c (fun_app$be (pred_sp_mu$ ?v0 )?v1 )(put$ ?v2 ?v3 ))))):named a238 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(! (= (run_mu$a (put$ ?v0 ?v1 )?v2 )(pair$f (pair$e ?v0 ?v1 )?v2 )):pattern ((run_mu$a (put$ ?v0 ?v1 )?v2 )))):named a239 ))
(assert (! (forall ((?v0 B_b_b_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(= (stl$ (smap2$ ?v0 ?v1 ?v2 ))(smap2$ ?v0 (stl$ ?v1 )(stl$ ?v2 )))):named a240 ))
(assert (! (forall ((?v0 B_b_b_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(= (shd$ (smap2$ ?v0 ?v1 ?v2 ))(fun_app$aw (fun_app$bf ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a241 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ ))(member$c (pair$a (fun_app$j ?v0 ?v1 )(get$ ?v0 ))sub$ )):named a242 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_b_sp_nu_bool_fun$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(! (= (fun_app$b (fun_app$bg (pred_sp_mu$a ?v0 )?v1 )(get$ ?v2 ))(pred_fun$ (fun_app$bg (pred_sp_mu$a ?v0 )?v1 )?v2 )):pattern ((fun_app$b (fun_app$bg (pred_sp_mu$a ?v0 )?v1 )(get$ ?v2 ))))):named a243 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 A_c_a_c_sp_nu_sp_mu$ )(?v2 A_b_c_b_sp_nu_a_c_sp_nu_prod_sp_mu$ ))(=> (and (= (sp_mu_comp$ ?v0 ?v1 )?v2 )(and (accp$ sp_mu_comp_rel$ (pair$d ?v0 ?v1 ))(and (forall ((?v3 B$ )(?v4 C_b_sp_nu$ )(?v5 A_c_a_c_sp_nu_sp_mu$ ))(=> (and (= ?v0 (put$a ?v3 ?v4 ))(and (= ?v1 ?v5 )(and (= ?v2 (put$b ?v3 (pair$ ?v4 (in$ ?v5 ))))(accp$ sp_mu_comp_rel$ (pair$d (put$a ?v3 ?v4 )?v5 )))))false ))(and (forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 C$ )(?v5 A_c_sp_nu$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (put$ ?v4 ?v5 ))(and (= ?v2 (sp_mu_comp$ (fun_app$j ?v3 ?v4 )(out$a ?v5 )))(accp$ sp_mu_comp_rel$ (pair$d (get$ ?v3 )(put$ ?v4 ?v5 ))))))false ))(forall ((?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v4 A_a_c_a_c_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (get$a ?v4 ))(and (= ?v2 (get$b (fun_app$h (uvc$ ?v3 )?v4 )))(accp$ sp_mu_comp_rel$ (pair$d (get$ ?v3 )(get$a ?v4 ))))))false ))))))false )):named a244 ))
(check-sat )
;(get-unsat-core )
