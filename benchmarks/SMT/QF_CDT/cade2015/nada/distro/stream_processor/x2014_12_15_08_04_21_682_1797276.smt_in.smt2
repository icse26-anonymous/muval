;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort A_a_sp_nu$ 0 )
(declare-sort A_b_sp_nu$ 0 )
(declare-sort A_c_sp_nu$ 0 )
(declare-sort B_a_sp_nu$ 0 )
(declare-sort B_b_sp_nu$ 0 )
(declare-sort B_c_sp_nu$ 0 )
(declare-sort C_a_sp_nu$ 0 )
(declare-sort C_b_sp_nu$ 0 )
(declare-sort C_c_sp_nu$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_stream_b_stream_fun$ 0 )
(declare-sort A_stream_c_stream_fun$ 0 )
(declare-sort B_stream_a_stream_fun$ 0 )
(declare-sort B_stream_b_stream_fun$ 0 )
(declare-sort B_stream_c_stream_fun$ 0 )
(declare-sort C_stream_a_stream_fun$ 0 )
(declare-sort C_stream_b_stream_fun$ 0 )
(declare-sort C_stream_c_stream_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_a_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_a_stream_c_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_b_stream_prod_fun$ 0 )
(declare-sort A_stream_b_stream_c_stream_prod_fun$ 0 )
(declare-sort A_stream_c_stream_b_stream_prod_fun$ 0 )
(declare-sort A_stream_c_stream_c_stream_prod_fun$ 0 )
(declare-sort B_stream_b_stream_b_stream_prod_fun$ 0 )
(declare-sort C_stream_b_stream_b_stream_prod_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_a_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_a_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_b_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_a_stream_c_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_a_stream_fun_c_stream_a_stream_fun_fun$ 0 )
(declare-sort C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_b_stream_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_c_stream_a_stream_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun_c_stream_a_stream_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_c_stream_a_stream_fun_c_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_c_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_b_stream_a_stream_fun_b_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_b_stream_a_stream_fun_b_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_b_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_a_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_b_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_b_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_a_stream_fun_b_stream_c_stream_fun_b_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_b_stream_c_stream_fun_b_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_b_stream_fun_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_a_stream_fun_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_a_stream_fun_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_b_stream_fun_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_b_stream_fun_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream$ 0)
(declare-sort A_stream$ 0)
(declare-sort C_stream$ 0)
(declare-fun shd$ (B_stream$)B$)
(declare-fun stl$ (B_stream$)B_stream$)
(declare-fun sCons$ (B$ B_stream$ )B_stream$)
(declare-fun shd$a (A_stream$)A$)
(declare-fun stl$a (A_stream$)A_stream$)
(declare-fun sCons$a (A$ A_stream$ )A_stream$)
(declare-fun shd$b (C_stream$)C$)
(declare-fun stl$b (C_stream$)C_stream$)
(declare-fun sCons$b (C$ C_stream$ )C_stream$)
(declare-sort B_stream_b_stream_prod$ 0)
(declare-sort C_stream_c_stream_prod$ 0)
(declare-sort C_stream_b_stream_prod$ 0)
(declare-sort B_stream_c_stream_prod$ 0)
(declare-fun fst$ (B_stream_b_stream_prod$)B_stream$)
(declare-fun snd$ (B_stream_b_stream_prod$)B_stream$)
(declare-fun pair$ (B_stream$ B_stream$ )B_stream_b_stream_prod$)
(declare-fun fst$a (C_stream_c_stream_prod$)C_stream$)
(declare-fun snd$a (C_stream_c_stream_prod$)C_stream$)
(declare-fun pair$a (C_stream$ C_stream$ )C_stream_c_stream_prod$)
(declare-fun fst$b (C_stream_b_stream_prod$)C_stream$)
(declare-fun snd$b (C_stream_b_stream_prod$)B_stream$)
(declare-fun pair$b (C_stream$ B_stream$ )C_stream_b_stream_prod$)
(declare-fun fst$c (B_stream_c_stream_prod$)B_stream$)
(declare-fun snd$c (B_stream_c_stream_prod$)C_stream$)
(declare-fun pair$c (B_stream$ C_stream$ )B_stream_c_stream_prod$)
(declare-fun s$ ()A_stream$ )
(declare-fun sp$ ()C_b_sp_nu$ )
(declare-fun sp$a ()A_c_sp_nu$ )
(declare-fun comp$ (B_stream_b_stream_fun$ )A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun copy$ ()A_a_sp_nu$ )
(declare-fun swap$ (C_stream$ )C_stream_c_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$a (A_stream_b_stream_fun$ )A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun comp$b (C_stream_b_stream_fun$ )A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun comp$c (B_stream_b_stream_fun$ )C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun comp$d (A_stream_b_stream_fun$ )C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun comp$e (C_stream_b_stream_fun$ )C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun comp$f (B_stream_c_stream_fun$ )A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun comp$g (C_stream_c_stream_fun$ )A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun comp$h (A_stream_c_stream_fun$ )A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun comp$i (C_stream_a_stream_fun$ )B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ )
(declare-fun comp$j (B_stream_b_stream_fun$ )B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ )
(declare-fun comp$k (A_stream_a_stream_fun$ )A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun comp$l (C_stream_a_stream_fun$ )C_stream_c_stream_fun_c_stream_a_stream_fun_fun$ )
(declare-fun comp$m (C_stream_a_stream_fun$ )A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun comp$n (A_stream_b_stream_fun$ )B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ )
(declare-fun comp$o (B_stream_a_stream_fun$ )C_stream_b_stream_fun_c_stream_a_stream_fun_fun$ )
(declare-fun comp$p (B_stream_a_stream_fun$ )A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun comp$q (A_stream_a_stream_fun$ )C_stream_a_stream_fun_c_stream_a_stream_fun_fun$ )
(declare-fun comp$r (B_stream_c_stream_fun$ )B_stream_b_stream_fun_b_stream_c_stream_fun_fun$ )
(declare-fun comp$s (A_stream_c_stream_fun$ )B_stream_a_stream_fun_b_stream_c_stream_fun_fun$ )
(declare-fun comp$t (B_stream_b_stream_b_stream_prod_fun$ C_stream_b_stream_fun$ )C_stream_b_stream_b_stream_prod_fun$ )
(declare-fun comp$u (B_stream_b_stream_b_stream_prod_fun$ A_stream_b_stream_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun comp$v (A_stream_c_stream_c_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_c_stream_c_stream_prod_fun$ )
(declare-fun comp$w (A_stream_c_stream_b_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_c_stream_b_stream_prod_fun$ )
(declare-fun comp$x (A_stream_b_stream_b_stream_prod_fun$ C_stream_a_stream_fun$ )C_stream_b_stream_b_stream_prod_fun$ )
(declare-fun comp$y (A_stream_b_stream_c_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_b_stream_c_stream_prod_fun$ )
(declare-fun comp$z (A_stream_b_stream_b_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun copy$a ()C_c_sp_nu$ )
(declare-fun copy$b ()B_b_sp_nu$ )
(declare-fun swap$a (A_stream$ )A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun swap$b (A_stream$ )A_stream_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$ )
(declare-fun swap$c (A_stream$ )A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ )
(declare-fun swap$d (C_stream$ )C_stream_c_stream_a_stream_fun_c_stream_a_stream_fun_fun_fun$ )
(declare-fun comp$aa (B_stream_b_stream_fun_c_stream_b_stream_fun_fun$ )B_stream_c_stream_fun_b_stream_b_stream_fun_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$ab (B_stream_b_stream_fun_c_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_b_stream_b_stream_fun_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$ac (B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ )
(declare-fun comp$ad (B_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )B_stream_c_stream_fun_b_stream_a_stream_fun_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$ae (B_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$af (B_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )B_stream_c_stream_fun_b_stream_b_stream_fun_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$ag (B_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_b_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$ah (B_stream_a_stream_fun_a_stream_c_stream_fun_fun$ )B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ )
(declare-fun comp$ai (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )B_stream_c_stream_fun_b_stream_a_stream_fun_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$aj (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun convol$ (B_stream_b_stream_fun$ B_stream_b_stream_fun$ )B_stream_b_stream_b_stream_prod_fun$ )
(declare-fun run_nu$ (A_b_sp_nu$ )A_stream_b_stream_fun$ )
(declare-fun convol$a (C_stream_b_stream_fun$ C_stream_b_stream_fun$ )C_stream_b_stream_b_stream_prod_fun$ )
(declare-fun convol$b (A_stream_b_stream_fun$ A_stream_b_stream_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun convol$c (A_stream_c_stream_fun$ A_stream_c_stream_fun$ )A_stream_c_stream_c_stream_prod_fun$ )
(declare-fun convol$d (A_stream_c_stream_fun$ A_stream_b_stream_fun$ )A_stream_c_stream_b_stream_prod_fun$ )
(declare-fun convol$e (A_stream_b_stream_fun$ A_stream_c_stream_fun$ )A_stream_b_stream_c_stream_prod_fun$ )
(declare-fun fun_app$ (A_stream_b_stream_fun$ A_stream$ )B_stream$ )
(declare-fun fun_upd$ (C_stream_b_stream_fun$ )C_stream_b_stream_c_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$ (C_stream_b_stream_fun$ )B_stream_b_stream_fun_b_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun run_nu$a (C_b_sp_nu$ )C_stream_b_stream_fun$ )
(declare-fun run_nu$b (A_c_sp_nu$ )A_stream_c_stream_fun$ )
(declare-fun run_nu$c (A_a_sp_nu$ )A_stream_a_stream_fun$ )
(declare-fun run_nu$d (C_c_sp_nu$ )C_stream_c_stream_fun$ )
(declare-fun run_nu$e (B_b_sp_nu$ )B_stream_b_stream_fun$ )
(declare-fun run_nu$f (C_a_sp_nu$ )C_stream_a_stream_fun$ )
(declare-fun run_nu$g (B_c_sp_nu$ )B_stream_c_stream_fun$ )
(declare-fun run_nu$h (B_a_sp_nu$ )B_stream_a_stream_fun$ )
(declare-fun fun_app$a (C_stream_b_stream_fun$ C_stream$ )B_stream$ )
(declare-fun fun_app$b (A_stream_c_stream_fun$ A_stream$ )C_stream$ )
(declare-fun fun_app$c (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$d (C_stream_c_stream_fun$ C_stream$ )C_stream$ )
(declare-fun fun_app$e (B_stream_b_stream_fun$ B_stream$ )B_stream$ )
(declare-fun fun_app$f (A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ A_stream_b_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$g (A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$h (A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ A_stream_c_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$i (C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ C_stream_b_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$j (C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ C_stream_a_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$k (C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ C_stream_c_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$l (A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ A_stream_b_stream_fun$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$m (A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ A_stream_c_stream_fun$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$n (A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$o (B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ B_stream_c_stream_fun$ )B_stream_a_stream_fun$ )
(declare-fun fun_app$p (C_stream_a_stream_fun$ C_stream$ )A_stream$ )
(declare-fun fun_app$q (B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ B_stream_b_stream_fun$ )B_stream_b_stream_fun$ )
(declare-fun fun_app$r (A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$s (C_stream_c_stream_fun_c_stream_a_stream_fun_fun$ C_stream_c_stream_fun$ )C_stream_a_stream_fun$ )
(declare-fun fun_app$t (A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ A_stream_c_stream_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$u (B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ B_stream_a_stream_fun$ )B_stream_b_stream_fun$ )
(declare-fun fun_app$v (C_stream_b_stream_fun_c_stream_a_stream_fun_fun$ C_stream_b_stream_fun$ )C_stream_a_stream_fun$ )
(declare-fun fun_app$w (A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ A_stream_b_stream_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$x (C_stream_a_stream_fun_c_stream_a_stream_fun_fun$ C_stream_a_stream_fun$ )C_stream_a_stream_fun$ )
(declare-fun fun_app$y (B_stream_b_stream_fun_b_stream_c_stream_fun_fun$ B_stream_b_stream_fun$ )B_stream_c_stream_fun$ )
(declare-fun fun_app$z (B_stream_a_stream_fun_b_stream_c_stream_fun_fun$ B_stream_a_stream_fun$ )B_stream_c_stream_fun$ )
(declare-fun fun_upd$a (A_stream_b_stream_fun$ )A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ )
(declare-fun fun_upd$b (A_stream_a_stream_fun$ )A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ )
(declare-fun fun_upd$c (A_stream_c_stream_fun$ )A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ )
(declare-fun fun_upd$d (C_stream_a_stream_fun$ )C_stream_a_stream_c_stream_a_stream_fun_fun_fun$ )
(declare-fun map_fun$a (B_stream_b_stream_fun$ )C_stream_b_stream_fun_b_stream_c_stream_fun_b_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$b (C_stream_b_stream_fun$ )C_stream_b_stream_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$c (B_stream_b_stream_fun$ )A_stream_b_stream_fun_b_stream_a_stream_fun_b_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$d (C_stream_b_stream_fun$ )A_stream_b_stream_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$e (C_stream_b_stream_fun$ )A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ )
(declare-fun map_fun$f (B_stream_b_stream_fun$ )A_stream_a_stream_fun_b_stream_a_stream_fun_b_stream_a_stream_fun_fun_fun$ )
(declare-fun map_fun$g (B_stream_b_stream_fun$ )C_stream_a_stream_fun_b_stream_c_stream_fun_b_stream_a_stream_fun_fun_fun$ )
(declare-fun map_fun$h (A_stream_b_stream_fun$ )B_stream_b_stream_fun_b_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$i (A_stream_b_stream_fun$ )C_stream_b_stream_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$j (A_stream_b_stream_fun$ )A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$k (A_stream_b_stream_fun$ )A_stream_c_stream_fun_b_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ )
(declare-fun map_fun$l (C_stream_a_stream_fun$ )B_stream_b_stream_fun_a_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$m (C_stream_a_stream_fun$ )A_stream_b_stream_fun_a_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$n (A_stream_a_stream_fun$ )B_stream_b_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$o (A_stream_a_stream_fun$ )A_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun fun_app$aa (B_stream_a_stream_fun$ B_stream$ )A_stream$ )
(declare-fun fun_app$ab (B_stream_c_stream_b_stream_fun_fun$ B_stream$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$ac (C_stream_b_stream_c_stream_b_stream_fun_fun_fun$ C_stream$ )B_stream_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$ad (B_stream_a_stream_b_stream_fun_fun$ B_stream$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$ae (A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ A_stream$ )B_stream_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$af (A_stream_a_stream_a_stream_fun_fun$ A_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$ag (A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun fun_app$ah (C_stream_a_stream_c_stream_fun_fun$ C_stream$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$ai (A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ A_stream$ )C_stream_a_stream_c_stream_fun_fun$ )
(declare-fun fun_app$aj (A_stream_c_stream_a_stream_fun_fun$ A_stream$ )C_stream_a_stream_fun$ )
(declare-fun fun_app$ak (C_stream_a_stream_c_stream_a_stream_fun_fun_fun$ C_stream$ )A_stream_c_stream_a_stream_fun_fun$ )
(declare-fun fun_app$al (C_stream_c_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ C_stream$ )C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$am (A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream$ )A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$an (A_stream_a_stream_a_stream_fun_a_stream_a_stream_fun_fun_fun$ A_stream$ )A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun fun_app$ao (A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream$ )A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun fun_app$ap (C_stream_c_stream_a_stream_fun_c_stream_a_stream_fun_fun_fun$ C_stream$ )C_stream_a_stream_fun_c_stream_a_stream_fun_fun$ )
(declare-fun fun_app$aq (B_stream_c_stream_fun_b_stream_b_stream_fun_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ )B_stream_c_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$ar (B_stream_b_stream_fun_b_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$ )B_stream_b_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$as (C_stream_b_stream_fun_b_stream_c_stream_fun_b_stream_b_stream_fun_fun_fun$ C_stream_b_stream_fun$ )B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ )
(declare-fun fun_app$at (C_stream_b_stream_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ C_stream_b_stream_fun$ )B_stream_c_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$au (B_stream_a_stream_fun_b_stream_b_stream_fun_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$av (A_stream_b_stream_fun_b_stream_a_stream_fun_b_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$ )B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ )
(declare-fun fun_app$aw (A_stream_b_stream_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$ )B_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$ax (B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ B_stream_a_stream_fun_b_stream_a_stream_fun_fun$ )B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )
(declare-fun fun_app$ay (A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun$ )B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )
(declare-fun fun_app$az (A_stream_a_stream_fun_b_stream_a_stream_fun_b_stream_a_stream_fun_fun_fun$ A_stream_a_stream_fun$ )B_stream_a_stream_fun_b_stream_a_stream_fun_fun$ )
(declare-fun fun_app$ba (B_stream_c_stream_fun_b_stream_a_stream_fun_fun_b_stream_c_stream_fun_c_stream_b_stream_fun_fun_fun$ B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ )B_stream_c_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bb (C_stream_a_stream_fun_b_stream_c_stream_fun_b_stream_a_stream_fun_fun_fun$ C_stream_a_stream_fun$ )B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ )
(declare-fun fun_app$bc (B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ B_stream_a_stream_fun_b_stream_a_stream_fun_fun$ )B_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bd (B_stream_c_stream_fun_b_stream_b_stream_fun_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ )B_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$be (B_stream_b_stream_fun_b_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$ )B_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bf (C_stream_b_stream_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ C_stream_b_stream_fun$ )B_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bg (B_stream_a_stream_fun_b_stream_b_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bh (A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bi (B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ B_stream_a_stream_fun_b_stream_a_stream_fun_fun$ )B_stream_a_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun fun_app$bj (A_stream_c_stream_fun_b_stream_a_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun$ )B_stream_a_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun fun_app$bk (B_stream_c_stream_fun_b_stream_a_stream_fun_fun_b_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ )B_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bl (B_stream_a_stream_fun_b_stream_a_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_a_stream_fun_b_stream_a_stream_fun_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$bm (B_stream_b_stream_fun_c_stream_b_stream_fun_fun$ B_stream_b_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$bn (B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ B_stream_c_stream_fun$ )B_stream_b_stream_fun$ )
(declare-fun fun_app$bo (B_stream_c_stream_fun_c_stream_b_stream_fun_fun$ B_stream_c_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$bp (B_stream_a_stream_fun_c_stream_b_stream_fun_fun$ B_stream_a_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$bq (B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ B_stream_a_stream_fun$ )C_stream_c_stream_fun$ )
(declare-fun fun_app$br (B_stream_a_stream_fun_b_stream_a_stream_fun_fun$ B_stream_a_stream_fun$ )B_stream_a_stream_fun$ )
(declare-fun fun_app$bs (B_stream_b_stream_fun_a_stream_b_stream_fun_fun$ B_stream_b_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$bt (B_stream_c_stream_fun_a_stream_b_stream_fun_fun$ B_stream_c_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$bu (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ B_stream_a_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$bv (B_stream_a_stream_fun_a_stream_c_stream_fun_fun$ B_stream_a_stream_fun$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$bw (A_stream_b_stream_fun_c_stream_b_stream_fun_fun$ A_stream_b_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$bx (B_stream_b_stream_fun_a_stream_b_stream_fun_c_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$ )A_stream_b_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$by (A_stream_a_stream_fun_c_stream_b_stream_fun_fun$ A_stream_a_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$bz (A_stream_b_stream_fun_a_stream_a_stream_fun_c_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$ )A_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$ca (B_stream_b_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_b_stream_fun$ )A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$cb (A_stream_b_stream_fun_a_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$ )A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun sp_nu_comp$ (B_b_sp_nu$ A_b_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp$a (A_b_sp_nu$ A_a_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp$b (C_b_sp_nu$ A_c_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp$c (B_b_sp_nu$ C_b_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp$d (A_b_sp_nu$ C_a_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp$e (C_b_sp_nu$ C_c_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp$f (B_c_sp_nu$ A_b_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp$g (C_c_sp_nu$ A_c_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp$h (A_c_sp_nu$ A_a_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp$i (C_a_sp_nu$ B_c_sp_nu$ )B_a_sp_nu$ )
(declare-fun sp_nu_comp2$ (C_b_sp_nu$ A_c_sp_nu$ )A_b_sp_nu$ )
(assert (! (not (= (fun_app$ (run_nu$ (sp_nu_comp2$ sp$ sp$a ))s$ )(fun_app$a (run_nu$a sp$ )(fun_app$b (run_nu$b sp$a )s$ )))):named a0 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$c (run_nu$c copy$ )?v0 )?v0 )):named a1 ))
(assert (! (forall ((?v0 C_stream$ ))(= (fun_app$d (run_nu$d copy$a )?v0 )?v0 )):named a2 ))
(assert (! (forall ((?v0 B_stream$ ))(= (fun_app$e (run_nu$e copy$b )?v0 )?v0 )):named a3 ))
(assert (! (forall ((?v0 B_b_sp_nu$ )(?v1 A_b_sp_nu$ ))(= (run_nu$ (sp_nu_comp$ ?v0 ?v1 ))(fun_app$f (comp$ (run_nu$e ?v0 ))(run_nu$ ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_b_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (run_nu$ (sp_nu_comp$a ?v0 ?v1 ))(fun_app$g (comp$a (run_nu$ ?v0 ))(run_nu$c ?v1 )))):named a5 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ ))(= (run_nu$ (sp_nu_comp$b ?v0 ?v1 ))(fun_app$h (comp$b (run_nu$a ?v0 ))(run_nu$b ?v1 )))):named a6 ))
(assert (! (forall ((?v0 B_b_sp_nu$ )(?v1 C_b_sp_nu$ ))(= (run_nu$a (sp_nu_comp$c ?v0 ?v1 ))(fun_app$i (comp$c (run_nu$e ?v0 ))(run_nu$a ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_b_sp_nu$ )(?v1 C_a_sp_nu$ ))(= (run_nu$a (sp_nu_comp$d ?v0 ?v1 ))(fun_app$j (comp$d (run_nu$ ?v0 ))(run_nu$f ?v1 )))):named a8 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_c_sp_nu$ ))(= (run_nu$a (sp_nu_comp$e ?v0 ?v1 ))(fun_app$k (comp$e (run_nu$a ?v0 ))(run_nu$d ?v1 )))):named a9 ))
(assert (! (forall ((?v0 B_c_sp_nu$ )(?v1 A_b_sp_nu$ ))(= (run_nu$b (sp_nu_comp$f ?v0 ?v1 ))(fun_app$l (comp$f (run_nu$g ?v0 ))(run_nu$ ?v1 )))):named a10 ))
(assert (! (forall ((?v0 C_c_sp_nu$ )(?v1 A_c_sp_nu$ ))(= (run_nu$b (sp_nu_comp$g ?v0 ?v1 ))(fun_app$m (comp$g (run_nu$d ?v0 ))(run_nu$b ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (run_nu$b (sp_nu_comp$h ?v0 ?v1 ))(fun_app$n (comp$h (run_nu$b ?v0 ))(run_nu$c ?v1 )))):named a12 ))
(assert (! (forall ((?v0 C_a_sp_nu$ )(?v1 B_c_sp_nu$ ))(= (run_nu$h (sp_nu_comp$i ?v0 ?v1 ))(fun_app$o (comp$i (run_nu$f ?v0 ))(run_nu$g ?v1 )))):named a13 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ ))(! (= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$b (fun_app$n (comp$h ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$n (comp$h ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ ))(! (= (fun_app$a (fun_app$j (comp$d ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$p ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$j (comp$d ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$ (fun_app$g (comp$a ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$g (comp$a ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$m (comp$g ?v0 )(fun_app$n (comp$h ?v1 )?v2 ))(fun_app$n (comp$h (fun_app$m (comp$g ?v0 )?v1 ))?v2 ))):named a19 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$h (comp$b ?v0 )(fun_app$n (comp$h ?v1 )?v2 ))(fun_app$g (comp$a (fun_app$h (comp$b ?v0 )?v1 ))?v2 ))):named a20 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$l (comp$f ?v0 )(fun_app$g (comp$a ?v1 )?v2 ))(fun_app$n (comp$h (fun_app$l (comp$f ?v0 )?v1 ))?v2 ))):named a21 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_c_stream_fun$ ))(= (fun_app$i (comp$c ?v0 )(fun_app$k (comp$e ?v1 )?v2 ))(fun_app$k (comp$e (fun_app$i (comp$c ?v0 )?v1 ))?v2 ))):named a22 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ ))(= (fun_app$i (comp$c ?v0 )(fun_app$i (comp$c ?v1 )?v2 ))(fun_app$i (comp$c (fun_app$q (comp$j ?v0 )?v1 ))?v2 ))):named a23 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ ))(= (fun_app$i (comp$c ?v0 )(fun_app$j (comp$d ?v1 )?v2 ))(fun_app$j (comp$d (fun_app$f (comp$ ?v0 )?v1 ))?v2 ))):named a24 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$f (comp$ ?v0 )(fun_app$h (comp$b ?v1 )?v2 ))(fun_app$h (comp$b (fun_app$i (comp$c ?v0 )?v1 ))?v2 ))):named a25 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$f (comp$ ?v0 )(fun_app$f (comp$ ?v1 )?v2 ))(fun_app$f (comp$ (fun_app$q (comp$j ?v0 )?v1 ))?v2 ))):named a26 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$f (comp$ ?v0 )(fun_app$g (comp$a ?v1 )?v2 ))(fun_app$g (comp$a (fun_app$f (comp$ ?v0 )?v1 ))?v2 ))):named a27 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$n (comp$h ?v0 )(fun_app$r (comp$k ?v1 )?v2 ))(fun_app$n (comp$h (fun_app$n (comp$h ?v0 )?v1 ))?v2 ))):named a28 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_c_stream_fun$ ))(= (fun_app$k (comp$e (fun_app$i (comp$c ?v0 )?v1 ))?v2 )(fun_app$i (comp$c ?v0 )(fun_app$k (comp$e ?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$h (comp$b (fun_app$i (comp$c ?v0 )?v1 ))?v2 )(fun_app$f (comp$ ?v0 )(fun_app$h (comp$b ?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_c_stream_fun$ ))(= (fun_app$k (comp$e (fun_app$j (comp$d ?v0 )?v1 ))?v2 )(fun_app$j (comp$d ?v0 )(fun_app$s (comp$l ?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$h (comp$b (fun_app$j (comp$d ?v0 )?v1 ))?v2 )(fun_app$g (comp$a ?v0 )(fun_app$t (comp$m ?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ ))(= (fun_app$i (comp$c (fun_app$q (comp$j ?v0 )?v1 ))?v2 )(fun_app$i (comp$c ?v0 )(fun_app$i (comp$c ?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 C_stream_b_stream_fun$ ))(= (fun_app$i (comp$c (fun_app$u (comp$n ?v0 )?v1 ))?v2 )(fun_app$j (comp$d ?v0 )(fun_app$v (comp$o ?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$f (comp$ (fun_app$q (comp$j ?v0 )?v1 ))?v2 )(fun_app$f (comp$ ?v0 )(fun_app$f (comp$ ?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$f (comp$ (fun_app$u (comp$n ?v0 )?v1 ))?v2 )(fun_app$g (comp$a ?v0 )(fun_app$w (comp$p ?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$n (comp$h (fun_app$m (comp$g ?v0 )?v1 ))?v2 )(fun_app$m (comp$g ?v0 )(fun_app$n (comp$h ?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$n (comp$h (fun_app$l (comp$f ?v0 )?v1 ))?v2 )(fun_app$l (comp$f ?v0 )(fun_app$g (comp$a ?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ ))(! (= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$b (fun_app$n (comp$h ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$n (comp$h ?v0 )?v1 )?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ ))(! (= (fun_app$a (fun_app$j (comp$d ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$p ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$j (comp$d ?v0 )?v1 )?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$ (fun_app$g (comp$a ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$g (comp$a ?v0 )?v1 )?v2 )))):named a43 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$i (comp$c ?v0 )?v1 )(fun_app$i (comp$c ?v2 )?v3 ))(=> (forall ((?v4 C_stream$ ))(= (fun_app$e ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$a ?v3 ?v4 ))))false ))false )):named a44 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(=> (and (= (fun_app$i (comp$c ?v0 )?v1 )(fun_app$j (comp$d ?v2 )?v3 ))(=> (forall ((?v4 C_stream$ ))(= (fun_app$e ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$p ?v3 ?v4 ))))false ))false )):named a45 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$f (comp$ ?v0 )?v1 )(fun_app$f (comp$ ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$e ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a46 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$f (comp$ ?v0 )?v1 )(fun_app$g (comp$a ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$e ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))false ))false )):named a47 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$n (comp$h ?v0 )?v1 )(fun_app$n (comp$h ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$b ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$b ?v2 (fun_app$c ?v3 ?v4 ))))false ))false )):named a48 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$j (comp$d ?v0 )?v1 )(fun_app$i (comp$c ?v2 )?v3 ))(=> (forall ((?v4 C_stream$ ))(= (fun_app$ ?v0 (fun_app$p ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$a ?v3 ?v4 ))))false ))false )):named a49 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(=> (and (= (fun_app$j (comp$d ?v0 )?v1 )(fun_app$j (comp$d ?v2 )?v3 ))(=> (forall ((?v4 C_stream$ ))(= (fun_app$ ?v0 (fun_app$p ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$p ?v3 ?v4 ))))false ))false )):named a50 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$g (comp$a ?v0 )?v1 )(fun_app$f (comp$ ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a51 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$g (comp$a ?v0 )?v1 )(fun_app$g (comp$a ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))false ))false )):named a52 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 B_stream_a_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (and (= (fun_app$s (comp$l ?v0 )?v1 )(fun_app$v (comp$o ?v2 )?v3 ))(= (fun_app$u (comp$n ?v4 )?v2 )?v5 ))(= (fun_app$k (comp$e (fun_app$j (comp$d ?v4 )?v0 ))?v1 )(fun_app$i (comp$c ?v5 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (and (= (fun_app$t (comp$m ?v0 )?v1 )(fun_app$w (comp$p ?v2 )?v3 ))(= (fun_app$u (comp$n ?v4 )?v2 )?v5 ))(= (fun_app$h (comp$b (fun_app$j (comp$d ?v4 )?v0 ))?v1 )(fun_app$f (comp$ ?v5 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 B_stream_a_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (and (= (fun_app$x (comp$q ?v0 )?v1 )(fun_app$v (comp$o ?v2 )?v3 ))(= (fun_app$u (comp$n ?v4 )?v2 )?v5 ))(= (fun_app$j (comp$d (fun_app$g (comp$a ?v4 )?v0 ))?v1 )(fun_app$i (comp$c ?v5 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 B_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (and (= (fun_app$r (comp$k ?v0 )?v1 )(fun_app$w (comp$p ?v2 )?v3 ))(= (fun_app$u (comp$n ?v4 )?v2 )?v5 ))(= (fun_app$g (comp$a (fun_app$g (comp$a ?v4 )?v0 ))?v1 )(fun_app$f (comp$ ?v5 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$r (comp$k ?v0 )?v1 )(fun_app$r (comp$k ?v2 )?v3 ))(= (fun_app$n (comp$h ?v4 )?v2 )?v5 ))(= (fun_app$n (comp$h (fun_app$n (comp$h ?v4 )?v0 ))?v1 )(fun_app$n (comp$h ?v5 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 C_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$v (comp$o ?v0 )?v1 )(fun_app$s (comp$l ?v2 )?v3 ))(= (fun_app$j (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$i (comp$c (fun_app$u (comp$n ?v4 )?v0 ))?v1 )(fun_app$k (comp$e ?v5 )?v3 )))):named a58 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$w (comp$p ?v0 )?v1 )(fun_app$t (comp$m ?v2 )?v3 ))(= (fun_app$j (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$f (comp$ (fun_app$u (comp$n ?v4 )?v0 ))?v1 )(fun_app$h (comp$b ?v5 )?v3 )))):named a59 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 C_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$x (comp$q ?v0 )?v1 )(fun_app$s (comp$l ?v2 )?v3 ))(= (fun_app$j (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$j (comp$d (fun_app$g (comp$a ?v4 )?v0 ))?v1 )(fun_app$k (comp$e ?v5 )?v3 )))):named a60 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$r (comp$k ?v0 )?v1 )(fun_app$t (comp$m ?v2 )?v3 ))(= (fun_app$j (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$g (comp$a (fun_app$g (comp$a ?v4 )?v0 ))?v1 )(fun_app$h (comp$b ?v5 )?v3 )))):named a61 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$s (comp$l ?v0 )?v1 )(fun_app$x (comp$q ?v2 )?v3 ))(= (fun_app$g (comp$a ?v4 )?v2 )?v5 ))(= (fun_app$k (comp$e (fun_app$j (comp$d ?v4 )?v0 ))?v1 )(fun_app$j (comp$d ?v5 )?v3 )))):named a62 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 B_stream_a_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$y (comp$r ?v0 )?v1 )(fun_app$z (comp$s ?v2 )?v3 ))(= (fun_app$w (comp$p ?v3 )?v4 )?v5 ))(= (fun_app$l (comp$f ?v0 )(fun_app$f (comp$ ?v1 )?v4 ))(fun_app$n (comp$h ?v2 )?v5 )))):named a63 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 B_stream_a_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 C_stream_a_stream_fun$ ))(=> (and (= (fun_app$q (comp$j ?v0 )?v1 )(fun_app$u (comp$n ?v2 )?v3 ))(= (fun_app$v (comp$o ?v3 )?v4 )?v5 ))(= (fun_app$i (comp$c ?v0 )(fun_app$i (comp$c ?v1 )?v4 ))(fun_app$j (comp$d ?v2 )?v5 )))):named a64 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 B_stream_a_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$q (comp$j ?v0 )?v1 )(fun_app$u (comp$n ?v2 )?v3 ))(= (fun_app$w (comp$p ?v3 )?v4 )?v5 ))(= (fun_app$f (comp$ ?v0 )(fun_app$f (comp$ ?v1 )?v4 ))(fun_app$g (comp$a ?v2 )?v5 )))):named a65 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$q (comp$j ?v0 )?v1 )(fun_app$q (comp$j ?v2 )?v3 ))(= (fun_app$i (comp$c ?v3 )?v4 )?v5 ))(= (fun_app$i (comp$c ?v0 )(fun_app$i (comp$c ?v1 )?v4 ))(fun_app$i (comp$c ?v2 )?v5 )))):named a66 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$u (comp$n ?v0 )?v1 )(fun_app$q (comp$j ?v2 )?v3 ))(= (fun_app$i (comp$c ?v3 )?v4 )?v5 ))(= (fun_app$j (comp$d ?v0 )(fun_app$v (comp$o ?v1 )?v4 ))(fun_app$i (comp$c ?v2 )?v5 )))):named a67 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$q (comp$j ?v0 )?v1 )(fun_app$q (comp$j ?v2 )?v3 ))(= (fun_app$f (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$f (comp$ ?v0 )(fun_app$f (comp$ ?v1 )?v4 ))(fun_app$f (comp$ ?v2 )?v5 )))):named a68 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 B_stream_c_stream_fun$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$z (comp$s ?v0 )?v1 )(fun_app$y (comp$r ?v2 )?v3 ))(= (fun_app$f (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$n (comp$h ?v0 )(fun_app$w (comp$p ?v1 )?v4 ))(fun_app$l (comp$f ?v2 )?v5 )))):named a69 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$u (comp$n ?v0 )?v1 )(fun_app$q (comp$j ?v2 )?v3 ))(= (fun_app$f (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$g (comp$a ?v0 )(fun_app$w (comp$p ?v1 )?v4 ))(fun_app$f (comp$ ?v2 )?v5 )))):named a70 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$h (comp$b ?v0 )?v1 )(fun_app$f (comp$ ?v2 )?v3 ))(= (fun_app$g (comp$a ?v3 )?v4 )?v5 ))(= (fun_app$h (comp$b ?v0 )(fun_app$n (comp$h ?v1 )?v4 ))(fun_app$f (comp$ ?v2 )?v5 )))):named a71 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$m (comp$g ?v0 )?v1 )(fun_app$n (comp$h ?v2 )?v3 ))(= (fun_app$r (comp$k ?v3 )?v4 )?v5 ))(= (fun_app$m (comp$g ?v0 )(fun_app$n (comp$h ?v1 )?v4 ))(fun_app$n (comp$h ?v2 )?v5 )))):named a72 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 C_stream$ ))(=> (= (fun_app$i (comp$c ?v0 )?v1 )(fun_app$i (comp$c ?v2 )?v3 ))(= (fun_app$e ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$a ?v3 ?v4 ))))):named a73 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 C_stream$ ))(=> (= (fun_app$i (comp$c ?v0 )?v1 )(fun_app$j (comp$d ?v2 )?v3 ))(= (fun_app$e ?v0 (fun_app$a ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$p ?v3 ?v4 ))))):named a74 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$f (comp$ ?v0 )?v1 )(fun_app$f (comp$ ?v2 )?v3 ))(= (fun_app$e ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$ ?v3 ?v4 ))))):named a75 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$f (comp$ ?v0 )?v1 )(fun_app$g (comp$a ?v2 )?v3 ))(= (fun_app$e ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))):named a76 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$n (comp$h ?v0 )?v1 )(fun_app$n (comp$h ?v2 )?v3 ))(= (fun_app$b ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$b ?v2 (fun_app$c ?v3 ?v4 ))))):named a77 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 C_stream$ ))(=> (= (fun_app$j (comp$d ?v0 )?v1 )(fun_app$i (comp$c ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$p ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$a ?v3 ?v4 ))))):named a78 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 C_stream$ ))(=> (= (fun_app$j (comp$d ?v0 )?v1 )(fun_app$j (comp$d ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$p ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$p ?v3 ?v4 ))))):named a79 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$g (comp$a ?v0 )?v1 )(fun_app$f (comp$ ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$ ?v3 ?v4 ))))):named a80 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$g (comp$a ?v0 )?v1 )(fun_app$g (comp$a ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$c ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$c ?v3 ?v4 ))))):named a81 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ ))(=> (= (fun_app$k (comp$e ?v0 )?v1 )?v2 )(= (fun_app$k (comp$e (fun_app$i (comp$c ?v3 )?v0 ))?v1 )(fun_app$i (comp$c ?v3 )?v2 )))):named a82 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ ))(=> (= (fun_app$h (comp$b ?v0 )?v1 )?v2 )(= (fun_app$h (comp$b (fun_app$i (comp$c ?v3 )?v0 ))?v1 )(fun_app$f (comp$ ?v3 )?v2 )))):named a83 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$s (comp$l ?v0 )?v1 )?v2 )(= (fun_app$k (comp$e (fun_app$j (comp$d ?v3 )?v0 ))?v1 )(fun_app$j (comp$d ?v3 )?v2 )))):named a84 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$t (comp$m ?v0 )?v1 )?v2 )(= (fun_app$h (comp$b (fun_app$j (comp$d ?v3 )?v0 ))?v1 )(fun_app$g (comp$a ?v3 )?v2 )))):named a85 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$v (comp$o ?v0 )?v1 )?v2 )(= (fun_app$i (comp$c (fun_app$u (comp$n ?v3 )?v0 ))?v1 )(fun_app$j (comp$d ?v3 )?v2 )))):named a86 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$w (comp$p ?v0 )?v1 )?v2 )(= (fun_app$f (comp$ (fun_app$u (comp$n ?v3 )?v0 ))?v1 )(fun_app$g (comp$a ?v3 )?v2 )))):named a87 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (= (fun_app$r (comp$k ?v0 )?v1 )?v2 )(= (fun_app$n (comp$h (fun_app$n (comp$h ?v3 )?v0 ))?v1 )(fun_app$n (comp$h ?v3 )?v2 )))):named a88 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$x (comp$q ?v0 )?v1 )?v2 )(= (fun_app$j (comp$d (fun_app$g (comp$a ?v3 )?v0 ))?v1 )(fun_app$j (comp$d ?v3 )?v2 )))):named a89 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$r (comp$k ?v0 )?v1 )?v2 )(= (fun_app$g (comp$a (fun_app$g (comp$a ?v3 )?v0 ))?v1 )(fun_app$g (comp$a ?v3 )?v2 )))):named a90 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ ))(=> (= (fun_app$i (comp$c ?v0 )?v1 )?v2 )(= (fun_app$i (comp$c (fun_app$q (comp$j ?v3 )?v0 ))?v1 )(fun_app$i (comp$c ?v3 )?v2 )))):named a91 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (= (fun_app$m (comp$g ?v0 )?v1 )?v2 )(= (fun_app$m (comp$g ?v0 )(fun_app$n (comp$h ?v1 )?v3 ))(fun_app$n (comp$h ?v2 )?v3 )))):named a92 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (= (fun_app$h (comp$b ?v0 )?v1 )?v2 )(= (fun_app$h (comp$b ?v0 )(fun_app$n (comp$h ?v1 )?v3 ))(fun_app$g (comp$a ?v2 )?v3 )))):named a93 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (= (fun_app$l (comp$f ?v0 )?v1 )?v2 )(= (fun_app$l (comp$f ?v0 )(fun_app$g (comp$a ?v1 )?v3 ))(fun_app$n (comp$h ?v2 )?v3 )))):named a94 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (= (fun_app$q (comp$j ?v0 )?v1 )?v2 )(= (fun_app$i (comp$c ?v0 )(fun_app$i (comp$c ?v1 )?v3 ))(fun_app$i (comp$c ?v2 )?v3 )))):named a95 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$q (comp$j ?v0 )?v1 )?v2 )(= (fun_app$f (comp$ ?v0 )(fun_app$f (comp$ ?v1 )?v3 ))(fun_app$f (comp$ ?v2 )?v3 )))):named a96 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (= (fun_app$u (comp$n ?v0 )?v1 )?v2 )(= (fun_app$j (comp$d ?v0 )(fun_app$v (comp$o ?v1 )?v3 ))(fun_app$i (comp$c ?v2 )?v3 )))):named a97 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$u (comp$n ?v0 )?v1 )?v2 )(= (fun_app$g (comp$a ?v0 )(fun_app$w (comp$p ?v1 )?v3 ))(fun_app$f (comp$ ?v2 )?v3 )))):named a98 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 C_stream_c_stream_fun$ ))(=> (= (fun_app$i (comp$c ?v0 )?v1 )?v2 )(= (fun_app$i (comp$c ?v0 )(fun_app$k (comp$e ?v1 )?v3 ))(fun_app$k (comp$e ?v2 )?v3 )))):named a99 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (= (fun_app$i (comp$c ?v0 )?v1 )?v2 )(= (fun_app$f (comp$ ?v0 )(fun_app$h (comp$b ?v1 )?v3 ))(fun_app$h (comp$b ?v2 )?v3 )))):named a100 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(=> (= (fun_app$f (comp$ ?v0 )?v1 )?v2 )(= (fun_app$i (comp$c ?v0 )(fun_app$j (comp$d ?v1 )?v3 ))(fun_app$j (comp$d ?v2 )?v3 )))):named a101 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 C_stream$ ))(=> (= (fun_app$i (comp$c ?v0 )?v1 )?v2 )(= (fun_app$e ?v0 (fun_app$a ?v1 ?v3 ))(fun_app$a ?v2 ?v3 )))):named a102 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$f (comp$ ?v0 )?v1 )?v2 )(= (fun_app$e ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))):named a103 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$n (comp$h ?v0 )?v1 )?v2 )(= (fun_app$b ?v0 (fun_app$c ?v1 ?v3 ))(fun_app$b ?v2 ?v3 )))):named a104 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 C_stream$ ))(=> (= (fun_app$j (comp$d ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$p ?v1 ?v3 ))(fun_app$a ?v2 ?v3 )))):named a105 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$g (comp$a ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$c ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))):named a106 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (= (fun_app$a ?v0 (fun_app$d ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$a ?v4 ?v2 )))(= (fun_app$a (fun_app$k (comp$e (fun_app$i (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$a (fun_app$i (comp$c (fun_app$q (comp$j ?v5 )?v3 ))?v4 )?v2 )))):named a107 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (= (fun_app$a ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$h (comp$b (fun_app$i (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$f (comp$ (fun_app$q (comp$j ?v5 )?v3 ))?v4 )?v2 )))):named a108 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (= (fun_app$a ?v0 (fun_app$d ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$p ?v4 ?v2 )))(= (fun_app$a (fun_app$k (comp$e (fun_app$i (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$a (fun_app$j (comp$d (fun_app$f (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a109 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (= (fun_app$a ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$ (fun_app$h (comp$b (fun_app$i (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$g (comp$a (fun_app$f (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a110 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream_a_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$p ?v0 (fun_app$d ?v1 ?v2 ))(fun_app$aa ?v3 (fun_app$a ?v4 ?v2 )))(= (fun_app$a (fun_app$k (comp$e (fun_app$j (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$a (fun_app$i (comp$c (fun_app$u (comp$n ?v5 )?v3 ))?v4 )?v2 )))):named a111 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_a_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$p ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$aa ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$h (comp$b (fun_app$j (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$f (comp$ (fun_app$u (comp$n ?v5 )?v3 ))?v4 )?v2 )))):named a112 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_a_stream_fun$ )(?v4 C_stream_a_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$p ?v0 (fun_app$d ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$p ?v4 ?v2 )))(= (fun_app$a (fun_app$k (comp$e (fun_app$j (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$a (fun_app$j (comp$d (fun_app$g (comp$a ?v5 )?v3 ))?v4 )?v2 )))):named a113 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$p ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$c ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$ (fun_app$h (comp$b (fun_app$j (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$g (comp$a (fun_app$g (comp$a ?v5 )?v3 ))?v4 )?v2 )))):named a114 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 C_stream_b_stream_fun$ )(?v4 C_stream_c_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$a ?v3 (fun_app$d ?v4 ?v2 )))(= (fun_app$a (fun_app$i (comp$c (fun_app$q (comp$j ?v5 )?v0 ))?v1 )?v2 )(fun_app$a (fun_app$k (comp$e (fun_app$i (comp$c ?v5 )?v3 ))?v4 )?v2 )))):named a115 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 C_stream_a_stream_fun$ )(?v4 C_stream_c_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$aa ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$p ?v3 (fun_app$d ?v4 ?v2 )))(= (fun_app$a (fun_app$i (comp$c (fun_app$u (comp$n ?v5 )?v0 ))?v1 )?v2 )(fun_app$a (fun_app$k (comp$e (fun_app$j (comp$d ?v5 )?v3 ))?v4 )?v2 )))):named a116 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 C_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$a ?v4 ?v5 )))(= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$a (fun_app$i (comp$c ?v3 )?v4 )?v5 )))):named a117 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$ (fun_app$f (comp$ ?v3 )?v4 )?v5 )))):named a118 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ )(?v5 C_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$p ?v4 ?v5 )))(= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$a (fun_app$j (comp$d ?v3 )?v4 )?v5 )))):named a119 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v5 )))(= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g (comp$a ?v3 )?v4 )?v5 )))):named a120 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 C_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$a ?v4 ?v5 )))(= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$i (comp$c ?v3 )?v4 )?v5 )))):named a121 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$f (comp$ ?v3 )?v4 )?v5 )))):named a122 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ )(?v5 C_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$p ?v4 ?v5 )))(= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$j (comp$d ?v3 )?v4 )?v5 )))):named a123 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v5 )))(= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g (comp$a ?v3 )?v4 )?v5 )))):named a124 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$b ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$b ?v3 (fun_app$c ?v4 ?v5 )))(= (fun_app$b (fun_app$n (comp$h ?v0 )?v1 )?v2 )(fun_app$b (fun_app$n (comp$h ?v3 )?v4 )?v5 )))):named a125 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 C_stream$ ))(=> (= (fun_app$ ?v0 (fun_app$p ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$a ?v4 ?v5 )))(= (fun_app$a (fun_app$j (comp$d ?v0 )?v1 )?v2 )(fun_app$a (fun_app$i (comp$c ?v3 )?v4 )?v5 )))):named a126 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$a ?v4 ?v2 )))(= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$a (fun_app$i (comp$c ?v3 )?v4 )?v2 )))):named a127 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$a ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$p ?v4 ?v2 )))(= (fun_app$a (fun_app$i (comp$c ?v0 )?v1 )?v2 )(fun_app$a (fun_app$j (comp$d ?v3 )?v4 )?v2 )))):named a128 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$f (comp$ ?v3 )?v4 )?v2 )))):named a129 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$ (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g (comp$a ?v3 )?v4 )?v2 )))):named a130 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_a_stream_fun$ ))(=> (= (fun_app$b ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$b ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$b (fun_app$n (comp$h ?v0 )?v1 )?v2 )(fun_app$b (fun_app$n (comp$h ?v3 )?v4 )?v2 )))):named a131 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 C_stream_b_stream_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$p ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$a ?v4 ?v2 )))(= (fun_app$a (fun_app$j (comp$d ?v0 )?v1 )?v2 )(fun_app$a (fun_app$i (comp$c ?v3 )?v4 )?v2 )))):named a132 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$p ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$p ?v4 ?v2 )))(= (fun_app$a (fun_app$j (comp$d ?v0 )?v1 )?v2 )(fun_app$a (fun_app$j (comp$d ?v3 )?v4 )?v2 )))):named a133 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$g (comp$a ?v0 )?v1 )?v2 )(fun_app$ (fun_app$f (comp$ ?v3 )?v4 )?v2 )))):named a134 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$c ?v4 ?v2 )))(= (fun_app$ (fun_app$g (comp$a ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g (comp$a ?v3 )?v4 )?v2 )))):named a135 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ ))(= (comp$t (convol$ ?v0 ?v1 )?v2 )(convol$a (fun_app$i (comp$c ?v0 )?v2 )(fun_app$i (comp$c ?v1 )?v2 )))):named a136 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (comp$u (convol$ ?v0 ?v1 )?v2 )(convol$b (fun_app$f (comp$ ?v0 )?v2 )(fun_app$f (comp$ ?v1 )?v2 )))):named a137 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$v (convol$c ?v0 ?v1 )?v2 )(convol$c (fun_app$n (comp$h ?v0 )?v2 )(fun_app$n (comp$h ?v1 )?v2 )))):named a138 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$w (convol$d ?v0 ?v1 )?v2 )(convol$d (fun_app$n (comp$h ?v0 )?v2 )(fun_app$g (comp$a ?v1 )?v2 )))):named a139 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ ))(= (comp$x (convol$b ?v0 ?v1 )?v2 )(convol$a (fun_app$j (comp$d ?v0 )?v2 )(fun_app$j (comp$d ?v1 )?v2 )))):named a140 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$y (convol$e ?v0 ?v1 )?v2 )(convol$e (fun_app$g (comp$a ?v0 )?v2 )(fun_app$n (comp$h ?v1 )?v2 )))):named a141 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$z (convol$b ?v0 ?v1 )?v2 )(convol$b (fun_app$g (comp$a ?v0 )?v2 )(fun_app$g (comp$a ?v1 )?v2 )))):named a142 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream$ )(?v3 B_stream$ ))(= (fun_app$i (comp$c ?v0 )(fun_app$ab (fun_app$ac (fun_upd$ ?v1 )?v2 )?v3 ))(fun_app$ab (fun_app$ac (fun_upd$ (fun_app$i (comp$c ?v0 )?v1 ))?v2 )(fun_app$e ?v0 ?v3 )))):named a143 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream$ ))(= (fun_app$f (comp$ ?v0 )(fun_app$ad (fun_app$ae (fun_upd$a ?v1 )?v2 )?v3 ))(fun_app$ad (fun_app$ae (fun_upd$a (fun_app$f (comp$ ?v0 )?v1 ))?v2 )(fun_app$e ?v0 ?v3 )))):named a144 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (fun_app$n (comp$h ?v0 )(fun_app$af (fun_app$ag (fun_upd$b ?v1 )?v2 )?v3 ))(fun_app$ah (fun_app$ai (fun_upd$c (fun_app$n (comp$h ?v0 )?v1 ))?v2 )(fun_app$b ?v0 ?v3 )))):named a145 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream$ ))(= (fun_app$j (comp$d ?v0 )(fun_app$aj (fun_app$ak (fun_upd$d ?v1 )?v2 )?v3 ))(fun_app$ab (fun_app$ac (fun_upd$ (fun_app$j (comp$d ?v0 )?v1 ))?v2 )(fun_app$ ?v0 ?v3 )))):named a146 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (fun_app$g (comp$a ?v0 )(fun_app$af (fun_app$ag (fun_upd$b ?v1 )?v2 )?v3 ))(fun_app$ad (fun_app$ae (fun_upd$a (fun_app$g (comp$a ?v0 )?v1 ))?v2 )(fun_app$ ?v0 ?v3 )))):named a147 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream$ )(?v2 C_stream$ )(?v3 C_stream_b_stream_fun$ ))(= (fun_app$i (comp$c ?v0 )(fun_app$i (fun_app$al (swap$ ?v1 )?v2 )?v3 ))(fun_app$i (fun_app$al (swap$ ?v1 )?v2 )(fun_app$i (comp$c ?v0 )?v3 )))):named a148 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ ))(= (fun_app$f (comp$ ?v0 )(fun_app$f (fun_app$am (swap$a ?v1 )?v2 )?v3 ))(fun_app$f (fun_app$am (swap$a ?v1 )?v2 )(fun_app$f (comp$ ?v0 )?v3 )))):named a149 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_a_stream_fun$ ))(= (fun_app$n (comp$h ?v0 )(fun_app$r (fun_app$an (swap$b ?v1 )?v2 )?v3 ))(fun_app$m (fun_app$ao (swap$c ?v1 )?v2 )(fun_app$n (comp$h ?v0 )?v3 )))):named a150 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream$ )(?v2 C_stream$ )(?v3 C_stream_a_stream_fun$ ))(= (fun_app$j (comp$d ?v0 )(fun_app$x (fun_app$ap (swap$d ?v1 )?v2 )?v3 ))(fun_app$i (fun_app$al (swap$ ?v1 )?v2 )(fun_app$j (comp$d ?v0 )?v3 )))):named a151 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_a_stream_fun$ ))(= (fun_app$g (comp$a ?v0 )(fun_app$r (fun_app$an (swap$b ?v1 )?v2 )?v3 ))(fun_app$f (fun_app$am (swap$a ?v1 )?v2 )(fun_app$g (comp$a ?v0 )?v3 )))):named a152 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(= (fun_app$aq (comp$aa (fun_app$ar (map_fun$ ?v0 )?v1 ))(fun_app$as (map_fun$a ?v2 )?v3 ))(fun_app$at (map_fun$b (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$i (comp$c ?v1 )?v3 )))):named a153 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(= (fun_app$au (comp$ab (fun_app$ar (map_fun$ ?v0 )?v1 ))(fun_app$av (map_fun$c ?v2 )?v3 ))(fun_app$aw (map_fun$d (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$f (comp$ ?v1 )?v3 )))):named a154 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(= (fun_app$ax (comp$ac (fun_app$ay (map_fun$e ?v0 )?v1 ))(fun_app$az (map_fun$f ?v2 )?v3 ))(fun_app$ay (map_fun$e (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$n (comp$h ?v1 )?v3 )))):named a155 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(= (fun_app$ba (comp$ad (fun_app$aw (map_fun$d ?v0 )?v1 ))(fun_app$bb (map_fun$g ?v2 )?v3 ))(fun_app$at (map_fun$b (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$j (comp$d ?v1 )?v3 )))):named a156 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(= (fun_app$bc (comp$ae (fun_app$aw (map_fun$d ?v0 )?v1 ))(fun_app$az (map_fun$f ?v2 )?v3 ))(fun_app$aw (map_fun$d (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$g (comp$a ?v1 )?v3 )))):named a157 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(= (fun_app$bd (comp$af (fun_app$be (map_fun$h ?v0 )?v1 ))(fun_app$as (map_fun$a ?v2 )?v3 ))(fun_app$bf (map_fun$i (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$i (comp$c ?v1 )?v3 )))):named a158 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(= (fun_app$bg (comp$ag (fun_app$be (map_fun$h ?v0 )?v1 ))(fun_app$av (map_fun$c ?v2 )?v3 ))(fun_app$bh (map_fun$j (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$f (comp$ ?v1 )?v3 )))):named a159 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(= (fun_app$bi (comp$ah (fun_app$bj (map_fun$k ?v0 )?v1 ))(fun_app$az (map_fun$f ?v2 )?v3 ))(fun_app$bj (map_fun$k (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$n (comp$h ?v1 )?v3 )))):named a160 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(= (fun_app$bk (comp$ai (fun_app$bh (map_fun$j ?v0 )?v1 ))(fun_app$bb (map_fun$g ?v2 )?v3 ))(fun_app$bf (map_fun$i (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$j (comp$d ?v1 )?v3 )))):named a161 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(= (fun_app$bl (comp$aj (fun_app$bh (map_fun$j ?v0 )?v1 ))(fun_app$az (map_fun$f ?v2 )?v3 ))(fun_app$bh (map_fun$j (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$g (comp$a ?v1 )?v3 )))):named a162 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 B_stream_c_stream_fun$ ))(= (fun_app$bm (fun_app$ar (map_fun$ ?v0 )?v1 )(fun_app$bn (fun_app$as (map_fun$a ?v2 )?v3 )?v4 ))(fun_app$bo (fun_app$at (map_fun$b (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$i (comp$c ?v1 )?v3 ))?v4 ))):named a163 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 B_stream_a_stream_fun$ ))(= (fun_app$bm (fun_app$ar (map_fun$ ?v0 )?v1 )(fun_app$u (fun_app$av (map_fun$c ?v2 )?v3 )?v4 ))(fun_app$bp (fun_app$aw (map_fun$d (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$f (comp$ ?v1 )?v3 ))?v4 ))):named a164 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 B_stream_a_stream_fun$ ))(= (fun_app$bq (fun_app$ay (map_fun$e ?v0 )?v1 )(fun_app$br (fun_app$az (map_fun$f ?v2 )?v3 )?v4 ))(fun_app$bq (fun_app$ay (map_fun$e (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$n (comp$h ?v1 )?v3 ))?v4 ))):named a165 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 B_stream_c_stream_fun$ ))(= (fun_app$bp (fun_app$aw (map_fun$d ?v0 )?v1 )(fun_app$o (fun_app$bb (map_fun$g ?v2 )?v3 )?v4 ))(fun_app$bo (fun_app$at (map_fun$b (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$j (comp$d ?v1 )?v3 ))?v4 ))):named a166 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 B_stream_a_stream_fun$ ))(= (fun_app$bp (fun_app$aw (map_fun$d ?v0 )?v1 )(fun_app$br (fun_app$az (map_fun$f ?v2 )?v3 )?v4 ))(fun_app$bp (fun_app$aw (map_fun$d (fun_app$i (comp$c ?v2 )?v0 ))(fun_app$g (comp$a ?v1 )?v3 ))?v4 ))):named a167 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 B_stream_c_stream_fun$ ))(= (fun_app$bs (fun_app$be (map_fun$h ?v0 )?v1 )(fun_app$bn (fun_app$as (map_fun$a ?v2 )?v3 )?v4 ))(fun_app$bt (fun_app$bf (map_fun$i (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$i (comp$c ?v1 )?v3 ))?v4 ))):named a168 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 B_stream_a_stream_fun$ ))(= (fun_app$bs (fun_app$be (map_fun$h ?v0 )?v1 )(fun_app$u (fun_app$av (map_fun$c ?v2 )?v3 )?v4 ))(fun_app$bu (fun_app$bh (map_fun$j (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$f (comp$ ?v1 )?v3 ))?v4 ))):named a169 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 B_stream_a_stream_fun$ ))(= (fun_app$bv (fun_app$bj (map_fun$k ?v0 )?v1 )(fun_app$br (fun_app$az (map_fun$f ?v2 )?v3 )?v4 ))(fun_app$bv (fun_app$bj (map_fun$k (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$n (comp$h ?v1 )?v3 ))?v4 ))):named a170 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 B_stream_c_stream_fun$ ))(= (fun_app$bu (fun_app$bh (map_fun$j ?v0 )?v1 )(fun_app$o (fun_app$bb (map_fun$g ?v2 )?v3 )?v4 ))(fun_app$bt (fun_app$bf (map_fun$i (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$j (comp$d ?v1 )?v3 ))?v4 ))):named a171 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 B_stream_a_stream_fun$ ))(= (fun_app$bu (fun_app$bh (map_fun$j ?v0 )?v1 )(fun_app$br (fun_app$az (map_fun$f ?v2 )?v3 )?v4 ))(fun_app$bu (fun_app$bh (map_fun$j (fun_app$f (comp$ ?v2 )?v0 ))(fun_app$g (comp$a ?v1 )?v3 ))?v4 ))):named a172 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(! (= (fun_app$bw (fun_app$bx (map_fun$l ?v0 )?v1 )?v2 )(fun_app$j (comp$d (fun_app$f (comp$ ?v1 )?v2 ))?v0 )):pattern ((fun_app$bw (fun_app$bx (map_fun$l ?v0 )?v1 )?v2 )))):named a173 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(! (= (fun_app$by (fun_app$bz (map_fun$m ?v0 )?v1 )?v2 )(fun_app$j (comp$d (fun_app$g (comp$a ?v1 )?v2 ))?v0 )):pattern ((fun_app$by (fun_app$bz (map_fun$m ?v0 )?v1 )?v2 )))):named a174 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(! (= (fun_app$f (fun_app$ca (map_fun$n ?v0 )?v1 )?v2 )(fun_app$g (comp$a (fun_app$f (comp$ ?v1 )?v2 ))?v0 )):pattern ((fun_app$f (fun_app$ca (map_fun$n ?v0 )?v1 )?v2 )))):named a175 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(! (= (fun_app$g (fun_app$cb (map_fun$o ?v0 )?v1 )?v2 )(fun_app$g (comp$a (fun_app$g (comp$a ?v1 )?v2 ))?v0 )):pattern ((fun_app$g (fun_app$cb (map_fun$o ?v0 )?v1 )?v2 )))):named a176 ))
(check-sat )
;(get-unsat-core )
