;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort D_a_sp_nu$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort A_b_c_sp_mu$ 0 )
(declare-sort B_c_prod_set$ 0 )
(declare-sort C_b_prod_set$ 0 )
(declare-sort A_b_c_sp_mu_set$ 0 )
(declare-sort B_c_bool_fun_fun$ 0 )
(declare-sort A_a_b_c_sp_mu_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort B_c_prod_bool_fun$ 0 )
(declare-sort D_stream_bool_fun$ 0 )
(declare-sort D_a_sp_nu_bool_fun$ 0 )
(declare-sort D_a_d_a_sp_nu_sp_mu$ 0 )
(declare-sort A_b_c_sp_mu_bool_fun$ 0 )
(declare-sort A_d_a_sp_nu_prod_set$ 0 )
(declare-sort C_d_a_sp_nu_prod_set$ 0 )
(declare-sort D_a_sp_nu_a_prod_set$ 0 )
(declare-sort D_a_sp_nu_c_prod_set$ 0 )
(declare-sort B_c_prod_c_b_prod_fun$ 0 )
(declare-sort C_b_prod_b_c_prod_fun$ 0 )
(declare-sort A_d_a_sp_nu_bool_fun_fun$ 0 )
(declare-sort C_d_a_sp_nu_bool_fun_fun$ 0 )
(declare-sort A_d_a_sp_nu_prod_bool_fun$ 0 )
(declare-sort C_d_a_d_a_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_bool_fun$ 0 )
(declare-sort D_d_a_d_a_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_stream_b_c_prod_prod_set$ 0 )
(declare-sort B_c_prod_a_stream_prod_set$ 0 )
(declare-sort D_b_c_d_a_sp_nu_prod_sp_mu$ 0 )
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_fun$ 0 )
(declare-sort B_c_d_a_sp_nu_prod_prod_set$ 0 )
(declare-sort D_a_d_a_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort D_a_sp_nu_d_a_sp_nu_prod_set$ 0 )
(declare-sort B_c_prod_a_stream_bool_fun_fun$ 0 )
(declare-sort B_c_d_a_d_a_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort B_c_d_a_sp_nu_prod_bool_fun_fun$ 0 )
(declare-sort B_c_prod_a_stream_prod_bool_fun$ 0 )
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ 0 )
(declare-sort A_b_c_sp_mu_c_d_a_sp_nu_prod_fun$ 0 )
(declare-sort B_c_d_a_sp_nu_prod_prod_bool_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_a_b_c_sp_mu_fun$ 0 )
(declare-sort D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_d_a_sp_nu_prod_d_stream_prod_set$ 0 )
(declare-sort C_d_a_sp_nu_d_a_sp_nu_prod_set_fun$ 0 )
(declare-sort C_bool_fun_a_b_c_sp_mu_bool_fun_fun$ 0 )
(declare-sort D_b_c_d_a_sp_nu_prod_sp_mu_bool_fun$ 0 )
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$ 0 )
(declare-sort A_d_a_sp_nu_prod_d_a_sp_nu_a_prod_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_d_a_sp_nu_c_prod_fun$ 0 )
(declare-sort D_a_sp_nu_a_prod_a_d_a_sp_nu_prod_fun$ 0 )
(declare-sort D_a_sp_nu_c_prod_c_d_a_sp_nu_prod_fun$ 0 )
(declare-sort A_d_a_sp_nu_prod_d_stream_bool_fun_fun$ 0 )
(declare-sort A_d_a_sp_nu_prod_d_stream_prod_bool_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ 0 )
(declare-sort D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_set$ 0 )
(declare-sort A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ 0 )
(declare-sort D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_bool_fun_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_bool_fun$ 0 )
(declare-sort D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ 0 )
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_c_d_a_sp_nu_prod_fun$ 0 )
(declare-sort A_stream_b_c_prod_prod_b_c_prod_a_stream_prod_fun$ 0 )
(declare-sort B_c_prod_a_stream_prod_a_stream_b_c_prod_prod_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ 0 )
(declare-sort D_a_sp_nu_bool_fun_d_a_d_a_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_c_d_a_sp_nu_prod_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_fun$ 0 )
(declare-sort C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_c_d_a_sp_nu_prod_fun$ 0 )
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ 0 )
(declare-sort D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod_set$ 0 )
(declare-sort D_d_a_d_a_sp_nu_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set_fun$ 0 )
(declare-sort A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_d_a_d_a_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_fun$ 0 )
(declare-sort D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ 0 )
(declare-sort A_a_b_c_sp_mu_fun_d_d_a_d_a_sp_nu_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_bool_fun$ 0 )
(declare-sort B_c_d_a_d_a_sp_nu_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_c_d_a_sp_nu_prod_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_d_a_d_a_sp_nu_sp_mu_fun_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ 0)
(declare-sort C_d_a_sp_nu_prod$ 0)
(declare-sort A_b_c_sp_mu_a_b_c_sp_mu_prod$ 0)
(declare-sort D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ 0)
(declare-sort D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod$ 0)
(declare-sort B_c_prod$ 0)
(declare-fun fst$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)A_b_c_sp_mu$)
(declare-fun snd$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)D_a_d_a_sp_nu_sp_mu$)
(declare-fun pair$ (A_b_c_sp_mu$ D_a_d_a_sp_nu_sp_mu$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)
(declare-fun fst$a (C_d_a_sp_nu_prod$)C$)
(declare-fun snd$a (C_d_a_sp_nu_prod$)D_a_sp_nu$)
(declare-fun pair$a (C$ D_a_sp_nu$ )C_d_a_sp_nu_prod$)
(declare-fun fst$b (A_b_c_sp_mu_a_b_c_sp_mu_prod$)A_b_c_sp_mu$)
(declare-fun snd$b (A_b_c_sp_mu_a_b_c_sp_mu_prod$)A_b_c_sp_mu$)
(declare-fun pair$b (A_b_c_sp_mu$ A_b_c_sp_mu$ )A_b_c_sp_mu_a_b_c_sp_mu_prod$)
(declare-fun fst$c (D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)D_a_d_a_sp_nu_sp_mu$)
(declare-fun snd$c (D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)D_a_d_a_sp_nu_sp_mu$)
(declare-fun pair$c (D_a_d_a_sp_nu_sp_mu$ D_a_d_a_sp_nu_sp_mu$ )D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)
(declare-fun fst$d (D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod$)D_b_c_d_a_sp_nu_prod_sp_mu$)
(declare-fun snd$d (D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod$)D_b_c_d_a_sp_nu_prod_sp_mu$)
(declare-fun pair$d (D_b_c_d_a_sp_nu_prod_sp_mu$ D_b_c_d_a_sp_nu_prod_sp_mu$ )D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod$)
(declare-fun fst$e (B_c_prod$)B$)
(declare-fun snd$e (B_c_prod$)C$)
(declare-fun pair$e (B$ C$ )B_c_prod$)
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-sort B_c_prod_a_stream_prod$ 0)
(declare-sort A_d_a_sp_nu_prod$ 0)
(declare-fun fst$f (B_c_prod_a_stream_prod$)B_c_prod$)
(declare-fun snd$f (B_c_prod_a_stream_prod$)A_stream$)
(declare-fun pair$f (B_c_prod$ A_stream$ )B_c_prod_a_stream_prod$)
(declare-fun fst$g (A_d_a_sp_nu_prod$)A$)
(declare-fun snd$g (A_d_a_sp_nu_prod$)D_a_sp_nu$)
(declare-fun pair$g (A$ D_a_sp_nu$ )A_d_a_sp_nu_prod$)
(declare-sort D_stream$ 0)
(declare-fun shd$a (D_stream$)D$)
(declare-fun stl$a (D_stream$)D_stream$)
(declare-fun sCons$a (D$ D_stream$ )D_stream$)
(declare-sort A_d_a_sp_nu_prod_d_stream_prod$ 0)
(declare-sort B_c_d_a_sp_nu_prod_prod$ 0)
(declare-sort B_c_d_a_sp_nu_prod_prod_d_stream_prod$ 0)
(declare-sort A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$ 0)
(declare-sort C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ 0)
(declare-sort D_a_sp_nu_c_prod$ 0)
(declare-sort D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$ 0)
(declare-sort C_b_prod$ 0)
(declare-sort D_a_sp_nu_a_prod$ 0)
(declare-sort A_stream_b_c_prod_prod$ 0)
(declare-sort D_a_sp_nu_d_a_sp_nu_prod$ 0)
(declare-fun fst$h (A_d_a_sp_nu_prod_d_stream_prod$)A_d_a_sp_nu_prod$)
(declare-fun snd$h (A_d_a_sp_nu_prod_d_stream_prod$)D_stream$)
(declare-fun pair$h (A_d_a_sp_nu_prod$ D_stream$ )A_d_a_sp_nu_prod_d_stream_prod$)
(declare-fun fst$i (B_c_d_a_sp_nu_prod_prod$)B$)
(declare-fun snd$i (B_c_d_a_sp_nu_prod_prod$)C_d_a_sp_nu_prod$)
(declare-fun pair$i (B$ C_d_a_sp_nu_prod$ )B_c_d_a_sp_nu_prod_prod$)
(declare-fun fst$j (B_c_d_a_sp_nu_prod_prod_d_stream_prod$)B_c_d_a_sp_nu_prod_prod$)
(declare-fun snd$j (B_c_d_a_sp_nu_prod_prod_d_stream_prod$)D_stream$)
(declare-fun pair$j (B_c_d_a_sp_nu_prod_prod$ D_stream$ )B_c_d_a_sp_nu_prod_prod_d_stream_prod$)
(declare-fun fst$k (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$)A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)
(declare-fun snd$k (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$)A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$)
(declare-fun pair$k (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$)
(declare-fun fst$l (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$)C_d_a_sp_nu_prod$)
(declare-fun snd$l (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$)C_d_a_sp_nu_prod$)
(declare-fun pair$l (C_d_a_sp_nu_prod$ C_d_a_sp_nu_prod$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$)
(declare-fun fst$m (D_a_sp_nu_c_prod$)D_a_sp_nu$)
(declare-fun snd$m (D_a_sp_nu_c_prod$)C$)
(declare-fun pair$m (D_a_sp_nu$ C$ )D_a_sp_nu_c_prod$)
(declare-fun fst$n (D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$)D_a_d_a_sp_nu_sp_mu$)
(declare-fun snd$n (D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$)A_b_c_sp_mu$)
(declare-fun pair$n (D_a_d_a_sp_nu_sp_mu$ A_b_c_sp_mu$ )D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$)
(declare-fun fst$o (C_b_prod$)C$)
(declare-fun snd$o (C_b_prod$)B$)
(declare-fun pair$o (C$ B$ )C_b_prod$)
(declare-fun fst$p (D_a_sp_nu_a_prod$)D_a_sp_nu$)
(declare-fun snd$p (D_a_sp_nu_a_prod$)A$)
(declare-fun pair$p (D_a_sp_nu$ A$ )D_a_sp_nu_a_prod$)
(declare-fun fst$q (A_stream_b_c_prod_prod$)A_stream$)
(declare-fun snd$q (A_stream_b_c_prod_prod$)B_c_prod$)
(declare-fun pair$q (A_stream$ B_c_prod$ )A_stream_b_c_prod_prod$)
(declare-fun fst$r (D_a_sp_nu_d_a_sp_nu_prod$)D_a_sp_nu$)
(declare-fun snd$r (D_a_sp_nu_d_a_sp_nu_prod$)D_a_sp_nu$)
(declare-fun pair$r (D_a_sp_nu$ D_a_sp_nu$ )D_a_sp_nu_d_a_sp_nu_prod$)
(declare-fun p$ ()Bool )
(declare-fun x$ ()A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )
(declare-fun in$ (D_a_d_a_sp_nu_sp_mu$ )D_a_sp_nu$ )
(declare-fun uu$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )A_a_b_c_sp_mu_fun_d_d_a_d_a_sp_nu_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun get$ (A_a_b_c_sp_mu_fun$ )A_b_c_sp_mu$ )
(declare-fun out$ (D_a_sp_nu$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun put$ (B$ C$ )A_b_c_sp_mu$ )
(declare-fun sub$ ()A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun uua$ (A_a_b_c_sp_mu_fun$ )D_d_a_d_a_sp_nu_sp_mu_fun_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun uub$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun uuc$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$ )
(declare-fun uud$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_bool_fun$ )
(declare-fun uue$ (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_bool_fun$ )
(declare-fun uuf$ (C_d_a_sp_nu_prod_set$ )C_d_a_sp_nu_prod_bool_fun$ )
(declare-fun uug$ ()D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ )
(declare-fun uuh$ (Bool )C_d_a_sp_nu_prod_bool_fun$ )
(declare-fun uui$ (Bool )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun uuj$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ )
(declare-fun uuk$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun_fun$ )
(declare-fun uul$ (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_bool_fun_fun$ )
(declare-fun uum$ (B_c_prod_a_stream_prod_set$ )B_c_prod_a_stream_bool_fun_fun$ )
(declare-fun uun$ (A_d_a_sp_nu_prod_d_stream_prod_set$ )A_d_a_sp_nu_prod_d_stream_bool_fun_fun$ )
(declare-fun uuo$ (B_c_d_a_sp_nu_prod_prod_set$ )B_c_d_a_sp_nu_prod_bool_fun_fun$ )
(declare-fun uup$ (B_c_prod_set$ )B_c_bool_fun_fun$ )
(declare-fun uuq$ (A_d_a_sp_nu_prod_set$ )A_d_a_sp_nu_bool_fun_fun$ )
(declare-fun uur$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun uus$ (C_d_a_sp_nu_prod_set$ )C_d_a_sp_nu_bool_fun_fun$ )
(declare-fun uut$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ )
(declare-fun uuu$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun_fun$ )
(declare-fun uuv$ (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_bool_fun_fun$ )
(declare-fun uuw$ (A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_d_a_d_a_sp_nu_sp_mu_fun$ )B_c_d_a_d_a_sp_nu_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_fun$ )
(declare-fun comp$ (A_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ A_a_b_c_sp_mu_fun$ )A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )
(declare-fun get$a (D_d_a_d_a_sp_nu_sp_mu_fun$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun get$b (D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )D_b_c_d_a_sp_nu_prod_sp_mu$ )
(declare-fun put$a (A$ D_a_sp_nu$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun put$b (B$ C_d_a_sp_nu_prod$ )D_b_c_d_a_sp_nu_prod_sp_mu$ )
(declare-fun sub$a ()D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )
(declare-fun sub$b ()D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod_set$ )
(declare-fun swap$ ()D_a_sp_nu_c_prod_c_d_a_sp_nu_prod_fun$ )
(declare-fun above$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ A_b_c_sp_mu$ )A_b_c_sp_mu_set$ )
(declare-fun curry$ (C_d_a_sp_nu_prod_bool_fun$ )C_d_a_sp_nu_bool_fun_fun$ )
(declare-fun image$ (C_d_a_sp_nu_prod_d_a_sp_nu_c_prod_fun$ C_d_a_sp_nu_prod_set$ )D_a_sp_nu_c_prod_set$ )
(declare-fun swap$a ()C_d_a_sp_nu_prod_d_a_sp_nu_c_prod_fun$ )
(declare-fun swap$b ()D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )
(declare-fun swap$c ()A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_fun$ )
(declare-fun swap$d ()C_b_prod_b_c_prod_fun$ )
(declare-fun swap$e ()B_c_prod_c_b_prod_fun$ )
(declare-fun swap$f ()D_a_sp_nu_a_prod_a_d_a_sp_nu_prod_fun$ )
(declare-fun swap$g ()A_d_a_sp_nu_prod_d_a_sp_nu_a_prod_fun$ )
(declare-fun swap$h ()A_stream_b_c_prod_prod_b_c_prod_a_stream_prod_fun$ )
(declare-fun swap$i ()B_c_prod_a_stream_prod_a_stream_b_c_prod_prod_fun$ )
(declare-fun above$a (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )
(declare-fun above$b (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ C_d_a_sp_nu_prod$ )C_d_a_sp_nu_prod_set$ )
(declare-fun aboveS$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ A_b_c_sp_mu$ )A_b_c_sp_mu_set$ )
(declare-fun curry$a (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun curry$b (B_c_prod_a_stream_prod_bool_fun$ B_c_prod$ A_stream$ )Bool )
(declare-fun curry$c (A_d_a_sp_nu_prod_d_stream_prod_bool_fun$ A_d_a_sp_nu_prod$ D_stream$ )Bool )
(declare-fun curry$d (B_c_d_a_sp_nu_prod_prod_bool_fun$ )B_c_d_a_sp_nu_prod_bool_fun_fun$ )
(declare-fun curry$e (B_c_prod_bool_fun$ )B_c_bool_fun_fun$ )
(declare-fun curry$f (A_d_a_sp_nu_prod_bool_fun$ )A_d_a_sp_nu_bool_fun_fun$ )
(declare-fun image$a (D_a_sp_nu_c_prod_c_d_a_sp_nu_prod_fun$ D_a_sp_nu_c_prod_set$ )C_d_a_sp_nu_prod_set$ )
(declare-fun image$b (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun image$c (D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_set$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )
(declare-fun image$d (B_c_prod_c_b_prod_fun$ B_c_prod_set$ )C_b_prod_set$ )
(declare-fun image$e (C_b_prod_b_c_prod_fun$ C_b_prod_set$ )B_c_prod_set$ )
(declare-fun image$f (A_d_a_sp_nu_prod_d_a_sp_nu_a_prod_fun$ A_d_a_sp_nu_prod_set$ )D_a_sp_nu_a_prod_set$ )
(declare-fun image$g (D_a_sp_nu_a_prod_a_d_a_sp_nu_prod_fun$ D_a_sp_nu_a_prod_set$ )A_d_a_sp_nu_prod_set$ )
(declare-fun image$h (B_c_prod_a_stream_prod_a_stream_b_c_prod_prod_fun$ B_c_prod_a_stream_prod_set$ )A_stream_b_c_prod_prod_set$ )
(declare-fun image$i (A_stream_b_c_prod_prod_b_c_prod_a_stream_prod_fun$ A_stream_b_c_prod_prod_set$ )B_c_prod_a_stream_prod_set$ )
(declare-fun image$j (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_fun$ C_d_a_sp_nu_prod_set$ )C_d_a_sp_nu_prod_set$ )
(declare-fun image$k (A_b_c_sp_mu_a_b_c_sp_mu_prod_c_d_a_sp_nu_prod_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )C_d_a_sp_nu_prod_set$ )
(declare-fun image$l (C_d_a_sp_nu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ C_d_a_sp_nu_prod_set$ )A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun image$m (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_c_d_a_sp_nu_prod_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )C_d_a_sp_nu_prod_set$ )
(declare-fun image$n (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_c_d_a_sp_nu_prod_fun$ C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )C_d_a_sp_nu_prod_set$ )
(declare-fun image$o (C_d_a_sp_nu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ C_d_a_sp_nu_prod_set$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )
(declare-fun image$p (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_fun$ C_d_a_sp_nu_prod_set$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )
(declare-fun image$q (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun image$r (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_c_d_a_sp_nu_prod_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )C_d_a_sp_nu_prod_set$ )
(declare-fun member$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )Bool )
(declare-fun run_mu$ (A_b_c_sp_mu$ A_stream$ )B_c_prod_a_stream_prod$ )
(declare-fun aboveS$a (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )
(declare-fun aboveS$b (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ C_d_a_sp_nu_prod$ )C_d_a_sp_nu_prod_set$ )
(declare-fun collect$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )
(declare-fun fun_app$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )Bool )
(declare-fun member$a (A_b_c_sp_mu_a_b_c_sp_mu_prod$ A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )Bool )
(declare-fun member$b (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )Bool )
(declare-fun member$c (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )Bool )
(declare-fun member$d (C_d_a_sp_nu_prod$ C_d_a_sp_nu_prod_set$ )Bool )
(declare-fun member$e (B_c_prod_a_stream_prod$ B_c_prod_a_stream_prod_set$ )Bool )
(declare-fun member$f (A_d_a_sp_nu_prod_d_stream_prod$ A_d_a_sp_nu_prod_d_stream_prod_set$ )Bool )
(declare-fun member$g (B_c_d_a_sp_nu_prod_prod$ B_c_d_a_sp_nu_prod_prod_set$ )Bool )
(declare-fun member$h (B_c_prod$ B_c_prod_set$ )Bool )
(declare-fun member$i (A_d_a_sp_nu_prod$ A_d_a_sp_nu_prod_set$ )Bool )
(declare-fun member$j (D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )Bool )
(declare-fun member$k (D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod$ D_b_c_d_a_sp_nu_prod_sp_mu_d_b_c_d_a_sp_nu_prod_sp_mu_prod_set$ )Bool )
(declare-fun member$l (D_a_sp_nu_c_prod$ D_a_sp_nu_c_prod_set$ )Bool )
(declare-fun member$m (D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$ D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_set$ )Bool )
(declare-fun member$n (C_b_prod$ C_b_prod_set$ )Bool )
(declare-fun member$o (D_a_sp_nu_a_prod$ D_a_sp_nu_a_prod_set$ )Bool )
(declare-fun member$p (A_stream_b_c_prod_prod$ A_stream_b_c_prod_prod_set$ )Bool )
(declare-fun member$q (D_a_sp_nu_d_a_sp_nu_prod$ D_a_sp_nu_d_a_sp_nu_prod_set$ )Bool )
(declare-fun run_mu$a (D_a_d_a_sp_nu_sp_mu$ D_stream$ )A_d_a_sp_nu_prod_d_stream_prod$ )
(declare-fun run_mu$b (D_b_c_d_a_sp_nu_prod_sp_mu$ D_stream$ )B_c_d_a_sp_nu_prod_prod_d_stream_prod$ )
(declare-fun collect$a (A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$ )A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun collect$b (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_bool_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun collect$c (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_bool_fun$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )
(declare-fun collect$d (C_d_a_sp_nu_prod_bool_fun$ )C_d_a_sp_nu_prod_set$ )
(declare-fun collect$e (A_b_c_sp_mu_bool_fun$ )A_b_c_sp_mu_set$ )
(declare-fun fun_app$a (A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod$ )Bool )
(declare-fun fun_app$b (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_bool_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$ )Bool )
(declare-fun fun_app$c (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_bool_fun$ C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ )Bool )
(declare-fun fun_app$d (C_d_a_sp_nu_prod_bool_fun$ C_d_a_sp_nu_prod$ )Bool )
(declare-fun fun_app$e (D_a_d_a_sp_nu_sp_mu_bool_fun$ D_a_d_a_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$f (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_bool_fun_fun$ A_b_c_sp_mu$ )D_a_d_a_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$g (A_b_c_sp_mu_bool_fun$ A_b_c_sp_mu$ )Bool )
(declare-fun fun_app$h (A_b_c_sp_mu_a_b_c_sp_mu_bool_fun_fun$ A_b_c_sp_mu$ )A_b_c_sp_mu_bool_fun$ )
(declare-fun fun_app$i (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun fun_app$j (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_bool_fun_fun$ C_d_a_sp_nu_prod$ )C_d_a_sp_nu_prod_bool_fun$ )
(declare-fun fun_app$k (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$l (B_c_prod_a_stream_bool_fun_fun$ B_c_prod$ )A_stream_bool_fun$ )
(declare-fun fun_app$m (D_stream_bool_fun$ D_stream$ )Bool )
(declare-fun fun_app$n (A_d_a_sp_nu_prod_d_stream_bool_fun_fun$ A_d_a_sp_nu_prod$ )D_stream_bool_fun$ )
(declare-fun fun_app$o (D_a_sp_nu_bool_fun$ D_a_sp_nu$ )Bool )
(declare-fun fun_app$p (C_d_a_sp_nu_bool_fun_fun$ C$ )D_a_sp_nu_bool_fun$ )
(declare-fun fun_app$q (B_c_d_a_sp_nu_prod_bool_fun_fun$ B$ )C_d_a_sp_nu_prod_bool_fun$ )
(declare-fun fun_app$r (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$s (B_c_bool_fun_fun$ B$ )C_bool_fun$ )
(declare-fun fun_app$t (A_d_a_sp_nu_bool_fun_fun$ A$ )D_a_sp_nu_bool_fun$ )
(declare-fun fun_app$u (A_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ A_b_c_sp_mu$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )
(declare-fun fun_app$v (B_c_d_a_d_a_sp_nu_sp_mu_fun_fun_a_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_fun$ B_c_d_a_d_a_sp_nu_sp_mu_fun_fun$ )A_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )
(declare-fun fun_app$w (D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ D$ )D_b_c_d_a_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$x (D_d_a_d_a_sp_nu_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun$ D_d_a_d_a_sp_nu_sp_mu_fun$ )D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$y (A_a_b_c_sp_mu_fun_d_d_a_d_a_sp_nu_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun_fun$ A_a_b_c_sp_mu_fun$ )D_d_a_d_a_sp_nu_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$z (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )D_b_c_d_a_sp_nu_prod_sp_mu$ )
(declare-fun pred_fun$ (A_b_c_sp_mu_bool_fun$ A_a_b_c_sp_mu_fun$ )Bool )
(declare-fun same_fst$ (A_b_c_sp_mu_bool_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun fun_app$aa (D_d_a_d_a_sp_nu_sp_mu_fun$ D$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun fun_app$ab (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$ac (D_d_a_d_a_sp_nu_sp_mu_fun_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun_fun$ D_d_a_d_a_sp_nu_sp_mu_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun_d_d_b_c_d_a_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$ad (D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ D_a_d_a_sp_nu_sp_mu$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun fun_app$ae (A_a_b_c_sp_mu_fun$ A$ )A_b_c_sp_mu$ )
(declare-fun fun_app$af (C_bool_fun_a_b_c_sp_mu_bool_fun_fun$ C_bool_fun$ )A_b_c_sp_mu_bool_fun$ )
(declare-fun fun_app$ag (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$ah (D_a_sp_nu_bool_fun_d_a_d_a_sp_nu_sp_mu_bool_fun_fun$ D_a_sp_nu_bool_fun$ )D_a_d_a_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$ai (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$aj (D_b_c_d_a_sp_nu_prod_sp_mu_bool_fun$ D_b_c_d_a_sp_nu_prod_sp_mu$ )Bool )
(declare-fun fun_app$ak (B_c_prod_a_stream_prod_bool_fun$ B_c_prod_a_stream_prod$ )Bool )
(declare-fun fun_app$al (A_d_a_sp_nu_prod_d_stream_prod_bool_fun$ A_d_a_sp_nu_prod_d_stream_prod$ )Bool )
(declare-fun fun_app$am (B_c_d_a_sp_nu_prod_prod_bool_fun$ B_c_d_a_sp_nu_prod_prod$ )Bool )
(declare-fun fun_app$an (B_c_prod_bool_fun$ B_c_prod$ )Bool )
(declare-fun fun_app$ao (A_d_a_sp_nu_prod_bool_fun$ A_d_a_sp_nu_prod$ )Bool )
(declare-fun fun_app$ap (D_a_sp_nu_c_prod_c_d_a_sp_nu_prod_fun$ D_a_sp_nu_c_prod$ )C_d_a_sp_nu_prod$ )
(declare-fun fun_app$aq (C_d_a_sp_nu_prod_d_a_sp_nu_c_prod_fun$ C_d_a_sp_nu_prod$ )D_a_sp_nu_c_prod$ )
(declare-fun fun_app$ar (D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )
(declare-fun fun_app$as (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$ )
(declare-fun fun_app$at (C_b_prod_b_c_prod_fun$ C_b_prod$ )B_c_prod$ )
(declare-fun fun_app$au (B_c_prod_c_b_prod_fun$ B_c_prod$ )C_b_prod$ )
(declare-fun fun_app$av (D_a_sp_nu_a_prod_a_d_a_sp_nu_prod_fun$ D_a_sp_nu_a_prod$ )A_d_a_sp_nu_prod$ )
(declare-fun fun_app$aw (A_d_a_sp_nu_prod_d_a_sp_nu_a_prod_fun$ A_d_a_sp_nu_prod$ )D_a_sp_nu_a_prod$ )
(declare-fun fun_app$ax (A_stream_b_c_prod_prod_b_c_prod_a_stream_prod_fun$ A_stream_b_c_prod_prod$ )B_c_prod_a_stream_prod$ )
(declare-fun fun_app$ay (B_c_prod_a_stream_prod_a_stream_b_c_prod_prod_fun$ B_c_prod_a_stream_prod$ )A_stream_b_c_prod_prod$ )
(declare-fun fun_app$az (C_d_a_d_a_sp_nu_sp_mu_fun$ C$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun fun_app$ba (B_c_d_a_d_a_sp_nu_sp_mu_fun_fun$ B$ )C_d_a_d_a_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$bb (A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_d_a_d_a_sp_nu_sp_mu_fun$ A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun fun_app$bc (A_b_c_sp_mu_a_b_c_sp_mu_fun$ A_b_c_sp_mu$ )A_b_c_sp_mu$ )
(declare-fun fun_app$bd (A_b_c_sp_mu_c_d_a_sp_nu_prod_fun$ A_b_c_sp_mu$ )C_d_a_sp_nu_prod$ )
(declare-fun fun_app$be (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )A_b_c_sp_mu$ )
(declare-fun fun_app$bf (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )
(declare-fun fun_app$bg (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_c_d_a_sp_nu_prod_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )C_d_a_sp_nu_prod$ )
(declare-fun fun_app$bh (C_d_a_sp_nu_prod_a_b_c_sp_mu_fun$ C_d_a_sp_nu_prod$ )A_b_c_sp_mu$ )
(declare-fun fun_app$bi (C_d_a_sp_nu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ C_d_a_sp_nu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )
(declare-fun fun_app$bj (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_fun$ C_d_a_sp_nu_prod$ )C_d_a_sp_nu_prod$ )
(declare-fun fun_app$bk (A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ A$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )
(declare-fun fun_app$bl (A_b_c_sp_mu_a_b_c_sp_mu_prod_c_d_a_sp_nu_prod_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod$ )C_d_a_sp_nu_prod$ )
(declare-fun fun_app$bm (C_d_a_sp_nu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ C_d_a_sp_nu_prod$ )A_b_c_sp_mu_a_b_c_sp_mu_prod$ )
(declare-fun fun_app$bn (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_c_d_a_sp_nu_prod_fun$ C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ )C_d_a_sp_nu_prod$ )
(declare-fun fun_app$bo (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_fun$ C_d_a_sp_nu_prod$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ )
(declare-fun fun_app$bp (A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ A_b_c_sp_mu_a_b_c_sp_mu_prod$ )A_b_c_sp_mu_a_b_c_sp_mu_prod$ )
(declare-fun fun_app$bq (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_c_d_a_sp_nu_prod_fun$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$ )C_d_a_sp_nu_prod$ )
(declare-fun fun_app$br (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set_fun$ A_b_c_sp_mu$ )D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )
(declare-fun fun_app$bs (C_d_a_sp_nu_d_a_sp_nu_prod_set_fun$ C$ )D_a_sp_nu_d_a_sp_nu_prod_set$ )
(declare-fun inv_image$ (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ A_b_c_sp_mu_a_b_c_sp_mu_fun$ )A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun pred_fun$a (D_a_d_a_sp_nu_sp_mu_bool_fun$ D_d_a_d_a_sp_nu_sp_mu_fun$ )Bool )
(declare-fun pred_fun$b (D_b_c_d_a_sp_nu_prod_sp_mu_bool_fun$ D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )Bool )
(declare-fun rec_sp_mu$ (A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_d_a_d_a_sp_nu_sp_mu_fun$ B_c_d_a_d_a_sp_nu_sp_mu_fun_fun$ A_b_c_sp_mu$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun same_fst$a (C_bool_fun$ C_d_a_sp_nu_d_a_sp_nu_prod_set_fun$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )
(declare-fun case_sp_nu$ (D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ D_a_sp_nu$ )D_a_d_a_sp_nu_sp_mu$ )
(declare-fun inv_image$a (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ A_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun inv_image$b (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ A_b_c_sp_mu_c_d_a_sp_nu_prod_fun$ )A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )
(declare-fun inv_image$c (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun inv_image$d (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun inv_image$e (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_c_d_a_sp_nu_prod_fun$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun inv_image$f (A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ C_d_a_sp_nu_prod_a_b_c_sp_mu_fun$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )
(declare-fun inv_image$g (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ C_d_a_sp_nu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )
(declare-fun inv_image$h (C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_fun$ )C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )
(declare-fun pred_sp_mu$ (B_bool_fun$ )C_bool_fun_a_b_c_sp_mu_bool_fun_fun$ )
(declare-fun pred_sp_nu$ (A_bool_fun$ )D_a_sp_nu_bool_fun$ )
(declare-fun pred_sp_mu$a (A_bool_fun$ )D_a_sp_nu_bool_fun_d_a_d_a_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun pred_sp_mu$b (B_bool_fun$ C_d_a_sp_nu_prod_bool_fun$ )D_b_c_d_a_sp_nu_prod_sp_mu_bool_fun$ )
(declare-fun sp_mu_comp_rel$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun sp_mu_comp_graph$ (A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ D_b_c_d_a_sp_nu_prod_sp_mu$ )Bool )
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(! (= (fun_app$ (uub$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$ (uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod$ ))(! (= (fun_app$a (uuc$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$a (uuc$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$ ))(! (= (fun_app$b (uud$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$b (uud$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ ))(! (= (fun_app$c (uue$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$c (uue$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_set$ )(?v1 C_d_a_sp_nu_prod$ ))(! (= (fun_app$d (uuf$ ?v0 )?v1 )(member$d ?v1 ?v0 )):pattern ((fun_app$d (uuf$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(! (= (fun_app$e (fun_app$f (uur$ ?v0 )?v1 )?v2 )(member$ (pair$ ?v1 ?v2 )?v0 )):pattern ((fun_app$e (fun_app$f (uur$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu$ )(?v2 A_b_c_sp_mu$ ))(! (= (fun_app$g (fun_app$h (uuj$ ?v0 )?v1 )?v2 )(member$a (pair$b ?v1 ?v2 )?v0 )):pattern ((fun_app$g (fun_app$h (uuj$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(! (= (fun_app$ (fun_app$i (uuk$ ?v0 )?v1 )?v2 )(member$b (pair$k ?v1 ?v2 )?v0 )):pattern ((fun_app$ (fun_app$i (uuk$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 C_d_a_sp_nu_prod$ ))(! (= (fun_app$d (fun_app$j (uul$ ?v0 )?v1 )?v2 )(member$c (pair$l ?v1 ?v2 )?v0 )):pattern ((fun_app$d (fun_app$j (uul$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod_set$ )(?v1 B_c_prod$ )(?v2 A_stream$ ))(! (= (fun_app$k (fun_app$l (uum$ ?v0 )?v1 )?v2 )(member$e (pair$f ?v1 ?v2 )?v0 )):pattern ((fun_app$k (fun_app$l (uum$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod_set$ )(?v1 A_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(! (= (fun_app$m (fun_app$n (uun$ ?v0 )?v1 )?v2 )(member$f (pair$h ?v1 ?v2 )?v0 )):pattern ((fun_app$m (fun_app$n (uun$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_set$ )(?v1 C$ )(?v2 D_a_sp_nu$ ))(! (= (fun_app$o (fun_app$p (uus$ ?v0 )?v1 )?v2 )(member$d (pair$a ?v1 ?v2 )?v0 )):pattern ((fun_app$o (fun_app$p (uus$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod_set$ )(?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(! (= (fun_app$d (fun_app$q (uuo$ ?v0 )?v1 )?v2 )(member$g (pair$i ?v1 ?v2 )?v0 )):pattern ((fun_app$d (fun_app$q (uuo$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 B_c_prod_set$ )(?v1 B$ )(?v2 C$ ))(! (= (fun_app$r (fun_app$s (uup$ ?v0 )?v1 )?v2 )(member$h (pair$e ?v1 ?v2 )?v0 )):pattern ((fun_app$r (fun_app$s (uup$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_set$ )(?v1 A$ )(?v2 D_a_sp_nu$ ))(! (= (fun_app$o (fun_app$t (uuq$ ?v0 )?v1 )?v2 )(member$i (pair$g ?v1 ?v2 )?v0 )):pattern ((fun_app$o (fun_app$t (uuq$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu$ )(?v2 A_b_c_sp_mu$ ))(! (= (fun_app$g (fun_app$h (uut$ ?v0 )?v1 )?v2 )(and (not (= ?v2 ?v1 ))(member$a (pair$b ?v1 ?v2 )?v0 ))):pattern ((fun_app$g (fun_app$h (uut$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(! (= (fun_app$ (fun_app$i (uuu$ ?v0 )?v1 )?v2 )(and (not (= ?v2 ?v1 ))(member$b (pair$k ?v1 ?v2 )?v0 ))):pattern ((fun_app$ (fun_app$i (uuu$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 C_d_a_sp_nu_prod$ ))(! (= (fun_app$d (fun_app$j (uuv$ ?v0 )?v1 )?v2 )(and (not (= ?v2 ?v1 ))(member$c (pair$l ?v1 ?v2 )?v0 ))):pattern ((fun_app$d (fun_app$j (uuv$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 B_c_d_a_d_a_sp_nu_sp_mu_fun_fun$ )(?v2 A_b_c_sp_mu$ ))(! (= (fun_app$u (fun_app$v (uuw$ ?v0 )?v1 )?v2 )(pair$ ?v2 (rec_sp_mu$ ?v0 ?v1 ?v2 ))):pattern ((fun_app$u (fun_app$v (uuw$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v1 A_a_b_c_sp_mu_fun$ )(?v2 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v3 D$ ))(! (= (fun_app$w (fun_app$x (fun_app$y (uu$ ?v0 )?v1 )?v2 )?v3 )(fun_app$z ?v0 (pair$ (get$ ?v1 )(fun_app$aa ?v2 ?v3 )))):pattern ((fun_app$w (fun_app$x (fun_app$y (uu$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v3 D$ ))(! (= (fun_app$w (fun_app$ab (fun_app$ac (uua$ ?v0 )?v1 )?v2 )?v3 )(fun_app$z ?v2 (pair$ (get$ ?v0 )(fun_app$aa ?v1 ?v3 )))):pattern ((fun_app$w (fun_app$ab (fun_app$ac (uua$ ?v0 )?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(! (= (fun_app$ (uui$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uui$ ?v0 )?v1 )))):named a21 ))
(assert (! (forall ((?v0 Bool )(?v1 C_d_a_sp_nu_prod$ ))(! (= (fun_app$d (uuh$ ?v0 )?v1 )?v0 ):pattern ((fun_app$d (uuh$ ?v0 )?v1 )))):named a22 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu$ ))(! (= (fun_app$ad uug$ ?v0 )?v0 ):pattern ((fun_app$ad uug$ ?v0 )))):named a23 ))
(assert (! (not p$ ):named a24 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(=> (= x$ (pair$ (put$ ?v0 ?v1 )?v2 ))p$ )):named a25 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 A$ )(?v2 D_a_sp_nu$ ))(=> (= x$ (pair$ (get$ ?v0 )(put$a ?v1 ?v2 )))p$ )):named a26 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 D_d_a_d_a_sp_nu_sp_mu_fun$ ))(=> (= x$ (pair$ (get$ ?v0 )(get$a ?v1 )))p$ )):named a27 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 A_a_b_c_sp_mu_fun$ ))(= (= (get$ ?v0 )(get$ ?v1 ))(= ?v0 ?v1 ))):named a28 ))
(assert (! (forall ((?v0 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 D_d_a_d_a_sp_nu_sp_mu_fun$ ))(= (= (get$a ?v0 )(get$a ?v1 ))(= ?v0 ?v1 ))):named a29 ))
(assert (! (forall ((?v0 D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v1 D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ ))(= (= (get$b ?v0 )(get$b ?v1 ))(= ?v0 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(= (= (put$ ?v0 ?v1 )(put$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ )(?v2 A$ )(?v3 D_a_sp_nu$ ))(= (= (put$a ?v0 ?v1 )(put$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 B$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 B$ )(?v3 C_d_a_sp_nu_prod$ ))(= (= (put$b ?v0 ?v1 )(put$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a33 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v2 D$ ))(fun_app$ (sp_mu_comp_rel$ (pair$ (get$ ?v0 )(fun_app$aa ?v1 ?v2 )))(pair$ (get$ ?v0 )(get$a ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ ))(=> (and (forall ((?v1 A_a_b_c_sp_mu_fun$ ))(=> (= ?v0 (get$ ?v1 ))false ))(forall ((?v1 B$ )(?v2 C$ ))(=> (= ?v0 (put$ ?v1 ?v2 ))false )))false )):named a35 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu$ ))(=> (and (forall ((?v1 D_d_a_d_a_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (get$a ?v1 ))false ))(forall ((?v1 A$ )(?v2 D_a_sp_nu$ ))(=> (= ?v0 (put$a ?v1 ?v2 ))false )))false )):named a36 ))
(assert (! (forall ((?v0 D_b_c_d_a_sp_nu_prod_sp_mu$ ))(=> (and (forall ((?v1 D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ ))(=> (= ?v0 (get$b ?v1 ))false ))(forall ((?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(=> (= ?v0 (put$b ?v1 ?v2 ))false )))false )):named a37 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 B$ )(?v2 C$ ))(not (= (get$ ?v0 )(put$ ?v1 ?v2 )))):named a38 ))
(assert (! (forall ((?v0 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 A$ )(?v2 D_a_sp_nu$ ))(not (= (get$a ?v0 )(put$a ?v1 ?v2 )))):named a39 ))
(assert (! (forall ((?v0 D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(not (= (get$b ?v0 )(put$b ?v1 ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 A$ ))(member$a (pair$b (fun_app$ae ?v0 ?v1 )(get$ ?v0 ))sub$ )):named a41 ))
(assert (! (forall ((?v0 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 D$ ))(member$j (pair$c (fun_app$aa ?v0 ?v1 )(get$a ?v0 ))sub$a )):named a42 ))
(assert (! (forall ((?v0 D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v1 D$ ))(member$k (pair$d (fun_app$w ?v0 ?v1 )(get$b ?v0 ))sub$b )):named a43 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 A_stream$ )(?v2 B_c_prod$ )(?v3 A_stream$ ))(= (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a44 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod$ )(?v1 D_stream$ )(?v2 A_d_a_sp_nu_prod$ )(?v3 D_stream$ ))(= (= (pair$h ?v0 ?v1 )(pair$h ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a45 ))
(assert (! (forall ((?v0 B$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 B$ )(?v3 C_d_a_sp_nu_prod$ ))(= (= (pair$i ?v0 ?v1 )(pair$i ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a46 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(= (= (pair$e ?v0 ?v1 )(pair$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a47 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ )(?v2 A$ )(?v3 D_a_sp_nu$ ))(= (= (pair$g ?v0 ?v1 )(pair$g ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a48 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 D_a_d_a_sp_nu_sp_mu$ )(?v2 A_b_c_sp_mu$ )(?v3 D_a_d_a_sp_nu_sp_mu$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a49 ))
(assert (! (forall ((?v0 C$ )(?v1 D_a_sp_nu$ )(?v2 C$ )(?v3 D_a_sp_nu$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 A_stream$ )(?v2 B_c_prod$ )(?v3 A_stream$ ))(= (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod$ )(?v1 D_stream$ )(?v2 A_d_a_sp_nu_prod$ )(?v3 D_stream$ ))(= (= (pair$h ?v0 ?v1 )(pair$h ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 B$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 B$ )(?v3 C_d_a_sp_nu_prod$ ))(= (= (pair$i ?v0 ?v1 )(pair$i ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(= (= (pair$e ?v0 ?v1 )(pair$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a54 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ )(?v2 A$ )(?v3 D_a_sp_nu$ ))(= (= (pair$g ?v0 ?v1 )(pair$g ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 D_a_d_a_sp_nu_sp_mu$ )(?v2 A_b_c_sp_mu$ )(?v3 D_a_d_a_sp_nu_sp_mu$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a56 ))
(assert (! (forall ((?v0 C$ )(?v1 D_a_sp_nu$ )(?v2 C$ )(?v3 D_a_sp_nu$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a57 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 A_stream$ ))(! (= (run_mu$ (put$ ?v0 ?v1 )?v2 )(pair$f (pair$e ?v0 ?v1 )?v2 )):pattern ((run_mu$ (put$ ?v0 ?v1 )?v2 )))):named a58 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ )(?v2 D_stream$ ))(! (= (run_mu$a (put$a ?v0 ?v1 )?v2 )(pair$h (pair$g ?v0 ?v1 )?v2 )):pattern ((run_mu$a (put$a ?v0 ?v1 )?v2 )))):named a59 ))
(assert (! (forall ((?v0 B$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(! (= (run_mu$b (put$b ?v0 ?v1 )?v2 )(pair$j (pair$i ?v0 ?v1 )?v2 )):pattern ((run_mu$b (put$b ?v0 ?v1 )?v2 )))):named a60 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(= (fun_app$ (sp_mu_comp_rel$ ?v0 )?v1 )(or (exists ((?v2 A_a_b_c_sp_mu_fun$ )(?v3 A$ )(?v4 D_a_sp_nu$ ))(and (= ?v0 (pair$ (fun_app$ae ?v2 ?v3 )(out$ ?v4 )))(= ?v1 (pair$ (get$ ?v2 )(put$a ?v3 ?v4 )))))(exists ((?v2 A_a_b_c_sp_mu_fun$ )(?v3 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v4 D$ ))(and (= ?v0 (pair$ (get$ ?v2 )(fun_app$aa ?v3 ?v4 )))(= ?v1 (pair$ (get$ ?v2 )(get$a ?v3 )))))))):named a61 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$ (sp_mu_comp_rel$ ?v0 )?v1 )(and (forall ((?v2 A_a_b_c_sp_mu_fun$ )(?v3 A$ )(?v4 D_a_sp_nu$ ))(=> (and (= ?v0 (pair$ (fun_app$ae ?v2 ?v3 )(out$ ?v4 )))(= ?v1 (pair$ (get$ ?v2 )(put$a ?v3 ?v4 ))))false ))(forall ((?v2 A_a_b_c_sp_mu_fun$ )(?v3 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v4 D$ ))(=> (and (= ?v0 (pair$ (get$ ?v2 )(fun_app$aa ?v3 ?v4 )))(= ?v1 (pair$ (get$ ?v2 )(get$a ?v3 ))))false ))))false )):named a62 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 A$ )(?v2 D_a_sp_nu$ ))(fun_app$ (sp_mu_comp_rel$ (pair$ (fun_app$ae ?v0 ?v1 )(out$ ?v2 )))(pair$ (get$ ?v0 )(put$a ?v1 ?v2 )))):named a63 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_bool_fun$ )(?v2 B$ )(?v3 C$ ))(! (= (fun_app$g (fun_app$af (pred_sp_mu$ ?v0 )?v1 )(put$ ?v2 ?v3 ))(and (fun_app$ag ?v0 ?v2 )(fun_app$r ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$af (pred_sp_mu$ ?v0 )?v1 )(put$ ?v2 ?v3 ))))):named a64 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 D_a_sp_nu_bool_fun$ )(?v2 A$ )(?v3 D_a_sp_nu$ ))(! (= (fun_app$e (fun_app$ah (pred_sp_mu$a ?v0 )?v1 )(put$a ?v2 ?v3 ))(and (fun_app$ai ?v0 ?v2 )(fun_app$o ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$ah (pred_sp_mu$a ?v0 )?v1 )(put$a ?v2 ?v3 ))))):named a65 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_d_a_sp_nu_prod_bool_fun$ )(?v2 B$ )(?v3 C_d_a_sp_nu_prod$ ))(! (= (fun_app$aj (pred_sp_mu$b ?v0 ?v1 )(put$b ?v2 ?v3 ))(and (fun_app$ag ?v0 ?v2 )(fun_app$d ?v1 ?v3 ))):pattern ((fun_app$aj (pred_sp_mu$b ?v0 ?v1 )(put$b ?v2 ?v3 ))))):named a66 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 A$ )(?v2 D_a_sp_nu$ )(?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ ))(=> (sp_mu_comp_graph$ (pair$ (fun_app$ae ?v0 ?v1 )(out$ ?v2 ))(fun_app$z ?v3 (pair$ (fun_app$ae ?v0 ?v1 )(out$ ?v2 ))))(sp_mu_comp_graph$ (pair$ (get$ ?v0 )(put$a ?v1 ?v2 ))(fun_app$z ?v3 (pair$ (fun_app$ae ?v0 ?v1 )(out$ ?v2 )))))):named a67 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod$ ))(=> (forall ((?v1 B_c_prod$ )(?v2 A_stream$ ))(=> (= ?v0 (pair$f ?v1 ?v2 ))false ))false )):named a68 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod$ ))(=> (forall ((?v1 A_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(=> (= ?v0 (pair$h ?v1 ?v2 ))false ))false )):named a69 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod$ ))(=> (forall ((?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(=> (= ?v0 (pair$i ?v1 ?v2 ))false ))false )):named a70 ))
(assert (! (forall ((?v0 B_c_prod$ ))(=> (forall ((?v1 B$ )(?v2 C$ ))(=> (= ?v0 (pair$e ?v1 ?v2 ))false ))false )):named a71 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod$ ))(=> (forall ((?v1 A$ )(?v2 D_a_sp_nu$ ))(=> (= ?v0 (pair$g ?v1 ?v2 ))false ))false )):named a72 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(=> (forall ((?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a73 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ ))(=> (forall ((?v1 C$ )(?v2 D_a_sp_nu$ ))(=> (= ?v0 (pair$a ?v1 ?v2 ))false ))false )):named a74 ))
(assert (! (forall ((?v0 D_a_sp_nu$ )(?v1 D_a_sp_nu$ ))(=> (= (out$ ?v0 )(out$ ?v1 ))(= ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod$ ))(exists ((?v1 B_c_prod$ )(?v2 A_stream$ ))(= ?v0 (pair$f ?v1 ?v2 )))):named a76 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod$ ))(exists ((?v1 A_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(= ?v0 (pair$h ?v1 ?v2 )))):named a77 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod$ ))(exists ((?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(= ?v0 (pair$i ?v1 ?v2 )))):named a78 ))
(assert (! (forall ((?v0 B_c_prod$ ))(exists ((?v1 B$ )(?v2 C$ ))(= ?v0 (pair$e ?v1 ?v2 )))):named a79 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod$ ))(exists ((?v1 A$ )(?v2 D_a_sp_nu$ ))(= ?v0 (pair$g ?v1 ?v2 )))):named a80 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(exists ((?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a81 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ ))(exists ((?v1 C$ )(?v2 D_a_sp_nu$ ))(= ?v0 (pair$a ?v1 ?v2 )))):named a82 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 A_stream$ )(?v2 B_c_prod$ )(?v3 A_stream$ ))(=> (and (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a83 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod$ )(?v1 D_stream$ )(?v2 A_d_a_sp_nu_prod$ )(?v3 D_stream$ ))(=> (and (= (pair$h ?v0 ?v1 )(pair$h ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a84 ))
(assert (! (forall ((?v0 B$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 B$ )(?v3 C_d_a_sp_nu_prod$ ))(=> (and (= (pair$i ?v0 ?v1 )(pair$i ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a85 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(=> (and (= (pair$e ?v0 ?v1 )(pair$e ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a86 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ )(?v2 A$ )(?v3 D_a_sp_nu$ ))(=> (and (= (pair$g ?v0 ?v1 )(pair$g ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a87 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 D_a_d_a_sp_nu_sp_mu$ )(?v2 A_b_c_sp_mu$ )(?v3 D_a_d_a_sp_nu_sp_mu$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a88 ))
(assert (! (forall ((?v0 C$ )(?v1 D_a_sp_nu$ )(?v2 C$ )(?v3 D_a_sp_nu$ ))(=> (and (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a89 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod$ ))(=> (forall ((?v1 B_c_prod$ )(?v2 A_stream$ ))(=> (= ?v0 (pair$f ?v1 ?v2 ))false ))false )):named a90 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod$ ))(=> (forall ((?v1 A_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(=> (= ?v0 (pair$h ?v1 ?v2 ))false ))false )):named a91 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod$ ))(=> (forall ((?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(=> (= ?v0 (pair$i ?v1 ?v2 ))false ))false )):named a92 ))
(assert (! (forall ((?v0 B_c_prod$ ))(=> (forall ((?v1 B$ )(?v2 C$ ))(=> (= ?v0 (pair$e ?v1 ?v2 ))false ))false )):named a93 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod$ ))(=> (forall ((?v1 A$ )(?v2 D_a_sp_nu$ ))(=> (= ?v0 (pair$g ?v1 ?v2 ))false ))false )):named a94 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(=> (forall ((?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a95 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ ))(=> (forall ((?v1 C$ )(?v2 D_a_sp_nu$ ))(=> (= ?v0 (pair$a ?v1 ?v2 ))false ))false )):named a96 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod_bool_fun$ )(?v1 B_c_prod_a_stream_prod$ ))(=> (forall ((?v2 B_c_prod$ )(?v3 A_stream$ ))(fun_app$ak ?v0 (pair$f ?v2 ?v3 )))(fun_app$ak ?v0 ?v1 ))):named a97 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod_bool_fun$ )(?v1 A_d_a_sp_nu_prod_d_stream_prod$ ))(=> (forall ((?v2 A_d_a_sp_nu_prod$ )(?v3 D_stream$ ))(fun_app$al ?v0 (pair$h ?v2 ?v3 )))(fun_app$al ?v0 ?v1 ))):named a98 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod_bool_fun$ )(?v1 B_c_d_a_sp_nu_prod_prod$ ))(=> (forall ((?v2 B$ )(?v3 C_d_a_sp_nu_prod$ ))(fun_app$am ?v0 (pair$i ?v2 ?v3 )))(fun_app$am ?v0 ?v1 ))):named a99 ))
(assert (! (forall ((?v0 B_c_prod_bool_fun$ )(?v1 B_c_prod$ ))(=> (forall ((?v2 B$ )(?v3 C$ ))(fun_app$an ?v0 (pair$e ?v2 ?v3 )))(fun_app$an ?v0 ?v1 ))):named a100 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_bool_fun$ )(?v1 A_d_a_sp_nu_prod$ ))(=> (forall ((?v2 A$ )(?v3 D_a_sp_nu$ ))(fun_app$ao ?v0 (pair$g ?v2 ?v3 )))(fun_app$ao ?v0 ?v1 ))):named a101 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(=> (forall ((?v2 A_b_c_sp_mu$ )(?v3 D_a_d_a_sp_nu_sp_mu$ ))(fun_app$ ?v0 (pair$ ?v2 ?v3 )))(fun_app$ ?v0 ?v1 ))):named a102 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_bool_fun$ )(?v1 C_d_a_sp_nu_prod$ ))(=> (forall ((?v2 C$ )(?v3 D_a_sp_nu$ ))(fun_app$d ?v0 (pair$a ?v2 ?v3 )))(fun_app$d ?v0 ?v1 ))):named a103 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod$ ))(=> (forall ((?v1 B$ )(?v2 C$ )(?v3 D_a_sp_nu$ ))(=> (= ?v0 (pair$i ?v1 (pair$a ?v2 ?v3 )))false ))false )):named a104 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod_bool_fun$ )(?v1 B_c_d_a_sp_nu_prod_prod$ ))(=> (forall ((?v2 B$ )(?v3 C$ )(?v4 D_a_sp_nu$ ))(fun_app$am ?v0 (pair$i ?v2 (pair$a ?v3 ?v4 ))))(fun_app$am ?v0 ?v1 ))):named a105 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(sp_mu_comp_graph$ (pair$ (put$ ?v0 ?v1 )?v2 )(put$b ?v0 (pair$a ?v1 (in$ ?v2 ))))):named a106 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_bool_fun$ )(?v2 A_a_b_c_sp_mu_fun$ ))(! (= (fun_app$g (fun_app$af (pred_sp_mu$ ?v0 )?v1 )(get$ ?v2 ))(pred_fun$ (fun_app$af (pred_sp_mu$ ?v0 )?v1 )?v2 )):pattern ((fun_app$g (fun_app$af (pred_sp_mu$ ?v0 )?v1 )(get$ ?v2 ))))):named a107 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 D_a_sp_nu_bool_fun$ )(?v2 D_d_a_d_a_sp_nu_sp_mu_fun$ ))(! (= (fun_app$e (fun_app$ah (pred_sp_mu$a ?v0 )?v1 )(get$a ?v2 ))(pred_fun$a (fun_app$ah (pred_sp_mu$a ?v0 )?v1 )?v2 )):pattern ((fun_app$e (fun_app$ah (pred_sp_mu$a ?v0 )?v1 )(get$a ?v2 ))))):named a108 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_d_a_sp_nu_prod_bool_fun$ )(?v2 D_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ ))(! (= (fun_app$aj (pred_sp_mu$b ?v0 ?v1 )(get$b ?v2 ))(pred_fun$b (pred_sp_mu$b ?v0 ?v1 )?v2 )):pattern ((fun_app$aj (pred_sp_mu$b ?v0 ?v1 )(get$b ?v2 ))))):named a109 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 D_b_c_d_a_sp_nu_prod_sp_mu$ ))(=> (and (sp_mu_comp_graph$ ?v0 ?v1 )(and (forall ((?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v3 B$ )(?v4 C$ )(?v5 D_a_d_a_sp_nu_sp_mu$ ))(=> (and (= ?v0 (pair$ (put$ ?v3 ?v4 )?v5 ))(= ?v1 (put$b ?v3 (pair$a ?v4 (in$ ?v5 )))))false ))(and (forall ((?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v3 A_a_b_c_sp_mu_fun$ )(?v4 A$ )(?v5 D_a_sp_nu$ ))(=> (and (= ?v0 (pair$ (get$ ?v3 )(put$a ?v4 ?v5 )))(and (= ?v1 (fun_app$z ?v2 (pair$ (fun_app$ae ?v3 ?v4 )(out$ ?v5 ))))(sp_mu_comp_graph$ (pair$ (fun_app$ae ?v3 ?v4 )(out$ ?v5 ))(fun_app$z ?v2 (pair$ (fun_app$ae ?v3 ?v4 )(out$ ?v5 ))))))false ))(forall ((?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v3 A_a_b_c_sp_mu_fun$ )(?v4 D_d_a_d_a_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 (pair$ (get$ ?v3 )(get$a ?v4 )))(and (= ?v1 (get$b (fun_app$x (fun_app$y (uu$ ?v2 )?v3 )?v4 )))(forall ((?v5 D$ ))(sp_mu_comp_graph$ (pair$ (get$ ?v3 )(fun_app$aa ?v4 ?v5 ))(fun_app$z ?v2 (pair$ (get$ ?v3 )(fun_app$aa ?v4 ?v5 )))))))false )))))false )):named a110 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 D_b_c_d_a_sp_nu_prod_sp_mu$ ))(= (sp_mu_comp_graph$ ?v0 ?v1 )(or (exists ((?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v3 B$ )(?v4 C$ )(?v5 D_a_d_a_sp_nu_sp_mu$ ))(and (= ?v0 (pair$ (put$ ?v3 ?v4 )?v5 ))(= ?v1 (put$b ?v3 (pair$a ?v4 (in$ ?v5 ))))))(or (exists ((?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v3 A_a_b_c_sp_mu_fun$ )(?v4 A$ )(?v5 D_a_sp_nu$ ))(and (= ?v0 (pair$ (get$ ?v3 )(put$a ?v4 ?v5 )))(and (= ?v1 (fun_app$z ?v2 (pair$ (fun_app$ae ?v3 ?v4 )(out$ ?v5 ))))(sp_mu_comp_graph$ (pair$ (fun_app$ae ?v3 ?v4 )(out$ ?v5 ))(fun_app$z ?v2 (pair$ (fun_app$ae ?v3 ?v4 )(out$ ?v5 )))))))(exists ((?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ )(?v3 A_a_b_c_sp_mu_fun$ )(?v4 D_d_a_d_a_sp_nu_sp_mu_fun$ ))(and (= ?v0 (pair$ (get$ ?v3 )(get$a ?v4 )))(and (= ?v1 (get$b (fun_app$x (fun_app$y (uu$ ?v2 )?v3 )?v4 )))(forall ((?v5 D$ ))(sp_mu_comp_graph$ (pair$ (get$ ?v3 )(fun_app$aa ?v4 ?v5 ))(fun_app$z ?v2 (pair$ (get$ ?v3 )(fun_app$aa ?v4 ?v5 )))))))))))):named a111 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_fun$ )(?v1 D_d_a_d_a_sp_nu_sp_mu_fun$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_d_b_c_d_a_sp_nu_prod_sp_mu_fun$ ))(=> (forall ((?v3 D$ ))(sp_mu_comp_graph$ (pair$ (get$ ?v0 )(fun_app$aa ?v1 ?v3 ))(fun_app$z ?v2 (pair$ (get$ ?v0 )(fun_app$aa ?v1 ?v3 )))))(sp_mu_comp_graph$ (pair$ (get$ ?v0 )(get$a ?v1 ))(get$b (fun_app$ab (fun_app$ac (uua$ ?v0 )?v1 )?v2 ))))):named a112 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 A_b_c_sp_mu$ )(?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v3 A_b_c_sp_mu$ ))(=> (and (member$a (pair$b ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$a (pair$b ?v0 ?v3 )?v2 ))):named a113 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(=> (and (member$b (pair$k ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$b (pair$k ?v0 ?v3 )?v2 ))):named a114 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v3 C_d_a_sp_nu_prod$ ))(=> (and (member$c (pair$l ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$c (pair$l ?v0 ?v3 )?v2 ))):named a115 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 A_stream$ )(?v2 B_c_prod_a_stream_prod_set$ )(?v3 A_stream$ ))(=> (and (member$e (pair$f ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$e (pair$f ?v0 ?v3 )?v2 ))):named a116 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod$ )(?v1 D_stream$ )(?v2 A_d_a_sp_nu_prod_d_stream_prod_set$ )(?v3 D_stream$ ))(=> (and (member$f (pair$h ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$f (pair$h ?v0 ?v3 )?v2 ))):named a117 ))
(assert (! (forall ((?v0 B$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 B_c_d_a_sp_nu_prod_prod_set$ )(?v3 C_d_a_sp_nu_prod$ ))(=> (and (member$g (pair$i ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$g (pair$i ?v0 ?v3 )?v2 ))):named a118 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B_c_prod_set$ )(?v3 C$ ))(=> (and (member$h (pair$e ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$h (pair$e ?v0 ?v3 )?v2 ))):named a119 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ )(?v2 A_d_a_sp_nu_prod_set$ )(?v3 D_a_sp_nu$ ))(=> (and (member$i (pair$g ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$i (pair$g ?v0 ?v3 )?v2 ))):named a120 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 D_a_d_a_sp_nu_sp_mu$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )(?v3 D_a_d_a_sp_nu_sp_mu$ ))(=> (and (member$ (pair$ ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$ (pair$ ?v0 ?v3 )?v2 ))):named a121 ))
(assert (! (forall ((?v0 C$ )(?v1 D_a_sp_nu$ )(?v2 C_d_a_sp_nu_prod_set$ )(?v3 D_a_sp_nu$ ))(=> (and (member$d (pair$a ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$d (pair$a ?v0 ?v3 )?v2 ))):named a122 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 D_a_sp_nu$ ))(! (= (fun_app$o (fun_app$p (curry$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$p (curry$ ?v0 )?v1 )?v2 )))):named a123 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(! (= (fun_app$e (fun_app$f (curry$a ?v0 )?v1 )?v2 )(fun_app$ ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (curry$a ?v0 )?v1 )?v2 )))):named a124 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 D_a_sp_nu$ ))(! (= (case_sp_nu$ ?v0 ?v1 )(fun_app$ad ?v0 (out$ ?v1 ))):pattern ((case_sp_nu$ ?v0 ?v1 )))):named a125 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod_bool_fun$ )(?v1 B_c_prod$ )(?v2 A_stream$ ))(=> (fun_app$ak ?v0 (pair$f ?v1 ?v2 ))(curry$b ?v0 ?v1 ?v2 ))):named a126 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod_bool_fun$ )(?v1 A_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(=> (fun_app$al ?v0 (pair$h ?v1 ?v2 ))(curry$c ?v0 ?v1 ?v2 ))):named a127 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod_bool_fun$ )(?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(=> (fun_app$am ?v0 (pair$i ?v1 ?v2 ))(fun_app$d (fun_app$q (curry$d ?v0 )?v1 )?v2 ))):named a128 ))
(assert (! (forall ((?v0 B_c_prod_bool_fun$ )(?v1 B$ )(?v2 C$ ))(=> (fun_app$an ?v0 (pair$e ?v1 ?v2 ))(fun_app$r (fun_app$s (curry$e ?v0 )?v1 )?v2 ))):named a129 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_bool_fun$ )(?v1 A$ )(?v2 D_a_sp_nu$ ))(=> (fun_app$ao ?v0 (pair$g ?v1 ?v2 ))(fun_app$o (fun_app$t (curry$f ?v0 )?v1 )?v2 ))):named a130 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(=> (fun_app$ ?v0 (pair$ ?v1 ?v2 ))(fun_app$e (fun_app$f (curry$a ?v0 )?v1 )?v2 ))):named a131 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 D_a_sp_nu$ ))(=> (fun_app$d ?v0 (pair$a ?v1 ?v2 ))(fun_app$o (fun_app$p (curry$ ?v0 )?v1 )?v2 ))):named a132 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu$ )(?v1 D_a_d_a_sp_nu_sp_mu$ ))(= (= (in$ ?v0 )(in$ ?v1 ))(= ?v0 ?v1 ))):named a133 ))
(assert (! (forall ((?v0 D_a_sp_nu$ ))(= (in$ (out$ ?v0 ))?v0 )):named a134 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ ))(= (collect$ (uub$ ?v0 ))?v0 )):named a135 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ ))(= (collect$a (uuc$ ?v0 ))?v0 )):named a136 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ ))(= (collect$b (uud$ ?v0 ))?v0 )):named a137 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ ))(= (collect$c (uue$ ?v0 ))?v0 )):named a138 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_set$ ))(= (collect$d (uuf$ ?v0 ))?v0 )):named a139 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$ ?v1 ?v0 ))):named a140 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$ )(?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_bool_fun$ ))(= (member$a ?v0 (collect$a ?v1 ))(fun_app$a ?v1 ?v0 ))):named a141 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_bool_fun$ ))(= (member$b ?v0 (collect$b ?v1 ))(fun_app$b ?v1 ?v0 ))):named a142 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_bool_fun$ ))(= (member$c ?v0 (collect$c ?v1 ))(fun_app$c ?v1 ?v0 ))):named a143 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod_bool_fun$ ))(= (member$d ?v0 (collect$d ?v1 ))(fun_app$d ?v1 ?v0 ))):named a144 ))
(assert (! (forall ((?v0 D_a_sp_nu$ ))(= (out$ ?v0 )(case_sp_nu$ uug$ ?v0 ))):named a145 ))
(assert (! (forall ((?v0 Bool )(?v1 C$ )(?v2 D_a_sp_nu$ ))(= (fun_app$o (fun_app$p (curry$ (uuh$ ?v0 ))?v1 )?v2 )?v0 )):named a146 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(= (fun_app$e (fun_app$f (curry$a (uui$ ?v0 ))?v1 )?v2 )?v0 )):named a147 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 D_a_sp_nu$ ))(! (= (fun_app$o (fun_app$p (curry$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$p (curry$ ?v0 )?v1 )?v2 )))):named a148 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(! (= (fun_app$e (fun_app$f (curry$a ?v0 )?v1 )?v2 )(fun_app$ ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (curry$a ?v0 )?v1 )?v2 )))):named a149 ))
(assert (! (forall ((?v0 D_a_sp_nu$ ))(=> (forall ((?v1 D_a_d_a_sp_nu_sp_mu$ ))(=> (= ?v0 (in$ ?v1 ))false ))false )):named a150 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 D_a_d_a_sp_nu_sp_mu$ ))(! (= (case_sp_nu$ ?v0 (in$ ?v1 ))(fun_app$ad ?v0 ?v1 )):pattern ((case_sp_nu$ ?v0 (in$ ?v1 ))))):named a151 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu_bool_fun$ )(?v1 D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ )(?v2 D_a_sp_nu$ ))(= (fun_app$e ?v0 (case_sp_nu$ ?v1 ?v2 ))(=> (= ?v2 (in$ (out$ ?v2 )))(fun_app$e ?v0 (fun_app$ad ?v1 (out$ ?v2 )))))):named a152 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu_bool_fun$ )(?v1 D_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_fun$ )(?v2 D_a_sp_nu$ ))(= (fun_app$e ?v0 (case_sp_nu$ ?v1 ?v2 ))(not (and (= ?v2 (in$ (out$ ?v2 )))(not (fun_app$e ?v0 (fun_app$ad ?v1 (out$ ?v2 )))))))):named a153 ))
(assert (! (forall ((?v0 D_a_sp_nu$ ))(=> (=> (= ?v0 (in$ (out$ ?v0 )))false )false )):named a154 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu$ ))(! (= (out$ (in$ ?v0 ))?v0 ):pattern ((in$ ?v0 )))):named a155 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod_bool_fun$ )(?v1 B_c_prod$ )(?v2 A_stream$ ))(=> (and (curry$b ?v0 ?v1 ?v2 )(=> (fun_app$ak ?v0 (pair$f ?v1 ?v2 ))false ))false )):named a156 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod_bool_fun$ )(?v1 A_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(=> (and (curry$c ?v0 ?v1 ?v2 )(=> (fun_app$al ?v0 (pair$h ?v1 ?v2 ))false ))false )):named a157 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod_bool_fun$ )(?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(=> (and (fun_app$d (fun_app$q (curry$d ?v0 )?v1 )?v2 )(=> (fun_app$am ?v0 (pair$i ?v1 ?v2 ))false ))false )):named a158 ))
(assert (! (forall ((?v0 B_c_prod_bool_fun$ )(?v1 B$ )(?v2 C$ ))(=> (and (fun_app$r (fun_app$s (curry$e ?v0 )?v1 )?v2 )(=> (fun_app$an ?v0 (pair$e ?v1 ?v2 ))false ))false )):named a159 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_bool_fun$ )(?v1 A$ )(?v2 D_a_sp_nu$ ))(=> (and (fun_app$o (fun_app$t (curry$f ?v0 )?v1 )?v2 )(=> (fun_app$ao ?v0 (pair$g ?v1 ?v2 ))false ))false )):named a160 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(=> (and (fun_app$e (fun_app$f (curry$a ?v0 )?v1 )?v2 )(=> (fun_app$ ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a161 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 D_a_sp_nu$ ))(=> (and (fun_app$o (fun_app$p (curry$ ?v0 )?v1 )?v2 )(=> (fun_app$d ?v0 (pair$a ?v1 ?v2 ))false ))false )):named a162 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod_bool_fun$ )(?v1 B_c_prod$ )(?v2 A_stream$ ))(=> (curry$b ?v0 ?v1 ?v2 )(fun_app$ak ?v0 (pair$f ?v1 ?v2 )))):named a163 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod_bool_fun$ )(?v1 A_d_a_sp_nu_prod$ )(?v2 D_stream$ ))(=> (curry$c ?v0 ?v1 ?v2 )(fun_app$al ?v0 (pair$h ?v1 ?v2 )))):named a164 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod_bool_fun$ )(?v1 B$ )(?v2 C_d_a_sp_nu_prod$ ))(=> (fun_app$d (fun_app$q (curry$d ?v0 )?v1 )?v2 )(fun_app$am ?v0 (pair$i ?v1 ?v2 )))):named a165 ))
(assert (! (forall ((?v0 B_c_prod_bool_fun$ )(?v1 B$ )(?v2 C$ ))(=> (fun_app$r (fun_app$s (curry$e ?v0 )?v1 )?v2 )(fun_app$an ?v0 (pair$e ?v1 ?v2 )))):named a166 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_bool_fun$ )(?v1 A$ )(?v2 D_a_sp_nu$ ))(=> (fun_app$o (fun_app$t (curry$f ?v0 )?v1 )?v2 )(fun_app$ao ?v0 (pair$g ?v1 ?v2 )))):named a167 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_bool_fun$ )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ ))(=> (fun_app$e (fun_app$f (curry$a ?v0 )?v1 )?v2 )(fun_app$ ?v0 (pair$ ?v1 ?v2 )))):named a168 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 D_a_sp_nu$ ))(=> (fun_app$o (fun_app$p (curry$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 (pair$a ?v1 ?v2 )))):named a169 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 D_a_d_a_sp_nu_sp_mu$ ))(! (= (fun_app$o (pred_sp_nu$ ?v0 )(in$ ?v1 ))(fun_app$e (fun_app$ah (pred_sp_mu$a ?v0 )(pred_sp_nu$ ?v0 ))?v1 )):pattern ((fun_app$o (pred_sp_nu$ ?v0 )(in$ ?v1 ))))):named a170 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ ))(= (= (uuj$ ?v0 )(uuj$ ?v1 ))(= ?v0 ?v1 ))):named a171 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ ))(= (= (uuk$ ?v0 )(uuk$ ?v1 ))(= ?v0 ?v1 ))):named a172 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ ))(= (= (uul$ ?v0 )(uul$ ?v1 ))(= ?v0 ?v1 ))):named a173 ))
(assert (! (forall ((?v0 B_c_prod_a_stream_prod_set$ )(?v1 B_c_prod_a_stream_prod_set$ ))(= (= (uum$ ?v0 )(uum$ ?v1 ))(= ?v0 ?v1 ))):named a174 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_d_stream_prod_set$ )(?v1 A_d_a_sp_nu_prod_d_stream_prod_set$ ))(= (= (uun$ ?v0 )(uun$ ?v1 ))(= ?v0 ?v1 ))):named a175 ))
(assert (! (forall ((?v0 B_c_d_a_sp_nu_prod_prod_set$ )(?v1 B_c_d_a_sp_nu_prod_prod_set$ ))(= (= (uuo$ ?v0 )(uuo$ ?v1 ))(= ?v0 ?v1 ))):named a176 ))
(assert (! (forall ((?v0 B_c_prod_set$ )(?v1 B_c_prod_set$ ))(= (= (uup$ ?v0 )(uup$ ?v1 ))(= ?v0 ?v1 ))):named a177 ))
(assert (! (forall ((?v0 A_d_a_sp_nu_prod_set$ )(?v1 A_d_a_sp_nu_prod_set$ ))(= (= (uuq$ ?v0 )(uuq$ ?v1 ))(= ?v0 ?v1 ))):named a178 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ ))(= (= (uur$ ?v0 )(uur$ ?v1 ))(= ?v0 ?v1 ))):named a179 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_set$ )(?v1 C_d_a_sp_nu_prod_set$ ))(= (= (uus$ ?v0 )(uus$ ?v1 ))(= ?v0 ?v1 ))):named a180 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu$ ))(= (above$ ?v0 ?v1 )(collect$e (fun_app$h (uuj$ ?v0 )?v1 )))):named a181 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(= (above$a ?v0 ?v1 )(collect$ (fun_app$i (uuk$ ?v0 )?v1 )))):named a182 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v1 C_d_a_sp_nu_prod$ ))(= (above$b ?v0 ?v1 )(collect$d (fun_app$j (uul$ ?v0 )?v1 )))):named a183 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v1 A_b_c_sp_mu$ ))(= (aboveS$ ?v0 ?v1 )(collect$e (fun_app$h (uut$ ?v0 )?v1 )))):named a184 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(= (aboveS$a ?v0 ?v1 )(collect$ (fun_app$i (uuu$ ?v0 )?v1 )))):named a185 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v1 C_d_a_sp_nu_prod$ ))(= (aboveS$b ?v0 ?v1 )(collect$d (fun_app$j (uuv$ ?v0 )?v1 )))):named a186 ))
(assert (! (forall ((?v0 D_a_sp_nu$ )(?v1 C$ ))(= (fun_app$ap swap$ (pair$m ?v0 ?v1 ))(pair$a ?v1 ?v0 ))):named a187 ))
(assert (! (forall ((?v0 C$ )(?v1 D_a_sp_nu$ ))(= (fun_app$aq swap$a (pair$a ?v0 ?v1 ))(pair$m ?v1 ?v0 ))):named a188 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu$ )(?v1 A_b_c_sp_mu$ ))(= (fun_app$ar swap$b (pair$n ?v0 ?v1 ))(pair$ ?v1 ?v0 ))):named a189 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 D_a_d_a_sp_nu_sp_mu$ ))(= (fun_app$as swap$c (pair$ ?v0 ?v1 ))(pair$n ?v1 ?v0 ))):named a190 ))
(assert (! (forall ((?v0 C$ )(?v1 B$ ))(= (fun_app$at swap$d (pair$o ?v0 ?v1 ))(pair$e ?v1 ?v0 ))):named a191 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ ))(= (fun_app$au swap$e (pair$e ?v0 ?v1 ))(pair$o ?v1 ?v0 ))):named a192 ))
(assert (! (forall ((?v0 D_a_sp_nu$ )(?v1 A$ ))(= (fun_app$av swap$f (pair$p ?v0 ?v1 ))(pair$g ?v1 ?v0 ))):named a193 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ ))(= (fun_app$aw swap$g (pair$g ?v0 ?v1 ))(pair$p ?v1 ?v0 ))):named a194 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 B_c_prod$ ))(= (fun_app$ax swap$h (pair$q ?v0 ?v1 ))(pair$f ?v1 ?v0 ))):named a195 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 A_stream$ ))(= (fun_app$ay swap$i (pair$f ?v0 ?v1 ))(pair$q ?v1 ?v0 ))):named a196 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 B_c_d_a_d_a_sp_nu_sp_mu_fun_fun$ )(?v2 B$ )(?v3 C$ ))(! (= (rec_sp_mu$ ?v0 ?v1 (put$ ?v2 ?v3 ))(fun_app$az (fun_app$ba ?v1 ?v2 )?v3 )):pattern ((rec_sp_mu$ ?v0 ?v1 (put$ ?v2 ?v3 ))))):named a197 ))
(assert (! (forall ((?v0 D_a_sp_nu_c_prod$ ))(= (fun_app$aq swap$a (fun_app$ap swap$ ?v0 ))?v0 )):named a198 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod$ ))(= (fun_app$as swap$c (fun_app$ar swap$b ?v0 ))?v0 )):named a199 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ ))(= (fun_app$ap swap$ (fun_app$aq swap$a ?v0 ))?v0 )):named a200 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(= (fun_app$ar swap$b (fun_app$as swap$c ?v0 ))?v0 )):named a201 ))
(assert (! (forall ((?v0 A_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun_d_a_d_a_sp_nu_sp_mu_fun$ )(?v1 B_c_d_a_d_a_sp_nu_sp_mu_fun_fun$ )(?v2 A_a_b_c_sp_mu_fun$ ))(= (rec_sp_mu$ ?v0 ?v1 (get$ ?v2 ))(fun_app$bb ?v0 (comp$ (fun_app$v (uuw$ ?v0 )?v1 )?v2 )))):named a202 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 A_b_c_sp_mu$ )(?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v3 A_b_c_sp_mu_a_b_c_sp_mu_fun$ ))(= (member$a (pair$b ?v0 ?v1 )(inv_image$ ?v2 ?v3 ))(member$a (pair$b (fun_app$bc ?v3 ?v0 )(fun_app$bc ?v3 ?v1 ))?v2 ))):named a203 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 A_b_c_sp_mu$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v3 A_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ ))(= (member$a (pair$b ?v0 ?v1 )(inv_image$a ?v2 ?v3 ))(member$b (pair$k (fun_app$u ?v3 ?v0 )(fun_app$u ?v3 ?v1 ))?v2 ))):named a204 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 A_b_c_sp_mu$ )(?v2 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v3 A_b_c_sp_mu_c_d_a_sp_nu_prod_fun$ ))(= (member$a (pair$b ?v0 ?v1 )(inv_image$b ?v2 ?v3 ))(member$c (pair$l (fun_app$bd ?v3 ?v0 )(fun_app$bd ?v3 ?v1 ))?v2 ))):named a205 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_fun$ ))(= (member$b (pair$k ?v0 ?v1 )(inv_image$c ?v2 ?v3 ))(member$a (pair$b (fun_app$be ?v3 ?v0 )(fun_app$be ?v3 ?v1 ))?v2 ))):named a206 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ ))(= (member$b (pair$k ?v0 ?v1 )(inv_image$d ?v2 ?v3 ))(member$b (pair$k (fun_app$bf ?v3 ?v0 )(fun_app$bf ?v3 ?v1 ))?v2 ))):named a207 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v2 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_c_d_a_sp_nu_prod_fun$ ))(= (member$b (pair$k ?v0 ?v1 )(inv_image$e ?v2 ?v3 ))(member$c (pair$l (fun_app$bg ?v3 ?v0 )(fun_app$bg ?v3 ?v1 ))?v2 ))):named a208 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ )(?v3 C_d_a_sp_nu_prod_a_b_c_sp_mu_fun$ ))(= (member$c (pair$l ?v0 ?v1 )(inv_image$f ?v2 ?v3 ))(member$a (pair$b (fun_app$bh ?v3 ?v0 )(fun_app$bh ?v3 ?v1 ))?v2 ))):named a209 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ )(?v3 C_d_a_sp_nu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ ))(= (member$c (pair$l ?v0 ?v1 )(inv_image$g ?v2 ?v3 ))(member$b (pair$k (fun_app$bi ?v3 ?v0 )(fun_app$bi ?v3 ?v1 ))?v2 ))):named a210 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod$ )(?v2 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ )(?v3 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_fun$ ))(= (member$c (pair$l ?v0 ?v1 )(inv_image$h ?v2 ?v3 ))(member$c (pair$l (fun_app$bj ?v3 ?v0 )(fun_app$bj ?v3 ?v1 ))?v2 ))):named a211 ))
(assert (! (forall ((?v0 D_a_sp_nu$ )(?v1 C$ )(?v2 C_d_a_sp_nu_prod_set$ ))(= (member$l (pair$m ?v0 ?v1 )(image$ swap$a ?v2 ))(member$d (pair$a ?v1 ?v0 )?v2 ))):named a212 ))
(assert (! (forall ((?v0 C$ )(?v1 D_a_sp_nu$ )(?v2 D_a_sp_nu_c_prod_set$ ))(= (member$d (pair$a ?v0 ?v1 )(image$a swap$ ?v2 ))(member$l (pair$m ?v1 ?v0 )?v2 ))):named a213 ))
(assert (! (forall ((?v0 D_a_d_a_sp_nu_sp_mu$ )(?v1 A_b_c_sp_mu$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ ))(= (member$m (pair$n ?v0 ?v1 )(image$b swap$c ?v2 ))(member$ (pair$ ?v1 ?v0 )?v2 ))):named a214 ))
(assert (! (forall ((?v0 A_b_c_sp_mu$ )(?v1 D_a_d_a_sp_nu_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu_a_b_c_sp_mu_prod_set$ ))(= (member$ (pair$ ?v0 ?v1 )(image$c swap$b ?v2 ))(member$m (pair$n ?v1 ?v0 )?v2 ))):named a215 ))
(assert (! (forall ((?v0 C$ )(?v1 B$ )(?v2 B_c_prod_set$ ))(= (member$n (pair$o ?v0 ?v1 )(image$d swap$e ?v2 ))(member$h (pair$e ?v1 ?v0 )?v2 ))):named a216 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 C_b_prod_set$ ))(= (member$h (pair$e ?v0 ?v1 )(image$e swap$d ?v2 ))(member$n (pair$o ?v1 ?v0 )?v2 ))):named a217 ))
(assert (! (forall ((?v0 D_a_sp_nu$ )(?v1 A$ )(?v2 A_d_a_sp_nu_prod_set$ ))(= (member$o (pair$p ?v0 ?v1 )(image$f swap$g ?v2 ))(member$i (pair$g ?v1 ?v0 )?v2 ))):named a218 ))
(assert (! (forall ((?v0 A$ )(?v1 D_a_sp_nu$ )(?v2 D_a_sp_nu_a_prod_set$ ))(= (member$i (pair$g ?v0 ?v1 )(image$g swap$f ?v2 ))(member$o (pair$p ?v1 ?v0 )?v2 ))):named a219 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 B_c_prod$ )(?v2 B_c_prod_a_stream_prod_set$ ))(= (member$p (pair$q ?v0 ?v1 )(image$h swap$i ?v2 ))(member$e (pair$f ?v1 ?v0 )?v2 ))):named a220 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 A_stream$ )(?v2 A_stream_b_c_prod_prod_set$ ))(= (member$e (pair$f ?v0 ?v1 )(image$i swap$h ?v2 ))(member$p (pair$q ?v1 ?v0 )?v2 ))):named a221 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )(?v1 A_a_b_c_sp_mu_fun$ )(?v2 A$ ))(! (= (fun_app$bk (comp$ ?v0 ?v1 )?v2 )(fun_app$u ?v0 (fun_app$ae ?v1 ?v2 ))):pattern ((fun_app$bk (comp$ ?v0 ?v1 )?v2 )))):named a222 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 D_a_sp_nu_c_prod_c_d_a_sp_nu_prod_fun$ )(?v2 D_a_sp_nu_c_prod$ )(?v3 D_a_sp_nu_c_prod_set$ ))(=> (and (= ?v0 (fun_app$ap ?v1 ?v2 ))(member$l ?v2 ?v3 ))(member$d ?v0 (image$a ?v1 ?v3 )))):named a223 ))
(assert (! (forall ((?v0 D_a_sp_nu_c_prod$ )(?v1 C_d_a_sp_nu_prod_d_a_sp_nu_c_prod_fun$ )(?v2 C_d_a_sp_nu_prod$ )(?v3 C_d_a_sp_nu_prod_set$ ))(=> (and (= ?v0 (fun_app$aq ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$l ?v0 (image$ ?v1 ?v3 )))):named a224 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_fun$ )(?v2 C_d_a_sp_nu_prod$ )(?v3 C_d_a_sp_nu_prod_set$ ))(=> (and (= ?v0 (fun_app$bj ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$d ?v0 (image$j ?v1 ?v3 )))):named a225 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_c_d_a_sp_nu_prod_fun$ )(?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod$ )(?v3 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ ))(=> (and (= ?v0 (fun_app$bl ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$d ?v0 (image$k ?v1 ?v3 )))):named a226 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$ )(?v1 C_d_a_sp_nu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ )(?v2 C_d_a_sp_nu_prod$ )(?v3 C_d_a_sp_nu_prod_set$ ))(=> (and (= ?v0 (fun_app$bm ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$a ?v0 (image$l ?v1 ?v3 )))):named a227 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_c_d_a_sp_nu_prod_fun$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ ))(=> (and (= ?v0 (fun_app$bg ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$d ?v0 (image$m ?v1 ?v3 )))):named a228 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_c_d_a_sp_nu_prod_fun$ )(?v2 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ )(?v3 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ ))(=> (and (= ?v0 (fun_app$bn ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$d ?v0 (image$n ?v1 ?v3 )))):named a229 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ )(?v1 C_d_a_sp_nu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_fun$ )(?v2 C_d_a_sp_nu_prod$ )(?v3 C_d_a_sp_nu_prod_set$ ))(=> (and (= ?v0 (fun_app$bi ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$ ?v0 (image$o ?v1 ?v3 )))):named a230 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_fun$ )(?v2 C_d_a_sp_nu_prod$ )(?v3 C_d_a_sp_nu_prod_set$ ))(=> (and (= ?v0 (fun_app$bo ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$c ?v0 (image$p ?v1 ?v3 )))):named a231 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_a_b_c_sp_mu_prod$ )(?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_a_b_c_sp_mu_a_b_c_sp_mu_prod_fun$ )(?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod$ )(?v3 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ ))(=> (and (= ?v0 (fun_app$bp ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$q ?v1 ?v3 )))):named a232 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_fun$ )(?v2 C_d_a_sp_nu_prod_set$ ))(= (member$c ?v0 (image$p ?v1 ?v2 ))(exists ((?v3 C_d_a_sp_nu_prod$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$bo ?v1 ?v3 )))))):named a233 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 D_a_sp_nu_c_prod_c_d_a_sp_nu_prod_fun$ )(?v2 D_a_sp_nu_c_prod_set$ ))(= (member$d ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 D_a_sp_nu_c_prod$ ))(and (member$l ?v3 ?v2 )(= ?v0 (fun_app$ap ?v1 ?v3 )))))):named a234 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_c_d_a_sp_nu_prod_fun$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set$ ))(= (member$d ?v0 (image$m ?v1 ?v2 ))(exists ((?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$bg ?v1 ?v3 )))))):named a235 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 A_b_c_sp_mu_a_b_c_sp_mu_prod_c_d_a_sp_nu_prod_fun$ )(?v2 A_b_c_sp_mu_a_b_c_sp_mu_prod_set$ ))(= (member$d ?v0 (image$k ?v1 ?v2 ))(exists ((?v3 A_b_c_sp_mu_a_b_c_sp_mu_prod$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$bl ?v1 ?v3 )))))):named a236 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_c_d_a_sp_nu_prod_fun$ )(?v2 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod_set$ ))(= (member$d ?v0 (image$r ?v1 ?v2 ))(exists ((?v3 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_a_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_prod$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$bq ?v1 ?v3 )))))):named a237 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_c_d_a_sp_nu_prod_fun$ )(?v2 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod_set$ ))(= (member$d ?v0 (image$n ?v1 ?v2 ))(exists ((?v3 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_prod$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$bn ?v1 ?v3 )))))):named a238 ))
(assert (! (forall ((?v0 C_d_a_sp_nu_prod$ )(?v1 C_d_a_sp_nu_prod_c_d_a_sp_nu_prod_fun$ )(?v2 C_d_a_sp_nu_prod_set$ ))(= (member$d ?v0 (image$j ?v1 ?v2 ))(exists ((?v3 C_d_a_sp_nu_prod$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$bj ?v1 ?v3 )))))):named a239 ))
(assert (! (forall ((?v0 A_b_c_sp_mu_bool_fun$ )(?v1 A_b_c_sp_mu$ )(?v2 D_a_d_a_sp_nu_sp_mu$ )(?v3 D_a_d_a_sp_nu_sp_mu$ )(?v4 A_b_c_sp_mu_d_a_d_a_sp_nu_sp_mu_d_a_d_a_sp_nu_sp_mu_prod_set_fun$ ))(=> (and (fun_app$g ?v0 ?v1 )(member$j (pair$c ?v2 ?v3 )(fun_app$br ?v4 ?v1 )))(member$b (pair$k (pair$ ?v1 ?v2 )(pair$ ?v1 ?v3 ))(same_fst$ ?v0 ?v4 )))):named a240 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C$ )(?v2 D_a_sp_nu$ )(?v3 D_a_sp_nu$ )(?v4 C_d_a_sp_nu_d_a_sp_nu_prod_set_fun$ ))(=> (and (fun_app$r ?v0 ?v1 )(member$q (pair$r ?v2 ?v3 )(fun_app$bs ?v4 ?v1 )))(member$c (pair$l (pair$a ?v1 ?v2 )(pair$a ?v1 ?v3 ))(same_fst$a ?v0 ?v4 )))):named a241 ))
(check-sat )
;(get-unsat-core )
