;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_d_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort D_b_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_a_sp_nu$ 0 )
(declare-sort A_d_sp_nu$ 0 )
(declare-sort D_d_sp_nu$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort D_b_c_sp_mu$ 0 )
(declare-sort C_c_prod_set$ 0 )
(declare-sort B_c_prod_bool_fun$ 0 )
(declare-sort C_c_prod_bool_fun$ 0 )
(declare-sort C_d_b_c_sp_mu_fun$ 0 )
(declare-sort D_b_c_sp_mu_c_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_fun$ 0 )
(declare-sort A_d_sp_nu_bool_fun$ 0 )
(declare-sort A_a_a_a_sp_nu_sp_mu$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu$ 0 )
(declare-sort D_d_d_d_sp_nu_sp_mu$ 0 )
(declare-sort D_d_fun_d_d_fun_fun$ 0 )
(declare-sort C_a_d_sp_nu_prod_set$ 0 )
(declare-sort D_b_c_sp_mu_bool_fun$ 0 )
(declare-sort A_a_sp_nu_a_d_sp_nu_fun$ 0 )
(declare-sort A_d_sp_nu_a_d_sp_nu_fun$ 0 )
(declare-sort D_d_sum_d_b_c_sp_mu_fun$ 0 )
(declare-sort A_d_sp_nu_c_bool_fun_fun$ 0 )
(declare-sort C_a_d_sp_nu_bool_fun_fun$ 0 )
(declare-sort A_a_a_a_a_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_a_d_a_d_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_a_d_sp_nu_prod_bool_fun$ 0 )
(declare-sort D_a_d_sp_nu_prod_bool_fun$ 0 )
(declare-sort D_d_d_d_d_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu$ 0 )
(declare-sort D_b_c_d_d_sp_nu_prod_sp_mu$ 0 )
(declare-sort D_b_c_sp_mu_d_b_c_sp_mu_fun$ 0 )
(declare-sort A_a_a_a_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort A_d_sp_nu_a_d_sp_nu_prod_set$ 0 )
(declare-sort D_d_d_d_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_fun_d_d_fun_fun$ 0 )
(declare-sort D_d_fun_d_d_b_c_sp_mu_fun_fun$ 0 )
(declare-sort A_d_sp_nu_c_a_d_sp_nu_prod_fun$ 0 )
(declare-sort C_a_d_sp_nu_prod_a_d_sp_nu_fun$ 0 )
(declare-sort B_c_a_d_a_d_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort B_c_prod_d_stream_prod_bool_fun$ 0 )
(declare-sort A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort B_c_a_d_sp_nu_prod_prod_bool_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_b_c_sp_mu_prod_set$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_d_sp_nu_fun$ 0 )
(declare-sort A_d_sp_nu_a_d_a_d_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu$ 0 )
(declare-sort A_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu$ 0 )
(declare-sort C_a_d_sp_nu_a_d_sp_nu_prod_set_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_bool_fun$ 0 )
(declare-sort C_bool_fun_d_b_c_sp_mu_bool_fun_fun$ 0 )
(declare-sort C_a_d_sp_nu_c_a_d_sp_nu_prod_fun_fun$ 0 )
(declare-sort A_d_sp_nu_a_a_sp_nu_a_d_sp_nu_fun_fun$ 0 )
(declare-sort C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ 0 )
(declare-sort D_d_sp_nu_a_d_sp_nu_a_d_sp_nu_fun_fun$ 0 )
(declare-sort A_d_sp_nu_a_a_sp_nu_prod_a_d_sp_nu_fun$ 0 )
(declare-sort D_d_sp_nu_a_d_sp_nu_prod_a_d_sp_nu_fun$ 0 )
(declare-sort C_c_fun_d_b_c_sp_mu_d_b_c_sp_mu_fun_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_fun_d_d_b_c_sp_mu_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_a_a_sp_nu_prod_sp_mu$ 0 )
(declare-sort D_d_prod_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ 0 )
(declare-sort C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ 0 )
(declare-sort D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_bool_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ 0 )
(declare-sort C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_bool_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_d_sp_nu_bool_fun_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort A_a_d_a_d_sp_nu_sp_mu_fun_a_a_d_a_d_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_fun_d_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort A_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_a_d_a_d_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort A_a_d_a_d_sp_nu_sp_mu_fun_a_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_set$ 0 )
(declare-sort D_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort A_a_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set_fun$ 0 )
(declare-sort A_d_sp_nu_a_d_sp_nu_fun_c_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_a_d_a_d_sp_nu_sp_mu_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_bool_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_fun_fun$ 0 )
(declare-sort D_d_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort A_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort A_d_sp_nu_a_d_sp_nu_fun_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_b_c_sp_mu_fun_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ 0 )
(declare-sort D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort A_d_sp_nu_c_a_d_sp_nu_prod_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort D_d_sum_d_b_c_sp_mu_fun_d_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_b_c_sp_mu_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ 0 )
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_a_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_bool_fun_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort D_d_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ 0 )
(declare-sort D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ 0 )
(declare-sort A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ 0 )
(declare-sort D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ 0 )
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ 0 )
(declare-sort C_a_d_sp_nu_prod$ 0)
(declare-sort A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod$ 0)
(declare-sort D_b_c_sp_mu_d_b_c_sp_mu_prod$ 0)
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ 0)
(declare-sort A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ 0)
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$ 0)
(declare-sort B_c_prod$ 0)
(declare-fun fst$ (C_a_d_sp_nu_prod$)C$)
(declare-fun snd$ (C_a_d_sp_nu_prod$)A_d_sp_nu$)
(declare-fun pair$ (C$ A_d_sp_nu$ )C_a_d_sp_nu_prod$)
(declare-fun select$ (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod$)A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$)
(declare-fun selecta$ (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod$)A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$)
(declare-fun pair$a (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod$)
(declare-fun fst$a (D_b_c_sp_mu_d_b_c_sp_mu_prod$)D_b_c_sp_mu$)
(declare-fun snd$a (D_b_c_sp_mu_d_b_c_sp_mu_prod$)D_b_c_sp_mu$)
(declare-fun pair$b (D_b_c_sp_mu$ D_b_c_sp_mu$ )D_b_c_sp_mu_d_b_c_sp_mu_prod$)
(declare-fun fst$b (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)D_b_c_sp_mu$)
(declare-fun snd$b (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)A_d_a_d_sp_nu_sp_mu$)
(declare-fun pair$c (D_b_c_sp_mu$ A_d_a_d_sp_nu_sp_mu$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)
(declare-fun fst$c (A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)A_d_a_d_sp_nu_sp_mu$)
(declare-fun snd$c (A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)A_d_a_d_sp_nu_sp_mu$)
(declare-fun pair$d (A_d_a_d_sp_nu_sp_mu$ A_d_a_d_sp_nu_sp_mu$ )A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)
(declare-fun fst$d (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$)A_b_c_a_d_sp_nu_prod_sp_mu$)
(declare-fun snd$d (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$)A_b_c_a_d_sp_nu_prod_sp_mu$)
(declare-fun pair$e (A_b_c_a_d_sp_nu_prod_sp_mu$ A_b_c_a_d_sp_nu_prod_sp_mu$ )A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$)
(declare-fun fst$e (B_c_prod$)B$)
(declare-fun snd$e (B_c_prod$)C$)
(declare-fun pair$f (B$ C$ )B_c_prod$)
(declare-sort D_stream$ 0)
(declare-fun shd$ (D_stream$)D$)
(declare-fun stl$ (D_stream$)D_stream$)
(declare-fun sCons$ (D$ D_stream$ )D_stream$)
(declare-sort B_c_prod_d_stream_prod$ 0)
(declare-sort D_a_d_sp_nu_prod$ 0)
(declare-sort C_c_prod$ 0)
(declare-sort B_c_a_d_sp_nu_prod_prod$ 0)
(declare-fun fst$f (B_c_prod_d_stream_prod$)B_c_prod$)
(declare-fun snd$f (B_c_prod_d_stream_prod$)D_stream$)
(declare-fun pair$g (B_c_prod$ D_stream$ )B_c_prod_d_stream_prod$)
(declare-fun fst$g (D_a_d_sp_nu_prod$)D$)
(declare-fun snd$g (D_a_d_sp_nu_prod$)A_d_sp_nu$)
(declare-fun pair$h (D$ A_d_sp_nu$ )D_a_d_sp_nu_prod$)
(declare-fun fst$h (C_c_prod$)C$)
(declare-fun snd$h (C_c_prod$)C$)
(declare-fun pair$i (C$ C$ )C_c_prod$)
(declare-fun fst$i (B_c_a_d_sp_nu_prod_prod$)B$)
(declare-fun snd$i (B_c_a_d_sp_nu_prod_prod$)C_a_d_sp_nu_prod$)
(declare-fun pair$j (B$ C_a_d_sp_nu_prod$ )B_c_a_d_sp_nu_prod_prod$)
(declare-sort A_stream$ 0)
(declare-fun shd$a (A_stream$)A$)
(declare-fun stl$a (A_stream$)A_stream$)
(declare-fun sCons$a (A$ A_stream$ )A_stream$)
(declare-sort D_a_d_sp_nu_prod_a_stream_prod$ 0)
(declare-sort B_c_a_d_sp_nu_prod_prod_a_stream_prod$ 0)
(declare-sort A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$ 0)
(declare-sort A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$ 0)
(declare-sort D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod$ 0)
(declare-sort D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ 0)
(declare-sort D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$ 0)
(declare-sort C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$ 0)
(declare-sort A_d_sp_nu_a_d_sp_nu_prod$ 0)
(declare-sort A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_prod$ 0)
(declare-sort A_d_sp_nu_c_prod$ 0)
(declare-sort D_d_prod$ 0)
(declare-sort D_d_sp_nu_a_d_sp_nu_prod$ 0)
(declare-sort A_d_sp_nu_a_a_sp_nu_prod$ 0)
(declare-sort D_d_sum$ 0)
(declare-sort D_a_d_a_d_sp_nu_sp_mu_prod$ 0)
(declare-fun fst$j (D_a_d_sp_nu_prod_a_stream_prod$)D_a_d_sp_nu_prod$)
(declare-fun snd$j (D_a_d_sp_nu_prod_a_stream_prod$)A_stream$)
(declare-fun pair$k (D_a_d_sp_nu_prod$ A_stream$ )D_a_d_sp_nu_prod_a_stream_prod$)
(declare-fun fst$k (B_c_a_d_sp_nu_prod_prod_a_stream_prod$)B_c_a_d_sp_nu_prod_prod$)
(declare-fun snd$k (B_c_a_d_sp_nu_prod_prod_a_stream_prod$)A_stream$)
(declare-fun pair$l (B_c_a_d_sp_nu_prod_prod$ A_stream$ )B_c_a_d_sp_nu_prod_prod_a_stream_prod$)
(declare-fun fst$l (A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$)A_d_a_d_sp_nu_sp_mu$)
(declare-fun snd$l (A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$)A_a_a_a_sp_nu_sp_mu$)
(declare-fun pair$m (A_d_a_d_sp_nu_sp_mu$ A_a_a_a_sp_nu_sp_mu$ )A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$)
(declare-fun fst$m (A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$)A_b_c_a_d_sp_nu_prod_sp_mu$)
(declare-fun snd$m (A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$)A_a_a_a_sp_nu_sp_mu$)
(declare-fun pair$n (A_b_c_a_d_sp_nu_prod_sp_mu$ A_a_a_a_sp_nu_sp_mu$ )A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$)
(declare-fun fst$n (D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod$)D_b_c_sp_mu$)
(declare-fun snd$n (D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod$)D_d_d_d_sp_nu_sp_mu$)
(declare-fun pair$o (D_b_c_sp_mu$ D_d_d_d_sp_nu_sp_mu$ )D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod$)
(declare-fun fst$o (D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)D_d_d_d_sp_nu_sp_mu$)
(declare-fun snd$o (D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)A_d_a_d_sp_nu_sp_mu$)
(declare-fun pair$p (D_d_d_d_sp_nu_sp_mu$ A_d_a_d_sp_nu_sp_mu$ )D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)
(declare-fun fst$p (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$)D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)
(declare-fun snd$p (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$)D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$)
(declare-fun pair$q (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$)
(declare-fun fst$q (C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$)C_a_d_sp_nu_prod$)
(declare-fun snd$q (C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$)C_a_d_sp_nu_prod$)
(declare-fun pair$r (C_a_d_sp_nu_prod$ C_a_d_sp_nu_prod$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$)
(declare-fun fst$r (A_d_sp_nu_a_d_sp_nu_prod$)A_d_sp_nu$)
(declare-fun snd$r (A_d_sp_nu_a_d_sp_nu_prod$)A_d_sp_nu$)
(declare-fun pair$s (A_d_sp_nu$ A_d_sp_nu$ )A_d_sp_nu_a_d_sp_nu_prod$)
(declare-fun fst$s (A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_prod$)A_d_a_d_sp_nu_sp_mu$)
(declare-fun snd$s (A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_prod$)D_b_c_sp_mu$)
(declare-fun pair$t (A_d_a_d_sp_nu_sp_mu$ D_b_c_sp_mu$ )A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_prod$)
(declare-fun fst$t (A_d_sp_nu_c_prod$)A_d_sp_nu$)
(declare-fun snd$t (A_d_sp_nu_c_prod$)C$)
(declare-fun pair$u (A_d_sp_nu$ C$ )A_d_sp_nu_c_prod$)
(declare-fun fst$u (D_d_prod$)D$)
(declare-fun snd$u (D_d_prod$)D$)
(declare-fun pair$v (D$ D$ )D_d_prod$)
(declare-fun fst$v (D_d_sp_nu_a_d_sp_nu_prod$)D_d_sp_nu$)
(declare-fun snd$v (D_d_sp_nu_a_d_sp_nu_prod$)A_d_sp_nu$)
(declare-fun pair$w (D_d_sp_nu$ A_d_sp_nu$ )D_d_sp_nu_a_d_sp_nu_prod$)
(declare-fun fst$w (A_d_sp_nu_a_a_sp_nu_prod$)A_d_sp_nu$)
(declare-fun snd$w (A_d_sp_nu_a_a_sp_nu_prod$)A_a_sp_nu$)
(declare-fun pair$x (A_d_sp_nu$ A_a_sp_nu$ )A_d_sp_nu_a_a_sp_nu_prod$)
(declare-fun projl$ (D_d_sum$)D$)
(declare-fun inl$ (D$ )D_d_sum$)
(declare-fun projr$ (D_d_sum$)D$)
(declare-fun inr$ (D$ )D_d_sum$)
(declare-fun fst$x (D_a_d_a_d_sp_nu_sp_mu_prod$)D$)
(declare-fun snd$x (D_a_d_a_d_sp_nu_sp_mu_prod$)A_d_a_d_sp_nu_sp_mu$)
(declare-fun pair$y (D$ A_d_a_d_sp_nu_sp_mu$ )D_a_d_a_d_sp_nu_sp_mu_prod$)
(declare-fun id$ ()A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun in$ (A_d_a_d_sp_nu_sp_mu$ )A_d_sp_nu$ )
(declare-fun sp$ ()D_b_c_sp_mu$ )
(declare-fun uu$ (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_set$ )A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_bool_fun$ )
(declare-fun acc$ (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )
(declare-fun get$ (D_d_b_c_sp_mu_fun$ )D_b_c_sp_mu$ )
(declare-fun id$a ()D_d_fun$ )
(declare-fun id$b ()D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ )
(declare-fun id$c ()C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )
(declare-fun out$ (A_a_sp_nu$ )A_a_a_a_sp_nu_sp_mu$ )
(declare-fun put$ (A$ A_a_sp_nu$ )A_a_a_a_sp_nu_sp_mu$ )
(declare-fun sp$a ()A_d_a_d_sp_nu_sp_mu$ )
(declare-fun sub$ ()D_b_c_sp_mu_d_b_c_sp_mu_prod_set$ )
(declare-fun uua$ (C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_bool_fun$ )
(declare-fun uub$ (C_a_d_sp_nu_prod_set$ )C_a_d_sp_nu_prod_bool_fun$ )
(declare-fun uuc$ (C_c_prod_set$ )C_c_prod_bool_fun$ )
(declare-fun uud$ (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ )
(declare-fun uue$ (D_d_b_c_sp_mu_fun$ )A_a_d_a_d_sp_nu_sp_mu_fun_a_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun uuf$ ()A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun uug$ (D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_a_d_a_d_sp_nu_sp_mu_fun$ B_c_a_d_a_d_sp_nu_sp_mu_fun_fun$ )D_b_c_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ )
(declare-fun uuh$ (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun uui$ (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun uuj$ (C_a_d_sp_nu_prod_set$ )C_a_d_sp_nu_bool_fun_fun$ )
(declare-fun uuk$ (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )
(declare-fun uul$ ()D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_fun$ )
(declare-fun uum$ ()C_a_d_sp_nu_c_a_d_sp_nu_prod_fun_fun$ )
(declare-fun accp$ (A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_bool_fun_fun$ A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$ )Bool )
(declare-fun comp$ (A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun_fun$ A_a_d_a_d_sp_nu_sp_mu_fun$ )A_a_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun get$a (A_a_d_a_d_sp_nu_sp_mu_fun$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun get$b (D_d_d_d_d_sp_nu_sp_mu_fun$ )D_d_d_d_sp_nu_sp_mu$ )
(declare-fun get$c (A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )A_b_c_a_d_sp_nu_prod_sp_mu$ )
(declare-fun get$d (A_a_a_a_a_sp_nu_sp_mu_fun$ )A_a_a_a_sp_nu_sp_mu$ )
(declare-fun out$a (D_d_sp_nu$ )D_d_d_d_sp_nu_sp_mu$ )
(declare-fun out$b (A_d_sp_nu$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun put$a (D$ D_d_sp_nu$ )D_d_d_d_sp_nu_sp_mu$ )
(declare-fun put$b (D$ )A_d_sp_nu_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun put$c (B$ )C_d_b_c_sp_mu_fun$ )
(declare-fun put$d (B$ C_a_d_sp_nu_prod$ )A_b_c_a_d_sp_nu_prod_sp_mu$ )
(declare-fun sub$a ()A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )
(declare-fun sub$b ()A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_set$ )
(declare-fun swap$ (A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun accp$a (A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_a_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_bool_fun_fun$ A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod$ )Bool )
(declare-fun accp$b (D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod_bool_fun_fun$ D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod$ )Bool )
(declare-fun accp$c (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun accp$d (D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )Bool )
(declare-fun apfst$ (D_b_c_sp_mu_d_b_c_sp_mu_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun apsnd$ (A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun comp$a (D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun_fun$ D_d_d_d_d_sp_nu_sp_mu_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun comp$b (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_d_b_c_sp_mu_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun comp$c (D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ )
(declare-fun comp$d (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun comp$e (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun comp$f (D_d_b_c_sp_mu_fun$ )D_d_fun_d_d_b_c_sp_mu_fun_fun$ )
(declare-fun comp$g (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_d_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun comp$h (D_b_c_sp_mu_d_b_c_sp_mu_fun$ )D_d_b_c_sp_mu_fun_d_d_b_c_sp_mu_fun_fun$ )
(declare-fun comp$i (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_b_c_sp_mu_d_b_c_sp_mu_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun comp$j (D_d_fun$ )D_d_fun_d_d_fun_fun$ )
(declare-fun comp$k (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_b_c_sp_mu_fun_fun$ )
(declare-fun comp$l (D_b_c_sp_mu_d_fun$ )D_d_b_c_sp_mu_fun_d_d_fun_fun$ )
(declare-fun comp$m (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_b_c_sp_mu_d_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun comp$n (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_fun_fun$ )
(declare-fun comp$o (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun comp$p (A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )A_a_d_a_d_sp_nu_sp_mu_fun_a_a_d_a_d_sp_nu_sp_mu_fun_fun$ )
(declare-fun comp$q (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )A_a_d_a_d_sp_nu_sp_mu_fun_a_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun comp$r (A_b_c_a_d_sp_nu_prod_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )A_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_a_d_a_d_sp_nu_sp_mu_fun_fun$ )
(declare-fun comp$s (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )A_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun comp$t (D_b_c_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ D_d_b_c_sp_mu_fun$ )D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ )
(declare-fun comp$u (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )D_d_b_c_sp_mu_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ )
(declare-fun comp$v (D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ D_d_prod_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ )D_d_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )
(declare-fun comp$w (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_d_sum_d_b_c_sp_mu_fun_d_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun curry$ (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun swap$a (A_d_sp_nu_c_prod$ )C_a_d_sp_nu_prod$ )
(declare-fun swap$b (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_prod$ )
(declare-fun swap$c (C_a_d_sp_nu_prod$ )A_d_sp_nu_c_prod$ )
(declare-fun apfst$a (C_c_fun$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )
(declare-fun apsnd$a (A_d_sp_nu_a_d_sp_nu_fun$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )
(declare-fun convol$ (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )
(declare-fun curry$a (C_a_d_sp_nu_prod_bool_fun$ )C_a_d_sp_nu_bool_fun_fun$ )
(declare-fun member$ (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$ A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_set$ )Bool )
(declare-fun run_mu$ (A_d_a_d_sp_nu_sp_mu$ A_stream$ )D_a_d_sp_nu_prod_a_stream_prod$ )
(declare-fun collect$ (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun convol$a (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ )
(declare-fun convol$b (D_d_b_c_sp_mu_fun$ )D_d_b_c_sp_mu_fun_d_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun_fun$ )
(declare-fun fun_app$ (A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ A_d_a_d_sp_nu_sp_mu$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun member$a (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )Bool )
(declare-fun member$b (C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$ C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ )Bool )
(declare-fun member$c (C_a_d_sp_nu_prod$ C_a_d_sp_nu_prod_set$ )Bool )
(declare-fun member$d (C_c_prod$ C_c_prod_set$ )Bool )
(declare-fun member$e (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )Bool )
(declare-fun member$f (D_b_c_sp_mu_d_b_c_sp_mu_prod$ D_b_c_sp_mu_d_b_c_sp_mu_prod_set$ )Bool )
(declare-fun member$g (A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )Bool )
(declare-fun member$h (A_d_sp_nu_a_d_sp_nu_prod$ A_d_sp_nu_a_d_sp_nu_prod_set$ )Bool )
(declare-fun run_mu$a (D_b_c_sp_mu$ D_stream$ )B_c_prod_d_stream_prod$ )
(declare-fun run_mu$b (A_b_c_a_d_sp_nu_prod_sp_mu$ A_stream$ )B_c_a_d_sp_nu_prod_prod_a_stream_prod$ )
(declare-fun case_sum$ (D_d_b_c_sp_mu_fun$ D_d_b_c_sp_mu_fun$ )D_d_sum_d_b_c_sp_mu_fun$ )
(declare-fun collect$a (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_bool_fun$ )A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_set$ )
(declare-fun collect$b (C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_bool_fun$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ )
(declare-fun collect$c (C_a_d_sp_nu_prod_bool_fun$ )C_a_d_sp_nu_prod_set$ )
(declare-fun collect$d (C_c_prod_bool_fun$ )C_c_prod_set$ )
(declare-fun fun_app$a (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_fun$ D_b_c_sp_mu$ )A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ )
(declare-fun fun_app$b (A_d_sp_nu_c_a_d_sp_nu_prod_fun$ A_d_sp_nu$ )C_a_d_sp_nu_prod$ )
(declare-fun fun_app$c (C_a_d_sp_nu_c_a_d_sp_nu_prod_fun_fun$ C$ )A_d_sp_nu_c_a_d_sp_nu_prod_fun$ )
(declare-fun fun_app$d (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_bool_fun$ A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$ )Bool )
(declare-fun fun_app$e (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$ )Bool )
(declare-fun fun_app$f (C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_bool_fun$ C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$ )Bool )
(declare-fun fun_app$g (C_a_d_sp_nu_prod_bool_fun$ C_a_d_sp_nu_prod$ )Bool )
(declare-fun fun_app$h (C_c_prod_bool_fun$ C_c_prod$ )Bool )
(declare-fun fun_app$i (A_d_a_d_sp_nu_sp_mu_bool_fun$ A_d_a_d_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$j (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ D_b_c_sp_mu$ )A_d_a_d_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$k (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )Bool )
(declare-fun fun_app$l (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun fun_app$m (A_d_sp_nu_bool_fun$ A_d_sp_nu$ )Bool )
(declare-fun fun_app$n (C_a_d_sp_nu_bool_fun_fun$ C$ )A_d_sp_nu_bool_fun$ )
(declare-fun fun_app$o (A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ A$ )A_b_c_a_d_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$p (A_a_d_a_d_sp_nu_sp_mu_fun_a_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ A_a_d_a_d_sp_nu_sp_mu_fun$ )A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$q (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ A_d_a_d_sp_nu_sp_mu$ )A_b_c_a_d_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$r (A_a_d_a_d_sp_nu_sp_mu_fun$ A$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun fun_app$s (D_b_c_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ D_b_c_sp_mu$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun fun_app$t (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ D_b_c_sp_mu$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$u (A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ A_d_a_d_sp_nu_sp_mu$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun fun_app$v (A_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun$ A_a_a_a_sp_nu_sp_mu$ )A_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$w (A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun_fun$ A_d_a_d_sp_nu_sp_mu$ )A_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$x (A_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun$ A_d_a_d_sp_nu_sp_mu$ )A_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$y (D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun_fun$ D_d_d_d_sp_nu_sp_mu$ )A_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$z (D_d_b_c_sp_mu_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_d_b_c_sp_mu_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun lex_prod$ (D_b_c_sp_mu_d_b_c_sp_mu_prod_set$ A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun map_prod$ (D_b_c_sp_mu_d_b_c_sp_mu_fun$ A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun pred_fun$ (D_b_c_sp_mu_bool_fun$ D_d_b_c_sp_mu_fun$ )Bool )
(declare-fun same_fst$ (D_b_c_sp_mu_bool_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )
(declare-fun case_prod$ (D_d_sp_nu_a_d_sp_nu_a_d_sp_nu_fun_fun$ )D_d_sp_nu_a_d_sp_nu_prod_a_d_sp_nu_fun$ )
(declare-fun case_sum$a (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ )
(declare-fun fun_app$aa (D_d_b_c_sp_mu_fun$ D$ )D_b_c_sp_mu$ )
(declare-fun fun_app$ab (A_d_sp_nu_a_d_a_d_sp_nu_sp_mu_fun$ A_d_sp_nu$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun fun_app$ac (D_d_d_d_d_sp_nu_sp_mu_fun$ D$ )D_d_d_d_sp_nu_sp_mu$ )
(declare-fun fun_app$ad (C_d_b_c_sp_mu_fun$ C$ )D_b_c_sp_mu$ )
(declare-fun fun_app$ae (D_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ D$ )A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$af (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ D$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$ag (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ D$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod$ )
(declare-fun fun_app$ah (D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )
(declare-fun fun_app$ai (D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ D_b_c_sp_mu_d_b_c_sp_mu_prod$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod$ )
(declare-fun fun_app$aj (D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ D$ )D_b_c_sp_mu_d_b_c_sp_mu_prod$ )
(declare-fun fun_app$ak (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$al (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$am (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$an (D_d_fun_d_d_b_c_sp_mu_fun_fun$ D_d_fun$ )D_d_b_c_sp_mu_fun$ )
(declare-fun fun_app$ao (D_d_fun$ D$ )D$ )
(declare-fun fun_app$ap (D_d_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_d_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$aq (A_d_sp_nu_bool_fun_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ A_d_sp_nu_bool_fun$ )A_d_a_d_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$ar (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$as (D_b_c_sp_mu_bool_fun$ D_b_c_sp_mu$ )Bool )
(declare-fun fun_app$at (C_bool_fun_d_b_c_sp_mu_bool_fun_fun$ C_bool_fun$ )D_b_c_sp_mu_bool_fun$ )
(declare-fun fun_app$au (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$av (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$aw (A_b_c_a_d_sp_nu_prod_sp_mu_bool_fun$ A_b_c_a_d_sp_nu_prod_sp_mu$ )Bool )
(declare-fun fun_app$ax (D_d_b_c_sp_mu_fun_d_d_b_c_sp_mu_fun_fun$ D_d_b_c_sp_mu_fun$ )D_d_b_c_sp_mu_fun$ )
(declare-fun fun_app$ay (D_b_c_sp_mu_d_b_c_sp_mu_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_b_c_sp_mu_d_b_c_sp_mu_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$az (D_d_fun_d_d_fun_fun$ D_d_fun$ )D_d_fun$ )
(declare-fun fun_app$ba (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_b_c_sp_mu_fun_fun$ D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_d_b_c_sp_mu_fun$ )
(declare-fun fun_app$bb (D_d_b_c_sp_mu_fun_d_d_fun_fun$ D_d_b_c_sp_mu_fun$ )D_d_fun$ )
(declare-fun fun_app$bc (D_b_c_sp_mu_d_fun_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_b_c_sp_mu_d_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$bd (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_fun_fun$ D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_d_fun$ )
(declare-fun fun_app$be (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$bf (A_a_d_a_d_sp_nu_sp_mu_fun_a_a_d_a_d_sp_nu_sp_mu_fun_fun$ A_a_d_a_d_sp_nu_sp_mu_fun$ )A_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$bg (A_a_a_a_sp_nu_sp_mu_bool_fun$ A_a_a_a_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$bh (A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_bool_fun_fun$ A_d_a_d_sp_nu_sp_mu$ )A_a_a_a_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$bi (A_a_a_a_a_sp_nu_sp_mu_fun$ A$ )A_a_a_a_sp_nu_sp_mu$ )
(declare-fun fun_app$bj (A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_bool_fun_fun$ A_b_c_a_d_sp_nu_prod_sp_mu$ )A_a_a_a_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$bk (D_d_d_d_sp_nu_sp_mu_bool_fun$ D_d_d_d_sp_nu_sp_mu$ )Bool )
(declare-fun fun_app$bl (D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_bool_fun_fun$ D_b_c_sp_mu$ )D_d_d_d_sp_nu_sp_mu_bool_fun$ )
(declare-fun fun_app$bm (D_b_c_sp_mu_d_b_c_sp_mu_fun$ D_b_c_sp_mu$ )D_b_c_sp_mu$ )
(declare-fun fun_app$bn (D_b_c_sp_mu_d_fun$ D_b_c_sp_mu$ )D$ )
(declare-fun fun_app$bo (A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )D$ )
(declare-fun fun_app$bp (B_c_a_d_sp_nu_prod_prod_bool_fun$ B_c_a_d_sp_nu_prod_prod$ )Bool )
(declare-fun fun_app$bq (B_c_prod_d_stream_prod_bool_fun$ B_c_prod_d_stream_prod$ )Bool )
(declare-fun fun_app$br (D_a_d_sp_nu_prod_bool_fun$ D_a_d_sp_nu_prod$ )Bool )
(declare-fun fun_app$bs (B_c_prod_bool_fun$ B_c_prod$ )Bool )
(declare-fun fun_app$bt (C_c_fun_d_b_c_sp_mu_d_b_c_sp_mu_fun_fun$ C_c_fun$ )D_b_c_sp_mu_d_b_c_sp_mu_fun$ )
(declare-fun fun_app$bu (A_d_sp_nu_a_d_sp_nu_fun_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ A_d_sp_nu_a_d_sp_nu_fun$ )A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$bv (A_d_sp_nu_c_a_d_sp_nu_prod_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ A_d_sp_nu_c_a_d_sp_nu_prod_fun$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$bw (A_b_c_a_d_sp_nu_prod_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ A_b_c_a_d_sp_nu_prod_sp_mu$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun fun_app$bx (A_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_a_d_a_d_sp_nu_sp_mu_fun_fun$ A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )A_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$by (A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ A_b_c_a_d_sp_nu_prod_sp_mu$ )A_b_c_a_d_sp_nu_prod_sp_mu$ )
(declare-fun fun_app$bz (A_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun fun_app$ca (A_d_sp_nu_a_d_sp_nu_fun$ A_d_sp_nu$ )A_d_sp_nu$ )
(declare-fun fun_app$cb (D_b_fun$ D$ )B$ )
(declare-fun fun_app$cc (B_b_fun$ B$ )B$ )
(declare-fun fun_app$cd (C_c_fun$ C$ )C$ )
(declare-fun fun_app$ce (B_d_fun$ B$ )D$ )
(declare-fun fun_app$cf (C_a_d_sp_nu_prod_a_d_sp_nu_fun$ C_a_d_sp_nu_prod$ )A_d_sp_nu$ )
(declare-fun fun_app$cg (C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ C_a_d_sp_nu_prod$ )C_a_d_sp_nu_prod$ )
(declare-fun fun_app$ch (D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_a_d_a_d_sp_nu_sp_mu_fun$ D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun fun_app$ci (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set_fun$ D_b_c_sp_mu$ )A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )
(declare-fun fun_app$cj (C_a_d_sp_nu_a_d_sp_nu_prod_set_fun$ C$ )A_d_sp_nu_a_d_sp_nu_prod_set$ )
(declare-fun fun_app$ck (D_d_b_c_sp_mu_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ D_d_b_c_sp_mu_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )
(declare-fun fun_app$cl (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )
(declare-fun fun_app$cm (D_b_c_sp_mu_c_fun$ D_b_c_sp_mu$ )C$ )
(declare-fun fun_app$cn (A_d_a_d_sp_nu_sp_mu_a_d_sp_nu_fun$ A_d_a_d_sp_nu_sp_mu$ )A_d_sp_nu$ )
(declare-fun fun_app$co (A_d_sp_nu_a_d_sp_nu_fun_c_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun_fun$ A_d_sp_nu_a_d_sp_nu_fun$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )
(declare-fun fun_app$cp (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )
(declare-fun fun_app$cq (D_d_prod_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ D_d_prod$ )D_b_c_sp_mu_d_b_c_sp_mu_prod$ )
(declare-fun fun_app$cr (D_d_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ D_d_prod$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod$ )
(declare-fun fun_app$cs (D_d_b_c_sp_mu_fun_d_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun_fun$ D_d_b_c_sp_mu_fun$ )D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ )
(declare-fun fun_app$ct (D_d_sp_nu_a_d_sp_nu_a_d_sp_nu_fun_fun$ D_d_sp_nu$ )A_d_sp_nu_a_d_sp_nu_fun$ )
(declare-fun fun_app$cu (A_a_sp_nu_a_d_sp_nu_fun$ A_a_sp_nu$ )A_d_sp_nu$ )
(declare-fun fun_app$cv (A_d_sp_nu_a_a_sp_nu_a_d_sp_nu_fun_fun$ A_d_sp_nu$ )A_a_sp_nu_a_d_sp_nu_fun$ )
(declare-fun fun_app$cw (D_d_sum_d_b_c_sp_mu_fun_d_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_d_sum_d_b_c_sp_mu_fun$ )D_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$cx (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_fun$ D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_d_sum_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun fun_app$cy (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun fun_app$cz (A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_bool_fun_fun$ A_d_a_d_sp_nu_sp_mu$ )D_b_c_sp_mu_bool_fun$ )
(declare-fun fun_app$da (A_d_sp_nu_c_bool_fun_fun$ A_d_sp_nu$ )C_bool_fun$ )
(declare-fun lex_prod$a (C_c_prod_set$ A_d_sp_nu_a_d_sp_nu_prod_set$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ )
(declare-fun map_prod$a (D_b_c_sp_mu_c_fun$ A_d_a_d_sp_nu_sp_mu_a_d_sp_nu_fun$ D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )C_a_d_sp_nu_prod$ )
(declare-fun map_prod$b (C_d_b_c_sp_mu_fun$ A_d_sp_nu_a_d_a_d_sp_nu_sp_mu_fun$ C_a_d_sp_nu_prod$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )
(declare-fun map_prod$c (C_c_fun$ )A_d_sp_nu_a_d_sp_nu_fun_c_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun_fun$ )
(declare-fun map_prod$d (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun_d_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun_fun$ )
(declare-fun map_prod$e (D_d_b_c_sp_mu_fun$ D_d_b_c_sp_mu_fun$ )D_d_prod_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ )
(declare-fun map_prod$f (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )D_d_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )
(declare-fun map_sp_mu$ (B_b_fun$ )C_c_fun_d_b_c_sp_mu_d_b_c_sp_mu_fun_fun$ )
(declare-fun pred_fun$a (A_d_a_d_sp_nu_sp_mu_bool_fun$ A_a_d_a_d_sp_nu_sp_mu_fun$ )Bool )
(declare-fun pred_fun$b (A_b_c_a_d_sp_nu_prod_sp_mu_bool_fun$ A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )Bool )
(declare-fun rec_sp_mu$ (D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_a_d_a_d_sp_nu_sp_mu_fun$ B_c_a_d_a_d_sp_nu_sp_mu_fun_fun$ D_b_c_sp_mu$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun same_fst$a (C_bool_fun$ C_a_d_sp_nu_a_d_sp_nu_prod_set_fun$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ )
(declare-fun case_prod$a (A_d_sp_nu_a_a_sp_nu_a_d_sp_nu_fun_fun$ )A_d_sp_nu_a_a_sp_nu_prod_a_d_sp_nu_fun$ )
(declare-fun case_prod$b (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )
(declare-fun case_prod$c (C_a_d_sp_nu_bool_fun_fun$ )C_a_d_sp_nu_prod_bool_fun$ )
(declare-fun case_prod$d (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun$ )
(declare-fun case_prod$e (C_a_d_sp_nu_c_a_d_sp_nu_prod_fun_fun$ )C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )
(declare-fun case_prod$f (D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ )
(declare-fun case_prod$g (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ D_a_d_a_d_sp_nu_sp_mu_prod$ )A_b_c_a_d_sp_nu_prod_sp_mu$ )
(declare-fun case_sp_nu$ (A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )A_d_sp_nu_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun map_sp_mu$a (D_d_fun$ )A_d_sp_nu_a_d_sp_nu_fun_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ )
(declare-fun map_sp_mu$b (D_b_fun$ )A_d_sp_nu_c_a_d_sp_nu_prod_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun map_sp_mu$c (B_d_fun$ C_a_d_sp_nu_prod_a_d_sp_nu_fun$ )A_b_c_a_d_sp_nu_prod_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun map_sp_mu$d (B_b_fun$ C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun map_sp_mu$e (D_d_fun$ D_d_sp_nu_a_d_sp_nu_prod_a_d_sp_nu_fun$ A_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun map_sp_mu$f (D_d_fun$ A_d_sp_nu_a_a_sp_nu_prod_a_d_sp_nu_fun$ A_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu$ )A_d_a_d_sp_nu_sp_mu$ )
(declare-fun pred_sp_mu$ (D_bool_fun$ )A_d_sp_nu_bool_fun_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )
(declare-fun pred_sp_nu$ (D_bool_fun$ )A_d_sp_nu_bool_fun$ )
(declare-fun sp_mu_comp$ (D_b_c_sp_mu$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun sp_nu_comp$ ()D_d_sp_nu_a_d_sp_nu_a_d_sp_nu_fun_fun$ )
(declare-fun pred_sp_mu$a (B_bool_fun$ )C_bool_fun_d_b_c_sp_mu_bool_fun_fun$ )
(declare-fun pred_sp_mu$b (B_bool_fun$ C_a_d_sp_nu_prod_bool_fun$ )A_b_c_a_d_sp_nu_prod_sp_mu_bool_fun$ )
(declare-fun sp_mu_comp$a (A_b_c_a_d_sp_nu_prod_sp_mu$ A_a_a_a_sp_nu_sp_mu$ )A_b_c_a_d_sp_nu_prod_a_a_sp_nu_prod_sp_mu$ )
(declare-fun sp_mu_comp$b (D_b_c_sp_mu$ D_d_d_d_sp_nu_sp_mu$ )D_b_c_d_d_sp_nu_prod_sp_mu$ )
(declare-fun sp_mu_comp$c (A_d_a_d_sp_nu_sp_mu$ A_a_a_a_sp_nu_sp_mu$ )A_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu$ )
(declare-fun sp_mu_comp$d (D_d_d_d_sp_nu_sp_mu$ A_d_a_d_sp_nu_sp_mu$ )A_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu$ )
(declare-fun sp_mu_comp2$ ()D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun sp_nu_comp$a ()A_d_sp_nu_a_a_sp_nu_a_d_sp_nu_fun_fun$ )
(declare-fun sp_nu_comp2$ ()D_d_sp_nu_a_d_sp_nu_a_d_sp_nu_fun_fun$ )
(declare-fun sp_mu_comp2$a ()A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun sp_mu_comp2$b ()D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun_fun$ )
(declare-fun sp_mu_comp2R$ (A_a_a_a_a_sp_nu_sp_mu_a_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu_fun_fun$ A_a_a_a_sp_nu_sp_mu$ )A_d_a_d_sp_nu_a_a_sp_nu_prod_sp_mu$ )
(declare-fun sp_nu_comp2$a ()A_d_sp_nu_a_a_sp_nu_a_d_sp_nu_fun_fun$ )
(declare-fun sp_mu_comp2R$a (D_a_d_a_d_sp_nu_sp_mu_a_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu_fun_fun$ A_d_a_d_sp_nu_sp_mu$ )A_d_d_d_sp_nu_a_d_sp_nu_prod_sp_mu$ )
(declare-fun sp_mu_comp2R$b (D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )
(declare-fun sp_mu_comp2R$c (D_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ )A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )
(declare-fun sp_mu_comp_rel$ ()A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_bool_fun_fun$ )
(declare-fun sp_mu_comp_rel$a ()A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_a_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_prod_bool_fun_fun$ )
(declare-fun sp_mu_comp_rel$b ()D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_prod_bool_fun_fun$ )
(declare-fun sp_mu_comp_rel$c ()D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )
(declare-fun sp_mu_comp_rel$d ()D_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_d_d_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$ (fun_app$a uul$ ?v0 )?v1 )(pair$c ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uul$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ ))(! (= (fun_app$b (fun_app$c uum$ ?v0 )?v1 )(pair$ ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uum$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_set$ )(?v1 A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$ ))(! (= (fun_app$d (uu$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$d (uu$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$ ))(! (= (fun_app$e (uud$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$e (uud$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ )(?v1 C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$ ))(! (= (fun_app$f (uua$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$f (uua$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_set$ )(?v1 C_a_d_sp_nu_prod$ ))(! (= (fun_app$g (uub$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$g (uub$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 C_c_prod_set$ )(?v1 C_c_prod$ ))(! (= (fun_app$h (uuc$ ?v0 )?v1 )(member$d ?v1 ?v0 )):pattern ((fun_app$h (uuc$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$i (fun_app$j (uui$ ?v0 )?v1 )?v2 )(member$e (pair$c ?v1 ?v2 )?v0 )):pattern ((fun_app$i (fun_app$j (uui$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(! (= (fun_app$k (fun_app$l (uuk$ ?v0 )?v1 )?v2 )(member$a (pair$q ?v1 ?v2 )?v0 )):pattern ((fun_app$k (fun_app$l (uuk$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_set$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(! (= (fun_app$m (fun_app$n (uuj$ ?v0 )?v1 )?v2 )(member$c (pair$ ?v1 ?v2 )?v0 )):pattern ((fun_app$m (fun_app$n (uuj$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v2 A$ ))(! (= (fun_app$o (fun_app$p (uue$ ?v0 )?v1 )?v2 )(fun_app$q (sp_mu_comp$ (get$ ?v0 ))(fun_app$r ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$p (uue$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 B_c_a_d_a_d_sp_nu_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu$ ))(! (= (fun_app$s (uug$ ?v0 ?v1 )?v2 )(pair$c ?v2 (rec_sp_mu$ ?v0 ?v1 ?v2 ))):pattern ((fun_app$s (uug$ ?v0 ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v1 D_b_c_sp_mu$ ))(! (= (fun_app$t (uuh$ ?v0 )?v1 )?v0 ):pattern ((fun_app$t (uuh$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$u uuf$ ?v0 )?v0 ):pattern ((fun_app$u uuf$ ?v0 )))):named a13 ))
(assert (! (not (= (fun_app$q (sp_mu_comp$ sp$ )sp$a )(fun_app$q (fun_app$t sp_mu_comp2$ sp$ )sp$a ))):named a14 ))
(assert (! (forall ((?v0 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 A_a_a_a_sp_nu_sp_mu$ ))(! (= (fun_app$v (fun_app$w sp_mu_comp2$a (get$a ?v0 ))?v1 )(sp_mu_comp2R$ (comp$ sp_mu_comp2$a ?v0 )?v1 )):pattern ((fun_app$v (fun_app$w sp_mu_comp2$a (get$a ?v0 ))?v1 )))):named a15 ))
(assert (! (forall ((?v0 D_d_d_d_d_sp_nu_sp_mu_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$x (fun_app$y sp_mu_comp2$b (get$b ?v0 ))?v1 )(sp_mu_comp2R$a (comp$a sp_mu_comp2$b ?v0 )?v1 )):pattern ((fun_app$x (fun_app$y sp_mu_comp2$b (get$b ?v0 ))?v1 )))):named a16 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$q (fun_app$t sp_mu_comp2$ (get$ ?v0 ))?v1 )(fun_app$q (sp_mu_comp2R$b (fun_app$z (comp$b sp_mu_comp2$ )?v0 ))?v1 )):pattern ((fun_app$q (fun_app$t sp_mu_comp2$ (get$ ?v0 ))?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v1 A$ )(?v2 A_a_sp_nu$ ))(! (= (sp_mu_comp$a (get$c ?v0 )(put$ ?v1 ?v2 ))(sp_mu_comp$a (fun_app$o ?v0 ?v1 )(out$ ?v2 ))):pattern ((sp_mu_comp$a (get$c ?v0 )(put$ ?v1 ?v2 ))))):named a18 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D$ )(?v2 D_d_sp_nu$ ))(! (= (sp_mu_comp$b (get$ ?v0 )(put$a ?v1 ?v2 ))(sp_mu_comp$b (fun_app$aa ?v0 ?v1 )(out$a ?v2 ))):pattern ((sp_mu_comp$b (get$ ?v0 )(put$a ?v1 ?v2 ))))):named a19 ))
(assert (! (forall ((?v0 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 A$ )(?v2 A_a_sp_nu$ ))(! (= (sp_mu_comp$c (get$a ?v0 )(put$ ?v1 ?v2 ))(sp_mu_comp$c (fun_app$r ?v0 ?v1 )(out$ ?v2 ))):pattern ((sp_mu_comp$c (get$a ?v0 )(put$ ?v1 ?v2 ))))):named a20 ))
(assert (! (forall ((?v0 D_d_d_d_d_sp_nu_sp_mu_fun$ )(?v1 D$ )(?v2 A_d_sp_nu$ ))(! (= (sp_mu_comp$d (get$b ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))(sp_mu_comp$d (fun_app$ac ?v0 ?v1 )(out$b ?v2 ))):pattern ((sp_mu_comp$d (get$b ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))))):named a21 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D$ )(?v2 A_d_sp_nu$ ))(! (= (fun_app$q (sp_mu_comp$ (get$ ?v0 ))(fun_app$ab (put$b ?v1 )?v2 ))(fun_app$q (sp_mu_comp$ (fun_app$aa ?v0 ?v1 ))(out$b ?v2 ))):pattern ((fun_app$q (sp_mu_comp$ (get$ ?v0 ))(fun_app$ab (put$b ?v1 )?v2 ))))):named a22 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ ))(= (= (get$ ?v0 )(get$ ?v1 ))(= ?v0 ?v1 ))):named a23 ))
(assert (! (forall ((?v0 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(= (= (get$a ?v0 )(get$a ?v1 ))(= ?v0 ?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v1 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ ))(= (= (get$c ?v0 )(get$c ?v1 ))(= ?v0 ?v1 ))):named a25 ))
(assert (! (forall ((?v0 D$ )(?v1 A_d_sp_nu$ )(?v2 D$ )(?v3 A_d_sp_nu$ ))(= (= (fun_app$ab (put$b ?v0 )?v1 )(fun_app$ab (put$b ?v2 )?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a26 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(= (= (fun_app$ad (put$c ?v0 )?v1 )(fun_app$ad (put$c ?v2 )?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a27 ))
(assert (! (forall ((?v0 B$ )(?v1 C_a_d_sp_nu_prod$ )(?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(= (= (put$d ?v0 ?v1 )(put$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a28 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ )(?v1 D$ )(?v2 A_d_sp_nu$ ))(! (= (fun_app$u (sp_mu_comp2R$c ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))(fun_app$u (fun_app$ae ?v0 ?v1 )(out$b ?v2 ))):pattern ((fun_app$u (sp_mu_comp2R$c ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))))):named a29 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D$ )(?v2 A_d_sp_nu$ ))(! (= (fun_app$q (sp_mu_comp2R$b ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))(fun_app$q (fun_app$af ?v0 ?v1 )(out$b ?v2 ))):pattern ((fun_app$q (sp_mu_comp2R$b ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))))):named a30 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (forall ((?v1 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (get$a ?v1 ))false ))(forall ((?v1 D$ )(?v2 A_d_sp_nu$ ))(=> (= ?v0 (fun_app$ab (put$b ?v1 )?v2 ))false )))false )):named a31 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ ))(=> (and (forall ((?v1 D_d_b_c_sp_mu_fun$ ))(=> (= ?v0 (get$ ?v1 ))false ))(forall ((?v1 B$ )(?v2 C$ ))(=> (= ?v0 (fun_app$ad (put$c ?v1 )?v2 ))false )))false )):named a32 ))
(assert (! (forall ((?v0 A_b_c_a_d_sp_nu_prod_sp_mu$ ))(=> (and (forall ((?v1 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ ))(=> (= ?v0 (get$c ?v1 ))false ))(forall ((?v1 B$ )(?v2 C_a_d_sp_nu_prod$ ))(=> (= ?v0 (put$d ?v1 ?v2 ))false )))false )):named a33 ))
(assert (! (forall ((?v0 A_a_sp_nu$ )(?v1 A_a_sp_nu$ ))(=> (= (out$ ?v0 )(out$ ?v1 ))(= ?v0 ?v1 ))):named a34 ))
(assert (! (forall ((?v0 D_d_sp_nu$ )(?v1 D_d_sp_nu$ ))(=> (= (out$a ?v0 )(out$a ?v1 ))(= ?v0 ?v1 ))):named a35 ))
(assert (! (forall ((?v0 A_d_sp_nu$ )(?v1 A_d_sp_nu$ ))(=> (= (out$b ?v0 )(out$b ?v1 ))(= ?v0 ?v1 ))):named a36 ))
(assert (! (forall ((?v0 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 D$ )(?v2 A_d_sp_nu$ ))(not (= (get$a ?v0 )(fun_app$ab (put$b ?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 B$ )(?v2 C$ ))(not (= (get$ ?v0 )(fun_app$ad (put$c ?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v1 B$ )(?v2 C_a_d_sp_nu_prod$ ))(not (= (get$c ?v0 )(put$d ?v1 ?v2 )))):named a39 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )(?v1 D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ )(?v2 D$ ))(! (= (fun_app$ag (fun_app$ah (comp$c ?v0 )?v1 )?v2 )(fun_app$ai ?v0 (fun_app$aj ?v1 ?v2 ))):pattern ((fun_app$ag (fun_app$ah (comp$c ?v0 )?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu$ ))(! (= (fun_app$t (fun_app$ak (comp$d ?v0 )?v1 )?v2 )(fun_app$al ?v0 (fun_app$t ?v1 ?v2 ))):pattern ((fun_app$t (fun_app$ak (comp$d ?v0 )?v1 )?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ ))(! (= (fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )(fun_app$al ?v0 (fun_app$af ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )))):named a42 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (fun_app$aa (fun_app$an (comp$f ?v0 )?v1 )?v2 )(fun_app$aa ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$aa (fun_app$an (comp$f ?v0 )?v1 )?v2 )))):named a43 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )))):named a44 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ ))(! (= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )))):named a45 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 A_d_sp_nu_bool_fun$ )(?v2 D$ )(?v3 A_d_sp_nu$ ))(! (= (fun_app$i (fun_app$aq (pred_sp_mu$ ?v0 )?v1 )(fun_app$ab (put$b ?v2 )?v3 ))(and (fun_app$ar ?v0 ?v2 )(fun_app$m ?v1 ?v3 ))):pattern ((fun_app$i (fun_app$aq (pred_sp_mu$ ?v0 )?v1 )(fun_app$ab (put$b ?v2 )?v3 ))))):named a46 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_bool_fun$ )(?v2 B$ )(?v3 C$ ))(! (= (fun_app$as (fun_app$at (pred_sp_mu$a ?v0 )?v1 )(fun_app$ad (put$c ?v2 )?v3 ))(and (fun_app$au ?v0 ?v2 )(fun_app$av ?v1 ?v3 ))):pattern ((fun_app$as (fun_app$at (pred_sp_mu$a ?v0 )?v1 )(fun_app$ad (put$c ?v2 )?v3 ))))):named a47 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_a_d_sp_nu_prod_bool_fun$ )(?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(! (= (fun_app$aw (pred_sp_mu$b ?v0 ?v1 )(put$d ?v2 ?v3 ))(and (fun_app$au ?v0 ?v2 )(fun_app$g ?v1 ?v3 ))):pattern ((fun_app$aw (pred_sp_mu$b ?v0 ?v1 )(put$d ?v2 ?v3 ))))):named a48 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (forall ((?v1 B$ )(?v2 C$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$c (fun_app$ad (put$c ?v1 )?v2 )?v3 ))false ))(and (forall ((?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 A_d_sp_nu$ ))(=> (= ?v0 (pair$c (get$ ?v1 )(fun_app$ab (put$b ?v2 )?v3 )))false ))(forall ((?v1 D_d_b_c_sp_mu_fun$ )(?v2 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(=> (= ?v0 (pair$c (get$ ?v1 )(get$a ?v2 )))false ))))false )):named a49 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_fun$ ))(= (fun_app$z (comp$b ?v0 )(fun_app$an (comp$f ?v1 )?v2 ))(fun_app$ap (comp$g (fun_app$z (comp$b ?v0 )?v1 ))?v2 ))):named a50 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$z (comp$b ?v0 )(fun_app$ax (comp$h ?v1 )?v2 ))(fun_app$z (comp$b (fun_app$ay (comp$i ?v0 )?v1 ))?v2 ))):named a51 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$am (comp$e ?v0 )(fun_app$z (comp$b ?v1 )?v2 ))(fun_app$z (comp$b (fun_app$ak (comp$d ?v0 )?v1 ))?v2 ))):named a52 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ ))(= (fun_app$an (comp$f ?v0 )(fun_app$az (comp$j ?v1 )?v2 ))(fun_app$an (comp$f (fun_app$an (comp$f ?v0 )?v1 ))?v2 ))):named a53 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_fun$ ))(= (fun_app$ax (comp$h ?v0 )(fun_app$an (comp$f ?v1 )?v2 ))(fun_app$an (comp$f (fun_app$ax (comp$h ?v0 )?v1 ))?v2 ))):named a54 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ ))(= (fun_app$ap (comp$g ?v0 )(fun_app$az (comp$j ?v1 )?v2 ))(fun_app$ap (comp$g (fun_app$ap (comp$g ?v0 )?v1 ))?v2 ))):named a55 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_fun$ ))(= (fun_app$ba (comp$k ?v0 )(fun_app$ap (comp$g ?v1 )?v2 ))(fun_app$an (comp$f (fun_app$ba (comp$k ?v0 )?v1 ))?v2 ))):named a56 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$ap (comp$g ?v0 )(fun_app$bb (comp$l ?v1 )?v2 ))(fun_app$z (comp$b (fun_app$bc (comp$m ?v0 )?v1 ))?v2 ))):named a57 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_fun$ ))(= (fun_app$am (comp$e ?v0 )(fun_app$ap (comp$g ?v1 )?v2 ))(fun_app$ap (comp$g (fun_app$am (comp$e ?v0 )?v1 ))?v2 ))):named a58 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(= (fun_app$ap (comp$g ?v0 )(fun_app$bd (comp$n ?v1 )?v2 ))(fun_app$am (comp$e (fun_app$be (comp$o ?v0 )?v1 ))?v2 ))):named a59 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_fun$ ))(= (fun_app$ap (comp$g (fun_app$z (comp$b ?v0 )?v1 ))?v2 )(fun_app$z (comp$b ?v0 )(fun_app$an (comp$f ?v1 )?v2 )))):named a60 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$z (comp$b (fun_app$ay (comp$i ?v0 )?v1 ))?v2 )(fun_app$z (comp$b ?v0 )(fun_app$ax (comp$h ?v1 )?v2 )))):named a61 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$z (comp$b (fun_app$ak (comp$d ?v0 )?v1 ))?v2 )(fun_app$am (comp$e ?v0 )(fun_app$z (comp$b ?v1 )?v2 )))):named a62 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ ))(= (fun_app$an (comp$f (fun_app$an (comp$f ?v0 )?v1 ))?v2 )(fun_app$an (comp$f ?v0 )(fun_app$az (comp$j ?v1 )?v2 )))):named a63 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_fun$ ))(= (fun_app$an (comp$f (fun_app$ax (comp$h ?v0 )?v1 ))?v2 )(fun_app$ax (comp$h ?v0 )(fun_app$an (comp$f ?v1 )?v2 )))):named a64 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ ))(= (fun_app$ap (comp$g (fun_app$ap (comp$g ?v0 )?v1 ))?v2 )(fun_app$ap (comp$g ?v0 )(fun_app$az (comp$j ?v1 )?v2 )))):named a65 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$z (comp$b (fun_app$bc (comp$m ?v0 )?v1 ))?v2 )(fun_app$ap (comp$g ?v0 )(fun_app$bb (comp$l ?v1 )?v2 )))):named a66 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_fun$ ))(= (fun_app$an (comp$f (fun_app$ba (comp$k ?v0 )?v1 ))?v2 )(fun_app$ba (comp$k ?v0 )(fun_app$ap (comp$g ?v1 )?v2 )))):named a67 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(= (fun_app$am (comp$e (fun_app$be (comp$o ?v0 )?v1 ))?v2 )(fun_app$ap (comp$g ?v0 )(fun_app$bd (comp$n ?v1 )?v2 )))):named a68 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_fun$ ))(= (fun_app$ap (comp$g (fun_app$am (comp$e ?v0 )?v1 ))?v2 )(fun_app$am (comp$e ?v0 )(fun_app$ap (comp$g ?v1 )?v2 )))):named a69 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )(?v1 D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ )(?v2 D$ ))(! (= (fun_app$ag (fun_app$ah (comp$c ?v0 )?v1 )?v2 )(fun_app$ai ?v0 (fun_app$aj ?v1 ?v2 ))):pattern ((fun_app$ag (fun_app$ah (comp$c ?v0 )?v1 )?v2 )))):named a70 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu$ ))(! (= (fun_app$t (fun_app$ak (comp$d ?v0 )?v1 )?v2 )(fun_app$al ?v0 (fun_app$t ?v1 ?v2 ))):pattern ((fun_app$t (fun_app$ak (comp$d ?v0 )?v1 )?v2 )))):named a71 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ ))(! (= (fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )(fun_app$al ?v0 (fun_app$af ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )))):named a72 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (fun_app$aa (fun_app$an (comp$f ?v0 )?v1 )?v2 )(fun_app$aa ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$aa (fun_app$an (comp$f ?v0 )?v1 )?v2 )))):named a73 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )))):named a74 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ ))(! (= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )))):named a75 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v4 ))(fun_app$t ?v2 (fun_app$aa ?v3 ?v4 ))))false ))false )):named a76 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ ))(=> (and (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$aa ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$aa ?v2 (fun_app$ao ?v3 ?v4 ))))false ))false )):named a77 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ ))(=> (and (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$af ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$af ?v2 (fun_app$ao ?v3 ?v4 ))))false ))false )):named a78 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ ))(=> (and (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v4 ))(fun_app$af ?v2 (fun_app$ao ?v3 ?v4 ))))false ))false )):named a79 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$af ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$t ?v2 (fun_app$aa ?v3 ?v4 ))))false ))false )):named a80 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ ))(=> (and (= (fun_app$am (comp$e ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$al ?v0 (fun_app$af ?v1 ?v4 ))(fun_app$af ?v2 (fun_app$ao ?v3 ?v4 ))))false ))false )):named a81 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$am (comp$e ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$af ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$al ?v2 (fun_app$af ?v3 ?v4 ))))false ))false )):named a82 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$am (comp$e ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v4 ))(fun_app$al ?v2 (fun_app$af ?v3 ?v4 ))))false ))false )):named a83 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$am (comp$e ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$al ?v0 (fun_app$af ?v1 ?v4 ))(fun_app$t ?v2 (fun_app$aa ?v3 ?v4 ))))false ))false )):named a84 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$am (comp$e ?v0 )?v1 )(fun_app$am (comp$e ?v2 )?v3 ))(=> (forall ((?v4 D$ ))(= (fun_app$al ?v0 (fun_app$af ?v1 ?v4 ))(fun_app$al ?v2 (fun_app$af ?v3 ?v4 ))))false ))false )):named a85 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$ax (comp$h ?v2 )?v3 ))(= (fun_app$ay (comp$i ?v4 )?v2 )?v5 ))(= (fun_app$ap (comp$g (fun_app$z (comp$b ?v4 )?v0 ))?v1 )(fun_app$z (comp$b ?v5 )?v3 )))):named a86 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ )(?v4 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$ax (comp$h ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(= (fun_app$z (comp$b ?v4 )?v2 )?v5 ))(= (fun_app$z (comp$b (fun_app$ay (comp$i ?v4 )?v0 ))?v1 )(fun_app$ap (comp$g ?v5 )?v3 )))):named a87 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(= (fun_app$ak (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$z (comp$b (fun_app$ak (comp$d ?v4 )?v0 ))?v1 )(fun_app$z (comp$b ?v5 )?v3 )))):named a88 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ )(?v3 D_d_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$az (comp$j ?v0 )?v1 )(fun_app$az (comp$j ?v2 )?v3 ))(= (fun_app$an (comp$f ?v4 )?v2 )?v5 ))(= (fun_app$an (comp$f (fun_app$an (comp$f ?v4 )?v0 ))?v1 )(fun_app$an (comp$f ?v5 )?v3 )))):named a89 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ )(?v4 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v5 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(= (fun_app$ax (comp$h ?v4 )?v2 )?v5 ))(= (fun_app$an (comp$f (fun_app$ax (comp$h ?v4 )?v0 ))?v1 )(fun_app$an (comp$f ?v5 )?v3 )))):named a90 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ )(?v3 D_d_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$az (comp$j ?v0 )?v1 )(fun_app$az (comp$j ?v2 )?v3 ))(= (fun_app$ap (comp$g ?v4 )?v2 )?v5 ))(= (fun_app$ap (comp$g (fun_app$ap (comp$g ?v4 )?v0 ))?v1 )(fun_app$ap (comp$g ?v5 )?v3 )))):named a91 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D_b_c_sp_mu_d_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$az (comp$j ?v0 )?v1 )(fun_app$bb (comp$l ?v2 )?v3 ))(= (fun_app$bc (comp$m ?v4 )?v2 )?v5 ))(= (fun_app$ap (comp$g (fun_app$ap (comp$g ?v4 )?v0 ))?v1 )(fun_app$z (comp$b ?v5 )?v3 )))):named a92 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_fun$ )(?v3 D_d_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$bb (comp$l ?v0 )?v1 )(fun_app$az (comp$j ?v2 )?v3 ))(= (fun_app$ap (comp$g ?v4 )?v2 )?v5 ))(= (fun_app$z (comp$b (fun_app$bc (comp$m ?v4 )?v0 ))?v1 )(fun_app$ap (comp$g ?v5 )?v3 )))):named a93 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ )(?v4 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(= (fun_app$z (comp$b ?v4 )?v2 )?v5 ))(= (fun_app$ap (comp$g (fun_app$z (comp$b ?v4 )?v0 ))?v1 )(fun_app$ap (comp$g ?v5 )?v3 )))):named a94 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ )(?v4 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ )(?v5 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(= (fun_app$ba (comp$k ?v4 )?v2 )?v5 ))(= (fun_app$an (comp$f (fun_app$ba (comp$k ?v4 )?v0 ))?v1 )(fun_app$an (comp$f ?v5 )?v3 )))):named a95 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_fun$ )(?v5 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(= (fun_app$an (comp$f ?v3 )?v4 )?v5 ))(= (fun_app$z (comp$b ?v0 )(fun_app$an (comp$f ?v1 )?v4 ))(fun_app$z (comp$b ?v2 )?v5 )))):named a96 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$ak (comp$d ?v0 )?v1 )(fun_app$ay (comp$i ?v2 )?v3 ))(= (fun_app$ax (comp$h ?v3 )?v4 )?v5 ))(= (fun_app$am (comp$e ?v0 )(fun_app$z (comp$b ?v1 )?v4 ))(fun_app$z (comp$b ?v2 )?v5 )))):named a97 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$ay (comp$i ?v0 )?v1 )(fun_app$ak (comp$d ?v2 )?v3 ))(= (fun_app$z (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$z (comp$b ?v0 )(fun_app$ax (comp$h ?v1 )?v4 ))(fun_app$am (comp$e ?v2 )?v5 )))):named a98 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(= (fun_app$az (comp$j ?v3 )?v4 )?v5 ))(= (fun_app$an (comp$f ?v0 )(fun_app$az (comp$j ?v1 )?v4 ))(fun_app$an (comp$f ?v2 )?v5 )))):named a99 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$ax (comp$h ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(= (fun_app$az (comp$j ?v3 )?v4 )?v5 ))(= (fun_app$ax (comp$h ?v0 )(fun_app$an (comp$f ?v1 )?v4 ))(fun_app$an (comp$f ?v2 )?v5 )))):named a100 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_fun$ )(?v5 D_d_b_c_sp_mu_fun$ ))(=> (and (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$ax (comp$h ?v2 )?v3 ))(= (fun_app$an (comp$f ?v3 )?v4 )?v5 ))(= (fun_app$an (comp$f ?v0 )(fun_app$az (comp$j ?v1 )?v4 ))(fun_app$ax (comp$h ?v2 )?v5 )))):named a101 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(= (fun_app$az (comp$j ?v3 )?v4 )?v5 ))(= (fun_app$ap (comp$g ?v0 )(fun_app$az (comp$j ?v1 )?v4 ))(fun_app$ap (comp$g ?v2 )?v5 )))):named a102 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$ba (comp$k ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(= (fun_app$az (comp$j ?v3 )?v4 )?v5 ))(= (fun_app$ba (comp$k ?v0 )(fun_app$ap (comp$g ?v1 )?v4 ))(fun_app$an (comp$f ?v2 )?v5 )))):named a103 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(= (fun_app$az (comp$j ?v3 )?v4 )?v5 ))(= (fun_app$z (comp$b ?v0 )(fun_app$an (comp$f ?v1 )?v4 ))(fun_app$ap (comp$g ?v2 )?v5 )))):named a104 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (and (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$ba (comp$k ?v2 )?v3 ))(= (fun_app$ap (comp$g ?v3 )?v4 )?v5 ))(= (fun_app$an (comp$f ?v0 )(fun_app$az (comp$j ?v1 )?v4 ))(fun_app$ba (comp$k ?v2 )?v5 )))):named a105 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D$ ))(=> (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v4 ))(fun_app$t ?v2 (fun_app$aa ?v3 ?v4 ))))):named a106 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ )(?v4 D$ ))(=> (= (fun_app$an (comp$f ?v0 )?v1 )(fun_app$an (comp$f ?v2 )?v3 ))(= (fun_app$aa ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$aa ?v2 (fun_app$ao ?v3 ?v4 ))))):named a107 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ )(?v4 D$ ))(=> (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(= (fun_app$af ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$af ?v2 (fun_app$ao ?v3 ?v4 ))))):named a108 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ )(?v4 D$ ))(=> (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v4 ))(fun_app$af ?v2 (fun_app$ao ?v3 ?v4 ))))):named a109 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D$ ))(=> (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(= (fun_app$af ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$t ?v2 (fun_app$aa ?v3 ?v4 ))))):named a110 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ )(?v4 D$ ))(=> (= (fun_app$am (comp$e ?v0 )?v1 )(fun_app$ap (comp$g ?v2 )?v3 ))(= (fun_app$al ?v0 (fun_app$af ?v1 ?v4 ))(fun_app$af ?v2 (fun_app$ao ?v3 ?v4 ))))):named a111 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D$ ))(=> (= (fun_app$ap (comp$g ?v0 )?v1 )(fun_app$am (comp$e ?v2 )?v3 ))(= (fun_app$af ?v0 (fun_app$ao ?v1 ?v4 ))(fun_app$al ?v2 (fun_app$af ?v3 ?v4 ))))):named a112 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D$ ))(=> (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$am (comp$e ?v2 )?v3 ))(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v4 ))(fun_app$al ?v2 (fun_app$af ?v3 ?v4 ))))):named a113 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D$ ))(=> (= (fun_app$am (comp$e ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(= (fun_app$al ?v0 (fun_app$af ?v1 ?v4 ))(fun_app$t ?v2 (fun_app$aa ?v3 ?v4 ))))):named a114 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D$ ))(=> (= (fun_app$am (comp$e ?v0 )?v1 )(fun_app$am (comp$e ?v2 )?v3 ))(= (fun_app$al ?v0 (fun_app$af ?v1 ?v4 ))(fun_app$al ?v2 (fun_app$af ?v3 ?v4 ))))):named a115 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$an (comp$f ?v0 )?v1 )?v2 )(= (fun_app$ap (comp$g (fun_app$z (comp$b ?v3 )?v0 ))?v1 )(fun_app$z (comp$b ?v3 )?v2 )))):named a116 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$ax (comp$h ?v0 )?v1 )?v2 )(= (fun_app$z (comp$b (fun_app$ay (comp$i ?v3 )?v0 ))?v1 )(fun_app$z (comp$b ?v3 )?v2 )))):named a117 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$z (comp$b ?v0 )?v1 )?v2 )(= (fun_app$z (comp$b (fun_app$ak (comp$d ?v3 )?v0 ))?v1 )(fun_app$am (comp$e ?v3 )?v2 )))):named a118 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$az (comp$j ?v0 )?v1 )?v2 )(= (fun_app$an (comp$f (fun_app$an (comp$f ?v3 )?v0 ))?v1 )(fun_app$an (comp$f ?v3 )?v2 )))):named a119 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_b_c_sp_mu_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$an (comp$f ?v0 )?v1 )?v2 )(= (fun_app$an (comp$f (fun_app$ax (comp$h ?v3 )?v0 ))?v1 )(fun_app$ax (comp$h ?v3 )?v2 )))):named a120 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D_d_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$az (comp$j ?v0 )?v1 )?v2 )(= (fun_app$ap (comp$g (fun_app$ap (comp$g ?v3 )?v0 ))?v1 )(fun_app$ap (comp$g ?v3 )?v2 )))):named a121 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$bb (comp$l ?v0 )?v1 )?v2 )(= (fun_app$z (comp$b (fun_app$bc (comp$m ?v3 )?v0 ))?v1 )(fun_app$ap (comp$g ?v3 )?v2 )))):named a122 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(= (fun_app$an (comp$f (fun_app$ba (comp$k ?v3 )?v0 ))?v1 )(fun_app$ba (comp$k ?v3 )?v2 )))):named a123 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$bd (comp$n ?v0 )?v1 )?v2 )(= (fun_app$am (comp$e (fun_app$be (comp$o ?v3 )?v0 ))?v1 )(fun_app$ap (comp$g ?v3 )?v2 )))):named a124 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(= (fun_app$ap (comp$g (fun_app$am (comp$e ?v3 )?v0 ))?v1 )(fun_app$am (comp$e ?v3 )?v2 )))):named a125 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$z (comp$b ?v0 )?v1 )?v2 )(= (fun_app$z (comp$b ?v0 )(fun_app$an (comp$f ?v1 )?v3 ))(fun_app$ap (comp$g ?v2 )?v3 )))):named a126 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$ay (comp$i ?v0 )?v1 )?v2 )(= (fun_app$z (comp$b ?v0 )(fun_app$ax (comp$h ?v1 )?v3 ))(fun_app$z (comp$b ?v2 )?v3 )))):named a127 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$ak (comp$d ?v0 )?v1 )?v2 )(= (fun_app$am (comp$e ?v0 )(fun_app$z (comp$b ?v1 )?v3 ))(fun_app$z (comp$b ?v2 )?v3 )))):named a128 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$an (comp$f ?v0 )?v1 )?v2 )(= (fun_app$an (comp$f ?v0 )(fun_app$az (comp$j ?v1 )?v3 ))(fun_app$an (comp$f ?v2 )?v3 )))):named a129 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$ax (comp$h ?v0 )?v1 )?v2 )(= (fun_app$ax (comp$h ?v0 )(fun_app$an (comp$f ?v1 )?v3 ))(fun_app$an (comp$f ?v2 )?v3 )))):named a130 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(= (fun_app$ap (comp$g ?v0 )(fun_app$az (comp$j ?v1 )?v3 ))(fun_app$ap (comp$g ?v2 )?v3 )))):named a131 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_b_c_sp_mu_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$ba (comp$k ?v0 )?v1 )?v2 )(= (fun_app$ba (comp$k ?v0 )(fun_app$ap (comp$g ?v1 )?v3 ))(fun_app$an (comp$f ?v2 )?v3 )))):named a132 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_d_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$bc (comp$m ?v0 )?v1 )?v2 )(= (fun_app$ap (comp$g ?v0 )(fun_app$bb (comp$l ?v1 )?v3 ))(fun_app$z (comp$b ?v2 )?v3 )))):named a133 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$be (comp$o ?v0 )?v1 )?v2 )(= (fun_app$ap (comp$g ?v0 )(fun_app$bd (comp$n ?v1 )?v3 ))(fun_app$am (comp$e ?v2 )?v3 )))):named a134 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_fun$ ))(=> (= (fun_app$am (comp$e ?v0 )?v1 )?v2 )(= (fun_app$am (comp$e ?v0 )(fun_app$ap (comp$g ?v1 )?v3 ))(fun_app$ap (comp$g ?v2 )?v3 )))):named a135 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun_fun$ )(?v1 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(! (= (fun_app$u (sp_mu_comp2R$c ?v0 )(get$a ?v1 ))(get$a (fun_app$bf (comp$p (sp_mu_comp2R$c ?v0 ))?v1 ))):pattern ((fun_app$u (sp_mu_comp2R$c ?v0 )(get$a ?v1 ))))):named a136 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(! (= (fun_app$q (sp_mu_comp2R$b ?v0 )(get$a ?v1 ))(get$c (fun_app$p (comp$q (sp_mu_comp2R$b ?v0 ))?v1 ))):pattern ((fun_app$q (sp_mu_comp2R$b ?v0 )(get$a ?v1 ))))):named a137 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_prod_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )(?v1 D_d_b_c_sp_mu_d_b_c_sp_mu_prod_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_prod_fun$ )(?v3 D$ ))(=> (= (fun_app$ah (comp$c ?v0 )?v1 )?v2 )(= (fun_app$ai ?v0 (fun_app$aj ?v1 ?v3 ))(fun_app$ag ?v2 ?v3 )))):named a138 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_b_c_sp_mu$ ))(=> (= (fun_app$ak (comp$d ?v0 )?v1 )?v2 )(= (fun_app$al ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$t ?v2 ?v3 )))):named a139 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D$ ))(=> (= (fun_app$am (comp$e ?v0 )?v1 )?v2 )(= (fun_app$al ?v0 (fun_app$af ?v1 ?v3 ))(fun_app$af ?v2 ?v3 )))):named a140 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D$ ))(=> (= (fun_app$an (comp$f ?v0 )?v1 )?v2 )(= (fun_app$aa ?v0 (fun_app$ao ?v1 ?v3 ))(fun_app$aa ?v2 ?v3 )))):named a141 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D$ ))(=> (= (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(= (fun_app$af ?v0 (fun_app$ao ?v1 ?v3 ))(fun_app$af ?v2 ?v3 )))):named a142 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D$ ))(=> (= (fun_app$z (comp$b ?v0 )?v1 )?v2 )(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v3 ))(fun_app$af ?v2 ?v3 )))):named a143 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D$ ))(member$f (pair$b (fun_app$aa ?v0 ?v1 )(get$ ?v0 ))sub$ )):named a144 ))
(assert (! (forall ((?v0 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 A$ ))(member$g (pair$d (fun_app$r ?v0 ?v1 )(get$a ?v0 ))sub$a )):named a145 ))
(assert (! (forall ((?v0 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v1 A$ ))(member$ (pair$e (fun_app$o ?v0 ?v1 )(get$c ?v0 ))sub$b )):named a146 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_bool_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(! (= (fun_app$as (fun_app$at (pred_sp_mu$a ?v0 )?v1 )(get$ ?v2 ))(pred_fun$ (fun_app$at (pred_sp_mu$a ?v0 )?v1 )?v2 )):pattern ((fun_app$as (fun_app$at (pred_sp_mu$a ?v0 )?v1 )(get$ ?v2 ))))):named a147 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 A_d_sp_nu_bool_fun$ )(?v2 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(! (= (fun_app$i (fun_app$aq (pred_sp_mu$ ?v0 )?v1 )(get$a ?v2 ))(pred_fun$a (fun_app$aq (pred_sp_mu$ ?v0 )?v1 )?v2 )):pattern ((fun_app$i (fun_app$aq (pred_sp_mu$ ?v0 )?v1 )(get$a ?v2 ))))):named a148 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_a_d_sp_nu_prod_bool_fun$ )(?v2 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ ))(! (= (fun_app$aw (pred_sp_mu$b ?v0 ?v1 )(get$c ?v2 ))(pred_fun$b (pred_sp_mu$b ?v0 ?v1 )?v2 )):pattern ((fun_app$aw (pred_sp_mu$b ?v0 ?v1 )(get$c ?v2 ))))):named a149 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 D_stream$ )(?v2 B_c_prod$ )(?v3 D_stream$ ))(= (= (pair$g ?v0 ?v1 )(pair$g ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a150 ))
(assert (! (forall ((?v0 D$ )(?v1 A_d_sp_nu$ )(?v2 D$ )(?v3 A_d_sp_nu$ ))(= (= (pair$h ?v0 ?v1 )(pair$h ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a151 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C$ )(?v3 C$ ))(= (= (pair$i ?v0 ?v1 )(pair$i ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a152 ))
(assert (! (forall ((?v0 B$ )(?v1 C_a_d_sp_nu_prod$ )(?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(= (= (pair$j ?v0 ?v1 )(pair$j ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a153 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(= (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a154 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a155 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ )(?v2 C$ )(?v3 A_d_sp_nu$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a156 ))
(assert (! (forall ((?v0 B_c_prod$ )(?v1 D_stream$ )(?v2 B_c_prod$ )(?v3 D_stream$ ))(= (= (pair$g ?v0 ?v1 )(pair$g ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a157 ))
(assert (! (forall ((?v0 D$ )(?v1 A_d_sp_nu$ )(?v2 D$ )(?v3 A_d_sp_nu$ ))(= (= (pair$h ?v0 ?v1 )(pair$h ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a158 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C$ )(?v3 C$ ))(= (= (pair$i ?v0 ?v1 )(pair$i ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a159 ))
(assert (! (forall ((?v0 B$ )(?v1 C_a_d_sp_nu_prod$ )(?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(= (= (pair$j ?v0 ?v1 )(pair$j ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a160 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(= (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a161 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a162 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ )(?v2 C$ )(?v3 A_d_sp_nu$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a163 ))
(assert (! (forall ((?v0 D$ )(?v1 A_d_sp_nu$ )(?v2 A_stream$ ))(! (= (run_mu$ (fun_app$ab (put$b ?v0 )?v1 )?v2 )(pair$k (pair$h ?v0 ?v1 )?v2 )):pattern ((run_mu$ (fun_app$ab (put$b ?v0 )?v1 )?v2 )))):named a164 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 D_stream$ ))(! (= (run_mu$a (fun_app$ad (put$c ?v0 )?v1 )?v2 )(pair$g (pair$f ?v0 ?v1 )?v2 )):pattern ((run_mu$a (fun_app$ad (put$c ?v0 )?v1 )?v2 )))):named a165 ))
(assert (! (forall ((?v0 B$ )(?v1 C_a_d_sp_nu_prod$ )(?v2 A_stream$ ))(! (= (run_mu$b (put$d ?v0 ?v1 )?v2 )(pair$l (pair$j ?v0 ?v1 )?v2 )):pattern ((run_mu$b (put$d ?v0 ?v1 )?v2 )))):named a166 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu$ )(?v1 A_a_a_a_sp_nu_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu_a_a_a_a_sp_nu_sp_mu_bool_fun_fun$ ))(=> (and (accp$ sp_mu_comp_rel$ (pair$m ?v0 ?v1 ))(and (forall ((?v3 D$ )(?v4 A_d_sp_nu$ )(?v5 A_a_a_a_sp_nu_sp_mu$ ))(=> (accp$ sp_mu_comp_rel$ (pair$m (fun_app$ab (put$b ?v3 )?v4 )?v5 ))(fun_app$bg (fun_app$bh ?v2 (fun_app$ab (put$b ?v3 )?v4 ))?v5 )))(and (forall ((?v3 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v4 A$ )(?v5 A_a_sp_nu$ ))(=> (and (accp$ sp_mu_comp_rel$ (pair$m (get$a ?v3 )(put$ ?v4 ?v5 )))(fun_app$bg (fun_app$bh ?v2 (fun_app$r ?v3 ?v4 ))(out$ ?v5 )))(fun_app$bg (fun_app$bh ?v2 (get$a ?v3 ))(put$ ?v4 ?v5 ))))(forall ((?v3 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v4 A_a_a_a_a_sp_nu_sp_mu_fun$ ))(=> (and (accp$ sp_mu_comp_rel$ (pair$m (get$a ?v3 )(get$d ?v4 )))(forall ((?v5 A$ ))(fun_app$bg (fun_app$bh ?v2 (get$a ?v3 ))(fun_app$bi ?v4 ?v5 ))))(fun_app$bg (fun_app$bh ?v2 (get$a ?v3 ))(get$d ?v4 )))))))(fun_app$bg (fun_app$bh ?v2 ?v0 )?v1 ))):named a167 ))
(assert (! (forall ((?v0 A_b_c_a_d_sp_nu_prod_sp_mu$ )(?v1 A_a_a_a_sp_nu_sp_mu$ )(?v2 A_b_c_a_d_sp_nu_prod_sp_mu_a_a_a_a_sp_nu_sp_mu_bool_fun_fun$ ))(=> (and (accp$a sp_mu_comp_rel$a (pair$n ?v0 ?v1 ))(and (forall ((?v3 B$ )(?v4 C_a_d_sp_nu_prod$ )(?v5 A_a_a_a_sp_nu_sp_mu$ ))(=> (accp$a sp_mu_comp_rel$a (pair$n (put$d ?v3 ?v4 )?v5 ))(fun_app$bg (fun_app$bj ?v2 (put$d ?v3 ?v4 ))?v5 )))(and (forall ((?v3 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v4 A$ )(?v5 A_a_sp_nu$ ))(=> (and (accp$a sp_mu_comp_rel$a (pair$n (get$c ?v3 )(put$ ?v4 ?v5 )))(fun_app$bg (fun_app$bj ?v2 (fun_app$o ?v3 ?v4 ))(out$ ?v5 )))(fun_app$bg (fun_app$bj ?v2 (get$c ?v3 ))(put$ ?v4 ?v5 ))))(forall ((?v3 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v4 A_a_a_a_a_sp_nu_sp_mu_fun$ ))(=> (and (accp$a sp_mu_comp_rel$a (pair$n (get$c ?v3 )(get$d ?v4 )))(forall ((?v5 A$ ))(fun_app$bg (fun_app$bj ?v2 (get$c ?v3 ))(fun_app$bi ?v4 ?v5 ))))(fun_app$bg (fun_app$bj ?v2 (get$c ?v3 ))(get$d ?v4 )))))))(fun_app$bg (fun_app$bj ?v2 ?v0 )?v1 ))):named a168 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 D_d_d_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu_d_d_d_d_sp_nu_sp_mu_bool_fun_fun$ ))(=> (and (accp$b sp_mu_comp_rel$b (pair$o ?v0 ?v1 ))(and (forall ((?v3 B$ )(?v4 C$ )(?v5 D_d_d_d_sp_nu_sp_mu$ ))(=> (accp$b sp_mu_comp_rel$b (pair$o (fun_app$ad (put$c ?v3 )?v4 )?v5 ))(fun_app$bk (fun_app$bl ?v2 (fun_app$ad (put$c ?v3 )?v4 ))?v5 )))(and (forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 D$ )(?v5 D_d_sp_nu$ ))(=> (and (accp$b sp_mu_comp_rel$b (pair$o (get$ ?v3 )(put$a ?v4 ?v5 )))(fun_app$bk (fun_app$bl ?v2 (fun_app$aa ?v3 ?v4 ))(out$a ?v5 )))(fun_app$bk (fun_app$bl ?v2 (get$ ?v3 ))(put$a ?v4 ?v5 ))))(forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_d_d_d_sp_nu_sp_mu_fun$ ))(=> (and (accp$b sp_mu_comp_rel$b (pair$o (get$ ?v3 )(get$b ?v4 )))(forall ((?v5 D$ ))(fun_app$bk (fun_app$bl ?v2 (get$ ?v3 ))(fun_app$ac ?v4 ?v5 ))))(fun_app$bk (fun_app$bl ?v2 (get$ ?v3 ))(get$b ?v4 )))))))(fun_app$bk (fun_app$bl ?v2 ?v0 )?v1 ))):named a169 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ ))(=> (and (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c ?v0 ?v1 ))(and (forall ((?v3 B$ )(?v4 C$ )(?v5 A_d_a_d_sp_nu_sp_mu$ ))(=> (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (fun_app$ad (put$c ?v3 )?v4 )?v5 ))(fun_app$i (fun_app$j ?v2 (fun_app$ad (put$c ?v3 )?v4 ))?v5 )))(and (forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 D$ )(?v5 A_d_sp_nu$ ))(=> (and (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (get$ ?v3 )(fun_app$ab (put$b ?v4 )?v5 )))(fun_app$i (fun_app$j ?v2 (fun_app$aa ?v3 ?v4 ))(out$b ?v5 )))(fun_app$i (fun_app$j ?v2 (get$ ?v3 ))(fun_app$ab (put$b ?v4 )?v5 ))))(forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(=> (and (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (get$ ?v3 )(get$a ?v4 )))(forall ((?v5 A$ ))(fun_app$i (fun_app$j ?v2 (get$ ?v3 ))(fun_app$r ?v4 ?v5 ))))(fun_app$i (fun_app$j ?v2 (get$ ?v3 ))(get$a ?v4 )))))))(fun_app$i (fun_app$j ?v2 ?v0 )?v1 ))):named a170 ))
(assert (! (forall ((?v0 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v1 A$ )(?v2 A_a_sp_nu$ ))(! (=> (accp$a sp_mu_comp_rel$a (pair$n (get$c ?v0 )(put$ ?v1 ?v2 )))(= (sp_mu_comp$a (get$c ?v0 )(put$ ?v1 ?v2 ))(sp_mu_comp$a (fun_app$o ?v0 ?v1 )(out$ ?v2 )))):pattern ((sp_mu_comp$a (get$c ?v0 )(put$ ?v1 ?v2 ))))):named a171 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D$ )(?v2 D_d_sp_nu$ ))(! (=> (accp$b sp_mu_comp_rel$b (pair$o (get$ ?v0 )(put$a ?v1 ?v2 )))(= (sp_mu_comp$b (get$ ?v0 )(put$a ?v1 ?v2 ))(sp_mu_comp$b (fun_app$aa ?v0 ?v1 )(out$a ?v2 )))):pattern ((sp_mu_comp$b (get$ ?v0 )(put$a ?v1 ?v2 ))))):named a172 ))
(assert (! (forall ((?v0 A_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 A$ )(?v2 A_a_sp_nu$ ))(! (=> (accp$ sp_mu_comp_rel$ (pair$m (get$a ?v0 )(put$ ?v1 ?v2 )))(= (sp_mu_comp$c (get$a ?v0 )(put$ ?v1 ?v2 ))(sp_mu_comp$c (fun_app$r ?v0 ?v1 )(out$ ?v2 )))):pattern ((sp_mu_comp$c (get$a ?v0 )(put$ ?v1 ?v2 ))))):named a173 ))
(assert (! (forall ((?v0 D_d_d_d_d_sp_nu_sp_mu_fun$ )(?v1 D$ )(?v2 A_d_sp_nu$ ))(! (=> (accp$d sp_mu_comp_rel$d (pair$p (get$b ?v0 )(fun_app$ab (put$b ?v1 )?v2 )))(= (sp_mu_comp$d (get$b ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))(sp_mu_comp$d (fun_app$ac ?v0 ?v1 )(out$b ?v2 )))):pattern ((sp_mu_comp$d (get$b ?v0 )(fun_app$ab (put$b ?v1 )?v2 ))))):named a174 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D$ )(?v2 A_d_sp_nu$ ))(! (=> (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (get$ ?v0 )(fun_app$ab (put$b ?v1 )?v2 )))(= (fun_app$q (sp_mu_comp$ (get$ ?v0 ))(fun_app$ab (put$b ?v1 )?v2 ))(fun_app$q (sp_mu_comp$ (fun_app$aa ?v0 ?v1 ))(out$b ?v2 )))):pattern ((fun_app$q (sp_mu_comp$ (get$ ?v0 ))(fun_app$ab (put$b ?v1 )?v2 ))))):named a175 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D$ ))(=> (= (fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$t ?v3 (fun_app$aa ?v4 ?v5 )))(= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$af (fun_app$z (comp$b ?v3 )?v4 )?v5 )))):named a176 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_fun$ )(?v5 D$ ))(=> (= (fun_app$aa ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$aa ?v3 (fun_app$ao ?v4 ?v5 )))(= (fun_app$aa (fun_app$an (comp$f ?v0 )?v1 )?v2 )(fun_app$aa (fun_app$an (comp$f ?v3 )?v4 )?v5 )))):named a177 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ )(?v5 D$ ))(=> (= (fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v5 )))(= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g ?v3 )?v4 )?v5 )))):named a178 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ )(?v5 D$ ))(=> (= (fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v5 )))(= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g ?v3 )?v4 )?v5 )))):named a179 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D$ ))(=> (= (fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$t ?v3 (fun_app$aa ?v4 ?v5 )))(= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af (fun_app$z (comp$b ?v3 )?v4 )?v5 )))):named a180 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ )(?v5 D$ ))(=> (= (fun_app$al ?v0 (fun_app$af ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v5 )))(= (fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g ?v3 )?v4 )?v5 )))):named a181 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D$ ))(=> (= (fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$al ?v3 (fun_app$af ?v4 ?v5 )))(= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af (fun_app$am (comp$e ?v3 )?v4 )?v5 )))):named a182 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D$ ))(=> (= (fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$al ?v3 (fun_app$af ?v4 ?v5 )))(= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$af (fun_app$am (comp$e ?v3 )?v4 )?v5 )))):named a183 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_b_c_sp_mu$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ )(?v5 D$ ))(=> (= (fun_app$al ?v0 (fun_app$t ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v5 )))(= (fun_app$t (fun_app$ak (comp$d ?v0 )?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g ?v3 )?v4 )?v5 )))):named a184 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D$ ))(=> (= (fun_app$al ?v0 (fun_app$af ?v1 ?v2 ))(fun_app$t ?v3 (fun_app$aa ?v4 ?v5 )))(= (fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )(fun_app$af (fun_app$z (comp$b ?v3 )?v4 )?v5 )))):named a185 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$t ?v3 (fun_app$aa ?v4 ?v2 )))(= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$af (fun_app$z (comp$b ?v3 )?v4 )?v2 )))):named a186 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_fun$ ))(=> (= (fun_app$aa ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$aa ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$aa (fun_app$an (comp$f ?v0 )?v1 )?v2 )(fun_app$aa (fun_app$an (comp$f ?v3 )?v4 )?v2 )))):named a187 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ ))(=> (= (fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g ?v3 )?v4 )?v2 )))):named a188 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ ))(=> (= (fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g ?v3 )?v4 )?v2 )))):named a189 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$t ?v3 (fun_app$aa ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af (fun_app$z (comp$b ?v3 )?v4 )?v2 )))):named a190 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ ))(=> (= (fun_app$al ?v0 (fun_app$af ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g ?v3 )?v4 )?v2 )))):named a191 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$al ?v3 (fun_app$af ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g ?v0 )?v1 )?v2 )(fun_app$af (fun_app$am (comp$e ?v3 )?v4 )?v2 )))):named a192 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$t ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$al ?v3 (fun_app$af ?v4 ?v2 )))(= (fun_app$af (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$af (fun_app$am (comp$e ?v3 )?v4 )?v2 )))):named a193 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$al ?v0 (fun_app$af ?v1 ?v2 ))(fun_app$t ?v3 (fun_app$aa ?v4 ?v2 )))(= (fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )(fun_app$af (fun_app$z (comp$b ?v3 )?v4 )?v2 )))):named a194 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$al ?v0 (fun_app$af ?v1 ?v2 ))(fun_app$al ?v3 (fun_app$af ?v4 ?v2 )))(= (fun_app$af (fun_app$am (comp$e ?v0 )?v1 )?v2 )(fun_app$af (fun_app$am (comp$e ?v3 )?v4 )?v2 )))):named a195 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$aa ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$bm ?v3 (fun_app$aa ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g (fun_app$z (comp$b ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$z (comp$b (fun_app$ay (comp$i ?v5 )?v3 ))?v4 )?v2 )))):named a196 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_fun$ )(?v5 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$bm ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$aa ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$z (comp$b (fun_app$ay (comp$i ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g (fun_app$z (comp$b ?v5 )?v3 ))?v4 )?v2 )))):named a197 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_b_c_sp_mu_fun$ ))(=> (= (fun_app$ao ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$ao ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$aa (fun_app$an (comp$f (fun_app$an (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$aa (fun_app$an (comp$f (fun_app$an (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a198 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$ao ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$ao ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g (fun_app$ap (comp$g ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g (fun_app$ap (comp$g ?v5 )?v3 ))?v4 )?v2 )))):named a199 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$bn ?v0 (fun_app$aa ?v1 ?v2 ))(fun_app$ao ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$z (comp$b (fun_app$bc (comp$m ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g (fun_app$ap (comp$g ?v5 )?v3 ))?v4 )?v2 )))):named a200 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_fun$ )(?v5 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$aa ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$aa ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g (fun_app$z (comp$b ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g (fun_app$z (comp$b ?v5 )?v3 ))?v4 )?v2 )))):named a201 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_b_c_sp_mu_d_fun$ )(?v4 D_d_b_c_sp_mu_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$ao ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$bn ?v3 (fun_app$aa ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g (fun_app$ap (comp$g ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$z (comp$b (fun_app$bc (comp$m ?v5 )?v3 ))?v4 )?v2 )))):named a202 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )(?v1 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$bo ?v0 (fun_app$af ?v1 ?v2 ))(fun_app$ao ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$am (comp$e (fun_app$be (comp$o ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g (fun_app$ap (comp$g ?v5 )?v3 ))?v4 )?v2 )))):named a203 ))
(assert (! (forall ((?v0 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v4 D_d_fun$ )(?v5 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$af ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$af ?v3 (fun_app$ao ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g (fun_app$am (comp$e ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$ap (comp$g (fun_app$am (comp$e ?v5 )?v3 ))?v4 )?v2 )))):named a204 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_d_fun$ )(?v4 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v5 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ ))(=> (= (fun_app$ao ?v0 (fun_app$ao ?v1 ?v2 ))(fun_app$bo ?v3 (fun_app$af ?v4 ?v2 )))(= (fun_app$af (fun_app$ap (comp$g (fun_app$ap (comp$g ?v5 )?v0 ))?v1 )?v2 )(fun_app$af (fun_app$am (comp$e (fun_app$be (comp$o ?v5 )?v3 ))?v4 )?v2 )))):named a205 ))
(assert (! (forall ((?v0 B_c_prod_d_stream_prod$ ))(=> (forall ((?v1 B_c_prod$ )(?v2 D_stream$ ))(=> (= ?v0 (pair$g ?v1 ?v2 ))false ))false )):named a206 ))
(assert (! (forall ((?v0 D_a_d_sp_nu_prod$ ))(=> (forall ((?v1 D$ )(?v2 A_d_sp_nu$ ))(=> (= ?v0 (pair$h ?v1 ?v2 ))false ))false )):named a207 ))
(assert (! (forall ((?v0 C_c_prod$ ))(=> (forall ((?v1 C$ )(?v2 C$ ))(=> (= ?v0 (pair$i ?v1 ?v2 ))false ))false )):named a208 ))
(assert (! (forall ((?v0 B_c_a_d_sp_nu_prod_prod$ ))(=> (forall ((?v1 B$ )(?v2 C_a_d_sp_nu_prod$ ))(=> (= ?v0 (pair$j ?v1 ?v2 ))false ))false )):named a209 ))
(assert (! (forall ((?v0 B_c_prod$ ))(=> (forall ((?v1 B$ )(?v2 C$ ))(=> (= ?v0 (pair$f ?v1 ?v2 ))false ))false )):named a210 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (forall ((?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$c ?v1 ?v2 ))false ))false )):named a211 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ ))(=> (forall ((?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a212 ))
(assert (! (forall ((?v0 B_c_a_d_sp_nu_prod_prod_bool_fun$ )(?v1 B_c_a_d_sp_nu_prod_prod$ ))(=> (forall ((?v2 B$ )(?v3 C$ )(?v4 A_d_sp_nu$ ))(fun_app$bp ?v0 (pair$j ?v2 (pair$ ?v3 ?v4 ))))(fun_app$bp ?v0 ?v1 ))):named a213 ))
(assert (! (forall ((?v0 B_c_a_d_sp_nu_prod_prod$ ))(=> (forall ((?v1 B$ )(?v2 C$ )(?v3 A_d_sp_nu$ ))(=> (= ?v0 (pair$j ?v1 (pair$ ?v2 ?v3 )))false ))false )):named a214 ))
(assert (! (forall ((?v0 B_c_prod_d_stream_prod_bool_fun$ )(?v1 B_c_prod_d_stream_prod$ ))(=> (forall ((?v2 B_c_prod$ )(?v3 D_stream$ ))(fun_app$bq ?v0 (pair$g ?v2 ?v3 )))(fun_app$bq ?v0 ?v1 ))):named a215 ))
(assert (! (forall ((?v0 D_a_d_sp_nu_prod_bool_fun$ )(?v1 D_a_d_sp_nu_prod$ ))(=> (forall ((?v2 D$ )(?v3 A_d_sp_nu$ ))(fun_app$br ?v0 (pair$h ?v2 ?v3 )))(fun_app$br ?v0 ?v1 ))):named a216 ))
(assert (! (forall ((?v0 C_c_prod_bool_fun$ )(?v1 C_c_prod$ ))(=> (forall ((?v2 C$ )(?v3 C$ ))(fun_app$h ?v0 (pair$i ?v2 ?v3 )))(fun_app$h ?v0 ?v1 ))):named a217 ))
(assert (! (forall ((?v0 B_c_a_d_sp_nu_prod_prod_bool_fun$ )(?v1 B_c_a_d_sp_nu_prod_prod$ ))(=> (forall ((?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(fun_app$bp ?v0 (pair$j ?v2 ?v3 )))(fun_app$bp ?v0 ?v1 ))):named a218 ))
(assert (! (forall ((?v0 B_c_prod_bool_fun$ )(?v1 B_c_prod$ ))(=> (forall ((?v2 B$ )(?v3 C$ ))(fun_app$bs ?v0 (pair$f ?v2 ?v3 )))(fun_app$bs ?v0 ?v1 ))):named a219 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (forall ((?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(fun_app$k ?v0 (pair$c ?v2 ?v3 )))(fun_app$k ?v0 ?v1 ))):named a220 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_bool_fun$ )(?v1 C_a_d_sp_nu_prod$ ))(=> (forall ((?v2 C$ )(?v3 A_d_sp_nu$ ))(fun_app$g ?v0 (pair$ ?v2 ?v3 )))(fun_app$g ?v0 ?v1 ))):named a221 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ ))(=> (forall ((?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$ ))(= (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a222 ))
(assert (! (forall ((?v0 A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_set$ ))(= (collect$a (uu$ ?v0 ))?v0 )):named a223 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_set$ ))(= (collect$b (uua$ ?v0 ))?v0 )):named a224 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_set$ ))(= (collect$c (uub$ ?v0 ))?v0 )):named a225 ))
(assert (! (forall ((?v0 C_c_prod_set$ ))(= (collect$d (uuc$ ?v0 ))?v0 )):named a226 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ ))(= (collect$ (uud$ ?v0 ))?v0 )):named a227 ))
(assert (! (forall ((?v0 A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod$ )(?v1 A_b_c_a_d_sp_nu_prod_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_prod_bool_fun$ ))(= (member$ ?v0 (collect$a ?v1 ))(fun_app$d ?v1 ?v0 ))):named a228 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod$ )(?v1 C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_prod_bool_fun$ ))(= (member$b ?v0 (collect$b ?v1 ))(fun_app$f ?v1 ?v0 ))):named a229 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ )(?v1 C_a_d_sp_nu_prod_bool_fun$ ))(= (member$c ?v0 (collect$c ?v1 ))(fun_app$g ?v1 ?v0 ))):named a230 ))
(assert (! (forall ((?v0 C_c_prod$ )(?v1 C_c_prod_bool_fun$ ))(= (member$d ?v0 (collect$d ?v1 ))(fun_app$h ?v1 ?v0 ))):named a231 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_bool_fun$ ))(= (member$a ?v0 (collect$ ?v1 ))(fun_app$e ?v1 ?v0 ))):named a232 ))
(assert (! (forall ((?v0 B_c_prod_d_stream_prod$ ))(=> (forall ((?v1 B_c_prod$ )(?v2 D_stream$ ))(=> (= ?v0 (pair$g ?v1 ?v2 ))false ))false )):named a233 ))
(assert (! (forall ((?v0 D_a_d_sp_nu_prod$ ))(=> (forall ((?v1 D$ )(?v2 A_d_sp_nu$ ))(=> (= ?v0 (pair$h ?v1 ?v2 ))false ))false )):named a234 ))
(assert (! (forall ((?v0 C_c_prod$ ))(=> (forall ((?v1 C$ )(?v2 C$ ))(=> (= ?v0 (pair$i ?v1 ?v2 ))false ))false )):named a235 ))
(assert (! (forall ((?v0 B_c_a_d_sp_nu_prod_prod$ ))(=> (forall ((?v1 B$ )(?v2 C_a_d_sp_nu_prod$ ))(=> (= ?v0 (pair$j ?v1 ?v2 ))false ))false )):named a236 ))
(assert (! (forall ((?v0 B_c_prod$ ))(=> (forall ((?v1 B$ )(?v2 C$ ))(=> (= ?v0 (pair$f ?v1 ?v2 ))false ))false )):named a237 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (forall ((?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$c ?v1 ?v2 ))false ))false )):named a238 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ ))(=> (forall ((?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a239 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C$ )(?v3 C$ ))(=> (and (= (pair$i ?v0 ?v1 )(pair$i ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a240 ))
(assert (! (forall ((?v0 B$ )(?v1 C_a_d_sp_nu_prod$ )(?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(=> (and (= (pair$j ?v0 ?v1 )(pair$j ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a241 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 B$ )(?v3 C$ ))(=> (and (= (pair$f ?v0 ?v1 )(pair$f ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a242 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a243 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ )(?v2 C$ )(?v3 A_d_sp_nu$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a244 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(exists ((?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(= ?v0 (pair$c ?v1 ?v2 )))):named a245 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ ))(exists ((?v1 C$ )(?v2 A_d_sp_nu$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a246 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(! (=> (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (fun_app$ad (put$c ?v0 )?v1 )?v2 ))(= (fun_app$q (sp_mu_comp$ (fun_app$ad (put$c ?v0 )?v1 ))?v2 )(put$d ?v0 (pair$ ?v1 (in$ ?v2 ))))):pattern ((fun_app$q (sp_mu_comp$ (fun_app$ad (put$c ?v0 )?v1 ))?v2 )))):named a247 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 C_c_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(! (= (fun_app$bm (fun_app$bt (map_sp_mu$ ?v0 )?v1 )(get$ ?v2 ))(get$ (fun_app$ax (comp$h (fun_app$bt (map_sp_mu$ ?v0 )?v1 ))?v2 ))):pattern ((fun_app$bm (fun_app$bt (map_sp_mu$ ?v0 )?v1 )(get$ ?v2 ))))):named a248 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 A_d_sp_nu_a_d_sp_nu_fun$ )(?v2 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(! (= (fun_app$u (fun_app$bu (map_sp_mu$a ?v0 )?v1 )(get$a ?v2 ))(get$a (fun_app$bf (comp$p (fun_app$bu (map_sp_mu$a ?v0 )?v1 ))?v2 ))):pattern ((fun_app$u (fun_app$bu (map_sp_mu$a ?v0 )?v1 )(get$a ?v2 ))))):named a249 ))
(assert (! (forall ((?v0 D_b_fun$ )(?v1 A_d_sp_nu_c_a_d_sp_nu_prod_fun$ )(?v2 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(! (= (fun_app$q (fun_app$bv (map_sp_mu$b ?v0 )?v1 )(get$a ?v2 ))(get$c (fun_app$p (comp$q (fun_app$bv (map_sp_mu$b ?v0 )?v1 ))?v2 ))):pattern ((fun_app$q (fun_app$bv (map_sp_mu$b ?v0 )?v1 )(get$a ?v2 ))))):named a250 ))
(assert (! (forall ((?v0 B_d_fun$ )(?v1 C_a_d_sp_nu_prod_a_d_sp_nu_fun$ )(?v2 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ ))(! (= (fun_app$bw (map_sp_mu$c ?v0 ?v1 )(get$c ?v2 ))(get$a (fun_app$bx (comp$r (map_sp_mu$c ?v0 ?v1 ))?v2 ))):pattern ((fun_app$bw (map_sp_mu$c ?v0 ?v1 )(get$c ?v2 ))))):named a251 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )(?v2 A_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ ))(! (= (fun_app$by (map_sp_mu$d ?v0 ?v1 )(get$c ?v2 ))(get$c (fun_app$bz (comp$s (map_sp_mu$d ?v0 ?v1 ))?v2 ))):pattern ((fun_app$by (map_sp_mu$d ?v0 ?v1 )(get$c ?v2 ))))):named a252 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(= (fun_app$k (accp$c ?v0 )?v1 )(exists ((?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(and (= ?v1 ?v2 )(forall ((?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (fun_app$k (fun_app$l ?v0 ?v3 )?v2 )(fun_app$k (accp$c ?v0 )?v3 ))))))):named a253 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (forall ((?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (fun_app$k (fun_app$l ?v0 ?v2 )?v1 )(fun_app$k (accp$c ?v0 )?v2 )))(fun_app$k (accp$c ?v0 )?v1 ))):named a254 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ ))(=> (and (fun_app$k (accp$c ?v0 )?v1 )(forall ((?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$k (accp$c ?v0 )?v3 )(forall ((?v4 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (fun_app$k (fun_app$l ?v0 ?v4 )?v3 )(fun_app$k ?v2 ?v4 ))))(fun_app$k ?v2 ?v3 ))))(fun_app$k ?v2 ?v1 ))):named a255 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ ))(=> (and (fun_app$k (accp$c ?v0 )?v1 )(forall ((?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$k (accp$c ?v0 )?v3 )(forall ((?v4 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (fun_app$k (fun_app$l ?v0 ?v4 )?v3 )(fun_app$k ?v2 ?v4 ))))(fun_app$k ?v2 ?v3 ))))(fun_app$k ?v2 ?v1 ))):named a256 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$k (accp$c ?v0 )?v1 )(forall ((?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (= ?v1 ?v2 )(forall ((?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (fun_app$k (fun_app$l ?v0 ?v3 )?v2 )(fun_app$k (accp$c ?v0 )?v3 ))))false )))false )):named a257 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(= (= (in$ ?v0 )(in$ ?v1 ))(= ?v0 ?v1 ))):named a258 ))
(assert (! (forall ((?v0 A_d_sp_nu$ ))(= (in$ (out$b ?v0 ))?v0 )):named a259 ))
(assert (! (forall ((?v0 A_d_sp_nu$ ))(=> (forall ((?v1 A_d_a_d_sp_nu_sp_mu$ ))(=> (= ?v0 (in$ ?v1 ))false ))false )):named a260 ))
(assert (! (forall ((?v0 A_d_sp_nu$ ))(=> (=> (= ?v0 (in$ (out$b ?v0 )))false )false )):named a261 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu$ ))(! (= (out$b (in$ ?v0 ))?v0 ):pattern ((in$ ?v0 )))):named a262 ))
(assert (! (forall ((?v0 D_d_fun$ )(?v1 A_d_sp_nu_a_d_sp_nu_fun$ )(?v2 D$ )(?v3 A_d_sp_nu$ ))(! (= (fun_app$u (fun_app$bu (map_sp_mu$a ?v0 )?v1 )(fun_app$ab (put$b ?v2 )?v3 ))(fun_app$ab (put$b (fun_app$ao ?v0 ?v2 ))(fun_app$ca ?v1 ?v3 ))):pattern ((fun_app$u (fun_app$bu (map_sp_mu$a ?v0 )?v1 )(fun_app$ab (put$b ?v2 )?v3 ))))):named a263 ))
(assert (! (forall ((?v0 D_b_fun$ )(?v1 A_d_sp_nu_c_a_d_sp_nu_prod_fun$ )(?v2 D$ )(?v3 A_d_sp_nu$ ))(! (= (fun_app$q (fun_app$bv (map_sp_mu$b ?v0 )?v1 )(fun_app$ab (put$b ?v2 )?v3 ))(put$d (fun_app$cb ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$q (fun_app$bv (map_sp_mu$b ?v0 )?v1 )(fun_app$ab (put$b ?v2 )?v3 ))))):named a264 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 C_c_fun$ )(?v2 B$ )(?v3 C$ ))(! (= (fun_app$bm (fun_app$bt (map_sp_mu$ ?v0 )?v1 )(fun_app$ad (put$c ?v2 )?v3 ))(fun_app$ad (put$c (fun_app$cc ?v0 ?v2 ))(fun_app$cd ?v1 ?v3 ))):pattern ((fun_app$bm (fun_app$bt (map_sp_mu$ ?v0 )?v1 )(fun_app$ad (put$c ?v2 )?v3 ))))):named a265 ))
(assert (! (forall ((?v0 B_d_fun$ )(?v1 C_a_d_sp_nu_prod_a_d_sp_nu_fun$ )(?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(! (= (fun_app$bw (map_sp_mu$c ?v0 ?v1 )(put$d ?v2 ?v3 ))(fun_app$ab (put$b (fun_app$ce ?v0 ?v2 ))(fun_app$cf ?v1 ?v3 ))):pattern ((fun_app$bw (map_sp_mu$c ?v0 ?v1 )(put$d ?v2 ?v3 ))))):named a266 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 C_a_d_sp_nu_prod_c_a_d_sp_nu_prod_fun$ )(?v2 B$ )(?v3 C_a_d_sp_nu_prod$ ))(! (= (fun_app$by (map_sp_mu$d ?v0 ?v1 )(put$d ?v2 ?v3 ))(put$d (fun_app$cc ?v0 ?v2 )(fun_app$cg ?v1 ?v3 ))):pattern ((fun_app$by (map_sp_mu$d ?v0 ?v1 )(put$d ?v2 ?v3 ))))):named a267 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$q (sp_mu_comp$ (fun_app$ad (put$c ?v0 )?v1 ))?v2 )(put$d ?v0 (pair$ ?v1 (in$ ?v2 )))):pattern ((fun_app$q (sp_mu_comp$ (fun_app$ad (put$c ?v0 )?v1 ))?v2 )))):named a268 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$q (fun_app$t sp_mu_comp2$ (fun_app$ad (put$c ?v0 )?v1 ))?v2 )(put$d ?v0 (pair$ ?v1 (in$ ?v2 )))):pattern ((fun_app$q (fun_app$t sp_mu_comp2$ (fun_app$ad (put$c ?v0 )?v1 ))?v2 )))):named a269 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (not (fun_app$k (accp$c ?v0 )?v1 ))(forall ((?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$k (fun_app$l ?v0 ?v2 )?v1 )(not (fun_app$k (accp$c ?v0 )?v2 )))false )))false )):named a270 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$k (accp$c ?v0 )?v1 )(fun_app$k (fun_app$l ?v0 ?v2 )?v1 ))(fun_app$k (accp$c ?v0 )?v2 ))):named a271 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 A_b_c_a_d_sp_nu_prod_sp_mu$ ))(=> (and (= (fun_app$q (sp_mu_comp$ ?v0 )?v1 )?v2 )(and (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c ?v0 ?v1 ))(and (forall ((?v3 B$ )(?v4 C$ )(?v5 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (= ?v0 (fun_app$ad (put$c ?v3 )?v4 ))(and (= ?v1 ?v5 )(and (= ?v2 (put$d ?v3 (pair$ ?v4 (in$ ?v5 ))))(fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (fun_app$ad (put$c ?v3 )?v4 )?v5 )))))false ))(and (forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 D$ )(?v5 A_d_sp_nu$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (fun_app$ab (put$b ?v4 )?v5 ))(and (= ?v2 (fun_app$q (sp_mu_comp$ (fun_app$aa ?v3 ?v4 ))(out$b ?v5 )))(fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (get$ ?v3 )(fun_app$ab (put$b ?v4 )?v5 ))))))false ))(forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (get$a ?v4 ))(and (= ?v2 (get$c (fun_app$p (uue$ ?v3 )?v4 )))(fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (get$ ?v3 )(get$a ?v4 ))))))false ))))))false )):named a272 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ )(?v4 D_b_c_sp_mu_d_b_c_sp_mu_prod_set$ )(?v5 A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ ))(= (member$a (pair$q (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(lex_prod$ ?v4 ?v5 ))(or (member$f (pair$b ?v0 ?v2 )?v4 )(and (= ?v0 ?v2 )(member$g (pair$d ?v1 ?v3 )?v5 ))))):named a273 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ )(?v2 C$ )(?v3 A_d_sp_nu$ )(?v4 C_c_prod_set$ )(?v5 A_d_sp_nu_a_d_sp_nu_prod_set$ ))(= (member$b (pair$r (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(lex_prod$a ?v4 ?v5 ))(or (member$d (pair$i ?v0 ?v2 )?v4 )(and (= ?v0 ?v2 )(member$h (pair$s ?v1 ?v3 )?v5 ))))):named a274 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 A_b_c_a_d_sp_nu_prod_sp_mu$ ))(=> (and (= (fun_app$q (sp_mu_comp$ ?v0 )?v1 )?v2 )(and (forall ((?v3 B$ )(?v4 C$ )(?v5 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (= ?v0 (fun_app$ad (put$c ?v3 )?v4 ))(and (= ?v1 ?v5 )(= ?v2 (put$d ?v3 (pair$ ?v4 (in$ ?v5 ))))))false ))(and (forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 D$ )(?v5 A_d_sp_nu$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (fun_app$ab (put$b ?v4 )?v5 ))(= ?v2 (fun_app$q (sp_mu_comp$ (fun_app$aa ?v3 ?v4 ))(out$b ?v5 )))))false ))(forall ((?v3 D_d_b_c_sp_mu_fun$ )(?v4 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 (get$ ?v3 ))(and (= ?v1 (get$a ?v4 ))(= ?v2 (get$c (fun_app$p (uue$ ?v3 )?v4 )))))false )))))false )):named a275 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fun_app$m (pred_sp_nu$ ?v0 )(in$ ?v1 ))(fun_app$i (fun_app$aq (pred_sp_mu$ ?v0 )(pred_sp_nu$ ?v0 ))?v1 )):pattern ((fun_app$m (pred_sp_nu$ ?v0 )(in$ ?v1 ))))):named a276 ))
(assert (! (forall ((?v0 A_d_sp_nu$ ))(= (out$b ?v0 )(fun_app$ab (case_sp_nu$ uuf$ )?v0 ))):named a277 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(= (fun_app$q (sp_mu_comp$ (get$ ?v0 ))(get$a ?v1 ))(get$c (fun_app$p (uue$ ?v0 )?v1 )))):named a278 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_fun$ )(?v1 A_a_d_a_d_sp_nu_sp_mu_fun$ ))(=> (fun_app$k (accp$c sp_mu_comp_rel$c )(pair$c (get$ ?v0 )(get$a ?v1 )))(= (fun_app$q (sp_mu_comp$ (get$ ?v0 ))(get$a ?v1 ))(get$c (fun_app$p (uue$ ?v0 )?v1 ))))):named a279 ))
(assert (! (forall ((?v0 D_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_fun_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 B_c_a_d_a_d_sp_nu_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (rec_sp_mu$ ?v0 ?v1 (get$ ?v2 ))(fun_app$ch ?v0 (comp$t (uug$ ?v0 ?v1 )?v2 )))):named a280 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D$ ))(= (fun_app$af (fun_app$z (comp$b (uuh$ ?v0 ))?v1 )?v2 )?v0 )):named a281 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ ))(= (= (uui$ ?v0 )(uui$ ?v1 ))(= ?v0 ?v1 ))):named a282 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_set$ )(?v1 C_a_d_sp_nu_prod_set$ ))(= (= (uuj$ ?v0 )(uuj$ ?v1 ))(= ?v0 ?v1 ))):named a283 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_bool_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ )(?v4 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set_fun$ ))(=> (and (fun_app$as ?v0 ?v1 )(member$g (pair$d ?v2 ?v3 )(fun_app$ci ?v4 ?v1 )))(member$a (pair$q (pair$c ?v1 ?v2 )(pair$c ?v1 ?v3 ))(same_fst$ ?v0 ?v4 )))):named a284 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ )(?v3 A_d_sp_nu$ )(?v4 C_a_d_sp_nu_a_d_sp_nu_prod_set_fun$ ))(=> (and (fun_app$av ?v0 ?v1 )(member$h (pair$s ?v2 ?v3 )(fun_app$cj ?v4 ?v1 )))(member$b (pair$r (pair$ ?v1 ?v2 )(pair$ ?v1 ?v3 ))(same_fst$a ?v0 ?v4 )))):named a285 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$ck (comp$u (convol$ ?v0 ?v1 ))?v2 )(fun_app$cl (convol$a (fun_app$z (comp$b ?v0 )?v2 ))(fun_app$z (comp$b ?v1 )?v2 )))):named a286 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_set$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (member$e (pair$c ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$e (pair$c ?v0 ?v3 )?v2 ))):named a287 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ )(?v2 C_a_d_sp_nu_prod_set$ )(?v3 A_d_sp_nu$ ))(=> (and (member$c (pair$ ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$c (pair$ ?v0 ?v3 )?v2 ))):named a288 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (fun_app$k ?v0 (pair$c ?v1 ?v2 ))(fun_app$i (fun_app$j (curry$ ?v0 )?v1 )?v2 ))):named a289 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (fun_app$g ?v0 (pair$ ?v1 ?v2 ))(fun_app$m (fun_app$n (curry$a ?v0 )?v1 )?v2 ))):named a290 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (fun_app$i (fun_app$j (curry$ ?v0 )?v1 )?v2 )(=> (fun_app$k ?v0 (pair$c ?v1 ?v2 ))false ))false )):named a291 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (and (fun_app$m (fun_app$n (curry$a ?v0 )?v1 )?v2 )(=> (fun_app$g ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a292 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (fun_app$i (fun_app$j (curry$ ?v0 )?v1 )?v2 )(fun_app$k ?v0 (pair$c ?v1 ?v2 )))):named a293 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod_bool_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (fun_app$m (fun_app$n (curry$a ?v0 )?v1 )?v2 )(fun_app$g ?v0 (pair$ ?v1 ?v2 )))):named a294 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_prod_set$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(= (fun_app$k (accp$c (uuk$ ?v0 ))?v1 )(member$e ?v1 (acc$ ?v0 )))):named a295 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu$ )(?v1 D_b_c_sp_mu$ ))(= (swap$ (pair$t ?v0 ?v1 ))(pair$c ?v1 ?v0 ))):named a296 ))
(assert (! (forall ((?v0 A_d_sp_nu$ )(?v1 C$ ))(= (swap$a (pair$u ?v0 ?v1 ))(pair$ ?v1 ?v0 ))):named a297 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(= (swap$b (pair$c ?v0 ?v1 ))(pair$t ?v1 ?v0 ))):named a298 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ ))(= (swap$c (pair$ ?v0 ?v1 ))(pair$u ?v1 ?v0 ))):named a299 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )(?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(! (= (map_prod$ ?v0 ?v1 (pair$c ?v2 ?v3 ))(pair$c (fun_app$bm ?v0 ?v2 )(fun_app$u ?v1 ?v3 ))):pattern ((map_prod$ ?v0 ?v1 (pair$c ?v2 ?v3 ))))):named a300 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_c_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu_a_d_sp_nu_fun$ )(?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(! (= (map_prod$a ?v0 ?v1 (pair$c ?v2 ?v3 ))(pair$ (fun_app$cm ?v0 ?v2 )(fun_app$cn ?v1 ?v3 ))):pattern ((map_prod$a ?v0 ?v1 (pair$c ?v2 ?v3 ))))):named a301 ))
(assert (! (forall ((?v0 C_d_b_c_sp_mu_fun$ )(?v1 A_d_sp_nu_a_d_a_d_sp_nu_sp_mu_fun$ )(?v2 C$ )(?v3 A_d_sp_nu$ ))(! (= (map_prod$b ?v0 ?v1 (pair$ ?v2 ?v3 ))(pair$c (fun_app$ad ?v0 ?v2 )(fun_app$ab ?v1 ?v3 ))):pattern ((map_prod$b ?v0 ?v1 (pair$ ?v2 ?v3 ))))):named a302 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 A_d_sp_nu_a_d_sp_nu_fun$ )(?v2 C$ )(?v3 A_d_sp_nu$ ))(! (= (fun_app$cg (fun_app$co (map_prod$c ?v0 )?v1 )(pair$ ?v2 ?v3 ))(pair$ (fun_app$cd ?v0 ?v2 )(fun_app$ca ?v1 ?v3 ))):pattern ((fun_app$cg (fun_app$co (map_prod$c ?v0 )?v1 )(pair$ ?v2 ?v3 ))))):named a303 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_prod$ ))(= (fun_app$ai (fun_app$cp (map_prod$d ?v0 )?v1 )(fun_app$cq (map_prod$e ?v2 ?v3 )?v4 ))(fun_app$cr (map_prod$f (fun_app$z (comp$b ?v0 )?v2 )(fun_app$z (comp$b ?v1 )?v3 ))?v4 ))):named a304 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(= (comp$v (fun_app$cp (map_prod$d ?v0 )?v1 )(map_prod$e ?v2 ?v3 ))(map_prod$f (fun_app$z (comp$b ?v0 )?v2 )(fun_app$z (comp$b ?v1 )?v3 )))):named a305 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(= (map_prod$f (fun_app$z (comp$b ?v0 )?v1 )(fun_app$z (comp$b ?v2 )?v3 ))(comp$v (fun_app$cp (map_prod$d ?v0 )?v2 )(map_prod$e ?v1 ?v3 )))):named a306 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_b_c_sp_mu_fun$ )(?v4 D_d_prod$ ))(= (fun_app$ai (fun_app$cp (map_prod$d ?v0 )?v1 )(fun_app$cq (map_prod$e ?v2 ?v3 )?v4 ))(fun_app$cr (map_prod$f (fun_app$z (comp$b ?v0 )?v2 )(fun_app$z (comp$b ?v1 )?v3 ))?v4 ))):named a307 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v3 D$ ))(=> (= (fun_app$z (comp$b ?v0 )?v1 )(fun_app$am (comp$e id$ )?v2 ))(= (fun_app$t ?v0 (fun_app$aa ?v1 ?v3 ))(fun_app$af ?v2 ?v3 )))):named a308 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v2 D_d_b_c_sp_mu_fun$ )(?v3 D_d_b_c_sp_mu_fun$ ))(= (fun_app$ah (comp$c (fun_app$cp (map_prod$d ?v0 )?v1 ))(fun_app$cs (convol$b ?v2 )?v3 ))(fun_app$cl (convol$a (fun_app$z (comp$b ?v0 )?v2 ))(fun_app$z (comp$b ?v1 )?v3 )))):named a309 ))
(assert (! (forall ((?v0 D_d_sp_nu$ )(?v1 A_d_sp_nu$ ))(! (= (fun_app$ca (fun_app$ct sp_nu_comp2$ ?v0 )?v1 )(in$ (map_sp_mu$e id$a (case_prod$ sp_nu_comp2$ )(fun_app$x (fun_app$y sp_mu_comp2$b (out$a ?v0 ))(out$b ?v1 ))))):pattern ((fun_app$ca (fun_app$ct sp_nu_comp2$ ?v0 )?v1 )))):named a310 ))
(assert (! (forall ((?v0 A_d_sp_nu$ )(?v1 A_a_sp_nu$ ))(! (= (fun_app$cu (fun_app$cv sp_nu_comp2$a ?v0 )?v1 )(in$ (map_sp_mu$f id$a (case_prod$a sp_nu_comp2$a )(fun_app$v (fun_app$w sp_mu_comp2$a (out$b ?v0 ))(out$ ?v1 ))))):pattern ((fun_app$cu (fun_app$cv sp_nu_comp2$a ?v0 )?v1 )))):named a311 ))
(assert (! (forall ((?v0 D_d_sp_nu$ )(?v1 A_d_sp_nu$ ))(! (= (fun_app$ca (fun_app$ct sp_nu_comp$ ?v0 )?v1 )(in$ (map_sp_mu$e id$a (case_prod$ sp_nu_comp$ )(sp_mu_comp$d (out$a ?v0 )(out$b ?v1 ))))):pattern ((fun_app$ca (fun_app$ct sp_nu_comp$ ?v0 )?v1 )))):named a312 ))
(assert (! (forall ((?v0 A_d_sp_nu$ )(?v1 A_a_sp_nu$ ))(! (= (fun_app$cu (fun_app$cv sp_nu_comp$a ?v0 )?v1 )(in$ (map_sp_mu$f id$a (case_prod$a sp_nu_comp$a )(sp_mu_comp$c (out$b ?v0 )(out$ ?v1 ))))):pattern ((fun_app$cu (fun_app$cv sp_nu_comp$a ?v0 )?v1 )))):named a313 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_d_b_c_sp_mu_fun$ ))(= (fun_app$cw (comp$w ?v0 )(case_sum$ ?v1 ?v2 ))(fun_app$cx (case_sum$a (fun_app$z (comp$b ?v0 )?v1 ))(fun_app$z (comp$b ?v0 )?v2 )))):named a314 ))
(assert (! (forall ((?v0 D_d_sp_nu$ )(?v1 A_d_sp_nu$ ))(= (out$b (fun_app$ca (fun_app$ct sp_nu_comp$ ?v0 )?v1 ))(map_sp_mu$e id$a (case_prod$ sp_nu_comp$ )(sp_mu_comp$d (out$a ?v0 )(out$b ?v1 ))))):named a315 ))
(assert (! (forall ((?v0 A_d_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (out$b (fun_app$cu (fun_app$cv sp_nu_comp$a ?v0 )?v1 ))(map_sp_mu$f id$a (case_prod$a sp_nu_comp$a )(sp_mu_comp$c (out$b ?v0 )(out$ ?v1 ))))):named a316 ))
(assert (! (forall ((?v0 D_d_sp_nu$ )(?v1 A_d_sp_nu$ ))(= (out$b (fun_app$ca (fun_app$ct sp_nu_comp2$ ?v0 )?v1 ))(map_sp_mu$e id$a (case_prod$ sp_nu_comp2$ )(fun_app$x (fun_app$y sp_mu_comp2$b (out$a ?v0 ))(out$b ?v1 ))))):named a317 ))
(assert (! (forall ((?v0 A_d_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (out$b (fun_app$cu (fun_app$cv sp_nu_comp2$a ?v0 )?v1 ))(map_sp_mu$f id$a (case_prod$a sp_nu_comp2$a )(fun_app$v (fun_app$w sp_mu_comp2$a (out$b ?v0 ))(out$ ?v1 ))))):named a318 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ ))(=> (forall ((?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$c ?v2 ?v3 ))(fun_app$i (fun_app$j ?v1 ?v2 )?v3 )))(fun_app$k (case_prod$b ?v1 )?v0 ))):named a319 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ )(?v1 C_a_d_sp_nu_bool_fun_fun$ ))(=> (forall ((?v2 C$ )(?v3 A_d_sp_nu$ ))(=> (= ?v0 (pair$ ?v2 ?v3 ))(fun_app$m (fun_app$n ?v1 ?v2 )?v3 )))(fun_app$g (case_prod$c ?v1 )?v0 ))):named a320 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (fun_app$i (fun_app$j ?v0 ?v1 )?v2 )(fun_app$k (case_prod$b ?v0 )(pair$c ?v1 ?v2 )))):named a321 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_bool_fun_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (fun_app$m (fun_app$n ?v0 ?v1 )?v2 )(fun_app$g (case_prod$c ?v0 )(pair$ ?v1 ?v2 )))):named a322 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (fun_app$i (fun_app$j ?v0 ?v1 )?v2 )(fun_app$k (case_prod$b ?v0 )(pair$c ?v1 ?v2 )))):named a323 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_bool_fun_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (fun_app$m (fun_app$n ?v0 ?v1 )?v2 )(fun_app$g (case_prod$c ?v0 )(pair$ ?v1 ?v2 )))):named a324 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_d_b_c_sp_mu_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(! (= (apfst$ ?v0 (pair$c ?v1 ?v2 ))(pair$c (fun_app$bm ?v0 ?v1 )?v2 )):pattern ((apfst$ ?v0 (pair$c ?v1 ?v2 ))))):named a325 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(! (= (fun_app$cg (apfst$a ?v0 )(pair$ ?v1 ?v2 ))(pair$ (fun_app$cd ?v0 ?v1 )?v2 )):pattern ((fun_app$cg (apfst$a ?v0 )(pair$ ?v1 ?v2 ))))):named a326 ))
(assert (! (= (case_prod$d uul$ )id$b ):named a327 ))
(assert (! (= (case_prod$e uum$ )id$c ):named a328 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$k (case_prod$b ?v0 )?v1 )(forall ((?v2 D_b_c_sp_mu$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (= ?v1 (pair$c ?v2 ?v3 ))(fun_app$i (fun_app$j ?v0 ?v2 )?v3 ))false )))false )):named a329 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_bool_fun_fun$ )(?v1 C_a_d_sp_nu_prod$ ))(=> (and (fun_app$g (case_prod$c ?v0 )?v1 )(forall ((?v2 C$ )(?v3 A_d_sp_nu$ ))(=> (and (= ?v1 (pair$ ?v2 ?v3 ))(fun_app$m (fun_app$n ?v0 ?v2 )?v3 ))false )))false )):named a330 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (fun_app$k (case_prod$b ?v0 )(pair$c ?v1 ?v2 ))(fun_app$i (fun_app$j ?v0 ?v1 )?v2 ))):named a331 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_bool_fun_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (fun_app$g (case_prod$c ?v0 )(pair$ ?v1 ?v2 ))(fun_app$m (fun_app$n ?v0 ?v1 )?v2 ))):named a332 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(! (= (fun_app$cy (case_prod$d uul$ )?v0 )?v0 ):pattern ((fun_app$cy (case_prod$d uul$ )?v0 )))):named a333 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ ))(! (= (fun_app$cg (case_prod$e uum$ )?v0 )?v0 ):pattern ((fun_app$cg (case_prod$e uum$ )?v0 )))):named a334 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_d_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod_bool_fun_fun$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(! (= (fun_app$k (accp$c ?v0 )?v1 )(member$e ?v1 (acc$ (collect$ (case_prod$f ?v0 ))))):pattern ((fun_app$k (accp$c ?v0 )?v1 )))):named a335 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_a_d_a_d_sp_nu_sp_mu_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(! (= (apsnd$ ?v0 (pair$c ?v1 ?v2 ))(pair$c ?v1 (fun_app$u ?v0 ?v2 ))):pattern ((apsnd$ ?v0 (pair$c ?v1 ?v2 ))))):named a336 ))
(assert (! (forall ((?v0 A_d_sp_nu_a_d_sp_nu_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(! (= (fun_app$cg (apsnd$a ?v0 )(pair$ ?v1 ?v2 ))(pair$ ?v1 (fun_app$ca ?v0 ?v2 ))):pattern ((fun_app$cg (apsnd$a ?v0 )(pair$ ?v1 ?v2 ))))):named a337 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(! (= (fst$b (pair$c ?v0 ?v1 ))?v0 ):pattern ((pair$c ?v0 ?v1 )))):named a338 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ ))(! (= (fst$ (pair$ ?v0 ?v1 ))?v0 ):pattern ((pair$ ?v0 ?v1 )))):named a339 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu$ ))(=> (= (fst$b (pair$c ?v0 ?v1 ))?v2 )(= ?v0 ?v2 ))):named a340 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ )(?v2 C$ ))(=> (= (fst$ (pair$ ?v0 ?v1 ))?v2 )(= ?v0 ?v2 ))):named a341 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$c ?v1 ?v2 ))(= (fst$b ?v0 )?v1 ))):named a342 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))(= (fst$ ?v0 )?v1 ))):named a343 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(= (= ?v0 (fst$b ?v1 ))(exists ((?v2 A_d_a_d_sp_nu_sp_mu$ ))(= ?v1 (pair$c ?v0 ?v2 ))))):named a344 ))
(assert (! (forall ((?v0 C$ )(?v1 C_a_d_sp_nu_prod$ ))(= (= ?v0 (fst$ ?v1 ))(exists ((?v2 A_d_sp_nu$ ))(= ?v1 (pair$ ?v0 ?v2 ))))):named a345 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(= (pair$c (fst$b ?v0 )(snd$b ?v0 ))?v0 )):named a346 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ ))(= (pair$ (fst$ ?v0 )(snd$ ?v0 ))?v0 )):named a347 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_bool_fun_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ )(?v3 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (and (fun_app$i (fun_app$j ?v0 ?v1 )?v2 )(= ?v3 (pair$c ?v1 ?v2 )))(fun_app$i (fun_app$j ?v0 (fst$b ?v3 ))(snd$b ?v3 )))):named a348 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_bool_fun_fun$ )(?v1 C$ )(?v2 A_d_sp_nu$ )(?v3 C_a_d_sp_nu_prod$ ))(=> (and (fun_app$m (fun_app$n ?v0 ?v1 )?v2 )(= ?v3 (pair$ ?v1 ?v2 )))(fun_app$m (fun_app$n ?v0 (fst$ ?v3 ))(snd$ ?v3 )))):named a349 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(=> (=> (= ?v0 (pair$c (fst$b ?v0 )(snd$b ?v0 )))false )false )):named a350 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ ))(=> (=> (= ?v0 (pair$ (fst$ ?v0 )(snd$ ?v0 )))false )false )):named a351 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(= ?v0 (pair$c (fst$b ?v0 )(snd$b ?v0 )))):named a352 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ ))(= ?v0 (pair$ (fst$ ?v0 )(snd$ ?v0 )))):named a353 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (= ?v0 (pair$c ?v1 ?v2 ))(= (snd$b ?v0 )?v2 ))):named a354 ))
(assert (! (forall ((?v0 C_a_d_sp_nu_prod$ )(?v1 C$ )(?v2 A_d_sp_nu$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))(= (snd$ ?v0 )?v2 ))):named a355 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu$ ))(=> (= (snd$b (pair$c ?v0 ?v1 ))?v2 )(= ?v1 ?v2 ))):named a356 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ )(?v2 A_d_sp_nu$ ))(=> (= (snd$ (pair$ ?v0 ?v1 ))?v2 )(= ?v1 ?v2 ))):named a357 ))
(assert (! (forall ((?v0 D_b_c_sp_mu$ )(?v1 A_d_a_d_sp_nu_sp_mu$ ))(! (= (snd$b (pair$c ?v0 ?v1 ))?v1 ):pattern ((pair$c ?v0 ?v1 )))):named a358 ))
(assert (! (forall ((?v0 C$ )(?v1 A_d_sp_nu$ ))(! (= (snd$ (pair$ ?v0 ?v1 ))?v1 ):pattern ((pair$ ?v0 ?v1 )))):named a359 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_bool_fun$ )(?v1 D_b_c_sp_mu$ )(?v2 A_d_a_d_sp_nu_sp_mu_bool_fun$ )(?v3 A_d_a_d_sp_nu_sp_mu$ ))(=> (and (fun_app$as ?v0 ?v1 )(fun_app$i ?v2 ?v3 ))(and (fun_app$as ?v0 (fst$b (pair$c ?v1 ?v3 )))(fun_app$i ?v2 (snd$b (pair$c ?v1 ?v3 )))))):named a360 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C$ )(?v2 A_d_sp_nu_bool_fun$ )(?v3 A_d_sp_nu$ ))(=> (and (fun_app$av ?v0 ?v1 )(fun_app$m ?v2 ?v3 ))(and (fun_app$av ?v0 (fst$ (pair$ ?v1 ?v3 )))(fun_app$m ?v2 (snd$ (pair$ ?v1 ?v3 )))))):named a361 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_bool_fun_fun$ )(?v1 A_d_a_d_sp_nu_sp_mu$ )(?v2 D_b_c_sp_mu$ ))(=> (fun_app$as (fun_app$cz ?v0 ?v1 )?v2 )(fun_app$as (fun_app$cz ?v0 (snd$b (pair$c ?v2 ?v1 )))(fst$b (pair$c ?v2 ?v1 ))))):named a362 ))
(assert (! (forall ((?v0 A_d_sp_nu_c_bool_fun_fun$ )(?v1 A_d_sp_nu$ )(?v2 C$ ))(=> (fun_app$av (fun_app$da ?v0 ?v1 )?v2 )(fun_app$av (fun_app$da ?v0 (snd$ (pair$ ?v2 ?v1 )))(fst$ (pair$ ?v2 ?v1 ))))):named a363 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu$ )(?v1 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_prod$ ))(= (= ?v0 (snd$b ?v1 ))(exists ((?v2 D_b_c_sp_mu$ ))(= ?v1 (pair$c ?v2 ?v0 ))))):named a364 ))
(assert (! (forall ((?v0 A_d_sp_nu$ )(?v1 C_a_d_sp_nu_prod$ ))(= (= ?v0 (snd$ ?v1 ))(exists ((?v2 C$ ))(= ?v1 (pair$ ?v2 ?v0 ))))):named a365 ))
(assert (! (forall ((?v0 D_b_c_sp_mu_a_d_a_d_sp_nu_sp_mu_a_b_c_a_d_sp_nu_prod_sp_mu_fun_fun$ )(?v1 D_d_b_c_sp_mu_fun$ )(?v2 D_a_d_a_d_sp_nu_sp_mu_prod$ ))(= (case_prod$g (fun_app$z (comp$b ?v0 )?v1 )?v2 )(fun_app$q (fun_app$t ?v0 (fun_app$aa ?v1 (fst$x ?v2 )))(snd$x ?v2 )))):named a366 ))
(assert (! (forall ((?v0 A_d_a_d_sp_nu_sp_mu_d_b_c_sp_mu_prod$ ))(! (= (swap$ ?v0 )(pair$c (snd$s ?v0 )(fst$s ?v0 ))):pattern ((swap$ ?v0 )))):named a367 ))
(assert (! (forall ((?v0 A_d_sp_nu_c_prod$ ))(! (= (swap$a ?v0 )(pair$ (snd$t ?v0 )(fst$t ?v0 ))):pattern ((swap$a ?v0 )))):named a368 ))
(check-sat )
;(get-unsat-core )
