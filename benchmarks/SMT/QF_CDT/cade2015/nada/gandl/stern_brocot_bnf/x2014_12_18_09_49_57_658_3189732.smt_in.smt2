;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_nat_fun_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_nat_fun_fun_fun$ 0 )
(declare-sort Nat_stream$ 0)
(declare-sort Nat_tree$ 0)
(declare-sort Nat_nat_fun_nat_nat_fun_fun_stream$ 0)
(declare-sort Nat_nat_fun_nat_fun_stream$ 0)
(declare-sort Nat_nat_nat_fun_fun_stream$ 0)
(declare-sort Nat_nat_fun_stream$ 0)
(declare-sort Nat_nat_nat_fun_nat_fun_fun_stream$ 0)
(declare-sort Nat_nat_nat_nat_fun_fun_fun_stream$ 0)
(declare-sort Nat_nat_fun_nat_fun_nat_fun_stream$ 0)
(declare-sort Nat_nat_nat_fun_fun_nat_fun_stream$ 0)
(declare-sort Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ 0)
(declare-sort Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ 0)
(declare-sort Nat_tree_tree$ 0)
(declare-sort Nat_tree_tree_tree$ 0)
(declare-sort Nat_tree_tree_tree_tree$ 0)
(declare-fun shd$ (Nat_stream$)Nat$)
(declare-fun stl$ (Nat_stream$)Nat_stream$)
(declare-fun sCons$ (Nat$ Nat_stream$ )Nat_stream$)
(declare-fun root$ (Nat_tree$)Nat$)
(declare-fun left$ (Nat_tree$)Nat_tree$)
(declare-fun right$ (Nat_tree$)Nat_tree$)
(declare-fun node$ (Nat$ Nat_tree$ Nat_tree$ )Nat_tree$)
(declare-fun select$ (Nat_nat_fun_nat_nat_fun_fun_stream$)Nat_nat_fun_nat_nat_fun_fun$)
(declare-fun selecta$ (Nat_nat_fun_nat_nat_fun_fun_stream$)Nat_nat_fun_nat_nat_fun_fun_stream$)
(declare-fun sCons$a (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun_nat_nat_fun_fun_stream$ )Nat_nat_fun_nat_nat_fun_fun_stream$)
(declare-fun selectb$ (Nat_nat_fun_nat_fun_stream$)Nat_nat_fun_nat_fun$)
(declare-fun selectc$ (Nat_nat_fun_nat_fun_stream$)Nat_nat_fun_nat_fun_stream$)
(declare-fun sCons$b (Nat_nat_fun_nat_fun$ Nat_nat_fun_nat_fun_stream$ )Nat_nat_fun_nat_fun_stream$)
(declare-fun selectd$ (Nat_nat_nat_fun_fun_stream$)Nat_nat_nat_fun_fun$)
(declare-fun selecte$ (Nat_nat_nat_fun_fun_stream$)Nat_nat_nat_fun_fun_stream$)
(declare-fun sCons$c (Nat_nat_nat_fun_fun$ Nat_nat_nat_fun_fun_stream$ )Nat_nat_nat_fun_fun_stream$)
(declare-fun selectf$ (Nat_nat_fun_stream$)Nat_nat_fun$)
(declare-fun selectg$ (Nat_nat_fun_stream$)Nat_nat_fun_stream$)
(declare-fun sCons$d (Nat_nat_fun$ Nat_nat_fun_stream$ )Nat_nat_fun_stream$)
(declare-fun selecth$ (Nat_nat_nat_fun_nat_fun_fun_stream$)Nat_nat_nat_fun_nat_fun_fun$)
(declare-fun selecti$ (Nat_nat_nat_fun_nat_fun_fun_stream$)Nat_nat_nat_fun_nat_fun_fun_stream$)
(declare-fun sCons$e (Nat_nat_nat_fun_nat_fun_fun$ Nat_nat_nat_fun_nat_fun_fun_stream$ )Nat_nat_nat_fun_nat_fun_fun_stream$)
(declare-fun selectj$ (Nat_nat_nat_nat_fun_fun_fun_stream$)Nat_nat_nat_nat_fun_fun_fun$)
(declare-fun selectk$ (Nat_nat_nat_nat_fun_fun_fun_stream$)Nat_nat_nat_nat_fun_fun_fun_stream$)
(declare-fun sCons$f (Nat_nat_nat_nat_fun_fun_fun$ Nat_nat_nat_nat_fun_fun_fun_stream$ )Nat_nat_nat_nat_fun_fun_fun_stream$)
(declare-fun selectl$ (Nat_nat_fun_nat_fun_nat_fun_stream$)Nat_nat_fun_nat_fun_nat_fun$)
(declare-fun selectm$ (Nat_nat_fun_nat_fun_nat_fun_stream$)Nat_nat_fun_nat_fun_nat_fun_stream$)
(declare-fun sCons$g (Nat_nat_fun_nat_fun_nat_fun$ Nat_nat_fun_nat_fun_nat_fun_stream$ )Nat_nat_fun_nat_fun_nat_fun_stream$)
(declare-fun selectn$ (Nat_nat_nat_fun_fun_nat_fun_stream$)Nat_nat_nat_fun_fun_nat_fun$)
(declare-fun selecto$ (Nat_nat_nat_fun_fun_nat_fun_stream$)Nat_nat_nat_fun_fun_nat_fun_stream$)
(declare-fun sCons$h (Nat_nat_nat_fun_fun_nat_fun$ Nat_nat_nat_fun_fun_nat_fun_stream$ )Nat_nat_nat_fun_fun_nat_fun_stream$)
(declare-fun selectp$ (Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$)Nat_nat_nat_fun_nat_nat_fun_fun_fun$)
(declare-fun selectq$ (Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$)Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$)
(declare-fun sCons$i (Nat_nat_nat_fun_nat_nat_fun_fun_fun$ Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ )Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$)
(declare-fun selectr$ (Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$)Nat_nat_fun_nat_nat_fun_nat_fun_fun$)
(declare-fun selects$ (Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$)Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$)
(declare-fun sCons$j (Nat_nat_fun_nat_nat_fun_nat_fun_fun$ Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ )Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$)
(declare-fun root$a (Nat_tree_tree$)Nat_tree$)
(declare-fun left$a (Nat_tree_tree$)Nat_tree_tree$)
(declare-fun right$a (Nat_tree_tree$)Nat_tree_tree$)
(declare-fun node$a (Nat_tree$ Nat_tree_tree$ Nat_tree_tree$ )Nat_tree_tree$)
(declare-fun root$b (Nat_tree_tree_tree$)Nat_tree_tree$)
(declare-fun left$b (Nat_tree_tree_tree$)Nat_tree_tree_tree$)
(declare-fun right$b (Nat_tree_tree_tree$)Nat_tree_tree_tree$)
(declare-fun node$b (Nat_tree_tree$ Nat_tree_tree_tree$ Nat_tree_tree_tree$ )Nat_tree_tree_tree$)
(declare-fun root$c (Nat_tree_tree_tree_tree$)Nat_tree_tree_tree$)
(declare-fun left$c (Nat_tree_tree_tree_tree$)Nat_tree_tree_tree_tree$)
(declare-fun right$c (Nat_tree_tree_tree_tree$)Nat_tree_tree_tree_tree$)
(declare-fun node$c (Nat_tree_tree_tree$ Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$ )Nat_tree_tree_tree_tree$)
(declare-fun den$ ()Nat_tree$ )
(declare-fun num$ ()Nat_tree$ )
(declare-fun one$ ()Nat$ )
(declare-fun fusc$ ()Nat_stream$ )
(declare-fun one$a ()Nat_tree$ )
(declare-fun one$b ()Nat_stream$ )
(declare-fun plus$ (Nat_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun fusc$a ()Nat_stream$ )
(declare-fun plus$a (Nat_tree_tree_tree$ Nat_tree_tree_tree$ )Nat_tree_tree_tree$ )
(declare-fun plus$b (Nat$ )Nat_nat_fun$ )
(declare-fun plus$c (Nat_tree_tree$ Nat_tree_tree$ )Nat_tree_tree$ )
(declare-fun plus$d (Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$ )Nat_tree_tree_tree_tree$ )
(declare-fun st_ap$ (Nat_nat_fun_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun st_ap$a (Nat_nat_nat_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$b (Nat_nat_fun_nat_fun_stream$ Nat_nat_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$c (Nat_nat_fun_nat_nat_fun_fun_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$d (Nat_nat_nat_fun_nat_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun st_ap$e (Nat_nat_nat_nat_fun_fun_fun_stream$ Nat_stream$ )Nat_nat_nat_fun_fun_stream$ )
(declare-fun st_ap$f (Nat_nat_fun_nat_fun_nat_fun_stream$ Nat_nat_fun_nat_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$g (Nat_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_nat_fun_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$h (Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_nat_nat_fun_fun_stream$ )
(declare-fun st_ap$i (Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun stream$ (Nat_tree$ )Nat_stream$ )
(declare-fun fun_app$ (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun smember$ (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun_nat_nat_fun_fun_stream$ )Bool )
(declare-fun fun_app$a (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$b (Nat_nat_fun_nat_fun$ Nat_nat_fun$ )Nat$ )
(declare-fun fun_app$c (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun$ )
(declare-fun fun_app$d (Nat_nat_nat_fun_nat_fun_fun$ Nat$ )Nat_nat_fun_nat_fun$ )
(declare-fun fun_app$e (Nat_nat_nat_nat_fun_fun_fun$ Nat$ )Nat_nat_nat_fun_fun$ )
(declare-fun fun_app$f (Nat_nat_fun_nat_fun_nat_fun$ Nat_nat_fun_nat_fun$ )Nat$ )
(declare-fun fun_app$g (Nat_nat_nat_fun_fun_nat_fun$ Nat_nat_nat_fun_fun$ )Nat$ )
(declare-fun fun_app$h (Nat_nat_nat_fun_nat_nat_fun_fun_fun$ Nat$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun fun_app$i (Nat_nat_fun_nat_nat_fun_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun_nat_fun$ )
(declare-fun smember$a (Nat_nat_fun_nat_fun$ Nat_nat_fun_nat_fun_stream$ )Bool )
(declare-fun smember$b (Nat_nat_nat_fun_fun$ Nat_nat_nat_fun_fun_stream$ )Bool )
(declare-fun smember$c (Nat_nat_fun$ Nat_nat_fun_stream$ )Bool )
(declare-fun smember$d (Nat$ Nat_stream$ )Bool )
(declare-fun tree_chop$ (Nat_tree$ )Nat_tree$ )
(assert (! (not (= (stream$ num$ )(sCons$ one$ (stream$ den$ )))):named a0 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_fun_stream$ )(?v2 Nat_nat_fun_nat_nat_fun_fun$ )(?v3 Nat_nat_fun_nat_nat_fun_fun_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a1 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun_stream$ )(?v2 Nat_nat_fun_nat_fun$ )(?v3 Nat_nat_fun_nat_fun_stream$ ))(= (= (sCons$b ?v0 ?v1 )(sCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a2 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_fun_stream$ )(?v2 Nat_nat_nat_fun_fun$ )(?v3 Nat_nat_nat_fun_fun_stream$ ))(= (= (sCons$c ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a3 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(= (= (sCons$d ?v0 ?v1 )(sCons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a4 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a5 ))
(assert (! (= den$ (tree_chop$ num$ )):named a6 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_stream$ ))(=> (forall ((?v1 Nat_nat_fun_nat_nat_fun_fun$ )(?v2 Nat_nat_fun_nat_nat_fun_fun_stream$ ))(=> (= ?v0 (sCons$a ?v1 ?v2 ))false ))false )):named a7 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_stream$ ))(=> (forall ((?v1 Nat_nat_fun_nat_fun$ )(?v2 Nat_nat_fun_nat_fun_stream$ ))(=> (= ?v0 (sCons$b ?v1 ?v2 ))false ))false )):named a8 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_stream$ ))(=> (forall ((?v1 Nat_nat_nat_fun_fun$ )(?v2 Nat_nat_nat_fun_fun_stream$ ))(=> (= ?v0 (sCons$c ?v1 ?v2 ))false ))false )):named a9 ))
(assert (! (forall ((?v0 Nat_nat_fun_stream$ ))(=> (forall ((?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun_stream$ ))(=> (= ?v0 (sCons$d ?v1 ?v2 ))false ))false )):named a10 ))
(assert (! (forall ((?v0 Nat_stream$ ))(=> (forall ((?v1 Nat$ )(?v2 Nat_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a11 ))
(assert (! (= one$ one$ ):named a12 ))
(assert (! (forall ((?v0 Nat_tree$ ))(= (= one$a ?v0 )(= ?v0 one$a ))):named a13 ))
(assert (! (forall ((?v0 Nat_stream$ ))(= (= one$b ?v0 )(= ?v0 one$b ))):named a14 ))
(assert (! (forall ((?v0 Nat$ ))(= (= one$ ?v0 )(= ?v0 one$ ))):named a15 ))
(assert (! (= (root$ den$ )one$ ):named a16 ))
(assert (! (= (root$ num$ )one$ ):named a17 ))
(assert (! (= fusc$ (sCons$ one$ fusc$a )):named a18 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_fun$ )(?v2 Nat_nat_fun_nat_nat_fun_fun_stream$ ))(! (= (smember$ ?v0 (sCons$a ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$ ?v0 ?v2 ))):pattern ((smember$ ?v0 (sCons$a ?v1 ?v2 ))))):named a19 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun$ )(?v2 Nat_nat_fun_nat_fun_stream$ ))(! (= (smember$a ?v0 (sCons$b ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$a ?v0 ?v2 ))):pattern ((smember$a ?v0 (sCons$b ?v1 ?v2 ))))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_fun$ )(?v2 Nat_nat_nat_fun_fun_stream$ ))(! (= (smember$b ?v0 (sCons$c ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$b ?v0 ?v2 ))):pattern ((smember$b ?v0 (sCons$c ?v1 ?v2 ))))):named a21 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun_stream$ ))(! (= (smember$c ?v0 (sCons$d ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$c ?v0 ?v2 ))):pattern ((smember$c ?v0 (sCons$d ?v1 ?v2 ))))):named a22 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat_stream$ ))(! (= (smember$d ?v0 (sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$d ?v0 ?v2 ))):pattern ((smember$d ?v0 (sCons$ ?v1 ?v2 ))))):named a23 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$ (sCons$d ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$ (fun_app$ ?v0 ?v2 )(st_ap$ ?v1 ?v3 ))):pattern ((st_ap$ (sCons$d ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a24 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$a (sCons$c ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$d (fun_app$a ?v0 ?v2 )(st_ap$a ?v1 ?v3 ))):pattern ((st_ap$a (sCons$c ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a25 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$b (sCons$b ?v0 ?v1 )(sCons$d ?v2 ?v3 ))(sCons$ (fun_app$b ?v0 ?v2 )(st_ap$b ?v1 ?v3 ))):pattern ((st_ap$b (sCons$b ?v0 ?v1 )(sCons$d ?v2 ?v3 ))))):named a26 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$c (sCons$a ?v0 ?v1 )(sCons$d ?v2 ?v3 ))(sCons$d (fun_app$c ?v0 ?v2 )(st_ap$c ?v1 ?v3 ))):pattern ((st_ap$c (sCons$a ?v0 ?v1 )(sCons$d ?v2 ?v3 ))))):named a27 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_nat_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$d (sCons$e ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$b (fun_app$d ?v0 ?v2 )(st_ap$d ?v1 ?v3 ))):pattern ((st_ap$d (sCons$e ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a28 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_nat_nat_fun_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$e (sCons$f ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$c (fun_app$e ?v0 ?v2 )(st_ap$e ?v1 ?v3 ))):pattern ((st_ap$e (sCons$f ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a29 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun_nat_fun_stream$ )(?v2 Nat_nat_fun_nat_fun$ )(?v3 Nat_nat_fun_nat_fun_stream$ ))(! (= (st_ap$f (sCons$g ?v0 ?v1 )(sCons$b ?v2 ?v3 ))(sCons$ (fun_app$f ?v0 ?v2 )(st_ap$f ?v1 ?v3 ))):pattern ((st_ap$f (sCons$g ?v0 ?v1 )(sCons$b ?v2 ?v3 ))))):named a30 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun$ )(?v1 Nat_nat_nat_fun_fun_nat_fun_stream$ )(?v2 Nat_nat_nat_fun_fun$ )(?v3 Nat_nat_nat_fun_fun_stream$ ))(! (= (st_ap$g (sCons$h ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(sCons$ (fun_app$g ?v0 ?v2 )(st_ap$g ?v1 ?v3 ))):pattern ((st_ap$g (sCons$h ?v0 ?v1 )(sCons$c ?v2 ?v3 ))))):named a31 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$h (sCons$i ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$a (fun_app$h ?v0 ?v2 )(st_ap$h ?v1 ?v3 ))):pattern ((st_ap$h (sCons$i ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a32 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$i (sCons$j ?v0 ?v1 )(sCons$d ?v2 ?v3 ))(sCons$b (fun_app$i ?v0 ?v2 )(st_ap$i ?v1 ?v3 ))):pattern ((st_ap$i (sCons$j ?v0 ?v1 )(sCons$d ?v2 ?v3 ))))):named a33 ))
(assert (! (= den$ (node$ one$ (plus$ num$ den$ )den$ )):named a34 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ )(?v2 Nat_tree_tree_tree$ ))(= (= (plus$a ?v0 ?v1 )(plus$a ?v2 ?v1 ))(= ?v0 ?v2 ))):named a35 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$ (plus$b ?v0 )?v1 )(fun_app$ (plus$b ?v2 )?v1 ))(= ?v0 ?v2 ))):named a36 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ )(?v2 Nat_tree_tree$ ))(= (= (plus$c ?v0 ?v1 )(plus$c ?v2 ?v1 ))(= ?v0 ?v2 ))):named a37 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ )(?v2 Nat_tree$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v2 ?v1 ))(= ?v0 ?v2 ))):named a38 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ )(?v2 Nat_tree_tree_tree$ ))(= (= (plus$a ?v0 ?v1 )(plus$a ?v0 ?v2 ))(= ?v1 ?v2 ))):named a39 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (fun_app$ (plus$b ?v0 )?v1 )(fun_app$ (plus$b ?v0 )?v2 ))(= ?v1 ?v2 ))):named a40 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ )(?v2 Nat_tree_tree$ ))(= (= (plus$c ?v0 ?v1 )(plus$c ?v0 ?v2 ))(= ?v1 ?v2 ))):named a41 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ )(?v2 Nat_tree$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a42 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_tree$ )(?v2 Nat_tree$ )(?v3 Nat$ )(?v4 Nat_tree$ )(?v5 Nat_tree$ ))(= (= (node$ ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a43 ))
(assert (! (= (stream$ one$a )one$b ):named a44 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree_tree$ )(?v1 Nat_tree_tree_tree_tree$ ))(= (root$c (plus$d ?v0 ?v1 ))(plus$a (root$c ?v0 )(root$c ?v1 )))):named a45 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (root$b (plus$a ?v0 ?v1 ))(plus$c (root$b ?v0 )(root$b ?v1 )))):named a46 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (root$a (plus$c ?v0 ?v1 ))(plus$ (root$a ?v0 )(root$a ?v1 )))):named a47 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (root$ (plus$ ?v0 ?v1 ))(fun_app$ (plus$b (root$ ?v0 ))(root$ ?v1 )))):named a48 ))
(check-sat )
;(get-unsat-core )
