;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_set$ 0 )
(declare-sort Bool_tree$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun$ 0 )
(declare-sort Bool_nat_bool_fun_fun$ 0 )
(declare-sort Nat_bool_fun_bool_fun$ 0 )
(declare-sort Bool_bool_bool_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_fun$ 0 )
(declare-sort Bool_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_bool_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun$ 0 )
(declare-sort Nat_bool_fun_tree$ 0)
(declare-sort Nat_tree$ 0)
(declare-sort Nat_nat_bool_fun_fun_tree$ 0)
(declare-fun select$ (Nat_bool_fun_tree$)Nat_bool_fun$)
(declare-fun selecta$ (Nat_bool_fun_tree$)Nat_bool_fun_tree$)
(declare-fun selectb$ (Nat_bool_fun_tree$)Nat_bool_fun_tree$)
(declare-fun node$ (Nat_bool_fun$ Nat_bool_fun_tree$ Nat_bool_fun_tree$ )Nat_bool_fun_tree$)
(declare-fun root$ (Nat_tree$)Nat$)
(declare-fun left$ (Nat_tree$)Nat_tree$)
(declare-fun right$ (Nat_tree$)Nat_tree$)
(declare-fun node$a (Nat$ Nat_tree$ Nat_tree$ )Nat_tree$)
(declare-fun selectc$ (Nat_nat_bool_fun_fun_tree$)Nat_nat_bool_fun_fun$)
(declare-fun selectd$ (Nat_nat_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_tree$)
(declare-fun selecte$ (Nat_nat_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_tree$)
(declare-fun node$b (Nat_nat_bool_fun_fun$ Nat_nat_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_tree$ )Nat_nat_bool_fun_fun_tree$)
(declare-sort Num$ 0)
(declare-fun one$ ()Num$)
(declare-fun selectf$ (Num$)Num$)
(declare-fun bit0$ (Num$ )Num$)
(declare-fun selectg$ (Num$)Num$)
(declare-fun bit1$ (Num$ )Num$)
(declare-sort Int_tree$ 0)
(declare-sort Int_tree_tree$ 0)
(declare-sort Int_tree_tree_tree$ 0)
(declare-sort Bool_tree_tree$ 0)
(declare-sort Bool_tree_tree_tree$ 0)
(declare-sort Nat_tree_tree$ 0)
(declare-sort Nat_tree_tree_tree$ 0)
(declare-sort Nat_tree_tree_tree_tree$ 0)
(declare-sort Bool_bool_fun_tree$ 0)
(declare-sort Nat_nat_bool_fun_fun_bool_fun_tree$ 0)
(declare-sort Bool_nat_nat_bool_fun_fun_fun_tree$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_bool_fun_fun_tree$ 0)
(declare-sort Bool_nat_bool_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_bool_fun_tree$ 0)
(declare-sort Nat_bool_fun_bool_fun_tree$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$ 0)
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$ 0)
(declare-fun root$a (Int_tree$)Int)
(declare-fun left$a (Int_tree$)Int_tree$)
(declare-fun right$a (Int_tree$)Int_tree$)
(declare-fun node$c (Int Int_tree$ Int_tree$ )Int_tree$)
(declare-fun root$b (Int_tree_tree$)Int_tree$)
(declare-fun left$b (Int_tree_tree$)Int_tree_tree$)
(declare-fun right$b (Int_tree_tree$)Int_tree_tree$)
(declare-fun node$d (Int_tree$ Int_tree_tree$ Int_tree_tree$ )Int_tree_tree$)
(declare-fun root$c (Int_tree_tree_tree$)Int_tree_tree$)
(declare-fun left$c (Int_tree_tree_tree$)Int_tree_tree_tree$)
(declare-fun right$c (Int_tree_tree_tree$)Int_tree_tree_tree$)
(declare-fun node$e (Int_tree_tree$ Int_tree_tree_tree$ Int_tree_tree_tree$ )Int_tree_tree_tree$)
(declare-fun root$d (Bool_tree_tree$)Bool_tree$)
(declare-fun left$d (Bool_tree_tree$)Bool_tree_tree$)
(declare-fun right$d (Bool_tree_tree$)Bool_tree_tree$)
(declare-fun node$f (Bool_tree$ Bool_tree_tree$ Bool_tree_tree$ )Bool_tree_tree$)
(declare-fun root$e (Bool_tree_tree_tree$)Bool_tree_tree$)
(declare-fun left$e (Bool_tree_tree_tree$)Bool_tree_tree_tree$)
(declare-fun right$e (Bool_tree_tree_tree$)Bool_tree_tree_tree$)
(declare-fun node$g (Bool_tree_tree$ Bool_tree_tree_tree$ Bool_tree_tree_tree$ )Bool_tree_tree_tree$)
(declare-fun root$f (Nat_tree_tree$)Nat_tree$)
(declare-fun left$f (Nat_tree_tree$)Nat_tree_tree$)
(declare-fun right$f (Nat_tree_tree$)Nat_tree_tree$)
(declare-fun node$h (Nat_tree$ Nat_tree_tree$ Nat_tree_tree$ )Nat_tree_tree$)
(declare-fun root$g (Nat_tree_tree_tree$)Nat_tree_tree$)
(declare-fun left$g (Nat_tree_tree_tree$)Nat_tree_tree_tree$)
(declare-fun right$g (Nat_tree_tree_tree$)Nat_tree_tree_tree$)
(declare-fun node$i (Nat_tree_tree$ Nat_tree_tree_tree$ Nat_tree_tree_tree$ )Nat_tree_tree_tree$)
(declare-fun root$h (Nat_tree_tree_tree_tree$)Nat_tree_tree_tree$)
(declare-fun left$h (Nat_tree_tree_tree_tree$)Nat_tree_tree_tree_tree$)
(declare-fun right$h (Nat_tree_tree_tree_tree$)Nat_tree_tree_tree_tree$)
(declare-fun node$j (Nat_tree_tree_tree$ Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$ )Nat_tree_tree_tree_tree$)
(declare-fun selecth$ (Bool_bool_fun_tree$)Bool_bool_fun$)
(declare-fun selecti$ (Bool_bool_fun_tree$)Bool_bool_fun_tree$)
(declare-fun selectj$ (Bool_bool_fun_tree$)Bool_bool_fun_tree$)
(declare-fun node$k (Bool_bool_fun$ Bool_bool_fun_tree$ Bool_bool_fun_tree$ )Bool_bool_fun_tree$)
(declare-fun selectk$ (Nat_nat_bool_fun_fun_bool_fun_tree$)Nat_nat_bool_fun_fun_bool_fun$)
(declare-fun selectl$ (Nat_nat_bool_fun_fun_bool_fun_tree$)Nat_nat_bool_fun_fun_bool_fun_tree$)
(declare-fun selectm$ (Nat_nat_bool_fun_fun_bool_fun_tree$)Nat_nat_bool_fun_fun_bool_fun_tree$)
(declare-fun node$l (Nat_nat_bool_fun_fun_bool_fun$ Nat_nat_bool_fun_fun_bool_fun_tree$ Nat_nat_bool_fun_fun_bool_fun_tree$ )Nat_nat_bool_fun_fun_bool_fun_tree$)
(declare-fun selectn$ (Bool_nat_nat_bool_fun_fun_fun_tree$)Bool_nat_nat_bool_fun_fun_fun$)
(declare-fun selecto$ (Bool_nat_nat_bool_fun_fun_fun_tree$)Bool_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun selectp$ (Bool_nat_nat_bool_fun_fun_fun_tree$)Bool_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun node$m (Bool_nat_nat_bool_fun_fun_fun$ Bool_nat_nat_bool_fun_fun_fun_tree$ Bool_nat_nat_bool_fun_fun_fun_tree$ )Bool_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun selectq$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$)
(declare-fun selectr$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun selects$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun node$n (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun selectt$ (Bool_bool_bool_fun_fun_tree$)Bool_bool_bool_fun_fun$)
(declare-fun selectu$ (Bool_bool_bool_fun_fun_tree$)Bool_bool_bool_fun_fun_tree$)
(declare-fun selectv$ (Bool_bool_bool_fun_fun_tree$)Bool_bool_bool_fun_fun_tree$)
(declare-fun node$o (Bool_bool_bool_fun_fun$ Bool_bool_bool_fun_fun_tree$ Bool_bool_bool_fun_fun_tree$ )Bool_bool_bool_fun_fun_tree$)
(declare-fun selectw$ (Bool_nat_bool_fun_fun_tree$)Bool_nat_bool_fun_fun$)
(declare-fun selectx$ (Bool_nat_bool_fun_fun_tree$)Bool_nat_bool_fun_fun_tree$)
(declare-fun selecty$ (Bool_nat_bool_fun_fun_tree$)Bool_nat_bool_fun_fun_tree$)
(declare-fun node$p (Bool_nat_bool_fun_fun$ Bool_nat_bool_fun_fun_tree$ Bool_nat_bool_fun_fun_tree$ )Bool_nat_bool_fun_fun_tree$)
(declare-fun selectz$ (Bool_bool_fun_bool_fun_tree$)Bool_bool_fun_bool_fun$)
(declare-fun selecua$ (Bool_bool_fun_bool_fun_tree$)Bool_bool_fun_bool_fun_tree$)
(declare-fun selecub$ (Bool_bool_fun_bool_fun_tree$)Bool_bool_fun_bool_fun_tree$)
(declare-fun node$q (Bool_bool_fun_bool_fun$ Bool_bool_fun_bool_fun_tree$ Bool_bool_fun_bool_fun_tree$ )Bool_bool_fun_bool_fun_tree$)
(declare-fun selecuc$ (Nat_bool_fun_bool_fun_tree$)Nat_bool_fun_bool_fun$)
(declare-fun selecud$ (Nat_bool_fun_bool_fun_tree$)Nat_bool_fun_bool_fun_tree$)
(declare-fun selecue$ (Nat_bool_fun_bool_fun_tree$)Nat_bool_fun_bool_fun_tree$)
(declare-fun node$r (Nat_bool_fun_bool_fun$ Nat_bool_fun_bool_fun_tree$ Nat_bool_fun_bool_fun_tree$ )Nat_bool_fun_bool_fun_tree$)
(declare-fun selecuf$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$)
(declare-fun selecug$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun selecuh$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun node$s (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$)
(declare-fun selecui$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun$)
(declare-fun selecuj$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$)
(declare-fun selecuk$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$)
(declare-fun node$t (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$)
(declare-fun selecul$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$)
(declare-fun selecum$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun selecun$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun node$u (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$)
(declare-fun selecuo$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun$)
(declare-fun selecup$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$)
(declare-fun selecuq$ (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$)Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$)
(declare-fun node$v (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$)
(declare-fun t$ ()Nat_tree$ )
(declare-fun ta$ ()Nat_tree$ )
(declare-fun uu$ ()Nat_nat_bool_fun_fun$ )
(declare-fun mod$ (Nat_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun t_a$ ()Nat_tree$ )
(declare-fun uua$ ()Bool_bool_bool_fun_fun$ )
(declare-fun uub$ ()Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ )
(declare-fun uuc$ ()Nat_nat_bool_fun_fun$ )
(declare-fun less$ (Nat$ )Nat_bool_fun$ )
(declare-fun mod$a (Int_tree$ Int_tree$ )Int_tree$ )
(declare-fun mod$b (Nat_tree_tree_tree$ Nat_tree_tree_tree$ )Nat_tree_tree_tree$ )
(declare-fun mod$c (Nat_tree_tree$ Nat_tree_tree$ )Nat_tree_tree$ )
(declare-fun mod$d (Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$ )Nat_tree_tree_tree_tree$ )
(declare-fun mod$e (Int_tree_tree$ Int_tree_tree$ )Int_tree_tree$ )
(declare-fun mod$f (Int Int )Int )
(declare-fun mod$g (Nat$ Nat$ )Nat$ )
(declare-fun plus$ (Nat_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun zero$ ()Nat$ )
(declare-fun left$i (Bool_tree$ )Bool_tree$ )
(declare-fun minus$ (Nat$ Nat$ )Nat$ )
(declare-fun plus$a (Int_tree$ Int_tree$ )Int_tree$ )
(declare-fun plus$b (Nat_tree_tree_tree$ Nat_tree_tree_tree$ )Nat_tree_tree_tree$ )
(declare-fun plus$c (Nat_tree_tree$ Nat_tree_tree$ )Nat_tree_tree$ )
(declare-fun plus$d (Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$ )Nat_tree_tree_tree_tree$ )
(declare-fun plus$e (Int_tree_tree$ Int_tree_tree$ )Int_tree_tree$ )
(declare-fun plus$f (Nat$ Nat$ )Nat$ )
(declare-fun root$i (Bool_tree$ )Bool )
(declare-fun times$ (Nat_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun member$ (Nat$ Nat_set$ )Bool )
(declare-fun minus$a (Int_tree_tree_tree$ Int_tree_tree_tree$ )Int_tree_tree_tree$ )
(declare-fun minus$b (Int_tree_tree$ Int_tree_tree$ )Int_tree_tree$ )
(declare-fun minus$c (Bool_tree_tree_tree$ Bool_tree_tree_tree$ )Bool_tree_tree_tree$ )
(declare-fun minus$d (Bool_tree_tree$ Bool_tree_tree$ )Bool_tree_tree$ )
(declare-fun minus$e (Nat_tree_tree_tree$ Nat_tree_tree_tree$ )Nat_tree_tree_tree$ )
(declare-fun minus$f (Nat_tree_tree$ Nat_tree_tree$ )Nat_tree_tree$ )
(declare-fun minus$g (Bool_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun minus$h (Int_tree$ Int_tree$ )Int_tree$ )
(declare-fun minus$i (Nat_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun minus$j (Bool )Bool_bool_fun$ )
(declare-fun of_nat$ (Nat$ )Int )
(declare-fun right$i (Bool_tree$ )Bool_tree$ )
(declare-fun times$a (Int_tree$ Int_tree$ )Int_tree$ )
(declare-fun times$b (Nat_tree_tree_tree$ Nat_tree_tree_tree$ )Nat_tree_tree_tree$ )
(declare-fun times$c (Nat_tree_tree$ Nat_tree_tree$ )Nat_tree_tree$ )
(declare-fun times$d (Nat_tree_tree_tree_tree$ Nat_tree_tree_tree_tree$ )Nat_tree_tree_tree_tree$ )
(declare-fun times$e (Int_tree_tree$ Int_tree_tree$ )Int_tree_tree$ )
(declare-fun times$f (Int Int )Int )
(declare-fun times$g (Nat$ Nat$ )Nat$ )
(declare-fun fun_app$ (Nat_bool_fun$ Nat$ )Bool )
(declare-fun numeral$ (Num$ )Nat_tree$ )
(declare-fun tree_ap$ (Nat_bool_fun_tree$ Nat_tree$ )Bool_tree$ )
(declare-fun fun_app$a (Nat_nat_bool_fun_fun$ Nat$ )Nat_bool_fun$ )
(declare-fun fun_app$b (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$c (Bool_bool_bool_fun_fun$ Bool )Bool_bool_fun$ )
(declare-fun fun_app$d (Nat_nat_bool_fun_fun_bool_fun$ Nat_nat_bool_fun_fun$ )Bool )
(declare-fun fun_app$e (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ Nat_nat_bool_fun_fun$ )Nat_nat_bool_fun_fun_bool_fun$ )
(declare-fun fun_app$f (Bool_nat_nat_bool_fun_fun_fun$ Bool )Nat_nat_bool_fun_fun$ )
(declare-fun fun_app$g (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_bool_fun_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun fun_app$h (Bool_nat_bool_fun_fun$ Bool )Nat_bool_fun$ )
(declare-fun fun_app$i (Bool_bool_fun_bool_fun$ Bool_bool_fun$ )Bool )
(declare-fun fun_app$j (Nat_bool_fun_bool_fun$ Nat_bool_fun$ )Bool )
(declare-fun numeral$a (Num$ )Int_tree$ )
(declare-fun numeral$b (Num$ )Nat_tree_tree_tree$ )
(declare-fun numeral$c (Num$ )Nat_tree_tree$ )
(declare-fun numeral$d (Num$ )Nat_tree_tree_tree_tree$ )
(declare-fun numeral$e (Num$ )Int_tree_tree$ )
(declare-fun numeral$f (Num$ )Int )
(declare-fun numeral$g (Num$ )Nat$ )
(declare-fun set_tree$ (Nat_tree$ )Nat_set$ )
(declare-fun tree_ap$a (Nat_nat_bool_fun_fun_tree$ Nat_tree$ )Nat_bool_fun_tree$ )
(declare-fun tree_ap$b (Bool_bool_fun_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun tree_ap$c (Nat_nat_bool_fun_fun_bool_fun_tree$ Nat_nat_bool_fun_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$d (Bool_nat_nat_bool_fun_fun_fun_tree$ Bool_tree$ )Nat_nat_bool_fun_fun_tree$ )
(declare-fun tree_ap$e (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ Nat_nat_bool_fun_fun_tree$ )Nat_nat_bool_fun_fun_tree$ )
(declare-fun tree_ap$f (Bool_bool_bool_fun_fun_tree$ Bool_tree$ )Bool_bool_fun_tree$ )
(declare-fun tree_ap$g (Bool_nat_bool_fun_fun_tree$ Bool_tree$ )Nat_bool_fun_tree$ )
(declare-fun tree_ap$h (Bool_bool_fun_bool_fun_tree$ Bool_bool_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$i (Nat_bool_fun_bool_fun_tree$ Nat_bool_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$j (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ Nat_nat_bool_fun_fun_tree$ )Nat_nat_bool_fun_fun_bool_fun_tree$ )
(declare-fun tree_pure$ (Nat_nat_bool_fun_fun$ )Nat_nat_bool_fun_fun_tree$ )
(declare-fun tree_pure$a (Bool )Bool_tree$ )
(declare-fun tree_pure$b (Nat_bool_fun$ )Nat_bool_fun_tree$ )
(declare-fun tree_pure$c (Nat$ )Nat_tree$ )
(declare-fun tree_pure$d (Bool_bool_fun$ )Bool_bool_fun_tree$ )
(declare-fun tree_pure$e (Nat_nat_bool_fun_fun_bool_fun$ )Nat_nat_bool_fun_fun_bool_fun_tree$ )
(declare-fun tree_pure$f (Bool_nat_nat_bool_fun_fun_fun$ )Bool_nat_nat_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$g (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$h (Bool_bool_bool_fun_fun$ )Bool_bool_bool_fun_fun_tree$ )
(declare-fun tree_pure$i (Bool_nat_bool_fun_fun$ )Bool_nat_bool_fun_fun_tree$ )
(declare-fun tree_pure$j (Bool_bool_fun_bool_fun$ )Bool_bool_fun_bool_fun_tree$ )
(declare-fun tree_pure$k (Nat_bool_fun_bool_fun$ )Nat_bool_fun_bool_fun_tree$ )
(declare-fun tree_pure$l (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_bool_fun_fun_tree$ )
(declare-fun tree_pure$m (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun_tree$ )
(declare-fun tree_pure$n (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$o (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun_tree$ )
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uu$ ?v0 )?v1 )(= (of_nat$ (minus$ ?v0 ?v1 ))(- (of_nat$ ?v0 )(of_nat$ ?v1 )))):pattern ((fun_app$ (fun_app$a uu$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(! (= (fun_app$b (fun_app$c uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uua$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uuc$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat_nat_bool_fun_fun$ ))(! (= (fun_app$d (fun_app$e uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (not (and (= (root$i (tree_ap$ (tree_ap$a (tree_pure$ uu$ )(plus$ ta$ t_a$ ))(times$ (numeral$ (bit0$ one$ ))(mod$ ta$ t_a$ ))))(root$i (tree_pure$a true )))(and (exists ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(and (= (left$i (tree_ap$ (tree_ap$a (tree_pure$ uu$ )(plus$ ta$ t_a$ ))(times$ (numeral$ (bit0$ one$ ))(mod$ ta$ t_a$ ))))(tree_ap$ (tree_ap$a (tree_pure$ uu$ )(plus$ ?v0 ?v1 ))(times$ (numeral$ (bit0$ one$ ))(mod$ ?v0 ?v1 ))))(and (= (left$i (tree_pure$a true ))(tree_pure$a true ))(forall ((?v2 Nat$ ))(=> (member$ ?v2 (set_tree$ ?v1 ))(fun_app$ (less$ zero$ )?v2 ))))))(exists ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(and (= (right$i (tree_ap$ (tree_ap$a (tree_pure$ uu$ )(plus$ ta$ t_a$ ))(times$ (numeral$ (bit0$ one$ ))(mod$ ta$ t_a$ ))))(tree_ap$ (tree_ap$a (tree_pure$ uu$ )(plus$ ?v0 ?v1 ))(times$ (numeral$ (bit0$ one$ ))(mod$ ?v0 ?v1 ))))(and (= (right$i (tree_pure$a true ))(tree_pure$a true ))(forall ((?v2 Nat$ ))(=> (member$ ?v2 (set_tree$ ?v1 ))(fun_app$ (less$ zero$ )?v2 ))))))))):named a4 ))
(assert (! (forall ((?v0 Nat$ ))(=> (member$ ?v0 (set_tree$ t_a$ ))(fun_app$ (less$ zero$ )?v0 ))):named a5 ))
(assert (! (forall ((?v0 Nat$ ))(=> (member$ ?v0 (set_tree$ t$ ))(fun_app$ (less$ zero$ )?v0 ))):named a6 ))
(assert (! (forall ((?v0 Int_tree_tree_tree$ )(?v1 Int_tree_tree_tree$ ))(= (root$c (minus$a ?v0 ?v1 ))(minus$b (root$c ?v0 )(root$c ?v1 )))):named a7 ))
(assert (! (forall ((?v0 Bool_tree_tree_tree$ )(?v1 Bool_tree_tree_tree$ ))(= (root$e (minus$c ?v0 ?v1 ))(minus$d (root$e ?v0 )(root$e ?v1 )))):named a8 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (root$g (minus$e ?v0 ?v1 ))(minus$f (root$g ?v0 )(root$g ?v1 )))):named a9 ))
(assert (! (forall ((?v0 Bool_tree_tree$ )(?v1 Bool_tree_tree$ ))(= (root$d (minus$d ?v0 ?v1 ))(minus$g (root$d ?v0 )(root$d ?v1 )))):named a10 ))
(assert (! (forall ((?v0 Int_tree_tree$ )(?v1 Int_tree_tree$ ))(= (root$b (minus$b ?v0 ?v1 ))(minus$h (root$b ?v0 )(root$b ?v1 )))):named a11 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (root$f (minus$f ?v0 ?v1 ))(minus$i (root$f ?v0 )(root$f ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (root$ (minus$i ?v0 ?v1 ))(minus$ (root$ ?v0 )(root$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (root$a (minus$h ?v0 ?v1 ))(- (root$a ?v0 )(root$a ?v1 )))):named a14 ))
(assert (! (forall ((?v0 Bool_tree$ )(?v1 Bool_tree$ ))(= (root$i (minus$g ?v0 ?v1 ))(fun_app$b (minus$j (root$i ?v0 ))(root$i ?v1 )))):named a15 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (left$a (plus$a ?v0 ?v1 ))(plus$a (left$a ?v0 )(left$a ?v1 )))):named a16 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (left$g (plus$b ?v0 ?v1 ))(plus$b (left$g ?v0 )(left$g ?v1 )))):named a17 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (left$f (plus$c ?v0 ?v1 ))(plus$c (left$f ?v0 )(left$f ?v1 )))):named a18 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (left$ (plus$ ?v0 ?v1 ))(plus$ (left$ ?v0 )(left$ ?v1 )))):named a19 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (right$a (plus$a ?v0 ?v1 ))(plus$a (right$a ?v0 )(right$a ?v1 )))):named a20 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (right$g (plus$b ?v0 ?v1 ))(plus$b (right$g ?v0 )(right$g ?v1 )))):named a21 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (right$f (plus$c ?v0 ?v1 ))(plus$c (right$f ?v0 )(right$f ?v1 )))):named a22 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (right$ (plus$ ?v0 ?v1 ))(plus$ (right$ ?v0 )(right$ ?v1 )))):named a23 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (left$a (mod$a ?v0 ?v1 ))(mod$a (left$a ?v0 )(left$a ?v1 )))):named a24 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (left$g (mod$b ?v0 ?v1 ))(mod$b (left$g ?v0 )(left$g ?v1 )))):named a25 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (left$f (mod$c ?v0 ?v1 ))(mod$c (left$f ?v0 )(left$f ?v1 )))):named a26 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (left$ (mod$ ?v0 ?v1 ))(mod$ (left$ ?v0 )(left$ ?v1 )))):named a27 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (right$a (mod$a ?v0 ?v1 ))(mod$a (right$a ?v0 )(right$a ?v1 )))):named a28 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (right$g (mod$b ?v0 ?v1 ))(mod$b (right$g ?v0 )(right$g ?v1 )))):named a29 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (right$f (mod$c ?v0 ?v1 ))(mod$c (right$f ?v0 )(right$f ?v1 )))):named a30 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (right$ (mod$ ?v0 ?v1 ))(mod$ (right$ ?v0 )(right$ ?v1 )))):named a31 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (left$a (times$a ?v0 ?v1 ))(times$a (left$a ?v0 )(left$a ?v1 )))):named a32 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (left$g (times$b ?v0 ?v1 ))(times$b (left$g ?v0 )(left$g ?v1 )))):named a33 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (left$f (times$c ?v0 ?v1 ))(times$c (left$f ?v0 )(left$f ?v1 )))):named a34 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (left$ (times$ ?v0 ?v1 ))(times$ (left$ ?v0 )(left$ ?v1 )))):named a35 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (right$a (times$a ?v0 ?v1 ))(times$a (right$a ?v0 )(right$a ?v1 )))):named a36 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (right$g (times$b ?v0 ?v1 ))(times$b (right$g ?v0 )(right$g ?v1 )))):named a37 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (right$f (times$c ?v0 ?v1 ))(times$c (right$f ?v0 )(right$f ?v1 )))):named a38 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (right$ (times$ ?v0 ?v1 ))(times$ (right$ ?v0 )(right$ ?v1 )))):named a39 ))
(assert (! (forall ((?v0 Num$ ))(= (left$a (numeral$a ?v0 ))(numeral$a ?v0 ))):named a40 ))
(assert (! (forall ((?v0 Num$ ))(= (left$g (numeral$b ?v0 ))(numeral$b ?v0 ))):named a41 ))
(assert (! (forall ((?v0 Num$ ))(= (left$f (numeral$c ?v0 ))(numeral$c ?v0 ))):named a42 ))
(assert (! (forall ((?v0 Num$ ))(= (left$ (numeral$ ?v0 ))(numeral$ ?v0 ))):named a43 ))
(assert (! (forall ((?v0 Num$ ))(= (right$a (numeral$a ?v0 ))(numeral$a ?v0 ))):named a44 ))
(assert (! (forall ((?v0 Num$ ))(= (right$g (numeral$b ?v0 ))(numeral$b ?v0 ))):named a45 ))
(assert (! (forall ((?v0 Num$ ))(= (right$f (numeral$c ?v0 ))(numeral$c ?v0 ))):named a46 ))
(assert (! (forall ((?v0 Num$ ))(= (right$ (numeral$ ?v0 ))(numeral$ ?v0 ))):named a47 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree_tree$ )(?v1 Nat_tree_tree_tree_tree$ ))(= (root$h (plus$d ?v0 ?v1 ))(plus$b (root$h ?v0 )(root$h ?v1 )))):named a48 ))
(assert (! (forall ((?v0 Int_tree_tree$ )(?v1 Int_tree_tree$ ))(= (root$b (plus$e ?v0 ?v1 ))(plus$a (root$b ?v0 )(root$b ?v1 )))):named a49 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (root$g (plus$b ?v0 ?v1 ))(plus$c (root$g ?v0 )(root$g ?v1 )))):named a50 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (root$a (plus$a ?v0 ?v1 ))(+ (root$a ?v0 )(root$a ?v1 )))):named a51 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (root$f (plus$c ?v0 ?v1 ))(plus$ (root$f ?v0 )(root$f ?v1 )))):named a52 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (root$ (plus$ ?v0 ?v1 ))(plus$f (root$ ?v0 )(root$ ?v1 )))):named a53 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ ))(= (tree_ap$ (tree_pure$b ?v0 )(tree_pure$c ?v1 ))(tree_pure$a (fun_app$ ?v0 ?v1 )))):named a54 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool ))(= (tree_ap$b (tree_pure$d ?v0 )(tree_pure$a ?v1 ))(tree_pure$a (fun_app$b ?v0 ?v1 )))):named a55 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat$ ))(= (tree_ap$a (tree_pure$ ?v0 )(tree_pure$c ?v1 ))(tree_pure$b (fun_app$a ?v0 ?v1 )))):named a56 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun$ )(?v1 Nat_nat_bool_fun_fun$ ))(= (tree_ap$c (tree_pure$e ?v0 )(tree_pure$ ?v1 ))(tree_pure$a (fun_app$d ?v0 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 Bool_nat_nat_bool_fun_fun_fun$ )(?v1 Bool ))(= (tree_ap$d (tree_pure$f ?v0 )(tree_pure$a ?v1 ))(tree_pure$ (fun_app$f ?v0 ?v1 )))):named a58 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ )(?v1 Nat_nat_bool_fun_fun$ ))(= (tree_ap$e (tree_pure$g ?v0 )(tree_pure$ ?v1 ))(tree_pure$ (fun_app$g ?v0 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 Bool_bool_bool_fun_fun$ )(?v1 Bool ))(= (tree_ap$f (tree_pure$h ?v0 )(tree_pure$a ?v1 ))(tree_pure$d (fun_app$c ?v0 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 Bool_nat_bool_fun_fun$ )(?v1 Bool ))(= (tree_ap$g (tree_pure$i ?v0 )(tree_pure$a ?v1 ))(tree_pure$b (fun_app$h ?v0 ?v1 )))):named a61 ))
(assert (! (forall ((?v0 Bool_bool_fun_bool_fun$ )(?v1 Bool_bool_fun$ ))(= (tree_ap$h (tree_pure$j ?v0 )(tree_pure$d ?v1 ))(tree_pure$a (fun_app$i ?v0 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 Nat_bool_fun_bool_fun$ )(?v1 Nat_bool_fun$ ))(= (tree_ap$i (tree_pure$k ?v0 )(tree_pure$b ?v1 ))(tree_pure$a (fun_app$j ?v0 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree_tree$ )(?v1 Nat_tree_tree_tree_tree$ ))(= (root$h (mod$d ?v0 ?v1 ))(mod$b (root$h ?v0 )(root$h ?v1 )))):named a64 ))
(assert (! (forall ((?v0 Int_tree_tree$ )(?v1 Int_tree_tree$ ))(= (root$b (mod$e ?v0 ?v1 ))(mod$a (root$b ?v0 )(root$b ?v1 )))):named a65 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (root$g (mod$b ?v0 ?v1 ))(mod$c (root$g ?v0 )(root$g ?v1 )))):named a66 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (root$a (mod$a ?v0 ?v1 ))(mod$f (root$a ?v0 )(root$a ?v1 )))):named a67 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (root$f (mod$c ?v0 ?v1 ))(mod$ (root$f ?v0 )(root$f ?v1 )))):named a68 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (root$ (mod$ ?v0 ?v1 ))(mod$g (root$ ?v0 )(root$ ?v1 )))):named a69 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree_tree$ )(?v1 Nat_tree_tree_tree_tree$ ))(= (root$h (times$d ?v0 ?v1 ))(times$b (root$h ?v0 )(root$h ?v1 )))):named a70 ))
(assert (! (forall ((?v0 Int_tree_tree$ )(?v1 Int_tree_tree$ ))(= (root$b (times$e ?v0 ?v1 ))(times$a (root$b ?v0 )(root$b ?v1 )))):named a71 ))
(assert (! (forall ((?v0 Nat_tree_tree_tree$ )(?v1 Nat_tree_tree_tree$ ))(= (root$g (times$b ?v0 ?v1 ))(times$c (root$g ?v0 )(root$g ?v1 )))):named a72 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ ))(= (root$a (times$a ?v0 ?v1 ))(times$f (root$a ?v0 )(root$a ?v1 )))):named a73 ))
(assert (! (forall ((?v0 Nat_tree_tree$ )(?v1 Nat_tree_tree$ ))(= (root$f (times$c ?v0 ?v1 ))(times$ (root$f ?v0 )(root$f ?v1 )))):named a74 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (root$ (times$ ?v0 ?v1 ))(times$g (root$ ?v0 )(root$ ?v1 )))):named a75 ))
(assert (! (forall ((?v0 Num$ ))(= (root$h (numeral$d ?v0 ))(numeral$b ?v0 ))):named a76 ))
(assert (! (forall ((?v0 Num$ ))(= (root$b (numeral$e ?v0 ))(numeral$a ?v0 ))):named a77 ))
(assert (! (forall ((?v0 Num$ ))(= (root$g (numeral$b ?v0 ))(numeral$c ?v0 ))):named a78 ))
(assert (! (forall ((?v0 Num$ ))(= (root$a (numeral$a ?v0 ))(numeral$f ?v0 ))):named a79 ))
(assert (! (forall ((?v0 Num$ ))(= (root$f (numeral$c ?v0 ))(numeral$ ?v0 ))):named a80 ))
(assert (! (forall ((?v0 Num$ ))(= (root$ (numeral$ ?v0 ))(numeral$g ?v0 ))):named a81 ))
(assert (! (forall ((?v0 Bool_tree$ )(?v1 Bool_tree$ ))(= (= ?v0 ?v1 )(= (tree_ap$b (tree_ap$f (tree_pure$h uua$ )?v0 )?v1 )(tree_pure$a true )))):named a82 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_tree$ )(?v1 Nat_nat_bool_fun_fun_tree$ ))(= (= ?v0 ?v1 )(= (tree_ap$c (tree_ap$j (tree_pure$l uub$ )?v0 )?v1 )(tree_pure$a true )))):named a83 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (= ?v0 ?v1 )(= (tree_ap$ (tree_ap$a (tree_pure$ uuc$ )?v0 )?v1 )(tree_pure$a true )))):named a84 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a85 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat_nat_bool_fun_fun$ ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a86 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ ))(= (= (tree_pure$d ?v0 )(tree_pure$d ?v1 ))(= ?v0 ?v1 ))):named a87 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_bool_fun$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a88 ))
(assert (! (forall ((?v0 Bool_nat_nat_bool_fun_fun_fun$ )(?v1 Bool_nat_nat_bool_fun_fun_fun$ ))(= (= (tree_pure$f ?v0 )(tree_pure$f ?v1 ))(= ?v0 ?v1 ))):named a89 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_bool_fun$ )(?v1 Nat_nat_bool_fun_fun_bool_fun$ ))(= (= (tree_pure$e ?v0 )(tree_pure$e ?v1 ))(= ?v0 ?v1 ))):named a90 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ )(?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ ))(= (= (tree_pure$g ?v0 )(tree_pure$g ?v1 ))(= ?v0 ?v1 ))):named a91 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun$ )(?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_bool_fun_fun$ ))(= (= (tree_pure$m ?v0 )(tree_pure$m ?v1 ))(= ?v0 ?v1 ))):named a92 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$ )(?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_nat_nat_bool_fun_fun_fun$ ))(= (= (tree_pure$n ?v0 )(tree_pure$n ?v1 ))(= ?v0 ?v1 ))):named a93 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun$ )(?v1 Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun_bool_nat_nat_bool_fun_fun_fun_fun$ ))(= (= (tree_pure$o ?v0 )(tree_pure$o ?v1 ))(= ?v0 ?v1 ))):named a94 ))
(check-sat )
;(get-unsat-core )
