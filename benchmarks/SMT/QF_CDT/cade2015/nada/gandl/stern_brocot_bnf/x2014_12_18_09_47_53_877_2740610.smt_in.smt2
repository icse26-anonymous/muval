;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_a_stream_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-sort A_stream_stream_stream_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$b (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$b (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$b (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun shd$c (A_stream_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun stl$c (A_stream_stream_stream_stream$)A_stream_stream_stream_stream$)
(declare-fun sCons$c (A_stream_stream_stream$ A_stream_stream_stream_stream$ )A_stream_stream_stream_stream$)
(declare-fun a$ ()A_stream$ )
(declare-fun b$ ()A_stream$ )
(declare-fun c$ ()A_stream$ )
(declare-fun aa$ ()A_stream$ )
(declare-fun ba$ ()A_stream$ )
(declare-fun ca$ ()A_stream$ )
(declare-fun plus$ (A_stream$ A_stream$ )A_stream$ )
(declare-fun plus$a (A_stream_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun plus$b (A_stream_stream$ A_stream_stream$ )A_stream_stream$ )
(declare-fun plus$c (A_stream_stream_stream_stream$ A_stream_stream_stream_stream$ )A_stream_stream_stream_stream$ )
(declare-fun plus$d (A$ A$ )A$ )
(declare-fun fun_app$ (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun fun_app$a (A_stream_stream_stream_a_stream_stream_stream_bool_fun_fun$ A_stream_stream_stream$ )A_stream_stream_stream_bool_fun$ )
(declare-fun fun_app$b (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$c (A_stream_stream_a_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$d (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$e (A_stream_a_stream_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(assert (! (not (and (= (shd$ ba$ )(shd$ ca$ ))(exists ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_stream$ ))(and (= (stl$ ba$ )?v1 )(and (= (stl$ ca$ )?v2 )(= (plus$ ?v1 ?v0 )(plus$ ?v2 ?v0 ))))))):named a0 ))
(assert (! (= (plus$ b$ a$ )(plus$ c$ a$ )):named a1 ))
(assert (! (= (plus$ ba$ aa$ )(plus$ ca$ aa$ )):named a2 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream$ ))(= (stl$b (plus$a ?v0 ?v1 ))(plus$a (stl$b ?v0 )(stl$b ?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(= (stl$a (plus$b ?v0 ?v1 ))(plus$b (stl$a ?v0 )(stl$a ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (stl$ (plus$ ?v0 ?v1 ))(plus$ (stl$ ?v0 )(stl$ ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_stream_stream_stream_stream$ )(?v1 A_stream_stream_stream_stream$ ))(= (shd$c (plus$c ?v0 ?v1 ))(plus$a (shd$c ?v0 )(shd$c ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream$ ))(= (shd$b (plus$a ?v0 ?v1 ))(plus$b (shd$b ?v0 )(shd$b ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(= (shd$a (plus$b ?v0 ?v1 ))(plus$ (shd$a ?v0 )(shd$a ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (shd$ (plus$ ?v0 ?v1 ))(plus$d (shd$ ?v0 )(shd$ ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(= (= (plus$d ?v0 ?v1 )(plus$d ?v2 ?v1 ))(= ?v0 ?v2 ))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(= (= (plus$d ?v0 ?v1 )(plus$d ?v0 ?v2 ))(= ?v1 ?v2 ))):named a11 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream$ ))(=> (and (= (shd$b ?v0 )(shd$b ?v1 ))(= (stl$b ?v0 )(stl$b ?v1 )))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(=> (and (= (shd$a ?v0 )(shd$a ?v1 ))(= (stl$a ?v0 )(stl$a ?v1 )))(= ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_stream_stream_stream_a_stream_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_stream$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream_stream$ )(?v4 A_stream_stream_stream$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(or (fun_app$ (fun_app$a ?v0 (stl$b ?v3 ))(stl$b ?v4 ))(= (stl$b ?v3 )(stl$b ?v4 )))))))(= ?v1 ?v2 ))):named a15 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(or (fun_app$b (fun_app$c ?v0 (stl$a ?v3 ))(stl$a ?v4 ))(= (stl$a ?v3 )(stl$a ?v4 )))))))(= ?v1 ?v2 ))):named a16 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$d (fun_app$e ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a17 ))
(assert (! (forall ((?v0 A_stream_stream_stream_a_stream_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_stream$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream_stream$ )(?v4 A_stream_stream_stream$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(fun_app$ (fun_app$a ?v0 (stl$b ?v3 ))(stl$b ?v4 ))))))(= ?v1 ?v2 ))):named a18 ))
(assert (! (forall ((?v0 A_stream_stream_a_stream_stream_bool_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (fun_app$b (fun_app$c ?v0 ?v3 )?v4 )(and (= (shd$a ?v3 )(shd$a ?v4 ))(fun_app$b (fun_app$c ?v0 (stl$a ?v3 ))(stl$a ?v4 ))))))(= ?v1 ?v2 ))):named a19 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(forall ((?v3 A_stream$ )(?v4 A_stream$ ))(=> (fun_app$d (fun_app$e ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$d (fun_app$e ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a20 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_stream$ ))(= (plus$a (plus$a ?v0 ?v1 )?v2 )(plus$a ?v0 (plus$a ?v1 ?v2 )))):named a21 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(= (plus$d (plus$d ?v0 ?v1 )?v2 )(plus$d ?v0 (plus$d ?v1 ?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_stream$ ))(= (plus$b (plus$b ?v0 ?v1 )?v2 )(plus$b ?v0 (plus$b ?v1 ?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (plus$ (plus$ ?v0 ?v1 )?v2 )(plus$ ?v0 (plus$ ?v1 ?v2 )))):named a24 ))
(check-sat )
;(get-unsat-core )
