;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort Bool_tree$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort Bool_a_fun$ 0 )
(declare-sort Bool_b_fun$ 0 )
(declare-sort A_b_fun_b_fun$ 0 )
(declare-sort B_b_fun_b_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_bool_fun_b_fun$ 0 )
(declare-sort A_b_fun_b_fun_b_fun$ 0 )
(declare-sort A_bool_fun_bool_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_bool_fun_bool_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ 0 )
(declare-sort Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort B_tree$ 0)
(declare-sort A_b_fun_tree$ 0)
(declare-sort A_tree$ 0)
(declare-sort A_bool_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ 0)
(declare-sort Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort Bool_b_fun_tree$ 0)
(declare-sort Bool_a_fun_tree$ 0)
(declare-sort A_b_fun_b_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_bool_fun_tree$ 0)
(declare-sort A_bool_fun_bool_fun_bool_fun_tree$ 0)
(declare-sort A_b_fun_b_fun_b_fun_tree$ 0)
(declare-sort B_b_fun_tree$ 0)
(declare-sort B_b_fun_b_fun_tree$ 0)
(declare-sort B_a_fun_tree$ 0)
(declare-sort A_a_fun_tree$ 0)
(declare-sort A_bool_fun_b_fun_tree$ 0)
(declare-fun root$ (B_tree$)B$)
(declare-fun left$ (B_tree$)B_tree$)
(declare-fun right$ (B_tree$)B_tree$)
(declare-fun node$ (B$ B_tree$ B_tree$ )B_tree$)
(declare-fun select$ (A_b_fun_tree$)A_b_fun$)
(declare-fun selecta$ (A_b_fun_tree$)A_b_fun_tree$)
(declare-fun selectb$ (A_b_fun_tree$)A_b_fun_tree$)
(declare-fun node$a (A_b_fun$ A_b_fun_tree$ A_b_fun_tree$ )A_b_fun_tree$)
(declare-fun root$a (A_tree$)A$)
(declare-fun left$a (A_tree$)A_tree$)
(declare-fun right$a (A_tree$)A_tree$)
(declare-fun node$b (A$ A_tree$ A_tree$ )A_tree$)
(declare-fun selectc$ (A_bool_fun_tree$)A_bool_fun$)
(declare-fun selectd$ (A_bool_fun_tree$)A_bool_fun_tree$)
(declare-fun selecte$ (A_bool_fun_tree$)A_bool_fun_tree$)
(declare-fun node$c (A_bool_fun$ A_bool_fun_tree$ A_bool_fun_tree$ )A_bool_fun_tree$)
(declare-fun selectf$ (A_b_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun$)
(declare-fun selectg$ (A_b_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_tree$)
(declare-fun selecth$ (A_b_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_tree$)
(declare-fun node$d (A_b_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$)
(declare-fun selecti$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selectj$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selectk$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$e (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selectl$ (Bool_bool_fun_tree$)Bool_bool_fun$)
(declare-fun selectm$ (Bool_bool_fun_tree$)Bool_bool_fun_tree$)
(declare-fun selectn$ (Bool_bool_fun_tree$)Bool_bool_fun_tree$)
(declare-fun node$f (Bool_bool_fun$ Bool_bool_fun_tree$ Bool_bool_fun_tree$ )Bool_bool_fun_tree$)
(declare-fun selecto$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$)
(declare-fun selectp$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)
(declare-fun selectq$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)
(declare-fun node$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)
(declare-fun selectr$ (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selects$ (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selectt$ (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$h (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selectu$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selectv$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selectw$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$i (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selectx$ (Bool_b_fun_tree$)Bool_b_fun$)
(declare-fun selecty$ (Bool_b_fun_tree$)Bool_b_fun_tree$)
(declare-fun selectz$ (Bool_b_fun_tree$)Bool_b_fun_tree$)
(declare-fun node$j (Bool_b_fun$ Bool_b_fun_tree$ Bool_b_fun_tree$ )Bool_b_fun_tree$)
(declare-fun selecua$ (Bool_a_fun_tree$)Bool_a_fun$)
(declare-fun selecub$ (Bool_a_fun_tree$)Bool_a_fun_tree$)
(declare-fun selecuc$ (Bool_a_fun_tree$)Bool_a_fun_tree$)
(declare-fun node$k (Bool_a_fun$ Bool_a_fun_tree$ Bool_a_fun_tree$ )Bool_a_fun_tree$)
(declare-fun selecud$ (A_b_fun_b_fun_tree$)A_b_fun_b_fun$)
(declare-fun selecue$ (A_b_fun_b_fun_tree$)A_b_fun_b_fun_tree$)
(declare-fun selecuf$ (A_b_fun_b_fun_tree$)A_b_fun_b_fun_tree$)
(declare-fun node$l (A_b_fun_b_fun$ A_b_fun_b_fun_tree$ A_b_fun_b_fun_tree$ )A_b_fun_b_fun_tree$)
(declare-fun selecug$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun selecuh$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecui$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun node$m (A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecuj$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun selecuk$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecul$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun node$n (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun selecum$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selecun$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecuo$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$o (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecup$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selecuq$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecur$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$p (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecus$ (A_bool_fun_bool_fun_tree$)A_bool_fun_bool_fun$)
(declare-fun selecut$ (A_bool_fun_bool_fun_tree$)A_bool_fun_bool_fun_tree$)
(declare-fun selecuu$ (A_bool_fun_bool_fun_tree$)A_bool_fun_bool_fun_tree$)
(declare-fun node$q (A_bool_fun_bool_fun$ A_bool_fun_bool_fun_tree$ A_bool_fun_bool_fun_tree$ )A_bool_fun_bool_fun_tree$)
(declare-fun selecuv$ (A_bool_fun_bool_fun_bool_fun_tree$)A_bool_fun_bool_fun_bool_fun$)
(declare-fun selecuw$ (A_bool_fun_bool_fun_bool_fun_tree$)A_bool_fun_bool_fun_bool_fun_tree$)
(declare-fun selecux$ (A_bool_fun_bool_fun_bool_fun_tree$)A_bool_fun_bool_fun_bool_fun_tree$)
(declare-fun node$r (A_bool_fun_bool_fun_bool_fun$ A_bool_fun_bool_fun_bool_fun_tree$ A_bool_fun_bool_fun_bool_fun_tree$ )A_bool_fun_bool_fun_bool_fun_tree$)
(declare-fun selecuy$ (A_b_fun_b_fun_b_fun_tree$)A_b_fun_b_fun_b_fun$)
(declare-fun selecuz$ (A_b_fun_b_fun_b_fun_tree$)A_b_fun_b_fun_b_fun_tree$)
(declare-fun selecva$ (A_b_fun_b_fun_b_fun_tree$)A_b_fun_b_fun_b_fun_tree$)
(declare-fun node$s (A_b_fun_b_fun_b_fun$ A_b_fun_b_fun_b_fun_tree$ A_b_fun_b_fun_b_fun_tree$ )A_b_fun_b_fun_b_fun_tree$)
(declare-fun selecvb$ (B_b_fun_tree$)B_b_fun$)
(declare-fun selecvc$ (B_b_fun_tree$)B_b_fun_tree$)
(declare-fun selecvd$ (B_b_fun_tree$)B_b_fun_tree$)
(declare-fun node$t (B_b_fun$ B_b_fun_tree$ B_b_fun_tree$ )B_b_fun_tree$)
(declare-fun selecve$ (B_b_fun_b_fun_tree$)B_b_fun_b_fun$)
(declare-fun selecvf$ (B_b_fun_b_fun_tree$)B_b_fun_b_fun_tree$)
(declare-fun selecvg$ (B_b_fun_b_fun_tree$)B_b_fun_b_fun_tree$)
(declare-fun node$u (B_b_fun_b_fun$ B_b_fun_b_fun_tree$ B_b_fun_b_fun_tree$ )B_b_fun_b_fun_tree$)
(declare-fun selecvh$ (B_a_fun_tree$)B_a_fun$)
(declare-fun selecvi$ (B_a_fun_tree$)B_a_fun_tree$)
(declare-fun selecvj$ (B_a_fun_tree$)B_a_fun_tree$)
(declare-fun node$v (B_a_fun$ B_a_fun_tree$ B_a_fun_tree$ )B_a_fun_tree$)
(declare-fun selecvk$ (A_a_fun_tree$)A_a_fun$)
(declare-fun selecvl$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun selecvm$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun node$w (A_a_fun$ A_a_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$)
(declare-fun selecvn$ (A_bool_fun_b_fun_tree$)A_bool_fun_b_fun$)
(declare-fun selecvo$ (A_bool_fun_b_fun_tree$)A_bool_fun_b_fun_tree$)
(declare-fun selecvp$ (A_bool_fun_b_fun_tree$)A_bool_fun_b_fun_tree$)
(declare-fun node$x (A_bool_fun_b_fun$ A_bool_fun_b_fun_tree$ A_bool_fun_b_fun_tree$ )A_bool_fun_b_fun_tree$)
(declare-fun f$ ()A_b_fun_tree$ )
(declare-fun g$ ()A_b_fun_tree$ )
(declare-fun x$ ()A_tree$ )
(declare-fun y$ ()A_tree$ )
(declare-fun fa$ ()A_b_fun_tree$ )
(declare-fun ga$ ()A_b_fun_tree$ )
(declare-fun uu$ ()A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun ya$ ()A_tree$ )
(declare-fun uua$ (A_b_fun_a_bool_fun_fun$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun$ )
(declare-fun uub$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun uuc$ (A_bool_fun$ )A_bool_fun_bool_fun_bool_fun$ )
(declare-fun uud$ (A_b_fun$ )A_b_fun_b_fun_b_fun$ )
(declare-fun uue$ (B$ )B_b_fun_b_fun$ )
(declare-fun uuf$ (A$ )A_b_fun_b_fun$ )
(declare-fun uug$ (A$ )A_bool_fun_bool_fun$ )
(declare-fun uuh$ (A_b_fun$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ )
(declare-fun uui$ (A_b_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun uuj$ (A_b_fun_a_bool_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun uuk$ (Bool )A_bool_fun_bool_fun$ )
(declare-fun uul$ (A_bool_fun$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ )
(declare-fun uum$ (B$ )B_b_fun$ )
(declare-fun uun$ (B$ )A_b_fun_b_fun$ )
(declare-fun uuo$ (B$ )A_b_fun$ )
(declare-fun uup$ (A_bool_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun uuq$ (Bool )A_bool_fun$ )
(declare-fun uur$ (A_b_fun_a_bool_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun left$b (Bool_tree$ )Bool_tree$ )
(declare-fun left$c (A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun left$d (A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun left$e (B_b_fun_tree$ )B_b_fun_tree$ )
(declare-fun left$f (A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun left$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun left$h (B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun left$i (A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun left$j (A_bool_fun_bool_fun_tree$ )A_bool_fun_bool_fun_tree$ )
(declare-fun left$k (B_b_fun_b_fun_tree$ )B_b_fun_b_fun_tree$ )
(declare-fun left$l (A_bool_fun_b_fun_tree$ )A_bool_fun_b_fun_tree$ )
(declare-fun left$m (A_b_fun_b_fun_tree$ )A_b_fun_b_fun_tree$ )
(declare-fun node$y (Bool Bool_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun root$b (Bool_tree$ )Bool )
(declare-fun root$c (A_bool_fun_tree$ )A_bool_fun$ )
(declare-fun root$d (A_b_fun_tree$ )A_b_fun$ )
(declare-fun root$e (B_b_fun_tree$ )B_b_fun$ )
(declare-fun root$f (A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun root$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun root$h (B_a_fun_tree$ B$ )A$ )
(declare-fun root$i (A_a_fun_tree$ A$ )A$ )
(declare-fun root$j (A_bool_fun_bool_fun_tree$ )A_bool_fun_bool_fun$ )
(declare-fun root$k (B_b_fun_b_fun_tree$ B_b_fun$ )B$ )
(declare-fun root$l (A_bool_fun_b_fun_tree$ A_bool_fun$ )B$ )
(declare-fun root$m (A_b_fun_b_fun_tree$ )A_b_fun_b_fun$ )
(declare-fun right$b (A_b_fun_b_fun_tree$ )A_b_fun_b_fun_tree$ )
(declare-fun right$c (A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun right$d (B_b_fun_tree$ )B_b_fun_tree$ )
(declare-fun right$e (A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun right$f (A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun right$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun right$h (Bool_tree$ )Bool_tree$ )
(declare-fun right$i (B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun right$j (A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun right$k (A_bool_fun_bool_fun_tree$ )A_bool_fun_bool_fun_tree$ )
(declare-fun right$l (B_b_fun_b_fun_tree$ )B_b_fun_b_fun_tree$ )
(declare-fun right$m (A_bool_fun_b_fun_tree$ )A_bool_fun_b_fun_tree$ )
(declare-fun fun_app$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun tree_ap$ (A_b_fun_tree$ A_tree$ )B_tree$ )
(declare-fun fun_app$a (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun fun_app$b (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ )A_bool_fun$ )
(declare-fun fun_app$c (A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun$ )A_bool_fun$ )
(declare-fun fun_app$d (A_bool_fun_bool_fun_bool_fun$ A_bool_fun_bool_fun$ )Bool )
(declare-fun fun_app$e (A_bool_fun_bool_fun$ A_bool_fun$ )Bool )
(declare-fun fun_app$f (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun fun_app$g (A_b_fun_a_bool_fun_fun$ A_b_fun$ )A_bool_fun$ )
(declare-fun fun_app$h (A_b_fun_b_fun_b_fun$ A_b_fun_b_fun$ )B$ )
(declare-fun fun_app$i (A_b_fun_b_fun$ A_b_fun$ )B$ )
(declare-fun fun_app$j (B_b_fun_b_fun$ B_b_fun$ )B$ )
(declare-fun fun_app$k (B_b_fun$ B$ )B$ )
(declare-fun fun_app$l (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$m (A_b_fun$ A$ )B$ )
(declare-fun fun_app$n (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$o (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )Bool )
(declare-fun fun_app$p (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun fun_app$q (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun fun_app$r (Bool_b_fun$ Bool )B$ )
(declare-fun fun_app$s (Bool_a_fun$ Bool )A$ )
(declare-fun tree_ap$a (A_bool_fun_tree$ A_tree$ )Bool_tree$ )
(declare-fun tree_ap$b (A_b_fun_a_bool_fun_fun_tree$ A_b_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$c (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$d (Bool_bool_fun_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun tree_ap$e (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$f (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ Bool_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$h (Bool_b_fun_tree$ Bool_tree$ )B_tree$ )
(declare-fun tree_ap$i (Bool_a_fun_tree$ Bool_tree$ )A_tree$ )
(declare-fun tree_ap$j (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$k (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$l (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$m (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$n (A_bool_fun_bool_fun_tree$ A_bool_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$o (A_bool_fun_bool_fun_bool_fun_tree$ A_bool_fun_bool_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$p (A_b_fun_b_fun_tree$ A_b_fun_tree$ )B_tree$ )
(declare-fun tree_ap$q (A_b_fun_b_fun_b_fun_tree$ A_b_fun_b_fun_tree$ )B_tree$ )
(declare-fun tree_ap$r (B_b_fun_tree$ B_tree$ )B_tree$ )
(declare-fun tree_ap$s (B_b_fun_b_fun_tree$ B_b_fun_tree$ )B_tree$ )
(declare-fun tree_ap$t (B_a_fun_tree$ B_tree$ )A_tree$ )
(declare-fun tree_ap$u (A_a_fun_tree$ A_tree$ )A_tree$ )
(declare-fun tree_ap$v (A_bool_fun_b_fun_tree$ A_bool_fun_tree$ )B_tree$ )
(declare-fun tree_pure$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$a (Bool )Bool_tree$ )
(declare-fun tree_pure$b (A_b_fun$ )A_b_fun_tree$ )
(declare-fun tree_pure$c (A$ )A_tree$ )
(declare-fun tree_pure$d (B$ )B_tree$ )
(declare-fun tree_pure$e (A_bool_fun$ )A_bool_fun_tree$ )
(declare-fun tree_pure$f (Bool_bool_fun$ )Bool_bool_fun_tree$ )
(declare-fun tree_pure$g (A_b_fun_a_bool_fun_fun$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$h (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ )
(declare-fun tree_pure$i (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$j (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$k (Bool_b_fun$ )Bool_b_fun_tree$ )
(declare-fun tree_pure$l (Bool_a_fun$ )Bool_a_fun_tree$ )
(declare-fun tree_pure$m (A_b_fun_b_fun$ )A_b_fun_b_fun_tree$ )
(declare-fun tree_pure$n (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$o (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$p (A_bool_fun_bool_fun_bool_fun$ )A_bool_fun_bool_fun_bool_fun_tree$ )
(declare-fun tree_pure$q (A_b_fun_b_fun_b_fun$ )A_b_fun_b_fun_b_fun_tree$ )
(declare-fun tree_pure$r (B_b_fun_b_fun$ )B_b_fun_b_fun_tree$ )
(declare-fun tree_pure$s (A_bool_fun_bool_fun$ )A_bool_fun_bool_fun_tree$ )
(declare-fun tree_pure$t (A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$u (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$v (B_b_fun$ )B_b_fun_tree$ )
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ ))(! (= (fun_app$ (uub$ ?v0 )?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$ (uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ ))(! (= (fun_app$b (uua$ ?v0 )?v1 )(fun_app$c ?v1 ?v0 )):pattern ((fun_app$b (uua$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun_bool_fun$ ))(! (= (fun_app$d (uuc$ ?v0 )?v1 )(fun_app$e ?v1 ?v0 )):pattern ((fun_app$d (uuc$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(! (= (fun_app$a (uui$ ?v0 )?v1 )(fun_app$f ?v1 ?v0 )):pattern ((fun_app$a (uui$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_a_bool_fun_fun$ ))(! (= (fun_app$c (uuh$ ?v0 )?v1 )(fun_app$g ?v1 ?v0 )):pattern ((fun_app$c (uuh$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_b_fun$ ))(! (= (fun_app$h (uud$ ?v0 )?v1 )(fun_app$i ?v1 ?v0 )):pattern ((fun_app$h (uud$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ ))(! (= (fun_app$j (uue$ ?v0 )?v1 )(fun_app$k ?v1 ?v0 )):pattern ((fun_app$j (uue$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(! (= (fun_app$e (uug$ ?v0 )?v1 )(fun_app$l ?v1 ?v0 )):pattern ((fun_app$e (uug$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_fun$ ))(! (= (fun_app$i (uuf$ ?v0 )?v1 )(fun_app$m ?v1 ?v0 )):pattern ((fun_app$i (uuf$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$l (fun_app$g (fun_app$f uu$ ?v0 )?v1 )?v2 )(= (fun_app$m ?v0 ?v2 )(fun_app$m ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$g (fun_app$f uu$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 Bool )(?v1 A_bool_fun$ ))(! (= (fun_app$e (uuk$ ?v0 )?v1 )?v0 ):pattern ((fun_app$e (uuk$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 Bool )(?v1 A$ ))(! (= (fun_app$l (uuq$ ?v0 )?v1 )?v0 ):pattern ((fun_app$l (uuq$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(! (= (fun_app$a (uuj$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (uuj$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun$ ))(! (= (fun_app$f (uur$ ?v0 )?v1 )?v0 ):pattern ((fun_app$f (uur$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_b_fun_a_bool_fun_fun$ ))(! (= (fun_app$c (uul$ ?v0 )?v1 )?v0 ):pattern ((fun_app$c (uul$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_b_fun$ ))(! (= (fun_app$g (uup$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (uup$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_fun$ ))(! (= (fun_app$i (uun$ ?v0 )?v1 )?v0 ):pattern ((fun_app$i (uun$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$k (uum$ ?v0 )?v1 )?v0 ):pattern ((fun_app$k (uum$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$m (uuo$ ?v0 )?v1 )?v0 ):pattern ((fun_app$m (uuo$ ?v0 )?v1 )))):named a18 ))
(assert (! (not (and (= (root$ (tree_ap$ fa$ ya$ ))(root$ (tree_ap$ ga$ ya$ )))(and (exists ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(and (= (left$ (tree_ap$ fa$ ya$ ))(tree_ap$ ?v0 ?v2 ))(and (= (left$ (tree_ap$ ga$ ya$ ))(tree_ap$ ?v1 ?v2 ))(= (tree_ap$a (tree_ap$b (tree_ap$c (tree_pure$ uu$ )?v0 )?v1 )?v2 )(tree_pure$a true )))))(exists ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(and (= (right$ (tree_ap$ fa$ ya$ ))(tree_ap$ ?v0 ?v2 ))(and (= (right$ (tree_ap$ ga$ ya$ ))(tree_ap$ ?v1 ?v2 ))(= (tree_ap$a (tree_ap$b (tree_ap$c (tree_pure$ uu$ )?v0 )?v1 )?v2 )(tree_pure$a true )))))))):named a19 ))
(assert (! (= x$ y$ ):named a20 ))
(assert (! (= (tree_ap$a (tree_ap$b (tree_ap$c (tree_pure$ uu$ )fa$ )ga$ )ya$ )(node$y true (tree_pure$a true )(tree_pure$a true ))):named a21 ))
(assert (! (= (tree_ap$a (tree_ap$b (tree_ap$c (tree_pure$ uu$ )fa$ )ga$ )ya$ )(tree_pure$a true )):named a22 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (tree_ap$ (tree_pure$b ?v0 )(tree_pure$c ?v1 ))(tree_pure$d (fun_app$m ?v0 ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ ))(= (tree_ap$a (tree_pure$e ?v0 )(tree_pure$c ?v1 ))(tree_pure$a (fun_app$l ?v0 ?v1 )))):named a24 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool ))(= (tree_ap$d (tree_pure$f ?v0 )(tree_pure$a ?v1 ))(tree_pure$a (fun_app$n ?v0 ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$b (tree_pure$g ?v0 )(tree_pure$b ?v1 ))(tree_pure$e (fun_app$g ?v0 ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$c (tree_pure$ ?v0 )(tree_pure$b ?v1 ))(tree_pure$g (fun_app$f ?v0 ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$e (tree_pure$h ?v0 )(tree_pure$ ?v1 ))(tree_pure$a (fun_app$o ?v0 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 Bool ))(= (tree_ap$f (tree_pure$i ?v0 )(tree_pure$a ?v1 ))(tree_pure$ (fun_app$p ?v0 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$g (tree_pure$j ?v0 )(tree_pure$ ?v1 ))(tree_pure$ (fun_app$q ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 Bool ))(= (tree_ap$h (tree_pure$k ?v0 )(tree_pure$a ?v1 ))(tree_pure$d (fun_app$r ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool ))(= (tree_ap$i (tree_pure$l ?v0 )(tree_pure$a ?v1 ))(tree_pure$c (fun_app$s ?v0 ?v1 )))):named a32 ))
(assert (! (= (tree_ap$a (tree_ap$b (tree_ap$c (tree_pure$ uu$ )f$ )g$ )y$ )(tree_pure$a true )):named a33 ))
(assert (! (forall ((?v0 A_b_fun_b_fun$ )(?v1 A_b_fun_b_fun$ ))(= (= (tree_pure$m ?v0 )(tree_pure$m ?v1 ))(= ?v0 ?v1 ))):named a34 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (= (tree_pure$e ?v0 )(tree_pure$e ?v1 ))(= ?v0 ?v1 ))):named a35 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a36 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tree_pure$d ?v0 )(tree_pure$d ?v1 ))(= ?v0 ?v1 ))):named a37 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (tree_pure$c ?v0 )(tree_pure$c ?v1 ))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a39 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a40 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun$ ))(= (tree_ap$j ?v0 (tree_pure$g ?v1 ))(tree_ap$k (tree_pure$n (uua$ ?v1 ))?v0 ))):named a41 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$l ?v0 (tree_pure$ ?v1 ))(tree_ap$m (tree_pure$o (uub$ ?v1 ))?v0 ))):named a42 ))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$ )(?v1 A_bool_fun$ ))(= (tree_ap$n ?v0 (tree_pure$e ?v1 ))(tree_ap$o (tree_pure$p (uuc$ ?v1 ))?v0 ))):named a43 ))
(assert (! (forall ((?v0 A_b_fun_b_fun_tree$ )(?v1 A_b_fun$ ))(= (tree_ap$p ?v0 (tree_pure$b ?v1 ))(tree_ap$q (tree_pure$q (uud$ ?v1 ))?v0 ))):named a44 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B$ ))(= (tree_ap$r ?v0 (tree_pure$d ?v1 ))(tree_ap$s (tree_pure$r (uue$ ?v1 ))?v0 ))):named a45 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A$ ))(= (tree_ap$ ?v0 (tree_pure$c ?v1 ))(tree_ap$p (tree_pure$m (uuf$ ?v1 ))?v0 ))):named a46 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A$ ))(= (tree_ap$a ?v0 (tree_pure$c ?v1 ))(tree_ap$n (tree_pure$s (uug$ ?v1 ))?v0 ))):named a47 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun$ ))(= (tree_ap$b ?v0 (tree_pure$b ?v1 ))(tree_ap$j (tree_pure$t (uuh$ ?v1 ))?v0 ))):named a48 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun$ ))(= (tree_ap$c ?v0 (tree_pure$b ?v1 ))(tree_ap$l (tree_pure$u (uui$ ?v1 ))?v0 ))):named a49 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_tree$ ))(= (left$b (tree_ap$a ?v0 ?v1 ))(tree_ap$a (left$c ?v0 )(left$a ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_tree$ ))(= (left$ (tree_ap$ ?v0 ?v1 ))(tree_ap$ (left$d ?v0 )(left$a ?v1 )))):named a51 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B_tree$ ))(= (left$ (tree_ap$r ?v0 ?v1 ))(tree_ap$r (left$e ?v0 )(left$ ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (left$c (tree_ap$b ?v0 ?v1 ))(tree_ap$b (left$f ?v0 )(left$d ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (left$f (tree_ap$c ?v0 ?v1 ))(tree_ap$c (left$g ?v0 )(left$d ?v1 )))):named a54 ))
(assert (! (forall ((?v0 B_a_fun_tree$ )(?v1 B_tree$ ))(= (left$a (tree_ap$t ?v0 ?v1 ))(tree_ap$t (left$h ?v0 )(left$ ?v1 )))):named a55 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (left$a (tree_ap$u ?v0 ?v1 ))(tree_ap$u (left$i ?v0 )(left$a ?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(= (left$b (tree_ap$n ?v0 ?v1 ))(tree_ap$n (left$j ?v0 )(left$c ?v1 )))):named a57 ))
(assert (! (forall ((?v0 B_b_fun_b_fun_tree$ )(?v1 B_b_fun_tree$ ))(= (left$ (tree_ap$s ?v0 ?v1 ))(tree_ap$s (left$k ?v0 )(left$e ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_bool_fun_b_fun_tree$ )(?v1 A_bool_fun_tree$ ))(= (left$ (tree_ap$v ?v0 ?v1 ))(tree_ap$v (left$l ?v0 )(left$c ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_tree$ ))(= (root$b (tree_ap$a ?v0 ?v1 ))(fun_app$l (root$c ?v0 )(root$a ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_tree$ ))(= (root$ (tree_ap$ ?v0 ?v1 ))(fun_app$m (root$d ?v0 )(root$a ?v1 )))):named a61 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B_tree$ ))(= (root$ (tree_ap$r ?v0 ?v1 ))(fun_app$k (root$e ?v0 )(root$ ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (root$c (tree_ap$b ?v0 ?v1 ))(fun_app$g (root$f ?v0 )(root$d ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (root$f (tree_ap$c ?v0 ?v1 ))(fun_app$f (root$g ?v0 )(root$d ?v1 )))):named a64 ))
(assert (! (forall ((?v0 B_a_fun_tree$ )(?v1 B_tree$ ))(= (root$a (tree_ap$t ?v0 ?v1 ))(root$h ?v0 (root$ ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (root$a (tree_ap$u ?v0 ?v1 ))(root$i ?v0 (root$a ?v1 )))):named a66 ))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(= (root$b (tree_ap$n ?v0 ?v1 ))(fun_app$e (root$j ?v0 )(root$c ?v1 )))):named a67 ))
(assert (! (forall ((?v0 B_b_fun_b_fun_tree$ )(?v1 B_b_fun_tree$ ))(= (root$ (tree_ap$s ?v0 ?v1 ))(root$k ?v0 (root$e ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_bool_fun_b_fun_tree$ )(?v1 A_bool_fun_tree$ ))(= (root$ (tree_ap$v ?v0 ?v1 ))(root$l ?v0 (root$c ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(= (tree_ap$l (tree_pure$u (uuj$ ?v0 ))?v1 )(tree_pure$g ?v0 ))):named a70 ))
(assert (! (forall ((?v0 Bool )(?v1 A_bool_fun_tree$ ))(= (tree_ap$n (tree_pure$s (uuk$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a71 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ ))(= (tree_ap$j (tree_pure$t (uul$ ?v0 ))?v1 )(tree_pure$e ?v0 ))):named a72 ))
(assert (! (forall ((?v0 B$ )(?v1 B_tree$ ))(= (tree_ap$r (tree_pure$v (uum$ ?v0 ))?v1 )(tree_pure$d ?v0 ))):named a73 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$p (tree_pure$m (uun$ ?v0 ))?v1 )(tree_pure$d ?v0 ))):named a74 ))
(assert (! (forall ((?v0 B$ )(?v1 A_tree$ ))(= (tree_ap$ (tree_pure$b (uuo$ ?v0 ))?v1 )(tree_pure$d ?v0 ))):named a75 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$b (tree_pure$g (uup$ ?v0 ))?v1 )(tree_pure$e ?v0 ))):named a76 ))
(assert (! (forall ((?v0 Bool )(?v1 A_tree$ ))(= (tree_ap$a (tree_pure$e (uuq$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a77 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$c (tree_pure$ (uur$ ?v0 ))?v1 )(tree_pure$g ?v0 ))):named a78 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ ))(= (left$f (tree_pure$g ?v0 ))(tree_pure$g ?v0 ))):named a79 ))
(assert (! (forall ((?v0 B_b_fun$ ))(= (left$e (tree_pure$v ?v0 ))(tree_pure$v ?v0 ))):named a80 ))
(assert (! (forall ((?v0 A_b_fun_b_fun$ ))(= (left$m (tree_pure$m ?v0 ))(tree_pure$m ?v0 ))):named a81 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (left$c (tree_pure$e ?v0 ))(tree_pure$e ?v0 ))):named a82 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (left$d (tree_pure$b ?v0 ))(tree_pure$b ?v0 ))):named a83 ))
(assert (! (forall ((?v0 A$ ))(= (left$a (tree_pure$c ?v0 ))(tree_pure$c ?v0 ))):named a84 ))
(assert (! (forall ((?v0 B$ ))(= (left$ (tree_pure$d ?v0 ))(tree_pure$d ?v0 ))):named a85 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (left$g (tree_pure$ ?v0 ))(tree_pure$ ?v0 ))):named a86 ))
(assert (! (forall ((?v0 Bool ))(= (left$b (tree_pure$a ?v0 ))(tree_pure$a ?v0 ))):named a87 ))
(assert (! (forall ((?v0 A_b_fun_b_fun$ ))(= (right$b (tree_pure$m ?v0 ))(tree_pure$m ?v0 ))):named a88 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ ))(= (right$c (tree_pure$g ?v0 ))(tree_pure$g ?v0 ))):named a89 ))
(assert (! (forall ((?v0 B_b_fun$ ))(= (right$d (tree_pure$v ?v0 ))(tree_pure$v ?v0 ))):named a90 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (right$e (tree_pure$e ?v0 ))(tree_pure$e ?v0 ))):named a91 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (right$f (tree_pure$b ?v0 ))(tree_pure$b ?v0 ))):named a92 ))
(assert (! (forall ((?v0 A$ ))(= (right$a (tree_pure$c ?v0 ))(tree_pure$c ?v0 ))):named a93 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (right$g (tree_pure$ ?v0 ))(tree_pure$ ?v0 ))):named a94 ))
(assert (! (forall ((?v0 Bool ))(= (right$h (tree_pure$a ?v0 ))(tree_pure$a ?v0 ))):named a95 ))
(assert (! (forall ((?v0 B$ ))(= (right$ (tree_pure$d ?v0 ))(tree_pure$d ?v0 ))):named a96 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_tree$ ))(= (right$h (tree_ap$a ?v0 ?v1 ))(tree_ap$a (right$e ?v0 )(right$a ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_tree$ ))(= (right$ (tree_ap$ ?v0 ?v1 ))(tree_ap$ (right$f ?v0 )(right$a ?v1 )))):named a98 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B_tree$ ))(= (right$ (tree_ap$r ?v0 ?v1 ))(tree_ap$r (right$d ?v0 )(right$ ?v1 )))):named a99 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (right$e (tree_ap$b ?v0 ?v1 ))(tree_ap$b (right$c ?v0 )(right$f ?v1 )))):named a100 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (right$c (tree_ap$c ?v0 ?v1 ))(tree_ap$c (right$g ?v0 )(right$f ?v1 )))):named a101 ))
(assert (! (forall ((?v0 B_a_fun_tree$ )(?v1 B_tree$ ))(= (right$a (tree_ap$t ?v0 ?v1 ))(tree_ap$t (right$i ?v0 )(right$ ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (right$a (tree_ap$u ?v0 ?v1 ))(tree_ap$u (right$j ?v0 )(right$a ?v1 )))):named a103 ))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(= (right$h (tree_ap$n ?v0 ?v1 ))(tree_ap$n (right$k ?v0 )(right$e ?v1 )))):named a104 ))
(assert (! (forall ((?v0 B_b_fun_b_fun_tree$ )(?v1 B_b_fun_tree$ ))(= (right$ (tree_ap$s ?v0 ?v1 ))(tree_ap$s (right$l ?v0 )(right$d ?v1 )))):named a105 ))
(assert (! (forall ((?v0 A_bool_fun_b_fun_tree$ )(?v1 A_bool_fun_tree$ ))(= (right$ (tree_ap$v ?v0 ?v1 ))(tree_ap$v (right$m ?v0 )(right$e ?v1 )))):named a106 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ ))(= (root$f (tree_pure$g ?v0 ))?v0 )):named a107 ))
(assert (! (forall ((?v0 B_b_fun$ ))(= (root$e (tree_pure$v ?v0 ))?v0 )):named a108 ))
(assert (! (forall ((?v0 A_b_fun_b_fun$ ))(= (root$m (tree_pure$m ?v0 ))?v0 )):named a109 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (root$c (tree_pure$e ?v0 ))?v0 )):named a110 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (root$d (tree_pure$b ?v0 ))?v0 )):named a111 ))
(assert (! (forall ((?v0 A$ ))(= (root$a (tree_pure$c ?v0 ))?v0 )):named a112 ))
(assert (! (forall ((?v0 B$ ))(= (root$ (tree_pure$d ?v0 ))?v0 )):named a113 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (root$g (tree_pure$ ?v0 ))?v0 )):named a114 ))
(assert (! (forall ((?v0 Bool ))(= (root$b (tree_pure$a ?v0 ))?v0 )):named a115 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_a_bool_fun_fun$ ))(= (tree_ap$j ?v0 (tree_pure$g ?v2 ))(tree_ap$j ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a116 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$l ?v0 (tree_pure$ ?v2 ))(tree_ap$l ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a117 ))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$ )(?v1 A_bool_fun_bool_fun_tree$ ))(=> (forall ((?v2 A_bool_fun$ ))(= (tree_ap$n ?v0 (tree_pure$e ?v2 ))(tree_ap$n ?v1 (tree_pure$e ?v2 ))))(= ?v0 ?v1 ))):named a118 ))
(assert (! (forall ((?v0 A_b_fun_b_fun_tree$ )(?v1 A_b_fun_b_fun_tree$ ))(=> (forall ((?v2 A_b_fun$ ))(= (tree_ap$p ?v0 (tree_pure$b ?v2 ))(tree_ap$p ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a119 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B_b_fun_tree$ ))(=> (forall ((?v2 B$ ))(= (tree_ap$r ?v0 (tree_pure$d ?v2 ))(tree_ap$r ?v1 (tree_pure$d ?v2 ))))(= ?v0 ?v1 ))):named a120 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$ ?v0 (tree_pure$c ?v2 ))(tree_ap$ ?v1 (tree_pure$c ?v2 ))))(= ?v0 ?v1 ))):named a121 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$a ?v0 (tree_pure$c ?v2 ))(tree_ap$a ?v1 (tree_pure$c ?v2 ))))(= ?v0 ?v1 ))):named a122 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun$ ))(= (tree_ap$b ?v0 (tree_pure$b ?v2 ))(tree_ap$b ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a123 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun$ ))(= (tree_ap$c ?v0 (tree_pure$b ?v2 ))(tree_ap$c ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a124 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(= (tree_ap$l ?v0 ?v2 )(tree_ap$l ?v1 ?v2 )))(= ?v0 ?v1 ))):named a125 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_a_bool_fun_fun_tree$ ))(= (tree_ap$j ?v0 ?v2 )(tree_ap$j ?v1 ?v2 )))(= ?v0 ?v1 ))):named a126 ))
(assert (! (forall ((?v0 A_bool_fun_bool_fun_tree$ )(?v1 A_bool_fun_bool_fun_tree$ ))(=> (forall ((?v2 A_bool_fun_tree$ ))(= (tree_ap$n ?v0 ?v2 )(tree_ap$n ?v1 ?v2 )))(= ?v0 ?v1 ))):named a127 ))
(assert (! (forall ((?v0 A_b_fun_b_fun_tree$ )(?v1 A_b_fun_b_fun_tree$ ))(=> (forall ((?v2 A_b_fun_tree$ ))(= (tree_ap$p ?v0 ?v2 )(tree_ap$p ?v1 ?v2 )))(= ?v0 ?v1 ))):named a128 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B_b_fun_tree$ ))(=> (forall ((?v2 B_tree$ ))(= (tree_ap$r ?v0 ?v2 )(tree_ap$r ?v1 ?v2 )))(= ?v0 ?v1 ))):named a129 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$ ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))(= ?v0 ?v1 ))):named a130 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$a ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))(= ?v0 ?v1 ))):named a131 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_tree$ ))(= (tree_ap$b ?v0 ?v2 )(tree_ap$b ?v1 ?v2 )))(= ?v0 ?v1 ))):named a132 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_tree$ ))(= (tree_ap$c ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))(= ?v0 ?v1 ))):named a133 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(=> (= ?v0 (tree_pure$ ?v1 ))(and (= (root$g ?v0 )?v1 )(and (= (left$g ?v0 )(tree_pure$ ?v1 ))(= (right$g ?v0 )(tree_pure$ ?v1 )))))):named a134 ))
(assert (! (forall ((?v0 Bool_tree$ )(?v1 Bool ))(=> (= ?v0 (tree_pure$a ?v1 ))(and (= (root$b ?v0 )?v1 )(and (= (left$b ?v0 )(tree_pure$a ?v1 ))(= (right$h ?v0 )(tree_pure$a ?v1 )))))):named a135 ))
(assert (! (forall ((?v0 B_tree$ )(?v1 B$ ))(=> (= ?v0 (tree_pure$d ?v1 ))(and (= (root$ ?v0 )?v1 )(and (= (left$ ?v0 )(tree_pure$d ?v1 ))(= (right$ ?v0 )(tree_pure$d ?v1 )))))):named a136 ))
(check-sat )
;(get-unsat-core )
