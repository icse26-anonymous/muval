;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Int_set$ 0 )
(declare-sort Int_int_fun$ 0 )
(declare-sort Int_tree$ 0)
(declare-fun root$ (Int_tree$)Int)
(declare-fun left$ (Int_tree$)Int_tree$)
(declare-fun right$ (Int_tree$)Int_tree$)
(declare-fun node$ (Int Int_tree$ Int_tree$ )Int_tree$)
(declare-fun num$ ()Int_tree$ )
(declare-fun member$ (Int Int_set$ )Bool )
(declare-fun fun_app$ (Int_int_fun$ Int )Int )
(declare-fun map_tree$ (Int_int_fun$ Int_tree$ )Int_tree$ )
(declare-fun set_tree$ (Int_tree$ )Int_set$ )
(declare-fun tree_pure$ (Int )Int_tree$ )
(declare-fun tree_iterate$ (Int_int_fun$ Int_int_fun$ Int )Int_tree$ )
(assert (! (not (= (root$ num$ )1 )):named a0 ))
(assert (! (= 1 1 ):named a1 ))
(assert (! (forall ((?v0 Int ))(= (= 1 ?v0 )(= ?v0 1 ))):named a2 ))
(assert (! (forall ((?v0 Int_int_fun$ )(?v1 Int_int_fun$ )(?v2 Int ))(= (root$ (tree_iterate$ ?v0 ?v1 ?v2 ))?v2 )):named a3 ))
(assert (! (forall ((?v0 Int ))(= (root$ (tree_pure$ ?v0 ))?v0 )):named a4 ))
(assert (! (forall ((?v0 Int_int_fun$ )(?v1 Int_tree$ ))(= (root$ (map_tree$ ?v0 ?v1 ))(fun_app$ ?v0 (root$ ?v1 )))):named a5 ))
(assert (! (forall ((?v0 Int_int_fun$ )(?v1 Int_tree$ ))(= (root$ (map_tree$ ?v0 ?v1 ))(fun_app$ ?v0 (root$ ?v1 )))):named a6 ))
(assert (! (forall ((?v0 Int_tree$ ))(member$ (root$ ?v0 )(set_tree$ ?v0 ))):named a7 ))
(assert (! (forall ((?v0 Int_int_fun$ )(?v1 Int ))(= (map_tree$ ?v0 (tree_pure$ ?v1 ))(tree_pure$ (fun_app$ ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 Int )(?v1 Int ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_tree$ )(?v2 Int_int_fun$ )(?v3 Int_int_fun$ ))(=> (and (forall ((?v4 Int )(?v5 Int ))(=> (and (member$ ?v4 (set_tree$ ?v0 ))(and (member$ ?v5 (set_tree$ ?v1 ))(= (fun_app$ ?v2 ?v4 )(fun_app$ ?v3 ?v5 ))))(= ?v4 ?v5 )))(= (map_tree$ ?v2 ?v0 )(map_tree$ ?v3 ?v1 )))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 Int_tree$ )(?v1 Int_int_fun$ )(?v2 Int_int_fun$ ))(=> (forall ((?v3 Int ))(=> (member$ ?v3 (set_tree$ ?v0 ))(= (fun_app$ ?v1 ?v3 )(fun_app$ ?v2 ?v3 ))))(= (map_tree$ ?v1 ?v0 )(map_tree$ ?v2 ?v0 )))):named a11 ))
(check-sat )
;(get-unsat-core )
