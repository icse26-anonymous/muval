;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_a_fun_set$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_a_a_fun_fun_set$ 0 )
(declare-sort A_a_fun_a_fun_set$ 0 )
(declare-sort A_a_fun_stream_set$ 0 )
(declare-sort A_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_a_fun_a_stream_fun$ 0 )
(declare-sort A_a_fun_stream_a_fun$ 0 )
(declare-sort A_a_stream_a_fun_fun$ 0 )
(declare-sort A_stream_a_a_fun_fun$ 0 )
(declare-sort A_a_stream_stream_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_stream_stream_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_set$ 0 )
(declare-sort A_a_a_fun_fun_stream_set$ 0 )
(declare-sort A_a_fun_a_fun_stream_set$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_stream_stream_set$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_stream_stream_a_stream_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_stream_set$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_a_fun_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-sort Num$ 0)
(declare-fun one$ ()Num$)
(declare-fun select$ (Num$)Num$)
(declare-fun bit0$ (Num$ )Num$)
(declare-fun selecta$ (Num$)Num$)
(declare-fun bit1$ (Num$ )Num$)
(declare-sort A_a_fun_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_a_fun_a_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_fun_stream$ 0)
(declare-sort A_stream_a_fun_stream$ 0)
(declare-sort A_a_stream_fun_stream$ 0)
(declare-sort A_stream_a_stream_fun_stream$ 0)
(declare-sort A_stream_a_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_stream_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_a_fun_stream$ 0)
(declare-sort A_stream_tree$ 0)
(declare-sort A_stream_tree_tree$ 0)
(declare-sort A_stream_tree_tree_tree$ 0)
(declare-sort A_tree$ 0)
(declare-sort A_tree_tree$ 0)
(declare-sort A_tree_tree_tree$ 0)
(declare-sort A_a_fun_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-fun selectb$ (A_a_fun_stream$)A_a_fun$)
(declare-fun selectc$ (A_a_fun_stream$)A_a_fun_stream$)
(declare-fun sCons$a (A_a_fun$ A_a_fun_stream$ )A_a_fun_stream$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$b (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun selectd$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun$)
(declare-fun selecte$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun_stream$)
(declare-fun sCons$c (A_a_fun_a_fun$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$)
(declare-fun selectf$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun$)
(declare-fun selectg$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun_stream$)
(declare-fun sCons$d (A_a_a_fun_fun$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$)
(declare-fun selecth$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun$)
(declare-fun selecti$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun_stream$)
(declare-fun sCons$e (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$)
(declare-fun selectj$ (A_stream_a_fun_stream$)A_stream_a_fun$)
(declare-fun selectk$ (A_stream_a_fun_stream$)A_stream_a_fun_stream$)
(declare-fun sCons$f (A_stream_a_fun$ A_stream_a_fun_stream$ )A_stream_a_fun_stream$)
(declare-fun selectl$ (A_a_stream_fun_stream$)A_a_stream_fun$)
(declare-fun selectm$ (A_a_stream_fun_stream$)A_a_stream_fun_stream$)
(declare-fun sCons$g (A_a_stream_fun$ A_a_stream_fun_stream$ )A_a_stream_fun_stream$)
(declare-fun selectn$ (A_stream_a_stream_fun_stream$)A_stream_a_stream_fun$)
(declare-fun selecto$ (A_stream_a_stream_fun_stream$)A_stream_a_stream_fun_stream$)
(declare-fun sCons$h (A_stream_a_stream_fun$ A_stream_a_stream_fun_stream$ )A_stream_a_stream_fun_stream$)
(declare-fun selectp$ (A_stream_a_a_fun_fun_stream$)A_stream_a_a_fun_fun$)
(declare-fun selectq$ (A_stream_a_a_fun_fun_stream$)A_stream_a_a_fun_fun_stream$)
(declare-fun sCons$i (A_stream_a_a_fun_fun$ A_stream_a_a_fun_fun_stream$ )A_stream_a_a_fun_fun_stream$)
(declare-fun selectr$ (A_a_fun_a_stream_fun_stream$)A_a_fun_a_stream_fun$)
(declare-fun selects$ (A_a_fun_a_stream_fun_stream$)A_a_fun_a_stream_fun_stream$)
(declare-fun sCons$j (A_a_fun_a_stream_fun$ A_a_fun_a_stream_fun_stream$ )A_a_fun_a_stream_fun_stream$)
(declare-fun selectt$ (A_a_a_fun_fun_a_fun_stream$)A_a_a_fun_fun_a_fun$)
(declare-fun selectu$ (A_a_a_fun_fun_a_fun_stream$)A_a_a_fun_fun_a_fun_stream$)
(declare-fun sCons$k (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun_a_fun_stream$ )A_a_a_fun_fun_a_fun_stream$)
(declare-fun root$ (A_stream_tree$)A_stream$)
(declare-fun left$ (A_stream_tree$)A_stream_tree$)
(declare-fun right$ (A_stream_tree$)A_stream_tree$)
(declare-fun node$ (A_stream$ A_stream_tree$ A_stream_tree$ )A_stream_tree$)
(declare-fun root$a (A_stream_tree_tree$)A_stream_tree$)
(declare-fun left$a (A_stream_tree_tree$)A_stream_tree_tree$)
(declare-fun right$a (A_stream_tree_tree$)A_stream_tree_tree$)
(declare-fun node$a (A_stream_tree$ A_stream_tree_tree$ A_stream_tree_tree$ )A_stream_tree_tree$)
(declare-fun root$b (A_stream_tree_tree_tree$)A_stream_tree_tree$)
(declare-fun left$b (A_stream_tree_tree_tree$)A_stream_tree_tree_tree$)
(declare-fun right$b (A_stream_tree_tree_tree$)A_stream_tree_tree_tree$)
(declare-fun node$b (A_stream_tree_tree$ A_stream_tree_tree_tree$ A_stream_tree_tree_tree$ )A_stream_tree_tree_tree$)
(declare-fun root$c (A_tree$)A$)
(declare-fun left$c (A_tree$)A_tree$)
(declare-fun right$c (A_tree$)A_tree$)
(declare-fun node$c (A$ A_tree$ A_tree$ )A_tree$)
(declare-fun root$d (A_tree_tree$)A_tree$)
(declare-fun left$d (A_tree_tree$)A_tree_tree$)
(declare-fun right$d (A_tree_tree$)A_tree_tree$)
(declare-fun node$d (A_tree$ A_tree_tree$ A_tree_tree$ )A_tree_tree$)
(declare-fun root$e (A_tree_tree_tree$)A_tree_tree$)
(declare-fun left$e (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun right$e (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun node$e (A_tree_tree$ A_tree_tree_tree$ A_tree_tree_tree$ )A_tree_tree_tree$)
(declare-fun shd$b (A_a_fun_stream_stream$)A_a_fun_stream$)
(declare-fun stl$b (A_a_fun_stream_stream$)A_a_fun_stream_stream$)
(declare-fun sCons$l (A_a_fun_stream$ A_a_fun_stream_stream$ )A_a_fun_stream_stream$)
(declare-fun shd$c (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$c (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$m (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun n$ ()Num$ )
(declare-fun shd$d (A_a_fun_stream$ )A_a_fun$ )
(declare-fun shd$e (A_a_fun_a_fun_stream$ )A_a_fun_a_fun$ )
(declare-fun shd$f (A_a_a_fun_fun_stream$ )A_a_a_fun_fun$ )
(declare-fun shd$g (A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun$ )
(declare-fun shd$h (A_stream_a_fun_stream$ )A_stream_a_fun$ )
(declare-fun shd$i (A_a_stream_fun_stream$ )A_a_stream_fun$ )
(declare-fun shd$j (A_stream_a_stream_fun_stream$ )A_stream_a_stream_fun$ )
(declare-fun shd$k (A_stream_a_a_fun_fun_stream$ )A_stream_a_a_fun_fun$ )
(declare-fun shd$l (A_a_fun_a_stream_fun_stream$ )A_a_fun_a_stream_fun$ )
(declare-fun shd$m (A_a_a_fun_fun_a_fun_stream$ )A_a_a_fun_fun_a_fun$ )
(declare-fun smap$ (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun stl$d (A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun stl$e (A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun stl$f (A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun stl$g (A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun sdrop$ (Nat$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap$a (A_a_fun_a_fun$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap$b (A_a_a_fun_fun$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap$c (A_a_fun_a_a_fun_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap$d (A_stream_a_fun$ )A_stream_stream_a_stream_fun$ )
(declare-fun smap$e (A_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun smap$f (A_stream_a_stream_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun smap$g (A_stream_a_a_fun_fun$ A_stream_stream$ )A_a_fun_stream$ )
(declare-fun smap$h (A_a_fun_a_stream_fun$ A_a_fun_stream$ )A_stream_stream$ )
(declare-fun smap$i (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun_stream$ )A_stream$ )
(declare-fun smap$j (A_stream_stream_a_fun$ A_stream_stream_stream$ )A_stream$ )
(declare-fun smap$k (A_a_stream_stream_fun$ A_stream$ )A_stream_stream_stream$ )
(declare-fun smap$l (A_a_fun_stream_a_fun$ A_a_fun_stream_stream$ )A_stream$ )
(declare-fun smap$m (A_stream_stream_a_stream_fun$ A_stream_stream_stream$ )A_stream_stream$ )
(declare-fun smap2$ (A_a_a_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun st_ap$ (A_a_fun_stream$ )A_stream_a_stream_fun$ )
(declare-fun member$ (A_a_fun_stream_stream$ A_a_fun_stream_stream_set$ )Bool )
(declare-fun sdrop$a (Nat$ )A_stream_a_stream_fun$ )
(declare-fun smap2$a (A_a_a_fun_a_fun_fun$ A_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap2$b (A_a_fun_a_a_fun_fun$ )A_a_fun_stream_a_stream_a_stream_fun_fun$ )
(declare-fun smap2$c (A_a_a_a_fun_fun_fun$ A_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap2$d (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap2$e (A_a_a_fun_a_a_fun_fun_fun$ A_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap2$f (A_a_fun_a_a_a_fun_fun_fun$ A_a_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap2$g (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap2$h (A_a_stream_a_fun_fun$ )A_stream_a_stream_stream_a_stream_fun_fun$ )
(declare-fun smap2$i (A_stream_a_a_fun_fun$ )A_stream_stream_a_stream_a_stream_fun_fun$ )
(declare-fun st_ap$a (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$b (A_a_a_fun_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$c (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$d (A_stream_a_fun_stream$ )A_stream_stream_a_stream_fun$ )
(declare-fun st_ap$e (A_a_stream_fun_stream$ A_stream$ )A_stream_stream$ )
(declare-fun st_ap$f (A_stream_a_stream_fun_stream$ A_stream_stream$ )A_stream_stream$ )
(declare-fun st_ap$g (A_stream_a_a_fun_fun_stream$ A_stream_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$h (A_a_fun_a_stream_fun_stream$ A_a_fun_stream$ )A_stream_stream$ )
(declare-fun st_ap$i (A_a_a_fun_fun_a_fun_stream$ A_a_a_fun_fun_stream$ )A_stream$ )
(declare-fun fun_app$ (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun member$a (A_a_fun_stream$ A_a_fun_stream_set$ )Bool )
(declare-fun member$b (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun member$c (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$d (A_a_fun_a_a_fun_fun_stream$ A_a_fun_a_a_fun_fun_stream_set$ )Bool )
(declare-fun member$e (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_set$ )Bool )
(declare-fun member$f (A_a_a_fun_fun_stream$ A_a_a_fun_fun_stream_set$ )Bool )
(declare-fun member$g (A_a_a_fun_fun$ A_a_a_fun_fun_set$ )Bool )
(declare-fun member$h (A_a_fun_a_fun_stream$ A_a_fun_a_fun_stream_set$ )Bool )
(declare-fun member$i (A_a_fun_a_fun$ A_a_fun_a_fun_set$ )Bool )
(declare-fun member$j (A_stream$ A_stream_set$ )Bool )
(declare-fun member$k (A_a_fun$ A_a_fun_set$ )Bool )
(declare-fun member$l (A$ A_set$ )Bool )
(declare-fun numeral$ (Num$ )A_stream$ )
(declare-fun streams$ (A_a_fun_stream_set$ )A_a_fun_stream_stream_set$ )
(declare-fun fun_app$a (A_stream_a_stream_a_stream_fun_fun$ A_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$b (A_a_fun$ A$ )A$ )
(declare-fun fun_app$c (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$d (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$e (A_a_a_fun_a_fun_fun$ A$ )A_a_fun_a_fun$ )
(declare-fun fun_app$f (A_a_fun_stream_a_stream_a_stream_fun_fun$ A_a_fun_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$g (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$h (A_a_a_a_fun_fun_fun$ A$ )A_a_a_fun_fun$ )
(declare-fun fun_app$i (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun$ )A_a_fun_a_fun$ )
(declare-fun fun_app$j (A_a_a_fun_a_a_fun_fun_fun$ A$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$k (A_a_fun_a_a_a_fun_fun_fun$ A_a_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$l (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$m (A_stream_stream_a_stream_fun$ A_stream_stream$ )A_stream$ )
(declare-fun fun_app$n (A_stream_a_stream_stream_a_stream_fun_fun$ A_stream$ )A_stream_stream_a_stream_fun$ )
(declare-fun fun_app$o (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$p (A_a_stream_a_fun_fun$ A$ )A_stream_a_fun$ )
(declare-fun fun_app$q (A_stream_stream_a_stream_a_stream_fun_fun$ A_stream_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$r (A_stream_a_a_fun_fun$ A_stream$ )A_a_fun$ )
(declare-fun fun_app$s (A_a_stream_fun$ A$ )A_stream$ )
(declare-fun fun_app$t (A_a_fun_a_stream_fun$ A_a_fun$ )A_stream$ )
(declare-fun fun_app$u (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun$ )A$ )
(declare-fun fun_app$v (A_stream_stream_a_fun$ A_stream_stream$ )A$ )
(declare-fun fun_app$w (A_a_stream_stream_fun$ A$ )A_stream_stream$ )
(declare-fun fun_app$x (A_a_fun_stream_a_fun$ A_a_fun_stream$ )A$ )
(declare-fun numeral$a (Num$ )A$ )
(declare-fun numeral$b (Num$ )A_stream_tree_tree_tree$ )
(declare-fun numeral$c (Num$ )A_stream_tree_tree$ )
(declare-fun numeral$d (Num$ )A_tree_tree_tree$ )
(declare-fun numeral$e (Num$ )A_tree_tree$ )
(declare-fun numeral$f (Num$ )A_tree$ )
(declare-fun numeral$g (Num$ )A_stream_tree$ )
(declare-fun streams$a (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun streams$b (A_a_fun_a_a_fun_fun_set$ )A_a_fun_a_a_fun_fun_stream_set$ )
(declare-fun streams$c (A_a_a_fun_fun_set$ )A_a_a_fun_fun_stream_set$ )
(declare-fun streams$d (A_a_fun_a_fun_set$ )A_a_fun_a_fun_stream_set$ )
(declare-fun streams$e (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$f (A_a_fun_set$ )A_a_fun_stream_set$ )
(declare-fun streams$g (A_set$ )A_stream_set$ )
(declare-fun szip_with$ (A_a_a_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun szip_with$a (A_a_a_fun_a_fun_fun$ A_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun szip_with$b (A_a_fun_a_a_fun_fun$ )A_a_fun_stream_a_stream_a_stream_fun_fun$ )
(declare-fun szip_with$c (A_a_a_a_fun_fun_fun$ A_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$d (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun szip_with$e (A_a_a_fun_a_a_fun_fun_fun$ A_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$f (A_a_fun_a_a_a_fun_fun_fun$ A_a_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$g (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$h (A_a_stream_a_fun_fun$ )A_stream_a_stream_stream_a_stream_fun_fun$ )
(declare-fun szip_with$i (A_stream_a_a_fun_fun$ )A_stream_stream_a_stream_a_stream_fun_fun$ )
(declare-fun sinterleave$ (A_a_fun_a_a_fun_fun_stream$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun sinterleave$a (A_a_a_fun_fun_stream$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun sinterleave$b (A_a_fun_a_fun_stream$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun sinterleave$c (A_stream_stream$ A_stream_stream$ )A_stream_stream$ )
(declare-fun sinterleave$d (A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun sinterleave$e (A_stream$ )A_stream_a_stream_fun$ )
(assert (! (not (= (shd$ (numeral$ n$ ))(numeral$a n$ ))):named a0 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$a (szip_with$ ?v0 )?v1 )?v2 ))(fun_app$b (fun_app$c ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a1 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (szip_with$a ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$e ?v0 (shd$ ?v1 ))(shd$d ?v2 )))):named a2 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$f (szip_with$b ?v0 )?v1 )?v2 ))(fun_app$b (fun_app$g ?v0 (shd$d ?v1 ))(shd$ ?v2 )))):named a3 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$d (szip_with$c ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$h ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (szip_with$d ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$i ?v0 (shd$d ?v1 ))(shd$d ?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$d (szip_with$e ?v0 ?v1 ?v2 ))(fun_app$g (fun_app$j ?v0 (shd$ ?v1 ))(shd$d ?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_a_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$d (szip_with$f ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$k ?v0 (shd$d ?v1 ))(shd$ ?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$d (szip_with$g ?v0 ?v1 ?v2 ))(fun_app$g (fun_app$l ?v0 (shd$d ?v1 ))(shd$d ?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_a_stream_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(= (shd$ (fun_app$m (fun_app$n (szip_with$h ?v0 )?v1 )?v2 ))(fun_app$o (fun_app$p ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_stream_a_a_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$q (szip_with$i ?v0 )?v1 )?v2 ))(fun_app$b (fun_app$r ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_stream$ ))(= (shd$ (fun_app$ (st_ap$ ?v0 )?v1 ))(fun_app$b (shd$d ?v0 )(shd$ ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$ (st_ap$a ?v0 ?v1 ))(fun_app$d (shd$e ?v0 )(shd$d ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A_stream$ ))(= (shd$d (st_ap$b ?v0 ?v1 ))(fun_app$c (shd$f ?v0 )(shd$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$d (st_ap$c ?v0 ?v1 ))(fun_app$g (shd$g ?v0 )(shd$d ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_stream_a_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$ (fun_app$m (st_ap$d ?v0 )?v1 ))(fun_app$o (shd$h ?v0 )(shd$a ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_a_stream_fun_stream$ )(?v1 A_stream$ ))(= (shd$a (st_ap$e ?v0 ?v1 ))(fun_app$s (shd$i ?v0 )(shd$ ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$a (st_ap$f ?v0 ?v1 ))(fun_app$ (shd$j ?v0 )(shd$a ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_stream_a_a_fun_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$d (st_ap$g ?v0 ?v1 ))(fun_app$r (shd$k ?v0 )(shd$a ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_a_fun_a_stream_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$a (st_ap$h ?v0 ?v1 ))(fun_app$t (shd$l ?v0 )(shd$d ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun_stream$ )(?v1 A_a_a_fun_fun_stream$ ))(= (shd$ (st_ap$i ?v0 ?v1 ))(fun_app$u (shd$m ?v0 )(shd$f ?v1 )))):named a20 ))
(assert (! (forall ((?v0 Num$ ))(= (root$b (numeral$b ?v0 ))(numeral$c ?v0 ))):named a21 ))
(assert (! (forall ((?v0 Num$ ))(= (root$e (numeral$d ?v0 ))(numeral$e ?v0 ))):named a22 ))
(assert (! (forall ((?v0 Num$ ))(= (root$d (numeral$e ?v0 ))(numeral$f ?v0 ))):named a23 ))
(assert (! (forall ((?v0 Num$ ))(= (root$a (numeral$c ?v0 ))(numeral$g ?v0 ))):named a24 ))
(assert (! (forall ((?v0 Num$ ))(= (root$ (numeral$g ?v0 ))(numeral$ ?v0 ))):named a25 ))
(assert (! (forall ((?v0 Num$ ))(= (root$c (numeral$f ?v0 ))(numeral$a ?v0 ))):named a26 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ )(?v1 A_a_fun_a_a_fun_fun_stream$ ))(= (shd$g (sinterleave$ ?v0 ?v1 ))(shd$g ?v0 ))):named a27 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A_a_a_fun_fun_stream$ ))(= (shd$f (sinterleave$a ?v0 ?v1 ))(shd$f ?v0 ))):named a28 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_a_fun_stream$ ))(= (shd$e (sinterleave$b ?v0 ?v1 ))(shd$e ?v0 ))):named a29 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(= (shd$a (sinterleave$c ?v0 ?v1 ))(shd$a ?v0 ))):named a30 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$d (sinterleave$d ?v0 ?v1 ))(shd$d ?v0 ))):named a31 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (shd$ (fun_app$ (sinterleave$e ?v0 )?v1 ))(shd$ ?v0 ))):named a32 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$a (smap2$ ?v0 )?v1 )?v2 ))(fun_app$b (fun_app$c ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (smap2$a ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$e ?v0 (shd$ ?v1 ))(shd$d ?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$f (smap2$b ?v0 )?v1 )?v2 ))(fun_app$b (fun_app$g ?v0 (shd$d ?v1 ))(shd$ ?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$d (smap2$c ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$h ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (smap2$d ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$i ?v0 (shd$d ?v1 ))(shd$d ?v2 )))):named a37 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$d (smap2$e ?v0 ?v1 ?v2 ))(fun_app$g (fun_app$j ?v0 (shd$ ?v1 ))(shd$d ?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_a_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$d (smap2$f ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$k ?v0 (shd$d ?v1 ))(shd$ ?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$d (smap2$g ?v0 ?v1 ?v2 ))(fun_app$g (fun_app$l ?v0 (shd$d ?v1 ))(shd$d ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_a_stream_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(= (shd$ (fun_app$m (fun_app$n (smap2$h ?v0 )?v1 )?v2 ))(fun_app$o (fun_app$p ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_stream_a_a_fun_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$q (smap2$i ?v0 )?v1 )?v2 ))(fun_app$b (fun_app$r ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (shd$ (fun_app$ (smap$ ?v0 )?v1 ))(fun_app$b ?v0 (shd$ ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_stream$ ))(= (shd$ (smap$a ?v0 ?v1 ))(fun_app$d ?v0 (shd$d ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ ))(= (shd$d (smap$b ?v0 ?v1 ))(fun_app$c ?v0 (shd$ ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_stream$ ))(= (shd$d (smap$c ?v0 ?v1 ))(fun_app$g ?v0 (shd$d ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (shd$ (fun_app$m (smap$d ?v0 )?v1 ))(fun_app$o ?v0 (shd$a ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (shd$a (smap$e ?v0 ?v1 ))(fun_app$s ?v0 (shd$ ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (shd$a (smap$f ?v0 ?v1 ))(fun_app$ ?v0 (shd$a ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_stream_a_a_fun_fun$ )(?v1 A_stream_stream$ ))(= (shd$d (smap$g ?v0 ?v1 ))(fun_app$r ?v0 (shd$a ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_a_fun_a_stream_fun$ )(?v1 A_a_fun_stream$ ))(= (shd$a (smap$h ?v0 ?v1 ))(fun_app$t ?v0 (shd$d ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun_stream$ ))(= (shd$ (smap$i ?v0 ?v1 ))(fun_app$u ?v0 (shd$f ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_a_fun_stream_stream$ )(?v1 A_a_fun_stream_set$ ))(=> (member$ ?v0 (streams$ ?v1 ))(member$a (shd$b ?v0 )?v1 ))):named a53 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$b ?v0 (streams$a ?v1 ))(member$c (shd$c ?v0 )?v1 ))):named a54 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ )(?v1 A_a_fun_a_a_fun_fun_set$ ))(=> (member$d ?v0 (streams$b ?v1 ))(member$e (shd$g ?v0 )?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A_a_a_fun_fun_set$ ))(=> (member$f ?v0 (streams$c ?v1 ))(member$g (shd$f ?v0 )?v1 ))):named a56 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_a_fun_set$ ))(=> (member$h ?v0 (streams$d ?v1 ))(member$i (shd$e ?v0 )?v1 ))):named a57 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$c ?v0 (streams$e ?v1 ))(member$j (shd$a ?v0 )?v1 ))):named a58 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_set$ ))(=> (member$a ?v0 (streams$f ?v1 ))(member$k (shd$d ?v0 )?v1 ))):named a59 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$j ?v0 (streams$g ?v1 ))(member$l (shd$ ?v0 )?v1 ))):named a60 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_fun$ )(?v3 A_set$ ))(=> (and (member$j ?v0 (streams$g ?v1 ))(forall ((?v4 A$ ))(=> (member$l ?v4 ?v1 )(member$l (fun_app$b ?v2 ?v4 )?v3 ))))(member$j (fun_app$ (smap$ ?v2 )?v0 )(streams$g ?v3 )))):named a61 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$j ?v4 ?v1 )(member$l (fun_app$o ?v2 ?v4 )?v3 ))))(member$j (fun_app$m (smap$d ?v2 )?v0 )(streams$g ?v3 )))):named a62 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$j ?v0 (streams$g ?v1 ))(forall ((?v4 A$ ))(=> (member$l ?v4 ?v1 )(member$j (fun_app$s ?v2 ?v4 )?v3 ))))(member$c (smap$e ?v2 ?v0 )(streams$e ?v3 )))):named a63 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$j ?v4 ?v1 )(member$j (fun_app$ ?v2 ?v4 )?v3 ))))(member$c (smap$f ?v2 ?v0 )(streams$e ?v3 )))):named a64 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$b ?v0 (streams$a ?v1 ))(forall ((?v4 A_stream_stream$ ))(=> (member$c ?v4 ?v1 )(member$l (fun_app$v ?v2 ?v4 )?v3 ))))(member$j (smap$j ?v2 ?v0 )(streams$g ?v3 )))):named a65 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_stream_stream_fun$ )(?v3 A_stream_stream_set$ ))(=> (and (member$j ?v0 (streams$g ?v1 ))(forall ((?v4 A$ ))(=> (member$l ?v4 ?v1 )(member$c (fun_app$w ?v2 ?v4 )?v3 ))))(member$b (smap$k ?v2 ?v0 )(streams$a ?v3 )))):named a66 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_set$ )(?v2 A_a_fun_a_fun$ )(?v3 A_set$ ))(=> (and (member$a ?v0 (streams$f ?v1 ))(forall ((?v4 A_a_fun$ ))(=> (member$k ?v4 ?v1 )(member$l (fun_app$d ?v2 ?v4 )?v3 ))))(member$j (smap$a ?v2 ?v0 )(streams$g ?v3 )))):named a67 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_a_fun_fun$ )(?v3 A_a_fun_set$ ))(=> (and (member$j ?v0 (streams$g ?v1 ))(forall ((?v4 A$ ))(=> (member$l ?v4 ?v1 )(member$k (fun_app$c ?v2 ?v4 )?v3 ))))(member$a (smap$b ?v2 ?v0 )(streams$f ?v3 )))):named a68 ))
(assert (! (forall ((?v0 A_a_fun_stream_stream$ )(?v1 A_a_fun_stream_set$ )(?v2 A_a_fun_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$ ?v0 (streams$ ?v1 ))(forall ((?v4 A_a_fun_stream$ ))(=> (member$a ?v4 ?v1 )(member$l (fun_app$x ?v2 ?v4 )?v3 ))))(member$j (smap$l ?v2 ?v0 )(streams$g ?v3 )))):named a69 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$b ?v0 (streams$a ?v1 ))(forall ((?v4 A_stream_stream$ ))(=> (member$c ?v4 ?v1 )(member$j (fun_app$m ?v2 ?v4 )?v3 ))))(member$c (smap$m ?v2 ?v0 )(streams$e ?v3 )))):named a70 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_fun_a_a_a_fun_fun_fun$ )(?v2 A_a_fun_stream$ )(?v3 A_stream$ ))(= (sdrop$ ?v0 (smap2$f ?v1 ?v2 ?v3 ))(smap2$f ?v1 (sdrop$ ?v0 ?v2 )(fun_app$ (sdrop$a ?v0 )?v3 )))):named a71 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_fun_a_a_fun_fun$ )(?v2 A_a_fun_stream$ )(?v3 A_stream$ ))(= (fun_app$ (sdrop$a ?v0 )(fun_app$ (fun_app$f (smap2$b ?v1 )?v2 )?v3 ))(fun_app$ (fun_app$f (smap2$b ?v1 )(sdrop$ ?v0 ?v2 ))(fun_app$ (sdrop$a ?v0 )?v3 )))):named a72 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_fun_a_a_fun_fun_fun$ )(?v2 A_stream$ )(?v3 A_a_fun_stream$ ))(= (sdrop$ ?v0 (smap2$e ?v1 ?v2 ?v3 ))(smap2$e ?v1 (fun_app$ (sdrop$a ?v0 )?v2 )(sdrop$ ?v0 ?v3 )))):named a73 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_fun_a_fun_fun$ )(?v2 A_stream$ )(?v3 A_a_fun_stream$ ))(= (fun_app$ (sdrop$a ?v0 )(smap2$a ?v1 ?v2 ?v3 ))(smap2$a ?v1 (fun_app$ (sdrop$a ?v0 )?v2 )(sdrop$ ?v0 ?v3 )))):named a74 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_a_fun_fun_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (sdrop$ ?v0 (smap2$c ?v1 ?v2 ?v3 ))(smap2$c ?v1 (fun_app$ (sdrop$a ?v0 )?v2 )(fun_app$ (sdrop$a ?v0 )?v3 )))):named a75 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_fun_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (fun_app$ (sdrop$a ?v0 )(fun_app$ (fun_app$a (smap2$ ?v1 )?v2 )?v3 ))(fun_app$ (fun_app$a (smap2$ ?v1 )(fun_app$ (sdrop$a ?v0 )?v2 ))(fun_app$ (sdrop$a ?v0 )?v3 )))):named a76 ))
(assert (! (forall ((?v0 A_a_fun_stream_stream$ )(?v1 A_a_fun_stream_set$ ))(=> (and (member$ (stl$b ?v0 )(streams$ ?v1 ))(member$a (shd$b ?v0 )?v1 ))(member$ ?v0 (streams$ ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$b (stl$c ?v0 )(streams$a ?v1 ))(member$c (shd$c ?v0 )?v1 ))(member$b ?v0 (streams$a ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ )(?v1 A_a_fun_a_a_fun_fun_set$ ))(=> (and (member$d (stl$d ?v0 )(streams$b ?v1 ))(member$e (shd$g ?v0 )?v1 ))(member$d ?v0 (streams$b ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A_a_a_fun_fun_set$ ))(=> (and (member$f (stl$e ?v0 )(streams$c ?v1 ))(member$g (shd$f ?v0 )?v1 ))(member$f ?v0 (streams$c ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_a_fun_set$ ))(=> (and (member$h (stl$f ?v0 )(streams$d ?v1 ))(member$i (shd$e ?v0 )?v1 ))(member$h ?v0 (streams$d ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$c (stl$a ?v0 )(streams$e ?v1 ))(member$j (shd$a ?v0 )?v1 ))(member$c ?v0 (streams$e ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_set$ ))(=> (and (member$a (stl$g ?v0 )(streams$f ?v1 ))(member$k (shd$d ?v0 )?v1 ))(member$a ?v0 (streams$f ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$j (stl$ ?v0 )(streams$g ?v1 ))(member$l (shd$ ?v0 )?v1 ))(member$j ?v0 (streams$g ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_a_fun_stream_stream$ )(?v1 A_a_fun_stream_set$ ))(=> (and (member$ ?v0 (streams$ ?v1 ))(=> (and (member$a (shd$b ?v0 )?v1 )(member$ (stl$b ?v0 )(streams$ ?v1 )))false ))false )):named a85 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$b ?v0 (streams$a ?v1 ))(=> (and (member$c (shd$c ?v0 )?v1 )(member$b (stl$c ?v0 )(streams$a ?v1 )))false ))false )):named a86 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ )(?v1 A_a_fun_a_a_fun_fun_set$ ))(=> (and (member$d ?v0 (streams$b ?v1 ))(=> (and (member$e (shd$g ?v0 )?v1 )(member$d (stl$d ?v0 )(streams$b ?v1 )))false ))false )):named a87 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A_a_a_fun_fun_set$ ))(=> (and (member$f ?v0 (streams$c ?v1 ))(=> (and (member$g (shd$f ?v0 )?v1 )(member$f (stl$e ?v0 )(streams$c ?v1 )))false ))false )):named a88 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_a_fun_set$ ))(=> (and (member$h ?v0 (streams$d ?v1 ))(=> (and (member$i (shd$e ?v0 )?v1 )(member$h (stl$f ?v0 )(streams$d ?v1 )))false ))false )):named a89 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$c ?v0 (streams$e ?v1 ))(=> (and (member$j (shd$a ?v0 )?v1 )(member$c (stl$a ?v0 )(streams$e ?v1 )))false ))false )):named a90 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_set$ ))(=> (and (member$a ?v0 (streams$f ?v1 ))(=> (and (member$k (shd$d ?v0 )?v1 )(member$a (stl$g ?v0 )(streams$f ?v1 )))false ))false )):named a91 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$j ?v0 (streams$g ?v1 ))(=> (and (member$l (shd$ ?v0 )?v1 )(member$j (stl$ ?v0 )(streams$g ?v1 )))false ))false )):named a92 ))
(check-sat )
;(get-unsat-core )
