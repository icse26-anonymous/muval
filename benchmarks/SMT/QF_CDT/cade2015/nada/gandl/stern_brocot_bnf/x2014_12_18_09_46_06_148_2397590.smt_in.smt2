;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Rat$ 0 )
(declare-sort Int_int_fun$ 0 )
(declare-sort Int_rat_fun$ 0 )
(declare-sort Nat_rat_fun$ 0 )
(declare-sort Rat_int_fun$ 0 )
(declare-sort Rat_rat_fun$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Nat_nat_rat_fun_fun$ 0 )
(declare-sort Rat_rat_fun_rat_fun$ 0 )
(declare-sort Rat_rat_rat_fun_fun$ 0 )
(declare-sort Int_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun$ 0 )
(declare-sort Nat_nat_prod_int_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun$ 0 )
(declare-sort Rat_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_int_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_rat_fun$ 0 )
(declare-sort Rat_nat_nat_prod_fun_rat_fun$ 0 )
(declare-sort Rat_rat_fun_nat_nat_prod_fun$ 0 )
(declare-sort Rat_rat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_rat_fun_rat_fun$ 0 )
(declare-sort Rat_nat_nat_prod_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ 0 )
(declare-sort Rat_tree$ 0)
(declare-fun root$ (Rat_tree$)Rat$)
(declare-fun left$ (Rat_tree$)Rat_tree$)
(declare-fun right$ (Rat_tree$)Rat_tree$)
(declare-fun node$ (Rat$ Rat_tree$ Rat_tree$ )Rat_tree$)
(declare-sort Dir$ 0)
(declare-sort Dir_list$ 0)
(declare-fun l$ ()Dir$)
(declare-fun r$ ()Dir$)
(declare-fun nil$ ()Dir_list$)
(declare-fun hd$ (Dir_list$)Dir$)
(declare-fun tl$ (Dir_list$)Dir_list$)
(declare-fun cons$ (Dir$ Dir_list$ )Dir_list$)
(declare-sort Nat_nat_prod_rat_fun_tree$ 0)
(declare-fun select$ (Nat_nat_prod_rat_fun_tree$)Nat_nat_prod_rat_fun$)
(declare-fun selecta$ (Nat_nat_prod_rat_fun_tree$)Nat_nat_prod_rat_fun_tree$)
(declare-fun selectb$ (Nat_nat_prod_rat_fun_tree$)Nat_nat_prod_rat_fun_tree$)
(declare-fun node$a (Nat_nat_prod_rat_fun$ Nat_nat_prod_rat_fun_tree$ Nat_nat_prod_rat_fun_tree$ )Nat_nat_prod_rat_fun_tree$)
(declare-sort Nat_nat_prod$ 0)
(declare-fun fst$ (Nat_nat_prod$)Nat$)
(declare-fun snd$ (Nat_nat_prod$)Nat$)
(declare-fun pair$ (Nat$ Nat$ )Nat_nat_prod$)
(declare-sort Nat_nat_prod_tree$ 0)
(declare-sort Rat_rat_fun_tree$ 0)
(declare-sort Rat_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun_tree$ 0)
(declare-sort Rat_rat_fun_rat_fun_tree$ 0)
(declare-sort Rat_rat_rat_fun_fun_tree$ 0)
(declare-sort Rat_nat_nat_prod_fun_rat_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_rat_fun_tree$ 0)
(declare-sort Rat_rat_fun_nat_nat_prod_fun_tree$ 0)
(declare-sort Rat_rat_nat_nat_prod_fun_fun_tree$ 0)
(declare-sort Int_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ 0)
(declare-sort Rat_int_fun_tree$ 0)
(declare-sort Int_rat_fun_tree$ 0)
(declare-sort Int_int_fun_tree$ 0)
(declare-sort Nat_nat_prod_int_fun_tree$ 0)
(declare-sort Int_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_int_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ 0)
(declare-sort Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ 0)
(declare-sort Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ 0)
(declare-sort Rat_tree_tree$ 0)
(declare-sort Int_tree_tree$ 0)
(declare-sort Int_tree_tree_tree$ 0)
(declare-fun root$a (Nat_nat_prod_tree$)Nat_nat_prod$)
(declare-fun left$a (Nat_nat_prod_tree$)Nat_nat_prod_tree$)
(declare-fun right$a (Nat_nat_prod_tree$)Nat_nat_prod_tree$)
(declare-fun node$b (Nat_nat_prod$ Nat_nat_prod_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$)
(declare-fun selectc$ (Rat_rat_fun_tree$)Rat_rat_fun$)
(declare-fun selectd$ (Rat_rat_fun_tree$)Rat_rat_fun_tree$)
(declare-fun selecte$ (Rat_rat_fun_tree$)Rat_rat_fun_tree$)
(declare-fun node$c (Rat_rat_fun$ Rat_rat_fun_tree$ Rat_rat_fun_tree$ )Rat_rat_fun_tree$)
(declare-fun selectf$ (Rat_nat_nat_prod_fun_tree$)Rat_nat_nat_prod_fun$)
(declare-fun selectg$ (Rat_nat_nat_prod_fun_tree$)Rat_nat_nat_prod_fun_tree$)
(declare-fun selecth$ (Rat_nat_nat_prod_fun_tree$)Rat_nat_nat_prod_fun_tree$)
(declare-fun node$d (Rat_nat_nat_prod_fun$ Rat_nat_nat_prod_fun_tree$ Rat_nat_nat_prod_fun_tree$ )Rat_nat_nat_prod_fun_tree$)
(declare-fun selecti$ (Nat_nat_prod_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun$)
(declare-fun selectj$ (Nat_nat_prod_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_tree$)
(declare-fun selectk$ (Nat_nat_prod_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_tree$)
(declare-fun node$e (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$)
(declare-fun selectl$ (Rat_rat_fun_rat_fun_tree$)Rat_rat_fun_rat_fun$)
(declare-fun selectm$ (Rat_rat_fun_rat_fun_tree$)Rat_rat_fun_rat_fun_tree$)
(declare-fun selectn$ (Rat_rat_fun_rat_fun_tree$)Rat_rat_fun_rat_fun_tree$)
(declare-fun node$f (Rat_rat_fun_rat_fun$ Rat_rat_fun_rat_fun_tree$ Rat_rat_fun_rat_fun_tree$ )Rat_rat_fun_rat_fun_tree$)
(declare-fun selecto$ (Rat_rat_rat_fun_fun_tree$)Rat_rat_rat_fun_fun$)
(declare-fun selectp$ (Rat_rat_rat_fun_fun_tree$)Rat_rat_rat_fun_fun_tree$)
(declare-fun selectq$ (Rat_rat_rat_fun_fun_tree$)Rat_rat_rat_fun_fun_tree$)
(declare-fun node$g (Rat_rat_rat_fun_fun$ Rat_rat_rat_fun_fun_tree$ Rat_rat_rat_fun_fun_tree$ )Rat_rat_rat_fun_fun_tree$)
(declare-fun selectr$ (Rat_nat_nat_prod_fun_rat_fun_tree$)Rat_nat_nat_prod_fun_rat_fun$)
(declare-fun selects$ (Rat_nat_nat_prod_fun_rat_fun_tree$)Rat_nat_nat_prod_fun_rat_fun_tree$)
(declare-fun selectt$ (Rat_nat_nat_prod_fun_rat_fun_tree$)Rat_nat_nat_prod_fun_rat_fun_tree$)
(declare-fun node$h (Rat_nat_nat_prod_fun_rat_fun$ Rat_nat_nat_prod_fun_rat_fun_tree$ Rat_nat_nat_prod_fun_rat_fun_tree$ )Rat_nat_nat_prod_fun_rat_fun_tree$)
(declare-fun selectu$ (Nat_nat_prod_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_rat_fun$)
(declare-fun selectv$ (Nat_nat_prod_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_rat_fun_tree$)
(declare-fun selectw$ (Nat_nat_prod_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_rat_fun_tree$)
(declare-fun node$i (Nat_nat_prod_rat_fun_rat_fun$ Nat_nat_prod_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_rat_fun_tree$ )Nat_nat_prod_rat_fun_rat_fun_tree$)
(declare-fun selectx$ (Rat_rat_fun_nat_nat_prod_fun_tree$)Rat_rat_fun_nat_nat_prod_fun$)
(declare-fun selecty$ (Rat_rat_fun_nat_nat_prod_fun_tree$)Rat_rat_fun_nat_nat_prod_fun_tree$)
(declare-fun selectz$ (Rat_rat_fun_nat_nat_prod_fun_tree$)Rat_rat_fun_nat_nat_prod_fun_tree$)
(declare-fun node$j (Rat_rat_fun_nat_nat_prod_fun$ Rat_rat_fun_nat_nat_prod_fun_tree$ Rat_rat_fun_nat_nat_prod_fun_tree$ )Rat_rat_fun_nat_nat_prod_fun_tree$)
(declare-fun selecua$ (Rat_rat_nat_nat_prod_fun_fun_tree$)Rat_rat_nat_nat_prod_fun_fun$)
(declare-fun selecub$ (Rat_rat_nat_nat_prod_fun_fun_tree$)Rat_rat_nat_nat_prod_fun_fun_tree$)
(declare-fun selecuc$ (Rat_rat_nat_nat_prod_fun_fun_tree$)Rat_rat_nat_nat_prod_fun_fun_tree$)
(declare-fun node$k (Rat_rat_nat_nat_prod_fun_fun$ Rat_rat_nat_nat_prod_fun_fun_tree$ Rat_rat_nat_nat_prod_fun_fun_tree$ )Rat_rat_nat_nat_prod_fun_fun_tree$)
(declare-fun root$b (Int_tree$)Int)
(declare-fun left$b (Int_tree$)Int_tree$)
(declare-fun right$b (Int_tree$)Int_tree$)
(declare-fun node$l (Int Int_tree$ Int_tree$ )Int_tree$)
(declare-fun selecud$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun selecue$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun selecuf$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun node$m (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun selecug$ (Rat_int_fun_tree$)Rat_int_fun$)
(declare-fun selecuh$ (Rat_int_fun_tree$)Rat_int_fun_tree$)
(declare-fun selecui$ (Rat_int_fun_tree$)Rat_int_fun_tree$)
(declare-fun node$n (Rat_int_fun$ Rat_int_fun_tree$ Rat_int_fun_tree$ )Rat_int_fun_tree$)
(declare-fun selecuj$ (Int_rat_fun_tree$)Int_rat_fun$)
(declare-fun selecuk$ (Int_rat_fun_tree$)Int_rat_fun_tree$)
(declare-fun selecul$ (Int_rat_fun_tree$)Int_rat_fun_tree$)
(declare-fun node$o (Int_rat_fun$ Int_rat_fun_tree$ Int_rat_fun_tree$ )Int_rat_fun_tree$)
(declare-fun selecum$ (Int_int_fun_tree$)Int_int_fun$)
(declare-fun selecun$ (Int_int_fun_tree$)Int_int_fun_tree$)
(declare-fun selecuo$ (Int_int_fun_tree$)Int_int_fun_tree$)
(declare-fun node$p (Int_int_fun$ Int_int_fun_tree$ Int_int_fun_tree$ )Int_int_fun_tree$)
(declare-fun selecup$ (Nat_nat_prod_int_fun_tree$)Nat_nat_prod_int_fun$)
(declare-fun selecuq$ (Nat_nat_prod_int_fun_tree$)Nat_nat_prod_int_fun_tree$)
(declare-fun selecur$ (Nat_nat_prod_int_fun_tree$)Nat_nat_prod_int_fun_tree$)
(declare-fun node$q (Nat_nat_prod_int_fun$ Nat_nat_prod_int_fun_tree$ Nat_nat_prod_int_fun_tree$ )Nat_nat_prod_int_fun_tree$)
(declare-fun selecus$ (Int_nat_nat_prod_fun_tree$)Int_nat_nat_prod_fun$)
(declare-fun selecut$ (Int_nat_nat_prod_fun_tree$)Int_nat_nat_prod_fun_tree$)
(declare-fun selecuu$ (Int_nat_nat_prod_fun_tree$)Int_nat_nat_prod_fun_tree$)
(declare-fun node$r (Int_nat_nat_prod_fun$ Int_nat_nat_prod_fun_tree$ Int_nat_nat_prod_fun_tree$ )Int_nat_nat_prod_fun_tree$)
(declare-fun selecuv$ (Nat_nat_prod_rat_fun_int_fun_tree$)Nat_nat_prod_rat_fun_int_fun$)
(declare-fun selecuw$ (Nat_nat_prod_rat_fun_int_fun_tree$)Nat_nat_prod_rat_fun_int_fun_tree$)
(declare-fun selecux$ (Nat_nat_prod_rat_fun_int_fun_tree$)Nat_nat_prod_rat_fun_int_fun_tree$)
(declare-fun node$s (Nat_nat_prod_rat_fun_int_fun$ Nat_nat_prod_rat_fun_int_fun_tree$ Nat_nat_prod_rat_fun_int_fun_tree$ )Nat_nat_prod_rat_fun_int_fun_tree$)
(declare-fun selecuy$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$)
(declare-fun selecuz$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$)
(declare-fun selecva$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$)
(declare-fun node$t (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$)
(declare-fun selecvb$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$)
(declare-fun selecvc$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)
(declare-fun selecvd$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)
(declare-fun node$u (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$)
(declare-fun selecve$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun selecvf$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun selecvg$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun node$v (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun selecvh$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$)
(declare-fun selecvi$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun selecvj$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun node$w (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun selecvk$ (Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Rat_nat_nat_prod_fun_nat_nat_prod_fun$)
(declare-fun selecvl$ (Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selecvm$ (Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun node$x (Rat_nat_nat_prod_fun_nat_nat_prod_fun$ Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selecvn$ (Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_rat_fun_rat_fun$)
(declare-fun selecvo$ (Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)
(declare-fun selecvp$ (Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)
(declare-fun node$y (Nat_nat_prod_rat_fun_rat_fun_rat_fun$ Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$ )Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$)
(declare-fun selecvq$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$)
(declare-fun selecvr$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selecvs$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun node$z (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selecvt$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun$)
(declare-fun selecvu$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$)
(declare-fun selecvv$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$)
(declare-fun node$aa (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$)
(declare-fun selecvw$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$)
(declare-fun selecvx$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)
(declare-fun selecvy$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)
(declare-fun node$ab (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$)
(declare-fun selecvz$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$)
(declare-fun selecwa$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun selecwb$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun node$ac (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$)
(declare-fun selecwc$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$)
(declare-fun selecwd$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun selecwe$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun node$ad (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$)
(declare-fun root$c (Rat_tree_tree$)Rat_tree$)
(declare-fun left$c (Rat_tree_tree$)Rat_tree_tree$)
(declare-fun right$c (Rat_tree_tree$)Rat_tree_tree$)
(declare-fun node$ae (Rat_tree$ Rat_tree_tree$ Rat_tree_tree$ )Rat_tree_tree$)
(declare-fun root$d (Int_tree_tree$)Int_tree$)
(declare-fun left$d (Int_tree_tree$)Int_tree_tree$)
(declare-fun right$d (Int_tree_tree$)Int_tree_tree$)
(declare-fun node$af (Int_tree$ Int_tree_tree$ Int_tree_tree$ )Int_tree_tree$)
(declare-fun root$e (Int_tree_tree_tree$)Int_tree_tree$)
(declare-fun left$e (Int_tree_tree_tree$)Int_tree_tree_tree$)
(declare-fun right$e (Int_tree_tree_tree$)Int_tree_tree_tree$)
(declare-fun node$ag (Int_tree_tree$ Int_tree_tree_tree$ Int_tree_tree_tree$ )Int_tree_tree_tree$)
(declare-fun ma$ ()Nat$ )
(declare-fun na$ ()Nat$ )
(declare-fun uu$ ()Nat_nat_rat_fun_fun$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun uua$ ()Nat_nat_bool_fun_fun$ )
(declare-fun uub$ (Nat_nat_prod$ )Nat_nat_prod_rat_fun_rat_fun$ )
(declare-fun uuc$ (Rat$ )Rat_rat_fun_rat_fun$ )
(declare-fun uud$ (Rat$ )Rat_nat_nat_prod_fun_nat_nat_prod_fun$ )
(declare-fun uue$ (Nat_nat_prod_rat_fun$ )Nat_nat_prod_rat_fun_rat_fun_rat_fun$ )
(declare-fun uuf$ (Nat_nat_prod$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )
(declare-fun uug$ (Nat_nat_prod_rat_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ )
(declare-fun uuh$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun$ )
(declare-fun uui$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$ )
(declare-fun uuj$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ )
(declare-fun uuk$ (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ )
(declare-fun uul$ (Rat$ )Nat_nat_prod_rat_fun$ )
(declare-fun uum$ (Rat$ )Rat_rat_fun$ )
(declare-fun uun$ (Nat_nat_prod$ )Rat_nat_nat_prod_fun$ )
(declare-fun uuo$ (Nat_nat_prod$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun uup$ (Rat$ )Nat_nat_prod_rat_fun_rat_fun$ )
(declare-fun uuq$ (Nat_nat_prod_rat_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )
(declare-fun uur$ (Rat$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ )
(declare-fun uus$ (Int )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ )
(declare-fun uut$ (Nat_nat_prod_rat_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ )
(declare-fun uuu$ (Nat_nat_prod_rat_fun_rat_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ )
(declare-fun less$ (Nat$ Nat$ )Bool )
(declare-fun zero$ ()Nat$ )
(declare-fun fract$ (Int )Int_rat_fun$ )
(declare-fun minus$ (Nat$ Nat$ )Nat$ )
(declare-fun root$f (Rat_rat_fun_tree$ )Rat_rat_fun$ )
(declare-fun root$g (Nat_nat_prod_rat_fun_tree$ )Nat_nat_prod_rat_fun$ )
(declare-fun root$h (Rat_nat_nat_prod_fun_tree$ )Rat_nat_nat_prod_fun$ )
(declare-fun root$i (Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun root$j (Rat_rat_fun_rat_fun_tree$ )Rat_rat_fun_rat_fun$ )
(declare-fun root$k (Rat_rat_rat_fun_fun_tree$ )Rat_rat_rat_fun_fun$ )
(declare-fun root$l (Rat_nat_nat_prod_fun_rat_fun_tree$ Rat_nat_nat_prod_fun$ )Rat$ )
(declare-fun root$m (Nat_nat_prod_rat_fun_rat_fun_tree$ )Nat_nat_prod_rat_fun_rat_fun$ )
(declare-fun root$n (Rat_rat_fun_nat_nat_prod_fun_tree$ Rat_rat_fun$ )Nat_nat_prod$ )
(declare-fun root$o (Rat_rat_nat_nat_prod_fun_fun_tree$ )Rat_rat_nat_nat_prod_fun_fun$ )
(declare-fun root$p (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )
(declare-fun mkPath$ (Nat$ Nat$ )Dir_list$ )
(declare-fun of_nat$ (Nat$ )Int )
(declare-fun fun_app$ (Nat_bool_fun$ Nat$ )Bool )
(declare-fun of_nat$a (Nat$ )Rat_tree_tree$ )
(declare-fun of_nat$b (Nat$ )Rat_tree$ )
(declare-fun of_nat$c (Nat$ )Int_tree_tree_tree$ )
(declare-fun of_nat$d (Nat$ )Int_tree_tree$ )
(declare-fun of_nat$e (Nat$ )Int_tree$ )
(declare-fun of_nat$f (Nat$ )Rat$ )
(declare-fun tree_ap$ (Nat_nat_prod_rat_fun_tree$ Nat_nat_prod_tree$ )Rat_tree$ )
(declare-fun fun_app$a (Nat_nat_bool_fun_fun$ Nat$ )Nat_bool_fun$ )
(declare-fun fun_app$b (Nat_rat_fun$ Nat$ )Rat$ )
(declare-fun fun_app$c (Nat_nat_rat_fun_fun$ Nat$ )Nat_rat_fun$ )
(declare-fun fun_app$d (Int_rat_fun$ Int )Rat$ )
(declare-fun fun_app$e (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$f (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod$ )
(declare-fun fun_app$g (Nat_nat_prod_rat_fun_rat_fun$ Nat_nat_prod_rat_fun$ )Rat$ )
(declare-fun fun_app$h (Nat_nat_prod_rat_fun$ Nat_nat_prod$ )Rat$ )
(declare-fun fun_app$i (Rat_nat_nat_prod_fun_nat_nat_prod_fun$ Rat_nat_nat_prod_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$j (Rat_nat_nat_prod_fun$ Rat$ )Nat_nat_prod$ )
(declare-fun fun_app$k (Rat_rat_fun_rat_fun$ Rat_rat_fun$ )Rat$ )
(declare-fun fun_app$l (Rat_rat_fun$ Rat$ )Rat$ )
(declare-fun fun_app$m (Nat_nat_prod_rat_fun_rat_fun_rat_fun$ Nat_nat_prod_rat_fun_rat_fun$ )Rat$ )
(declare-fun fun_app$n (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun$ )
(declare-fun fun_app$o (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun$ )Nat_nat_prod_rat_fun$ )
(declare-fun fun_app$p (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ )Rat$ )
(declare-fun fun_app$q (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Rat$ )
(declare-fun fun_app$r (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ )Int )
(declare-fun fun_app$s (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Int )
(declare-fun fun_app$t (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun$ )
(declare-fun fun_app$u (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ )Nat_nat_prod_rat_fun_rat_fun$ )
(declare-fun fun_app$v (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_rat_fun$ )
(declare-fun fun_app$w (Rat_int_fun$ Rat$ )Int )
(declare-fun fun_app$x (Int_int_fun$ Int )Int )
(declare-fun fun_app$y (Nat_nat_prod_int_fun$ Nat_nat_prod$ )Int )
(declare-fun fun_app$z (Int_nat_nat_prod_fun$ Int )Nat_nat_prod$ )
(declare-fun tree_ap$a (Rat_rat_fun_tree$ Rat_tree$ )Rat_tree$ )
(declare-fun tree_ap$b (Rat_nat_nat_prod_fun_tree$ Rat_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$c (Nat_nat_prod_nat_nat_prod_fun_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$d (Rat_rat_fun_rat_fun_tree$ Rat_rat_fun_tree$ )Rat_tree$ )
(declare-fun tree_ap$e (Rat_rat_rat_fun_fun_tree$ Rat_tree$ )Rat_rat_fun_tree$ )
(declare-fun tree_ap$f (Rat_nat_nat_prod_fun_rat_fun_tree$ Rat_nat_nat_prod_fun_tree$ )Rat_tree$ )
(declare-fun tree_ap$g (Nat_nat_prod_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_tree$ )Rat_tree$ )
(declare-fun tree_ap$h (Rat_rat_fun_nat_nat_prod_fun_tree$ Rat_rat_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$i (Rat_rat_nat_nat_prod_fun_fun_tree$ Rat_tree$ )Rat_nat_nat_prod_fun_tree$ )
(declare-fun tree_ap$j (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_tree$ )Nat_nat_prod_rat_fun_tree$ )
(declare-fun tree_ap$k (Rat_int_fun_tree$ Rat_tree$ )Int_tree$ )
(declare-fun tree_ap$l (Int_rat_fun_tree$ Int_tree$ )Rat_tree$ )
(declare-fun tree_ap$m (Int_int_fun_tree$ Int_tree$ )Int_tree$ )
(declare-fun tree_ap$n (Nat_nat_prod_int_fun_tree$ Nat_nat_prod_tree$ )Int_tree$ )
(declare-fun tree_ap$o (Int_nat_nat_prod_fun_tree$ Int_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$p (Nat_nat_prod_rat_fun_int_fun_tree$ Nat_nat_prod_rat_fun_tree$ )Int_tree$ )
(declare-fun tree_ap$q (Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Rat_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$r (Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_rat_fun_tree$ )Rat_tree$ )
(declare-fun tree_ap$s (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$t (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_tree$ )
(declare-fun tree_ap$u (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )Rat_tree$ )
(declare-fun tree_ap$v (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ )Rat_tree$ )
(declare-fun tree_ap$w (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )Int_tree$ )
(declare-fun tree_ap$x (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ )Int_tree$ )
(declare-fun tree_ap$y (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_tree$ )
(declare-fun tree_ap$z (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_rat_fun_tree$ )
(declare-fun case_prod$ (Nat_nat_rat_fun_fun$ )Nat_nat_prod_rat_fun$ )
(declare-fun fun_app$aa (Nat_nat_prod_rat_fun_int_fun$ Nat_nat_prod_rat_fun$ )Int )
(declare-fun fun_app$ab (Rat_rat_rat_fun_fun$ Rat$ )Rat_rat_fun$ )
(declare-fun fun_app$ac (Rat_rat_nat_nat_prod_fun_fun$ Rat$ )Rat_nat_nat_prod_fun$ )
(declare-fun tree_ap$aa (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_rat_fun_tree$ )
(declare-fun tree_pure$ (Nat_nat_prod_rat_fun$ )Nat_nat_prod_rat_fun_tree$ )
(declare-fun case_prod$a (Nat_nat_bool_fun_fun$ Nat_nat_prod$ )Bool )
(declare-fun tree_pure$a (Rat$ )Rat_tree$ )
(declare-fun tree_pure$b (Nat_nat_prod$ )Nat_nat_prod_tree$ )
(declare-fun tree_pure$c (Int )Int_tree$ )
(declare-fun tree_pure$d (Rat_rat_fun$ )Rat_rat_fun_tree$ )
(declare-fun tree_pure$e (Rat_nat_nat_prod_fun$ )Rat_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$f (Nat_nat_prod_rat_fun_rat_fun$ )Nat_nat_prod_rat_fun_rat_fun_tree$ )
(declare-fun tree_pure$g (Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$h (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )
(declare-fun tree_pure$i (Rat_rat_fun_rat_fun$ )Rat_rat_fun_rat_fun_tree$ )
(declare-fun tree_pure$j (Rat_int_fun$ )Rat_int_fun_tree$ )
(declare-fun tree_pure$k (Int_rat_fun$ )Int_rat_fun_tree$ )
(declare-fun tree_pure$l (Int_int_fun$ )Int_int_fun_tree$ )
(declare-fun tree_pure$m (Nat_nat_prod_int_fun$ )Nat_nat_prod_int_fun_tree$ )
(declare-fun tree_pure$n (Int_nat_nat_prod_fun$ )Int_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$o (Nat_nat_prod_rat_fun_int_fun$ )Nat_nat_prod_rat_fun_int_fun_tree$ )
(declare-fun tree_pure$p (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ )
(declare-fun tree_pure$q (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ )
(declare-fun tree_pure$r (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )
(declare-fun tree_pure$s (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )
(declare-fun tree_pure$t (Rat_nat_nat_prod_fun_nat_nat_prod_fun$ )Rat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$u (Nat_nat_prod_rat_fun_rat_fun_rat_fun$ )Nat_nat_prod_rat_fun_rat_fun_rat_fun_tree$ )
(declare-fun tree_pure$v (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$w (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_rat_fun_tree$ )
(declare-fun tree_pure$x (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_int_fun_tree$ )
(declare-fun tree_pure$y (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )
(declare-fun tree_pure$z (Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )
(declare-fun tree_pure$aa (Rat_tree$ )Rat_tree_tree$ )
(declare-fun tree_pure$ab (Int_tree_tree$ )Int_tree_tree_tree$ )
(declare-fun tree_pure$ac (Int_tree$ )Int_tree_tree$ )
(declare-fun stern_brocot$ ()Nat_nat_prod_tree$ )
(declare-fun traverse_tree$ (Dir_list$ Rat_tree$ )Rat_tree$ )
(declare-fun traverse_tree$a (Dir_list$ Rat_rat_fun_tree$ )Rat_rat_fun_tree$ )
(declare-fun traverse_tree$b (Dir_list$ Nat_nat_prod_rat_fun_tree$ )Nat_nat_prod_rat_fun_tree$ )
(declare-fun traverse_tree$c (Dir_list$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun traverse_tree$d (Dir_list$ Rat_nat_nat_prod_fun_tree$ )Rat_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$e (Dir_list$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$f (Dir_list$ Rat_rat_fun_rat_fun_tree$ )Rat_rat_fun_rat_fun_tree$ )
(declare-fun traverse_tree$g (Dir_list$ Rat_rat_rat_fun_fun_tree$ )Rat_rat_rat_fun_fun_tree$ )
(declare-fun traverse_tree$h (Dir_list$ Rat_nat_nat_prod_fun_rat_fun_tree$ )Rat_nat_nat_prod_fun_rat_fun_tree$ )
(declare-fun traverse_tree$i (Dir_list$ Nat_nat_prod_rat_fun_rat_fun_tree$ )Nat_nat_prod_rat_fun_rat_fun_tree$ )
(declare-fun traverse_tree$j (Dir_list$ Rat_rat_fun_nat_nat_prod_fun_tree$ )Rat_rat_fun_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$k (Dir_list$ Rat_rat_nat_nat_prod_fun_fun_tree$ )Rat_rat_nat_nat_prod_fun_fun_tree$ )
(declare-fun traverse_tree$l (Dir_list$ Int_tree$ )Int_tree$ )
(declare-fun traverse_tree$m (Dir_list$ Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(and (less$ zero$ ?v0 )(less$ zero$ ?v1 ))):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$b (fun_app$c uu$ ?v0 )?v1 )(fun_app$d (fract$ (of_nat$ ?v0 ))(of_nat$ ?v1 ))):pattern ((fun_app$b (fun_app$c uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(! (= (fun_app$e (uuf$ ?v0 )?v1 )(fun_app$f ?v1 ?v0 )):pattern ((fun_app$e (uuf$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_rat_fun$ ))(! (= (fun_app$g (uub$ ?v0 )?v1 )(fun_app$h ?v1 ?v0 )):pattern ((fun_app$g (uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Rat_nat_nat_prod_fun$ ))(! (= (fun_app$i (uud$ ?v0 )?v1 )(fun_app$j ?v1 ?v0 )):pattern ((fun_app$i (uud$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Rat_rat_fun$ ))(! (= (fun_app$k (uuc$ ?v0 )?v1 )(fun_app$l ?v1 ?v0 )):pattern ((fun_app$k (uuc$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_rat_fun$ ))(! (= (fun_app$m (uue$ ?v0 )?v1 )(fun_app$g ?v1 ?v0 )):pattern ((fun_app$m (uue$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(! (= (fun_app$n (uug$ ?v0 )?v1 )(fun_app$o ?v1 ?v0 )):pattern ((fun_app$n (uug$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ ))(! (= (fun_app$p (uuh$ ?v0 )?v1 )(fun_app$q ?v1 ?v0 )):pattern ((fun_app$p (uuh$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ ))(! (= (fun_app$r (uui$ ?v0 )?v1 )(fun_app$s ?v1 ?v0 )):pattern ((fun_app$r (uui$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ ))(! (= (fun_app$t (uuj$ ?v0 )?v1 )(fun_app$n ?v1 ?v0 )):pattern ((fun_app$t (uuj$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ ))(! (= (fun_app$u (uuk$ ?v0 )?v1 )(fun_app$v ?v1 ?v0 )):pattern ((fun_app$u (uuk$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod$ ))(! (= (fun_app$f (uuo$ ?v0 )?v1 )?v0 ):pattern ((fun_app$f (uuo$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Rat$ ))(! (= (fun_app$j (uun$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (uun$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Nat_nat_prod$ ))(! (= (fun_app$h (uul$ ?v0 )?v1 )?v0 ):pattern ((fun_app$h (uul$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Rat$ ))(! (= (fun_app$l (uum$ ?v0 )?v1 )?v0 ):pattern ((fun_app$l (uum$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Nat_nat_prod_rat_fun$ ))(! (= (fun_app$g (uup$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (uup$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(! (= (fun_app$q (uur$ ?v0 )?v1 )?v0 ):pattern ((fun_app$q (uur$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 Int )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(! (= (fun_app$s (uus$ ?v0 )?v1 )?v0 ):pattern ((fun_app$s (uus$ ?v0 )?v1 )))):named a18 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod_rat_fun$ ))(! (= (fun_app$o (uuq$ ?v0 )?v1 )?v0 ):pattern ((fun_app$o (uuq$ ?v0 )?v1 )))):named a19 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(! (= (fun_app$n (uut$ ?v0 )?v1 )?v0 ):pattern ((fun_app$n (uut$ ?v0 )?v1 )))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(! (= (fun_app$v (uuu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$v (uuu$ ?v0 )?v1 )))):named a21 ))
(assert (! (not (= (root$ (traverse_tree$ (mkPath$ (suc$ ma$ )(suc$ na$ ))(tree_ap$ (tree_pure$ (case_prod$ uu$ ))stern_brocot$ )))(fun_app$d (fract$ (of_nat$ (suc$ ma$ )))(of_nat$ (suc$ na$ ))))):named a22 ))
(assert (! (less$ zero$ (suc$ na$ )):named a23 ))
(assert (! (less$ zero$ (suc$ ma$ )):named a24 ))
(assert (! (less$ na$ ma$ ):named a25 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_rat_fun_tree$ )(?v2 Rat_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$a ?v1 ?v2 ))(tree_ap$a (traverse_tree$a ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a26 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_rat_fun_tree$ )(?v2 Nat_nat_prod_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$ ?v1 ?v2 ))(tree_ap$ (traverse_tree$b ?v0 ?v1 )(traverse_tree$c ?v0 ?v2 )))):named a27 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_nat_nat_prod_fun_tree$ )(?v2 Rat_tree$ ))(= (traverse_tree$c ?v0 (tree_ap$b ?v1 ?v2 ))(tree_ap$b (traverse_tree$d ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a28 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v2 Nat_nat_prod_tree$ ))(= (traverse_tree$c ?v0 (tree_ap$c ?v1 ?v2 ))(tree_ap$c (traverse_tree$e ?v0 ?v1 )(traverse_tree$c ?v0 ?v2 )))):named a29 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_rat_fun_rat_fun_tree$ )(?v2 Rat_rat_fun_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$d ?v1 ?v2 ))(tree_ap$d (traverse_tree$f ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a30 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_rat_rat_fun_fun_tree$ )(?v2 Rat_tree$ ))(= (traverse_tree$a ?v0 (tree_ap$e ?v1 ?v2 ))(tree_ap$e (traverse_tree$g ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a31 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_nat_nat_prod_fun_rat_fun_tree$ )(?v2 Rat_nat_nat_prod_fun_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$f ?v1 ?v2 ))(tree_ap$f (traverse_tree$h ?v0 ?v1 )(traverse_tree$d ?v0 ?v2 )))):named a32 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_rat_fun_rat_fun_tree$ )(?v2 Nat_nat_prod_rat_fun_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$g ?v1 ?v2 ))(tree_ap$g (traverse_tree$i ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a33 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_rat_fun_nat_nat_prod_fun_tree$ )(?v2 Rat_rat_fun_tree$ ))(= (traverse_tree$c ?v0 (tree_ap$h ?v1 ?v2 ))(tree_ap$h (traverse_tree$j ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a34 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_rat_nat_nat_prod_fun_fun_tree$ )(?v2 Rat_tree$ ))(= (traverse_tree$d ?v0 (tree_ap$i ?v1 ?v2 ))(tree_ap$i (traverse_tree$k ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a35 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat$ ))(= (traverse_tree$ ?v0 (tree_pure$a ?v1 ))(tree_pure$a ?v1 ))):named a36 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod$ ))(= (traverse_tree$c ?v0 (tree_pure$b ?v1 ))(tree_pure$b ?v1 ))):named a37 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_rat_fun$ ))(= (traverse_tree$b ?v0 (tree_pure$ ?v1 ))(tree_pure$ ?v1 ))):named a38 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Int ))(= (traverse_tree$l ?v0 (tree_pure$c ?v1 ))(tree_pure$c ?v1 ))):named a39 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_rat_fun$ ))(= (traverse_tree$a ?v0 (tree_pure$d ?v1 ))(tree_pure$d ?v1 ))):named a40 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_nat_nat_prod_fun$ ))(= (traverse_tree$d ?v0 (tree_pure$e ?v1 ))(tree_pure$e ?v1 ))):named a41 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_rat_fun_rat_fun$ ))(= (traverse_tree$i ?v0 (tree_pure$f ?v1 ))(tree_pure$f ?v1 ))):named a42 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(= (traverse_tree$e ?v0 (tree_pure$g ?v1 ))(tree_pure$g ?v1 ))):named a43 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (traverse_tree$m ?v0 (tree_pure$h ?v1 ))(tree_pure$h ?v1 ))):named a44 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Rat_rat_fun_rat_fun$ ))(= (traverse_tree$f ?v0 (tree_pure$i ?v1 ))(tree_pure$i ?v1 ))):named a45 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$ (tree_pure$ ?v0 )(tree_pure$b ?v1 ))(tree_pure$a (fun_app$h ?v0 ?v1 )))):named a46 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun$ ))(= (tree_ap$j (tree_pure$h ?v0 )(tree_pure$ ?v1 ))(tree_pure$ (fun_app$o ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 Rat_rat_fun$ )(?v1 Rat$ ))(= (tree_ap$a (tree_pure$d ?v0 )(tree_pure$a ?v1 ))(tree_pure$a (fun_app$l ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 Rat_int_fun$ )(?v1 Rat$ ))(= (tree_ap$k (tree_pure$j ?v0 )(tree_pure$a ?v1 ))(tree_pure$c (fun_app$w ?v0 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 Int_rat_fun$ )(?v1 Int ))(= (tree_ap$l (tree_pure$k ?v0 )(tree_pure$c ?v1 ))(tree_pure$a (fun_app$d ?v0 ?v1 )))):named a50 ))
(assert (! (forall ((?v0 Int_int_fun$ )(?v1 Int ))(= (tree_ap$m (tree_pure$l ?v0 )(tree_pure$c ?v1 ))(tree_pure$c (fun_app$x ?v0 ?v1 )))):named a51 ))
(assert (! (forall ((?v0 Nat_nat_prod_int_fun$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$n (tree_pure$m ?v0 )(tree_pure$b ?v1 ))(tree_pure$c (fun_app$y ?v0 ?v1 )))):named a52 ))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun$ )(?v1 Rat$ ))(= (tree_ap$b (tree_pure$e ?v0 )(tree_pure$a ?v1 ))(tree_pure$b (fun_app$j ?v0 ?v1 )))):named a53 ))
(assert (! (forall ((?v0 Int_nat_nat_prod_fun$ )(?v1 Int ))(= (tree_ap$o (tree_pure$n ?v0 )(tree_pure$c ?v1 ))(tree_pure$b (fun_app$z ?v0 ?v1 )))):named a54 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_int_fun$ )(?v1 Nat_nat_prod_rat_fun$ ))(= (tree_ap$p (tree_pure$o ?v0 )(tree_pure$ ?v1 ))(tree_pure$c (fun_app$aa ?v0 ?v1 )))):named a55 ))
(assert (! (=> (and (less$ zero$ (minus$ ma$ na$ ))(less$ zero$ (suc$ na$ )))(= (root$ (traverse_tree$ (mkPath$ (minus$ ma$ na$ )(suc$ na$ ))(tree_ap$ (tree_pure$ (case_prod$ uu$ ))stern_brocot$ )))(fun_app$d (fract$ (of_nat$ (minus$ ma$ na$ )))(of_nat$ (suc$ na$ ))))):named a56 ))
(assert (! (case_prod$a uua$ (root$a (traverse_tree$c (mkPath$ (minus$ ma$ na$ )(suc$ na$ ))stern_brocot$ ))):named a57 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod_rat_fun$ ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Rat$ ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a59 ))
(assert (! (forall ((?v0 Int )(?v1 Int ))(= (= (tree_pure$c ?v0 )(tree_pure$c ?v1 ))(= ?v0 ?v1 ))):named a60 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a61 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_rat_fun$ ))(= (= (tree_pure$f ?v0 )(tree_pure$f ?v1 ))(= ?v0 ?v1 ))):named a62 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (= (tree_pure$h ?v0 )(tree_pure$h ?v1 ))(= ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun$ ))(= (= (tree_pure$p ?v0 )(tree_pure$p ?v1 ))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun$ ))(= (= (tree_pure$q ?v0 )(tree_pure$q ?v1 ))(= ?v0 ?v1 ))):named a65 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun$ ))(= (= (tree_pure$r ?v0 )(tree_pure$r ?v1 ))(= ?v0 ?v1 ))):named a66 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun$ ))(= (= (tree_pure$s ?v0 )(tree_pure$s ?v1 ))(= ?v0 ?v1 ))):named a67 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$ ?v0 (tree_pure$b ?v1 ))(tree_ap$g (tree_pure$f (uub$ ?v1 ))?v0 ))):named a68 ))
(assert (! (forall ((?v0 Rat_rat_fun_tree$ )(?v1 Rat$ ))(= (tree_ap$a ?v0 (tree_pure$a ?v1 ))(tree_ap$d (tree_pure$i (uuc$ ?v1 ))?v0 ))):named a69 ))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun_tree$ )(?v1 Rat$ ))(= (tree_ap$b ?v0 (tree_pure$a ?v1 ))(tree_ap$q (tree_pure$t (uud$ ?v1 ))?v0 ))):named a70 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun$ ))(= (tree_ap$g ?v0 (tree_pure$ ?v1 ))(tree_ap$r (tree_pure$u (uue$ ?v1 ))?v0 ))):named a71 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$c ?v0 (tree_pure$b ?v1 ))(tree_ap$s (tree_pure$v (uuf$ ?v1 ))?v0 ))):named a72 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun$ ))(= (tree_ap$j ?v0 (tree_pure$ ?v1 ))(tree_ap$t (tree_pure$r (uug$ ?v1 ))?v0 ))):named a73 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$u ?v0 (tree_pure$h ?v1 ))(tree_ap$v (tree_pure$w (uuh$ ?v1 ))?v0 ))):named a74 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$w ?v0 (tree_pure$h ?v1 ))(tree_ap$x (tree_pure$x (uui$ ?v1 ))?v0 ))):named a75 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$t ?v0 (tree_pure$h ?v1 ))(tree_ap$y (tree_pure$y (uuj$ ?v1 ))?v0 ))):named a76 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$z ?v0 (tree_pure$h ?v1 ))(tree_ap$aa (tree_pure$z (uuk$ ?v1 ))?v0 ))):named a77 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$a ?v0 )(tree_pure$aa (of_nat$b ?v0 ))):pattern ((of_nat$a ?v0 )))):named a78 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$c ?v0 )(tree_pure$ab (of_nat$d ?v0 ))):pattern ((of_nat$c ?v0 )))):named a79 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$d ?v0 )(tree_pure$ac (of_nat$e ?v0 ))):pattern ((of_nat$d ?v0 )))):named a80 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$b ?v0 )(tree_pure$a (of_nat$f ?v0 ))):pattern ((of_nat$b ?v0 )))):named a81 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$e ?v0 )(tree_pure$c (of_nat$ ?v0 ))):pattern ((of_nat$e ?v0 )))):named a82 ))
(assert (! (forall ((?v0 Rat_rat_fun_tree$ )(?v1 Rat_tree$ ))(= (root$ (tree_ap$a ?v0 ?v1 ))(fun_app$l (root$f ?v0 )(root$ ?v1 )))):named a83 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (root$ (tree_ap$ ?v0 ?v1 ))(fun_app$h (root$g ?v0 )(root$a ?v1 )))):named a84 ))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun_tree$ )(?v1 Rat_tree$ ))(= (root$a (tree_ap$b ?v0 ?v1 ))(fun_app$j (root$h ?v0 )(root$ ?v1 )))):named a85 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (root$a (tree_ap$c ?v0 ?v1 ))(fun_app$f (root$i ?v0 )(root$a ?v1 )))):named a86 ))
(assert (! (forall ((?v0 Rat_rat_fun_rat_fun_tree$ )(?v1 Rat_rat_fun_tree$ ))(= (root$ (tree_ap$d ?v0 ?v1 ))(fun_app$k (root$j ?v0 )(root$f ?v1 )))):named a87 ))
(assert (! (forall ((?v0 Rat_rat_rat_fun_fun_tree$ )(?v1 Rat_tree$ ))(= (root$f (tree_ap$e ?v0 ?v1 ))(fun_app$ab (root$k ?v0 )(root$ ?v1 )))):named a88 ))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun_rat_fun_tree$ )(?v1 Rat_nat_nat_prod_fun_tree$ ))(= (root$ (tree_ap$f ?v0 ?v1 ))(root$l ?v0 (root$h ?v1 )))):named a89 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_tree$ ))(= (root$ (tree_ap$g ?v0 ?v1 ))(fun_app$g (root$m ?v0 )(root$g ?v1 )))):named a90 ))
(assert (! (forall ((?v0 Rat_rat_fun_nat_nat_prod_fun_tree$ )(?v1 Rat_rat_fun_tree$ ))(= (root$a (tree_ap$h ?v0 ?v1 ))(root$n ?v0 (root$f ?v1 )))):named a91 ))
(assert (! (forall ((?v0 Rat_rat_nat_nat_prod_fun_fun_tree$ )(?v1 Rat_tree$ ))(= (root$h (tree_ap$i ?v0 ?v1 ))(fun_app$ac (root$o ?v0 )(root$ ?v1 )))):named a92 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Nat_nat_prod_tree$ ))(= (tree_ap$ (tree_pure$ (uul$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a93 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Rat_tree$ ))(= (tree_ap$a (tree_pure$d (uum$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a94 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Rat_tree$ ))(= (tree_ap$b (tree_pure$e (uun$ ?v0 ))?v1 )(tree_pure$b ?v0 ))):named a95 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_tree$ ))(= (tree_ap$c (tree_pure$g (uuo$ ?v0 ))?v1 )(tree_pure$b ?v0 ))):named a96 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Nat_nat_prod_rat_fun_tree$ ))(= (tree_ap$g (tree_pure$f (uup$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a97 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_tree$ ))(= (tree_ap$j (tree_pure$h (uuq$ ?v0 ))?v1 )(tree_pure$ ?v0 ))):named a98 ))
(assert (! (forall ((?v0 Rat$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$u (tree_pure$p (uur$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a99 ))
(assert (! (forall ((?v0 Int )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$w (tree_pure$q (uus$ ?v0 ))?v1 )(tree_pure$c ?v0 ))):named a100 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$t (tree_pure$r (uut$ ?v0 ))?v1 )(tree_pure$ ?v0 ))):named a101 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$z (tree_pure$s (uuu$ ?v0 ))?v1 )(tree_pure$f ?v0 ))):named a102 ))
(assert (! (forall ((?v0 Rat$ ))(= (root$ (tree_pure$a ?v0 ))?v0 )):named a103 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(= (root$a (tree_pure$b ?v0 ))?v0 )):named a104 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun$ ))(= (root$g (tree_pure$ ?v0 ))?v0 )):named a105 ))
(assert (! (forall ((?v0 Int ))(= (root$b (tree_pure$c ?v0 ))?v0 )):named a106 ))
(assert (! (forall ((?v0 Rat_rat_fun$ ))(= (root$f (tree_pure$d ?v0 ))?v0 )):named a107 ))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun$ ))(= (root$h (tree_pure$e ?v0 ))?v0 )):named a108 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ ))(= (root$i (tree_pure$g ?v0 ))?v0 )):named a109 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun$ ))(= (root$m (tree_pure$f ?v0 ))?v0 )):named a110 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (root$p (tree_pure$h ?v0 ))?v0 )):named a111 ))
(assert (! (forall ((?v0 Rat_rat_fun_rat_fun$ ))(= (root$j (tree_pure$i ?v0 ))?v0 )):named a112 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod$ ))(= (tree_ap$ ?v0 (tree_pure$b ?v2 ))(tree_ap$ ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a113 ))
(assert (! (forall ((?v0 Rat_rat_fun_tree$ )(?v1 Rat_rat_fun_tree$ ))(=> (forall ((?v2 Rat$ ))(= (tree_ap$a ?v0 (tree_pure$a ?v2 ))(tree_ap$a ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a114 ))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun_tree$ )(?v1 Rat_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Rat$ ))(= (tree_ap$b ?v0 (tree_pure$a ?v2 ))(tree_ap$b ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a115 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_rat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun$ ))(= (tree_ap$g ?v0 (tree_pure$ ?v2 ))(tree_ap$g ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a116 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod$ ))(= (tree_ap$c ?v0 (tree_pure$b ?v2 ))(tree_ap$c ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a117 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun$ ))(= (tree_ap$j ?v0 (tree_pure$ ?v2 ))(tree_ap$j ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a118 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$u ?v0 (tree_pure$h ?v2 ))(tree_ap$u ?v1 (tree_pure$h ?v2 ))))(= ?v0 ?v1 ))):named a119 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$w ?v0 (tree_pure$h ?v2 ))(tree_ap$w ?v1 (tree_pure$h ?v2 ))))(= ?v0 ?v1 ))):named a120 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$t ?v0 (tree_pure$h ?v2 ))(tree_ap$t ?v1 (tree_pure$h ?v2 ))))(= ?v0 ?v1 ))):named a121 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun$ ))(= (tree_ap$z ?v0 (tree_pure$h ?v2 ))(tree_ap$z ?v1 (tree_pure$h ?v2 ))))(= ?v0 ?v1 ))):named a122 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_tree$ ))(= (tree_ap$ ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))(= ?v0 ?v1 ))):named a123 ))
(assert (! (forall ((?v0 Rat_rat_fun_tree$ )(?v1 Rat_rat_fun_tree$ ))(=> (forall ((?v2 Rat_tree$ ))(= (tree_ap$a ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))(= ?v0 ?v1 ))):named a124 ))
(assert (! (forall ((?v0 Rat_nat_nat_prod_fun_tree$ )(?v1 Rat_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Rat_tree$ ))(= (tree_ap$b ?v0 ?v2 )(tree_ap$b ?v1 ?v2 )))(= ?v0 ?v1 ))):named a125 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_tree$ ))(= (tree_ap$c ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))(= ?v0 ?v1 ))):named a126 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_rat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_tree$ ))(= (tree_ap$g ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))(= ?v0 ?v1 ))):named a127 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_tree$ ))(= (tree_ap$j ?v0 ?v2 )(tree_ap$j ?v1 ?v2 )))(= ?v0 ?v1 ))):named a128 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_rat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$u ?v0 ?v2 )(tree_ap$u ?v1 ?v2 )))(= ?v0 ?v1 ))):named a129 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_int_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$w ?v0 ?v2 )(tree_ap$w ?v1 ?v2 )))(= ?v0 ?v1 ))):named a130 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$t ?v0 ?v2 )(tree_ap$t ?v1 ?v2 )))(= ?v0 ?v1 ))):named a131 ))
(assert (! (forall ((?v0 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ )(?v1 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_nat_nat_prod_rat_fun_rat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_rat_fun_nat_nat_prod_rat_fun_fun_tree$ ))(= (tree_ap$z ?v0 ?v2 )(tree_ap$z ?v1 ?v2 )))(= ?v0 ?v1 ))):named a132 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$b ?v0 )(of_nat$b ?v1 ))(= ?v0 ?v1 ))):named a133 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$f ?v0 )(of_nat$f ?v1 ))(= ?v0 ?v1 ))):named a134 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$d ?v0 )(of_nat$d ?v1 ))(= ?v0 ?v1 ))):named a135 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$e ?v0 )(of_nat$e ?v1 ))(= ?v0 ?v1 ))):named a136 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$ ?v0 )(of_nat$ ?v1 ))(= ?v0 ?v1 ))):named a137 ))
(check-sat )
;(get-unsat-core )
