;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_tree_set$ 0 )
(declare-sort A_a_fun_set$ 0 )
(declare-sort A_a_tree_fun$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_tree_a_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_a_tree_fun_set$ 0 )
(declare-sort A_a_a_fun_fun_set$ 0 )
(declare-sort A_a_fun_a_fun_set$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_tree_stream_set$ 0 )
(declare-sort A_a_a_tree_fun_fun$ 0 )
(declare-sort A_a_fun_a_tree_fun$ 0 )
(declare-sort A_a_fun_stream_set$ 0 )
(declare-sort A_tree_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_a_tree_fun_stream_set$ 0 )
(declare-sort A_a_a_fun_fun_stream_set$ 0 )
(declare-sort A_a_fun_a_fun_stream_set$ 0 )
(declare-sort A_tree_stream_stream_set$ 0 )
(declare-sort A_a_fun_stream_stream_set$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_tree_tree_a_tree_tree_fun$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_tree_fun$ 0 )
(declare-sort A_a_tree_fun_a_a_tree_fun_fun$ 0 )
(declare-sort A_tree_a_fun_a_tree_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_tree_stream_a_tree_stream_fun$ 0 )
(declare-sort A_a_fun_stream_a_a_fun_stream_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_fun$ 0 )
(declare-sort A_a_tree_fun_tree_a_a_tree_fun_tree_fun$ 0 )
(declare-sort A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ 0 )
(declare-sort A_a_a_tree_fun_fun_a_a_a_tree_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_tree_a_a_fun_a_fun_tree_fun$ 0 )
(declare-sort A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ 0 )
(declare-sort A_tree_a_a_fun_fun_a_tree_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_tree_fun_tree_a_a_fun_a_tree_fun_tree_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_tree$ 0)
(declare-sort A_a_fun_stream$ 0)
(declare-sort A_tree_a_fun_stream$ 0)
(declare-sort A_tree_stream$ 0)
(declare-sort A_a_tree_fun_stream$ 0)
(declare-sort A_tree_a_tree_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_fun_stream$ 0)
(declare-sort A_tree_a_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_tree_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_fun_stream$ 0)
(declare-sort A_a_a_tree_fun_fun_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-sort A_tree_stream_stream$ 0)
(declare-sort A_a_fun_stream_stream$ 0)
(declare-sort A_a_fun_a_tree_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_tree$ 0)
(declare-sort A_a_tree_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_tree$ 0)
(declare-sort A_a_fun_tree$ 0)
(declare-sort A_tree_tree$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun root$ (A_tree$)A$)
(declare-fun left$ (A_tree$)A_tree$)
(declare-fun right$ (A_tree$)A_tree$)
(declare-fun node$ (A$ A_tree$ A_tree$ )A_tree$)
(declare-fun select$ (A_a_fun_stream$)A_a_fun$)
(declare-fun selecta$ (A_a_fun_stream$)A_a_fun_stream$)
(declare-fun sCons$a (A_a_fun$ A_a_fun_stream$ )A_a_fun_stream$)
(declare-fun selectb$ (A_tree_a_fun_stream$)A_tree_a_fun$)
(declare-fun selectc$ (A_tree_a_fun_stream$)A_tree_a_fun_stream$)
(declare-fun sCons$b (A_tree_a_fun$ A_tree_a_fun_stream$ )A_tree_a_fun_stream$)
(declare-fun shd$a (A_tree_stream$)A_tree$)
(declare-fun stl$a (A_tree_stream$)A_tree_stream$)
(declare-fun sCons$c (A_tree$ A_tree_stream$ )A_tree_stream$)
(declare-fun selectd$ (A_a_tree_fun_stream$)A_a_tree_fun$)
(declare-fun selecte$ (A_a_tree_fun_stream$)A_a_tree_fun_stream$)
(declare-fun sCons$d (A_a_tree_fun$ A_a_tree_fun_stream$ )A_a_tree_fun_stream$)
(declare-fun selectf$ (A_tree_a_tree_fun_stream$)A_tree_a_tree_fun$)
(declare-fun selectg$ (A_tree_a_tree_fun_stream$)A_tree_a_tree_fun_stream$)
(declare-fun sCons$e (A_tree_a_tree_fun$ A_tree_a_tree_fun_stream$ )A_tree_a_tree_fun_stream$)
(declare-fun selecth$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun$)
(declare-fun selecti$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun_stream$)
(declare-fun sCons$f (A_a_a_fun_fun$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$)
(declare-fun selectj$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun$)
(declare-fun selectk$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun_stream$)
(declare-fun sCons$g (A_a_fun_a_fun$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$)
(declare-fun selectl$ (A_tree_a_a_fun_fun_stream$)A_tree_a_a_fun_fun$)
(declare-fun selectm$ (A_tree_a_a_fun_fun_stream$)A_tree_a_a_fun_fun_stream$)
(declare-fun sCons$h (A_tree_a_a_fun_fun$ A_tree_a_a_fun_fun_stream$ )A_tree_a_a_fun_fun_stream$)
(declare-fun selectn$ (A_a_fun_a_tree_fun_stream$)A_a_fun_a_tree_fun$)
(declare-fun selecto$ (A_a_fun_a_tree_fun_stream$)A_a_fun_a_tree_fun_stream$)
(declare-fun sCons$i (A_a_fun_a_tree_fun$ A_a_fun_a_tree_fun_stream$ )A_a_fun_a_tree_fun_stream$)
(declare-fun selectp$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun$)
(declare-fun selectq$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun_stream$)
(declare-fun sCons$j (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$)
(declare-fun selectr$ (A_a_a_tree_fun_fun_stream$)A_a_a_tree_fun_fun$)
(declare-fun selects$ (A_a_a_tree_fun_fun_stream$)A_a_a_tree_fun_fun_stream$)
(declare-fun sCons$k (A_a_a_tree_fun_fun$ A_a_a_tree_fun_fun_stream$ )A_a_a_tree_fun_fun_stream$)
(declare-fun shd$b (A_stream_stream$)A_stream$)
(declare-fun stl$b (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$l (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$c (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$c (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$m (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun shd$d (A_tree_stream_stream$)A_tree_stream$)
(declare-fun stl$d (A_tree_stream_stream$)A_tree_stream_stream$)
(declare-fun sCons$n (A_tree_stream$ A_tree_stream_stream$ )A_tree_stream_stream$)
(declare-fun shd$e (A_a_fun_stream_stream$)A_a_fun_stream$)
(declare-fun stl$e (A_a_fun_stream_stream$)A_a_fun_stream_stream$)
(declare-fun sCons$o (A_a_fun_stream$ A_a_fun_stream_stream$ )A_a_fun_stream_stream$)
(declare-fun selectt$ (A_a_fun_a_tree_fun_tree$)A_a_fun_a_tree_fun$)
(declare-fun selectu$ (A_a_fun_a_tree_fun_tree$)A_a_fun_a_tree_fun_tree$)
(declare-fun selectv$ (A_a_fun_a_tree_fun_tree$)A_a_fun_a_tree_fun_tree$)
(declare-fun node$a (A_a_fun_a_tree_fun$ A_a_fun_a_tree_fun_tree$ A_a_fun_a_tree_fun_tree$ )A_a_fun_a_tree_fun_tree$)
(declare-fun selectw$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun$)
(declare-fun selectx$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun_tree$)
(declare-fun selecty$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun_tree$)
(declare-fun node$b (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$)
(declare-fun selectz$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun$)
(declare-fun selecua$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun_tree$)
(declare-fun selecub$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun_tree$)
(declare-fun node$c (A_a_fun_a_fun$ A_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$)
(declare-fun selecuc$ (A_a_tree_fun_tree$)A_a_tree_fun$)
(declare-fun selecud$ (A_a_tree_fun_tree$)A_a_tree_fun_tree$)
(declare-fun selecue$ (A_a_tree_fun_tree$)A_a_tree_fun_tree$)
(declare-fun node$d (A_a_tree_fun$ A_a_tree_fun_tree$ A_a_tree_fun_tree$ )A_a_tree_fun_tree$)
(declare-fun selecuf$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun$)
(declare-fun selecug$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun selecuh$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun node$e (A_a_a_fun_fun$ A_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$)
(declare-fun selecui$ (A_a_fun_tree$)A_a_fun$)
(declare-fun selecuj$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun selecuk$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun node$f (A_a_fun$ A_a_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$)
(declare-fun root$a (A_tree_tree$)A_tree$)
(declare-fun left$a (A_tree_tree$)A_tree_tree$)
(declare-fun right$a (A_tree_tree$)A_tree_tree$)
(declare-fun node$g (A_tree$ A_tree_tree$ A_tree_tree$ )A_tree_tree$)
(declare-fun x$ ()A$ )
(declare-fun y$ ()A$ )
(declare-fun id$ ()A_a_fun$ )
(declare-fun id$a ()A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ )
(declare-fun id$b ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun id$c ()A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun id$d ()A_a_tree_fun_a_a_tree_fun_fun$ )
(declare-fun id$e ()A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun id$f ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$g ()A_tree_a_tree_fun$ )
(declare-fun id$h ()A_tree_a_fun_a_tree_a_fun_fun$ )
(declare-fun id$i ()A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ )
(declare-fun id$j ()A_tree_a_a_fun_fun_a_tree_a_a_fun_fun_fun$ )
(declare-fun id$k ()A_a_a_tree_fun_fun_a_a_a_tree_fun_fun_fun$ )
(declare-fun id$l ()A_stream_a_stream_fun$ )
(declare-fun id$m ()A_stream_stream_a_stream_stream_fun$ )
(declare-fun id$n ()A_tree_stream_a_tree_stream_fun$ )
(declare-fun id$o ()A_a_fun_stream_a_a_fun_stream_fun$ )
(declare-fun id$p ()A_a_fun_a_tree_fun_tree_a_a_fun_a_tree_fun_tree_fun$ )
(declare-fun id$q ()A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ )
(declare-fun id$r ()A_a_fun_a_fun_tree_a_a_fun_a_fun_tree_fun$ )
(declare-fun id$s ()A_a_tree_fun_tree_a_a_tree_fun_tree_fun$ )
(declare-fun id$t ()A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ )
(declare-fun id$u ()A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun id$v ()A_tree_tree_a_tree_tree_fun$ )
(declare-fun smap$ (A_a_fun$ A_stream$ )A_stream$ )
(declare-fun smap$a (A_tree_a_fun$ A_tree_stream$ )A_stream$ )
(declare-fun smap$b (A_a_tree_fun$ A_stream$ )A_tree_stream$ )
(declare-fun smap$c (A_tree_a_tree_fun$ A_tree_stream$ )A_tree_stream$ )
(declare-fun smap$d (A_a_a_fun_fun$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap$e (A_a_fun_a_fun$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap$f (A_tree_a_a_fun_fun$ A_tree_stream$ )A_a_fun_stream$ )
(declare-fun smap$g (A_a_fun_a_tree_fun$ A_a_fun_stream$ )A_tree_stream$ )
(declare-fun smap$h (A_a_fun_a_a_fun_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap$i (A_a_a_tree_fun_fun$ A_stream$ )A_a_tree_fun_stream$ )
(declare-fun smap$j (A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ A_a_fun_a_tree_fun_stream$ )A_a_fun_a_tree_fun_stream$ )
(declare-fun smap$k (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun smap$l (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun smap$m (A_a_tree_fun_a_a_tree_fun_fun$ A_a_tree_fun_stream$ )A_a_tree_fun_stream$ )
(declare-fun smap$n (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun st_ap$ (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun st_ap$a (A_tree_a_fun_stream$ A_tree_stream$ )A_stream$ )
(declare-fun st_ap$b (A_a_tree_fun_stream$ A_stream$ )A_tree_stream$ )
(declare-fun st_ap$c (A_tree_a_tree_fun_stream$ A_tree_stream$ )A_tree_stream$ )
(declare-fun st_ap$d (A_a_a_fun_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$e (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$f (A_tree_a_a_fun_fun_stream$ A_tree_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$g (A_a_fun_a_tree_fun_stream$ A_a_fun_stream$ )A_tree_stream$ )
(declare-fun st_ap$h (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$i (A_a_a_tree_fun_fun_stream$ A_stream$ )A_a_tree_fun_stream$ )
(declare-fun fun_app$ (A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ A_a_fun_a_tree_fun$ )A_a_fun_a_tree_fun$ )
(declare-fun member$a (A_stream$ A_stream_set$ )Bool )
(declare-fun member$b (A_tree$ A_tree_set$ )Bool )
(declare-fun member$c (A_tree_stream$ A_tree_stream_set$ )Bool )
(declare-fun member$d (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$e (A_a_fun$ A_a_fun_set$ )Bool )
(declare-fun member$f (A_a_fun_stream$ A_a_fun_stream_set$ )Bool )
(declare-fun member$g (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun member$h (A_tree_stream_stream$ A_tree_stream_stream_set$ )Bool )
(declare-fun member$i (A_a_fun_stream_stream$ A_a_fun_stream_stream_set$ )Bool )
(declare-fun member$j (A_a_tree_fun$ A_a_tree_fun_set$ )Bool )
(declare-fun member$k (A_a_tree_fun_stream$ A_a_tree_fun_stream_set$ )Bool )
(declare-fun member$l (A_a_fun_a_fun$ A_a_fun_a_fun_set$ )Bool )
(declare-fun member$m (A_a_fun_a_fun_stream$ A_a_fun_a_fun_stream_set$ )Bool )
(declare-fun member$n (A_a_a_fun_fun$ A_a_a_fun_fun_set$ )Bool )
(declare-fun member$o (A_a_a_fun_fun_stream$ A_a_a_fun_fun_stream_set$ )Bool )
(declare-fun streams$ (A_set$ )A_stream_set$ )
(declare-fun fun_app$a (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$b (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun$ )
(declare-fun fun_app$c (A_a_tree_fun_a_a_tree_fun_fun$ A_a_tree_fun$ )A_a_tree_fun$ )
(declare-fun fun_app$d (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$e (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$f (A_tree_a_tree_fun$ A_tree$ )A_tree$ )
(declare-fun fun_app$g (A_a_fun$ A$ )A$ )
(declare-fun fun_app$h (A_tree_a_fun$ A_tree$ )A$ )
(declare-fun fun_app$i (A_a_tree_fun$ A$ )A_tree$ )
(declare-fun fun_app$j (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$k (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$l (A_tree_a_a_fun_fun$ A_tree$ )A_a_fun$ )
(declare-fun fun_app$m (A_a_fun_a_tree_fun$ A_a_fun$ )A_tree$ )
(declare-fun fun_app$n (A_a_a_tree_fun_fun$ A$ )A_a_tree_fun$ )
(declare-fun fun_app$o (A_a_fun_a_tree_fun_tree_a_a_fun_a_tree_fun_tree_fun$ A_a_fun_a_tree_fun_tree$ )A_a_fun_a_tree_fun_tree$ )
(declare-fun fun_app$p (A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun fun_app$q (A_a_fun_a_fun_tree_a_a_fun_a_fun_tree_fun$ A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun fun_app$r (A_a_tree_fun_tree_a_a_tree_fun_tree_fun$ A_a_tree_fun_tree$ )A_a_tree_fun_tree$ )
(declare-fun fun_app$s (A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun fun_app$t (A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun fun_app$u (A_tree_tree_a_tree_tree_fun$ A_tree_tree$ )A_tree_tree$ )
(declare-fun map_tree$ (A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ )A_a_fun_a_tree_fun_tree_a_a_fun_a_tree_fun_tree_fun$ )
(declare-fun siterate$ (A_a_fun$ A$ )A_stream$ )
(declare-fun streams$a (A_tree_set$ )A_tree_stream_set$ )
(declare-fun streams$b (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$c (A_a_fun_set$ )A_a_fun_stream_set$ )
(declare-fun streams$d (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun streams$e (A_tree_stream_set$ )A_tree_stream_stream_set$ )
(declare-fun streams$f (A_a_fun_stream_set$ )A_a_fun_stream_stream_set$ )
(declare-fun streams$g (A_a_tree_fun_set$ )A_a_tree_fun_stream_set$ )
(declare-fun streams$h (A_a_fun_a_fun_set$ )A_a_fun_a_fun_stream_set$ )
(declare-fun streams$i (A_a_a_fun_fun_set$ )A_a_a_fun_fun_stream_set$ )
(declare-fun map_tree$a (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ )
(declare-fun map_tree$b (A_a_fun_a_fun_a_a_fun_a_fun_fun$ )A_a_fun_a_fun_tree_a_a_fun_a_fun_tree_fun$ )
(declare-fun map_tree$c (A_a_tree_fun_a_a_tree_fun_fun$ )A_a_tree_fun_tree_a_a_tree_fun_tree_fun$ )
(declare-fun map_tree$d (A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ )
(declare-fun map_tree$e (A_a_fun_a_a_fun_fun$ )A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun map_tree$f (A_tree_a_tree_fun$ )A_tree_tree_a_tree_tree_fun$ )
(declare-fun map_tree$g (A_a_fun$ )A_tree_a_tree_fun$ )
(declare-fun siterate$a (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$b (A_tree_a_fun_a_tree_a_fun_fun$ A_tree_a_fun$ )A_tree_a_fun_stream$ )
(declare-fun siterate$c (A_tree_a_tree_fun$ A_tree$ )A_tree_stream$ )
(declare-fun siterate$d (A_a_tree_fun_a_a_tree_fun_fun$ A_a_tree_fun$ )A_a_tree_fun_stream$ )
(declare-fun siterate$e (A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ A_tree_a_tree_fun$ )A_tree_a_tree_fun_stream$ )
(declare-fun siterate$f (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun_stream$ )
(declare-fun siterate$g (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun_stream$ )
(declare-fun siterate$h (A_tree_a_a_fun_fun_a_tree_a_a_fun_fun_fun$ A_tree_a_a_fun_fun$ )A_tree_a_a_fun_fun_stream$ )
(declare-fun siterate$i (A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ A_a_fun_a_tree_fun$ )A_a_fun_a_tree_fun_stream$ )
(declare-fun siterate$j (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$k (A_a_a_tree_fun_fun_a_a_a_tree_fun_fun_fun$ A_a_a_tree_fun_fun$ )A_a_a_tree_fun_fun_stream$ )
(declare-fun siterate$l (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun siterate$m (A_stream_stream_a_stream_stream_fun$ A_stream_stream$ )A_stream_stream_stream$ )
(declare-fun siterate$n (A_tree_stream_a_tree_stream_fun$ A_tree_stream$ )A_tree_stream_stream$ )
(declare-fun siterate$o (A_a_fun_stream_a_a_fun_stream_fun$ A_a_fun_stream$ )A_a_fun_stream_stream$ )
(declare-fun iso_tuple_surjective_proof_assist$ (A_a_fun_a_tree_fun$ A_a_fun_a_tree_fun$ A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ )Bool )
(declare-fun iso_tuple_surjective_proof_assist$a (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_surjective_proof_assist$b (A_a_fun_a_fun$ A_a_fun_a_fun$ A_a_fun_a_fun_a_a_fun_a_fun_fun$ )Bool )
(declare-fun iso_tuple_surjective_proof_assist$c (A_a_tree_fun$ A_a_tree_fun$ A_a_tree_fun_a_a_tree_fun_fun$ )Bool )
(declare-fun iso_tuple_surjective_proof_assist$d (A_a_a_fun_fun$ A_a_a_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_surjective_proof_assist$e (A_a_fun$ A_a_fun$ A_a_fun_a_a_fun_fun$ )Bool )
(declare-fun iso_tuple_surjective_proof_assist$f (A_tree$ A_tree$ A_tree_a_tree_fun$ )Bool )
(declare-fun iso_tuple_surjective_proof_assist$g (A$ A$ A_a_fun$ )Bool )
(assert (! (not (= (= (siterate$ id$ x$ )(siterate$ id$ y$ ))(= x$ y$ ))):named a0 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun$ ))(! (= (fun_app$ id$a ?v0 )?v0 ):pattern ((fun_app$ id$a ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(! (= (fun_app$a id$b ?v0 )?v0 ):pattern ((fun_app$a id$b ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ ))(! (= (fun_app$b id$c ?v0 )?v0 ):pattern ((fun_app$b id$c ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_a_tree_fun$ ))(! (= (fun_app$c id$d ?v0 )?v0 ):pattern ((fun_app$c id$d ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$d id$e ?v0 )?v0 ):pattern ((fun_app$d id$e ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$e id$f ?v0 )?v0 ):pattern ((fun_app$e id$f ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_tree$ ))(! (= (fun_app$f id$g ?v0 )?v0 ):pattern ((fun_app$f id$g ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$g id$ ?v0 )?v0 ):pattern ((fun_app$g id$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (st_ap$ (siterate$a id$f ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$g ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_tree_a_fun$ )(?v1 A_tree$ ))(= (st_ap$a (siterate$b id$h ?v0 )(siterate$c id$g ?v1 ))(siterate$ id$ (fun_app$h ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A$ ))(= (st_ap$b (siterate$d id$d ?v0 )(siterate$ id$ ?v1 ))(siterate$c id$g (fun_app$i ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree$ ))(= (st_ap$c (siterate$e id$i ?v0 )(siterate$c id$g ?v1 ))(siterate$c id$g (fun_app$f ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (st_ap$d (siterate$f id$e ?v0 )(siterate$ id$ ?v1 ))(siterate$a id$f (fun_app$j ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (st_ap$e (siterate$g id$c ?v0 )(siterate$a id$f ?v1 ))(siterate$ id$ (fun_app$k ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_tree_a_a_fun_fun$ )(?v1 A_tree$ ))(= (st_ap$f (siterate$h id$j ?v0 )(siterate$c id$g ?v1 ))(siterate$a id$f (fun_app$l ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun$ )(?v1 A_a_fun$ ))(= (st_ap$g (siterate$i id$a ?v0 )(siterate$a id$f ?v1 ))(siterate$c id$g (fun_app$m ?v0 ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (st_ap$h (siterate$j id$b ?v0 )(siterate$a id$f ?v1 ))(siterate$a id$f (fun_app$e ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_a_a_tree_fun_fun$ )(?v1 A$ ))(= (st_ap$i (siterate$k id$k ?v0 )(siterate$ id$ ?v1 ))(siterate$d id$d (fun_app$n ?v0 ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun$ ))(! (= (fun_app$ id$a ?v0 )?v0 ):pattern ((fun_app$ id$a ?v0 )))):named a19 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(! (= (fun_app$a id$b ?v0 )?v0 ):pattern ((fun_app$a id$b ?v0 )))):named a20 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ ))(! (= (fun_app$b id$c ?v0 )?v0 ):pattern ((fun_app$b id$c ?v0 )))):named a21 ))
(assert (! (forall ((?v0 A_a_tree_fun$ ))(! (= (fun_app$c id$d ?v0 )?v0 ):pattern ((fun_app$c id$d ?v0 )))):named a22 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$d id$e ?v0 )?v0 ):pattern ((fun_app$d id$e ?v0 )))):named a23 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$e id$f ?v0 )?v0 ):pattern ((fun_app$e id$f ?v0 )))):named a24 ))
(assert (! (forall ((?v0 A_tree$ ))(! (= (fun_app$f id$g ?v0 )?v0 ):pattern ((fun_app$f id$g ?v0 )))):named a25 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$g id$ ?v0 )?v0 ):pattern ((fun_app$g id$ ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ ))(=> (member$ ?v0 ?v1 )(member$a (siterate$ id$ ?v0 )(streams$ ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree_set$ ))(=> (member$b ?v0 ?v1 )(member$c (siterate$c id$g ?v0 )(streams$a ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_set$ ))(=> (member$a ?v0 ?v1 )(member$d (siterate$l id$l ?v0 )(streams$b ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_set$ ))(=> (member$e ?v0 ?v1 )(member$f (siterate$a id$f ?v0 )(streams$c ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$d ?v0 ?v1 )(member$g (siterate$m id$m ?v0 )(streams$d ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_tree_stream$ )(?v1 A_tree_stream_set$ ))(=> (member$c ?v0 ?v1 )(member$h (siterate$n id$n ?v0 )(streams$e ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_stream_set$ ))(=> (member$f ?v0 ?v1 )(member$i (siterate$o id$o ?v0 )(streams$f ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A_a_tree_fun_set$ ))(=> (member$j ?v0 ?v1 )(member$k (siterate$d id$d ?v0 )(streams$g ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_set$ ))(=> (member$l ?v0 ?v1 )(member$m (siterate$g id$c ?v0 )(streams$h ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun_set$ ))(=> (member$n ?v0 ?v1 )(member$o (siterate$f id$e ?v0 )(streams$i ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (smap$ ?v0 (siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$g ?v0 ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_tree_a_fun$ )(?v1 A_tree$ ))(= (smap$a ?v0 (siterate$c id$g ?v1 ))(siterate$ id$ (fun_app$h ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A$ ))(= (smap$b ?v0 (siterate$ id$ ?v1 ))(siterate$c id$g (fun_app$i ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree$ ))(= (smap$c ?v0 (siterate$c id$g ?v1 ))(siterate$c id$g (fun_app$f ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (smap$d ?v0 (siterate$ id$ ?v1 ))(siterate$a id$f (fun_app$j ?v0 ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (smap$e ?v0 (siterate$a id$f ?v1 ))(siterate$ id$ (fun_app$k ?v0 ?v1 )))):named a42 ))
(assert (! (forall ((?v0 A_tree_a_a_fun_fun$ )(?v1 A_tree$ ))(= (smap$f ?v0 (siterate$c id$g ?v1 ))(siterate$a id$f (fun_app$l ?v0 ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun$ )(?v1 A_a_fun$ ))(= (smap$g ?v0 (siterate$a id$f ?v1 ))(siterate$c id$g (fun_app$m ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (smap$h ?v0 (siterate$a id$f ?v1 ))(siterate$a id$f (fun_app$e ?v0 ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_a_a_tree_fun_fun$ )(?v1 A$ ))(= (smap$i ?v0 (siterate$ id$ ?v1 ))(siterate$d id$d (fun_app$n ?v0 ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun_a_a_fun_a_tree_fun_fun$ )(?v1 A_a_fun_a_tree_fun$ ))(= (smap$j ?v0 (siterate$i ?v0 ?v1 ))(siterate$i ?v0 (fun_app$ ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun$ ))(= (smap$k ?v0 (siterate$j ?v0 ?v1 ))(siterate$j ?v0 (fun_app$a ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_a_fun_a_fun_fun$ )(?v1 A_a_fun_a_fun$ ))(= (smap$l ?v0 (siterate$g ?v0 ?v1 ))(siterate$g ?v0 (fun_app$b ?v0 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_a_tree_fun_a_a_tree_fun_fun$ )(?v1 A_a_tree_fun$ ))(= (smap$m ?v0 (siterate$d ?v0 ?v1 ))(siterate$d ?v0 (fun_app$c ?v0 ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (smap$n ?v0 (siterate$f ?v0 ?v1 ))(siterate$f ?v0 (fun_app$d ?v0 ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (smap$h ?v0 (siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$e ?v0 ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (smap$ ?v0 (siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$g ?v0 ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun_tree$ ))(= (fun_app$o (map_tree$ id$a )?v0 )?v0 )):named a54 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ ))(= (fun_app$p (map_tree$a id$b )?v0 )?v0 )):named a55 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ ))(= (fun_app$q (map_tree$b id$c )?v0 )?v0 )):named a56 ))
(assert (! (forall ((?v0 A_a_tree_fun_tree$ ))(= (fun_app$r (map_tree$c id$d )?v0 )?v0 )):named a57 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ ))(= (fun_app$s (map_tree$d id$e )?v0 )?v0 )):named a58 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(= (fun_app$t (map_tree$e id$f )?v0 )?v0 )):named a59 ))
(assert (! (forall ((?v0 A_tree_tree$ ))(= (fun_app$u (map_tree$f id$g )?v0 )?v0 )):named a60 ))
(assert (! (forall ((?v0 A_tree$ ))(= (fun_app$f (map_tree$g id$ )?v0 )?v0 )):named a61 ))
(assert (! (= (map_tree$ id$a )id$p ):named a62 ))
(assert (! (= (map_tree$a id$b )id$q ):named a63 ))
(assert (! (= (map_tree$b id$c )id$r ):named a64 ))
(assert (! (= (map_tree$c id$d )id$s ):named a65 ))
(assert (! (= (map_tree$d id$e )id$t ):named a66 ))
(assert (! (= (map_tree$e id$f )id$u ):named a67 ))
(assert (! (= (map_tree$f id$g )id$v ):named a68 ))
(assert (! (= (map_tree$g id$ )id$g ):named a69 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun$ )(?v1 A_a_fun_a_tree_fun$ ))(=> (iso_tuple_surjective_proof_assist$ ?v0 ?v1 id$a )(= ?v0 ?v1 ))):named a70 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun$ ))(=> (iso_tuple_surjective_proof_assist$a ?v0 ?v1 id$b )(= ?v0 ?v1 ))):named a71 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun$ ))(=> (iso_tuple_surjective_proof_assist$b ?v0 ?v1 id$c )(= ?v0 ?v1 ))):named a72 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A_a_tree_fun$ ))(=> (iso_tuple_surjective_proof_assist$c ?v0 ?v1 id$d )(= ?v0 ?v1 ))):named a73 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(=> (iso_tuple_surjective_proof_assist$d ?v0 ?v1 id$e )(= ?v0 ?v1 ))):named a74 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(=> (iso_tuple_surjective_proof_assist$e ?v0 ?v1 id$f )(= ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(=> (iso_tuple_surjective_proof_assist$f ?v0 ?v1 id$g )(= ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (iso_tuple_surjective_proof_assist$g ?v0 ?v1 id$ )(= ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ )(?v2 A_tree_a_tree_fun$ ))(! (= (iso_tuple_surjective_proof_assist$f ?v0 ?v1 ?v2 )(= (fun_app$f ?v2 ?v0 )?v1 )):pattern ((iso_tuple_surjective_proof_assist$f ?v0 ?v1 ?v2 )))):named a78 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_a_a_fun_fun$ ))(! (= (iso_tuple_surjective_proof_assist$e ?v0 ?v1 ?v2 )(= (fun_app$e ?v2 ?v0 )?v1 )):pattern ((iso_tuple_surjective_proof_assist$e ?v0 ?v1 ?v2 )))):named a79 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_a_fun$ ))(! (= (iso_tuple_surjective_proof_assist$g ?v0 ?v1 ?v2 )(= (fun_app$g ?v2 ?v0 )?v1 )):pattern ((iso_tuple_surjective_proof_assist$g ?v0 ?v1 ?v2 )))):named a80 ))
(check-sat )
;(get-unsat-core )
