;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_tree$ 0)
(declare-sort A_tree_tree$ 0)
(declare-sort A_tree_tree_tree$ 0)
(declare-sort A_tree_tree_tree_tree$ 0)
(declare-sort A_stream_tree$ 0)
(declare-sort A_stream_tree_tree$ 0)
(declare-sort A_stream_tree_tree_tree$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun root$ (A_tree$)A$)
(declare-fun left$ (A_tree$)A_tree$)
(declare-fun right$ (A_tree$)A_tree$)
(declare-fun node$ (A$ A_tree$ A_tree$ )A_tree$)
(declare-fun root$a (A_tree_tree$)A_tree$)
(declare-fun left$a (A_tree_tree$)A_tree_tree$)
(declare-fun right$a (A_tree_tree$)A_tree_tree$)
(declare-fun node$a (A_tree$ A_tree_tree$ A_tree_tree$ )A_tree_tree$)
(declare-fun root$b (A_tree_tree_tree$)A_tree_tree$)
(declare-fun left$b (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun right$b (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun node$b (A_tree_tree$ A_tree_tree_tree$ A_tree_tree_tree$ )A_tree_tree_tree$)
(declare-fun root$c (A_tree_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun left$c (A_tree_tree_tree_tree$)A_tree_tree_tree_tree$)
(declare-fun right$c (A_tree_tree_tree_tree$)A_tree_tree_tree_tree$)
(declare-fun node$c (A_tree_tree_tree$ A_tree_tree_tree_tree$ A_tree_tree_tree_tree$ )A_tree_tree_tree_tree$)
(declare-fun root$d (A_stream_tree$)A_stream$)
(declare-fun left$d (A_stream_tree$)A_stream_tree$)
(declare-fun right$d (A_stream_tree$)A_stream_tree$)
(declare-fun node$d (A_stream$ A_stream_tree$ A_stream_tree$ )A_stream_tree$)
(declare-fun root$e (A_stream_tree_tree$)A_stream_tree$)
(declare-fun left$e (A_stream_tree_tree$)A_stream_tree_tree$)
(declare-fun right$e (A_stream_tree_tree$)A_stream_tree_tree$)
(declare-fun node$e (A_stream_tree$ A_stream_tree_tree$ A_stream_tree_tree$ )A_stream_tree_tree$)
(declare-fun root$f (A_stream_tree_tree_tree$)A_stream_tree_tree$)
(declare-fun left$f (A_stream_tree_tree_tree$)A_stream_tree_tree_tree$)
(declare-fun right$f (A_stream_tree_tree_tree$)A_stream_tree_tree_tree$)
(declare-fun node$f (A_stream_tree_tree$ A_stream_tree_tree_tree$ A_stream_tree_tree_tree$ )A_stream_tree_tree_tree$)
(declare-fun t$ ()A_tree$ )
(declare-fun t$a ()A_tree$ )
(declare-fun plus$ (A_tree$ A_tree$ )A_tree$ )
(declare-fun plus$a (A_stream$ A_stream$ )A_stream$ )
(declare-fun plus$b (A_tree_tree_tree_tree$ A_tree_tree_tree_tree$ )A_tree_tree_tree_tree$ )
(declare-fun plus$c (A_tree_tree_tree$ A_tree_tree_tree$ )A_tree_tree_tree$ )
(declare-fun plus$d (A_stream_tree_tree_tree$ A_stream_tree_tree_tree$ )A_stream_tree_tree_tree$ )
(declare-fun plus$e (A_stream_tree_tree$ A_stream_tree_tree$ )A_stream_tree_tree$ )
(declare-fun plus$f (A_stream_tree$ A_stream_tree$ )A_stream_tree$ )
(declare-fun plus$g (A_tree_tree$ A_tree_tree$ )A_tree_tree$ )
(declare-fun plus$h (A$ A$ )A$ )
(declare-fun stream$ (A_tree$ )A_stream$ )
(assert (! (not (= (stream$ (plus$ t$ t$a ))(plus$a (stream$ t$ )(stream$ t$a )))):named a0 ))
(assert (! (forall ((?v0 A_tree_tree_tree_tree$ )(?v1 A_tree_tree_tree_tree$ ))(= (root$c (plus$b ?v0 ?v1 ))(plus$c (root$c ?v0 )(root$c ?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_stream_tree_tree_tree$ )(?v1 A_stream_tree_tree_tree$ ))(= (root$f (plus$d ?v0 ?v1 ))(plus$e (root$f ?v0 )(root$f ?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_stream_tree_tree$ )(?v1 A_stream_tree_tree$ ))(= (root$e (plus$e ?v0 ?v1 ))(plus$f (root$e ?v0 )(root$e ?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_tree_tree_tree$ )(?v1 A_tree_tree_tree$ ))(= (root$b (plus$c ?v0 ?v1 ))(plus$g (root$b ?v0 )(root$b ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_tree_tree$ )(?v1 A_tree_tree$ ))(= (root$a (plus$g ?v0 ?v1 ))(plus$ (root$a ?v0 )(root$a ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_stream_tree$ )(?v1 A_stream_tree$ ))(= (root$d (plus$f ?v0 ?v1 ))(plus$a (root$d ?v0 )(root$d ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(= (root$ (plus$ ?v0 ?v1 ))(plus$h (root$ ?v0 )(root$ ?v1 )))):named a7 ))
(check-sat )
;(get-unsat-core )
