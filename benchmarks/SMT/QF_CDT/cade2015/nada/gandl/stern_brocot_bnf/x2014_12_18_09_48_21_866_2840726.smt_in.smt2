;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_a_tree_fun$ 0 )
(declare-sort A_tree_a_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_fun$ 0 )
(declare-sort A_stream_a_tree_fun$ 0 )
(declare-sort A_tree_a_stream_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_tree$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun root$ (A_tree$)A$)
(declare-fun left$ (A_tree$)A_tree$)
(declare-fun right$ (A_tree$)A_tree$)
(declare-fun node$ (A$ A_tree$ A_tree$ )A_tree$)
(declare-sort Num$ 0)
(declare-fun one$ ()Num$)
(declare-fun select$ (Num$)Num$)
(declare-fun bit0$ (Num$ )Num$)
(declare-fun selecta$ (Num$)Num$)
(declare-fun bit1$ (Num$ )Num$)
(declare-sort A_tree_tree$ 0)
(declare-sort A_stream_tree$ 0)
(declare-sort A_stream_tree_tree$ 0)
(declare-sort A_tree_tree_tree$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_tree$ 0)
(declare-sort A_tree_stream$ 0)
(declare-sort A_tree_stream_tree$ 0)
(declare-sort A_stream_stream_tree_tree$ 0)
(declare-sort A_tree_tree_stream$ 0)
(declare-sort A_tree_tree_stream_tree$ 0)
(declare-sort A_stream_tree_stream$ 0)
(declare-sort A_stream_tree_stream_tree$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-sort A_tree_stream_stream$ 0)
(declare-sort A_stream_stream_tree_stream$ 0)
(declare-sort A_tree_tree_stream_stream$ 0)
(declare-sort A_stream_tree_stream_stream$ 0)
(declare-sort A_a_fun_tree$ 0)
(declare-sort A_a_fun_stream$ 0)
(declare-sort A_a_fun_a_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_stream$ 0)
(declare-sort A_a_tree_fun_tree$ 0)
(declare-sort A_a_tree_fun_stream$ 0)
(declare-sort A_a_stream_fun_tree$ 0)
(declare-sort A_a_stream_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_a_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_a_fun_stream$ 0)
(declare-sort A_a_fun_a_fun_a_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_a_fun_stream$ 0)
(declare-sort A_a_a_a_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_a_fun_fun_fun_stream$ 0)
(declare-sort A_a_a_fun_a_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_a_fun_fun_stream$ 0)
(declare-sort A_stream_a_fun_stream$ 0)
(declare-sort A_tree_a_fun_stream$ 0)
(declare-sort A_stream_a_stream_fun_stream$ 0)
(declare-sort A_tree_a_stream_fun_stream$ 0)
(declare-sort A_stream_a_tree_fun_stream$ 0)
(declare-sort A_tree_a_tree_fun_stream$ 0)
(declare-sort A_tree_a_fun_tree$ 0)
(declare-sort A_stream_a_fun_tree$ 0)
(declare-sort A_tree_a_tree_fun_tree$ 0)
(declare-sort A_stream_a_tree_fun_tree$ 0)
(declare-sort A_tree_a_stream_fun_tree$ 0)
(declare-sort A_stream_a_stream_fun_tree$ 0)
(declare-fun root$a (A_tree_tree$)A_tree$)
(declare-fun left$a (A_tree_tree$)A_tree_tree$)
(declare-fun right$a (A_tree_tree$)A_tree_tree$)
(declare-fun node$a (A_tree$ A_tree_tree$ A_tree_tree$ )A_tree_tree$)
(declare-fun root$b (A_stream_tree$)A_stream$)
(declare-fun left$b (A_stream_tree$)A_stream_tree$)
(declare-fun right$b (A_stream_tree$)A_stream_tree$)
(declare-fun node$b (A_stream$ A_stream_tree$ A_stream_tree$ )A_stream_tree$)
(declare-fun root$c (A_stream_tree_tree$)A_stream_tree$)
(declare-fun left$c (A_stream_tree_tree$)A_stream_tree_tree$)
(declare-fun right$c (A_stream_tree_tree$)A_stream_tree_tree$)
(declare-fun node$c (A_stream_tree$ A_stream_tree_tree$ A_stream_tree_tree$ )A_stream_tree_tree$)
(declare-fun root$d (A_tree_tree_tree$)A_tree_tree$)
(declare-fun left$d (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun right$d (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun node$d (A_tree_tree$ A_tree_tree_tree$ A_tree_tree_tree$ )A_tree_tree_tree$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun root$e (A_stream_stream_tree$)A_stream_stream$)
(declare-fun left$e (A_stream_stream_tree$)A_stream_stream_tree$)
(declare-fun right$e (A_stream_stream_tree$)A_stream_stream_tree$)
(declare-fun node$e (A_stream_stream$ A_stream_stream_tree$ A_stream_stream_tree$ )A_stream_stream_tree$)
(declare-fun shd$b (A_tree_stream$)A_tree$)
(declare-fun stl$b (A_tree_stream$)A_tree_stream$)
(declare-fun sCons$b (A_tree$ A_tree_stream$ )A_tree_stream$)
(declare-fun root$f (A_tree_stream_tree$)A_tree_stream$)
(declare-fun left$f (A_tree_stream_tree$)A_tree_stream_tree$)
(declare-fun right$f (A_tree_stream_tree$)A_tree_stream_tree$)
(declare-fun node$f (A_tree_stream$ A_tree_stream_tree$ A_tree_stream_tree$ )A_tree_stream_tree$)
(declare-fun root$g (A_stream_stream_tree_tree$)A_stream_stream_tree$)
(declare-fun left$g (A_stream_stream_tree_tree$)A_stream_stream_tree_tree$)
(declare-fun right$g (A_stream_stream_tree_tree$)A_stream_stream_tree_tree$)
(declare-fun node$g (A_stream_stream_tree$ A_stream_stream_tree_tree$ A_stream_stream_tree_tree$ )A_stream_stream_tree_tree$)
(declare-fun shd$c (A_tree_tree_stream$)A_tree_tree$)
(declare-fun stl$c (A_tree_tree_stream$)A_tree_tree_stream$)
(declare-fun sCons$c (A_tree_tree$ A_tree_tree_stream$ )A_tree_tree_stream$)
(declare-fun root$h (A_tree_tree_stream_tree$)A_tree_tree_stream$)
(declare-fun left$h (A_tree_tree_stream_tree$)A_tree_tree_stream_tree$)
(declare-fun right$h (A_tree_tree_stream_tree$)A_tree_tree_stream_tree$)
(declare-fun node$h (A_tree_tree_stream$ A_tree_tree_stream_tree$ A_tree_tree_stream_tree$ )A_tree_tree_stream_tree$)
(declare-fun shd$d (A_stream_tree_stream$)A_stream_tree$)
(declare-fun stl$d (A_stream_tree_stream$)A_stream_tree_stream$)
(declare-fun sCons$d (A_stream_tree$ A_stream_tree_stream$ )A_stream_tree_stream$)
(declare-fun root$i (A_stream_tree_stream_tree$)A_stream_tree_stream$)
(declare-fun left$i (A_stream_tree_stream_tree$)A_stream_tree_stream_tree$)
(declare-fun right$i (A_stream_tree_stream_tree$)A_stream_tree_stream_tree$)
(declare-fun node$i (A_stream_tree_stream$ A_stream_tree_stream_tree$ A_stream_tree_stream_tree$ )A_stream_tree_stream_tree$)
(declare-fun shd$e (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$e (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$e (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun shd$f (A_tree_stream_stream$)A_tree_stream$)
(declare-fun stl$f (A_tree_stream_stream$)A_tree_stream_stream$)
(declare-fun sCons$f (A_tree_stream$ A_tree_stream_stream$ )A_tree_stream_stream$)
(declare-fun shd$g (A_stream_stream_tree_stream$)A_stream_stream_tree$)
(declare-fun stl$g (A_stream_stream_tree_stream$)A_stream_stream_tree_stream$)
(declare-fun sCons$g (A_stream_stream_tree$ A_stream_stream_tree_stream$ )A_stream_stream_tree_stream$)
(declare-fun shd$h (A_tree_tree_stream_stream$)A_tree_tree_stream$)
(declare-fun stl$h (A_tree_tree_stream_stream$)A_tree_tree_stream_stream$)
(declare-fun sCons$h (A_tree_tree_stream$ A_tree_tree_stream_stream$ )A_tree_tree_stream_stream$)
(declare-fun shd$i (A_stream_tree_stream_stream$)A_stream_tree_stream$)
(declare-fun stl$i (A_stream_tree_stream_stream$)A_stream_tree_stream_stream$)
(declare-fun sCons$i (A_stream_tree_stream$ A_stream_tree_stream_stream$ )A_stream_tree_stream_stream$)
(declare-fun selectb$ (A_a_fun_tree$)A_a_fun$)
(declare-fun selectc$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun selectd$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun node$j (A_a_fun$ A_a_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$)
(declare-fun selecte$ (A_a_fun_stream$)A_a_fun$)
(declare-fun selectf$ (A_a_fun_stream$)A_a_fun_stream$)
(declare-fun sCons$j (A_a_fun$ A_a_fun_stream$ )A_a_fun_stream$)
(declare-fun selectg$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun$)
(declare-fun selecth$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun_tree$)
(declare-fun selecti$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun_tree$)
(declare-fun node$k (A_a_fun_a_fun$ A_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$)
(declare-fun selectj$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun$)
(declare-fun selectk$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun_stream$)
(declare-fun sCons$k (A_a_fun_a_fun$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$)
(declare-fun selectl$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun$)
(declare-fun selectm$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun selectn$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun node$l (A_a_a_fun_fun$ A_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$)
(declare-fun selecto$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun$)
(declare-fun selectp$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun_stream$)
(declare-fun sCons$l (A_a_a_fun_fun$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$)
(declare-fun selectq$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun$)
(declare-fun selectr$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun_tree$)
(declare-fun selects$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun_tree$)
(declare-fun node$m (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$)
(declare-fun selectt$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun$)
(declare-fun selectu$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun_stream$)
(declare-fun sCons$m (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$)
(declare-fun selectv$ (A_a_tree_fun_tree$)A_a_tree_fun$)
(declare-fun selectw$ (A_a_tree_fun_tree$)A_a_tree_fun_tree$)
(declare-fun selectx$ (A_a_tree_fun_tree$)A_a_tree_fun_tree$)
(declare-fun node$n (A_a_tree_fun$ A_a_tree_fun_tree$ A_a_tree_fun_tree$ )A_a_tree_fun_tree$)
(declare-fun selecty$ (A_a_tree_fun_stream$)A_a_tree_fun$)
(declare-fun selectz$ (A_a_tree_fun_stream$)A_a_tree_fun_stream$)
(declare-fun sCons$n (A_a_tree_fun$ A_a_tree_fun_stream$ )A_a_tree_fun_stream$)
(declare-fun selecua$ (A_a_stream_fun_tree$)A_a_stream_fun$)
(declare-fun selecub$ (A_a_stream_fun_tree$)A_a_stream_fun_tree$)
(declare-fun selecuc$ (A_a_stream_fun_tree$)A_a_stream_fun_tree$)
(declare-fun node$o (A_a_stream_fun$ A_a_stream_fun_tree$ A_a_stream_fun_tree$ )A_a_stream_fun_tree$)
(declare-fun selecud$ (A_a_stream_fun_stream$)A_a_stream_fun$)
(declare-fun selecue$ (A_a_stream_fun_stream$)A_a_stream_fun_stream$)
(declare-fun sCons$o (A_a_stream_fun$ A_a_stream_fun_stream$ )A_a_stream_fun_stream$)
(declare-fun selecuf$ (A_a_a_fun_fun_a_fun_tree$)A_a_a_fun_fun_a_fun$)
(declare-fun selecug$ (A_a_a_fun_fun_a_fun_tree$)A_a_a_fun_fun_a_fun_tree$)
(declare-fun selecuh$ (A_a_a_fun_fun_a_fun_tree$)A_a_a_fun_fun_a_fun_tree$)
(declare-fun node$p (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_a_fun_tree$ )A_a_a_fun_fun_a_fun_tree$)
(declare-fun selecui$ (A_a_a_fun_fun_a_fun_stream$)A_a_a_fun_fun_a_fun$)
(declare-fun selecuj$ (A_a_a_fun_fun_a_fun_stream$)A_a_a_fun_fun_a_fun_stream$)
(declare-fun sCons$p (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun_a_fun_stream$ )A_a_a_fun_fun_a_fun_stream$)
(declare-fun selecuk$ (A_a_fun_a_fun_a_fun_tree$)A_a_fun_a_fun_a_fun$)
(declare-fun selecul$ (A_a_fun_a_fun_a_fun_tree$)A_a_fun_a_fun_a_fun_tree$)
(declare-fun selecum$ (A_a_fun_a_fun_a_fun_tree$)A_a_fun_a_fun_a_fun_tree$)
(declare-fun node$q (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun_a_fun_tree$ A_a_fun_a_fun_a_fun_tree$ )A_a_fun_a_fun_a_fun_tree$)
(declare-fun selecun$ (A_a_fun_a_fun_a_fun_stream$)A_a_fun_a_fun_a_fun$)
(declare-fun selecuo$ (A_a_fun_a_fun_a_fun_stream$)A_a_fun_a_fun_a_fun_stream$)
(declare-fun sCons$q (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun_a_fun_stream$ )A_a_fun_a_fun_a_fun_stream$)
(declare-fun selecup$ (A_a_a_a_fun_fun_fun_tree$)A_a_a_a_fun_fun_fun$)
(declare-fun selecuq$ (A_a_a_a_fun_fun_fun_tree$)A_a_a_a_fun_fun_fun_tree$)
(declare-fun selecur$ (A_a_a_a_fun_fun_fun_tree$)A_a_a_a_fun_fun_fun_tree$)
(declare-fun node$r (A_a_a_a_fun_fun_fun$ A_a_a_a_fun_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$ )A_a_a_a_fun_fun_fun_tree$)
(declare-fun selecus$ (A_a_a_a_fun_fun_fun_stream$)A_a_a_a_fun_fun_fun$)
(declare-fun selecut$ (A_a_a_a_fun_fun_fun_stream$)A_a_a_a_fun_fun_fun_stream$)
(declare-fun sCons$r (A_a_a_a_fun_fun_fun$ A_a_a_a_fun_fun_fun_stream$ )A_a_a_a_fun_fun_fun_stream$)
(declare-fun selecuu$ (A_a_a_fun_a_fun_fun_tree$)A_a_a_fun_a_fun_fun$)
(declare-fun selecuv$ (A_a_a_fun_a_fun_fun_tree$)A_a_a_fun_a_fun_fun_tree$)
(declare-fun selecuw$ (A_a_a_fun_a_fun_fun_tree$)A_a_a_fun_a_fun_fun_tree$)
(declare-fun node$s (A_a_a_fun_a_fun_fun$ A_a_a_fun_a_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$ )A_a_a_fun_a_fun_fun_tree$)
(declare-fun selecux$ (A_a_a_fun_a_fun_fun_stream$)A_a_a_fun_a_fun_fun$)
(declare-fun selecuy$ (A_a_a_fun_a_fun_fun_stream$)A_a_a_fun_a_fun_fun_stream$)
(declare-fun sCons$s (A_a_a_fun_a_fun_fun$ A_a_a_fun_a_fun_fun_stream$ )A_a_a_fun_a_fun_fun_stream$)
(declare-fun selecuz$ (A_stream_a_fun_stream$)A_stream_a_fun$)
(declare-fun selecva$ (A_stream_a_fun_stream$)A_stream_a_fun_stream$)
(declare-fun sCons$t (A_stream_a_fun$ A_stream_a_fun_stream$ )A_stream_a_fun_stream$)
(declare-fun selecvb$ (A_tree_a_fun_stream$)A_tree_a_fun$)
(declare-fun selecvc$ (A_tree_a_fun_stream$)A_tree_a_fun_stream$)
(declare-fun sCons$u (A_tree_a_fun$ A_tree_a_fun_stream$ )A_tree_a_fun_stream$)
(declare-fun selecvd$ (A_stream_a_stream_fun_stream$)A_stream_a_stream_fun$)
(declare-fun selecve$ (A_stream_a_stream_fun_stream$)A_stream_a_stream_fun_stream$)
(declare-fun sCons$v (A_stream_a_stream_fun$ A_stream_a_stream_fun_stream$ )A_stream_a_stream_fun_stream$)
(declare-fun selecvf$ (A_tree_a_stream_fun_stream$)A_tree_a_stream_fun$)
(declare-fun selecvg$ (A_tree_a_stream_fun_stream$)A_tree_a_stream_fun_stream$)
(declare-fun sCons$w (A_tree_a_stream_fun$ A_tree_a_stream_fun_stream$ )A_tree_a_stream_fun_stream$)
(declare-fun selecvh$ (A_stream_a_tree_fun_stream$)A_stream_a_tree_fun$)
(declare-fun selecvi$ (A_stream_a_tree_fun_stream$)A_stream_a_tree_fun_stream$)
(declare-fun sCons$x (A_stream_a_tree_fun$ A_stream_a_tree_fun_stream$ )A_stream_a_tree_fun_stream$)
(declare-fun selecvj$ (A_tree_a_tree_fun_stream$)A_tree_a_tree_fun$)
(declare-fun selecvk$ (A_tree_a_tree_fun_stream$)A_tree_a_tree_fun_stream$)
(declare-fun sCons$y (A_tree_a_tree_fun$ A_tree_a_tree_fun_stream$ )A_tree_a_tree_fun_stream$)
(declare-fun selecvl$ (A_tree_a_fun_tree$)A_tree_a_fun$)
(declare-fun selecvm$ (A_tree_a_fun_tree$)A_tree_a_fun_tree$)
(declare-fun selecvn$ (A_tree_a_fun_tree$)A_tree_a_fun_tree$)
(declare-fun node$t (A_tree_a_fun$ A_tree_a_fun_tree$ A_tree_a_fun_tree$ )A_tree_a_fun_tree$)
(declare-fun selecvo$ (A_stream_a_fun_tree$)A_stream_a_fun$)
(declare-fun selecvp$ (A_stream_a_fun_tree$)A_stream_a_fun_tree$)
(declare-fun selecvq$ (A_stream_a_fun_tree$)A_stream_a_fun_tree$)
(declare-fun node$u (A_stream_a_fun$ A_stream_a_fun_tree$ A_stream_a_fun_tree$ )A_stream_a_fun_tree$)
(declare-fun selecvr$ (A_tree_a_tree_fun_tree$)A_tree_a_tree_fun$)
(declare-fun selecvs$ (A_tree_a_tree_fun_tree$)A_tree_a_tree_fun_tree$)
(declare-fun selecvt$ (A_tree_a_tree_fun_tree$)A_tree_a_tree_fun_tree$)
(declare-fun node$v (A_tree_a_tree_fun$ A_tree_a_tree_fun_tree$ A_tree_a_tree_fun_tree$ )A_tree_a_tree_fun_tree$)
(declare-fun selecvu$ (A_stream_a_tree_fun_tree$)A_stream_a_tree_fun$)
(declare-fun selecvv$ (A_stream_a_tree_fun_tree$)A_stream_a_tree_fun_tree$)
(declare-fun selecvw$ (A_stream_a_tree_fun_tree$)A_stream_a_tree_fun_tree$)
(declare-fun node$w (A_stream_a_tree_fun$ A_stream_a_tree_fun_tree$ A_stream_a_tree_fun_tree$ )A_stream_a_tree_fun_tree$)
(declare-fun selecvx$ (A_tree_a_stream_fun_tree$)A_tree_a_stream_fun$)
(declare-fun selecvy$ (A_tree_a_stream_fun_tree$)A_tree_a_stream_fun_tree$)
(declare-fun selecvz$ (A_tree_a_stream_fun_tree$)A_tree_a_stream_fun_tree$)
(declare-fun node$x (A_tree_a_stream_fun$ A_tree_a_stream_fun_tree$ A_tree_a_stream_fun_tree$ )A_tree_a_stream_fun_tree$)
(declare-fun selecwa$ (A_stream_a_stream_fun_tree$)A_stream_a_stream_fun$)
(declare-fun selecwb$ (A_stream_a_stream_fun_tree$)A_stream_a_stream_fun_tree$)
(declare-fun selecwc$ (A_stream_a_stream_fun_tree$)A_stream_a_stream_fun_tree$)
(declare-fun node$y (A_stream_a_stream_fun$ A_stream_a_stream_fun_tree$ A_stream_a_stream_fun_tree$ )A_stream_a_stream_fun_tree$)
(declare-fun n$ ()Num$ )
(declare-fun shd$j (A_a_fun_stream$ )A_a_fun$ )
(declare-fun shd$k (A_stream_a_fun_stream$ A_stream$ )A$ )
(declare-fun shd$l (A_tree_a_fun_stream$ A_tree$ )A$ )
(declare-fun shd$m (A_a_stream_fun_stream$ A$ )A_stream$ )
(declare-fun shd$n (A_a_tree_fun_stream$ A$ )A_tree$ )
(declare-fun shd$o (A_stream_a_stream_fun_stream$ A_stream$ )A_stream$ )
(declare-fun shd$p (A_tree_a_stream_fun_stream$ A_tree$ )A_stream$ )
(declare-fun shd$q (A_stream_a_tree_fun_stream$ A_stream$ )A_tree$ )
(declare-fun shd$r (A_tree_a_tree_fun_stream$ A_tree$ )A_tree$ )
(declare-fun shd$s (A_a_fun_a_fun_stream$ A_a_fun$ )A$ )
(declare-fun stl$j (A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun stl$k (A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun stl$l (A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun stl$m (A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun stl$n (A_tree_a_fun_stream$ )A_tree_a_fun_stream$ )
(declare-fun stl$o (A_stream_a_fun_stream$ )A_stream_a_fun_stream$ )
(declare-fun stl$p (A_a_tree_fun_stream$ )A_a_tree_fun_stream$ )
(declare-fun stl$q (A_a_stream_fun_stream$ )A_a_stream_fun_stream$ )
(declare-fun stl$r (A_tree_a_tree_fun_stream$ )A_tree_a_tree_fun_stream$ )
(declare-fun stl$s (A_stream_a_tree_fun_stream$ )A_stream_a_tree_fun_stream$ )
(declare-fun stl$t (A_tree_a_stream_fun_stream$ )A_tree_a_stream_fun_stream$ )
(declare-fun stl$u (A_stream_a_stream_fun_stream$ )A_stream_a_stream_fun_stream$ )
(declare-fun left$j (A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun left$k (A_tree_a_fun_tree$ )A_tree_a_fun_tree$ )
(declare-fun left$l (A_stream_a_fun_tree$ )A_stream_a_fun_tree$ )
(declare-fun left$m (A_a_tree_fun_tree$ )A_a_tree_fun_tree$ )
(declare-fun left$n (A_a_stream_fun_tree$ )A_a_stream_fun_tree$ )
(declare-fun left$o (A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun left$p (A_tree_a_tree_fun_tree$ )A_tree_a_tree_fun_tree$ )
(declare-fun left$q (A_stream_a_tree_fun_tree$ )A_stream_a_tree_fun_tree$ )
(declare-fun left$r (A_tree_a_stream_fun_tree$ )A_tree_a_stream_fun_tree$ )
(declare-fun left$s (A_stream_a_stream_fun_tree$ )A_stream_a_stream_fun_tree$ )
(declare-fun root$j (A_a_fun_tree$ )A_a_fun$ )
(declare-fun root$k (A_stream_a_fun_tree$ A_stream$ )A$ )
(declare-fun root$l (A_tree_a_fun_tree$ A_tree$ )A$ )
(declare-fun root$m (A_a_stream_fun_tree$ A$ )A_stream$ )
(declare-fun root$n (A_a_tree_fun_tree$ A$ )A_tree$ )
(declare-fun root$o (A_stream_a_stream_fun_tree$ A_stream$ )A_stream$ )
(declare-fun root$p (A_tree_a_stream_fun_tree$ A_tree$ )A_stream$ )
(declare-fun root$q (A_stream_a_tree_fun_tree$ A_stream$ )A_tree$ )
(declare-fun root$r (A_tree_a_tree_fun_tree$ A_tree$ )A_tree$ )
(declare-fun root$s (A_a_fun_a_fun_tree$ A_a_fun$ )A$ )
(declare-fun st_ap$ (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun st_ap$a (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$b (A_a_a_fun_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$c (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$d (A_a_tree_fun_stream$ A_stream$ )A_tree_stream$ )
(declare-fun st_ap$e (A_a_stream_fun_stream$ A_stream$ )A_stream_stream$ )
(declare-fun st_ap$f (A_a_a_fun_fun_a_fun_stream$ A_a_a_fun_fun_stream$ )A_stream$ )
(declare-fun st_ap$g (A_a_fun_a_fun_a_fun_stream$ A_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$h (A_a_a_a_fun_fun_fun_stream$ A_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun st_ap$i (A_a_a_fun_a_fun_fun_stream$ A_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun st_ap$j (A_stream_a_fun_stream$ A_stream_stream$ )A_stream$ )
(declare-fun st_ap$k (A_tree_a_fun_stream$ A_tree_stream$ )A_stream$ )
(declare-fun st_ap$l (A_stream_a_stream_fun_stream$ A_stream_stream$ )A_stream_stream$ )
(declare-fun st_ap$m (A_tree_a_stream_fun_stream$ A_tree_stream$ )A_stream_stream$ )
(declare-fun st_ap$n (A_stream_a_tree_fun_stream$ A_stream_stream$ )A_tree_stream$ )
(declare-fun st_ap$o (A_tree_a_tree_fun_stream$ A_tree_stream$ )A_tree_stream$ )
(declare-fun stream$ (A_tree$ )A_stream$ )
(declare-fun fun_app$ (A_a_fun$ A$ )A$ )
(declare-fun numeral$ (Num$ )A_tree$ )
(declare-fun stream$a (A_a_fun_tree$ )A_a_fun_stream$ )
(declare-fun stream$b (A_a_fun_a_fun_tree$ )A_a_fun_a_fun_stream$ )
(declare-fun stream$c (A_a_a_fun_fun_tree$ )A_a_a_fun_fun_stream$ )
(declare-fun stream$d (A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun stream$e (A_tree_tree$ )A_tree_stream$ )
(declare-fun stream$f (A_a_tree_fun_tree$ )A_a_tree_fun_stream$ )
(declare-fun stream$g (A_stream_tree$ )A_stream_stream$ )
(declare-fun stream$h (A_a_stream_fun_tree$ )A_a_stream_fun_stream$ )
(declare-fun stream$i (A_a_a_fun_fun_a_fun_tree$ )A_a_a_fun_fun_a_fun_stream$ )
(declare-fun stream$j (A_a_fun_a_fun_a_fun_tree$ )A_a_fun_a_fun_a_fun_stream$ )
(declare-fun stream$k (A_a_a_a_fun_fun_fun_tree$ )A_a_a_a_fun_fun_fun_stream$ )
(declare-fun stream$l (A_a_a_fun_a_fun_fun_tree$ )A_a_a_fun_a_fun_fun_stream$ )
(declare-fun tree_ap$ (A_a_fun_tree$ A_tree$ )A_tree$ )
(declare-fun numeral$a (Num$ )A_stream$ )
(declare-fun numeral$b (Num$ )A$ )
(declare-fun numeral$c (Num$ )A_tree_tree$ )
(declare-fun numeral$d (Num$ )A_stream_tree$ )
(declare-fun numeral$e (Num$ )A_stream_tree_tree$ )
(declare-fun numeral$f (Num$ )A_tree_tree_tree$ )
(declare-fun numeral$g (Num$ )A_stream_stream_tree$ )
(declare-fun numeral$h (Num$ )A_stream_stream$ )
(declare-fun numeral$i (Num$ )A_tree_stream_tree$ )
(declare-fun numeral$j (Num$ )A_tree_stream$ )
(declare-fun numeral$k (Num$ )A_stream_stream_tree_tree$ )
(declare-fun numeral$l (Num$ )A_tree_tree_stream_tree$ )
(declare-fun numeral$m (Num$ )A_tree_tree_stream$ )
(declare-fun numeral$n (Num$ )A_stream_tree_stream_tree$ )
(declare-fun numeral$o (Num$ )A_stream_tree_stream$ )
(declare-fun numeral$p (Num$ )A_stream_stream_stream$ )
(declare-fun numeral$q (Num$ )A_tree_stream_stream$ )
(declare-fun numeral$r (Num$ )A_stream_stream_tree_stream$ )
(declare-fun numeral$s (Num$ )A_tree_tree_stream_stream$ )
(declare-fun numeral$t (Num$ )A_stream_tree_stream_stream$ )
(declare-fun tree_ap$a (A_a_fun_a_fun_tree$ A_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$b (A_a_a_fun_fun_tree$ A_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$c (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$d (A_a_tree_fun_tree$ A_tree$ )A_tree_tree$ )
(declare-fun tree_ap$e (A_a_stream_fun_tree$ A_tree$ )A_stream_tree$ )
(declare-fun tree_ap$f (A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_tree$ )A_tree$ )
(declare-fun tree_ap$g (A_a_fun_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$h (A_a_a_a_fun_fun_fun_tree$ A_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_ap$i (A_a_a_fun_a_fun_fun_tree$ A_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_ap$j (A_tree_a_fun_tree$ A_tree_tree$ )A_tree$ )
(declare-fun tree_ap$k (A_stream_a_fun_tree$ A_stream_tree$ )A_tree$ )
(declare-fun tree_ap$l (A_tree_a_tree_fun_tree$ A_tree_tree$ )A_tree_tree$ )
(declare-fun tree_ap$m (A_stream_a_tree_fun_tree$ A_stream_tree$ )A_tree_tree$ )
(declare-fun tree_ap$n (A_tree_a_stream_fun_tree$ A_tree_tree$ )A_stream_tree$ )
(declare-fun tree_ap$o (A_stream_a_stream_fun_tree$ A_stream_tree$ )A_stream_tree$ )
(declare-fun tree_chop$ (A_tree_tree$ )A_tree_tree$ )
(declare-fun tree_chop$a (A_stream_tree$ )A_stream_tree$ )
(declare-fun tree_chop$b (A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_chop$c (A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_chop$d (A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_chop$e (A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_chop$f (A_tree$ )A_tree$ )
(declare-fun tree_chop$g (A_a_tree_fun_tree$ )A_a_tree_fun_tree$ )
(declare-fun tree_chop$h (A_a_stream_fun_tree$ )A_a_stream_fun_tree$ )
(assert (! (not (= (stream$ (numeral$ n$ ))(numeral$a n$ ))):named a0 ))
(assert (! (forall ((?v0 Num$ ))(= (root$ (numeral$ ?v0 ))(numeral$b ?v0 ))):named a1 ))
(assert (! (forall ((?v0 Num$ ))(= (root$a (numeral$c ?v0 ))(numeral$ ?v0 ))):named a2 ))
(assert (! (forall ((?v0 Num$ ))(= (root$b (numeral$d ?v0 ))(numeral$a ?v0 ))):named a3 ))
(assert (! (forall ((?v0 Num$ ))(= (root$c (numeral$e ?v0 ))(numeral$d ?v0 ))):named a4 ))
(assert (! (forall ((?v0 Num$ ))(= (root$d (numeral$f ?v0 ))(numeral$c ?v0 ))):named a5 ))
(assert (! (forall ((?v0 Num$ ))(= (root$e (numeral$g ?v0 ))(numeral$h ?v0 ))):named a6 ))
(assert (! (forall ((?v0 Num$ ))(= (root$f (numeral$i ?v0 ))(numeral$j ?v0 ))):named a7 ))
(assert (! (forall ((?v0 Num$ ))(= (root$g (numeral$k ?v0 ))(numeral$g ?v0 ))):named a8 ))
(assert (! (forall ((?v0 Num$ ))(= (root$h (numeral$l ?v0 ))(numeral$m ?v0 ))):named a9 ))
(assert (! (forall ((?v0 Num$ ))(= (root$i (numeral$n ?v0 ))(numeral$o ?v0 ))):named a10 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$ (numeral$a ?v0 ))(numeral$b ?v0 ))):named a11 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$b (numeral$j ?v0 ))(numeral$ ?v0 ))):named a12 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$a (numeral$h ?v0 ))(numeral$a ?v0 ))):named a13 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$d (numeral$o ?v0 ))(numeral$d ?v0 ))):named a14 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$c (numeral$m ?v0 ))(numeral$c ?v0 ))):named a15 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$e (numeral$p ?v0 ))(numeral$h ?v0 ))):named a16 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$f (numeral$q ?v0 ))(numeral$j ?v0 ))):named a17 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$g (numeral$r ?v0 ))(numeral$g ?v0 ))):named a18 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$h (numeral$s ?v0 ))(numeral$m ?v0 ))):named a19 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$i (numeral$t ?v0 ))(numeral$o ?v0 ))):named a20 ))
(assert (! (forall ((?v0 Num$ ))(= (stl$c (numeral$m ?v0 ))(numeral$m ?v0 ))):named a21 ))
(assert (! (forall ((?v0 Num$ ))(= (stl$d (numeral$o ?v0 ))(numeral$o ?v0 ))):named a22 ))
(assert (! (forall ((?v0 Num$ ))(= (stl$f (numeral$q ?v0 ))(numeral$q ?v0 ))):named a23 ))
(assert (! (forall ((?v0 Num$ ))(= (stl$e (numeral$p ?v0 ))(numeral$p ?v0 ))):named a24 ))
(assert (! (forall ((?v0 Num$ ))(= (stl$a (numeral$h ?v0 ))(numeral$h ?v0 ))):named a25 ))
(assert (! (forall ((?v0 Num$ ))(= (stl$b (numeral$j ?v0 ))(numeral$j ?v0 ))):named a26 ))
(assert (! (forall ((?v0 Num$ ))(= (stl$ (numeral$a ?v0 ))(numeral$a ?v0 ))):named a27 ))
(assert (! (forall ((?v0 Num$ ))(= (right$e (numeral$g ?v0 ))(numeral$g ?v0 ))):named a28 ))
(assert (! (forall ((?v0 Num$ ))(= (right$b (numeral$d ?v0 ))(numeral$d ?v0 ))):named a29 ))
(assert (! (forall ((?v0 Num$ ))(= (right$a (numeral$c ?v0 ))(numeral$c ?v0 ))):named a30 ))
(assert (! (forall ((?v0 Num$ ))(= (right$ (numeral$ ?v0 ))(numeral$ ?v0 ))):named a31 ))
(assert (! (forall ((?v0 Num$ ))(= (left$e (numeral$g ?v0 ))(numeral$g ?v0 ))):named a32 ))
(assert (! (forall ((?v0 Num$ ))(= (left$b (numeral$d ?v0 ))(numeral$d ?v0 ))):named a33 ))
(assert (! (forall ((?v0 Num$ ))(= (left$a (numeral$c ?v0 ))(numeral$c ?v0 ))):named a34 ))
(assert (! (forall ((?v0 Num$ ))(= (left$ (numeral$ ?v0 ))(numeral$ ?v0 ))):named a35 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (stream$ (tree_ap$ ?v0 ?v1 ))(st_ap$ (stream$a ?v0 )(stream$ ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (stream$ (tree_ap$a ?v0 ?v1 ))(st_ap$a (stream$b ?v0 )(stream$a ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (stream$a (tree_ap$b ?v0 ?v1 ))(st_ap$b (stream$c ?v0 )(stream$ ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (stream$a (tree_ap$c ?v0 ?v1 ))(st_ap$c (stream$d ?v0 )(stream$a ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_a_tree_fun_tree$ )(?v1 A_tree$ ))(= (stream$e (tree_ap$d ?v0 ?v1 ))(st_ap$d (stream$f ?v0 )(stream$ ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_a_stream_fun_tree$ )(?v1 A_tree$ ))(= (stream$g (tree_ap$e ?v0 ?v1 ))(st_ap$e (stream$h ?v0 )(stream$ ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun_tree$ )(?v1 A_a_a_fun_fun_tree$ ))(= (stream$ (tree_ap$f ?v0 ?v1 ))(st_ap$f (stream$i ?v0 )(stream$c ?v1 )))):named a42 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun_tree$ )(?v1 A_a_fun_a_fun_tree$ ))(= (stream$ (tree_ap$g ?v0 ?v1 ))(st_ap$g (stream$j ?v0 )(stream$b ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$ )(?v1 A_tree$ ))(= (stream$c (tree_ap$h ?v0 ?v1 ))(st_ap$h (stream$k ?v0 )(stream$ ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (stream$b (tree_ap$i ?v0 ?v1 ))(st_ap$i (stream$l ?v0 )(stream$ ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_tree_tree$ ))(= (stl$b (stream$e ?v0 ))(stream$e (tree_chop$ ?v0 )))):named a46 ))
(assert (! (forall ((?v0 A_stream_tree$ ))(= (stl$a (stream$g ?v0 ))(stream$g (tree_chop$a ?v0 )))):named a47 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ ))(= (stl$j (stream$d ?v0 ))(stream$d (tree_chop$b ?v0 )))):named a48 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ ))(= (stl$k (stream$c ?v0 ))(stream$c (tree_chop$c ?v0 )))):named a49 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ ))(= (stl$l (stream$b ?v0 ))(stream$b (tree_chop$d ?v0 )))):named a50 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(= (stl$m (stream$a ?v0 ))(stream$a (tree_chop$e ?v0 )))):named a51 ))
(assert (! (forall ((?v0 A_tree$ ))(= (stl$ (stream$ ?v0 ))(stream$ (tree_chop$f ?v0 )))):named a52 ))
(assert (! (forall ((?v0 A_a_tree_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$ (tree_ap$d ?v0 ?v1 ))(tree_ap$d (tree_chop$g ?v0 )(tree_chop$f ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_a_stream_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$a (tree_ap$e ?v0 ?v1 ))(tree_ap$e (tree_chop$h ?v0 )(tree_chop$f ?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (tree_chop$f (tree_ap$a ?v0 ?v1 ))(tree_ap$a (tree_chop$d ?v0 )(tree_chop$e ?v1 )))):named a55 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$e (tree_ap$b ?v0 ?v1 ))(tree_ap$b (tree_chop$c ?v0 )(tree_chop$f ?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (tree_chop$e (tree_ap$c ?v0 ?v1 ))(tree_ap$c (tree_chop$b ?v0 )(tree_chop$e ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$f (tree_ap$ ?v0 ?v1 ))(tree_ap$ (tree_chop$e ?v0 )(tree_chop$f ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_stream$ ))(= (shd$ (st_ap$ ?v0 ?v1 ))(fun_app$ (shd$j ?v0 )(shd$ ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_stream_a_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$ (st_ap$j ?v0 ?v1 ))(shd$k ?v0 (shd$a ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_tree_a_fun_stream$ )(?v1 A_tree_stream$ ))(= (shd$ (st_ap$k ?v0 ?v1 ))(shd$l ?v0 (shd$b ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_a_stream_fun_stream$ )(?v1 A_stream$ ))(= (shd$a (st_ap$e ?v0 ?v1 ))(shd$m ?v0 (shd$ ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_a_tree_fun_stream$ )(?v1 A_stream$ ))(= (shd$b (st_ap$d ?v0 ?v1 ))(shd$n ?v0 (shd$ ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$a (st_ap$l ?v0 ?v1 ))(shd$o ?v0 (shd$a ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_tree_a_stream_fun_stream$ )(?v1 A_tree_stream$ ))(= (shd$a (st_ap$m ?v0 ?v1 ))(shd$p ?v0 (shd$b ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_stream_a_tree_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$b (st_ap$n ?v0 ?v1 ))(shd$q ?v0 (shd$a ?v1 )))):named a66 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_stream$ )(?v1 A_tree_stream$ ))(= (shd$b (st_ap$o ?v0 ?v1 ))(shd$r ?v0 (shd$b ?v1 )))):named a67 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$ (st_ap$a ?v0 ?v1 ))(shd$s ?v0 (shd$j ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_stream$ ))(= (stl$ (st_ap$ ?v0 ?v1 ))(st_ap$ (stl$m ?v0 )(stl$ ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_tree_a_fun_stream$ )(?v1 A_tree_stream$ ))(= (stl$ (st_ap$k ?v0 ?v1 ))(st_ap$k (stl$n ?v0 )(stl$b ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_stream_a_fun_stream$ )(?v1 A_stream_stream$ ))(= (stl$ (st_ap$j ?v0 ?v1 ))(st_ap$j (stl$o ?v0 )(stl$a ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_a_tree_fun_stream$ )(?v1 A_stream$ ))(= (stl$b (st_ap$d ?v0 ?v1 ))(st_ap$d (stl$p ?v0 )(stl$ ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_a_stream_fun_stream$ )(?v1 A_stream$ ))(= (stl$a (st_ap$e ?v0 ?v1 ))(st_ap$e (stl$q ?v0 )(stl$ ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_stream$ )(?v1 A_tree_stream$ ))(= (stl$b (st_ap$o ?v0 ?v1 ))(st_ap$o (stl$r ?v0 )(stl$b ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_stream_a_tree_fun_stream$ )(?v1 A_stream_stream$ ))(= (stl$b (st_ap$n ?v0 ?v1 ))(st_ap$n (stl$s ?v0 )(stl$a ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_tree_a_stream_fun_stream$ )(?v1 A_tree_stream$ ))(= (stl$a (st_ap$m ?v0 ?v1 ))(st_ap$m (stl$t ?v0 )(stl$b ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$ )(?v1 A_stream_stream$ ))(= (stl$a (st_ap$l ?v0 ?v1 ))(st_ap$l (stl$u ?v0 )(stl$a ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (stl$ (st_ap$a ?v0 ?v1 ))(st_ap$a (stl$l ?v0 )(stl$m ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (left$ (tree_ap$ ?v0 ?v1 ))(tree_ap$ (left$j ?v0 )(left$ ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_tree_a_fun_tree$ )(?v1 A_tree_tree$ ))(= (left$ (tree_ap$j ?v0 ?v1 ))(tree_ap$j (left$k ?v0 )(left$a ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_stream_a_fun_tree$ )(?v1 A_stream_tree$ ))(= (left$ (tree_ap$k ?v0 ?v1 ))(tree_ap$k (left$l ?v0 )(left$b ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_a_tree_fun_tree$ )(?v1 A_tree$ ))(= (left$a (tree_ap$d ?v0 ?v1 ))(tree_ap$d (left$m ?v0 )(left$ ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_a_stream_fun_tree$ )(?v1 A_tree$ ))(= (left$b (tree_ap$e ?v0 ?v1 ))(tree_ap$e (left$n ?v0 )(left$ ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (left$ (tree_ap$a ?v0 ?v1 ))(tree_ap$a (left$o ?v0 )(left$j ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$ )(?v1 A_tree_tree$ ))(= (left$a (tree_ap$l ?v0 ?v1 ))(tree_ap$l (left$p ?v0 )(left$a ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_stream_a_tree_fun_tree$ )(?v1 A_stream_tree$ ))(= (left$a (tree_ap$m ?v0 ?v1 ))(tree_ap$m (left$q ?v0 )(left$b ?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_tree_a_stream_fun_tree$ )(?v1 A_tree_tree$ ))(= (left$b (tree_ap$n ?v0 ?v1 ))(tree_ap$n (left$r ?v0 )(left$a ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_tree$ )(?v1 A_stream_tree$ ))(= (left$b (tree_ap$o ?v0 ?v1 ))(tree_ap$o (left$s ?v0 )(left$b ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (root$ (tree_ap$ ?v0 ?v1 ))(fun_app$ (root$j ?v0 )(root$ ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_stream_a_fun_tree$ )(?v1 A_stream_tree$ ))(= (root$ (tree_ap$k ?v0 ?v1 ))(root$k ?v0 (root$b ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_tree_a_fun_tree$ )(?v1 A_tree_tree$ ))(= (root$ (tree_ap$j ?v0 ?v1 ))(root$l ?v0 (root$a ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A_a_stream_fun_tree$ )(?v1 A_tree$ ))(= (root$b (tree_ap$e ?v0 ?v1 ))(root$m ?v0 (root$ ?v1 )))):named a92 ))
(assert (! (forall ((?v0 A_a_tree_fun_tree$ )(?v1 A_tree$ ))(= (root$a (tree_ap$d ?v0 ?v1 ))(root$n ?v0 (root$ ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_tree$ )(?v1 A_stream_tree$ ))(= (root$b (tree_ap$o ?v0 ?v1 ))(root$o ?v0 (root$b ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_tree_a_stream_fun_tree$ )(?v1 A_tree_tree$ ))(= (root$b (tree_ap$n ?v0 ?v1 ))(root$p ?v0 (root$a ?v1 )))):named a95 ))
(assert (! (forall ((?v0 A_stream_a_tree_fun_tree$ )(?v1 A_stream_tree$ ))(= (root$a (tree_ap$m ?v0 ?v1 ))(root$q ?v0 (root$b ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$ )(?v1 A_tree_tree$ ))(= (root$a (tree_ap$l ?v0 ?v1 ))(root$r ?v0 (root$a ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (root$ (tree_ap$a ?v0 ?v1 ))(root$s ?v0 (root$j ?v1 )))):named a98 ))
(check-sat )
;(get-unsat-core )
