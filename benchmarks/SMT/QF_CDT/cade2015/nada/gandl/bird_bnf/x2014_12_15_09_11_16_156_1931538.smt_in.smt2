;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_tree_nat_nat_prod_tree_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_tree_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ 0 )
(declare-sort Nat_nat_prod$ 0)
(declare-fun fst$ (Nat_nat_prod$)Nat$)
(declare-fun snd$ (Nat_nat_prod$)Nat$)
(declare-fun pair$ (Nat$ Nat$ )Nat_nat_prod$)
(declare-sort Nat_nat_prod_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ 0)
(declare-sort Nat_nat_prod_stream$ 0)
(declare-fun root$ (Nat_nat_prod_tree$)Nat_nat_prod$)
(declare-fun left$ (Nat_nat_prod_tree$)Nat_nat_prod_tree$)
(declare-fun right$ (Nat_nat_prod_tree$)Nat_nat_prod_tree$)
(declare-fun node$ (Nat_nat_prod$ Nat_nat_prod_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$)
(declare-fun select$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$)
(declare-fun selecta$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun selectb$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun node$a (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun selectc$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$)
(declare-fun selectd$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun selecte$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun node$b (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun selectf$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$)
(declare-fun selectg$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selecth$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun node$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selecti$ (Nat_nat_prod_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun$)
(declare-fun selectj$ (Nat_nat_prod_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_tree$)
(declare-fun selectk$ (Nat_nat_prod_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_tree$)
(declare-fun node$d (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$)
(declare-fun selectl$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$)
(declare-fun selectm$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)
(declare-fun selectn$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)
(declare-fun node$e (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)
(declare-fun selecto$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun$)
(declare-fun selectp$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selectq$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun node$f (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$)
(declare-fun selectr$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$)
(declare-fun selects$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$)
(declare-fun selectt$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$)
(declare-fun node$g (Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$)
(declare-fun selectu$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun$)
(declare-fun selectv$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$)
(declare-fun selectw$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$)
(declare-fun node$h (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$)
(declare-fun selectx$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$)
(declare-fun selecty$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)
(declare-fun selectz$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)
(declare-fun node$i (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$)
(declare-fun selecua$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun$)
(declare-fun selecub$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun selecuc$ (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun node$j (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$)
(declare-fun shd$ (Nat_nat_prod_stream$)Nat_nat_prod$)
(declare-fun stl$ (Nat_nat_prod_stream$)Nat_nat_prod_stream$)
(declare-fun sCons$ (Nat_nat_prod$ Nat_nat_prod_stream$ )Nat_nat_prod_stream$)
(declare-sort Dir$ 0)
(declare-sort Dir_list$ 0)
(declare-fun l$ ()Dir$)
(declare-fun r$ ()Dir$)
(declare-fun nil$ ()Dir_list$)
(declare-fun hd$ (Dir_list$)Dir$)
(declare-fun tl$ (Dir_list$)Dir_list$)
(declare-fun cons$ (Dir$ Dir_list$ )Dir_list$)
(declare-fun bird$ ()Nat_nat_prod_tree$ )
(declare-fun left$a (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun left$b (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun left$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun left$d (Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun root$a (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )
(declare-fun root$b (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )
(declare-fun root$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )
(declare-fun root$d (Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun right$a (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun right$b (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun right$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun right$d (Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun stream$ (Nat_nat_prod_tree$ )Nat_nat_prod_stream$ )
(declare-fun fun_app$ (Nat_nat_prod_tree_nat_nat_prod_tree_fun$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$ (Nat_nat_prod_nat_nat_prod_fun_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun fun_app$a (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun fun_app$b (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun fun_app$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun fun_app$d (Nat_nat_prod_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_tree_fun$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun fun_app$e (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun fun_app$f (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$g (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun fun_app$h (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod$ )
(declare-fun map_tree$ (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$a (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$b (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun tree_ap$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun tree_ap$d (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$e (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$f (Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun tree_ap$g (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_ap$h (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$i (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun map_tree$a (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun map_tree$b (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun map_tree$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun map_tree$d (Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun map_tree$e (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun map_tree$f (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun map_tree$g (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun map_tree$h (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_fun$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun map_tree$i (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun tree_pure$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun odd_mirror$ ()Nat_nat_prod_tree_nat_nat_prod_tree_fun$ )
(declare-fun tree_pure$a (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun tree_pure$b (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$c (Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$d (Nat_nat_prod$ )Nat_nat_prod_tree$ )
(declare-fun even_mirror$ (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun odd_mirror$a ()Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ )
(declare-fun odd_mirror$b ()Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ )
(declare-fun odd_mirror$c ()Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_fun$ )
(declare-fun odd_mirror$d ()Nat_nat_prod_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_tree_fun$ )
(declare-fun odd_mirror$e (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )
(declare-fun odd_mirror$f (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun odd_mirror$g (Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$ )
(declare-fun odd_mirror$h (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$ )
(declare-fun odd_mirror$i (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )
(declare-fun odd_mirror$j (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun even_mirror$a (Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun even_mirror$b (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun even_mirror$c (Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun even_mirror$d (Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun stern_brocot$ ()Nat_nat_prod_tree$ )
(declare-fun traverse_tree$ (Dir_list$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun traverse_tree$a (Dir_list$ Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )
(declare-fun traverse_tree$b (Dir_list$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$c (Dir_list$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$d (Dir_list$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun even_odd_mirror$ (Bool )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ )
(declare-fun odd_mirror_path$ (Dir_list$ )Dir_list$ )
(declare-fun even_odd_mirror$a (Bool )Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree_fun$ )
(declare-fun even_odd_mirror$b (Bool )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree_fun$ )
(declare-fun even_odd_mirror$c (Bool )Nat_nat_prod_nat_nat_prod_fun_tree_nat_nat_prod_nat_nat_prod_fun_tree_fun$ )
(declare-fun even_odd_mirror$d (Bool )Nat_nat_prod_tree_nat_nat_prod_tree_fun$ )
(declare-fun stern_brocot_iterate$ ()Nat_nat_prod_tree$ )
(declare-fun stern_brocot_loopless$ ()Nat_nat_prod_stream$ )
(assert (! (not (= (fun_app$ odd_mirror$ bird$ )stern_brocot$ )):named a0 ))
(assert (! (= odd_mirror$a (even_odd_mirror$ false )):named a1 ))
(assert (! (= odd_mirror$b (even_odd_mirror$a false )):named a2 ))
(assert (! (= odd_mirror$c (even_odd_mirror$b false )):named a3 ))
(assert (! (= odd_mirror$d (even_odd_mirror$c false )):named a4 ))
(assert (! (= odd_mirror$ (even_odd_mirror$d false )):named a5 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ ))(= (fun_app$a odd_mirror$a (tree_pure$ ?v0 ))(tree_pure$ ?v0 ))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ ))(= (fun_app$b odd_mirror$b (tree_pure$a ?v0 ))(tree_pure$a ?v0 ))):named a7 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ ))(= (fun_app$c odd_mirror$c (tree_pure$b ?v0 ))(tree_pure$b ?v0 ))):named a8 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ ))(= (fun_app$d odd_mirror$d (tree_pure$c ?v0 ))(tree_pure$c ?v0 ))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(= (fun_app$ odd_mirror$ (tree_pure$d ?v0 ))(tree_pure$d ?v0 ))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (fun_app$ odd_mirror$ (tree_ap$ ?v0 ?v1 ))(tree_ap$ (fun_app$d odd_mirror$d ?v0 )(fun_app$ odd_mirror$ ?v1 )))):named a11 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (fun_app$ odd_mirror$ (tree_ap$a ?v0 ?v1 ))(tree_ap$a (fun_app$c odd_mirror$c ?v0 )(fun_app$d odd_mirror$d ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (fun_app$d odd_mirror$d (tree_ap$b ?v0 ?v1 ))(tree_ap$b (fun_app$b odd_mirror$b ?v0 )(fun_app$ odd_mirror$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (fun_app$d odd_mirror$d (tree_ap$c ?v0 ?v1 ))(tree_ap$c (fun_app$a odd_mirror$a ?v0 )(fun_app$d odd_mirror$d ?v1 )))):named a14 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (fun_app$ odd_mirror$ (tree_ap$d ?v0 ?v1 ))(tree_ap$d (odd_mirror$e ?v0 )(fun_app$b odd_mirror$b ?v1 )))):named a15 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (fun_app$ odd_mirror$ (tree_ap$e ?v0 ?v1 ))(tree_ap$e (odd_mirror$f ?v0 )(fun_app$c odd_mirror$c ?v1 )))):named a16 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (fun_app$b odd_mirror$b (tree_ap$f ?v0 ?v1 ))(tree_ap$f (odd_mirror$g ?v0 )(fun_app$ odd_mirror$ ?v1 )))):named a17 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (fun_app$c odd_mirror$c (tree_ap$g ?v0 ?v1 ))(tree_ap$g (odd_mirror$h ?v0 )(fun_app$ odd_mirror$ ?v1 )))):named a18 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (fun_app$ odd_mirror$ (tree_ap$h ?v0 ?v1 ))(tree_ap$h (odd_mirror$i ?v0 )(fun_app$a odd_mirror$a ?v1 )))):named a19 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (fun_app$d odd_mirror$d (tree_ap$i ?v0 ?v1 ))(tree_ap$i (odd_mirror$j ?v0 )(fun_app$b odd_mirror$b ?v1 )))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (root$a (fun_app$a odd_mirror$a ?v0 ))(root$a ?v0 ))):named a21 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (root$b (fun_app$b odd_mirror$b ?v0 ))(root$b ?v0 ))):named a22 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (root$c (fun_app$c odd_mirror$c ?v0 ))(root$c ?v0 ))):named a23 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (root$d (fun_app$d odd_mirror$d ?v0 ))(root$d ?v0 ))):named a24 ))
(assert (! (forall ((?v0 Nat_nat_prod_tree$ ))(= (root$ (fun_app$ odd_mirror$ ?v0 ))(root$ ?v0 ))):named a25 ))
(assert (! (= stern_brocot$ stern_brocot_iterate$ ):named a26 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (map_tree$ ?v0 (fun_app$ odd_mirror$ ?v1 ))(fun_app$ odd_mirror$ (map_tree$ ?v0 ?v1 )))):named a27 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (map_tree$a ?v0 (fun_app$ odd_mirror$ ?v1 ))(fun_app$d odd_mirror$d (map_tree$a ?v0 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (map_tree$b ?v0 (fun_app$d odd_mirror$d ?v1 ))(fun_app$ odd_mirror$ (map_tree$b ?v0 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (map_tree$c ?v0 (fun_app$d odd_mirror$d ?v1 ))(fun_app$d odd_mirror$d (map_tree$c ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (map_tree$d ?v0 (fun_app$ odd_mirror$ ?v1 ))(fun_app$b odd_mirror$b (map_tree$d ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (map_tree$e ?v0 (fun_app$ odd_mirror$ ?v1 ))(fun_app$c odd_mirror$c (map_tree$e ?v0 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (map_tree$f ?v0 (fun_app$b odd_mirror$b ?v1 ))(fun_app$ odd_mirror$ (map_tree$f ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (map_tree$g ?v0 (fun_app$c odd_mirror$c ?v1 ))(fun_app$ odd_mirror$ (map_tree$g ?v0 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (map_tree$h ?v0 (fun_app$ odd_mirror$ ?v1 ))(fun_app$a odd_mirror$a (map_tree$h ?v0 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (map_tree$i ?v0 (fun_app$d odd_mirror$d ?v1 ))(fun_app$b odd_mirror$b (map_tree$i ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (right$a (fun_app$a odd_mirror$a ?v0 ))(even_mirror$ (right$a ?v0 )))):named a37 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (right$b (fun_app$b odd_mirror$b ?v0 ))(even_mirror$a (right$b ?v0 )))):named a38 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (right$c (fun_app$c odd_mirror$c ?v0 ))(even_mirror$b (right$c ?v0 )))):named a39 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (right$d (fun_app$d odd_mirror$d ?v0 ))(even_mirror$c (right$d ?v0 )))):named a40 ))
(assert (! (forall ((?v0 Nat_nat_prod_tree$ ))(= (right$ (fun_app$ odd_mirror$ ?v0 ))(even_mirror$d (right$ ?v0 )))):named a41 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (left$a (fun_app$a odd_mirror$a ?v0 ))(even_mirror$ (left$a ?v0 )))):named a42 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (left$b (fun_app$b odd_mirror$b ?v0 ))(even_mirror$a (left$b ?v0 )))):named a43 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (left$c (fun_app$c odd_mirror$c ?v0 ))(even_mirror$b (left$c ?v0 )))):named a44 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (left$d (fun_app$d odd_mirror$d ?v0 ))(even_mirror$c (left$d ?v0 )))):named a45 ))
(assert (! (forall ((?v0 Nat_nat_prod_tree$ ))(= (left$ (fun_app$ odd_mirror$ ?v0 ))(even_mirror$d (left$ ?v0 )))):named a46 ))
(assert (! (= (stream$ stern_brocot$ )stern_brocot_loopless$ ):named a47 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (root$a (traverse_tree$ ?v0 (fun_app$a odd_mirror$a ?v1 )))(root$a (traverse_tree$ (odd_mirror_path$ ?v0 )?v1 )))):named a48 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (root$b (traverse_tree$a ?v0 (fun_app$b odd_mirror$b ?v1 )))(root$b (traverse_tree$a (odd_mirror_path$ ?v0 )?v1 )))):named a49 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (root$c (traverse_tree$b ?v0 (fun_app$c odd_mirror$c ?v1 )))(root$c (traverse_tree$b (odd_mirror_path$ ?v0 )?v1 )))):named a50 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (root$d (traverse_tree$c ?v0 (fun_app$d odd_mirror$d ?v1 )))(root$d (traverse_tree$c (odd_mirror_path$ ?v0 )?v1 )))):named a51 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_tree$ ))(= (root$ (traverse_tree$d ?v0 (fun_app$ odd_mirror$ ?v1 )))(root$ (traverse_tree$d (odd_mirror_path$ ?v0 )?v1 )))):named a52 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (left$a (even_mirror$ ?v0 ))(fun_app$a odd_mirror$a (right$a ?v0 )))):named a53 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (left$b (even_mirror$a ?v0 ))(fun_app$b odd_mirror$b (right$b ?v0 )))):named a54 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (left$c (even_mirror$b ?v0 ))(fun_app$c odd_mirror$c (right$c ?v0 )))):named a55 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (left$d (even_mirror$c ?v0 ))(fun_app$d odd_mirror$d (right$d ?v0 )))):named a56 ))
(assert (! (forall ((?v0 Nat_nat_prod_tree$ ))(= (left$ (even_mirror$d ?v0 ))(fun_app$ odd_mirror$ (right$ ?v0 )))):named a57 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (right$a (even_mirror$ ?v0 ))(fun_app$a odd_mirror$a (left$a ?v0 )))):named a58 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun_tree$ ))(= (right$b (even_mirror$a ?v0 ))(fun_app$b odd_mirror$b (left$b ?v0 )))):named a59 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ ))(= (right$c (even_mirror$b ?v0 ))(fun_app$c odd_mirror$c (left$c ?v0 )))):named a60 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (right$d (even_mirror$c ?v0 ))(fun_app$d odd_mirror$d (left$d ?v0 )))):named a61 ))
(assert (! (forall ((?v0 Nat_nat_prod_tree$ ))(= (right$ (even_mirror$d ?v0 ))(fun_app$ odd_mirror$ (left$ ?v0 )))):named a62 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$b (tree_pure$a ?v0 )(tree_pure$d ?v1 ))(tree_pure$c (fun_app$e ?v0 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(= (tree_ap$a (tree_pure$b ?v0 )(tree_pure$c ?v1 ))(tree_pure$d (fun_app$f ?v0 ?v1 )))):named a64 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(= (tree_ap$c (tree_pure$ ?v0 )(tree_pure$c ?v1 ))(tree_pure$c (fun_app$g ?v0 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$ (tree_pure$c ?v0 )(tree_pure$d ?v1 ))(tree_pure$d (fun_app$h ?v0 ?v1 )))):named a66 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (root$d (map_tree$c ?v0 ?v1 ))(fun_app$g ?v0 (root$d ?v1 )))):named a67 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (root$ (map_tree$b ?v0 ?v1 ))(fun_app$f ?v0 (root$d ?v1 )))):named a68 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (root$d (map_tree$a ?v0 ?v1 ))(fun_app$e ?v0 (root$ ?v1 )))):named a69 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (root$ (map_tree$ ?v0 ?v1 ))(fun_app$h ?v0 (root$ ?v1 )))):named a70 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (root$d (map_tree$c ?v0 ?v1 ))(fun_app$g ?v0 (root$d ?v1 )))):named a71 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (root$ (map_tree$b ?v0 ?v1 ))(fun_app$f ?v0 (root$d ?v1 )))):named a72 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (root$d (map_tree$a ?v0 ?v1 ))(fun_app$e ?v0 (root$ ?v1 )))):named a73 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (root$ (map_tree$ ?v0 ?v1 ))(fun_app$h ?v0 (root$ ?v1 )))):named a74 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(= (map_tree$c ?v0 (tree_pure$c ?v1 ))(tree_pure$c (fun_app$g ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(= (map_tree$b ?v0 (tree_pure$c ?v1 ))(tree_pure$d (fun_app$f ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod$ ))(= (map_tree$a ?v0 (tree_pure$d ?v1 ))(tree_pure$c (fun_app$e ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ ))(= (map_tree$ ?v0 (tree_pure$d ?v1 ))(tree_pure$d (fun_app$h ?v0 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (left$d (map_tree$c ?v0 ?v1 ))(map_tree$c ?v0 (left$d ?v1 )))):named a79 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(= (left$ (map_tree$b ?v0 ?v1 ))(map_tree$b ?v0 (left$d ?v1 )))):named a80 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (left$d (map_tree$a ?v0 ?v1 ))(map_tree$a ?v0 (left$ ?v1 )))):named a81 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_tree$ ))(= (left$ (map_tree$ ?v0 ?v1 ))(map_tree$ ?v0 (left$ ?v1 )))):named a82 ))
(check-sat )
;(get-unsat-core )
