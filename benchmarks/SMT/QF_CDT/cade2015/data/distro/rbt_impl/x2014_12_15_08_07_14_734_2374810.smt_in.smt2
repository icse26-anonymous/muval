;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_rbt_bool_fun$ 0 )
(declare-sort A_b_rbt_a_b_rbt_fun$ 0 )
(declare-datatypes ()((Color$ (r$ )(b$ ))(A_b_rbt$ (empty$ )(branch$ (select$ Color$ )(selecta$ A_b_rbt$ )(selectb$ A$ )(selectc$ B$ )(selectd$ A_b_rbt$ )))))
(declare-fun t$ ()A_b_rbt$ )
(declare-fun inv1$ (A_b_rbt$ )Bool )
(declare-fun inv2$ (A_b_rbt$ )Bool )
(declare-fun inv1l$ (A_b_rbt$ )Bool )
(declare-fun paint$ (Color$ )A_b_rbt_a_b_rbt_fun$ )
(declare-fun is_rbt$ (A_a_bool_fun_fun$ A_b_rbt$ )Bool )
(declare-fun balance$ (A_b_rbt$ A$ B$ )A_b_rbt_a_b_rbt_fun$ )
(declare-fun bheight$ (A_b_rbt$ )Nat$ )
(declare-fun fun_app$ (A_b_rbt_a_b_rbt_fun$ A_b_rbt$ )A_b_rbt$ )
(declare-fun color_of$ (A_b_rbt$ )Color$ )
(declare-fun fun_app$a (A_b_rbt_bool_fun$ A_b_rbt$ )Bool )
(declare-fun rbt_sorted$ (A_a_bool_fun_fun$ )A_b_rbt_bool_fun$ )
(assert (! (not (= (color_of$ (fun_app$ (paint$ b$ )t$ ))b$ )):named a0 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 Color$ ))(=> (inv1l$ ?v0 )(inv1l$ (fun_app$ (paint$ ?v1 )?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 Color$ ))(=> (inv2$ ?v0 )(inv2$ (fun_app$ (paint$ ?v1 )?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_b_rbt$ ))(=> (inv1l$ ?v0 )(inv1$ (fun_app$ (paint$ b$ )?v0 )))):named a3 ))
(assert (! (= (color_of$ empty$ )b$ ):named a4 ))
(assert (! (forall ((?v0 Color$ ))(! (= (fun_app$ (paint$ ?v0 )empty$ )empty$ ):pattern ((paint$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 Color$ )(?v1 Color$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(! (= (fun_app$ (paint$ ?v0 )(branch$ ?v1 ?v2 ?v3 ?v4 ?v5 ))(branch$ ?v0 ?v2 ?v3 ?v4 ?v5 )):pattern ((fun_app$ (paint$ ?v0 )(branch$ ?v1 ?v2 ?v3 ?v4 ?v5 ))))):named a6 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (inv1$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))(and (inv1$ ?v1 )(and (inv1$ ?v4 )(or (= ?v0 b$ )(and (= (color_of$ ?v1 )b$ )(= (color_of$ ?v4 )b$ )))))):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a7 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (color_of$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))?v0 ):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a8 ))
(assert (! (forall ((?v0 Color$ ))(=> (and (=> (= ?v0 r$ )false )(=> (= ?v0 b$ )false ))false )):named a9 ))
(assert (! (not (= r$ b$ )):named a10 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ )(?v5 Color$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ ))(= (= (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )(branch$ ?v5 ?v6 ?v7 ?v8 ?v9 ))(and (= ?v0 ?v5 )(and (= ?v1 ?v6 )(and (= ?v2 ?v7 )(and (= ?v3 ?v8 )(= ?v4 ?v9 ))))))):named a11 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (inv1l$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))(and (inv1$ ?v1 )(inv1$ ?v4 ))):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a12 ))
(assert (! (= (inv1$ empty$ )true ):named a13 ))
(assert (! (= (inv2$ empty$ )true ):named a14 ))
(assert (! (= (inv1l$ empty$ )true ):named a15 ))
(assert (! (forall ((?v0 A_b_rbt$ ))(=> (and (=> (= ?v0 empty$ )false )(and (forall ((?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(=> (= ?v0 (branch$ r$ ?v1 ?v2 ?v3 ?v4 ))false ))(forall ((?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(=> (= ?v0 (branch$ b$ ?v1 ?v2 ?v3 ?v4 ))false ))))false )):named a16 ))
(assert (! (forall ((?v0 A_b_rbt$ ))(=> (and (=> (= ?v0 empty$ )false )(forall ((?v1 Color$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(=> (= ?v0 (branch$ ?v1 ?v2 ?v3 ?v4 ?v5 ))false )))false )):named a17 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(not (= empty$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a18 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_rbt$ ))(! (= (is_rbt$ ?v0 ?v1 )(and (inv1$ ?v1 )(and (inv2$ ?v1 )(and (= (color_of$ ?v1 )b$ )(fun_app$a (rbt_sorted$ ?v0 )?v1 ))))):pattern ((is_rbt$ ?v0 ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ )(?v10 A$ )(?v11 B$ ))(! (= (fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ r$ (branch$ r$ ?v6 ?v7 ?v8 ?v9 )?v10 ?v11 empty$ ))(branch$ r$ (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 empty$ ))):pattern ((fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ r$ (branch$ r$ ?v6 ?v7 ?v8 ?v9 )?v10 ?v11 empty$ ))))):named a20 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ )(?v10 A$ )(?v11 B$ ))(! (= (fun_app$ (balance$ (branch$ r$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ r$ ?v6 ?v7 ?v8 ?v9 ))?v10 ?v11 )empty$ )(branch$ r$ (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 empty$ ))):pattern ((balance$ (branch$ r$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ r$ ?v6 ?v7 ?v8 ?v9 ))?v10 ?v11 )))):named a21 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ ))(! (= (fun_app$ (balance$ (branch$ r$ (branch$ r$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 )empty$ )(branch$ r$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 empty$ ))):pattern ((balance$ (branch$ r$ (branch$ r$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 )))):named a22 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ )(?v6 A$ )(?v7 B$ )(?v8 A_b_rbt$ )(?v9 A$ )(?v10 B$ )(?v11 A_b_rbt$ ))(! (= (fun_app$ (balance$ (branch$ r$ empty$ ?v0 ?v1 (branch$ r$ ?v2 ?v3 ?v4 ?v5 ))?v6 ?v7 )(branch$ b$ ?v8 ?v9 ?v10 ?v11 ))(branch$ r$ (branch$ b$ empty$ ?v0 ?v1 ?v2 )?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 (branch$ b$ ?v8 ?v9 ?v10 ?v11 )))):pattern ((fun_app$ (balance$ (branch$ r$ empty$ ?v0 ?v1 (branch$ r$ ?v2 ?v3 ?v4 ?v5 ))?v6 ?v7 )(branch$ b$ ?v8 ?v9 ?v10 ?v11 ))))):named a23 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ )(?v6 A$ )(?v7 B$ ))(! (= (fun_app$ (balance$ (branch$ r$ empty$ ?v0 ?v1 (branch$ r$ ?v2 ?v3 ?v4 ?v5 ))?v6 ?v7 )empty$ )(branch$ r$ (branch$ b$ empty$ ?v0 ?v1 ?v2 )?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 empty$ ))):pattern ((balance$ (branch$ r$ empty$ ?v0 ?v1 (branch$ r$ ?v2 ?v3 ?v4 ?v5 ))?v6 ?v7 )))):named a24 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ )(?v6 A$ )(?v7 B$ )(?v8 A_b_rbt$ )(?v9 A$ )(?v10 B$ )(?v11 A_b_rbt$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ r$ (branch$ r$ ?v2 ?v3 ?v4 ?v5 )?v6 ?v7 (branch$ b$ ?v8 ?v9 ?v10 ?v11 )))(branch$ r$ (branch$ b$ empty$ ?v0 ?v1 ?v2 )?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 (branch$ b$ ?v8 ?v9 ?v10 ?v11 )))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ r$ (branch$ r$ ?v2 ?v3 ?v4 ?v5 )?v6 ?v7 (branch$ b$ ?v8 ?v9 ?v10 ?v11 )))))):named a25 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ )(?v6 A$ )(?v7 B$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ r$ (branch$ r$ ?v2 ?v3 ?v4 ?v5 )?v6 ?v7 empty$ ))(branch$ r$ (branch$ b$ empty$ ?v0 ?v1 ?v2 )?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 empty$ ))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ r$ (branch$ r$ ?v2 ?v3 ?v4 ?v5 )?v6 ?v7 empty$ ))))):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ )(?v6 A$ )(?v7 B$ )(?v8 A_b_rbt$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ r$ ?v2 ?v3 ?v4 (branch$ r$ ?v5 ?v6 ?v7 ?v8 )))(branch$ r$ (branch$ b$ empty$ ?v0 ?v1 ?v2 )?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 ?v8 ))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ r$ ?v2 ?v3 ?v4 (branch$ r$ ?v5 ?v6 ?v7 ?v8 )))))):named a27 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (inv2$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))(and (inv2$ ?v1 )(and (inv2$ ?v4 )(= (bheight$ ?v1 )(bheight$ ?v4 ))))):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a28 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_rbt$ ))(=> (is_rbt$ ?v0 ?v1 )(fun_app$a (rbt_sorted$ ?v0 )?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ ))(=> (and (inv2$ ?v0 )(and (inv2$ ?v1 )(= (bheight$ ?v0 )(bheight$ ?v1 ))))(inv2$ (fun_app$ (balance$ ?v0 ?v2 ?v3 )?v1 )))):named a30 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ )(?v5 A$ )(?v6 B$ )(?v7 A_b_rbt$ )(?v8 A$ )(?v9 B$ )(?v10 A_b_rbt$ )(?v11 A$ )(?v12 B$ )(?v13 A_b_rbt$ )(?v14 A$ )(?v15 B$ )(?v16 A_b_rbt$ ))(! (= (fun_app$ (balance$ (branch$ ?v0 (branch$ b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 )(branch$ b$ ?v13 ?v14 ?v15 ?v16 ))(branch$ b$ (branch$ ?v0 (branch$ b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 ))):pattern ((fun_app$ (balance$ (branch$ ?v0 (branch$ b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 )(branch$ b$ ?v13 ?v14 ?v15 ?v16 ))))):named a31 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ )(?v10 A$ )(?v11 B$ )(?v12 A_b_rbt$ ))(! (= (fun_app$ (balance$ (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 )(branch$ b$ ?v9 ?v10 ?v11 ?v12 ))(branch$ b$ (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 ))):pattern ((fun_app$ (balance$ (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 )(branch$ b$ ?v9 ?v10 ?v11 ?v12 ))))):named a32 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 Color$ )(?v7 A_b_rbt$ )(?v8 A$ )(?v9 B$ )(?v10 A_b_rbt$ )(?v11 A$ )(?v12 B$ )(?v13 A_b_rbt$ )(?v14 A$ )(?v15 B$ )(?v16 A_b_rbt$ ))(! (= (fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 )))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 )))):pattern ((fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 )))))):named a33 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ )(?v10 A$ )(?v11 B$ )(?v12 A_b_rbt$ ))(! (= (fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ b$ ?v6 ?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 )))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 )))):pattern ((fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ b$ ?v6 ?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 )))))):named a34 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ ))(! (= (fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ b$ ?v6 ?v7 ?v8 ?v9 ))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))):pattern ((fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ b$ ?v6 ?v7 ?v8 ?v9 ))))):named a35 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ ))(! (= (fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ b$ ?v6 ?v7 ?v8 ?v9 ))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))):pattern ((fun_app$ (balance$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 )(branch$ b$ ?v6 ?v7 ?v8 ?v9 ))))):named a36 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(! (= (fun_app$a (rbt_sorted$ ?v0 )empty$ )true ):pattern ((rbt_sorted$ ?v0 )))):named a37 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ ))(=> (and (inv1l$ ?v0 )(inv1l$ ?v1 ))(inv1$ (fun_app$ (balance$ ?v0 ?v2 ?v3 )?v1 )))):named a38 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )empty$ )(branch$ b$ empty$ ?v0 ?v1 empty$ )):pattern ((balance$ empty$ ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ b$ ?v2 ?v3 ?v4 empty$ ))(branch$ b$ empty$ ?v0 ?v1 (branch$ b$ ?v2 ?v3 ?v4 empty$ ))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ b$ ?v2 ?v3 ?v4 empty$ ))))):named a40 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ b$ ?v2 ?v3 ?v4 ?v5 ))(branch$ b$ empty$ ?v0 ?v1 (branch$ b$ ?v2 ?v3 ?v4 ?v5 ))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ b$ ?v2 ?v3 ?v4 ?v5 ))))):named a41 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ )(?v6 A$ )(?v7 B$ )(?v8 A_b_rbt$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ b$ ?v2 ?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 ?v8 )))(branch$ b$ empty$ ?v0 ?v1 (branch$ b$ ?v2 ?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 ?v8 )))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ b$ ?v2 ?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 ?v8 )))))):named a42 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 Color$ )(?v3 A$ )(?v4 B$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ ?v2 empty$ ?v3 ?v4 empty$ ))(branch$ b$ empty$ ?v0 ?v1 (branch$ ?v2 empty$ ?v3 ?v4 empty$ ))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ ?v2 empty$ ?v3 ?v4 empty$ ))))):named a43 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 Color$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ )(?v6 A$ )(?v7 B$ )(?v8 A_b_rbt$ ))(! (= (fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ ?v2 empty$ ?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 ?v8 )))(branch$ b$ empty$ ?v0 ?v1 (branch$ ?v2 empty$ ?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 ?v8 )))):pattern ((fun_app$ (balance$ empty$ ?v0 ?v1 )(branch$ ?v2 empty$ ?v3 ?v4 (branch$ b$ ?v5 ?v6 ?v7 ?v8 )))))):named a44 ))
(check-sat )
;(get-unsat-core )
