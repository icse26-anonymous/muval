;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_b_prod_set$ 0 )
(declare-sort B_a_prod_set$ 0 )
(declare-sort A_a_b_prod_fun$ 0 )
(declare-sort A_b_a_prod_fun$ 0 )
(declare-sort A_b_prod_a_fun$ 0 )
(declare-sort B_a_prod_a_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort A_b_prod_bool_fun$ 0 )
(declare-sort B_a_prod_bool_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_fun$ 0 )
(declare-sort A_b_prod_b_a_prod_fun$ 0 )
(declare-sort B_a_prod_a_b_prod_fun$ 0 )
(declare-sort B_a_prod_b_a_prod_fun$ 0 )
(declare-datatypes ()((A_b_prod$ (pair$ (fst$ A$ )(snd$ B$ )))(A_b_prod_list$ (nil$ )(cons$ (hd$ A_b_prod$ )(tl$ A_b_prod_list$ )))(Color$ (r$ )(b$ ))(A_b_rbt$ (empty$ )(branch$ (select$ Color$ )(selecta$ A_b_rbt$ )(selectb$ A$ )(selectc$ B$ )(selectd$ A_b_rbt$ )))(B_a_prod$ (pair$a (fst$a B$ )(snd$a A$ )))(B_a_rbt$ (empty$a )(branch$a (selecte$ Color$ )(selectf$ B_a_rbt$ )(selectg$ B$ )(selecth$ A$ )(selecti$ B_a_rbt$ )))(B_list$ (nil$a )(cons$a (hd$a B$ )(tl$a B_list$ )))(B_a_prod_list$ (nil$b )(cons$b (hd$b B_a_prod$ )(tl$b B_a_prod_list$ )))(A_list$ (nil$c )(cons$c (hd$c A$ )(tl$c A_list$ )))))
(declare-fun c$ ()Color$ )
(declare-fun k$ ()A$ )
(declare-fun t$ ()A_b_rbt$ )
(declare-fun x$ ()B$ )
(declare-fun uu$ (B_set$ )B_bool_fun$ )
(declare-fun set$ (A_b_prod_list$ )A_b_prod_set$ )
(declare-fun uua$ (A_set$ )A_bool_fun$ )
(declare-fun uub$ (B_a_prod_set$ )B_a_prod_bool_fun$ )
(declare-fun uuc$ (A_b_prod_set$ )A_b_prod_bool_fun$ )
(declare-fun inv1$ (B_a_rbt$ )Bool )
(declare-fun inv2$ (A_b_rbt$ )Bool )
(declare-fun keys$ (B_a_rbt$ )B_list$ )
(declare-fun set$a (B_list$ )B_set$ )
(declare-fun set$b (B_a_prod_list$ )B_a_prod_set$ )
(declare-fun set$c (A_list$ )A_set$ )
(declare-fun swap$ ()B_a_prod_a_b_prod_fun$ )
(declare-fun curry$ (B_a_prod_bool_fun$ )B_a_bool_fun_fun$ )
(declare-fun image$ (A_b_prod_b_a_prod_fun$ A_b_prod_set$ )B_a_prod_set$ )
(declare-fun inv1$a (A_b_rbt$ )Bool )
(declare-fun inv1l$ (A_b_rbt$ )Bool )
(declare-fun inv2$a (B_a_rbt$ )Bool )
(declare-fun keys$a (A_b_rbt$ )A_list$ )
(declare-fun paint$ (Color$ A_b_rbt$ )A_b_rbt$ )
(declare-fun swap$a ()A_b_prod_b_a_prod_fun$ )
(declare-fun curry$a (A_b_prod_bool_fun$ )A_b_bool_fun_fun$ )
(declare-fun image$a (B_a_prod_a_b_prod_fun$ B_a_prod_set$ )A_b_prod_set$ )
(declare-fun image$b (A_b_prod_a_b_prod_fun$ A_b_prod_set$ )A_b_prod_set$ )
(declare-fun image$c (A_a_fun$ A_set$ )A_set$ )
(declare-fun image$d (A_b_prod_a_fun$ A_b_prod_set$ )A_set$ )
(declare-fun image$e (A_a_b_prod_fun$ A_set$ )A_b_prod_set$ )
(declare-fun image$f (A_b_a_prod_fun$ A_set$ )B_a_prod_set$ )
(declare-fun image$g (B_a_prod_a_fun$ B_a_prod_set$ )A_set$ )
(declare-fun image$h (B_a_prod_b_a_prod_fun$ B_a_prod_set$ )B_a_prod_set$ )
(declare-fun image$i (A_b_fun$ A_set$ )B_set$ )
(declare-fun image$j (B_a_fun$ B_set$ )A_set$ )
(declare-fun inv1l$a (B_a_rbt$ )Bool )
(declare-fun member$ (B_a_prod$ B_a_prod_set$ )Bool )
(declare-fun balance$ (B_a_rbt$ B$ A$ B_a_rbt$ )B_a_rbt$ )
(declare-fun bheight$ (B_a_rbt$ )Nat$ )
(declare-fun collect$ (B_a_prod_bool_fun$ )B_a_prod_set$ )
(declare-fun entries$ (A_b_rbt$ )A_b_prod_list$ )
(declare-fun fun_app$ (B_a_prod_bool_fun$ B_a_prod$ )Bool )
(declare-fun member$a (A_b_prod$ A_b_prod_set$ )Bool )
(declare-fun member$b (B$ B_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun balance$a (A_b_rbt$ A$ B$ A_b_rbt$ )A_b_rbt$ )
(declare-fun bheight$a (A_b_rbt$ )Nat$ )
(declare-fun collect$a (A_bool_fun$ )A_set$ )
(declare-fun collect$b (A_b_prod_bool_fun$ )A_b_prod_set$ )
(declare-fun collect$c (B_bool_fun$ )B_set$ )
(declare-fun color_of$ (A_b_rbt$ )Color$ )
(declare-fun entries$a (B_a_rbt$ )B_a_prod_list$ )
(declare-fun fun_app$a (A_b_prod_bool_fun$ A_b_prod$ )Bool )
(declare-fun fun_app$b (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$c (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$d (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$e (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$f (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$g (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$h (B_a_prod_a_b_prod_fun$ B_a_prod$ )A_b_prod$ )
(declare-fun fun_app$i (A_b_prod_b_a_prod_fun$ A_b_prod$ )B_a_prod$ )
(declare-fun fun_app$j (A_b_prod_a_b_prod_fun$ A_b_prod$ )A_b_prod$ )
(declare-fun fun_app$k (A_a_fun$ A$ )A$ )
(declare-fun fun_app$l (A_b_prod_a_fun$ A_b_prod$ )A$ )
(declare-fun fun_app$m (A_a_b_prod_fun$ A$ )A_b_prod$ )
(declare-fun fun_app$n (A_b_a_prod_fun$ A$ )B_a_prod$ )
(declare-fun fun_app$o (B_a_prod_a_fun$ B_a_prod$ )A$ )
(declare-fun fun_app$p (B_a_prod_b_a_prod_fun$ B_a_prod$ )B_a_prod$ )
(declare-fun fun_app$q (A_b_fun$ A$ )B$ )
(declare-fun fun_app$r (B_a_fun$ B$ )A$ )
(declare-fun rbt_less$ (B_b_bool_fun_fun$ B$ B_a_rbt$ )Bool )
(declare-fun rbt_less$a (A_a_bool_fun_fun$ A$ A_b_rbt$ )Bool )
(declare-fun rbt_sorted$ (A_a_bool_fun_fun$ A_b_rbt$ )Bool )
(declare-fun rbt_greater$ (B_b_bool_fun_fun$ B$ B_a_rbt$ )Bool )
(declare-fun rbt_greater$a (A_a_bool_fun_fun$ A$ A_b_rbt$ )Bool )
(assert (! (forall ((?v0 B_a_prod_set$ )(?v1 B_a_prod$ ))(! (= (fun_app$ (uub$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$ (uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod$ ))(! (= (fun_app$a (uuc$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$a (uuc$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B$ ))(! (= (fun_app$b (uu$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$b (uu$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$c (uua$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$c (uua$ ?v0 )?v1 )))):named a3 ))
(assert (! (not (= (member$a (pair$ k$ x$ )(set$ (entries$ (paint$ c$ t$ ))))(member$a (pair$ k$ x$ )(set$ (entries$ t$ ))))):named a4 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B$ )(?v3 A$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a6 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B$ )(?v3 A$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a8 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_rbt$ ))(= (member$b ?v0 (set$a (keys$ ?v1 )))(exists ((?v2 A$ ))(member$ (pair$a ?v0 ?v2 )(set$b (entries$a ?v1 )))))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_rbt$ ))(= (member$c ?v0 (set$c (keys$a ?v1 )))(exists ((?v2 B$ ))(member$a (pair$ ?v0 ?v2 )(set$ (entries$ ?v1 )))))):named a10 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B_a_rbt$ ))(=> (member$ (pair$a ?v0 ?v1 )(set$b (entries$a ?v2 )))(member$b ?v0 (set$a (keys$ ?v2 ))))):named a11 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ ))(=> (member$a (pair$ ?v0 ?v1 )(set$ (entries$ ?v2 )))(member$c ?v0 (set$c (keys$a ?v2 ))))):named a12 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B_a_rbt$ )(?v3 B$ )(?v4 A$ )(?v5 B_a_rbt$ ))(= (member$ (pair$a ?v0 ?v1 )(set$b (entries$a (balance$ ?v2 ?v3 ?v4 ?v5 ))))(or (member$ (pair$a ?v0 ?v1 )(set$b (entries$a ?v2 )))(or (and (= ?v0 ?v3 )(= ?v1 ?v4 ))(member$ (pair$a ?v0 ?v1 )(set$b (entries$a ?v5 ))))))):named a13 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(= (member$a (pair$ ?v0 ?v1 )(set$ (entries$ (balance$a ?v2 ?v3 ?v4 ?v5 ))))(or (member$a (pair$ ?v0 ?v1 )(set$ (entries$ ?v2 )))(or (and (= ?v0 ?v3 )(= ?v1 ?v4 ))(member$a (pair$ ?v0 ?v1 )(set$ (entries$ ?v5 ))))))):named a14 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 Color$ ))(=> (inv1l$ ?v0 )(inv1l$ (paint$ ?v1 ?v0 )))):named a15 ))
(assert (! (forall ((?v0 B_a_prod$ ))(=> (forall ((?v1 B$ )(?v2 A$ ))(=> (= ?v0 (pair$a ?v1 ?v2 ))false ))false )):named a16 ))
(assert (! (forall ((?v0 A_b_prod$ ))(=> (forall ((?v1 A$ )(?v2 B$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a17 ))
(assert (! (forall ((?v0 B_a_prod$ ))(exists ((?v1 B$ )(?v2 A$ ))(= ?v0 (pair$a ?v1 ?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_b_prod$ ))(exists ((?v1 A$ )(?v2 B$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a19 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B$ )(?v3 A$ ))(=> (and (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a21 ))
(assert (! (forall ((?v0 B_a_prod$ ))(=> (forall ((?v1 B$ )(?v2 A$ ))(=> (= ?v0 (pair$a ?v1 ?v2 ))false ))false )):named a22 ))
(assert (! (forall ((?v0 A_b_prod$ ))(=> (forall ((?v1 A$ )(?v2 B$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a23 ))
(assert (! (forall ((?v0 B_a_prod_bool_fun$ )(?v1 B_a_prod$ ))(=> (forall ((?v2 B$ )(?v3 A$ ))(fun_app$ ?v0 (pair$a ?v2 ?v3 )))(fun_app$ ?v0 ?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A_b_prod$ ))(=> (forall ((?v2 A$ )(?v3 B$ ))(fun_app$a ?v0 (pair$ ?v2 ?v3 )))(fun_app$a ?v0 ?v1 ))):named a25 ))
(assert (! (forall ((?v0 B_a_rbt$ )(?v1 B_a_rbt$ )(?v2 B$ )(?v3 A$ ))(=> (and (inv1l$a ?v0 )(inv1l$a ?v1 ))(inv1$ (balance$ ?v0 ?v2 ?v3 ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ ))(=> (and (inv1l$ ?v0 )(inv1l$ ?v1 ))(inv1$a (balance$a ?v0 ?v2 ?v3 ?v1 )))):named a27 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_a_rbt$ ))(= (rbt_greater$ ?v0 ?v1 ?v2 )(forall ((?v3 B$ ))(=> (member$b ?v3 (set$a (keys$ ?v2 )))(fun_app$b (fun_app$d ?v0 ?v1 )?v3 ))))):named a28 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_b_rbt$ ))(= (rbt_greater$a ?v0 ?v1 ?v2 )(forall ((?v3 A$ ))(=> (member$c ?v3 (set$c (keys$a ?v2 )))(fun_app$c (fun_app$e ?v0 ?v1 )?v3 ))))):named a29 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_a_rbt$ ))(= (rbt_less$ ?v0 ?v1 ?v2 )(forall ((?v3 B$ ))(=> (member$b ?v3 (set$a (keys$ ?v2 )))(fun_app$b (fun_app$d ?v0 ?v3 )?v1 ))))):named a30 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_b_rbt$ ))(= (rbt_less$a ?v0 ?v1 ?v2 )(forall ((?v3 A$ ))(=> (member$c ?v3 (set$c (keys$a ?v2 )))(fun_app$c (fun_app$e ?v0 ?v3 )?v1 ))))):named a31 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 B_a_prod_set$ )(?v3 A$ ))(=> (and (member$ (pair$a ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$ (pair$a ?v0 ?v3 )?v2 ))):named a32 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A_b_prod_set$ )(?v3 B$ ))(=> (and (member$a (pair$ ?v0 ?v1 )?v2 )(= ?v3 ?v1 ))(member$a (pair$ ?v0 ?v3 )?v2 ))):named a33 ))
(assert (! (forall ((?v0 B_a_prod_bool_fun$ )(?v1 B$ )(?v2 A$ ))(! (= (fun_app$c (fun_app$f (curry$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$f (curry$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$b (fun_app$g (curry$a ?v0 )?v1 )?v2 )(fun_app$a ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$g (curry$a ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 Color$ ))(=> (inv2$ ?v0 )(inv2$ (paint$ ?v1 ?v0 )))):named a36 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(= (fun_app$h swap$ (pair$a ?v0 ?v1 ))(pair$ ?v1 ?v0 ))):named a37 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(= (fun_app$i swap$a (pair$ ?v0 ?v1 ))(pair$a ?v1 ?v0 ))):named a38 ))
(assert (! (forall ((?v0 B_a_prod_bool_fun$ )(?v1 B$ )(?v2 A$ ))(=> (fun_app$ ?v0 (pair$a ?v1 ?v2 ))(fun_app$c (fun_app$f (curry$ ?v0 )?v1 )?v2 ))):named a39 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A$ )(?v2 B$ ))(=> (fun_app$a ?v0 (pair$ ?v1 ?v2 ))(fun_app$b (fun_app$g (curry$a ?v0 )?v1 )?v2 ))):named a40 ))
(assert (! (forall ((?v0 B_a_prod$ ))(= (fun_app$i swap$a (fun_app$h swap$ ?v0 ))?v0 )):named a41 ))
(assert (! (forall ((?v0 A_b_prod$ ))(= (fun_app$h swap$ (fun_app$i swap$a ?v0 ))?v0 )):named a42 ))
(assert (! (forall ((?v0 B_a_prod_bool_fun$ )(?v1 B$ )(?v2 A$ ))(=> (and (fun_app$c (fun_app$f (curry$ ?v0 )?v1 )?v2 )(=> (fun_app$ ?v0 (pair$a ?v1 ?v2 ))false ))false )):named a43 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A$ )(?v2 B$ ))(=> (and (fun_app$b (fun_app$g (curry$a ?v0 )?v1 )?v2 )(=> (fun_app$a ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a44 ))
(assert (! (forall ((?v0 B_a_prod_bool_fun$ )(?v1 B$ )(?v2 A$ ))(=> (fun_app$c (fun_app$f (curry$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (pair$a ?v1 ?v2 )))):named a45 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A$ )(?v2 B$ ))(=> (fun_app$b (fun_app$g (curry$a ?v0 )?v1 )?v2 )(fun_app$a ?v0 (pair$ ?v1 ?v2 )))):named a46 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_a_rbt$ )(?v3 B$ )(?v4 A$ )(?v5 B_a_rbt$ ))(= (rbt_greater$ ?v0 ?v1 (balance$ ?v2 ?v3 ?v4 ?v5 ))(and (rbt_greater$ ?v0 ?v1 ?v2 )(and (rbt_greater$ ?v0 ?v1 ?v5 )(fun_app$b (fun_app$d ?v0 ?v1 )?v3 ))))):named a47 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(= (rbt_greater$a ?v0 ?v1 (balance$a ?v2 ?v3 ?v4 ?v5 ))(and (rbt_greater$a ?v0 ?v1 ?v2 )(and (rbt_greater$a ?v0 ?v1 ?v5 )(fun_app$c (fun_app$e ?v0 ?v1 )?v3 ))))):named a48 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_a_rbt$ )(?v3 B$ )(?v4 A$ )(?v5 B_a_rbt$ ))(= (rbt_less$ ?v0 ?v1 (balance$ ?v2 ?v3 ?v4 ?v5 ))(and (rbt_less$ ?v0 ?v1 ?v2 )(and (rbt_less$ ?v0 ?v1 ?v5 )(fun_app$b (fun_app$d ?v0 ?v3 )?v1 ))))):named a49 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(= (rbt_less$a ?v0 ?v1 (balance$a ?v2 ?v3 ?v4 ?v5 ))(and (rbt_less$a ?v0 ?v1 ?v2 )(and (rbt_less$a ?v0 ?v1 ?v5 )(fun_app$c (fun_app$e ?v0 ?v3 )?v1 ))))):named a50 ))
(assert (! (forall ((?v0 A_b_rbt$ ))(=> (inv1l$ ?v0 )(inv1$a (paint$ b$ ?v0 )))):named a51 ))
(assert (! (forall ((?v0 B_a_rbt$ )(?v1 B_a_rbt$ )(?v2 B$ )(?v3 A$ ))(=> (and (inv2$a ?v0 )(and (inv2$a ?v1 )(= (bheight$ ?v0 )(bheight$ ?v1 ))))(inv2$a (balance$ ?v0 ?v2 ?v3 ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ ))(=> (and (inv2$ ?v0 )(and (inv2$ ?v1 )(= (bheight$a ?v0 )(bheight$a ?v1 ))))(inv2$ (balance$a ?v0 ?v2 ?v3 ?v1 )))):named a53 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (inv1l$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))(and (inv1$a ?v1 )(inv1$a ?v4 ))):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a54 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 A_b_prod_set$ ))(= (member$ (pair$a ?v0 ?v1 )(image$ swap$a ?v2 ))(member$a (pair$ ?v1 ?v0 )?v2 ))):named a55 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 B_a_prod_set$ ))(= (member$a (pair$ ?v0 ?v1 )(image$a swap$ ?v2 ))(member$ (pair$a ?v1 ?v0 )?v2 ))):named a56 ))
(assert (! (forall ((?v0 B_a_prod_bool_fun$ )(?v1 B_a_prod_bool_fun$ ))(=> (forall ((?v2 B_a_prod$ ))(= (fun_app$ ?v0 ?v2 )(fun_app$ ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(=> (forall ((?v2 A$ ))(= (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 )))(= (collect$a ?v0 )(collect$a ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A_b_prod_bool_fun$ ))(=> (forall ((?v2 A_b_prod$ ))(= (fun_app$a ?v0 ?v2 )(fun_app$a ?v1 ?v2 )))(= (collect$b ?v0 )(collect$b ?v1 )))):named a59 ))
(assert (! (forall ((?v0 B_set$ ))(= (collect$c (uu$ ?v0 ))?v0 )):named a60 ))
(assert (! (forall ((?v0 A_set$ ))(= (collect$a (uua$ ?v0 ))?v0 )):named a61 ))
(assert (! (forall ((?v0 B_a_prod_set$ ))(= (collect$ (uub$ ?v0 ))?v0 )):named a62 ))
(assert (! (forall ((?v0 A_b_prod_set$ ))(= (collect$b (uuc$ ?v0 ))?v0 )):named a63 ))
(assert (! (forall ((?v0 B$ )(?v1 B_bool_fun$ ))(= (member$b ?v0 (collect$c ?v1 ))(fun_app$b ?v1 ?v0 ))):named a64 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(= (member$c ?v0 (collect$a ?v1 ))(fun_app$c ?v1 ?v0 ))):named a65 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$ ?v1 ?v0 ))):named a66 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_bool_fun$ ))(= (member$a ?v0 (collect$b ?v1 ))(fun_app$a ?v1 ?v0 ))):named a67 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ )(?v5 Color$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ ))(= (= (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )(branch$ ?v5 ?v6 ?v7 ?v8 ?v9 ))(and (= ?v0 ?v5 )(and (= ?v1 ?v6 )(and (= ?v2 ?v7 )(and (= ?v3 ?v8 )(= ?v4 ?v9 ))))))):named a68 ))
(assert (! (forall ((?v0 B_a_rbt$ )(?v1 B$ )(?v2 A$ )(?v3 B_a_rbt$ )(?v4 B$ )(?v5 A$ )(?v6 B_a_rbt$ )(?v7 B$ )(?v8 A$ )(?v9 B_a_rbt$ ))(! (= (balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 ?v9 ))(branch$a b$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 ?v9 ))):pattern ((balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 ?v9 ))))):named a69 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ ))(! (= (balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))):pattern ((balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))))):named a70 ))
(assert (! (forall ((?v0 B_a_rbt$ )(?v1 B$ )(?v2 A$ )(?v3 B_a_rbt$ )(?v4 B$ )(?v5 A$ )(?v6 B_a_rbt$ )(?v7 B$ )(?v8 A$ )(?v9 B_a_rbt$ ))(! (= (balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 ?v9 ))(branch$a b$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 ?v9 ))):pattern ((balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 ?v9 ))))):named a71 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ ))(! (= (balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))):pattern ((balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 ?v9 ))))):named a72 ))
(assert (! (forall ((?v0 B_a_rbt$ )(?v1 B$ )(?v2 A$ )(?v3 B_a_rbt$ )(?v4 B$ )(?v5 A$ )(?v6 B_a_rbt$ )(?v7 B$ )(?v8 A$ )(?v9 B_a_rbt$ )(?v10 B$ )(?v11 A$ )(?v12 B_a_rbt$ ))(! (= (balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 (branch$a b$ ?v9 ?v10 ?v11 ?v12 )))(branch$a b$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 (branch$a b$ ?v9 ?v10 ?v11 ?v12 )))):pattern ((balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a b$ ?v6 ?v7 ?v8 (branch$a b$ ?v9 ?v10 ?v11 ?v12 )))))):named a73 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ )(?v10 A$ )(?v11 B$ )(?v12 A_b_rbt$ ))(! (= (balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 )))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 )))):pattern ((balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ b$ ?v6 ?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 )))))):named a74 ))
(assert (! (forall ((?v0 B_a_rbt$ )(?v1 B$ )(?v2 A$ )(?v3 B_a_rbt$ )(?v4 B$ )(?v5 A$ )(?v6 Color$ )(?v7 B_a_rbt$ )(?v8 B$ )(?v9 A$ )(?v10 B_a_rbt$ )(?v11 B$ )(?v12 A$ )(?v13 B_a_rbt$ )(?v14 B$ )(?v15 A$ )(?v16 B_a_rbt$ ))(! (= (balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a ?v6 (branch$a b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$a b$ ?v13 ?v14 ?v15 ?v16 )))(branch$a b$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a ?v6 (branch$a b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$a b$ ?v13 ?v14 ?v15 ?v16 )))):pattern ((balance$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$a ?v6 (branch$a b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$a b$ ?v13 ?v14 ?v15 ?v16 )))))):named a75 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 Color$ )(?v7 A_b_rbt$ )(?v8 A$ )(?v9 B$ )(?v10 A_b_rbt$ )(?v11 A$ )(?v12 B$ )(?v13 A_b_rbt$ )(?v14 A$ )(?v15 B$ )(?v16 A_b_rbt$ ))(! (= (balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 )))(branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 )))):pattern ((balance$a (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 (branch$ ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 )?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 )))))):named a76 ))
(assert (! (forall ((?v0 B_a_rbt$ )(?v1 B$ )(?v2 A$ )(?v3 B_a_rbt$ )(?v4 B$ )(?v5 A$ )(?v6 B_a_rbt$ )(?v7 B$ )(?v8 A$ )(?v9 B_a_rbt$ )(?v10 B$ )(?v11 A$ )(?v12 B_a_rbt$ ))(! (= (balance$ (branch$a b$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$a b$ ?v9 ?v10 ?v11 ?v12 ))(branch$a b$ (branch$a b$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$a b$ ?v9 ?v10 ?v11 ?v12 ))):pattern ((balance$ (branch$a b$ (branch$a b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$a b$ ?v9 ?v10 ?v11 ?v12 ))))):named a77 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ )(?v10 A$ )(?v11 B$ )(?v12 A_b_rbt$ ))(! (= (balance$a (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 ))(branch$ b$ (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 ))):pattern ((balance$a (branch$ b$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 ?v5 ?v6 )?v7 ?v8 (branch$ b$ ?v9 ?v10 ?v11 ?v12 ))))):named a78 ))
(assert (! (forall ((?v0 Color$ )(?v1 B_a_rbt$ )(?v2 B$ )(?v3 A$ )(?v4 B_a_rbt$ )(?v5 B$ )(?v6 A$ )(?v7 B_a_rbt$ )(?v8 B$ )(?v9 A$ )(?v10 B_a_rbt$ )(?v11 B$ )(?v12 A$ )(?v13 B_a_rbt$ )(?v14 B$ )(?v15 A$ )(?v16 B_a_rbt$ ))(! (= (balance$ (branch$a ?v0 (branch$a b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$a b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 (branch$a b$ ?v13 ?v14 ?v15 ?v16 ))(branch$a b$ (branch$a ?v0 (branch$a b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$a b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 (branch$a b$ ?v13 ?v14 ?v15 ?v16 ))):pattern ((balance$ (branch$a ?v0 (branch$a b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$a b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 (branch$a b$ ?v13 ?v14 ?v15 ?v16 ))))):named a79 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ )(?v5 A$ )(?v6 B$ )(?v7 A_b_rbt$ )(?v8 A$ )(?v9 B$ )(?v10 A_b_rbt$ )(?v11 A$ )(?v12 B$ )(?v13 A_b_rbt$ )(?v14 A$ )(?v15 B$ )(?v16 A_b_rbt$ ))(! (= (balance$a (branch$ ?v0 (branch$ b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 ))(branch$ b$ (branch$ ?v0 (branch$ b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 ))):pattern ((balance$a (branch$ ?v0 (branch$ b$ ?v1 ?v2 ?v3 ?v4 )?v5 ?v6 (branch$ b$ ?v7 ?v8 ?v9 ?v10 ))?v11 ?v12 (branch$ b$ ?v13 ?v14 ?v15 ?v16 ))))):named a80 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (inv2$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))(and (inv2$ ?v1 )(and (inv2$ ?v4 )(= (bheight$a ?v1 )(bheight$a ?v4 ))))):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a81 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 Color$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ ))(! (= (rbt_less$a ?v0 ?v1 (branch$ ?v2 ?v3 ?v4 ?v5 ?v6 ))(and (fun_app$c (fun_app$e ?v0 ?v4 )?v1 )(and (rbt_less$a ?v0 ?v1 ?v3 )(rbt_less$a ?v0 ?v1 ?v6 )))):pattern ((rbt_less$a ?v0 ?v1 (branch$ ?v2 ?v3 ?v4 ?v5 ?v6 ))))):named a82 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 Color$ )(?v3 A_b_rbt$ )(?v4 A$ )(?v5 B$ )(?v6 A_b_rbt$ ))(! (= (rbt_greater$a ?v0 ?v1 (branch$ ?v2 ?v3 ?v4 ?v5 ?v6 ))(and (fun_app$c (fun_app$e ?v0 ?v1 )?v4 )(and (rbt_greater$a ?v0 ?v1 ?v3 )(rbt_greater$a ?v0 ?v1 ?v6 )))):pattern ((rbt_greater$a ?v0 ?v1 (branch$ ?v2 ?v3 ?v4 ?v5 ?v6 ))))):named a83 ))
(assert (! (forall ((?v0 Color$ )(?v1 Color$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(! (= (paint$ ?v0 (branch$ ?v1 ?v2 ?v3 ?v4 ?v5 ))(branch$ ?v0 ?v2 ?v3 ?v4 ?v5 )):pattern ((paint$ ?v0 (branch$ ?v1 ?v2 ?v3 ?v4 ?v5 ))))):named a84 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_a_b_prod_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod_set$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$b ?v1 ?v3 )))):named a85 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$k ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (image$c ?v1 ?v3 )))):named a86 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod_set$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$c ?v0 (image$d ?v1 ?v3 )))):named a87 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_a_b_prod_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$a ?v0 (image$e ?v1 ?v3 )))):named a88 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 A_b_a_prod_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$n ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$ ?v0 (image$f ?v1 ?v3 )))):named a89 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_prod_a_fun$ )(?v2 B_a_prod$ )(?v3 B_a_prod_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$c ?v0 (image$g ?v1 ?v3 )))):named a90 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 A_b_prod_b_a_prod_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$ ?v1 ?v3 )))):named a91 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 B_a_prod_a_b_prod_fun$ )(?v2 B_a_prod$ )(?v3 B_a_prod_set$ ))(=> (and (= ?v0 (fun_app$h ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$a ?v1 ?v3 )))):named a92 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_b_a_prod_fun$ )(?v2 B_a_prod$ )(?v3 B_a_prod_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$h ?v1 ?v3 )))):named a93 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$q ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$b ?v0 (image$i ?v1 ?v3 )))):named a94 ))
(assert (! (forall ((?v0 A_b_rbt$ ))(= (color_of$ (paint$ b$ ?v0 ))b$ )):named a95 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 Color$ )(?v2 A_b_rbt$ )(?v3 A$ )(?v4 B$ )(?v5 A_b_rbt$ ))(! (= (rbt_sorted$ ?v0 (branch$ ?v1 ?v2 ?v3 ?v4 ?v5 ))(and (rbt_less$a ?v0 ?v3 ?v2 )(and (rbt_greater$a ?v0 ?v3 ?v5 )(and (rbt_sorted$ ?v0 ?v2 )(rbt_sorted$ ?v0 ?v5 ))))):pattern ((rbt_sorted$ ?v0 (branch$ ?v1 ?v2 ?v3 ?v4 ?v5 ))))):named a96 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (inv1$a (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))(and (inv1$a ?v1 )(and (inv1$a ?v4 )(or (= ?v0 b$ )(and (= (color_of$ ?v1 )b$ )(= (color_of$ ?v4 )b$ )))))):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a97 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ ))(! (= (color_of$ (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 ))?v0 ):pattern ((branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )))):named a98 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_a_b_prod_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$j ?v2 ?v0 )(image$b ?v2 ?v1 )))):named a99 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_a_fun$ ))(=> (member$c ?v0 ?v1 )(member$c (fun_app$k ?v2 ?v0 )(image$c ?v2 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_a_fun$ ))(=> (member$a ?v0 ?v1 )(member$c (fun_app$l ?v2 ?v0 )(image$d ?v2 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_a_b_prod_fun$ ))(=> (member$c ?v0 ?v1 )(member$a (fun_app$m ?v2 ?v0 )(image$e ?v2 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_b_a_prod_fun$ ))(=> (member$c ?v0 ?v1 )(member$ (fun_app$n ?v2 ?v0 )(image$f ?v2 ?v1 )))):named a103 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod_a_fun$ ))(=> (member$ ?v0 ?v1 )(member$c (fun_app$o ?v2 ?v0 )(image$g ?v2 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_b_a_prod_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$i ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod_a_b_prod_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$h ?v2 ?v0 )(image$a ?v2 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod_b_a_prod_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$p ?v2 ?v0 )(image$h ?v2 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_b_fun$ ))(=> (member$c ?v0 ?v1 )(member$b (fun_app$q ?v2 ?v0 )(image$i ?v2 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod$ )(?v3 A_b_prod_a_b_prod_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$j ?v3 ?v0 )))(member$a ?v2 (image$b ?v3 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A$ )(?v3 A_a_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$k ?v3 ?v0 )))(member$c ?v2 (image$c ?v3 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 A$ )(?v3 A_b_prod_a_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$l ?v3 ?v0 )))(member$c ?v2 (image$d ?v3 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_b_prod$ )(?v3 A_a_b_prod_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$m ?v3 ?v0 )))(member$a ?v2 (image$e ?v3 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 B_a_prod$ )(?v3 A_b_a_prod_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$n ?v3 ?v0 )))(member$ ?v2 (image$f ?v3 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_set$ )(?v2 A$ )(?v3 B_a_prod_a_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$o ?v3 ?v0 )))(member$c ?v2 (image$g ?v3 ?v1 )))):named a114 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 B_a_prod$ )(?v3 A_b_prod_b_a_prod_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$i ?v3 ?v0 )))(member$ ?v2 (image$ ?v3 ?v1 )))):named a115 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_set$ )(?v2 A_b_prod$ )(?v3 B_a_prod_a_b_prod_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$h ?v3 ?v0 )))(member$a ?v2 (image$a ?v3 ?v1 )))):named a116 ))
(assert (! (forall ((?v0 B_a_prod$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod$ )(?v3 B_a_prod_b_a_prod_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$p ?v3 ?v0 )))(member$ ?v2 (image$h ?v3 ?v1 )))):named a117 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 B$ )(?v3 A_b_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$q ?v3 ?v0 )))(member$b ?v2 (image$i ?v3 ?v1 )))):named a118 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_bool_fun$ ))(=> (forall ((?v3 A_b_prod$ ))(=> (member$a ?v3 (image$b ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_b_prod$ ))(=> (member$a ?v3 ?v1 )(fun_app$a ?v2 (fun_app$j ?v0 ?v3 )))))):named a119 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$c ?v3 (image$c ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$c ?v3 ?v1 )(fun_app$c ?v2 (fun_app$k ?v0 ?v3 )))))):named a120 ))
(assert (! (forall ((?v0 A_a_b_prod_fun$ )(?v1 A_set$ )(?v2 A_b_prod_bool_fun$ ))(=> (forall ((?v3 A_b_prod$ ))(=> (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$c ?v3 ?v1 )(fun_app$a ?v2 (fun_app$m ?v0 ?v3 )))))):named a121 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 A_b_prod_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$c ?v3 (image$d ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(forall ((?v3 A_b_prod$ ))(=> (member$a ?v3 ?v1 )(fun_app$c ?v2 (fun_app$l ?v0 ?v3 )))))):named a122 ))
(assert (! (forall ((?v0 B_a_prod_a_fun$ )(?v1 B_a_prod_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$c ?v3 (image$g ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(forall ((?v3 B_a_prod$ ))(=> (member$ ?v3 ?v1 )(fun_app$c ?v2 (fun_app$o ?v0 ?v3 )))))):named a123 ))
(assert (! (forall ((?v0 A_b_a_prod_fun$ )(?v1 A_set$ )(?v2 B_a_prod_bool_fun$ ))(=> (forall ((?v3 B_a_prod$ ))(=> (member$ ?v3 (image$f ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$c ?v3 ?v1 )(fun_app$ ?v2 (fun_app$n ?v0 ?v3 )))))):named a124 ))
(assert (! (forall ((?v0 B_a_prod_a_b_prod_fun$ )(?v1 B_a_prod_set$ )(?v2 A_b_prod_bool_fun$ ))(=> (forall ((?v3 A_b_prod$ ))(=> (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 B_a_prod$ ))(=> (member$ ?v3 ?v1 )(fun_app$a ?v2 (fun_app$h ?v0 ?v3 )))))):named a125 ))
(assert (! (forall ((?v0 A_b_prod_b_a_prod_fun$ )(?v1 A_b_prod_set$ )(?v2 B_a_prod_bool_fun$ ))(=> (forall ((?v3 B_a_prod$ ))(=> (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 A_b_prod$ ))(=> (member$a ?v3 ?v1 )(fun_app$ ?v2 (fun_app$i ?v0 ?v3 )))))):named a126 ))
(assert (! (forall ((?v0 B_a_prod_b_a_prod_fun$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod_bool_fun$ ))(=> (forall ((?v3 B_a_prod$ ))(=> (member$ ?v3 (image$h ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 B_a_prod$ ))(=> (member$ ?v3 ?v1 )(fun_app$ ?v2 (fun_app$p ?v0 ?v3 )))))):named a127 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_set$ )(?v2 A_bool_fun$ ))(=> (forall ((?v3 A$ ))(=> (member$c ?v3 (image$j ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(forall ((?v3 B$ ))(=> (member$b ?v3 ?v1 )(fun_app$c ?v2 (fun_app$r ?v0 ?v3 )))))):named a128 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_bool_fun$ ))(=> (exists ((?v3 A_b_prod$ ))(and (member$a ?v3 (image$b ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A_b_prod$ ))(and (member$a ?v3 ?v1 )(fun_app$a ?v2 (fun_app$j ?v0 ?v3 )))))):named a129 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$c ?v3 (image$c ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$c ?v3 ?v1 )(fun_app$c ?v2 (fun_app$k ?v0 ?v3 )))))):named a130 ))
(assert (! (forall ((?v0 A_a_b_prod_fun$ )(?v1 A_set$ )(?v2 A_b_prod_bool_fun$ ))(=> (exists ((?v3 A_b_prod$ ))(and (member$a ?v3 (image$e ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$c ?v3 ?v1 )(fun_app$a ?v2 (fun_app$m ?v0 ?v3 )))))):named a131 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 A_b_prod_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$c ?v3 (image$d ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(exists ((?v3 A_b_prod$ ))(and (member$a ?v3 ?v1 )(fun_app$c ?v2 (fun_app$l ?v0 ?v3 )))))):named a132 ))
(assert (! (forall ((?v0 B_a_prod_a_fun$ )(?v1 B_a_prod_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$c ?v3 (image$g ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(exists ((?v3 B_a_prod$ ))(and (member$ ?v3 ?v1 )(fun_app$c ?v2 (fun_app$o ?v0 ?v3 )))))):named a133 ))
(assert (! (forall ((?v0 A_b_a_prod_fun$ )(?v1 A_set$ )(?v2 B_a_prod_bool_fun$ ))(=> (exists ((?v3 B_a_prod$ ))(and (member$ ?v3 (image$f ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$c ?v3 ?v1 )(fun_app$ ?v2 (fun_app$n ?v0 ?v3 )))))):named a134 ))
(assert (! (forall ((?v0 B_a_prod_a_b_prod_fun$ )(?v1 B_a_prod_set$ )(?v2 A_b_prod_bool_fun$ ))(=> (exists ((?v3 A_b_prod$ ))(and (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 B_a_prod$ ))(and (member$ ?v3 ?v1 )(fun_app$a ?v2 (fun_app$h ?v0 ?v3 )))))):named a135 ))
(assert (! (forall ((?v0 A_b_prod_b_a_prod_fun$ )(?v1 A_b_prod_set$ )(?v2 B_a_prod_bool_fun$ ))(=> (exists ((?v3 B_a_prod$ ))(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 A_b_prod$ ))(and (member$a ?v3 ?v1 )(fun_app$ ?v2 (fun_app$i ?v0 ?v3 )))))):named a136 ))
(assert (! (forall ((?v0 B_a_prod_b_a_prod_fun$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod_bool_fun$ ))(=> (exists ((?v3 B_a_prod$ ))(and (member$ ?v3 (image$h ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 B_a_prod$ ))(and (member$ ?v3 ?v1 )(fun_app$ ?v2 (fun_app$p ?v0 ?v3 )))))):named a137 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_set$ )(?v2 A_bool_fun$ ))(=> (exists ((?v3 A$ ))(and (member$c ?v3 (image$j ?v0 ?v1 ))(fun_app$c ?v2 ?v3 )))(exists ((?v3 B$ ))(and (member$b ?v3 ?v1 )(fun_app$c ?v2 (fun_app$r ?v0 ?v3 )))))):named a138 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A_b_prod$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$l ?v2 ?v4 )(fun_app$l ?v3 ?v4 )))))(= (image$d ?v2 ?v0 )(image$d ?v3 ?v1 )))):named a139 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_b_a_prod_fun$ )(?v3 A_b_a_prod_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$c ?v4 ?v1 )(= (fun_app$n ?v2 ?v4 )(fun_app$n ?v3 ?v4 )))))(= (image$f ?v2 ?v0 )(image$f ?v3 ?v1 )))):named a140 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_b_prod_fun$ )(?v3 A_a_b_prod_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$c ?v4 ?v1 )(= (fun_app$m ?v2 ?v4 )(fun_app$m ?v3 ?v4 )))))(= (image$e ?v2 ?v0 )(image$e ?v3 ?v1 )))):named a141 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$c ?v4 ?v1 )(= (fun_app$k ?v2 ?v4 )(fun_app$k ?v3 ?v4 )))))(= (image$c ?v2 ?v0 )(image$c ?v3 ?v1 )))):named a142 ))
(assert (! (forall ((?v0 B_a_prod_set$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod_a_fun$ )(?v3 B_a_prod_a_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 B_a_prod$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$o ?v2 ?v4 )(fun_app$o ?v3 ?v4 )))))(= (image$g ?v2 ?v0 )(image$g ?v3 ?v1 )))):named a143 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_b_a_prod_fun$ )(?v3 A_b_prod_b_a_prod_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A_b_prod$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$i ?v2 ?v4 )(fun_app$i ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a144 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_a_b_prod_fun$ )(?v3 A_b_prod_a_b_prod_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 A_b_prod$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$j ?v2 ?v4 )(fun_app$j ?v3 ?v4 )))))(= (image$b ?v2 ?v0 )(image$b ?v3 ?v1 )))):named a145 ))
(assert (! (forall ((?v0 B_a_prod_set$ )(?v1 B_a_prod_set$ )(?v2 B_a_prod_a_b_prod_fun$ )(?v3 B_a_prod_a_b_prod_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 B_a_prod$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$h ?v2 ?v4 )(fun_app$h ?v3 ?v4 )))))(= (image$a ?v2 ?v0 )(image$a ?v3 ?v1 )))):named a146 ))
(check-sat )
;(get-unsat-core )
