;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A_treeFI$ 0 )
(declare-sort A_treeFI_set$ 0 )
(declare-datatypes ()((A_treeFI_list$ (nil$ )(cons$ (hd$ A_treeFI$ )(tl$ A_treeFI_list$ )))))
(declare-fun tr$ ()A_treeFI$ )
(declare-fun set$ (A_treeFI_list$ )A_treeFI_set$ )
(declare-fun sub$ (A_treeFI$ )A_treeFI_list$ )
(declare-fun member$ (A_treeFI$ A_treeFI_set$ )Bool )
(declare-fun infiniteTr$ (A_treeFI$ )Bool )
(assert (! (not (exists ((?v0 A_treeFI$ ))(and (member$ ?v0 (set$ (sub$ tr$ )))(infiniteTr$ ?v0 )))):named a0 ))
(assert (! (infiniteTr$ tr$ ):named a1 ))
(check-sat )
;(get-unsat-core )
