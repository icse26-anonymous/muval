;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort A_a_sp_nu$ 0 )
(declare-sort A_b_sp_nu$ 0 )
(declare-sort A_c_sp_nu$ 0 )
(declare-sort B_a_sp_nu$ 0 )
(declare-sort B_b_sp_nu$ 0 )
(declare-sort B_c_sp_nu$ 0 )
(declare-sort C_a_sp_nu$ 0 )
(declare-sort C_b_sp_nu$ 0 )
(declare-sort C_c_sp_nu$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort B_stream_set$ 0 )
(declare-sort C_stream_set$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_stream_b_stream_fun$ 0 )
(declare-sort A_stream_c_stream_fun$ 0 )
(declare-sort B_stream_a_stream_fun$ 0 )
(declare-sort B_stream_b_stream_fun$ 0 )
(declare-sort B_stream_c_stream_fun$ 0 )
(declare-sort C_stream_a_stream_fun$ 0 )
(declare-sort C_stream_b_stream_fun$ 0 )
(declare-sort C_stream_c_stream_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_a_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_a_stream_c_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_b_stream_prod_fun$ 0 )
(declare-sort A_stream_b_stream_c_stream_prod_fun$ 0 )
(declare-sort A_stream_c_stream_b_stream_prod_fun$ 0 )
(declare-sort A_stream_c_stream_c_stream_prod_fun$ 0 )
(declare-sort B_stream_b_stream_b_stream_prod_fun$ 0 )
(declare-sort C_stream_b_stream_b_stream_prod_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_b_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ 0 )
(declare-sort B_stream_b_stream_fun_b_stream_c_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ 0 )
(declare-sort B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_a_stream_c_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_a_stream_fun_c_stream_a_stream_fun_fun$ 0 )
(declare-sort C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_a_stream_fun_c_stream_c_stream_fun_fun$ 0 )
(declare-sort C_stream_b_stream_c_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_c_stream_c_stream_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun_c_stream_a_stream_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ 0 )
(declare-sort C_stream_c_stream_prod_b_stream_b_stream_prod_fun$ 0 )
(declare-sort A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_b_stream_fun_c_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort C_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ 0 )
(declare-sort C_stream_c_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ 0 )
(declare-sort B_stream_a_stream_fun_a_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$ 0 )
(declare-sort B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ 0 )
(declare-sort B_stream$ 0)
(declare-sort A_stream$ 0)
(declare-sort C_stream$ 0)
(declare-fun shd$ (B_stream$)B$)
(declare-fun stl$ (B_stream$)B_stream$)
(declare-fun sCons$ (B$ B_stream$ )B_stream$)
(declare-fun shd$a (A_stream$)A$)
(declare-fun stl$a (A_stream$)A_stream$)
(declare-fun sCons$a (A$ A_stream$ )A_stream$)
(declare-fun shd$b (C_stream$)C$)
(declare-fun stl$b (C_stream$)C_stream$)
(declare-fun sCons$b (C$ C_stream$ )C_stream$)
(declare-datatypes ()((C_stream_b_stream_prod$ (pair$ (fst$ C_stream$ )(snd$ B_stream$ )))(B_stream_c_stream_prod$ (pair$a (fst$a B_stream$ )(snd$a C_stream$ )))(A_stream_b_stream_fun_a_stream_b_stream_fun_prod$ (pair$b (select$ A_stream_b_stream_fun$ )(selecta$ A_stream_b_stream_fun$ )))(B_stream_b_stream_prod$ (pair$c (fst$b B_stream$ )(snd$b B_stream$ )))(C_stream_c_stream_prod$ (pair$d (fst$c C_stream$ )(snd$c C_stream$ )))))
(declare-fun id$ ()B_stream_b_stream_fun$ )
(declare-fun sp$ ()C_b_sp_nu$ )
(declare-fun sp$a ()A_c_sp_nu$ )
(declare-fun comp$ (C_stream_b_stream_fun$ )A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun copy$ ()A_a_sp_nu$ )
(declare-fun swap$ (A_stream$ )A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$a (B_stream_b_stream_fun$ )A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun comp$b (A_stream_b_stream_fun$ )A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun comp$c (B_stream_b_stream_fun$ )C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun comp$d (A_stream_b_stream_fun$ )C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun comp$e (C_stream_b_stream_fun$ )C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ )
(declare-fun comp$f (B_stream_c_stream_fun$ )A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun comp$g (C_stream_c_stream_fun$ )A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun comp$h (A_stream_c_stream_fun$ )A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun comp$i (C_stream_a_stream_fun$ )B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ )
(declare-fun comp$j (C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun comp$k (A_stream_c_stream_fun$ )C_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )
(declare-fun comp$l (C_stream_b_stream_fun$ )B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ )
(declare-fun comp$m (B_stream_b_stream_fun$ )B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ )
(declare-fun comp$n (C_stream_a_stream_fun$ )C_stream_c_stream_fun_c_stream_a_stream_fun_fun$ )
(declare-fun comp$o (C_stream_a_stream_fun$ )A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun comp$p (A_stream_b_stream_fun$ )B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ )
(declare-fun comp$q (B_stream_a_stream_fun$ )A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun comp$r (A_stream_a_stream_fun$ )A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun comp$s (A_stream_a_stream_fun$ )C_stream_a_stream_fun_c_stream_a_stream_fun_fun$ )
(declare-fun comp$t (B_stream_c_stream_fun$ )C_stream_b_stream_fun_c_stream_c_stream_fun_fun$ )
(declare-fun comp$u (B_stream_c_stream_fun$ )B_stream_b_stream_fun_b_stream_c_stream_fun_fun$ )
(declare-fun comp$v (A_stream_c_stream_fun$ )B_stream_a_stream_fun_b_stream_c_stream_fun_fun$ )
(declare-fun comp$w (A_stream_c_stream_b_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_c_stream_b_stream_prod_fun$ )
(declare-fun comp$x (A_stream_b_stream_c_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_b_stream_c_stream_prod_fun$ )
(declare-fun comp$y (C_stream_c_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ )
(declare-fun comp$z (B_stream_b_stream_b_stream_prod_fun$ A_stream_b_stream_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun copy$a ()C_c_sp_nu$ )
(declare-fun copy$b ()B_b_sp_nu$ )
(declare-fun image$ (C_stream_b_stream_fun$ C_stream_set$ )B_stream_set$ )
(declare-fun swap$a (A_stream$ )A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ )
(declare-fun comp$aa (C_stream_b_stream_b_stream_prod_fun$ C_stream_c_stream_fun$ )C_stream_b_stream_b_stream_prod_fun$ )
(declare-fun comp$ab (A_stream_b_stream_b_stream_prod_fun$ C_stream_a_stream_fun$ )C_stream_b_stream_b_stream_prod_fun$ )
(declare-fun comp$ac (A_stream_b_stream_b_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun comp$ad (A_stream_c_stream_c_stream_prod_fun$ A_stream_a_stream_fun$ )A_stream_c_stream_c_stream_prod_fun$ )
(declare-fun comp$ae (C_stream_b_stream_b_stream_prod_fun$ A_stream_c_stream_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun comp$af (C_stream_c_stream_prod_b_stream_b_stream_prod_fun$ A_stream_c_stream_c_stream_prod_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun convol$ (A_stream_c_stream_fun$ A_stream_b_stream_fun$ )A_stream_c_stream_b_stream_prod_fun$ )
(declare-fun image$a (A_stream_c_stream_fun$ A_stream_set$ )C_stream_set$ )
(declare-fun image$b (A_stream_b_stream_fun$ A_stream_set$ )B_stream_set$ )
(declare-fun run_nu$ (A_b_sp_nu$ )A_stream_b_stream_fun$ )
(declare-fun convol$a (A_stream_b_stream_fun$ A_stream_c_stream_fun$ )A_stream_b_stream_c_stream_prod_fun$ )
(declare-fun convol$b (C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )C_stream_c_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ )
(declare-fun convol$c (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_a_stream_b_stream_fun_prod_fun$ )
(declare-fun convol$d (B_stream_b_stream_fun$ B_stream_b_stream_fun$ )B_stream_b_stream_b_stream_prod_fun$ )
(declare-fun convol$e (A_stream_b_stream_fun$ A_stream_b_stream_fun$ )A_stream_b_stream_b_stream_prod_fun$ )
(declare-fun convol$f (C_stream_b_stream_fun$ C_stream_b_stream_fun$ )C_stream_b_stream_b_stream_prod_fun$ )
(declare-fun convol$g (A_stream_c_stream_fun$ A_stream_c_stream_fun$ )A_stream_c_stream_c_stream_prod_fun$ )
(declare-fun fun_app$ (A_stream_c_stream_fun_a_stream_b_stream_fun_fun$ A_stream_c_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_upd$ (C_stream_a_stream_fun$ )C_stream_a_stream_c_stream_a_stream_fun_fun_fun$ )
(declare-fun map_fun$ (A_stream_c_stream_fun$ )C_stream_b_stream_fun_c_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun run_nu$a (C_b_sp_nu$ )C_stream_b_stream_fun$ )
(declare-fun run_nu$b (A_c_sp_nu$ )A_stream_c_stream_fun$ )
(declare-fun run_nu$c (B_b_sp_nu$ )B_stream_b_stream_fun$ )
(declare-fun run_nu$d (A_a_sp_nu$ )A_stream_a_stream_fun$ )
(declare-fun run_nu$e (C_a_sp_nu$ )C_stream_a_stream_fun$ )
(declare-fun run_nu$f (C_c_sp_nu$ )C_stream_c_stream_fun$ )
(declare-fun run_nu$g (B_c_sp_nu$ )B_stream_c_stream_fun$ )
(declare-fun run_nu$h (B_a_sp_nu$ )B_stream_a_stream_fun$ )
(declare-fun fun_app$a (A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ A_stream_b_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$b (A_stream_a_stream_fun_a_stream_b_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$c (C_stream_b_stream_fun_c_stream_b_stream_fun_fun$ C_stream_b_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$d (C_stream_a_stream_fun_c_stream_b_stream_fun_fun$ C_stream_a_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$e (C_stream_c_stream_fun_c_stream_b_stream_fun_fun$ C_stream_c_stream_fun$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$f (A_stream_b_stream_fun_a_stream_c_stream_fun_fun$ A_stream_b_stream_fun$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$g (A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ A_stream_c_stream_fun$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$h (A_stream_a_stream_fun_a_stream_c_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$i (B_stream_c_stream_fun_b_stream_a_stream_fun_fun$ B_stream_c_stream_fun$ )B_stream_a_stream_fun$ )
(declare-fun fun_app$j (A_stream_b_stream_fun$ A_stream$ )B_stream$ )
(declare-fun fun_app$k (B_stream_b_stream_fun$ B_stream$ )B_stream$ )
(declare-fun fun_app$l (A_stream_c_stream_fun$ A_stream$ )C_stream$ )
(declare-fun fun_app$m (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$n (C_stream_b_stream_fun$ C_stream$ )B_stream$ )
(declare-fun fun_app$o (C_stream_a_stream_fun$ C_stream$ )A_stream$ )
(declare-fun fun_app$p (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ B_stream_a_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$q (B_stream_a_stream_fun_c_stream_c_stream_fun_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$r (C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ C_stream_c_stream_fun$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$s (B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ B_stream_a_stream_fun$ )C_stream_c_stream_fun$ )
(declare-fun fun_app$t (C_stream_c_stream_fun$ C_stream$ )C_stream$ )
(declare-fun fun_app$u (C_stream_a_stream_fun_c_stream_c_stream_fun_fun$ C_stream_a_stream_fun$ )C_stream_c_stream_fun$ )
(declare-fun fun_app$v (B_stream_c_stream_fun_b_stream_b_stream_fun_fun$ B_stream_c_stream_fun$ )B_stream_b_stream_fun$ )
(declare-fun fun_app$w (B_stream_b_stream_fun_b_stream_b_stream_fun_fun$ B_stream_b_stream_fun$ )B_stream_b_stream_fun$ )
(declare-fun fun_app$x (C_stream_c_stream_fun_c_stream_a_stream_fun_fun$ C_stream_c_stream_fun$ )C_stream_a_stream_fun$ )
(declare-fun fun_app$y (A_stream_c_stream_fun_a_stream_a_stream_fun_fun$ A_stream_c_stream_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$z (B_stream_a_stream_fun_b_stream_b_stream_fun_fun$ B_stream_a_stream_fun$ )B_stream_b_stream_fun$ )
(declare-fun fun_upd$a (C_stream_b_stream_fun$ )C_stream_b_stream_c_stream_b_stream_fun_fun_fun$ )
(declare-fun fun_upd$b (B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )B_stream_a_stream_fun_c_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$ )
(declare-fun fun_upd$c (B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ )
(declare-fun fun_upd$d (A_stream_a_stream_fun$ )A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ )
(declare-fun fun_upd$e (A_stream_c_stream_fun$ )A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ )
(declare-fun fun_upd$f (A_stream_b_stream_fun$ )A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ )
(declare-fun map_fun$a (C_stream_b_stream_fun$ )A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ )
(declare-fun map_fun$b (A_stream_b_stream_fun$ )A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun map_prod$ (C_stream_b_stream_fun$ C_stream_b_stream_fun$ )C_stream_c_stream_prod_b_stream_b_stream_prod_fun$ )
(declare-fun fun_app$aa (A_stream_b_stream_fun_a_stream_a_stream_fun_fun$ A_stream_b_stream_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$ab (A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$ac (C_stream_a_stream_fun_c_stream_a_stream_fun_fun$ C_stream_a_stream_fun$ )C_stream_a_stream_fun$ )
(declare-fun fun_app$ad (C_stream_b_stream_fun_c_stream_c_stream_fun_fun$ C_stream_b_stream_fun$ )C_stream_c_stream_fun$ )
(declare-fun fun_app$ae (B_stream_b_stream_fun_b_stream_c_stream_fun_fun$ B_stream_b_stream_fun$ )B_stream_c_stream_fun$ )
(declare-fun fun_app$af (B_stream_a_stream_fun_b_stream_c_stream_fun_fun$ B_stream_a_stream_fun$ )B_stream_c_stream_fun$ )
(declare-fun fun_app$ag (B_stream_a_stream_fun$ B_stream$ )A_stream$ )
(declare-fun fun_app$ah (B_stream_c_stream_fun$ B_stream$ )C_stream$ )
(declare-fun fun_app$ai (A_stream_c_stream_a_stream_fun_fun$ A_stream$ )C_stream_a_stream_fun$ )
(declare-fun fun_app$aj (C_stream_a_stream_c_stream_a_stream_fun_fun_fun$ C_stream$ )A_stream_c_stream_a_stream_fun_fun$ )
(declare-fun fun_app$ak (B_stream_c_stream_b_stream_fun_fun$ B_stream$ )C_stream_b_stream_fun$ )
(declare-fun fun_app$al (C_stream_b_stream_c_stream_b_stream_fun_fun_fun$ C_stream$ )B_stream_c_stream_b_stream_fun_fun$ )
(declare-fun fun_app$am (C_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ C_stream_c_stream_fun$ )B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )
(declare-fun fun_app$an (B_stream_a_stream_fun_c_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun_fun$ B_stream_a_stream_fun$ )C_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ )
(declare-fun fun_app$ao (A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream_b_stream_fun$ )B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$ap (B_stream_a_stream_fun_a_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun_fun$ B_stream_a_stream_fun$ )A_stream_b_stream_fun_b_stream_a_stream_fun_a_stream_b_stream_fun_fun_fun$ )
(declare-fun fun_app$aq (A_stream_a_stream_a_stream_fun_fun$ A_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$ar (A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun fun_app$as (C_stream_a_stream_c_stream_fun_fun$ C_stream$ )A_stream_c_stream_fun$ )
(declare-fun fun_app$at (A_stream_c_stream_a_stream_c_stream_fun_fun_fun$ A_stream$ )C_stream_a_stream_c_stream_fun_fun$ )
(declare-fun fun_app$au (B_stream_a_stream_b_stream_fun_fun$ B_stream$ )A_stream_b_stream_fun$ )
(declare-fun fun_app$av (A_stream_b_stream_a_stream_b_stream_fun_fun_fun$ A_stream$ )B_stream_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$aw (A_stream_a_stream_b_stream_fun_a_stream_b_stream_fun_fun_fun$ A_stream$ )A_stream_b_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$ax (A_stream_a_stream_c_stream_fun_a_stream_c_stream_fun_fun_fun$ A_stream$ )A_stream_c_stream_fun_a_stream_c_stream_fun_fun$ )
(declare-fun fun_app$ay (C_stream_b_stream_fun_c_stream_c_stream_fun_a_stream_b_stream_fun_fun_fun$ C_stream_b_stream_fun$ )C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )
(declare-fun fun_app$az (A_stream_c_stream_fun_b_stream_a_stream_fun_c_stream_c_stream_fun_fun_fun$ A_stream_c_stream_fun$ )B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )
(declare-fun sp_nu_comp$ (C_b_sp_nu$ A_c_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp$a (B_b_sp_nu$ A_b_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp$b (A_b_sp_nu$ A_a_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp$c (B_b_sp_nu$ C_b_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp$d (A_b_sp_nu$ C_a_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp$e (C_b_sp_nu$ C_c_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp$f (B_c_sp_nu$ A_b_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp$g (C_c_sp_nu$ A_c_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp$h (A_c_sp_nu$ A_a_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp$i (C_a_sp_nu$ B_c_sp_nu$ )B_a_sp_nu$ )
(declare-fun sp_nu_comp2$ (C_b_sp_nu$ A_c_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp2$a (B_b_sp_nu$ A_b_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp2$b (A_b_sp_nu$ A_a_sp_nu$ )A_b_sp_nu$ )
(declare-fun sp_nu_comp2$c (B_b_sp_nu$ C_b_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp2$d (A_b_sp_nu$ C_a_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp2$e (C_b_sp_nu$ C_c_sp_nu$ )C_b_sp_nu$ )
(declare-fun sp_nu_comp2$f (B_c_sp_nu$ A_b_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp2$g (C_c_sp_nu$ A_c_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp2$h (A_c_sp_nu$ A_a_sp_nu$ )A_c_sp_nu$ )
(declare-fun sp_nu_comp2$i (C_a_sp_nu$ B_c_sp_nu$ )B_a_sp_nu$ )
(assert (! (not (= (sp_nu_comp$ sp$ sp$a )(sp_nu_comp2$ sp$ sp$a ))):named a0 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ ))(= (run_nu$ (sp_nu_comp$ ?v0 ?v1 ))(fun_app$ (comp$ (run_nu$a ?v0 ))(run_nu$b ?v1 )))):named a1 ))
(assert (! (forall ((?v0 B_b_sp_nu$ )(?v1 A_b_sp_nu$ ))(= (run_nu$ (sp_nu_comp$a ?v0 ?v1 ))(fun_app$a (comp$a (run_nu$c ?v0 ))(run_nu$ ?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_b_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (run_nu$ (sp_nu_comp$b ?v0 ?v1 ))(fun_app$b (comp$b (run_nu$ ?v0 ))(run_nu$d ?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_b_sp_nu$ )(?v1 C_b_sp_nu$ ))(= (run_nu$a (sp_nu_comp$c ?v0 ?v1 ))(fun_app$c (comp$c (run_nu$c ?v0 ))(run_nu$a ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_b_sp_nu$ )(?v1 C_a_sp_nu$ ))(= (run_nu$a (sp_nu_comp$d ?v0 ?v1 ))(fun_app$d (comp$d (run_nu$ ?v0 ))(run_nu$e ?v1 )))):named a5 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_c_sp_nu$ ))(= (run_nu$a (sp_nu_comp$e ?v0 ?v1 ))(fun_app$e (comp$e (run_nu$a ?v0 ))(run_nu$f ?v1 )))):named a6 ))
(assert (! (forall ((?v0 B_c_sp_nu$ )(?v1 A_b_sp_nu$ ))(= (run_nu$b (sp_nu_comp$f ?v0 ?v1 ))(fun_app$f (comp$f (run_nu$g ?v0 ))(run_nu$ ?v1 )))):named a7 ))
(assert (! (forall ((?v0 C_c_sp_nu$ )(?v1 A_c_sp_nu$ ))(= (run_nu$b (sp_nu_comp$g ?v0 ?v1 ))(fun_app$g (comp$g (run_nu$f ?v0 ))(run_nu$b ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (run_nu$b (sp_nu_comp$h ?v0 ?v1 ))(fun_app$h (comp$h (run_nu$b ?v0 ))(run_nu$d ?v1 )))):named a9 ))
(assert (! (forall ((?v0 C_a_sp_nu$ )(?v1 B_c_sp_nu$ ))(= (run_nu$h (sp_nu_comp$i ?v0 ?v1 ))(fun_app$i (comp$i (run_nu$e ?v0 ))(run_nu$g ?v1 )))):named a10 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ ))(= (run_nu$ (sp_nu_comp2$ ?v0 ?v1 ))(fun_app$ (comp$ (run_nu$a ?v0 ))(run_nu$b ?v1 )))):named a11 ))
(assert (! (forall ((?v0 B_b_sp_nu$ )(?v1 A_b_sp_nu$ ))(= (run_nu$ (sp_nu_comp2$a ?v0 ?v1 ))(fun_app$a (comp$a (run_nu$c ?v0 ))(run_nu$ ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_b_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (run_nu$ (sp_nu_comp2$b ?v0 ?v1 ))(fun_app$b (comp$b (run_nu$ ?v0 ))(run_nu$d ?v1 )))):named a13 ))
(assert (! (forall ((?v0 B_b_sp_nu$ )(?v1 C_b_sp_nu$ ))(= (run_nu$a (sp_nu_comp2$c ?v0 ?v1 ))(fun_app$c (comp$c (run_nu$c ?v0 ))(run_nu$a ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_b_sp_nu$ )(?v1 C_a_sp_nu$ ))(= (run_nu$a (sp_nu_comp2$d ?v0 ?v1 ))(fun_app$d (comp$d (run_nu$ ?v0 ))(run_nu$e ?v1 )))):named a15 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_c_sp_nu$ ))(= (run_nu$a (sp_nu_comp2$e ?v0 ?v1 ))(fun_app$e (comp$e (run_nu$a ?v0 ))(run_nu$f ?v1 )))):named a16 ))
(assert (! (forall ((?v0 B_c_sp_nu$ )(?v1 A_b_sp_nu$ ))(= (run_nu$b (sp_nu_comp2$f ?v0 ?v1 ))(fun_app$f (comp$f (run_nu$g ?v0 ))(run_nu$ ?v1 )))):named a17 ))
(assert (! (forall ((?v0 C_c_sp_nu$ )(?v1 A_c_sp_nu$ ))(= (run_nu$b (sp_nu_comp2$g ?v0 ?v1 ))(fun_app$g (comp$g (run_nu$f ?v0 ))(run_nu$b ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_c_sp_nu$ )(?v1 A_a_sp_nu$ ))(= (run_nu$b (sp_nu_comp2$h ?v0 ?v1 ))(fun_app$h (comp$h (run_nu$b ?v0 ))(run_nu$d ?v1 )))):named a19 ))
(assert (! (forall ((?v0 C_a_sp_nu$ )(?v1 B_c_sp_nu$ ))(= (run_nu$h (sp_nu_comp2$i ?v0 ?v1 ))(fun_app$i (comp$i (run_nu$e ?v0 ))(run_nu$g ?v1 )))):named a20 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$l (fun_app$h (comp$h ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$h (comp$h ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ ))(! (= (fun_app$n (fun_app$d (comp$d ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$n (fun_app$d (comp$d ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$j (fun_app$b (comp$b ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$b (comp$b ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )(?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )(?v2 B_stream_a_stream_fun$ ))(! (= (fun_app$p (fun_app$q (comp$j ?v0 )?v1 )?v2 )(fun_app$r ?v0 (fun_app$s ?v1 ?v2 ))):pattern ((fun_app$p (fun_app$q (comp$j ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$m (run_nu$d copy$ )?v0 )?v0 )):named a27 ))
(assert (! (forall ((?v0 C_stream$ ))(= (fun_app$t (run_nu$f copy$a )?v0 )?v0 )):named a28 ))
(assert (! (forall ((?v0 B_stream$ ))(= (fun_app$k (run_nu$c copy$b )?v0 )?v0 )):named a29 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$a (comp$a ?v0 )(fun_app$ (comp$ ?v1 )?v2 ))(fun_app$ (comp$ (fun_app$c (comp$c ?v0 )?v1 ))?v2 ))):named a30 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$ (comp$ ?v0 )(fun_app$h (comp$h ?v1 )?v2 ))(fun_app$b (comp$b (fun_app$ (comp$ ?v0 )?v1 ))?v2 ))):named a31 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$ (comp$ ?v0 )(fun_app$g (comp$g ?v1 )?v2 ))(fun_app$ (comp$ (fun_app$e (comp$e ?v0 )?v1 ))?v2 ))):named a32 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 C_stream_a_stream_fun$ ))(= (fun_app$e (comp$e ?v0 )(fun_app$u (comp$k ?v1 )?v2 ))(fun_app$d (comp$d (fun_app$ (comp$ ?v0 )?v1 ))?v2 ))):named a33 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$g (comp$g ?v0 )(fun_app$h (comp$h ?v1 )?v2 ))(fun_app$h (comp$h (fun_app$g (comp$g ?v0 )?v1 ))?v2 ))):named a34 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ ))(= (fun_app$c (comp$c ?v0 )(fun_app$d (comp$d ?v1 )?v2 ))(fun_app$d (comp$d (fun_app$a (comp$a ?v0 )?v1 ))?v2 ))):named a35 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$f (comp$f ?v0 )(fun_app$b (comp$b ?v1 )?v2 ))(fun_app$h (comp$h (fun_app$f (comp$f ?v0 )?v1 ))?v2 ))):named a36 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$ (comp$ ?v0 )(fun_app$f (comp$f ?v1 )?v2 ))(fun_app$a (comp$a (fun_app$v (comp$l ?v0 )?v1 ))?v2 ))):named a37 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$a (comp$a ?v0 )(fun_app$a (comp$a ?v1 )?v2 ))(fun_app$a (comp$a (fun_app$w (comp$m ?v0 )?v1 ))?v2 ))):named a38 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$a (comp$a ?v0 )(fun_app$b (comp$b ?v1 )?v2 ))(fun_app$b (comp$b (fun_app$a (comp$a ?v0 )?v1 ))?v2 ))):named a39 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$b (comp$b (fun_app$ (comp$ ?v0 )?v1 ))?v2 )(fun_app$ (comp$ ?v0 )(fun_app$h (comp$h ?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$ (comp$ (fun_app$c (comp$c ?v0 )?v1 ))?v2 )(fun_app$a (comp$a ?v0 )(fun_app$ (comp$ ?v1 )?v2 )))):named a41 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$ (comp$ (fun_app$e (comp$e ?v0 )?v1 ))?v2 )(fun_app$ (comp$ ?v0 )(fun_app$g (comp$g ?v1 )?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_c_stream_fun$ ))(= (fun_app$e (comp$e (fun_app$d (comp$d ?v0 )?v1 ))?v2 )(fun_app$d (comp$d ?v0 )(fun_app$x (comp$n ?v1 )?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (fun_app$ (comp$ (fun_app$d (comp$d ?v0 )?v1 ))?v2 )(fun_app$b (comp$b ?v0 )(fun_app$y (comp$o ?v1 )?v2 )))):named a44 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$a (comp$a (fun_app$v (comp$l ?v0 )?v1 ))?v2 )(fun_app$ (comp$ ?v0 )(fun_app$f (comp$f ?v1 )?v2 )))):named a45 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$a (comp$a (fun_app$w (comp$m ?v0 )?v1 ))?v2 )(fun_app$a (comp$a ?v0 )(fun_app$a (comp$a ?v1 )?v2 )))):named a46 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (fun_app$a (comp$a (fun_app$z (comp$p ?v0 )?v1 ))?v2 )(fun_app$b (comp$b ?v0 )(fun_app$aa (comp$q ?v1 )?v2 )))):named a47 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$h (comp$h (fun_app$g (comp$g ?v0 )?v1 ))?v2 )(fun_app$g (comp$g ?v0 )(fun_app$h (comp$h ?v1 )?v2 )))):named a48 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (fun_app$h (comp$h (fun_app$f (comp$f ?v0 )?v1 ))?v2 )(fun_app$f (comp$f ?v0 )(fun_app$b (comp$b ?v1 )?v2 )))):named a49 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )))):named a50 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$l (fun_app$h (comp$h ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$h (comp$h ?v0 )?v1 )?v2 )))):named a51 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ ))(! (= (fun_app$n (fun_app$d (comp$d ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$n (fun_app$d (comp$d ?v0 )?v1 )?v2 )))):named a52 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$j (fun_app$b (comp$b ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$b (comp$b ?v0 )?v1 )?v2 )))):named a53 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )(?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )(?v2 B_stream_a_stream_fun$ ))(! (= (fun_app$p (fun_app$q (comp$j ?v0 )?v1 )?v2 )(fun_app$r ?v0 (fun_app$s ?v1 ?v2 ))):pattern ((fun_app$p (fun_app$q (comp$j ?v0 )?v1 )?v2 )))):named a54 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ ))(! (= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )))):named a55 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$n ?v0 (fun_app$l ?v1 ?v4 ))(fun_app$n ?v2 (fun_app$l ?v3 ?v4 ))))false ))false )):named a56 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$n ?v0 (fun_app$l ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))false ))false )):named a57 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$b (comp$b ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$n ?v0 (fun_app$l ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$m ?v3 ?v4 ))))false ))false )):named a58 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$a (comp$a ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$n ?v2 (fun_app$l ?v3 ?v4 ))))false ))false )):named a59 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$a (comp$a ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))false ))false )):named a60 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$a (comp$a ?v0 )?v1 )(fun_app$b (comp$b ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$m ?v3 ?v4 ))))false ))false )):named a61 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$h (comp$h ?v0 )?v1 )(fun_app$h (comp$h ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$l ?v0 (fun_app$m ?v1 ?v4 ))(fun_app$l ?v2 (fun_app$m ?v3 ?v4 ))))false ))false )):named a62 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(=> (and (= (fun_app$d (comp$d ?v0 )?v1 )(fun_app$d (comp$d ?v2 )?v3 ))(=> (forall ((?v4 C_stream$ ))(= (fun_app$j ?v0 (fun_app$o ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$o ?v3 ?v4 ))))false ))false )):named a63 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$j ?v0 (fun_app$m ?v1 ?v4 ))(fun_app$n ?v2 (fun_app$l ?v3 ?v4 ))))false ))false )):named a64 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(=> (forall ((?v4 A_stream$ ))(= (fun_app$j ?v0 (fun_app$m ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))false ))false )):named a65 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 C_stream_c_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$h (comp$h ?v0 )?v1 )(fun_app$g (comp$g ?v2 )?v3 ))(= (fun_app$e (comp$e ?v4 )?v2 )?v5 ))(= (fun_app$b (comp$b (fun_app$ (comp$ ?v4 )?v0 ))?v1 )(fun_app$ (comp$ ?v5 )?v3 )))):named a66 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$g (comp$g ?v0 )?v1 )(fun_app$h (comp$h ?v2 )?v3 ))(= (fun_app$ (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$ (comp$ (fun_app$e (comp$e ?v4 )?v0 ))?v1 )(fun_app$b (comp$b ?v5 )?v3 )))):named a67 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 B_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$c (comp$c ?v4 )?v2 )?v5 ))(= (fun_app$ (comp$ (fun_app$c (comp$c ?v4 )?v0 ))?v1 )(fun_app$ (comp$ ?v5 )?v3 )))):named a68 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (and (= (fun_app$y (comp$o ?v0 )?v1 )(fun_app$aa (comp$q ?v2 )?v3 ))(= (fun_app$z (comp$p ?v4 )?v2 )?v5 ))(= (fun_app$ (comp$ (fun_app$d (comp$d ?v4 )?v0 ))?v1 )(fun_app$a (comp$a ?v5 )?v3 )))):named a69 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 B_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (and (= (fun_app$ab (comp$r ?v0 )?v1 )(fun_app$aa (comp$q ?v2 )?v3 ))(= (fun_app$z (comp$p ?v4 )?v2 )?v5 ))(= (fun_app$b (comp$b (fun_app$b (comp$b ?v4 )?v0 ))?v1 )(fun_app$a (comp$a ?v5 )?v3 )))):named a70 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 C_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$u (comp$k ?v0 )?v1 )(fun_app$u (comp$k ?v2 )?v3 ))(= (fun_app$ (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$d (comp$d (fun_app$ (comp$ ?v4 )?v0 ))?v1 )(fun_app$d (comp$d ?v5 )?v3 )))):named a71 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$ab (comp$r ?v0 )?v1 )(fun_app$ab (comp$r ?v2 )?v3 ))(= (fun_app$h (comp$h ?v4 )?v2 )?v5 ))(= (fun_app$h (comp$h (fun_app$h (comp$h ?v4 )?v0 ))?v1 )(fun_app$h (comp$h ?v5 )?v3 )))):named a72 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$y (comp$o ?v0 )?v1 )(fun_app$y (comp$o ?v2 )?v3 ))(= (fun_app$d (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$ (comp$ (fun_app$d (comp$d ?v4 )?v0 ))?v1 )(fun_app$ (comp$ ?v5 )?v3 )))):named a73 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$aa (comp$q ?v0 )?v1 )(fun_app$y (comp$o ?v2 )?v3 ))(= (fun_app$d (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$a (fun_app$z (comp$p ?v4 )?v0 ))?v1 )(fun_app$ (comp$ ?v5 )?v3 )))):named a74 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 C_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (and (= (fun_app$ac (comp$s ?v0 )?v1 )(fun_app$x (comp$n ?v2 )?v3 ))(= (fun_app$d (comp$d ?v4 )?v2 )?v5 ))(= (fun_app$d (comp$d (fun_app$b (comp$b ?v4 )?v0 ))?v1 )(fun_app$e (comp$e ?v5 )?v3 )))):named a75 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 C_stream_c_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$c (comp$c ?v0 )?v1 )(fun_app$e (comp$e ?v2 )?v3 ))(= (fun_app$g (comp$g ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$a ?v0 )(fun_app$ (comp$ ?v1 )?v4 ))(fun_app$ (comp$ ?v2 )?v5 )))):named a76 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$e (comp$e ?v0 )?v1 )(fun_app$c (comp$c ?v2 )?v3 ))(= (fun_app$ (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$ (comp$ ?v0 )(fun_app$g (comp$g ?v1 )?v4 ))(fun_app$a (comp$a ?v2 )?v5 )))):named a77 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$h (comp$h ?v3 )?v4 )?v5 ))(= (fun_app$ (comp$ ?v0 )(fun_app$h (comp$h ?v1 )?v4 ))(fun_app$ (comp$ ?v2 )?v5 )))):named a78 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$ad (comp$t ?v0 )?v1 )(fun_app$u (comp$k ?v2 )?v3 ))(= (fun_app$y (comp$o ?v3 )?v4 )?v5 ))(= (fun_app$f (comp$f ?v0 )(fun_app$ (comp$ ?v1 )?v4 ))(fun_app$h (comp$h ?v2 )?v5 )))):named a79 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 B_stream_a_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$ae (comp$u ?v0 )?v1 )(fun_app$af (comp$v ?v2 )?v3 ))(= (fun_app$aa (comp$q ?v3 )?v4 )?v5 ))(= (fun_app$f (comp$f ?v0 )(fun_app$a (comp$a ?v1 )?v4 ))(fun_app$h (comp$h ?v2 )?v5 )))):named a80 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 B_stream_c_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_c_stream_fun$ ))(=> (and (= (fun_app$w (comp$m ?v0 )?v1 )(fun_app$v (comp$l ?v2 )?v3 ))(= (fun_app$f (comp$f ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$a ?v0 )(fun_app$a (comp$a ?v1 )?v4 ))(fun_app$ (comp$ ?v2 )?v5 )))):named a81 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 B_stream_a_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_a_stream_fun$ ))(=> (and (= (fun_app$w (comp$m ?v0 )?v1 )(fun_app$z (comp$p ?v2 )?v3 ))(= (fun_app$aa (comp$q ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$a ?v0 )(fun_app$a (comp$a ?v1 )?v4 ))(fun_app$b (comp$b ?v2 )?v5 )))):named a82 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$c (comp$c ?v0 )?v1 )(fun_app$c (comp$c ?v2 )?v3 ))(= (fun_app$ (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$a ?v0 )(fun_app$ (comp$ ?v1 )?v4 ))(fun_app$a (comp$a ?v2 )?v5 )))):named a83 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 B_stream_c_stream_fun$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$u (comp$k ?v0 )?v1 )(fun_app$ad (comp$t ?v2 )?v3 ))(= (fun_app$ (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$h (comp$h ?v0 )(fun_app$y (comp$o ?v1 )?v4 ))(fun_app$f (comp$f ?v2 )?v5 )))):named a84 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (and (= (fun_app$v (comp$l ?v0 )?v1 )(fun_app$w (comp$m ?v2 )?v3 ))(= (fun_app$a (comp$a ?v3 )?v4 )?v5 ))(= (fun_app$ (comp$ ?v0 )(fun_app$f (comp$f ?v1 )?v4 ))(fun_app$a (comp$a ?v2 )?v5 )))):named a85 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$n ?v0 (fun_app$l ?v1 ?v4 ))(fun_app$n ?v2 (fun_app$l ?v3 ?v4 ))))):named a86 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(= (fun_app$n ?v0 (fun_app$l ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))):named a87 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$b (comp$b ?v2 )?v3 ))(= (fun_app$n ?v0 (fun_app$l ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$m ?v3 ?v4 ))))):named a88 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$a (comp$a ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$n ?v2 (fun_app$l ?v3 ?v4 ))))):named a89 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$a (comp$a ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))):named a90 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$a (comp$a ?v0 )?v1 )(fun_app$b (comp$b ?v2 )?v3 ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$m ?v3 ?v4 ))))):named a91 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$h (comp$h ?v0 )?v1 )(fun_app$h (comp$h ?v2 )?v3 ))(= (fun_app$l ?v0 (fun_app$m ?v1 ?v4 ))(fun_app$l ?v2 (fun_app$m ?v3 ?v4 ))))):named a92 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ )(?v4 C_stream$ ))(=> (= (fun_app$d (comp$d ?v0 )?v1 )(fun_app$d (comp$d ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$o ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$o ?v3 ?v4 ))))):named a93 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$m ?v1 ?v4 ))(fun_app$n ?v2 (fun_app$l ?v3 ?v4 ))))):named a94 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream$ ))(=> (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$m ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))):named a95 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (= (fun_app$h (comp$h ?v0 )?v1 )?v2 )(= (fun_app$b (comp$b (fun_app$ (comp$ ?v3 )?v0 ))?v1 )(fun_app$ (comp$ ?v3 )?v2 )))):named a96 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (= (fun_app$g (comp$g ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ (fun_app$e (comp$e ?v3 )?v0 ))?v1 )(fun_app$ (comp$ ?v3 )?v2 )))):named a97 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 B_stream_b_stream_fun$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ (fun_app$c (comp$c ?v3 )?v0 ))?v1 )(fun_app$a (comp$a ?v3 )?v2 )))):named a98 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$x (comp$n ?v0 )?v1 )?v2 )(= (fun_app$e (comp$e (fun_app$d (comp$d ?v3 )?v0 ))?v1 )(fun_app$d (comp$d ?v3 )?v2 )))):named a99 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$y (comp$o ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ (fun_app$d (comp$d ?v3 )?v0 ))?v1 )(fun_app$b (comp$b ?v3 )?v2 )))):named a100 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (= (fun_app$f (comp$f ?v0 )?v1 )?v2 )(= (fun_app$a (comp$a (fun_app$v (comp$l ?v3 )?v0 ))?v1 )(fun_app$ (comp$ ?v3 )?v2 )))):named a101 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$aa (comp$q ?v0 )?v1 )?v2 )(= (fun_app$a (comp$a (fun_app$z (comp$p ?v3 )?v0 ))?v1 )(fun_app$b (comp$b ?v3 )?v2 )))):named a102 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (= (fun_app$ab (comp$r ?v0 )?v1 )?v2 )(= (fun_app$h (comp$h (fun_app$h (comp$h ?v3 )?v0 ))?v1 )(fun_app$h (comp$h ?v3 )?v2 )))):named a103 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_c_stream_fun$ )(?v3 C_stream_b_stream_fun$ ))(=> (= (fun_app$u (comp$k ?v0 )?v1 )?v2 )(= (fun_app$d (comp$d (fun_app$ (comp$ ?v3 )?v0 ))?v1 )(fun_app$e (comp$e ?v3 )?v2 )))):named a104 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_a_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$ac (comp$s ?v0 )?v1 )?v2 )(= (fun_app$d (comp$d (fun_app$b (comp$b ?v3 )?v0 ))?v1 )(fun_app$d (comp$d ?v3 )?v2 )))):named a105 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (= (fun_app$c (comp$c ?v0 )?v1 )?v2 )(= (fun_app$a (comp$a ?v0 )(fun_app$ (comp$ ?v1 )?v3 ))(fun_app$ (comp$ ?v2 )?v3 )))):named a106 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(=> (= (fun_app$e (comp$e ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ ?v0 )(fun_app$g (comp$g ?v1 )?v3 ))(fun_app$ (comp$ ?v2 )?v3 )))):named a107 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ ?v0 )(fun_app$h (comp$h ?v1 )?v3 ))(fun_app$b (comp$b ?v2 )?v3 )))):named a108 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (= (fun_app$g (comp$g ?v0 )?v1 )?v2 )(= (fun_app$g (comp$g ?v0 )(fun_app$h (comp$h ?v1 )?v3 ))(fun_app$h (comp$h ?v2 )?v3 )))):named a109 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_a_stream_fun$ ))(=> (= (fun_app$f (comp$f ?v0 )?v1 )?v2 )(= (fun_app$f (comp$f ?v0 )(fun_app$b (comp$b ?v1 )?v3 ))(fun_app$h (comp$h ?v2 )?v3 )))):named a110 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 B_stream_c_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$v (comp$l ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ ?v0 )(fun_app$f (comp$f ?v1 )?v3 ))(fun_app$a (comp$a ?v2 )?v3 )))):named a111 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$w (comp$m ?v0 )?v1 )?v2 )(= (fun_app$a (comp$a ?v0 )(fun_app$a (comp$a ?v1 )?v3 ))(fun_app$a (comp$a ?v2 )?v3 )))):named a112 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 B_stream_a_stream_fun$ )(?v2 B_stream_b_stream_fun$ )(?v3 A_stream_b_stream_fun$ ))(=> (= (fun_app$z (comp$p ?v0 )?v1 )?v2 )(= (fun_app$b (comp$b ?v0 )(fun_app$aa (comp$q ?v1 )?v3 ))(fun_app$a (comp$a ?v2 )?v3 )))):named a113 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )?v2 )(= (fun_app$e (comp$e ?v0 )(fun_app$u (comp$k ?v1 )?v3 ))(fun_app$d (comp$d ?v2 )?v3 )))):named a114 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 C_stream_a_stream_fun$ ))(=> (= (fun_app$a (comp$a ?v0 )?v1 )?v2 )(= (fun_app$c (comp$c ?v0 )(fun_app$d (comp$d ?v1 )?v3 ))(fun_app$d (comp$d ?v2 )?v3 )))):named a115 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$a (comp$a ?v0 )?v1 )?v2 )(= (fun_app$k ?v0 (fun_app$j ?v1 ?v3 ))(fun_app$j ?v2 ?v3 )))):named a116 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$h (comp$h ?v0 )?v1 )?v2 )(= (fun_app$l ?v0 (fun_app$m ?v1 ?v3 ))(fun_app$l ?v2 ?v3 )))):named a117 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 C_stream$ ))(=> (= (fun_app$d (comp$d ?v0 )?v1 )?v2 )(= (fun_app$j ?v0 (fun_app$o ?v1 ?v3 ))(fun_app$n ?v2 ?v3 )))):named a118 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$b (comp$b ?v0 )?v1 )?v2 )(= (fun_app$j ?v0 (fun_app$m ?v1 ?v3 ))(fun_app$j ?v2 ?v3 )))):named a119 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )(?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )(?v2 B_stream_a_stream_fun_a_stream_b_stream_fun_fun$ )(?v3 B_stream_a_stream_fun$ ))(=> (= (fun_app$q (comp$j ?v0 )?v1 )?v2 )(= (fun_app$r ?v0 (fun_app$s ?v1 ?v3 ))(fun_app$p ?v2 ?v3 )))):named a120 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )?v2 )(= (fun_app$n ?v0 (fun_app$l ?v1 ?v3 ))(fun_app$j ?v2 ?v3 )))):named a121 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$n ?v3 (fun_app$l ?v4 ?v5 )))(= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$ (comp$ ?v3 )?v4 )?v5 )))):named a122 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$j ?v4 ?v5 )))(= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$a (comp$a ?v3 )?v4 )?v5 )))):named a123 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ )(?v5 C_stream$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$o ?v4 ?v5 )))(= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$n (fun_app$d (comp$d ?v3 )?v4 )?v5 )))):named a124 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$m ?v4 ?v5 )))(= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$b (comp$b ?v3 )?v4 )?v5 )))):named a125 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$n ?v3 (fun_app$l ?v4 ?v5 )))(= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$j (fun_app$ (comp$ ?v3 )?v4 )?v5 )))):named a126 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$j ?v4 ?v5 )))(= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$j (fun_app$a (comp$a ?v3 )?v4 )?v5 )))):named a127 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ )(?v5 C_stream$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$o ?v4 ?v5 )))(= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$n (fun_app$d (comp$d ?v3 )?v4 )?v5 )))):named a128 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$m ?v4 ?v5 )))(= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$j (fun_app$b (comp$b ?v3 )?v4 )?v5 )))):named a129 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$l ?v0 (fun_app$m ?v1 ?v2 ))(fun_app$l ?v3 (fun_app$m ?v4 ?v5 )))(= (fun_app$l (fun_app$h (comp$h ?v0 )?v1 )?v2 )(fun_app$l (fun_app$h (comp$h ?v3 )?v4 )?v5 )))):named a130 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream$ ))(=> (= (fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))(fun_app$n ?v3 (fun_app$l ?v4 ?v5 )))(= (fun_app$n (fun_app$d (comp$d ?v0 )?v1 )?v2 )(fun_app$j (fun_app$ (comp$ ?v3 )?v4 )?v5 )))):named a131 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$n ?v3 (fun_app$l ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$ (comp$ ?v3 )?v4 )?v2 )))):named a132 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$j ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$a (comp$a ?v3 )?v4 )?v2 )))):named a133 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$b (comp$b ?v3 )?v4 )?v2 )))):named a134 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$n ?v3 (fun_app$l ?v4 ?v2 )))(= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$j (fun_app$ (comp$ ?v3 )?v4 )?v2 )))):named a135 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$j ?v4 ?v2 )))(= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$j (fun_app$a (comp$a ?v3 )?v4 )?v2 )))):named a136 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$j (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$j (fun_app$b (comp$b ?v3 )?v4 )?v2 )))):named a137 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_a_stream_fun$ ))(=> (= (fun_app$l ?v0 (fun_app$m ?v1 ?v2 ))(fun_app$l ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$l (fun_app$h (comp$h ?v0 )?v1 )?v2 )(fun_app$l (fun_app$h (comp$h ?v3 )?v4 )?v2 )))):named a138 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 C_stream_a_stream_fun$ ))(=> (= (fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$o ?v4 ?v2 )))(= (fun_app$n (fun_app$d (comp$d ?v0 )?v1 )?v2 )(fun_app$n (fun_app$d (comp$d ?v3 )?v4 )?v2 )))):named a139 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_b_stream_fun$ )(?v4 A_stream_c_stream_fun$ ))(=> (= (fun_app$j ?v0 (fun_app$m ?v1 ?v2 ))(fun_app$n ?v3 (fun_app$l ?v4 ?v2 )))(= (fun_app$j (fun_app$b (comp$b ?v0 )?v1 )?v2 )(fun_app$j (fun_app$ (comp$ ?v3 )?v4 )?v2 )))):named a140 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_b_stream_fun$ )(?v4 A_stream_b_stream_fun$ ))(=> (= (fun_app$j ?v0 (fun_app$m ?v1 ?v2 ))(fun_app$k ?v3 (fun_app$j ?v4 ?v2 )))(= (fun_app$j (fun_app$b (comp$b ?v0 )?v1 )?v2 )(fun_app$j (fun_app$a (comp$a ?v3 )?v4 )?v2 )))):named a141 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_c_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (= (fun_app$l ?v0 (fun_app$m ?v1 ?v2 ))(fun_app$t ?v3 (fun_app$l ?v4 ?v2 )))(= (fun_app$j (fun_app$b (comp$b (fun_app$ (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$ (comp$ (fun_app$e (comp$e ?v5 )?v3 ))?v4 )?v2 )))):named a142 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (= (fun_app$t ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$l ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ (fun_app$e (comp$e ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$b (comp$b (fun_app$ (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a143 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 C_stream_c_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream_a_stream_fun$ )(?v4 C_stream_a_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$o ?v0 (fun_app$t ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$o ?v4 ?v2 )))(= (fun_app$n (fun_app$e (comp$e (fun_app$d (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$n (fun_app$d (comp$d (fun_app$b (comp$b ?v5 )?v3 ))?v4 )?v2 )))):named a144 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (= (fun_app$n ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ (fun_app$c (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$b (comp$b (fun_app$a (comp$a ?v5 )?v3 ))?v4 )?v2 )))):named a145 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_a_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$o ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$o ?v3 (fun_app$l ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ (fun_app$d (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$ (comp$ (fun_app$d (comp$d ?v5 )?v3 ))?v4 )?v2 )))):named a146 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream_a_stream_fun$ )(?v4 A_stream_b_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$o ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$ag ?v3 (fun_app$j ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ (fun_app$d (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$a (comp$a (fun_app$z (comp$p ?v5 )?v3 ))?v4 )?v2 )))):named a147 ))
(assert (! (forall ((?v0 C_stream_a_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_a_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$o ?v0 (fun_app$l ?v1 ?v2 ))(fun_app$m ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$j (fun_app$ (comp$ (fun_app$d (comp$d ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$b (comp$b (fun_app$b (comp$b ?v5 )?v3 ))?v4 )?v2 )))):named a148 ))
(assert (! (forall ((?v0 B_stream_a_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream_a_stream_fun$ )(?v4 A_stream_c_stream_fun$ )(?v5 A_stream_b_stream_fun$ ))(=> (= (fun_app$ag ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$o ?v3 (fun_app$l ?v4 ?v2 )))(= (fun_app$j (fun_app$a (comp$a (fun_app$z (comp$p ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$ (comp$ (fun_app$d (comp$d ?v5 )?v3 ))?v4 )?v2 )))):named a149 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_c_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 C_stream_b_stream_fun$ ))(=> (= (fun_app$ah ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$l ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$j (fun_app$a (comp$a (fun_app$v (comp$l ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$b (comp$b (fun_app$ (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a150 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ )(?v4 A_stream_a_stream_fun$ )(?v5 B_stream_b_stream_fun$ ))(=> (= (fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$m ?v4 ?v2 )))(= (fun_app$j (fun_app$a (comp$a (fun_app$w (comp$m ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$b (comp$b (fun_app$a (comp$a ?v5 )?v3 ))?v4 )?v2 )))):named a151 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$w (convol$ ?v0 ?v1 )?v2 )(convol$ (fun_app$h (comp$h ?v0 )?v2 )(fun_app$b (comp$b ?v1 )?v2 )))):named a152 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$x (convol$a ?v0 ?v1 )?v2 )(convol$a (fun_app$b (comp$b ?v0 )?v2 )(fun_app$h (comp$h ?v1 )?v2 )))):named a153 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )(?v1 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )(?v2 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ ))(= (comp$y (convol$b ?v0 ?v1 )?v2 )(convol$c (fun_app$q (comp$j ?v0 )?v2 )(fun_app$q (comp$j ?v1 )?v2 )))):named a154 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 B_stream_b_stream_fun$ )(?v2 A_stream_b_stream_fun$ ))(= (comp$z (convol$d ?v0 ?v1 )?v2 )(convol$e (fun_app$a (comp$a ?v0 )?v2 )(fun_app$a (comp$a ?v1 )?v2 )))):named a155 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_c_stream_fun$ ))(= (comp$aa (convol$f ?v0 ?v1 )?v2 )(convol$f (fun_app$e (comp$e ?v0 )?v2 )(fun_app$e (comp$e ?v1 )?v2 )))):named a156 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 C_stream_a_stream_fun$ ))(= (comp$ab (convol$e ?v0 ?v1 )?v2 )(convol$f (fun_app$d (comp$d ?v0 )?v2 )(fun_app$d (comp$d ?v1 )?v2 )))):named a157 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$ac (convol$e ?v0 ?v1 )?v2 )(convol$e (fun_app$b (comp$b ?v0 )?v2 )(fun_app$b (comp$b ?v1 )?v2 )))):named a158 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_a_stream_fun$ ))(= (comp$ad (convol$g ?v0 ?v1 )?v2 )(convol$g (fun_app$h (comp$h ?v0 )?v2 )(fun_app$h (comp$h ?v1 )?v2 )))):named a159 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ ))(= (comp$ae (convol$f ?v0 ?v1 )?v2 )(convol$e (fun_app$ (comp$ ?v0 )?v2 )(fun_app$ (comp$ ?v1 )?v2 )))):named a160 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 C_stream_a_stream_fun$ )(?v2 C_stream$ )(?v3 A_stream$ ))(= (fun_app$d (comp$d ?v0 )(fun_app$ai (fun_app$aj (fun_upd$ ?v1 )?v2 )?v3 ))(fun_app$ak (fun_app$al (fun_upd$a (fun_app$d (comp$d ?v0 )?v1 ))?v2 )(fun_app$j ?v0 ?v3 )))):named a161 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun_a_stream_b_stream_fun_fun$ )(?v1 B_stream_a_stream_fun_c_stream_c_stream_fun_fun$ )(?v2 B_stream_a_stream_fun$ )(?v3 C_stream_c_stream_fun$ ))(= (fun_app$q (comp$j ?v0 )(fun_app$am (fun_app$an (fun_upd$b ?v1 )?v2 )?v3 ))(fun_app$ao (fun_app$ap (fun_upd$c (fun_app$q (comp$j ?v0 )?v1 ))?v2 )(fun_app$r ?v0 ?v3 )))):named a162 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (fun_app$h (comp$h ?v0 )(fun_app$aq (fun_app$ar (fun_upd$d ?v1 )?v2 )?v3 ))(fun_app$as (fun_app$at (fun_upd$e (fun_app$h (comp$h ?v0 )?v1 ))?v2 )(fun_app$l ?v0 ?v3 )))):named a163 ))
(assert (! (forall ((?v0 A_stream_b_stream_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (fun_app$b (comp$b ?v0 )(fun_app$aq (fun_app$ar (fun_upd$d ?v1 )?v2 )?v3 ))(fun_app$au (fun_app$av (fun_upd$f (fun_app$b (comp$b ?v0 )?v1 ))?v2 )(fun_app$j ?v0 ?v3 )))):named a164 ))
(assert (! (forall ((?v0 C_stream_c_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream$ ))(= (fun_app$g (comp$g ?v0 )(fun_app$as (fun_app$at (fun_upd$e ?v1 )?v2 )?v3 ))(fun_app$as (fun_app$at (fun_upd$e (fun_app$g (comp$g ?v0 )?v1 ))?v2 )(fun_app$t ?v0 ?v3 )))):named a165 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream$ ))(= (fun_app$f (comp$f ?v0 )(fun_app$au (fun_app$av (fun_upd$f ?v1 )?v2 )?v3 ))(fun_app$as (fun_app$at (fun_upd$e (fun_app$f (comp$f ?v0 )?v1 ))?v2 )(fun_app$ah ?v0 ?v3 )))):named a166 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream_b_stream_fun$ )(?v2 A_stream$ )(?v3 B_stream$ ))(= (fun_app$a (comp$a ?v0 )(fun_app$au (fun_app$av (fun_upd$f ?v1 )?v2 )?v3 ))(fun_app$au (fun_app$av (fun_upd$f (fun_app$a (comp$a ?v0 )?v1 ))?v2 )(fun_app$k ?v0 ?v3 )))):named a167 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream$ )(?v3 C_stream$ ))(= (fun_app$ (comp$ ?v0 )(fun_app$as (fun_app$at (fun_upd$e ?v1 )?v2 )?v3 ))(fun_app$au (fun_app$av (fun_upd$f (fun_app$ (comp$ ?v0 )?v1 ))?v2 )(fun_app$n ?v0 ?v3 )))):named a168 ))
(assert (! (forall ((?v0 B_stream_c_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ ))(= (fun_app$f (comp$f ?v0 )(fun_app$a (fun_app$aw (swap$ ?v1 )?v2 )?v3 ))(fun_app$g (fun_app$ax (swap$a ?v1 )?v2 )(fun_app$f (comp$f ?v0 )?v3 )))):named a169 ))
(assert (! (forall ((?v0 B_stream_b_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_b_stream_fun$ ))(= (fun_app$a (comp$a ?v0 )(fun_app$a (fun_app$aw (swap$ ?v1 )?v2 )?v3 ))(fun_app$a (fun_app$aw (swap$ ?v1 )?v2 )(fun_app$a (comp$a ?v0 )?v3 )))):named a170 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_c_stream_fun$ ))(= (fun_app$ (comp$ ?v0 )(fun_app$g (fun_app$ax (swap$a ?v1 )?v2 )?v3 ))(fun_app$a (fun_app$aw (swap$ ?v1 )?v2 )(fun_app$ (comp$ ?v0 )?v3 )))):named a171 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(= (fun_app$q (comp$j (fun_app$ay (map_fun$ ?v0 )?v1 ))(fun_app$az (map_fun$a ?v2 )?v3 ))(fun_app$ao (map_fun$b (fun_app$ (comp$ ?v2 )?v0 ))(fun_app$ (comp$ ?v1 )?v3 )))):named a172 ))
(assert (! (forall ((?v0 A_stream_c_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 C_stream_b_stream_fun$ )(?v3 A_stream_c_stream_fun$ )(?v4 B_stream_a_stream_fun$ ))(= (fun_app$r (fun_app$ay (map_fun$ ?v0 )?v1 )(fun_app$s (fun_app$az (map_fun$a ?v2 )?v3 )?v4 ))(fun_app$p (fun_app$ao (map_fun$b (fun_app$ (comp$ ?v2 )?v0 ))(fun_app$ (comp$ ?v1 )?v3 ))?v4 ))):named a173 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 C_stream_b_stream_fun$ )(?v2 A_stream_c_stream_fun$ )(?v3 A_stream_c_stream_fun$ ))(= (comp$af (map_prod$ ?v0 ?v1 )(convol$g ?v2 ?v3 ))(convol$e (fun_app$ (comp$ ?v0 )?v2 )(fun_app$ (comp$ ?v1 )?v3 )))):named a174 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_set$ ))(= (image$ ?v0 (image$a ?v1 ?v2 ))(image$b (fun_app$ (comp$ ?v0 )?v1 )?v2 ))):named a175 ))
(assert (! (forall ((?v0 C_stream_b_stream_fun$ )(?v1 A_stream_c_stream_fun$ )(?v2 A_stream_b_stream_fun$ )(?v3 A_stream$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$a (comp$a id$ )?v2 ))(= (fun_app$n ?v0 (fun_app$l ?v1 ?v3 ))(fun_app$j ?v2 ?v3 )))):named a176 ))
(check-sat )
;(get-unsat-core )
