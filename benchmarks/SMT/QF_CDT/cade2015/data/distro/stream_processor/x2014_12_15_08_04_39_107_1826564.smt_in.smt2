;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort F$ 0 )
(declare-sort G$ 0 )
(declare-sort H$ 0 )
(declare-sort I$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort F_set$ 0 )
(declare-sort G_set$ 0 )
(declare-sort H_set$ 0 )
(declare-sort I_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort A_f_fun$ 0 )
(declare-sort A_h_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_f_fun$ 0 )
(declare-sort B_h_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort C_g_fun$ 0 )
(declare-sort C_i_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort D_g_fun$ 0 )
(declare-sort D_i_fun$ 0 )
(declare-sort F_a_fun$ 0 )
(declare-sort F_b_fun$ 0 )
(declare-sort F_f_fun$ 0 )
(declare-sort F_h_fun$ 0 )
(declare-sort G_c_fun$ 0 )
(declare-sort G_d_fun$ 0 )
(declare-sort G_g_fun$ 0 )
(declare-sort G_i_fun$ 0 )
(declare-sort H_a_fun$ 0 )
(declare-sort H_b_fun$ 0 )
(declare-sort H_f_fun$ 0 )
(declare-sort H_h_fun$ 0 )
(declare-sort I_c_fun$ 0 )
(declare-sort I_d_fun$ 0 )
(declare-sort I_g_fun$ 0 )
(declare-sort I_i_fun$ 0 )
(declare-sort A_nat_fun$ 0 )
(declare-sort B_nat_fun$ 0 )
(declare-sort C_nat_fun$ 0 )
(declare-sort D_nat_fun$ 0 )
(declare-sort E_nat_fun$ 0 )
(declare-sort F_nat_fun$ 0 )
(declare-sort G_nat_fun$ 0 )
(declare-sort H_nat_fun$ 0 )
(declare-sort I_nat_fun$ 0 )
(declare-sort Nat_a_fun$ 0 )
(declare-sort Nat_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort F_bool_fun$ 0 )
(declare-sort G_bool_fun$ 0 )
(declare-sort H_bool_fun$ 0 )
(declare-sort I_bool_fun$ 0 )
(declare-sort E_a_c_sp_mu$ 0 )
(declare-sort E_b_d_sp_mu$ 0 )
(declare-sort E_d_c_sp_mu$ 0 )
(declare-sort E_d_d_sp_mu$ 0 )
(declare-sort E_d_f_sp_mu$ 0 )
(declare-sort E_f_a_sp_mu$ 0 )
(declare-sort E_f_b_sp_mu$ 0 )
(declare-sort E_f_c_sp_mu$ 0 )
(declare-sort E_f_d_sp_mu$ 0 )
(declare-sort E_f_f_sp_mu$ 0 )
(declare-sort E_f_g_sp_mu$ 0 )
(declare-sort E_h_i_sp_mu$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort A_b_prod_set$ 0 )
(declare-sort C_d_prod_set$ 0 )
(declare-sort F_h_prod_set$ 0 )
(declare-sort G_i_prod_set$ 0 )
(declare-sort E_nat_c_sp_mu$ 0 )
(declare-sort A_b_prod_a_fun$ 0 )
(declare-sort A_b_prod_b_fun$ 0 )
(declare-sort C_d_prod_c_fun$ 0 )
(declare-sort C_d_prod_d_fun$ 0 )
(declare-sort F_h_prod_f_fun$ 0 )
(declare-sort F_h_prod_h_fun$ 0 )
(declare-sort G_i_prod_g_fun$ 0 )
(declare-sort G_i_prod_i_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_h_bool_fun_fun$ 0 )
(declare-sort A_i_bool_fun_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_f_bool_fun_fun$ 0 )
(declare-sort B_h_bool_fun_fun$ 0 )
(declare-sort B_i_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort C_i_bool_fun_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort D_g_bool_fun_fun$ 0 )
(declare-sort D_h_bool_fun_fun$ 0 )
(declare-sort D_i_bool_fun_fun$ 0 )
(declare-sort F_a_bool_fun_fun$ 0 )
(declare-sort F_b_bool_fun_fun$ 0 )
(declare-sort F_f_bool_fun_fun$ 0 )
(declare-sort F_h_bool_fun_fun$ 0 )
(declare-sort F_i_bool_fun_fun$ 0 )
(declare-sort G_c_bool_fun_fun$ 0 )
(declare-sort G_d_bool_fun_fun$ 0 )
(declare-sort G_g_bool_fun_fun$ 0 )
(declare-sort G_i_bool_fun_fun$ 0 )
(declare-sort H_a_bool_fun_fun$ 0 )
(declare-sort H_b_bool_fun_fun$ 0 )
(declare-sort H_f_bool_fun_fun$ 0 )
(declare-sort H_h_bool_fun_fun$ 0 )
(declare-sort I_c_bool_fun_fun$ 0 )
(declare-sort I_d_bool_fun_fun$ 0 )
(declare-sort I_g_bool_fun_fun$ 0 )
(declare-sort I_i_bool_fun_fun$ 0 )
(declare-sort A_b_prod_bool_fun$ 0 )
(declare-sort C_d_prod_bool_fun$ 0 )
(declare-sort F_h_prod_bool_fun$ 0 )
(declare-sort G_i_prod_bool_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_f_fun_a_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort B_h_fun_b_b_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_fun_fun$ 0 )
(declare-sort C_g_fun_c_c_fun_fun$ 0 )
(declare-sort D_d_fun_d_d_fun_fun$ 0 )
(declare-sort D_i_fun_d_d_fun_fun$ 0 )
(declare-sort E_a_c_sp_mu_nat_fun$ 0 )
(declare-sort E_b_d_sp_mu_nat_fun$ 0 )
(declare-sort E_f_g_sp_mu_nat_fun$ 0 )
(declare-sort E_h_i_sp_mu_nat_fun$ 0 )
(declare-sort F_a_fun_f_a_fun_fun$ 0 )
(declare-sort F_a_fun_f_b_fun_fun$ 0 )
(declare-sort F_a_fun_f_f_fun_fun$ 0 )
(declare-sort F_f_fun_f_a_fun_fun$ 0 )
(declare-sort F_h_fun_f_b_fun_fun$ 0 )
(declare-sort G_c_fun_g_c_fun_fun$ 0 )
(declare-sort G_c_fun_g_g_fun_fun$ 0 )
(declare-sort G_g_fun_g_c_fun_fun$ 0 )
(declare-sort H_b_fun_h_a_fun_fun$ 0 )
(declare-sort H_b_fun_h_b_fun_fun$ 0 )
(declare-sort H_b_fun_h_h_fun_fun$ 0 )
(declare-sort H_f_fun_h_a_fun_fun$ 0 )
(declare-sort H_h_fun_h_b_fun_fun$ 0 )
(declare-sort H_h_fun_h_h_fun_fun$ 0 )
(declare-sort I_d_fun_i_d_fun_fun$ 0 )
(declare-sort I_d_fun_i_i_fun_fun$ 0 )
(declare-sort I_i_fun_i_d_fun_fun$ 0 )
(declare-sort I_i_fun_i_i_fun_fun$ 0 )
(declare-sort E_a_c_sp_mu_bool_fun$ 0 )
(declare-sort E_b_d_sp_mu_bool_fun$ 0 )
(declare-sort E_f_g_sp_mu_bool_fun$ 0 )
(declare-sort E_h_i_sp_mu_bool_fun$ 0 )
(declare-sort A_a_fun_a_nat_fun_fun$ 0 )
(declare-sort A_b_fun_a_nat_fun_fun$ 0 )
(declare-sort A_h_fun_a_nat_fun_fun$ 0 )
(declare-sort A_nat_fun_a_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_nat_fun_fun$ 0 )
(declare-sort B_b_fun_b_nat_fun_fun$ 0 )
(declare-sort B_h_fun_b_nat_fun_fun$ 0 )
(declare-sort B_nat_fun_b_b_fun_fun$ 0 )
(declare-sort C_d_fun_c_nat_fun_fun$ 0 )
(declare-sort C_i_fun_c_nat_fun_fun$ 0 )
(declare-sort D_c_fun_d_nat_fun_fun$ 0 )
(declare-sort D_d_fun_d_nat_fun_fun$ 0 )
(declare-sort D_i_fun_d_nat_fun_fun$ 0 )
(declare-sort F_a_fun_f_nat_fun_fun$ 0 )
(declare-sort F_b_fun_f_nat_fun_fun$ 0 )
(declare-sort F_f_fun_f_nat_fun_fun$ 0 )
(declare-sort F_h_fun_f_nat_fun_fun$ 0 )
(declare-sort F_nat_fun_f_a_fun_fun$ 0 )
(declare-sort H_b_fun_h_nat_fun_fun$ 0 )
(declare-sort H_f_fun_h_nat_fun_fun$ 0 )
(declare-sort H_h_fun_h_nat_fun_fun$ 0 )
(declare-sort H_nat_fun_h_b_fun_fun$ 0 )
(declare-sort I_d_fun_i_nat_fun_fun$ 0 )
(declare-sort I_i_fun_i_nat_fun_fun$ 0 )
(declare-sort A_nat_fun_a_nat_fun_fun$ 0 )
(declare-sort B_nat_fun_b_nat_fun_fun$ 0 )
(declare-sort F_nat_fun_f_nat_fun_fun$ 0 )
(declare-sort H_nat_fun_h_nat_fun_fun$ 0 )
(declare-sort E_a_b_prod_c_d_prod_sp_mu$ 0 )
(declare-sort E_f_h_prod_g_i_prod_sp_mu$ 0 )
(declare-sort E_a_c_sp_mu_e_a_c_sp_mu_fun$ 0 )
(declare-sort E_a_c_sp_mu_e_b_d_sp_mu_fun$ 0 )
(declare-sort E_a_c_sp_mu_e_h_i_sp_mu_fun$ 0 )
(declare-sort E_b_d_sp_mu_e_a_c_sp_mu_fun$ 0 )
(declare-sort E_b_d_sp_mu_e_b_d_sp_mu_fun$ 0 )
(declare-sort E_b_d_sp_mu_e_h_i_sp_mu_fun$ 0 )
(declare-sort E_f_g_sp_mu_e_a_c_sp_mu_fun$ 0 )
(declare-sort E_f_g_sp_mu_e_b_d_sp_mu_fun$ 0 )
(declare-sort E_f_g_sp_mu_e_f_g_sp_mu_fun$ 0 )
(declare-sort E_f_g_sp_mu_e_h_i_sp_mu_fun$ 0 )
(declare-sort E_h_i_sp_mu_e_b_d_sp_mu_fun$ 0 )
(declare-sort E_h_i_sp_mu_e_h_i_sp_mu_fun$ 0 )
(declare-sort A_a_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort A_f_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_f_fun_a_h_bool_fun_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort B_b_fun_f_b_bool_fun_fun_fun$ 0 )
(declare-sort B_h_fun_f_b_bool_fun_fun_fun$ 0 )
(declare-sort C_c_fun_c_d_bool_fun_fun_fun$ 0 )
(declare-sort C_c_fun_d_c_bool_fun_fun_fun$ 0 )
(declare-sort C_g_fun_c_d_bool_fun_fun_fun$ 0 )
(declare-sort C_g_fun_c_i_bool_fun_fun_fun$ 0 )
(declare-sort D_d_fun_c_d_bool_fun_fun_fun$ 0 )
(declare-sort D_d_fun_d_c_bool_fun_fun_fun$ 0 )
(declare-sort D_d_fun_g_d_bool_fun_fun_fun$ 0 )
(declare-sort D_i_fun_g_d_bool_fun_fun_fun$ 0 )
(declare-sort F_a_fun_b_f_bool_fun_fun_fun$ 0 )
(declare-sort F_a_fun_f_b_bool_fun_fun_fun$ 0 )
(declare-sort F_a_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort F_a_fun_h_f_bool_fun_fun_fun$ 0 )
(declare-sort F_f_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort F_f_fun_h_f_bool_fun_fun_fun$ 0 )
(declare-sort G_c_fun_d_g_bool_fun_fun_fun$ 0 )
(declare-sort G_c_fun_g_d_bool_fun_fun_fun$ 0 )
(declare-sort G_c_fun_g_i_bool_fun_fun_fun$ 0 )
(declare-sort G_c_fun_i_g_bool_fun_fun_fun$ 0 )
(declare-sort G_g_fun_g_i_bool_fun_fun_fun$ 0 )
(declare-sort G_g_fun_i_g_bool_fun_fun_fun$ 0 )
(declare-sort H_b_fun_a_h_bool_fun_fun_fun$ 0 )
(declare-sort H_b_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort H_b_fun_h_a_bool_fun_fun_fun$ 0 )
(declare-sort H_b_fun_h_f_bool_fun_fun_fun$ 0 )
(declare-sort H_h_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort H_h_fun_h_f_bool_fun_fun_fun$ 0 )
(declare-sort I_d_fun_c_i_bool_fun_fun_fun$ 0 )
(declare-sort I_d_fun_g_i_bool_fun_fun_fun$ 0 )
(declare-sort I_d_fun_i_c_bool_fun_fun_fun$ 0 )
(declare-sort I_d_fun_i_g_bool_fun_fun_fun$ 0 )
(declare-sort I_i_fun_g_i_bool_fun_fun_fun$ 0 )
(declare-sort I_i_fun_i_g_bool_fun_fun_fun$ 0 )
(declare-sort E_a_b_prod_c_d_prod_sp_mu_set$ 0 )
(declare-sort E_f_h_prod_g_i_prod_sp_mu_set$ 0 )
(declare-sort E_a_b_prod_c_d_prod_sp_mu_bool_fun$ 0 )
(declare-sort E_f_h_prod_g_i_prod_sp_mu_bool_fun$ 0 )
(declare-sort E_a_c_sp_mu_e_b_d_sp_mu_bool_fun_fun$ 0 )
(declare-sort E_a_c_sp_mu_e_h_i_sp_mu_bool_fun_fun$ 0 )
(declare-sort E_b_d_sp_mu_e_a_c_sp_mu_bool_fun_fun$ 0 )
(declare-sort E_b_d_sp_mu_e_f_g_sp_mu_bool_fun_fun$ 0 )
(declare-sort E_f_g_sp_mu_e_b_d_sp_mu_bool_fun_fun$ 0 )
(declare-sort E_f_g_sp_mu_e_h_i_sp_mu_bool_fun_fun$ 0 )
(declare-sort E_h_i_sp_mu_e_a_c_sp_mu_bool_fun_fun$ 0 )
(declare-sort E_h_i_sp_mu_e_f_g_sp_mu_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ 0 )
(declare-sort F_h_bool_fun_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort G_i_bool_fun_fun_c_d_bool_fun_fun_fun$ 0 )
(declare-sort G_i_bool_fun_fun_g_i_bool_fun_fun_fun$ 0 )
(declare-sort A_nat_bool_fun_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_nat_bool_fun_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort Nat_b_bool_fun_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort Nat_b_bool_fun_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ 0 )
(declare-sort D_d_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ 0 )
(declare-sort D_i_fun_g_i_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ 0 )
(declare-sort H_b_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort H_h_fun_f_h_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort I_d_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ 0 )
(declare-sort I_i_fun_g_i_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ 0 )
(declare-sort B_b_fun_nat_b_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ 0 )
(declare-sort H_b_fun_nat_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort B_nat_fun_a_nat_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ 0 )
(declare-sort H_nat_fun_a_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort B_nat_fun_nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_e_a_b_prod_c_d_prod_sp_mu_bool_fun_fun$ 0 )
(declare-sort H_nat_fun_nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_a_b_bool_fun_fun_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_f_h_bool_fun_fun_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_c_d_bool_fun_fun_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_c_d_bool_fun_fun_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_g_i_bool_fun_fun_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_g_i_bool_fun_fun_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ 0 )
(declare-sort G_i_bool_fun_fun_c_d_bool_fun_fun_fun_g_i_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_nat_bool_fun_fun_a_b_bool_fun_fun_fun_a_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort Nat_b_bool_fun_fun_a_b_bool_fun_fun_fun_nat_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun_nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ 0 )
(declare-datatypes ()((A_b_prod$ (pair$ (fst$ A$ )(snd$ B$ )))(C_d_prod$ (pair$a (fst$a C$ )(snd$a D$ )))(G_i_prod$ (pair$b (fst$b G$ )(snd$b I$ )))(F_h_prod$ (pair$c (fst$c F$ )(snd$c H$ )))))
(declare-fun f1$ ()F_a_fun$ )
(declare-fun f2$ ()G_c_fun$ )
(declare-fun g1$ ()H_b_fun$ )
(declare-fun g2$ ()I_d_fun$ )
(declare-fun id$ ()H_h_fun$ )
(declare-fun r1$ ()A_b_bool_fun_fun$ )
(declare-fun r2$ ()C_d_bool_fun_fun$ )
(declare-fun sp$ ()E_f_g_sp_mu$ )
(declare-fun uu$ (A_h_bool_fun_fun$ )F_a_fun_f_h_bool_fun_fun_fun$ )
(declare-fun id$a ()I_i_fun$ )
(declare-fun id$b ()F_f_fun$ )
(declare-fun id$c ()G_g_fun$ )
(declare-fun id$d ()B_b_fun$ )
(declare-fun id$e ()D_d_fun$ )
(declare-fun id$f ()A_a_fun$ )
(declare-fun id$g ()C_c_fun$ )
(declare-fun id$h ()E_h_i_sp_mu_e_h_i_sp_mu_fun$ )
(declare-fun id$i ()E_f_g_sp_mu_e_f_g_sp_mu_fun$ )
(declare-fun id$j ()E_b_d_sp_mu_e_b_d_sp_mu_fun$ )
(declare-fun id$k ()E_a_c_sp_mu_e_a_c_sp_mu_fun$ )
(declare-fun id$l ()Nat_nat_fun$ )
(declare-fun id$m ()G_c_fun_g_c_fun_fun$ )
(declare-fun id$n ()H_b_fun_h_b_fun_fun$ )
(declare-fun id$o ()F_a_fun_f_a_fun_fun$ )
(declare-fun put$ (F$ G$ )E_f_g_sp_mu$ )
(declare-fun sp$a ()E_h_i_sp_mu$ )
(declare-fun uua$ (C_i_bool_fun_fun$ )G_c_fun_g_i_bool_fun_fun_fun$ )
(declare-fun uub$ (A_b_bool_fun_fun$ )F_a_fun_f_b_bool_fun_fun_fun$ )
(declare-fun uuc$ (C_d_bool_fun_fun$ )G_c_fun_g_d_bool_fun_fun_fun$ )
(declare-fun uud$ (A_b_bool_fun_fun$ )A_a_fun_a_b_bool_fun_fun_fun$ )
(declare-fun uue$ (C_d_bool_fun_fun$ )C_c_fun_c_d_bool_fun_fun_fun$ )
(declare-fun uuf$ (F_h_bool_fun_fun$ )F_f_fun_f_h_bool_fun_fun_fun$ )
(declare-fun uug$ (G_i_bool_fun_fun$ )G_g_fun_g_i_bool_fun_fun_fun$ )
(declare-fun uuh$ (B_f_bool_fun_fun$ )H_b_fun_h_f_bool_fun_fun_fun$ )
(declare-fun uui$ (D_g_bool_fun_fun$ )I_d_fun_i_g_bool_fun_fun_fun$ )
(declare-fun uuj$ (F_h_bool_fun_fun$ )A_f_fun_a_h_bool_fun_fun_fun$ )
(declare-fun uuk$ (G_i_bool_fun_fun$ )C_g_fun_c_i_bool_fun_fun_fun$ )
(declare-fun uul$ (H_f_bool_fun_fun$ )H_h_fun_h_f_bool_fun_fun_fun$ )
(declare-fun uum$ (I_g_bool_fun_fun$ )I_i_fun_i_g_bool_fun_fun_fun$ )
(declare-fun uun$ (B_a_bool_fun_fun$ )H_b_fun_h_a_bool_fun_fun_fun$ )
(declare-fun uuo$ (D_c_bool_fun_fun$ )I_d_fun_i_c_bool_fun_fun_fun$ )
(declare-fun uup$ (B_a_bool_fun_fun$ )B_b_fun_b_a_bool_fun_fun_fun$ )
(declare-fun uuq$ (D_c_bool_fun_fun$ )D_d_fun_d_c_bool_fun_fun_fun$ )
(declare-fun uur$ (F_b_bool_fun_fun$ )A_f_fun_a_b_bool_fun_fun_fun$ )
(declare-fun uus$ (G_d_bool_fun_fun$ )C_g_fun_c_d_bool_fun_fun_fun$ )
(declare-fun uut$ (F_b_bool_fun_fun$ )H_b_fun_f_h_bool_fun_fun_fun$ )
(declare-fun uuu$ (G_d_bool_fun_fun$ )I_d_fun_g_i_bool_fun_fun_fun$ )
(declare-fun uuv$ (A_b_bool_fun_fun$ )H_b_fun_a_h_bool_fun_fun_fun$ )
(declare-fun uuw$ (C_d_bool_fun_fun$ )I_d_fun_c_i_bool_fun_fun_fun$ )
(declare-fun uux$ (A_b_bool_fun_fun$ )B_b_fun_a_b_bool_fun_fun_fun$ )
(declare-fun uuy$ (C_d_bool_fun_fun$ )D_d_fun_c_d_bool_fun_fun_fun$ )
(declare-fun uuz$ (F_h_bool_fun_fun$ )H_h_fun_f_h_bool_fun_fun_fun$ )
(declare-fun uva$ (G_i_bool_fun_fun$ )I_i_fun_g_i_bool_fun_fun_fun$ )
(declare-fun uvb$ (H_a_bool_fun_fun$ )F_a_fun_h_f_bool_fun_fun_fun$ )
(declare-fun uvc$ (I_c_bool_fun_fun$ )G_c_fun_i_g_bool_fun_fun_fun$ )
(declare-fun uvd$ (F_h_bool_fun_fun$ )B_h_fun_f_b_bool_fun_fun_fun$ )
(declare-fun uve$ (G_i_bool_fun_fun$ )D_i_fun_g_d_bool_fun_fun_fun$ )
(declare-fun uvf$ (H_f_bool_fun_fun$ )F_f_fun_h_f_bool_fun_fun_fun$ )
(declare-fun uvg$ (I_g_bool_fun_fun$ )G_g_fun_i_g_bool_fun_fun_fun$ )
(declare-fun uvh$ (B_a_bool_fun_fun$ )F_a_fun_b_f_bool_fun_fun_fun$ )
(declare-fun uvi$ (D_c_bool_fun_fun$ )G_c_fun_d_g_bool_fun_fun_fun$ )
(declare-fun uvj$ (B_a_bool_fun_fun$ )A_a_fun_b_a_bool_fun_fun_fun$ )
(declare-fun uvk$ (D_c_bool_fun_fun$ )C_c_fun_d_c_bool_fun_fun_fun$ )
(declare-fun uvl$ (F_b_bool_fun_fun$ )B_b_fun_f_b_bool_fun_fun_fun$ )
(declare-fun uvm$ (G_d_bool_fun_fun$ )D_d_fun_g_d_bool_fun_fun_fun$ )
(declare-fun uvn$ ()H_h_fun$ )
(declare-fun uvo$ ()I_i_fun$ )
(declare-fun uvp$ ()F_f_fun$ )
(declare-fun uvq$ ()G_g_fun$ )
(declare-fun uvr$ ()B_b_fun$ )
(declare-fun uvs$ ()D_d_fun$ )
(declare-fun uvt$ ()A_a_fun$ )
(declare-fun uvu$ ()C_c_fun$ )
(declare-fun uvv$ (F_set$ )F_bool_fun$ )
(declare-fun uvw$ (D_set$ )D_bool_fun$ )
(declare-fun uvx$ (C_set$ )C_bool_fun$ )
(declare-fun uvy$ (B_set$ )B_bool_fun$ )
(declare-fun uvz$ (A_set$ )A_bool_fun$ )
(declare-fun uwa$ (E_a_b_prod_c_d_prod_sp_mu_set$ )E_a_b_prod_c_d_prod_sp_mu_bool_fun$ )
(declare-fun uwb$ (G_i_prod_set$ )G_i_prod_bool_fun$ )
(declare-fun uwc$ (F_h_prod_set$ )F_h_prod_bool_fun$ )
(declare-fun uwd$ (C_d_prod_set$ )C_d_prod_bool_fun$ )
(declare-fun uwe$ (A_b_prod_set$ )A_b_prod_bool_fun$ )
(declare-fun uwf$ (C$ )C_c_fun$ )
(declare-fun uwg$ (Nat$ )B_nat_fun$ )
(declare-fun uwh$ (B$ )B_b_fun$ )
(declare-fun uwi$ (Nat$ )A_nat_fun$ )
(declare-fun uwj$ (A$ )A_a_fun$ )
(declare-fun uwk$ (A_b_bool_fun_fun$ )C_d_bool_fun_fun_e_a_b_prod_c_d_prod_sp_mu_bool_fun_fun$ )
(declare-fun uwl$ ()A_b_prod_a_fun$ )
(declare-fun uwm$ ()C_d_prod_c_fun$ )
(declare-fun uwn$ ()A_b_prod_b_fun$ )
(declare-fun uwo$ ()C_d_prod_d_fun$ )
(declare-fun uwp$ (F_h_bool_fun_fun$ G_i_bool_fun_fun$ )E_f_h_prod_g_i_prod_sp_mu_bool_fun$ )
(declare-fun uwq$ ()F_h_prod_f_fun$ )
(declare-fun uwr$ ()G_i_prod_g_fun$ )
(declare-fun uws$ ()F_h_prod_h_fun$ )
(declare-fun uwt$ ()G_i_prod_i_fun$ )
(declare-fun comp$ (A_a_fun$ )F_a_fun_f_a_fun_fun$ )
(declare-fun put$a (A$ C$ )E_a_c_sp_mu$ )
(declare-fun put$b (H$ I$ )E_h_i_sp_mu$ )
(declare-fun put$c (B$ D$ )E_b_d_sp_mu$ )
(declare-fun put$d (A_b_prod$ C_d_prod$ )E_a_b_prod_c_d_prod_sp_mu$ )
(declare-fun comp$a (C_c_fun$ )G_c_fun_g_c_fun_fun$ )
(declare-fun comp$b (B_b_fun$ )H_b_fun_h_b_fun_fun$ )
(declare-fun comp$c (D_d_fun$ )I_d_fun_i_d_fun_fun$ )
(declare-fun comp$d (F_a_fun$ )F_f_fun_f_a_fun_fun$ )
(declare-fun comp$e (G_c_fun$ )G_g_fun_g_c_fun_fun$ )
(declare-fun comp$f (H_b_fun$ )H_h_fun_h_b_fun_fun$ )
(declare-fun comp$g (I_d_fun$ )I_i_fun_i_d_fun_fun$ )
(declare-fun comp$h (A_nat_fun$ )F_a_fun_f_nat_fun_fun$ )
(declare-fun comp$i (A_f_fun$ )F_a_fun_f_f_fun_fun$ )
(declare-fun comp$j (C_g_fun$ )G_c_fun_g_g_fun_fun$ )
(declare-fun comp$k (B_h_fun$ )H_b_fun_h_h_fun_fun$ )
(declare-fun comp$l (D_i_fun$ )I_d_fun_i_i_fun_fun$ )
(declare-fun comp$m (F_a_fun$ )A_f_fun_a_a_fun_fun$ )
(declare-fun comp$n (G_c_fun$ )C_g_fun_c_c_fun_fun$ )
(declare-fun comp$o (H_b_fun$ )B_h_fun_b_b_fun_fun$ )
(declare-fun comp$p (I_d_fun$ )D_i_fun_d_d_fun_fun$ )
(declare-fun comp$q (H_h_fun$ )H_h_fun_h_h_fun_fun$ )
(declare-fun comp$r (I_i_fun$ )I_i_fun_i_i_fun_fun$ )
(declare-fun comp$s (C_c_fun$ )C_c_fun_c_c_fun_fun$ )
(declare-fun comp$t (H_nat_fun$ )H_h_fun_h_nat_fun_fun$ )
(declare-fun comp$u (B_nat_fun$ )H_b_fun_h_nat_fun_fun$ )
(declare-fun comp$v (B_nat_fun$ )B_b_fun_b_nat_fun_fun$ )
(declare-fun comp$w (H_nat_fun$ )F_h_fun_f_nat_fun_fun$ )
(declare-fun comp$x (B_nat_fun$ )A_b_fun_a_nat_fun_fun$ )
(declare-fun comp$y (B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun comp$z (F_nat_fun$ )H_f_fun_h_nat_fun_fun$ )
(declare-fun comp$aa (A_nat_fun$ )B_a_fun_b_nat_fun_fun$ )
(declare-fun comp$ab (F_nat_fun$ )F_f_fun_f_nat_fun_fun$ )
(declare-fun comp$ac (A_nat_fun$ )A_a_fun_a_nat_fun_fun$ )
(declare-fun comp$ad (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun comp$ae (Nat_nat_fun$ )B_nat_fun_b_nat_fun_fun$ )
(declare-fun comp$af (Nat_nat_fun$ )H_nat_fun_h_nat_fun_fun$ )
(declare-fun comp$ag (Nat_b_fun$ )B_nat_fun_b_b_fun_fun$ )
(declare-fun comp$ah (Nat_b_fun$ )H_nat_fun_h_b_fun_fun$ )
(declare-fun comp$ai (Nat_nat_fun$ )A_nat_fun_a_nat_fun_fun$ )
(declare-fun comp$aj (Nat_nat_fun$ )F_nat_fun_f_nat_fun_fun$ )
(declare-fun comp$ak (Nat_a_fun$ )A_nat_fun_a_a_fun_fun$ )
(declare-fun comp$al (Nat_a_fun$ )F_nat_fun_f_a_fun_fun$ )
(declare-fun comp$am (H_b_fun$ )F_h_fun_f_b_fun_fun$ )
(declare-fun comp$an (A_b_fun$ )F_a_fun_f_b_fun_fun$ )
(declare-fun comp$ao (F_a_fun$ )H_f_fun_h_a_fun_fun$ )
(declare-fun comp$ap (B_a_fun$ )H_b_fun_h_a_fun_fun$ )
(declare-fun comp$aq (F_h_bool_fun_fun_f_h_bool_fun_fun_fun$ )A_b_bool_fun_fun_f_h_bool_fun_fun_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun comp$ar (A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )A_b_bool_fun_fun_a_b_bool_fun_fun_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun comp$as (G_i_bool_fun_fun_g_i_bool_fun_fun_fun$ )C_d_bool_fun_fun_g_i_bool_fun_fun_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ )
(declare-fun comp$at (C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ )C_d_bool_fun_fun_c_d_bool_fun_fun_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ )
(declare-fun comp$au (A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )Nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun_nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun comp$av (A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )Nat_b_bool_fun_fun_a_b_bool_fun_fun_fun_nat_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun comp$aw (A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )A_nat_bool_fun_fun_a_b_bool_fun_fun_fun_a_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun comp$ax (G_i_bool_fun_fun_c_d_bool_fun_fun_fun$ )C_d_bool_fun_fun_g_i_bool_fun_fun_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ )
(declare-fun comp$ay (D_d_fun$ )D_d_fun_d_d_fun_fun$ )
(declare-fun comp$az (C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ )C_d_bool_fun_fun_c_d_bool_fun_fun_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ )
(declare-fun comp$ba (C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ )G_i_bool_fun_fun_c_d_bool_fun_fun_fun_g_i_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ )
(declare-fun comp$bb (E_a_c_sp_mu_nat_fun$ E_f_g_sp_mu_e_a_c_sp_mu_fun$ )E_f_g_sp_mu_nat_fun$ )
(declare-fun comp$bc (C_nat_fun$ G_c_fun$ )G_nat_fun$ )
(declare-fun comp$bd (E_b_d_sp_mu_nat_fun$ E_h_i_sp_mu_e_b_d_sp_mu_fun$ )E_h_i_sp_mu_nat_fun$ )
(declare-fun comp$be (D_nat_fun$ )I_d_fun_i_nat_fun_fun$ )
(declare-fun comp$bf (E_b_d_sp_mu_nat_fun$ E_b_d_sp_mu_e_b_d_sp_mu_fun$ )E_b_d_sp_mu_nat_fun$ )
(declare-fun comp$bg (D_nat_fun$ )D_d_fun_d_nat_fun_fun$ )
(declare-fun comp$bh (E_b_d_sp_mu_nat_fun$ E_a_c_sp_mu_e_b_d_sp_mu_fun$ )E_a_c_sp_mu_nat_fun$ )
(declare-fun comp$bi (D_nat_fun$ )C_d_fun_c_nat_fun_fun$ )
(declare-fun comp$bj (E_b_d_sp_mu_nat_fun$ E_f_g_sp_mu_e_b_d_sp_mu_fun$ )E_f_g_sp_mu_nat_fun$ )
(declare-fun comp$bk (B_nat_fun$ )F_b_fun_f_nat_fun_fun$ )
(declare-fun comp$bl (D_nat_fun$ G_d_fun$ )G_nat_fun$ )
(declare-fun comp$bm (E_h_i_sp_mu_nat_fun$ E_b_d_sp_mu_e_h_i_sp_mu_fun$ )E_b_d_sp_mu_nat_fun$ )
(declare-fun comp$bn (H_nat_fun$ )B_h_fun_b_nat_fun_fun$ )
(declare-fun comp$bo (I_nat_fun$ )D_i_fun_d_nat_fun_fun$ )
(declare-fun comp$bp (E_h_i_sp_mu_nat_fun$ E_h_i_sp_mu_e_h_i_sp_mu_fun$ )E_h_i_sp_mu_nat_fun$ )
(declare-fun comp$bq (I_nat_fun$ )I_i_fun_i_nat_fun_fun$ )
(declare-fun comp$br (E_h_i_sp_mu_nat_fun$ E_a_c_sp_mu_e_h_i_sp_mu_fun$ )E_a_c_sp_mu_nat_fun$ )
(declare-fun comp$bs (H_nat_fun$ )A_h_fun_a_nat_fun_fun$ )
(declare-fun comp$bt (I_nat_fun$ )C_i_fun_c_nat_fun_fun$ )
(declare-fun comp$bu (E_h_i_sp_mu_nat_fun$ E_f_g_sp_mu_e_h_i_sp_mu_fun$ )E_f_g_sp_mu_nat_fun$ )
(declare-fun comp$bv (I_nat_fun$ G_i_fun$ )G_nat_fun$ )
(declare-fun comp$bw (E_a_c_sp_mu_nat_fun$ E_b_d_sp_mu_e_a_c_sp_mu_fun$ )E_b_d_sp_mu_nat_fun$ )
(declare-fun comp$bx (C_nat_fun$ )D_c_fun_d_nat_fun_fun$ )
(declare-fun member$ (E_a_b_prod_c_d_prod_sp_mu$ E_a_b_prod_c_d_prod_sp_mu_set$ )Bool )
(declare-fun collect$ (F_h_prod_bool_fun$ )F_h_prod_set$ )
(declare-fun fun_app$ (G_i_prod_i_fun$ G_i_prod$ )I$ )
(declare-fun less_eq$ (F_h_prod_set$ F_h_prod_set$ )Bool )
(declare-fun member$a (G_i_prod$ G_i_prod_set$ )Bool )
(declare-fun member$b (F_h_prod$ F_h_prod_set$ )Bool )
(declare-fun member$c (C_d_prod$ C_d_prod_set$ )Bool )
(declare-fun member$d (A_b_prod$ A_b_prod_set$ )Bool )
(declare-fun member$e (F$ F_set$ )Bool )
(declare-fun member$f (D$ D_set$ )Bool )
(declare-fun member$g (C$ C_set$ )Bool )
(declare-fun member$h (B$ B_set$ )Bool )
(declare-fun member$i (A$ A_set$ )Bool )
(declare-fun member$j (H$ H_set$ )Bool )
(declare-fun member$k (I$ I_set$ )Bool )
(declare-fun member$l (G$ G_set$ )Bool )
(declare-fun member$m (E_f_h_prod_g_i_prod_sp_mu$ E_f_h_prod_g_i_prod_sp_mu_set$ )Bool )
(declare-fun collect$a (G_i_prod_bool_fun$ )G_i_prod_set$ )
(declare-fun collect$b (A_b_prod_bool_fun$ )A_b_prod_set$ )
(declare-fun collect$c (C_d_prod_bool_fun$ )C_d_prod_set$ )
(declare-fun collect$d (E_a_b_prod_c_d_prod_sp_mu_bool_fun$ )E_a_b_prod_c_d_prod_sp_mu_set$ )
(declare-fun collect$e (F_bool_fun$ )F_set$ )
(declare-fun collect$f (D_bool_fun$ )D_set$ )
(declare-fun collect$g (C_bool_fun$ )C_set$ )
(declare-fun collect$h (B_bool_fun$ )B_set$ )
(declare-fun collect$i (A_bool_fun$ )A_set$ )
(declare-fun collect$j (E_f_h_prod_g_i_prod_sp_mu_bool_fun$ )E_f_h_prod_g_i_prod_sp_mu_set$ )
(declare-fun fun_app$a (F_h_prod_h_fun$ F_h_prod$ )H$ )
(declare-fun fun_app$b (C_d_prod_d_fun$ C_d_prod$ )D$ )
(declare-fun fun_app$c (A_b_prod_b_fun$ A_b_prod$ )B$ )
(declare-fun fun_app$d (G_i_prod_g_fun$ G_i_prod$ )G$ )
(declare-fun fun_app$e (F_h_prod_f_fun$ F_h_prod$ )F$ )
(declare-fun fun_app$f (C_d_prod_c_fun$ C_d_prod$ )C$ )
(declare-fun fun_app$g (A_b_prod_a_fun$ A_b_prod$ )A$ )
(declare-fun fun_app$h (E_a_b_prod_c_d_prod_sp_mu_bool_fun$ E_a_b_prod_c_d_prod_sp_mu$ )Bool )
(declare-fun fun_app$i (G_i_prod_bool_fun$ G_i_prod$ )Bool )
(declare-fun fun_app$j (F_h_prod_bool_fun$ F_h_prod$ )Bool )
(declare-fun fun_app$k (C_d_prod_bool_fun$ C_d_prod$ )Bool )
(declare-fun fun_app$l (A_b_prod_bool_fun$ A_b_prod$ )Bool )
(declare-fun fun_app$m (F_bool_fun$ F$ )Bool )
(declare-fun fun_app$n (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$o (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$p (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$q (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$r (E_f_h_prod_g_i_prod_sp_mu_bool_fun$ E_f_h_prod_g_i_prod_sp_mu$ )Bool )
(declare-fun fun_app$s (C_d_bool_fun_fun_e_a_b_prod_c_d_prod_sp_mu_bool_fun_fun$ C_d_bool_fun_fun$ )E_a_b_prod_c_d_prod_sp_mu_bool_fun$ )
(declare-fun fun_app$t (I_g_bool_fun_fun$ I$ )G_bool_fun$ )
(declare-fun fun_app$u (I_i_fun_i_g_bool_fun_fun_fun$ I_i_fun$ )I_g_bool_fun_fun$ )
(declare-fun fun_app$v (I_i_fun$ I$ )I$ )
(declare-fun fun_app$w (H_f_bool_fun_fun$ H$ )F_bool_fun$ )
(declare-fun fun_app$x (H_h_fun_h_f_bool_fun_fun_fun$ H_h_fun$ )H_f_bool_fun_fun$ )
(declare-fun fun_app$y (H_h_fun$ H$ )H$ )
(declare-fun fun_app$z (G_i_bool_fun_fun$ G$ )I_bool_fun$ )
(declare-fun less_eq$a (G_i_prod_set$ G_i_prod_set$ )Bool )
(declare-fun less_eq$b (A_b_prod_set$ A_b_prod_set$ )Bool )
(declare-fun less_eq$c (C_d_prod_set$ C_d_prod_set$ )Bool )
(declare-fun vimage2p$ (F_a_fun$ )H_b_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun case_prod$ (F_h_bool_fun_fun$ )F_h_prod_bool_fun$ )
(declare-fun conversep$ (F_b_bool_fun_fun$ )B_f_bool_fun_fun$ )
(declare-fun fun_app$aa (G_g_fun_g_i_bool_fun_fun_fun$ G_g_fun$ )G_i_bool_fun_fun$ )
(declare-fun fun_app$ab (G_g_fun$ G$ )G$ )
(declare-fun fun_app$ac (C_i_bool_fun_fun$ C$ )I_bool_fun$ )
(declare-fun fun_app$ad (C_g_fun_c_i_bool_fun_fun_fun$ C_g_fun$ )C_i_bool_fun_fun$ )
(declare-fun fun_app$ae (C_g_fun$ C$ )G$ )
(declare-fun fun_app$af (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$ag (C_g_fun_c_d_bool_fun_fun_fun$ C_g_fun$ )C_d_bool_fun_fun$ )
(declare-fun fun_app$ah (G_d_bool_fun_fun$ G$ )D_bool_fun$ )
(declare-fun fun_app$ai (F_h_bool_fun_fun$ F$ )H_bool_fun$ )
(declare-fun fun_app$aj (F_f_fun_f_h_bool_fun_fun_fun$ F_f_fun$ )F_h_bool_fun_fun$ )
(declare-fun fun_app$ak (F_f_fun$ F$ )F$ )
(declare-fun fun_app$al (A_h_bool_fun_fun$ A$ )H_bool_fun$ )
(declare-fun fun_app$am (A_f_fun_a_h_bool_fun_fun_fun$ A_f_fun$ )A_h_bool_fun_fun$ )
(declare-fun fun_app$an (A_f_fun$ A$ )F$ )
(declare-fun fun_app$ao (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$ap (A_f_fun_a_b_bool_fun_fun_fun$ A_f_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$aq (F_b_bool_fun_fun$ F$ )B_bool_fun$ )
(declare-fun fun_app$ar (I_d_fun_i_g_bool_fun_fun_fun$ I_d_fun$ )I_g_bool_fun_fun$ )
(declare-fun fun_app$as (D_g_bool_fun_fun$ D$ )G_bool_fun$ )
(declare-fun fun_app$at (I_d_fun$ I$ )D$ )
(declare-fun fun_app$au (I_c_bool_fun_fun$ I$ )C_bool_fun$ )
(declare-fun fun_app$av (I_d_fun_i_c_bool_fun_fun_fun$ I_d_fun$ )I_c_bool_fun_fun$ )
(declare-fun fun_app$aw (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$ax (D_d_fun_d_c_bool_fun_fun_fun$ D_d_fun$ )D_c_bool_fun_fun$ )
(declare-fun fun_app$ay (D_d_fun$ D$ )D$ )
(declare-fun fun_app$az (G_c_fun_g_i_bool_fun_fun_fun$ G_c_fun$ )G_i_bool_fun_fun$ )
(declare-fun fun_app$ba (G_c_fun$ G$ )C$ )
(declare-fun fun_app$bb (G_c_fun_g_d_bool_fun_fun_fun$ G_c_fun$ )G_d_bool_fun_fun$ )
(declare-fun fun_app$bc (C_c_fun_c_d_bool_fun_fun_fun$ C_c_fun$ )C_d_bool_fun_fun$ )
(declare-fun fun_app$bd (C_c_fun$ C$ )C$ )
(declare-fun fun_app$be (H_b_fun_h_f_bool_fun_fun_fun$ H_b_fun$ )H_f_bool_fun_fun$ )
(declare-fun fun_app$bf (B_f_bool_fun_fun$ B$ )F_bool_fun$ )
(declare-fun fun_app$bg (H_b_fun$ H$ )B$ )
(declare-fun fun_app$bh (H_a_bool_fun_fun$ H$ )A_bool_fun$ )
(declare-fun fun_app$bi (H_b_fun_h_a_bool_fun_fun_fun$ H_b_fun$ )H_a_bool_fun_fun$ )
(declare-fun fun_app$bj (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$bk (B_b_fun_b_a_bool_fun_fun_fun$ B_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun fun_app$bl (B_b_fun$ B$ )B$ )
(declare-fun fun_app$bm (F_a_fun_f_h_bool_fun_fun_fun$ F_a_fun$ )F_h_bool_fun_fun$ )
(declare-fun fun_app$bn (F_a_fun$ F$ )A$ )
(declare-fun fun_app$bo (F_a_fun_f_b_bool_fun_fun_fun$ F_a_fun$ )F_b_bool_fun_fun$ )
(declare-fun fun_app$bp (A_a_fun_a_b_bool_fun_fun_fun$ A_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$bq (A_a_fun$ A$ )A$ )
(declare-fun fun_app$br (G_bool_fun$ G$ )Bool )
(declare-fun fun_app$bs (G_g_fun_i_g_bool_fun_fun_fun$ G_g_fun$ )I_g_bool_fun_fun$ )
(declare-fun fun_app$bt (G_c_fun_i_g_bool_fun_fun_fun$ G_c_fun$ )I_g_bool_fun_fun$ )
(declare-fun fun_app$bu (F_f_fun_h_f_bool_fun_fun_fun$ F_f_fun$ )H_f_bool_fun_fun$ )
(declare-fun fun_app$bv (F_a_fun_h_f_bool_fun_fun_fun$ F_a_fun$ )H_f_bool_fun_fun$ )
(declare-fun fun_app$bw (I_bool_fun$ I$ )Bool )
(declare-fun fun_app$bx (I_i_fun_g_i_bool_fun_fun_fun$ I_i_fun$ )G_i_bool_fun_fun$ )
(declare-fun fun_app$by (D_i_fun_g_d_bool_fun_fun_fun$ D_i_fun$ )G_d_bool_fun_fun$ )
(declare-fun fun_app$bz (D_i_fun$ D$ )I$ )
(declare-fun fun_app$ca (I_d_fun_g_i_bool_fun_fun_fun$ I_d_fun$ )G_i_bool_fun_fun$ )
(declare-fun fun_app$cb (D_d_fun_g_d_bool_fun_fun_fun$ D_d_fun$ )G_d_bool_fun_fun$ )
(declare-fun fun_app$cc (H_bool_fun$ H$ )Bool )
(declare-fun fun_app$cd (H_h_fun_f_h_bool_fun_fun_fun$ H_h_fun$ )F_h_bool_fun_fun$ )
(declare-fun fun_app$ce (B_h_fun_f_b_bool_fun_fun_fun$ B_h_fun$ )F_b_bool_fun_fun$ )
(declare-fun fun_app$cf (B_h_fun$ B$ )H$ )
(declare-fun fun_app$cg (H_b_fun_f_h_bool_fun_fun_fun$ H_b_fun$ )F_h_bool_fun_fun$ )
(declare-fun fun_app$ch (B_b_fun_f_b_bool_fun_fun_fun$ B_b_fun$ )F_b_bool_fun_fun$ )
(declare-fun fun_app$ci (G_c_fun_d_g_bool_fun_fun_fun$ G_c_fun$ )D_g_bool_fun_fun$ )
(declare-fun fun_app$cj (C_c_fun_d_c_bool_fun_fun_fun$ C_c_fun$ )D_c_bool_fun_fun$ )
(declare-fun fun_app$ck (I_d_fun_c_i_bool_fun_fun_fun$ I_d_fun$ )C_i_bool_fun_fun$ )
(declare-fun fun_app$cl (D_d_fun_c_d_bool_fun_fun_fun$ D_d_fun$ )C_d_bool_fun_fun$ )
(declare-fun fun_app$cm (F_a_fun_b_f_bool_fun_fun_fun$ F_a_fun$ )B_f_bool_fun_fun$ )
(declare-fun fun_app$cn (A_a_fun_b_a_bool_fun_fun_fun$ A_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun fun_app$co (H_b_fun_a_h_bool_fun_fun_fun$ H_b_fun$ )A_h_bool_fun_fun$ )
(declare-fun fun_app$cp (B_b_fun_a_b_bool_fun_fun_fun$ B_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$cq (B_nat_fun$ B$ )Nat$ )
(declare-fun fun_app$cr (A_nat_fun$ A$ )Nat$ )
(declare-fun fun_app$cs (E_b_d_sp_mu_bool_fun$ E_b_d_sp_mu$ )Bool )
(declare-fun fun_app$ct (E_a_c_sp_mu_e_b_d_sp_mu_bool_fun_fun$ E_a_c_sp_mu$ )E_b_d_sp_mu_bool_fun$ )
(declare-fun fun_app$cu (E_f_g_sp_mu_e_a_c_sp_mu_fun$ E_f_g_sp_mu$ )E_a_c_sp_mu$ )
(declare-fun fun_app$cv (E_h_i_sp_mu_e_b_d_sp_mu_fun$ E_h_i_sp_mu$ )E_b_d_sp_mu$ )
(declare-fun fun_app$cw (E_h_i_sp_mu_bool_fun$ E_h_i_sp_mu$ )Bool )
(declare-fun fun_app$cx (E_f_g_sp_mu_e_h_i_sp_mu_bool_fun_fun$ E_f_g_sp_mu$ )E_h_i_sp_mu_bool_fun$ )
(declare-fun fun_app$cy (A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ A_b_bool_fun_fun$ )F_h_bool_fun_fun$ )
(declare-fun fun_app$cz (H_b_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ H_b_fun$ )A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$da (C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ C_d_bool_fun_fun$ )G_i_bool_fun_fun$ )
(declare-fun fun_app$db (I_d_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ I_d_fun$ )C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ )
(declare-fun fun_app$dc (C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ C_d_bool_fun_fun$ )C_d_bool_fun_fun$ )
(declare-fun fun_app$dd (D_d_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ D_d_fun$ )C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ )
(declare-fun fun_app$de (G_i_bool_fun_fun_g_i_bool_fun_fun_fun$ G_i_bool_fun_fun$ )G_i_bool_fun_fun$ )
(declare-fun fun_app$df (I_i_fun_g_i_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ I_i_fun$ )G_i_bool_fun_fun_g_i_bool_fun_fun_fun$ )
(declare-fun fun_app$dg (A_b_bool_fun_fun_a_b_bool_fun_fun_fun$ A_b_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$dh (B_b_fun_a_b_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ B_b_fun$ )A_b_bool_fun_fun_a_b_bool_fun_fun_fun$ )
(declare-fun fun_app$di (F_h_bool_fun_fun_f_h_bool_fun_fun_fun$ F_h_bool_fun_fun$ )F_h_bool_fun_fun$ )
(declare-fun fun_app$dj (H_h_fun_f_h_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ H_h_fun$ )F_h_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$dk (H_f_fun$ H$ )F$ )
(declare-fun fun_app$dl (I_g_fun$ I$ )G$ )
(declare-fun fun_app$dm (H_a_fun$ H$ )A$ )
(declare-fun fun_app$dn (I_c_fun$ I$ )C$ )
(declare-fun fun_app$do (E_b_d_sp_mu_e_h_i_sp_mu_fun$ E_b_d_sp_mu$ )E_h_i_sp_mu$ )
(declare-fun fun_app$dp (B_f_fun$ B$ )F$ )
(declare-fun fun_app$dq (D_g_fun$ D$ )G$ )
(declare-fun fun_app$dr (E_b_d_sp_mu_e_a_c_sp_mu_fun$ E_b_d_sp_mu$ )E_a_c_sp_mu$ )
(declare-fun fun_app$ds (B_a_fun$ B$ )A$ )
(declare-fun fun_app$dt (D_c_fun$ D$ )C$ )
(declare-fun fun_app$du (E_f_g_sp_mu_e_h_i_sp_mu_fun$ E_f_g_sp_mu$ )E_h_i_sp_mu$ )
(declare-fun fun_app$dv (F_h_fun$ F$ )H$ )
(declare-fun fun_app$dw (G_i_fun$ G$ )I$ )
(declare-fun fun_app$dx (E_f_g_sp_mu_e_b_d_sp_mu_fun$ E_f_g_sp_mu$ )E_b_d_sp_mu$ )
(declare-fun fun_app$dy (F_b_fun$ F$ )B$ )
(declare-fun fun_app$dz (G_d_fun$ G$ )D$ )
(declare-fun fun_app$ea (E_a_c_sp_mu_e_h_i_sp_mu_fun$ E_a_c_sp_mu$ )E_h_i_sp_mu$ )
(declare-fun fun_app$eb (A_h_fun$ A$ )H$ )
(declare-fun fun_app$ec (C_i_fun$ C$ )I$ )
(declare-fun fun_app$ed (H_h_bool_fun_fun$ H$ )H_bool_fun$ )
(declare-fun fun_app$ee (I_i_bool_fun_fun$ I$ )I_bool_fun$ )
(declare-fun fun_app$ef (H_b_bool_fun_fun$ H$ )B_bool_fun$ )
(declare-fun fun_app$eg (I_d_bool_fun_fun$ I$ )D_bool_fun$ )
(declare-fun fun_app$eh (E_a_c_sp_mu_bool_fun$ E_a_c_sp_mu$ )Bool )
(declare-fun fun_app$ei (E_h_i_sp_mu_e_a_c_sp_mu_bool_fun_fun$ E_h_i_sp_mu$ )E_a_c_sp_mu_bool_fun$ )
(declare-fun fun_app$ej (B_h_bool_fun_fun$ B$ )H_bool_fun$ )
(declare-fun fun_app$ek (D_i_bool_fun_fun$ D$ )I_bool_fun$ )
(declare-fun fun_app$el (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$em (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$en (E_f_g_sp_mu_bool_fun$ E_f_g_sp_mu$ )Bool )
(declare-fun fun_app$eo (E_b_d_sp_mu_e_f_g_sp_mu_bool_fun_fun$ E_b_d_sp_mu$ )E_f_g_sp_mu_bool_fun$ )
(declare-fun fun_app$ep (F_f_bool_fun_fun$ F$ )F_bool_fun$ )
(declare-fun fun_app$eq (G_g_bool_fun_fun$ G$ )G_bool_fun$ )
(declare-fun fun_app$er (F_a_bool_fun_fun$ F$ )A_bool_fun$ )
(declare-fun fun_app$es (G_c_bool_fun_fun$ G$ )C_bool_fun$ )
(declare-fun fun_app$et (E_h_i_sp_mu_e_h_i_sp_mu_fun$ E_h_i_sp_mu$ )E_h_i_sp_mu$ )
(declare-fun fun_app$eu (E_f_g_sp_mu_e_f_g_sp_mu_fun$ E_f_g_sp_mu$ )E_f_g_sp_mu$ )
(declare-fun fun_app$ev (E_b_d_sp_mu_e_b_d_sp_mu_fun$ E_b_d_sp_mu$ )E_b_d_sp_mu$ )
(declare-fun fun_app$ew (E_a_c_sp_mu_e_a_c_sp_mu_fun$ E_a_c_sp_mu$ )E_a_c_sp_mu$ )
(declare-fun fun_app$ex (F_a_fun_f_a_fun_fun$ F_a_fun$ )F_a_fun$ )
(declare-fun fun_app$ey (G_c_fun_g_c_fun_fun$ G_c_fun$ )G_c_fun$ )
(declare-fun fun_app$ez (H_b_fun_h_b_fun_fun$ H_b_fun$ )H_b_fun$ )
(declare-fun fun_app$fa (I_d_fun_i_d_fun_fun$ I_d_fun$ )I_d_fun$ )
(declare-fun fun_app$fb (F_f_fun_f_a_fun_fun$ F_f_fun$ )F_a_fun$ )
(declare-fun fun_app$fc (G_g_fun_g_c_fun_fun$ G_g_fun$ )G_c_fun$ )
(declare-fun fun_app$fd (H_h_fun_h_b_fun_fun$ H_h_fun$ )H_b_fun$ )
(declare-fun fun_app$fe (I_i_fun_i_d_fun_fun$ I_i_fun$ )I_d_fun$ )
(declare-fun fun_app$ff (F_a_fun_f_nat_fun_fun$ F_a_fun$ )F_nat_fun$ )
(declare-fun fun_app$fg (F_a_fun_f_f_fun_fun$ F_a_fun$ )F_f_fun$ )
(declare-fun fun_app$fh (G_c_fun_g_g_fun_fun$ G_c_fun$ )G_g_fun$ )
(declare-fun fun_app$fi (H_b_fun_h_h_fun_fun$ H_b_fun$ )H_h_fun$ )
(declare-fun fun_app$fj (I_d_fun_i_i_fun_fun$ I_d_fun$ )I_i_fun$ )
(declare-fun fun_app$fk (A_f_fun_a_a_fun_fun$ A_f_fun$ )A_a_fun$ )
(declare-fun fun_app$fl (C_g_fun_c_c_fun_fun$ C_g_fun$ )C_c_fun$ )
(declare-fun fun_app$fm (B_h_fun_b_b_fun_fun$ B_h_fun$ )B_b_fun$ )
(declare-fun fun_app$fn (D_i_fun_d_d_fun_fun$ D_i_fun$ )D_d_fun$ )
(declare-fun fun_app$fo (H_h_fun_h_h_fun_fun$ H_h_fun$ )H_h_fun$ )
(declare-fun fun_app$fp (I_i_fun_i_i_fun_fun$ I_i_fun$ )I_i_fun$ )
(declare-fun fun_app$fq (E_f_g_sp_mu_e_b_d_sp_mu_bool_fun_fun$ E_f_g_sp_mu$ )E_b_d_sp_mu_bool_fun$ )
(declare-fun fun_app$fr (E_a_c_sp_mu_e_h_i_sp_mu_bool_fun_fun$ E_a_c_sp_mu$ )E_h_i_sp_mu_bool_fun$ )
(declare-fun fun_app$fs (E_b_d_sp_mu_e_a_c_sp_mu_bool_fun_fun$ E_b_d_sp_mu$ )E_a_c_sp_mu_bool_fun$ )
(declare-fun fun_app$ft (E_h_i_sp_mu_e_f_g_sp_mu_bool_fun_fun$ E_h_i_sp_mu$ )E_f_g_sp_mu_bool_fun$ )
(declare-fun fun_app$fu (C_c_fun_c_c_fun_fun$ C_c_fun$ )C_c_fun$ )
(declare-fun fun_app$fv (H_nat_fun$ H$ )Nat$ )
(declare-fun fun_app$fw (H_h_fun_h_nat_fun_fun$ H_h_fun$ )H_nat_fun$ )
(declare-fun fun_app$fx (H_b_fun_h_nat_fun_fun$ H_b_fun$ )H_nat_fun$ )
(declare-fun fun_app$fy (B_b_fun_b_nat_fun_fun$ B_b_fun$ )B_nat_fun$ )
(declare-fun fun_app$fz (A_b_fun$ A$ )B$ )
(declare-fun fun_app$ga (F_nat_fun$ F$ )Nat$ )
(declare-fun fun_app$gb (F_h_fun_f_nat_fun_fun$ F_h_fun$ )F_nat_fun$ )
(declare-fun fun_app$gc (A_b_fun_a_nat_fun_fun$ A_b_fun$ )A_nat_fun$ )
(declare-fun fun_app$gd (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun$ )
(declare-fun fun_app$ge (H_f_fun_h_nat_fun_fun$ H_f_fun$ )H_nat_fun$ )
(declare-fun fun_app$gf (B_a_fun_b_nat_fun_fun$ B_a_fun$ )B_nat_fun$ )
(declare-fun fun_app$gg (F_f_fun_f_nat_fun_fun$ F_f_fun$ )F_nat_fun$ )
(declare-fun fun_app$gh (A_a_fun_a_nat_fun_fun$ A_a_fun$ )A_nat_fun$ )
(declare-fun fun_app$gi (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$gj (F_i_bool_fun_fun$ F$ )I_bool_fun$ )
(declare-fun fun_app$gk (B_i_bool_fun_fun$ B$ )I_bool_fun$ )
(declare-fun fun_app$gl (A_i_bool_fun_fun$ A$ )I_bool_fun$ )
(declare-fun fun_app$gm (D_h_bool_fun_fun$ D$ )H_bool_fun$ )
(declare-fun fun_app$gn (B_nat_fun_b_nat_fun_fun$ B_nat_fun$ )B_nat_fun$ )
(declare-fun fun_app$go (H_nat_fun_h_nat_fun_fun$ H_nat_fun$ )H_nat_fun$ )
(declare-fun fun_app$gp (B_nat_fun_b_b_fun_fun$ B_nat_fun$ )B_b_fun$ )
(declare-fun fun_app$gq (H_nat_fun_h_b_fun_fun$ H_nat_fun$ )H_b_fun$ )
(declare-fun fun_app$gr (A_nat_fun_a_nat_fun_fun$ A_nat_fun$ )A_nat_fun$ )
(declare-fun fun_app$gs (F_nat_fun_f_nat_fun_fun$ F_nat_fun$ )F_nat_fun$ )
(declare-fun fun_app$gt (A_nat_fun_a_a_fun_fun$ A_nat_fun$ )A_a_fun$ )
(declare-fun fun_app$gu (F_nat_fun_f_a_fun_fun$ F_nat_fun$ )F_a_fun$ )
(declare-fun fun_app$gv (F_h_fun_f_b_fun_fun$ F_h_fun$ )F_b_fun$ )
(declare-fun fun_app$gw (F_a_fun_f_b_fun_fun$ F_a_fun$ )F_b_fun$ )
(declare-fun fun_app$gx (H_f_fun_h_a_fun_fun$ H_f_fun$ )H_a_fun$ )
(declare-fun fun_app$gy (H_b_fun_h_a_fun_fun$ H_b_fun$ )H_a_fun$ )
(declare-fun fun_app$gz (A_b_bool_fun_fun_f_h_bool_fun_fun_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$ha (A_b_bool_fun_fun_a_b_bool_fun_fun_fun_a_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ A_b_bool_fun_fun_a_b_bool_fun_fun_fun$ )A_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$hb (C_d_bool_fun_fun_g_i_bool_fun_fun_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ )C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ )
(declare-fun fun_app$hc (C_d_bool_fun_fun_c_d_bool_fun_fun_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ )C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ )
(declare-fun fun_app$hd (H_nat_fun_nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ H_nat_fun$ )Nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$he (Nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun_nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ Nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun$ )Nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$hf (B_nat_fun_nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ B_nat_fun$ )Nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun$ )
(declare-fun fun_app$hg (H_b_fun_nat_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ H_b_fun$ )Nat_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$hh (Nat_b_bool_fun_fun_a_b_bool_fun_fun_fun_nat_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ Nat_b_bool_fun_fun_a_b_bool_fun_fun_fun$ )Nat_b_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$hi (B_b_fun_nat_b_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ B_b_fun$ )Nat_b_bool_fun_fun_a_b_bool_fun_fun_fun$ )
(declare-fun fun_app$hj (H_nat_fun_a_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ H_nat_fun$ )A_nat_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$hk (A_nat_bool_fun_fun_a_b_bool_fun_fun_fun_a_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ A_nat_bool_fun_fun_a_b_bool_fun_fun_fun$ )A_nat_bool_fun_fun_f_h_bool_fun_fun_fun$ )
(declare-fun fun_app$hl (B_nat_fun_a_nat_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ B_nat_fun$ )A_nat_bool_fun_fun_a_b_bool_fun_fun_fun$ )
(declare-fun fun_app$hm (C_d_bool_fun_fun_g_i_bool_fun_fun_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ C_d_bool_fun_fun_g_i_bool_fun_fun_fun$ )C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ )
(declare-fun fun_app$hn (D_i_fun_g_i_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ D_i_fun$ )G_i_bool_fun_fun_c_d_bool_fun_fun_fun$ )
(declare-fun fun_app$ho (D_d_fun_d_d_fun_fun$ D_d_fun$ )D_d_fun$ )
(declare-fun fun_app$hp (C_d_bool_fun_fun_c_d_bool_fun_fun_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ )C_d_bool_fun_fun_c_d_bool_fun_fun_fun$ )
(declare-fun fun_app$hq (G_i_bool_fun_fun_c_d_bool_fun_fun_fun_g_i_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ G_i_bool_fun_fun_c_d_bool_fun_fun_fun$ )G_i_bool_fun_fun_g_i_bool_fun_fun_fun$ )
(declare-fun fun_app$hr (I_d_fun_i_nat_fun_fun$ I_d_fun$ )I_nat_fun$ )
(declare-fun fun_app$hs (D_d_fun_d_nat_fun_fun$ D_d_fun$ )D_nat_fun$ )
(declare-fun fun_app$ht (C_d_fun_c_nat_fun_fun$ C_d_fun$ )C_nat_fun$ )
(declare-fun fun_app$hu (F_b_fun_f_nat_fun_fun$ F_b_fun$ )F_nat_fun$ )
(declare-fun fun_app$hv (B_h_fun_b_nat_fun_fun$ B_h_fun$ )B_nat_fun$ )
(declare-fun fun_app$hw (D_i_fun_d_nat_fun_fun$ D_i_fun$ )D_nat_fun$ )
(declare-fun fun_app$hx (I_i_fun_i_nat_fun_fun$ I_i_fun$ )I_nat_fun$ )
(declare-fun fun_app$hy (A_h_fun_a_nat_fun_fun$ A_h_fun$ )A_nat_fun$ )
(declare-fun fun_app$hz (C_i_fun_c_nat_fun_fun$ C_i_fun$ )C_nat_fun$ )
(declare-fun fun_app$ia (D_c_fun_d_nat_fun_fun$ D_c_fun$ )D_nat_fun$ )
(declare-fun map_sp_mu$ (F_a_fun$ G_c_fun$ )E_f_g_sp_mu_e_a_c_sp_mu_fun$ )
(declare-fun rel_sp_mu$ (A_b_bool_fun_fun$ C_d_bool_fun_fun$ )E_a_c_sp_mu_e_b_d_sp_mu_bool_fun_fun$ )
(declare-fun vimage2p$a (G_c_fun$ )I_d_fun_c_d_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$b (C_c_fun$ )D_d_fun_c_d_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$c (G_g_fun$ )I_i_fun_g_i_bool_fun_fun_g_i_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$d (A_a_fun$ )B_b_fun_a_b_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$e (F_f_fun$ )H_h_fun_f_h_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$f (F_nat_fun$ )H_nat_fun_nat_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$g (A_nat_fun$ )B_nat_fun_nat_nat_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$h (F_nat_fun$ )H_b_fun_nat_b_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$i (A_nat_fun$ )B_b_fun_nat_b_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$j (F_a_fun$ )H_nat_fun_a_nat_bool_fun_fun_f_h_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$k (A_a_fun$ )B_nat_fun_a_nat_bool_fun_fun_a_b_bool_fun_fun_fun_fun$ )
(declare-fun vimage2p$l (C_g_fun$ )D_i_fun_g_i_bool_fun_fun_c_d_bool_fun_fun_fun_fun$ )
(declare-fun case_prod$a (G_i_bool_fun_fun$ )G_i_prod_bool_fun$ )
(declare-fun case_prod$b (A_b_bool_fun_fun$ )A_b_prod_bool_fun$ )
(declare-fun case_prod$c (C_d_bool_fun_fun$ )C_d_prod_bool_fun$ )
(declare-fun conversep$a (G_d_bool_fun_fun$ )D_g_bool_fun_fun$ )
(declare-fun conversep$b (A_h_bool_fun_fun$ )H_a_bool_fun_fun$ )
(declare-fun conversep$c (C_i_bool_fun_fun$ )I_c_bool_fun_fun$ )
(declare-fun conversep$d (B_f_bool_fun_fun$ )F_b_bool_fun_fun$ )
(declare-fun conversep$e (D_g_bool_fun_fun$ )G_d_bool_fun_fun$ )
(declare-fun conversep$f (H_a_bool_fun_fun$ )A_h_bool_fun_fun$ )
(declare-fun conversep$g (I_c_bool_fun_fun$ )C_i_bool_fun_fun$ )
(declare-fun conversep$h (A_b_bool_fun_fun$ )B_a_bool_fun_fun$ )
(declare-fun conversep$i (C_d_bool_fun_fun$ )D_c_bool_fun_fun$ )
(declare-fun conversep$j (F_h_bool_fun_fun$ )H_f_bool_fun_fun$ )
(declare-fun conversep$k (G_i_bool_fun_fun$ )I_g_bool_fun_fun$ )
(declare-fun conversep$l (B_a_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun conversep$m (D_c_bool_fun_fun$ )C_d_bool_fun_fun$ )
(declare-fun conversep$n (H_f_bool_fun_fun$ )F_h_bool_fun_fun$ )
(declare-fun conversep$o (I_g_bool_fun_fun$ )G_i_bool_fun_fun$ )
(declare-fun conversep$p (E_f_g_sp_mu_e_b_d_sp_mu_bool_fun_fun$ )E_b_d_sp_mu_e_f_g_sp_mu_bool_fun_fun$ )
(declare-fun conversep$q (E_a_c_sp_mu_e_h_i_sp_mu_bool_fun_fun$ )E_h_i_sp_mu_e_a_c_sp_mu_bool_fun_fun$ )
(declare-fun conversep$r (E_b_d_sp_mu_e_f_g_sp_mu_bool_fun_fun$ )E_f_g_sp_mu_e_b_d_sp_mu_bool_fun_fun$ )
(declare-fun conversep$s (E_h_i_sp_mu_e_a_c_sp_mu_bool_fun_fun$ )E_a_c_sp_mu_e_h_i_sp_mu_bool_fun_fun$ )
(declare-fun conversep$t (E_a_c_sp_mu_e_b_d_sp_mu_bool_fun_fun$ )E_b_d_sp_mu_e_a_c_sp_mu_bool_fun_fun$ )
(declare-fun conversep$u (E_f_g_sp_mu_e_h_i_sp_mu_bool_fun_fun$ )E_h_i_sp_mu_e_f_g_sp_mu_bool_fun_fun$ )
(declare-fun conversep$v (E_b_d_sp_mu_e_a_c_sp_mu_bool_fun_fun$ )E_a_c_sp_mu_e_b_d_sp_mu_bool_fun_fun$ )
(declare-fun conversep$w (E_h_i_sp_mu_e_f_g_sp_mu_bool_fun_fun$ )E_f_g_sp_mu_e_h_i_sp_mu_bool_fun_fun$ )
(declare-fun map_sp_mu$a (H_b_fun$ I_d_fun$ )E_h_i_sp_mu_e_b_d_sp_mu_fun$ )
(declare-fun map_sp_mu$b (H_f_fun$ I_g_fun$ E_h_i_sp_mu$ )E_f_g_sp_mu$ )
(declare-fun map_sp_mu$c (H_a_fun$ I_c_fun$ E_h_i_sp_mu$ )E_a_c_sp_mu$ )
(declare-fun map_sp_mu$d (B_h_fun$ D_i_fun$ )E_b_d_sp_mu_e_h_i_sp_mu_fun$ )
(declare-fun map_sp_mu$e (B_f_fun$ D_g_fun$ E_b_d_sp_mu$ )E_f_g_sp_mu$ )
(declare-fun map_sp_mu$f (B_a_fun$ D_c_fun$ )E_b_d_sp_mu_e_a_c_sp_mu_fun$ )
(declare-fun map_sp_mu$g (F_h_fun$ G_i_fun$ )E_f_g_sp_mu_e_h_i_sp_mu_fun$ )
(declare-fun map_sp_mu$h (F_b_fun$ G_d_fun$ )E_f_g_sp_mu_e_b_d_sp_mu_fun$ )
(declare-fun map_sp_mu$i (A_h_fun$ C_i_fun$ )E_a_c_sp_mu_e_h_i_sp_mu_fun$ )
(declare-fun map_sp_mu$j (H_h_fun$ I_i_fun$ )E_h_i_sp_mu_e_h_i_sp_mu_fun$ )
(declare-fun map_sp_mu$k (F_f_fun$ G_g_fun$ )E_f_g_sp_mu_e_f_g_sp_mu_fun$ )
(declare-fun map_sp_mu$l (B_b_fun$ D_d_fun$ )E_b_d_sp_mu_e_b_d_sp_mu_fun$ )
(declare-fun map_sp_mu$m (A_a_fun$ C_c_fun$ )E_a_c_sp_mu_e_a_c_sp_mu_fun$ )
(declare-fun map_sp_mu$n (A_nat_fun$ C_c_fun$ E_a_c_sp_mu$ )E_nat_c_sp_mu$ )
(declare-fun map_sp_mu$o (F_nat_fun$ G_c_fun$ E_f_g_sp_mu$ )E_nat_c_sp_mu$ )
(declare-fun map_sp_mu$p (A_f_fun$ C_g_fun$ E_a_c_sp_mu$ )E_f_g_sp_mu$ )
(declare-fun map_sp_mu$q (A_b_prod_a_fun$ C_d_prod_c_fun$ E_a_b_prod_c_d_prod_sp_mu$ )E_a_c_sp_mu$ )
(declare-fun map_sp_mu$r (A_b_fun$ C_d_fun$ )E_a_c_sp_mu_e_b_d_sp_mu_fun$ )
(declare-fun map_sp_mu$s (A_b_prod_b_fun$ C_d_prod_d_fun$ E_a_b_prod_c_d_prod_sp_mu$ )E_b_d_sp_mu$ )
(declare-fun map_sp_mu$t (F_h_prod_f_fun$ G_i_prod_g_fun$ E_f_h_prod_g_i_prod_sp_mu$ )E_f_g_sp_mu$ )
(declare-fun map_sp_mu$u (F_h_prod_h_fun$ G_i_prod_i_fun$ E_f_h_prod_g_i_prod_sp_mu$ )E_h_i_sp_mu$ )
(declare-fun pred_sp_mu$ (H_bool_fun$ I_bool_fun$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$a (F_h_bool_fun_fun$ G_i_bool_fun_fun$ )E_f_g_sp_mu_e_h_i_sp_mu_bool_fun_fun$ )
(declare-fun rel_sp_mu$b (H_h_bool_fun_fun$ I_i_bool_fun_fun$ E_h_i_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$c (H_b_bool_fun_fun$ I_d_bool_fun_fun$ E_h_i_sp_mu$ E_b_d_sp_mu$ )Bool )
(declare-fun rel_sp_mu$d (H_a_bool_fun_fun$ I_c_bool_fun_fun$ )E_h_i_sp_mu_e_a_c_sp_mu_bool_fun_fun$ )
(declare-fun rel_sp_mu$e (B_h_bool_fun_fun$ D_i_bool_fun_fun$ E_b_d_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$f (B_b_bool_fun_fun$ D_d_bool_fun_fun$ E_b_d_sp_mu$ E_b_d_sp_mu$ )Bool )
(declare-fun rel_sp_mu$g (B_f_bool_fun_fun$ D_g_bool_fun_fun$ )E_b_d_sp_mu_e_f_g_sp_mu_bool_fun_fun$ )
(declare-fun rel_sp_mu$h (F_f_bool_fun_fun$ G_g_bool_fun_fun$ E_f_g_sp_mu$ E_f_g_sp_mu$ )Bool )
(declare-fun rel_sp_mu$i (F_a_bool_fun_fun$ G_c_bool_fun_fun$ E_f_g_sp_mu$ E_a_c_sp_mu$ )Bool )
(declare-fun rel_sp_mu$j (F_b_bool_fun_fun$ G_d_bool_fun_fun$ )E_f_g_sp_mu_e_b_d_sp_mu_bool_fun_fun$ )
(declare-fun rel_sp_mu$k (A_h_bool_fun_fun$ C_i_bool_fun_fun$ )E_a_c_sp_mu_e_h_i_sp_mu_bool_fun_fun$ )
(declare-fun rel_sp_mu$l (B_a_bool_fun_fun$ D_c_bool_fun_fun$ )E_b_d_sp_mu_e_a_c_sp_mu_bool_fun_fun$ )
(declare-fun rel_sp_mu$m (H_f_bool_fun_fun$ I_g_bool_fun_fun$ )E_h_i_sp_mu_e_f_g_sp_mu_bool_fun_fun$ )
(declare-fun rel_sp_mu$n (F_h_bool_fun_fun$ F_i_bool_fun_fun$ E_f_f_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$o (F_h_bool_fun_fun$ D_i_bool_fun_fun$ E_f_d_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$p (F_h_bool_fun_fun$ C_i_bool_fun_fun$ E_f_c_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$q (F_h_bool_fun_fun$ B_i_bool_fun_fun$ E_f_b_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$r (F_h_bool_fun_fun$ A_i_bool_fun_fun$ E_f_a_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$s (D_h_bool_fun_fun$ F_i_bool_fun_fun$ E_d_f_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$t (D_h_bool_fun_fun$ D_i_bool_fun_fun$ E_d_d_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun rel_sp_mu$u (D_h_bool_fun_fun$ C_i_bool_fun_fun$ E_d_c_sp_mu$ E_h_i_sp_mu$ )Bool )
(declare-fun set1_sp_mu$ (E_f_h_prod_g_i_prod_sp_mu$ )F_h_prod_set$ )
(declare-fun set2_sp_mu$ (E_f_h_prod_g_i_prod_sp_mu$ )G_i_prod_set$ )
(declare-fun size_sp_mu$ (E_nat_fun$ A_nat_fun$ C_nat_fun$ )E_a_c_sp_mu_nat_fun$ )
(declare-fun pred_sp_mu$a (B_bool_fun$ D_bool_fun$ E_b_d_sp_mu$ )Bool )
(declare-fun pred_sp_mu$b (F_bool_fun$ G_bool_fun$ E_f_g_sp_mu$ )Bool )
(declare-fun pred_sp_mu$c (A_bool_fun$ C_bool_fun$ E_a_c_sp_mu$ )Bool )
(declare-fun set1_sp_mu$a (E_a_b_prod_c_d_prod_sp_mu$ )A_b_prod_set$ )
(declare-fun set1_sp_mu$b (E_h_i_sp_mu$ )H_set$ )
(declare-fun set1_sp_mu$c (E_f_g_sp_mu$ )F_set$ )
(declare-fun set1_sp_mu$d (E_b_d_sp_mu$ )B_set$ )
(declare-fun set1_sp_mu$e (E_a_c_sp_mu$ )A_set$ )
(declare-fun set1_sp_mu$f (E_f_f_sp_mu$ )F_set$ )
(declare-fun set1_sp_mu$g (E_f_d_sp_mu$ )F_set$ )
(declare-fun set1_sp_mu$h (E_f_c_sp_mu$ )F_set$ )
(declare-fun set1_sp_mu$i (E_f_b_sp_mu$ )F_set$ )
(declare-fun set1_sp_mu$j (E_f_a_sp_mu$ )F_set$ )
(declare-fun set1_sp_mu$k (E_d_f_sp_mu$ )D_set$ )
(declare-fun set1_sp_mu$l (E_d_d_sp_mu$ )D_set$ )
(declare-fun set1_sp_mu$m (E_d_c_sp_mu$ )D_set$ )
(declare-fun set2_sp_mu$a (E_a_b_prod_c_d_prod_sp_mu$ )C_d_prod_set$ )
(declare-fun set2_sp_mu$b (E_h_i_sp_mu$ )I_set$ )
(declare-fun set2_sp_mu$c (E_f_g_sp_mu$ )G_set$ )
(declare-fun set2_sp_mu$d (E_b_d_sp_mu$ )D_set$ )
(declare-fun set2_sp_mu$e (E_a_c_sp_mu$ )C_set$ )
(declare-fun set2_sp_mu$f (E_f_f_sp_mu$ )F_set$ )
(declare-fun set2_sp_mu$g (E_f_d_sp_mu$ )D_set$ )
(declare-fun set2_sp_mu$h (E_f_c_sp_mu$ )C_set$ )
(declare-fun set2_sp_mu$i (E_f_b_sp_mu$ )B_set$ )
(declare-fun set2_sp_mu$j (E_f_a_sp_mu$ )A_set$ )
(declare-fun set2_sp_mu$k (E_d_f_sp_mu$ )F_set$ )
(declare-fun set2_sp_mu$l (E_d_d_sp_mu$ )D_set$ )
(declare-fun set2_sp_mu$m (E_d_c_sp_mu$ )C_set$ )
(declare-fun size_sp_mu$a (E_nat_fun$ F_nat_fun$ G_nat_fun$ )E_f_g_sp_mu_nat_fun$ )
(declare-fun size_sp_mu$b (E_nat_fun$ B_nat_fun$ D_nat_fun$ )E_b_d_sp_mu_nat_fun$ )
(declare-fun size_sp_mu$c (E_nat_fun$ H_nat_fun$ I_nat_fun$ )E_h_i_sp_mu_nat_fun$ )
(assert (! (forall ((?v0 G_i_prod$ ))(! (= (fun_app$ uwt$ ?v0 )(snd$b ?v0 )):pattern ((fun_app$ uwt$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 F_h_prod$ ))(! (= (fun_app$a uws$ ?v0 )(snd$c ?v0 )):pattern ((fun_app$a uws$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$b uwo$ ?v0 )(snd$a ?v0 )):pattern ((fun_app$b uwo$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$c uwn$ ?v0 )(snd$ ?v0 )):pattern ((fun_app$c uwn$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 G_i_prod$ ))(! (= (fun_app$d uwr$ ?v0 )(fst$b ?v0 )):pattern ((fun_app$d uwr$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 F_h_prod$ ))(! (= (fun_app$e uwq$ ?v0 )(fst$c ?v0 )):pattern ((fun_app$e uwq$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$f uwm$ ?v0 )(fst$a ?v0 )):pattern ((fun_app$f uwm$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$g uwl$ ?v0 )(fst$ ?v0 )):pattern ((fun_app$g uwl$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 E_a_b_prod_c_d_prod_sp_mu_set$ )(?v1 E_a_b_prod_c_d_prod_sp_mu$ ))(! (= (fun_app$h (uwa$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$h (uwa$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 G_i_prod_set$ )(?v1 G_i_prod$ ))(! (= (fun_app$i (uwb$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$i (uwb$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 F_h_prod_set$ )(?v1 F_h_prod$ ))(! (= (fun_app$j (uwc$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$j (uwc$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod$ ))(! (= (fun_app$k (uwd$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$k (uwd$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod$ ))(! (= (fun_app$l (uwe$ ?v0 )?v1 )(member$d ?v1 ?v0 )):pattern ((fun_app$l (uwe$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 F_set$ )(?v1 F$ ))(! (= (fun_app$m (uvv$ ?v0 )?v1 )(member$e ?v1 ?v0 )):pattern ((fun_app$m (uvv$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 D_set$ )(?v1 D$ ))(! (= (fun_app$n (uvw$ ?v0 )?v1 )(member$f ?v1 ?v0 )):pattern ((fun_app$n (uvw$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C$ ))(! (= (fun_app$o (uvx$ ?v0 )?v1 )(member$g ?v1 ?v0 )):pattern ((fun_app$o (uvx$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B$ ))(! (= (fun_app$p (uvy$ ?v0 )?v1 )(member$h ?v1 ?v0 )):pattern ((fun_app$p (uvy$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$q (uvz$ ?v0 )?v1 )(member$i ?v1 ?v0 )):pattern ((fun_app$q (uvz$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 E_f_h_prod_g_i_prod_sp_mu$ ))(! (= (fun_app$r (uwp$ ?v0 ?v1 )?v2 )(and (less_eq$ (set1_sp_mu$ ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$a (set2_sp_mu$ ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$r (uwp$ ?v0 ?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 E_a_b_prod_c_d_prod_sp_mu$ ))(! (= (fun_app$h (fun_app$s (uwk$ ?v0 )?v1 )?v2 )(and (less_eq$b (set1_sp_mu$a ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$c (set2_sp_mu$a ?v2 )(collect$c (case_prod$c ?v1 ))))):pattern ((fun_app$h (fun_app$s (uwk$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 I_g_bool_fun_fun$ )(?v1 I_i_fun$ )(?v2 I$ ))(! (= (fun_app$t (fun_app$u (uum$ ?v0 )?v1 )?v2 )(fun_app$t ?v0 (fun_app$v ?v1 ?v2 ))):pattern ((fun_app$t (fun_app$u (uum$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 H_f_bool_fun_fun$ )(?v1 H_h_fun$ )(?v2 H$ ))(! (= (fun_app$w (fun_app$x (uul$ ?v0 )?v1 )?v2 )(fun_app$w ?v0 (fun_app$y ?v1 ?v2 ))):pattern ((fun_app$w (fun_app$x (uul$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 G_i_bool_fun_fun$ )(?v1 G_g_fun$ )(?v2 G$ ))(! (= (fun_app$z (fun_app$aa (uug$ ?v0 )?v1 )?v2 )(fun_app$z ?v0 (fun_app$ab ?v1 ?v2 ))):pattern ((fun_app$z (fun_app$aa (uug$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 G_i_bool_fun_fun$ )(?v1 C_g_fun$ )(?v2 C$ ))(! (= (fun_app$ac (fun_app$ad (uuk$ ?v0 )?v1 )?v2 )(fun_app$z ?v0 (fun_app$ae ?v1 ?v2 ))):pattern ((fun_app$ac (fun_app$ad (uuk$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 G_d_bool_fun_fun$ )(?v1 C_g_fun$ )(?v2 C$ ))(! (= (fun_app$af (fun_app$ag (uus$ ?v0 )?v1 )?v2 )(fun_app$ah ?v0 (fun_app$ae ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$ag (uus$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 F_f_fun$ )(?v2 F$ ))(! (= (fun_app$ai (fun_app$aj (uuf$ ?v0 )?v1 )?v2 )(fun_app$ai ?v0 (fun_app$ak ?v1 ?v2 ))):pattern ((fun_app$ai (fun_app$aj (uuf$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 A_f_fun$ )(?v2 A$ ))(! (= (fun_app$al (fun_app$am (uuj$ ?v0 )?v1 )?v2 )(fun_app$ai ?v0 (fun_app$an ?v1 ?v2 ))):pattern ((fun_app$al (fun_app$am (uuj$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 A_f_fun$ )(?v2 A$ ))(! (= (fun_app$ao (fun_app$ap (uur$ ?v0 )?v1 )?v2 )(fun_app$aq ?v0 (fun_app$an ?v1 ?v2 ))):pattern ((fun_app$ao (fun_app$ap (uur$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 D_g_bool_fun_fun$ )(?v1 I_d_fun$ )(?v2 I$ ))(! (= (fun_app$t (fun_app$ar (uui$ ?v0 )?v1 )?v2 )(fun_app$as ?v0 (fun_app$at ?v1 ?v2 ))):pattern ((fun_app$t (fun_app$ar (uui$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 I_d_fun$ )(?v2 I$ ))(! (= (fun_app$au (fun_app$av (uuo$ ?v0 )?v1 )?v2 )(fun_app$aw ?v0 (fun_app$at ?v1 ?v2 ))):pattern ((fun_app$au (fun_app$av (uuo$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (fun_app$aw (fun_app$ax (uuq$ ?v0 )?v1 )?v2 )(fun_app$aw ?v0 (fun_app$ay ?v1 ?v2 ))):pattern ((fun_app$aw (fun_app$ax (uuq$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 C_i_bool_fun_fun$ )(?v1 G_c_fun$ )(?v2 G$ ))(! (= (fun_app$z (fun_app$az (uua$ ?v0 )?v1 )?v2 )(fun_app$ac ?v0 (fun_app$ba ?v1 ?v2 ))):pattern ((fun_app$z (fun_app$az (uua$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 G_c_fun$ )(?v2 G$ ))(! (= (fun_app$ah (fun_app$bb (uuc$ ?v0 )?v1 )?v2 )(fun_app$af ?v0 (fun_app$ba ?v1 ?v2 ))):pattern ((fun_app$ah (fun_app$bb (uuc$ ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$af (fun_app$bc (uue$ ?v0 )?v1 )?v2 )(fun_app$af ?v0 (fun_app$bd ?v1 ?v2 ))):pattern ((fun_app$af (fun_app$bc (uue$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 B_f_bool_fun_fun$ )(?v1 H_b_fun$ )(?v2 H$ ))(! (= (fun_app$w (fun_app$be (uuh$ ?v0 )?v1 )?v2 )(fun_app$bf ?v0 (fun_app$bg ?v1 ?v2 ))):pattern ((fun_app$w (fun_app$be (uuh$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 H_b_fun$ )(?v2 H$ ))(! (= (fun_app$bh (fun_app$bi (uun$ ?v0 )?v1 )?v2 )(fun_app$bj ?v0 (fun_app$bg ?v1 ?v2 ))):pattern ((fun_app$bh (fun_app$bi (uun$ ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$bj (fun_app$bk (uup$ ?v0 )?v1 )?v2 )(fun_app$bj ?v0 (fun_app$bl ?v1 ?v2 ))):pattern ((fun_app$bj (fun_app$bk (uup$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_h_bool_fun_fun$ )(?v1 F_a_fun$ )(?v2 F$ ))(! (= (fun_app$ai (fun_app$bm (uu$ ?v0 )?v1 )?v2 )(fun_app$al ?v0 (fun_app$bn ?v1 ?v2 ))):pattern ((fun_app$ai (fun_app$bm (uu$ ?v0 )?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 F_a_fun$ )(?v2 F$ ))(! (= (fun_app$aq (fun_app$bo (uub$ ?v0 )?v1 )?v2 )(fun_app$ao ?v0 (fun_app$bn ?v1 ?v2 ))):pattern ((fun_app$aq (fun_app$bo (uub$ ?v0 )?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$ao (fun_app$bp (uud$ ?v0 )?v1 )?v2 )(fun_app$ao ?v0 (fun_app$bq ?v1 ?v2 ))):pattern ((fun_app$ao (fun_app$bp (uud$ ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 I_g_bool_fun_fun$ )(?v1 G_g_fun$ )(?v2 I$ )(?v3 G$ ))(! (= (fun_app$br (fun_app$t (fun_app$bs (uvg$ ?v0 )?v1 )?v2 )?v3 )(fun_app$br (fun_app$t ?v0 ?v2 )(fun_app$ab ?v1 ?v3 ))):pattern ((fun_app$br (fun_app$t (fun_app$bs (uvg$ ?v0 )?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 I_c_bool_fun_fun$ )(?v1 G_c_fun$ )(?v2 I$ )(?v3 G$ ))(! (= (fun_app$br (fun_app$t (fun_app$bt (uvc$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$au ?v0 ?v2 )(fun_app$ba ?v1 ?v3 ))):pattern ((fun_app$br (fun_app$t (fun_app$bt (uvc$ ?v0 )?v1 )?v2 )?v3 )))):named a41 ))
(assert (! (forall ((?v0 H_f_bool_fun_fun$ )(?v1 F_f_fun$ )(?v2 H$ )(?v3 F$ ))(! (= (fun_app$m (fun_app$w (fun_app$bu (uvf$ ?v0 )?v1 )?v2 )?v3 )(fun_app$m (fun_app$w ?v0 ?v2 )(fun_app$ak ?v1 ?v3 ))):pattern ((fun_app$m (fun_app$w (fun_app$bu (uvf$ ?v0 )?v1 )?v2 )?v3 )))):named a42 ))
(assert (! (forall ((?v0 H_a_bool_fun_fun$ )(?v1 F_a_fun$ )(?v2 H$ )(?v3 F$ ))(! (= (fun_app$m (fun_app$w (fun_app$bv (uvb$ ?v0 )?v1 )?v2 )?v3 )(fun_app$q (fun_app$bh ?v0 ?v2 )(fun_app$bn ?v1 ?v3 ))):pattern ((fun_app$m (fun_app$w (fun_app$bv (uvb$ ?v0 )?v1 )?v2 )?v3 )))):named a43 ))
(assert (! (forall ((?v0 G_i_bool_fun_fun$ )(?v1 I_i_fun$ )(?v2 G$ )(?v3 I$ ))(! (= (fun_app$bw (fun_app$z (fun_app$bx (uva$ ?v0 )?v1 )?v2 )?v3 )(fun_app$bw (fun_app$z ?v0 ?v2 )(fun_app$v ?v1 ?v3 ))):pattern ((fun_app$bw (fun_app$z (fun_app$bx (uva$ ?v0 )?v1 )?v2 )?v3 )))):named a44 ))
(assert (! (forall ((?v0 G_i_bool_fun_fun$ )(?v1 D_i_fun$ )(?v2 G$ )(?v3 D$ ))(! (= (fun_app$n (fun_app$ah (fun_app$by (uve$ ?v0 )?v1 )?v2 )?v3 )(fun_app$bw (fun_app$z ?v0 ?v2 )(fun_app$bz ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$ah (fun_app$by (uve$ ?v0 )?v1 )?v2 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 G_d_bool_fun_fun$ )(?v1 I_d_fun$ )(?v2 G$ )(?v3 I$ ))(! (= (fun_app$bw (fun_app$z (fun_app$ca (uuu$ ?v0 )?v1 )?v2 )?v3 )(fun_app$n (fun_app$ah ?v0 ?v2 )(fun_app$at ?v1 ?v3 ))):pattern ((fun_app$bw (fun_app$z (fun_app$ca (uuu$ ?v0 )?v1 )?v2 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 G_d_bool_fun_fun$ )(?v1 D_d_fun$ )(?v2 G$ )(?v3 D$ ))(! (= (fun_app$n (fun_app$ah (fun_app$cb (uvm$ ?v0 )?v1 )?v2 )?v3 )(fun_app$n (fun_app$ah ?v0 ?v2 )(fun_app$ay ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$ah (fun_app$cb (uvm$ ?v0 )?v1 )?v2 )?v3 )))):named a47 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 H_h_fun$ )(?v2 F$ )(?v3 H$ ))(! (= (fun_app$cc (fun_app$ai (fun_app$cd (uuz$ ?v0 )?v1 )?v2 )?v3 )(fun_app$cc (fun_app$ai ?v0 ?v2 )(fun_app$y ?v1 ?v3 ))):pattern ((fun_app$cc (fun_app$ai (fun_app$cd (uuz$ ?v0 )?v1 )?v2 )?v3 )))):named a48 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 B_h_fun$ )(?v2 F$ )(?v3 B$ ))(! (= (fun_app$p (fun_app$aq (fun_app$ce (uvd$ ?v0 )?v1 )?v2 )?v3 )(fun_app$cc (fun_app$ai ?v0 ?v2 )(fun_app$cf ?v1 ?v3 ))):pattern ((fun_app$p (fun_app$aq (fun_app$ce (uvd$ ?v0 )?v1 )?v2 )?v3 )))):named a49 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 H_b_fun$ )(?v2 F$ )(?v3 H$ ))(! (= (fun_app$cc (fun_app$ai (fun_app$cg (uut$ ?v0 )?v1 )?v2 )?v3 )(fun_app$p (fun_app$aq ?v0 ?v2 )(fun_app$bg ?v1 ?v3 ))):pattern ((fun_app$cc (fun_app$ai (fun_app$cg (uut$ ?v0 )?v1 )?v2 )?v3 )))):named a50 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 F$ )(?v3 B$ ))(! (= (fun_app$p (fun_app$aq (fun_app$ch (uvl$ ?v0 )?v1 )?v2 )?v3 )(fun_app$p (fun_app$aq ?v0 ?v2 )(fun_app$bl ?v1 ?v3 ))):pattern ((fun_app$p (fun_app$aq (fun_app$ch (uvl$ ?v0 )?v1 )?v2 )?v3 )))):named a51 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 G_c_fun$ )(?v2 D$ )(?v3 G$ ))(! (= (fun_app$br (fun_app$as (fun_app$ci (uvi$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$aw ?v0 ?v2 )(fun_app$ba ?v1 ?v3 ))):pattern ((fun_app$br (fun_app$as (fun_app$ci (uvi$ ?v0 )?v1 )?v2 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 D$ )(?v3 C$ ))(! (= (fun_app$o (fun_app$aw (fun_app$cj (uvk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$o (fun_app$aw ?v0 ?v2 )(fun_app$bd ?v1 ?v3 ))):pattern ((fun_app$o (fun_app$aw (fun_app$cj (uvk$ ?v0 )?v1 )?v2 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 I_d_fun$ )(?v2 C$ )(?v3 I$ ))(! (= (fun_app$bw (fun_app$ac (fun_app$ck (uuw$ ?v0 )?v1 )?v2 )?v3 )(fun_app$n (fun_app$af ?v0 ?v2 )(fun_app$at ?v1 ?v3 ))):pattern ((fun_app$bw (fun_app$ac (fun_app$ck (uuw$ ?v0 )?v1 )?v2 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D_d_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$n (fun_app$af (fun_app$cl (uuy$ ?v0 )?v1 )?v2 )?v3 )(fun_app$n (fun_app$af ?v0 ?v2 )(fun_app$ay ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$af (fun_app$cl (uuy$ ?v0 )?v1 )?v2 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 F_a_fun$ )(?v2 B$ )(?v3 F$ ))(! (= (fun_app$m (fun_app$bf (fun_app$cm (uvh$ ?v0 )?v1 )?v2 )?v3 )(fun_app$q (fun_app$bj ?v0 ?v2 )(fun_app$bn ?v1 ?v3 ))):pattern ((fun_app$m (fun_app$bf (fun_app$cm (uvh$ ?v0 )?v1 )?v2 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$q (fun_app$bj (fun_app$cn (uvj$ ?v0 )?v1 )?v2 )?v3 )(fun_app$q (fun_app$bj ?v0 ?v2 )(fun_app$bq ?v1 ?v3 ))):pattern ((fun_app$q (fun_app$bj (fun_app$cn (uvj$ ?v0 )?v1 )?v2 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 H_b_fun$ )(?v2 A$ )(?v3 H$ ))(! (= (fun_app$cc (fun_app$al (fun_app$co (uuv$ ?v0 )?v1 )?v2 )?v3 )(fun_app$p (fun_app$ao ?v0 ?v2 )(fun_app$bg ?v1 ?v3 ))):pattern ((fun_app$cc (fun_app$al (fun_app$co (uuv$ ?v0 )?v1 )?v2 )?v3 )))):named a58 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$p (fun_app$ao (fun_app$cp (uux$ ?v0 )?v1 )?v2 )?v3 )(fun_app$p (fun_app$ao ?v0 ?v2 )(fun_app$bl ?v1 ?v3 ))):pattern ((fun_app$p (fun_app$ao (fun_app$cp (uux$ ?v0 )?v1 )?v2 )?v3 )))):named a59 ))
(assert (! (forall ((?v0 Nat$ )(?v1 B$ ))(! (= (fun_app$cq (uwg$ ?v0 )?v1 )?v0 ):pattern ((fun_app$cq (uwg$ ?v0 )?v1 )))):named a60 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ ))(! (= (fun_app$cr (uwi$ ?v0 )?v1 )?v0 ):pattern ((fun_app$cr (uwi$ ?v0 )?v1 )))):named a61 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$bd (uwf$ ?v0 )?v1 )?v0 ):pattern ((fun_app$bd (uwf$ ?v0 )?v1 )))):named a62 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$bl (uwh$ ?v0 )?v1 )?v0 ):pattern ((fun_app$bl (uwh$ ?v0 )?v1 )))):named a63 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$bq (uwj$ ?v0 )?v1 )?v0 ):pattern ((fun_app$bq (uwj$ ?v0 )?v1 )))):named a64 ))
(assert (! (forall ((?v0 I$ ))(! (= (fun_app$v uvo$ ?v0 )?v0 ):pattern ((fun_app$v uvo$ ?v0 )))):named a65 ))
(assert (! (forall ((?v0 H$ ))(! (= (fun_app$y uvn$ ?v0 )?v0 ):pattern ((fun_app$y uvn$ ?v0 )))):named a66 ))
(assert (! (forall ((?v0 G$ ))(! (= (fun_app$ab uvq$ ?v0 )?v0 ):pattern ((fun_app$ab uvq$ ?v0 )))):named a67 ))
(assert (! (forall ((?v0 F$ ))(! (= (fun_app$ak uvp$ ?v0 )?v0 ):pattern ((fun_app$ak uvp$ ?v0 )))):named a68 ))
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$ay uvs$ ?v0 )?v0 ):pattern ((fun_app$ay uvs$ ?v0 )))):named a69 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$bd uvu$ ?v0 )?v0 ):pattern ((fun_app$bd uvu$ ?v0 )))):named a70 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$bl uvr$ ?v0 )?v0 ):pattern ((fun_app$bl uvr$ ?v0 )))):named a71 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$bq uvt$ ?v0 )?v0 ):pattern ((fun_app$bq uvt$ ?v0 )))):named a72 ))
(assert (! (not (= (fun_app$cs (fun_app$ct (rel_sp_mu$ r1$ r2$ )(fun_app$cu (map_sp_mu$ f1$ f2$ )sp$ ))(fun_app$cv (map_sp_mu$a g1$ g2$ )sp$a ))(fun_app$cw (fun_app$cx (rel_sp_mu$a (fun_app$cy (fun_app$cz (vimage2p$ f1$ )g1$ )r1$ )(fun_app$da (fun_app$db (vimage2p$a f2$ )g2$ )r2$ ))sp$ )sp$a ))):named a73 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_c_fun$ )(?v3 D_d_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$dc (fun_app$dd (vimage2p$b ?v2 )?v3 )?v0 )(fun_app$dc (fun_app$dd (vimage2p$b ?v2 )?v3 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 G_i_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 G_g_fun$ )(?v3 I_i_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$de (fun_app$df (vimage2p$c ?v2 )?v3 )?v0 )(fun_app$de (fun_app$df (vimage2p$c ?v2 )?v3 )?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 B_b_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$dg (fun_app$dh (vimage2p$d ?v2 )?v3 )?v0 )(fun_app$dg (fun_app$dh (vimage2p$d ?v2 )?v3 )?v1 )))):named a76 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 F_h_bool_fun_fun$ )(?v2 F_f_fun$ )(?v3 H_h_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$di (fun_app$dj (vimage2p$e ?v2 )?v3 )?v0 )(fun_app$di (fun_app$dj (vimage2p$e ?v2 )?v3 )?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 F_a_fun$ )(?v3 H_b_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$cy (fun_app$cz (vimage2p$ ?v2 )?v3 )?v0 )(fun_app$cy (fun_app$cz (vimage2p$ ?v2 )?v3 )?v1 )))):named a78 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 G_c_fun$ )(?v3 I_d_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$da (fun_app$db (vimage2p$a ?v2 )?v3 )?v0 )(fun_app$da (fun_app$db (vimage2p$a ?v2 )?v3 )?v1 )))):named a79 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 G_c_fun$ )(?v2 F$ )(?v3 G$ ))(! (= (fun_app$cu (map_sp_mu$ ?v0 ?v1 )(put$ ?v2 ?v3 ))(put$a (fun_app$bn ?v0 ?v2 )(fun_app$ba ?v1 ?v3 ))):pattern ((fun_app$cu (map_sp_mu$ ?v0 ?v1 )(put$ ?v2 ?v3 ))))):named a80 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 I_d_fun$ )(?v2 H$ )(?v3 I$ ))(! (= (fun_app$cv (map_sp_mu$a ?v0 ?v1 )(put$b ?v2 ?v3 ))(put$c (fun_app$bg ?v0 ?v2 )(fun_app$at ?v1 ?v3 ))):pattern ((fun_app$cv (map_sp_mu$a ?v0 ?v1 )(put$b ?v2 ?v3 ))))):named a81 ))
(assert (! (forall ((?v0 H_f_fun$ )(?v1 I_g_fun$ )(?v2 H$ )(?v3 I$ ))(! (= (map_sp_mu$b ?v0 ?v1 (put$b ?v2 ?v3 ))(put$ (fun_app$dk ?v0 ?v2 )(fun_app$dl ?v1 ?v3 ))):pattern ((map_sp_mu$b ?v0 ?v1 (put$b ?v2 ?v3 ))))):named a82 ))
(assert (! (forall ((?v0 H_a_fun$ )(?v1 I_c_fun$ )(?v2 H$ )(?v3 I$ ))(! (= (map_sp_mu$c ?v0 ?v1 (put$b ?v2 ?v3 ))(put$a (fun_app$dm ?v0 ?v2 )(fun_app$dn ?v1 ?v3 ))):pattern ((map_sp_mu$c ?v0 ?v1 (put$b ?v2 ?v3 ))))):named a83 ))
(assert (! (forall ((?v0 B_h_fun$ )(?v1 D_i_fun$ )(?v2 B$ )(?v3 D$ ))(! (= (fun_app$do (map_sp_mu$d ?v0 ?v1 )(put$c ?v2 ?v3 ))(put$b (fun_app$cf ?v0 ?v2 )(fun_app$bz ?v1 ?v3 ))):pattern ((fun_app$do (map_sp_mu$d ?v0 ?v1 )(put$c ?v2 ?v3 ))))):named a84 ))
(assert (! (forall ((?v0 B_f_fun$ )(?v1 D_g_fun$ )(?v2 B$ )(?v3 D$ ))(! (= (map_sp_mu$e ?v0 ?v1 (put$c ?v2 ?v3 ))(put$ (fun_app$dp ?v0 ?v2 )(fun_app$dq ?v1 ?v3 ))):pattern ((map_sp_mu$e ?v0 ?v1 (put$c ?v2 ?v3 ))))):named a85 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 B$ )(?v3 D$ ))(! (= (fun_app$dr (map_sp_mu$f ?v0 ?v1 )(put$c ?v2 ?v3 ))(put$a (fun_app$ds ?v0 ?v2 )(fun_app$dt ?v1 ?v3 ))):pattern ((fun_app$dr (map_sp_mu$f ?v0 ?v1 )(put$c ?v2 ?v3 ))))):named a86 ))
(assert (! (forall ((?v0 F_h_fun$ )(?v1 G_i_fun$ )(?v2 F$ )(?v3 G$ ))(! (= (fun_app$du (map_sp_mu$g ?v0 ?v1 )(put$ ?v2 ?v3 ))(put$b (fun_app$dv ?v0 ?v2 )(fun_app$dw ?v1 ?v3 ))):pattern ((fun_app$du (map_sp_mu$g ?v0 ?v1 )(put$ ?v2 ?v3 ))))):named a87 ))
(assert (! (forall ((?v0 F_b_fun$ )(?v1 G_d_fun$ )(?v2 F$ )(?v3 G$ ))(! (= (fun_app$dx (map_sp_mu$h ?v0 ?v1 )(put$ ?v2 ?v3 ))(put$c (fun_app$dy ?v0 ?v2 )(fun_app$dz ?v1 ?v3 ))):pattern ((fun_app$dx (map_sp_mu$h ?v0 ?v1 )(put$ ?v2 ?v3 ))))):named a88 ))
(assert (! (forall ((?v0 A_h_fun$ )(?v1 C_i_fun$ )(?v2 A$ )(?v3 C$ ))(! (= (fun_app$ea (map_sp_mu$i ?v0 ?v1 )(put$a ?v2 ?v3 ))(put$b (fun_app$eb ?v0 ?v2 )(fun_app$ec ?v1 ?v3 ))):pattern ((fun_app$ea (map_sp_mu$i ?v0 ?v1 )(put$a ?v2 ?v3 ))))):named a89 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 C$ )(?v4 B$ )(?v5 D$ ))(! (= (fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )(put$a ?v2 ?v3 ))(put$c ?v4 ?v5 ))(and (fun_app$p (fun_app$ao ?v0 ?v2 )?v4 )(fun_app$n (fun_app$af ?v1 ?v3 )?v5 ))):pattern ((fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )(put$a ?v2 ?v3 ))(put$c ?v4 ?v5 ))))):named a90 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 F$ )(?v3 G$ )(?v4 H$ )(?v5 I$ ))(! (= (fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )(put$ ?v2 ?v3 ))(put$b ?v4 ?v5 ))(and (fun_app$cc (fun_app$ai ?v0 ?v2 )?v4 )(fun_app$bw (fun_app$z ?v1 ?v3 )?v5 ))):pattern ((fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )(put$ ?v2 ?v3 ))(put$b ?v4 ?v5 ))))):named a91 ))
(assert (! (forall ((?v0 H_h_bool_fun_fun$ )(?v1 I_i_bool_fun_fun$ )(?v2 H$ )(?v3 I$ )(?v4 H$ )(?v5 I$ ))(! (= (rel_sp_mu$b ?v0 ?v1 (put$b ?v2 ?v3 )(put$b ?v4 ?v5 ))(and (fun_app$cc (fun_app$ed ?v0 ?v2 )?v4 )(fun_app$bw (fun_app$ee ?v1 ?v3 )?v5 ))):pattern ((rel_sp_mu$b ?v0 ?v1 (put$b ?v2 ?v3 )(put$b ?v4 ?v5 ))))):named a92 ))
(assert (! (forall ((?v0 H_b_bool_fun_fun$ )(?v1 I_d_bool_fun_fun$ )(?v2 H$ )(?v3 I$ )(?v4 B$ )(?v5 D$ ))(! (= (rel_sp_mu$c ?v0 ?v1 (put$b ?v2 ?v3 )(put$c ?v4 ?v5 ))(and (fun_app$p (fun_app$ef ?v0 ?v2 )?v4 )(fun_app$n (fun_app$eg ?v1 ?v3 )?v5 ))):pattern ((rel_sp_mu$c ?v0 ?v1 (put$b ?v2 ?v3 )(put$c ?v4 ?v5 ))))):named a93 ))
(assert (! (forall ((?v0 H_a_bool_fun_fun$ )(?v1 I_c_bool_fun_fun$ )(?v2 H$ )(?v3 I$ )(?v4 A$ )(?v5 C$ ))(! (= (fun_app$eh (fun_app$ei (rel_sp_mu$d ?v0 ?v1 )(put$b ?v2 ?v3 ))(put$a ?v4 ?v5 ))(and (fun_app$q (fun_app$bh ?v0 ?v2 )?v4 )(fun_app$o (fun_app$au ?v1 ?v3 )?v5 ))):pattern ((fun_app$eh (fun_app$ei (rel_sp_mu$d ?v0 ?v1 )(put$b ?v2 ?v3 ))(put$a ?v4 ?v5 ))))):named a94 ))
(assert (! (forall ((?v0 B_h_bool_fun_fun$ )(?v1 D_i_bool_fun_fun$ )(?v2 B$ )(?v3 D$ )(?v4 H$ )(?v5 I$ ))(! (= (rel_sp_mu$e ?v0 ?v1 (put$c ?v2 ?v3 )(put$b ?v4 ?v5 ))(and (fun_app$cc (fun_app$ej ?v0 ?v2 )?v4 )(fun_app$bw (fun_app$ek ?v1 ?v3 )?v5 ))):pattern ((rel_sp_mu$e ?v0 ?v1 (put$c ?v2 ?v3 )(put$b ?v4 ?v5 ))))):named a95 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 D$ )(?v4 B$ )(?v5 D$ ))(! (= (rel_sp_mu$f ?v0 ?v1 (put$c ?v2 ?v3 )(put$c ?v4 ?v5 ))(and (fun_app$p (fun_app$el ?v0 ?v2 )?v4 )(fun_app$n (fun_app$em ?v1 ?v3 )?v5 ))):pattern ((rel_sp_mu$f ?v0 ?v1 (put$c ?v2 ?v3 )(put$c ?v4 ?v5 ))))):named a96 ))
(assert (! (forall ((?v0 B_f_bool_fun_fun$ )(?v1 D_g_bool_fun_fun$ )(?v2 B$ )(?v3 D$ )(?v4 F$ )(?v5 G$ ))(! (= (fun_app$en (fun_app$eo (rel_sp_mu$g ?v0 ?v1 )(put$c ?v2 ?v3 ))(put$ ?v4 ?v5 ))(and (fun_app$m (fun_app$bf ?v0 ?v2 )?v4 )(fun_app$br (fun_app$as ?v1 ?v3 )?v5 ))):pattern ((fun_app$en (fun_app$eo (rel_sp_mu$g ?v0 ?v1 )(put$c ?v2 ?v3 ))(put$ ?v4 ?v5 ))))):named a97 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 G_g_bool_fun_fun$ )(?v2 F$ )(?v3 G$ )(?v4 F$ )(?v5 G$ ))(! (= (rel_sp_mu$h ?v0 ?v1 (put$ ?v2 ?v3 )(put$ ?v4 ?v5 ))(and (fun_app$m (fun_app$ep ?v0 ?v2 )?v4 )(fun_app$br (fun_app$eq ?v1 ?v3 )?v5 ))):pattern ((rel_sp_mu$h ?v0 ?v1 (put$ ?v2 ?v3 )(put$ ?v4 ?v5 ))))):named a98 ))
(assert (! (forall ((?v0 F_a_bool_fun_fun$ )(?v1 G_c_bool_fun_fun$ )(?v2 F$ )(?v3 G$ )(?v4 A$ )(?v5 C$ ))(! (= (rel_sp_mu$i ?v0 ?v1 (put$ ?v2 ?v3 )(put$a ?v4 ?v5 ))(and (fun_app$q (fun_app$er ?v0 ?v2 )?v4 )(fun_app$o (fun_app$es ?v1 ?v3 )?v5 ))):pattern ((rel_sp_mu$i ?v0 ?v1 (put$ ?v2 ?v3 )(put$a ?v4 ?v5 ))))):named a99 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 B$ )(?v3 C_d_bool_fun_fun$ )(?v4 C$ )(?v5 D$ ))(=> (and (fun_app$p (fun_app$ao ?v0 ?v1 )?v2 )(fun_app$n (fun_app$af ?v3 ?v4 )?v5 ))(fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v3 )(put$a ?v1 ?v4 ))(put$c ?v2 ?v5 )))):named a100 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 F$ )(?v2 H$ )(?v3 G_i_bool_fun_fun$ )(?v4 G$ )(?v5 I$ ))(=> (and (fun_app$cc (fun_app$ai ?v0 ?v1 )?v2 )(fun_app$bw (fun_app$z ?v3 ?v4 )?v5 ))(fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v3 )(put$ ?v1 ?v4 ))(put$b ?v2 ?v5 )))):named a101 ))
(assert (! (forall ((?v0 H_h_bool_fun_fun$ )(?v1 H$ )(?v2 H$ )(?v3 I_i_bool_fun_fun$ )(?v4 I$ )(?v5 I$ ))(=> (and (fun_app$cc (fun_app$ed ?v0 ?v1 )?v2 )(fun_app$bw (fun_app$ee ?v3 ?v4 )?v5 ))(rel_sp_mu$b ?v0 ?v3 (put$b ?v1 ?v4 )(put$b ?v2 ?v5 )))):named a102 ))
(assert (! (forall ((?v0 H_b_bool_fun_fun$ )(?v1 H$ )(?v2 B$ )(?v3 I_d_bool_fun_fun$ )(?v4 I$ )(?v5 D$ ))(=> (and (fun_app$p (fun_app$ef ?v0 ?v1 )?v2 )(fun_app$n (fun_app$eg ?v3 ?v4 )?v5 ))(rel_sp_mu$c ?v0 ?v3 (put$b ?v1 ?v4 )(put$c ?v2 ?v5 )))):named a103 ))
(assert (! (forall ((?v0 H_a_bool_fun_fun$ )(?v1 H$ )(?v2 A$ )(?v3 I_c_bool_fun_fun$ )(?v4 I$ )(?v5 C$ ))(=> (and (fun_app$q (fun_app$bh ?v0 ?v1 )?v2 )(fun_app$o (fun_app$au ?v3 ?v4 )?v5 ))(fun_app$eh (fun_app$ei (rel_sp_mu$d ?v0 ?v3 )(put$b ?v1 ?v4 ))(put$a ?v2 ?v5 )))):named a104 ))
(assert (! (forall ((?v0 B_h_bool_fun_fun$ )(?v1 B$ )(?v2 H$ )(?v3 D_i_bool_fun_fun$ )(?v4 D$ )(?v5 I$ ))(=> (and (fun_app$cc (fun_app$ej ?v0 ?v1 )?v2 )(fun_app$bw (fun_app$ek ?v3 ?v4 )?v5 ))(rel_sp_mu$e ?v0 ?v3 (put$c ?v1 ?v4 )(put$b ?v2 ?v5 )))):named a105 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B$ )(?v3 D_d_bool_fun_fun$ )(?v4 D$ )(?v5 D$ ))(=> (and (fun_app$p (fun_app$el ?v0 ?v1 )?v2 )(fun_app$n (fun_app$em ?v3 ?v4 )?v5 ))(rel_sp_mu$f ?v0 ?v3 (put$c ?v1 ?v4 )(put$c ?v2 ?v5 )))):named a106 ))
(assert (! (forall ((?v0 B_f_bool_fun_fun$ )(?v1 B$ )(?v2 F$ )(?v3 D_g_bool_fun_fun$ )(?v4 D$ )(?v5 G$ ))(=> (and (fun_app$m (fun_app$bf ?v0 ?v1 )?v2 )(fun_app$br (fun_app$as ?v3 ?v4 )?v5 ))(fun_app$en (fun_app$eo (rel_sp_mu$g ?v0 ?v3 )(put$c ?v1 ?v4 ))(put$ ?v2 ?v5 )))):named a107 ))
(assert (! (forall ((?v0 F_f_bool_fun_fun$ )(?v1 F$ )(?v2 F$ )(?v3 G_g_bool_fun_fun$ )(?v4 G$ )(?v5 G$ ))(=> (and (fun_app$m (fun_app$ep ?v0 ?v1 )?v2 )(fun_app$br (fun_app$eq ?v3 ?v4 )?v5 ))(rel_sp_mu$h ?v0 ?v3 (put$ ?v1 ?v4 )(put$ ?v2 ?v5 )))):named a108 ))
(assert (! (forall ((?v0 F_a_bool_fun_fun$ )(?v1 F$ )(?v2 A$ )(?v3 G_c_bool_fun_fun$ )(?v4 G$ )(?v5 C$ ))(=> (and (fun_app$q (fun_app$er ?v0 ?v1 )?v2 )(fun_app$o (fun_app$es ?v3 ?v4 )?v5 ))(rel_sp_mu$i ?v0 ?v3 (put$ ?v1 ?v4 )(put$a ?v2 ?v5 )))):named a109 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ ))(= (fun_app$et (map_sp_mu$j id$ id$a )?v0 )?v0 )):named a110 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ ))(= (fun_app$eu (map_sp_mu$k id$b id$c )?v0 )?v0 )):named a111 ))
(assert (! (forall ((?v0 E_b_d_sp_mu$ ))(= (fun_app$ev (map_sp_mu$l id$d id$e )?v0 )?v0 )):named a112 ))
(assert (! (forall ((?v0 E_a_c_sp_mu$ ))(= (fun_app$ew (map_sp_mu$m id$f id$g )?v0 )?v0 )):named a113 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 F_a_fun$ )(?v3 G_c_fun$ )(?v4 E_f_g_sp_mu$ ))(= (fun_app$ew (map_sp_mu$m ?v0 ?v1 )(fun_app$cu (map_sp_mu$ ?v2 ?v3 )?v4 ))(fun_app$cu (map_sp_mu$ (fun_app$ex (comp$ ?v0 )?v2 )(fun_app$ey (comp$a ?v1 )?v3 ))?v4 ))):named a114 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 H_b_fun$ )(?v3 I_d_fun$ )(?v4 E_h_i_sp_mu$ ))(= (fun_app$ev (map_sp_mu$l ?v0 ?v1 )(fun_app$cv (map_sp_mu$a ?v2 ?v3 )?v4 ))(fun_app$cv (map_sp_mu$a (fun_app$ez (comp$b ?v0 )?v2 )(fun_app$fa (comp$c ?v1 )?v3 ))?v4 ))):named a115 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 G_c_fun$ )(?v2 F_f_fun$ )(?v3 G_g_fun$ )(?v4 E_f_g_sp_mu$ ))(= (fun_app$cu (map_sp_mu$ ?v0 ?v1 )(fun_app$eu (map_sp_mu$k ?v2 ?v3 )?v4 ))(fun_app$cu (map_sp_mu$ (fun_app$fb (comp$d ?v0 )?v2 )(fun_app$fc (comp$e ?v1 )?v3 ))?v4 ))):named a116 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 I_d_fun$ )(?v2 H_h_fun$ )(?v3 I_i_fun$ )(?v4 E_h_i_sp_mu$ ))(= (fun_app$cv (map_sp_mu$a ?v0 ?v1 )(fun_app$et (map_sp_mu$j ?v2 ?v3 )?v4 ))(fun_app$cv (map_sp_mu$a (fun_app$fd (comp$f ?v0 )?v2 )(fun_app$fe (comp$g ?v1 )?v3 ))?v4 ))):named a117 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 C_c_fun$ )(?v2 F_a_fun$ )(?v3 G_c_fun$ )(?v4 E_f_g_sp_mu$ ))(= (map_sp_mu$n ?v0 ?v1 (fun_app$cu (map_sp_mu$ ?v2 ?v3 )?v4 ))(map_sp_mu$o (fun_app$ff (comp$h ?v0 )?v2 )(fun_app$ey (comp$a ?v1 )?v3 )?v4 ))):named a118 ))
(assert (! (forall ((?v0 A_f_fun$ )(?v1 C_g_fun$ )(?v2 F_a_fun$ )(?v3 G_c_fun$ )(?v4 E_f_g_sp_mu$ ))(= (map_sp_mu$p ?v0 ?v1 (fun_app$cu (map_sp_mu$ ?v2 ?v3 )?v4 ))(fun_app$eu (map_sp_mu$k (fun_app$fg (comp$i ?v0 )?v2 )(fun_app$fh (comp$j ?v1 )?v3 ))?v4 ))):named a119 ))
(assert (! (forall ((?v0 B_h_fun$ )(?v1 D_i_fun$ )(?v2 H_b_fun$ )(?v3 I_d_fun$ )(?v4 E_h_i_sp_mu$ ))(= (fun_app$do (map_sp_mu$d ?v0 ?v1 )(fun_app$cv (map_sp_mu$a ?v2 ?v3 )?v4 ))(fun_app$et (map_sp_mu$j (fun_app$fi (comp$k ?v0 )?v2 )(fun_app$fj (comp$l ?v1 )?v3 ))?v4 ))):named a120 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 G_c_fun$ )(?v2 A_f_fun$ )(?v3 C_g_fun$ )(?v4 E_a_c_sp_mu$ ))(= (fun_app$cu (map_sp_mu$ ?v0 ?v1 )(map_sp_mu$p ?v2 ?v3 ?v4 ))(fun_app$ew (map_sp_mu$m (fun_app$fk (comp$m ?v0 )?v2 )(fun_app$fl (comp$n ?v1 )?v3 ))?v4 ))):named a121 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 I_d_fun$ )(?v2 B_h_fun$ )(?v3 D_i_fun$ )(?v4 E_b_d_sp_mu$ ))(= (fun_app$cv (map_sp_mu$a ?v0 ?v1 )(fun_app$do (map_sp_mu$d ?v2 ?v3 )?v4 ))(fun_app$ev (map_sp_mu$l (fun_app$fm (comp$o ?v0 )?v2 )(fun_app$fn (comp$p ?v1 )?v3 ))?v4 ))):named a122 ))
(assert (! (forall ((?v0 H_h_fun$ )(?v1 I_i_fun$ )(?v2 H_h_fun$ )(?v3 I_i_fun$ )(?v4 E_h_i_sp_mu$ ))(= (fun_app$et (map_sp_mu$j ?v0 ?v1 )(fun_app$et (map_sp_mu$j ?v2 ?v3 )?v4 ))(fun_app$et (map_sp_mu$j (fun_app$fo (comp$q ?v0 )?v2 )(fun_app$fp (comp$r ?v1 )?v3 ))?v4 ))):named a123 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 G_d_bool_fun_fun$ )(?v2 E_b_d_sp_mu$ )(?v3 E_f_g_sp_mu$ ))(= (fun_app$en (fun_app$eo (rel_sp_mu$g (conversep$ ?v0 )(conversep$a ?v1 ))?v2 )?v3 )(fun_app$cs (fun_app$fq (rel_sp_mu$j ?v0 ?v1 )?v3 )?v2 ))):named a124 ))
(assert (! (forall ((?v0 A_h_bool_fun_fun$ )(?v1 C_i_bool_fun_fun$ )(?v2 E_h_i_sp_mu$ )(?v3 E_a_c_sp_mu$ ))(= (fun_app$eh (fun_app$ei (rel_sp_mu$d (conversep$b ?v0 )(conversep$c ?v1 ))?v2 )?v3 )(fun_app$cw (fun_app$fr (rel_sp_mu$k ?v0 ?v1 )?v3 )?v2 ))):named a125 ))
(assert (! (forall ((?v0 B_f_bool_fun_fun$ )(?v1 D_g_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$fq (rel_sp_mu$j (conversep$d ?v0 )(conversep$e ?v1 ))?v2 )?v3 )(fun_app$en (fun_app$eo (rel_sp_mu$g ?v0 ?v1 )?v3 )?v2 ))):named a126 ))
(assert (! (forall ((?v0 H_a_bool_fun_fun$ )(?v1 I_c_bool_fun_fun$ )(?v2 E_a_c_sp_mu$ )(?v3 E_h_i_sp_mu$ ))(= (fun_app$cw (fun_app$fr (rel_sp_mu$k (conversep$f ?v0 )(conversep$g ?v1 ))?v2 )?v3 )(fun_app$eh (fun_app$ei (rel_sp_mu$d ?v0 ?v1 )?v3 )?v2 ))):named a127 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 E_b_d_sp_mu$ )(?v3 E_a_c_sp_mu$ ))(= (fun_app$eh (fun_app$fs (rel_sp_mu$l (conversep$h ?v0 )(conversep$i ?v1 ))?v2 )?v3 )(fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )?v3 )?v2 ))):named a128 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 E_h_i_sp_mu$ )(?v3 E_f_g_sp_mu$ ))(= (fun_app$en (fun_app$ft (rel_sp_mu$m (conversep$j ?v0 )(conversep$k ?v1 ))?v2 )?v3 )(fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )?v3 )?v2 ))):named a129 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 E_a_c_sp_mu$ )(?v3 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$ct (rel_sp_mu$ (conversep$l ?v0 )(conversep$m ?v1 ))?v2 )?v3 )(fun_app$eh (fun_app$fs (rel_sp_mu$l ?v0 ?v1 )?v3 )?v2 ))):named a130 ))
(assert (! (forall ((?v0 H_f_bool_fun_fun$ )(?v1 I_g_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 E_h_i_sp_mu$ ))(= (fun_app$cw (fun_app$cx (rel_sp_mu$a (conversep$n ?v0 )(conversep$o ?v1 ))?v2 )?v3 )(fun_app$en (fun_app$ft (rel_sp_mu$m ?v0 ?v1 )?v3 )?v2 ))):named a131 ))
(assert (! (forall ((?v0 A_h_bool_fun_fun$ )(?v1 C_i_bool_fun_fun$ )(?v2 F_a_fun$ )(?v3 G_c_fun$ )(?v4 E_f_g_sp_mu$ )(?v5 E_h_i_sp_mu$ ))(= (fun_app$cw (fun_app$fr (rel_sp_mu$k ?v0 ?v1 )(fun_app$cu (map_sp_mu$ ?v2 ?v3 )?v4 ))?v5 )(fun_app$cw (fun_app$cx (rel_sp_mu$a (fun_app$bm (uu$ ?v0 )?v2 )(fun_app$az (uua$ ?v1 )?v3 ))?v4 )?v5 ))):named a132 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 F_a_fun$ )(?v3 G_c_fun$ )(?v4 E_f_g_sp_mu$ )(?v5 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )(fun_app$cu (map_sp_mu$ ?v2 ?v3 )?v4 ))?v5 )(fun_app$cs (fun_app$fq (rel_sp_mu$j (fun_app$bo (uub$ ?v0 )?v2 )(fun_app$bb (uuc$ ?v1 )?v3 ))?v4 )?v5 ))):named a133 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 E_a_c_sp_mu$ )(?v5 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )(fun_app$ew (map_sp_mu$m ?v2 ?v3 )?v4 ))?v5 )(fun_app$cs (fun_app$ct (rel_sp_mu$ (fun_app$bp (uud$ ?v0 )?v2 )(fun_app$bc (uue$ ?v1 )?v3 ))?v4 )?v5 ))):named a134 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 F_f_fun$ )(?v3 G_g_fun$ )(?v4 E_f_g_sp_mu$ )(?v5 E_h_i_sp_mu$ ))(= (fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )(fun_app$eu (map_sp_mu$k ?v2 ?v3 )?v4 ))?v5 )(fun_app$cw (fun_app$cx (rel_sp_mu$a (fun_app$aj (uuf$ ?v0 )?v2 )(fun_app$aa (uug$ ?v1 )?v3 ))?v4 )?v5 ))):named a135 ))
(assert (! (forall ((?v0 B_f_bool_fun_fun$ )(?v1 D_g_bool_fun_fun$ )(?v2 H_b_fun$ )(?v3 I_d_fun$ )(?v4 E_h_i_sp_mu$ )(?v5 E_f_g_sp_mu$ ))(= (fun_app$en (fun_app$eo (rel_sp_mu$g ?v0 ?v1 )(fun_app$cv (map_sp_mu$a ?v2 ?v3 )?v4 ))?v5 )(fun_app$en (fun_app$ft (rel_sp_mu$m (fun_app$be (uuh$ ?v0 )?v2 )(fun_app$ar (uui$ ?v1 )?v3 ))?v4 )?v5 ))):named a136 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 A_f_fun$ )(?v3 C_g_fun$ )(?v4 E_a_c_sp_mu$ )(?v5 E_h_i_sp_mu$ ))(= (fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )(map_sp_mu$p ?v2 ?v3 ?v4 ))?v5 )(fun_app$cw (fun_app$fr (rel_sp_mu$k (fun_app$am (uuj$ ?v0 )?v2 )(fun_app$ad (uuk$ ?v1 )?v3 ))?v4 )?v5 ))):named a137 ))
(assert (! (forall ((?v0 H_f_bool_fun_fun$ )(?v1 I_g_bool_fun_fun$ )(?v2 H_h_fun$ )(?v3 I_i_fun$ )(?v4 E_h_i_sp_mu$ )(?v5 E_f_g_sp_mu$ ))(= (fun_app$en (fun_app$ft (rel_sp_mu$m ?v0 ?v1 )(fun_app$et (map_sp_mu$j ?v2 ?v3 )?v4 ))?v5 )(fun_app$en (fun_app$ft (rel_sp_mu$m (fun_app$x (uul$ ?v0 )?v2 )(fun_app$u (uum$ ?v1 )?v3 ))?v4 )?v5 ))):named a138 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 H_b_fun$ )(?v3 I_d_fun$ )(?v4 E_h_i_sp_mu$ )(?v5 E_a_c_sp_mu$ ))(= (fun_app$eh (fun_app$fs (rel_sp_mu$l ?v0 ?v1 )(fun_app$cv (map_sp_mu$a ?v2 ?v3 )?v4 ))?v5 )(fun_app$eh (fun_app$ei (rel_sp_mu$d (fun_app$bi (uun$ ?v0 )?v2 )(fun_app$av (uuo$ ?v1 )?v3 ))?v4 )?v5 ))):named a139 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 E_b_d_sp_mu$ )(?v5 E_a_c_sp_mu$ ))(= (fun_app$eh (fun_app$fs (rel_sp_mu$l ?v0 ?v1 )(fun_app$ev (map_sp_mu$l ?v2 ?v3 )?v4 ))?v5 )(fun_app$eh (fun_app$fs (rel_sp_mu$l (fun_app$bk (uup$ ?v0 )?v2 )(fun_app$ax (uuq$ ?v1 )?v3 ))?v4 )?v5 ))):named a140 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 G_d_bool_fun_fun$ )(?v2 A_f_fun$ )(?v3 C_g_fun$ )(?v4 E_a_c_sp_mu$ )(?v5 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$fq (rel_sp_mu$j ?v0 ?v1 )(map_sp_mu$p ?v2 ?v3 ?v4 ))?v5 )(fun_app$cs (fun_app$ct (rel_sp_mu$ (fun_app$ap (uur$ ?v0 )?v2 )(fun_app$ag (uus$ ?v1 )?v3 ))?v4 )?v5 ))):named a141 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 G_d_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 H_b_fun$ )(?v4 I_d_fun$ )(?v5 E_h_i_sp_mu$ ))(= (fun_app$cs (fun_app$fq (rel_sp_mu$j ?v0 ?v1 )?v2 )(fun_app$cv (map_sp_mu$a ?v3 ?v4 )?v5 ))(fun_app$cw (fun_app$cx (rel_sp_mu$a (fun_app$cg (uut$ ?v0 )?v3 )(fun_app$ca (uuu$ ?v1 )?v4 ))?v2 )?v5 ))):named a142 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 E_a_c_sp_mu$ )(?v3 H_b_fun$ )(?v4 I_d_fun$ )(?v5 E_h_i_sp_mu$ ))(= (fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )?v2 )(fun_app$cv (map_sp_mu$a ?v3 ?v4 )?v5 ))(fun_app$cw (fun_app$fr (rel_sp_mu$k (fun_app$co (uuv$ ?v0 )?v3 )(fun_app$ck (uuw$ ?v1 )?v4 ))?v2 )?v5 ))):named a143 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 E_a_c_sp_mu$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )?v2 )(fun_app$ev (map_sp_mu$l ?v3 ?v4 )?v5 ))(fun_app$cs (fun_app$ct (rel_sp_mu$ (fun_app$cp (uux$ ?v0 )?v3 )(fun_app$cl (uuy$ ?v1 )?v4 ))?v2 )?v5 ))):named a144 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 H_h_fun$ )(?v4 I_i_fun$ )(?v5 E_h_i_sp_mu$ ))(= (fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )?v2 )(fun_app$et (map_sp_mu$j ?v3 ?v4 )?v5 ))(fun_app$cw (fun_app$cx (rel_sp_mu$a (fun_app$cd (uuz$ ?v0 )?v3 )(fun_app$bx (uva$ ?v1 )?v4 ))?v2 )?v5 ))):named a145 ))
(assert (! (forall ((?v0 H_a_bool_fun_fun$ )(?v1 I_c_bool_fun_fun$ )(?v2 E_h_i_sp_mu$ )(?v3 F_a_fun$ )(?v4 G_c_fun$ )(?v5 E_f_g_sp_mu$ ))(= (fun_app$eh (fun_app$ei (rel_sp_mu$d ?v0 ?v1 )?v2 )(fun_app$cu (map_sp_mu$ ?v3 ?v4 )?v5 ))(fun_app$en (fun_app$ft (rel_sp_mu$m (fun_app$bv (uvb$ ?v0 )?v3 )(fun_app$bt (uvc$ ?v1 )?v4 ))?v2 )?v5 ))):named a146 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 B_h_fun$ )(?v4 D_i_fun$ )(?v5 E_b_d_sp_mu$ ))(= (fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )?v2 )(fun_app$do (map_sp_mu$d ?v3 ?v4 )?v5 ))(fun_app$cs (fun_app$fq (rel_sp_mu$j (fun_app$ce (uvd$ ?v0 )?v3 )(fun_app$by (uve$ ?v1 )?v4 ))?v2 )?v5 ))):named a147 ))
(assert (! (forall ((?v0 H_f_bool_fun_fun$ )(?v1 I_g_bool_fun_fun$ )(?v2 E_h_i_sp_mu$ )(?v3 F_f_fun$ )(?v4 G_g_fun$ )(?v5 E_f_g_sp_mu$ ))(= (fun_app$en (fun_app$ft (rel_sp_mu$m ?v0 ?v1 )?v2 )(fun_app$eu (map_sp_mu$k ?v3 ?v4 )?v5 ))(fun_app$en (fun_app$ft (rel_sp_mu$m (fun_app$bu (uvf$ ?v0 )?v3 )(fun_app$bs (uvg$ ?v1 )?v4 ))?v2 )?v5 ))):named a148 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 E_b_d_sp_mu$ )(?v3 F_a_fun$ )(?v4 G_c_fun$ )(?v5 E_f_g_sp_mu$ ))(= (fun_app$eh (fun_app$fs (rel_sp_mu$l ?v0 ?v1 )?v2 )(fun_app$cu (map_sp_mu$ ?v3 ?v4 )?v5 ))(fun_app$en (fun_app$eo (rel_sp_mu$g (fun_app$cm (uvh$ ?v0 )?v3 )(fun_app$ci (uvi$ ?v1 )?v4 ))?v2 )?v5 ))):named a149 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 E_b_d_sp_mu$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 E_a_c_sp_mu$ ))(= (fun_app$eh (fun_app$fs (rel_sp_mu$l ?v0 ?v1 )?v2 )(fun_app$ew (map_sp_mu$m ?v3 ?v4 )?v5 ))(fun_app$eh (fun_app$fs (rel_sp_mu$l (fun_app$cn (uvj$ ?v0 )?v3 )(fun_app$cj (uvk$ ?v1 )?v4 ))?v2 )?v5 ))):named a150 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 G_d_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$fq (rel_sp_mu$j ?v0 ?v1 )?v2 )(fun_app$ev (map_sp_mu$l ?v3 ?v4 )?v5 ))(fun_app$cs (fun_app$fq (rel_sp_mu$j (fun_app$ch (uvl$ ?v0 )?v3 )(fun_app$cb (uvm$ ?v1 )?v4 ))?v2 )?v5 ))):named a151 ))
(assert (! (forall ((?v0 E_a_b_prod_c_d_prod_sp_mu$ )(?v1 E_a_b_prod_c_d_prod_sp_mu$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$d ?v6 (set1_sp_mu$a ?v0 ))(and (member$d ?v7 (set1_sp_mu$a ?v1 ))(= (fun_app$g ?v2 ?v6 )(fun_app$g ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$c ?v6 (set2_sp_mu$a ?v0 ))(and (member$c ?v7 (set2_sp_mu$a ?v1 ))(= (fun_app$f ?v4 ?v6 )(fun_app$f ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (map_sp_mu$q ?v2 ?v4 ?v0 )(map_sp_mu$q ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a152 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ )(?v1 E_h_i_sp_mu$ )(?v2 H_h_fun$ )(?v3 H_h_fun$ )(?v4 I_i_fun$ )(?v5 I_i_fun$ ))(=> (and (forall ((?v6 H$ )(?v7 H$ ))(=> (and (member$j ?v6 (set1_sp_mu$b ?v0 ))(and (member$j ?v7 (set1_sp_mu$b ?v1 ))(= (fun_app$y ?v2 ?v6 )(fun_app$y ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 I$ )(?v7 I$ ))(=> (and (member$k ?v6 (set2_sp_mu$b ?v0 ))(and (member$k ?v7 (set2_sp_mu$b ?v1 ))(= (fun_app$v ?v4 ?v6 )(fun_app$v ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$et (map_sp_mu$j ?v2 ?v4 )?v0 )(fun_app$et (map_sp_mu$j ?v3 ?v5 )?v1 ))))(= ?v0 ?v1 ))):named a153 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ )(?v1 E_f_g_sp_mu$ )(?v2 F_f_fun$ )(?v3 F_f_fun$ )(?v4 G_g_fun$ )(?v5 G_g_fun$ ))(=> (and (forall ((?v6 F$ )(?v7 F$ ))(=> (and (member$e ?v6 (set1_sp_mu$c ?v0 ))(and (member$e ?v7 (set1_sp_mu$c ?v1 ))(= (fun_app$ak ?v2 ?v6 )(fun_app$ak ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 G$ )(?v7 G$ ))(=> (and (member$l ?v6 (set2_sp_mu$c ?v0 ))(and (member$l ?v7 (set2_sp_mu$c ?v1 ))(= (fun_app$ab ?v4 ?v6 )(fun_app$ab ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$eu (map_sp_mu$k ?v2 ?v4 )?v0 )(fun_app$eu (map_sp_mu$k ?v3 ?v5 )?v1 ))))(= ?v0 ?v1 ))):named a154 ))
(assert (! (forall ((?v0 E_b_d_sp_mu$ )(?v1 E_b_d_sp_mu$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$h ?v6 (set1_sp_mu$d ?v0 ))(and (member$h ?v7 (set1_sp_mu$d ?v1 ))(= (fun_app$bl ?v2 ?v6 )(fun_app$bl ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$f ?v6 (set2_sp_mu$d ?v0 ))(and (member$f ?v7 (set2_sp_mu$d ?v1 ))(= (fun_app$ay ?v4 ?v6 )(fun_app$ay ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$ev (map_sp_mu$l ?v2 ?v4 )?v0 )(fun_app$ev (map_sp_mu$l ?v3 ?v5 )?v1 ))))(= ?v0 ?v1 ))):named a155 ))
(assert (! (forall ((?v0 E_a_c_sp_mu$ )(?v1 E_a_c_sp_mu$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$i ?v6 (set1_sp_mu$e ?v0 ))(and (member$i ?v7 (set1_sp_mu$e ?v1 ))(= (fun_app$bq ?v2 ?v6 )(fun_app$bq ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$g ?v6 (set2_sp_mu$e ?v0 ))(and (member$g ?v7 (set2_sp_mu$e ?v1 ))(= (fun_app$bd ?v4 ?v6 )(fun_app$bd ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$ew (map_sp_mu$m ?v2 ?v4 )?v0 )(fun_app$ew (map_sp_mu$m ?v3 ?v5 )?v1 ))))(= ?v0 ?v1 ))):named a156 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ )(?v1 E_f_g_sp_mu$ )(?v2 F_a_fun$ )(?v3 F_a_fun$ )(?v4 G_c_fun$ )(?v5 G_c_fun$ ))(=> (and (forall ((?v6 F$ )(?v7 F$ ))(=> (and (member$e ?v6 (set1_sp_mu$c ?v0 ))(and (member$e ?v7 (set1_sp_mu$c ?v1 ))(= (fun_app$bn ?v2 ?v6 )(fun_app$bn ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 G$ )(?v7 G$ ))(=> (and (member$l ?v6 (set2_sp_mu$c ?v0 ))(and (member$l ?v7 (set2_sp_mu$c ?v1 ))(= (fun_app$ba ?v4 ?v6 )(fun_app$ba ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$cu (map_sp_mu$ ?v2 ?v4 )?v0 )(fun_app$cu (map_sp_mu$ ?v3 ?v5 )?v1 ))))(= ?v0 ?v1 ))):named a157 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ )(?v1 E_h_i_sp_mu$ )(?v2 H_b_fun$ )(?v3 H_b_fun$ )(?v4 I_d_fun$ )(?v5 I_d_fun$ ))(=> (and (forall ((?v6 H$ )(?v7 H$ ))(=> (and (member$j ?v6 (set1_sp_mu$b ?v0 ))(and (member$j ?v7 (set1_sp_mu$b ?v1 ))(= (fun_app$bg ?v2 ?v6 )(fun_app$bg ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 I$ )(?v7 I$ ))(=> (and (member$k ?v6 (set2_sp_mu$b ?v0 ))(and (member$k ?v7 (set2_sp_mu$b ?v1 ))(= (fun_app$at ?v4 ?v6 )(fun_app$at ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$cv (map_sp_mu$a ?v2 ?v4 )?v0 )(fun_app$cv (map_sp_mu$a ?v3 ?v5 )?v1 ))))(= ?v0 ?v1 ))):named a158 ))
(assert (! (forall ((?v0 E_a_b_prod_c_d_prod_sp_mu$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 C_d_prod_c_fun$ )(?v4 C_d_prod_c_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$d ?v5 (set1_sp_mu$a ?v0 ))(= (fun_app$g ?v1 ?v5 )(fun_app$g ?v2 ?v5 ))))(forall ((?v5 C_d_prod$ ))(=> (member$c ?v5 (set2_sp_mu$a ?v0 ))(= (fun_app$f ?v3 ?v5 )(fun_app$f ?v4 ?v5 )))))(= (map_sp_mu$q ?v1 ?v3 ?v0 )(map_sp_mu$q ?v2 ?v4 ?v0 )))):named a159 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ )(?v1 H_h_fun$ )(?v2 H_h_fun$ )(?v3 I_i_fun$ )(?v4 I_i_fun$ ))(=> (and (forall ((?v5 H$ ))(=> (member$j ?v5 (set1_sp_mu$b ?v0 ))(= (fun_app$y ?v1 ?v5 )(fun_app$y ?v2 ?v5 ))))(forall ((?v5 I$ ))(=> (member$k ?v5 (set2_sp_mu$b ?v0 ))(= (fun_app$v ?v3 ?v5 )(fun_app$v ?v4 ?v5 )))))(= (fun_app$et (map_sp_mu$j ?v1 ?v3 )?v0 )(fun_app$et (map_sp_mu$j ?v2 ?v4 )?v0 )))):named a160 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ )(?v1 F_f_fun$ )(?v2 F_f_fun$ )(?v3 G_g_fun$ )(?v4 G_g_fun$ ))(=> (and (forall ((?v5 F$ ))(=> (member$e ?v5 (set1_sp_mu$c ?v0 ))(= (fun_app$ak ?v1 ?v5 )(fun_app$ak ?v2 ?v5 ))))(forall ((?v5 G$ ))(=> (member$l ?v5 (set2_sp_mu$c ?v0 ))(= (fun_app$ab ?v3 ?v5 )(fun_app$ab ?v4 ?v5 )))))(= (fun_app$eu (map_sp_mu$k ?v1 ?v3 )?v0 )(fun_app$eu (map_sp_mu$k ?v2 ?v4 )?v0 )))):named a161 ))
(assert (! (forall ((?v0 E_b_d_sp_mu$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$h ?v5 (set1_sp_mu$d ?v0 ))(= (fun_app$bl ?v1 ?v5 )(fun_app$bl ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$f ?v5 (set2_sp_mu$d ?v0 ))(= (fun_app$ay ?v3 ?v5 )(fun_app$ay ?v4 ?v5 )))))(= (fun_app$ev (map_sp_mu$l ?v1 ?v3 )?v0 )(fun_app$ev (map_sp_mu$l ?v2 ?v4 )?v0 )))):named a162 ))
(assert (! (forall ((?v0 E_a_c_sp_mu$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 C_c_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$i ?v5 (set1_sp_mu$e ?v0 ))(= (fun_app$bq ?v1 ?v5 )(fun_app$bq ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$g ?v5 (set2_sp_mu$e ?v0 ))(= (fun_app$bd ?v3 ?v5 )(fun_app$bd ?v4 ?v5 )))))(= (fun_app$ew (map_sp_mu$m ?v1 ?v3 )?v0 )(fun_app$ew (map_sp_mu$m ?v2 ?v4 )?v0 )))):named a163 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ )(?v1 F_a_fun$ )(?v2 F_a_fun$ )(?v3 G_c_fun$ )(?v4 G_c_fun$ ))(=> (and (forall ((?v5 F$ ))(=> (member$e ?v5 (set1_sp_mu$c ?v0 ))(= (fun_app$bn ?v1 ?v5 )(fun_app$bn ?v2 ?v5 ))))(forall ((?v5 G$ ))(=> (member$l ?v5 (set2_sp_mu$c ?v0 ))(= (fun_app$ba ?v3 ?v5 )(fun_app$ba ?v4 ?v5 )))))(= (fun_app$cu (map_sp_mu$ ?v1 ?v3 )?v0 )(fun_app$cu (map_sp_mu$ ?v2 ?v4 )?v0 )))):named a164 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ )(?v1 H_b_fun$ )(?v2 H_b_fun$ )(?v3 I_d_fun$ )(?v4 I_d_fun$ ))(=> (and (forall ((?v5 H$ ))(=> (member$j ?v5 (set1_sp_mu$b ?v0 ))(= (fun_app$bg ?v1 ?v5 )(fun_app$bg ?v2 ?v5 ))))(forall ((?v5 I$ ))(=> (member$k ?v5 (set2_sp_mu$b ?v0 ))(= (fun_app$at ?v3 ?v5 )(fun_app$at ?v4 ?v5 )))))(= (fun_app$cv (map_sp_mu$a ?v1 ?v3 )?v0 )(fun_app$cv (map_sp_mu$a ?v2 ?v4 )?v0 )))):named a165 ))
(assert (! (forall ((?v0 E_a_b_prod_c_d_prod_sp_mu$ )(?v1 E_a_b_prod_c_d_prod_sp_mu$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$d ?v6 (set1_sp_mu$a ?v1 ))(= (fun_app$g ?v2 ?v6 )(fun_app$g ?v3 ?v6 ))))(forall ((?v6 C_d_prod$ ))(=> (member$c ?v6 (set2_sp_mu$a ?v1 ))(= (fun_app$f ?v4 ?v6 )(fun_app$f ?v5 ?v6 ))))))(= (map_sp_mu$q ?v2 ?v4 ?v0 )(map_sp_mu$q ?v3 ?v5 ?v1 )))):named a166 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ )(?v1 E_h_i_sp_mu$ )(?v2 H_h_fun$ )(?v3 H_h_fun$ )(?v4 I_i_fun$ )(?v5 I_i_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 H$ ))(=> (member$j ?v6 (set1_sp_mu$b ?v1 ))(= (fun_app$y ?v2 ?v6 )(fun_app$y ?v3 ?v6 ))))(forall ((?v6 I$ ))(=> (member$k ?v6 (set2_sp_mu$b ?v1 ))(= (fun_app$v ?v4 ?v6 )(fun_app$v ?v5 ?v6 ))))))(= (fun_app$et (map_sp_mu$j ?v2 ?v4 )?v0 )(fun_app$et (map_sp_mu$j ?v3 ?v5 )?v1 )))):named a167 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ )(?v1 E_f_g_sp_mu$ )(?v2 F_f_fun$ )(?v3 F_f_fun$ )(?v4 G_g_fun$ )(?v5 G_g_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 F$ ))(=> (member$e ?v6 (set1_sp_mu$c ?v1 ))(= (fun_app$ak ?v2 ?v6 )(fun_app$ak ?v3 ?v6 ))))(forall ((?v6 G$ ))(=> (member$l ?v6 (set2_sp_mu$c ?v1 ))(= (fun_app$ab ?v4 ?v6 )(fun_app$ab ?v5 ?v6 ))))))(= (fun_app$eu (map_sp_mu$k ?v2 ?v4 )?v0 )(fun_app$eu (map_sp_mu$k ?v3 ?v5 )?v1 )))):named a168 ))
(assert (! (forall ((?v0 E_b_d_sp_mu$ )(?v1 E_b_d_sp_mu$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$h ?v6 (set1_sp_mu$d ?v1 ))(= (fun_app$bl ?v2 ?v6 )(fun_app$bl ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$f ?v6 (set2_sp_mu$d ?v1 ))(= (fun_app$ay ?v4 ?v6 )(fun_app$ay ?v5 ?v6 ))))))(= (fun_app$ev (map_sp_mu$l ?v2 ?v4 )?v0 )(fun_app$ev (map_sp_mu$l ?v3 ?v5 )?v1 )))):named a169 ))
(assert (! (forall ((?v0 E_a_c_sp_mu$ )(?v1 E_a_c_sp_mu$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$i ?v6 (set1_sp_mu$e ?v1 ))(= (fun_app$bq ?v2 ?v6 )(fun_app$bq ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$g ?v6 (set2_sp_mu$e ?v1 ))(= (fun_app$bd ?v4 ?v6 )(fun_app$bd ?v5 ?v6 ))))))(= (fun_app$ew (map_sp_mu$m ?v2 ?v4 )?v0 )(fun_app$ew (map_sp_mu$m ?v3 ?v5 )?v1 )))):named a170 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ )(?v1 E_f_g_sp_mu$ )(?v2 F_a_fun$ )(?v3 F_a_fun$ )(?v4 G_c_fun$ )(?v5 G_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 F$ ))(=> (member$e ?v6 (set1_sp_mu$c ?v1 ))(= (fun_app$bn ?v2 ?v6 )(fun_app$bn ?v3 ?v6 ))))(forall ((?v6 G$ ))(=> (member$l ?v6 (set2_sp_mu$c ?v1 ))(= (fun_app$ba ?v4 ?v6 )(fun_app$ba ?v5 ?v6 ))))))(= (fun_app$cu (map_sp_mu$ ?v2 ?v4 )?v0 )(fun_app$cu (map_sp_mu$ ?v3 ?v5 )?v1 )))):named a171 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ )(?v1 E_h_i_sp_mu$ )(?v2 H_b_fun$ )(?v3 H_b_fun$ )(?v4 I_d_fun$ )(?v5 I_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 H$ ))(=> (member$j ?v6 (set1_sp_mu$b ?v1 ))(= (fun_app$bg ?v2 ?v6 )(fun_app$bg ?v3 ?v6 ))))(forall ((?v6 I$ ))(=> (member$k ?v6 (set2_sp_mu$b ?v1 ))(= (fun_app$at ?v4 ?v6 )(fun_app$at ?v5 ?v6 ))))))(= (fun_app$cv (map_sp_mu$a ?v2 ?v4 )?v0 )(fun_app$cv (map_sp_mu$a ?v3 ?v5 )?v1 )))):named a172 ))
(assert (! (forall ((?v0 H$ )(?v1 I$ )(?v2 H$ )(?v3 I$ ))(= (= (put$b ?v0 ?v1 )(put$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a173 ))
(assert (! (forall ((?v0 B$ )(?v1 D$ )(?v2 B$ )(?v3 D$ ))(= (= (put$c ?v0 ?v1 )(put$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a174 ))
(assert (! (forall ((?v0 F$ )(?v1 G$ )(?v2 F$ )(?v3 G$ ))(= (= (put$ ?v0 ?v1 )(put$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a175 ))
(assert (! (forall ((?v0 A$ )(?v1 C$ )(?v2 A$ )(?v3 C$ ))(= (= (put$a ?v0 ?v1 )(put$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a176 ))
(assert (! (forall ((?v0 G_c_fun$ )(?v1 G_g_fun$ )(?v2 G$ )(?v3 C_c_fun$ )(?v4 G_c_fun$ )(?v5 C_c_fun$ ))(=> (= (fun_app$ba ?v0 (fun_app$ab ?v1 ?v2 ))(fun_app$bd ?v3 (fun_app$ba ?v4 ?v2 )))(= (fun_app$ba (fun_app$fc (comp$e (fun_app$ey (comp$a ?v5 )?v0 ))?v1 )?v2 )(fun_app$ba (fun_app$ey (comp$a (fun_app$fu (comp$s ?v5 )?v3 ))?v4 )?v2 )))):named a177 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 H_h_fun$ )(?v2 H$ )(?v3 B_b_fun$ )(?v4 H_b_fun$ )(?v5 B_nat_fun$ ))(=> (= (fun_app$bg ?v0 (fun_app$y ?v1 ?v2 ))(fun_app$bl ?v3 (fun_app$bg ?v4 ?v2 )))(= (fun_app$fv (fun_app$fw (comp$t (fun_app$fx (comp$u ?v5 )?v0 ))?v1 )?v2 )(fun_app$fv (fun_app$fx (comp$u (fun_app$fy (comp$v ?v5 )?v3 ))?v4 )?v2 )))):named a178 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 F_h_fun$ )(?v2 F$ )(?v3 A_b_fun$ )(?v4 F_a_fun$ )(?v5 B_nat_fun$ ))(=> (= (fun_app$bg ?v0 (fun_app$dv ?v1 ?v2 ))(fun_app$fz ?v3 (fun_app$bn ?v4 ?v2 )))(= (fun_app$ga (fun_app$gb (comp$w (fun_app$fx (comp$u ?v5 )?v0 ))?v1 )?v2 )(fun_app$ga (fun_app$ff (comp$h (fun_app$gc (comp$x ?v5 )?v3 ))?v4 )?v2 )))):named a179 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 H_h_fun$ )(?v2 H$ )(?v3 B_b_fun$ )(?v4 H_b_fun$ )(?v5 B_b_fun$ ))(=> (= (fun_app$bg ?v0 (fun_app$y ?v1 ?v2 ))(fun_app$bl ?v3 (fun_app$bg ?v4 ?v2 )))(= (fun_app$bg (fun_app$fd (comp$f (fun_app$ez (comp$b ?v5 )?v0 ))?v1 )?v2 )(fun_app$bg (fun_app$ez (comp$b (fun_app$gd (comp$y ?v5 )?v3 ))?v4 )?v2 )))):named a180 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 H_f_fun$ )(?v2 H$ )(?v3 B_a_fun$ )(?v4 H_b_fun$ )(?v5 A_nat_fun$ ))(=> (= (fun_app$bn ?v0 (fun_app$dk ?v1 ?v2 ))(fun_app$ds ?v3 (fun_app$bg ?v4 ?v2 )))(= (fun_app$fv (fun_app$ge (comp$z (fun_app$ff (comp$h ?v5 )?v0 ))?v1 )?v2 )(fun_app$fv (fun_app$fx (comp$u (fun_app$gf (comp$aa ?v5 )?v3 ))?v4 )?v2 )))):named a181 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 F_f_fun$ )(?v2 F$ )(?v3 A_a_fun$ )(?v4 F_a_fun$ )(?v5 A_nat_fun$ ))(=> (= (fun_app$bn ?v0 (fun_app$ak ?v1 ?v2 ))(fun_app$bq ?v3 (fun_app$bn ?v4 ?v2 )))(= (fun_app$ga (fun_app$gg (comp$ab (fun_app$ff (comp$h ?v5 )?v0 ))?v1 )?v2 )(fun_app$ga (fun_app$ff (comp$h (fun_app$gh (comp$ac ?v5 )?v3 ))?v4 )?v2 )))):named a182 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 F_f_fun$ )(?v2 F$ )(?v3 A_a_fun$ )(?v4 F_a_fun$ )(?v5 A_a_fun$ ))(=> (= (fun_app$bn ?v0 (fun_app$ak ?v1 ?v2 ))(fun_app$bq ?v3 (fun_app$bn ?v4 ?v2 )))(= (fun_app$bn (fun_app$fb (comp$d (fun_app$ex (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$bn (fun_app$ex (comp$ (fun_app$gi (comp$ad ?v5 )?v3 ))?v4 )?v2 )))):named a183 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G$ )(?v3 G_c_fun$ )(?v4 G_g_fun$ )(?v5 C_c_fun$ ))(=> (= (fun_app$bd ?v0 (fun_app$ba ?v1 ?v2 ))(fun_app$ba ?v3 (fun_app$ab ?v4 ?v2 )))(= (fun_app$ba (fun_app$ey (comp$a (fun_app$fu (comp$s ?v5 )?v0 ))?v1 )?v2 )(fun_app$ba (fun_app$fc (comp$e (fun_app$ey (comp$a ?v5 )?v3 ))?v4 )?v2 )))):named a184 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H$ )(?v3 H_b_fun$ )(?v4 H_h_fun$ )(?v5 B_nat_fun$ ))(=> (= (fun_app$bl ?v0 (fun_app$bg ?v1 ?v2 ))(fun_app$bg ?v3 (fun_app$y ?v4 ?v2 )))(= (fun_app$fv (fun_app$fx (comp$u (fun_app$fy (comp$v ?v5 )?v0 ))?v1 )?v2 )(fun_app$fv (fun_app$fw (comp$t (fun_app$fx (comp$u ?v5 )?v3 ))?v4 )?v2 )))):named a185 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 H_b_fun$ )(?v2 H$ )(?v3 F_a_fun$ )(?v4 H_f_fun$ )(?v5 A_nat_fun$ ))(=> (= (fun_app$ds ?v0 (fun_app$bg ?v1 ?v2 ))(fun_app$bn ?v3 (fun_app$dk ?v4 ?v2 )))(= (fun_app$fv (fun_app$fx (comp$u (fun_app$gf (comp$aa ?v5 )?v0 ))?v1 )?v2 )(fun_app$fv (fun_app$ge (comp$z (fun_app$ff (comp$h ?v5 )?v3 ))?v4 )?v2 )))):named a186 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 C_d_prod$ ))(member$d ?v0 (set1_sp_mu$a (put$d ?v0 ?v1 )))):named a187 ))
(assert (! (forall ((?v0 H$ )(?v1 I$ ))(member$j ?v0 (set1_sp_mu$b (put$b ?v0 ?v1 )))):named a188 ))
(assert (! (forall ((?v0 F$ )(?v1 G$ ))(member$e ?v0 (set1_sp_mu$c (put$ ?v0 ?v1 )))):named a189 ))
(assert (! (forall ((?v0 B$ )(?v1 D$ ))(member$h ?v0 (set1_sp_mu$d (put$c ?v0 ?v1 )))):named a190 ))
(assert (! (forall ((?v0 A$ )(?v1 C$ ))(member$i ?v0 (set1_sp_mu$e (put$a ?v0 ?v1 )))):named a191 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 A_b_prod$ ))(member$c ?v0 (set2_sp_mu$a (put$d ?v1 ?v0 )))):named a192 ))
(assert (! (forall ((?v0 I$ )(?v1 H$ ))(member$k ?v0 (set2_sp_mu$b (put$b ?v1 ?v0 )))):named a193 ))
(assert (! (forall ((?v0 G$ )(?v1 F$ ))(member$l ?v0 (set2_sp_mu$c (put$ ?v1 ?v0 )))):named a194 ))
(assert (! (forall ((?v0 D$ )(?v1 B$ ))(member$f ?v0 (set2_sp_mu$d (put$c ?v1 ?v0 )))):named a195 ))
(assert (! (forall ((?v0 C$ )(?v1 A$ ))(member$g ?v0 (set2_sp_mu$e (put$a ?v1 ?v0 )))):named a196 ))
(assert (! (forall ((?v0 F_b_bool_fun_fun$ )(?v1 G_d_bool_fun_fun$ ))(= (rel_sp_mu$g (conversep$ ?v0 )(conversep$a ?v1 ))(conversep$p (rel_sp_mu$j ?v0 ?v1 )))):named a197 ))
(assert (! (forall ((?v0 A_h_bool_fun_fun$ )(?v1 C_i_bool_fun_fun$ ))(= (rel_sp_mu$d (conversep$b ?v0 )(conversep$c ?v1 ))(conversep$q (rel_sp_mu$k ?v0 ?v1 )))):named a198 ))
(assert (! (forall ((?v0 B_f_bool_fun_fun$ )(?v1 D_g_bool_fun_fun$ ))(= (rel_sp_mu$j (conversep$d ?v0 )(conversep$e ?v1 ))(conversep$r (rel_sp_mu$g ?v0 ?v1 )))):named a199 ))
(assert (! (forall ((?v0 H_a_bool_fun_fun$ )(?v1 I_c_bool_fun_fun$ ))(= (rel_sp_mu$k (conversep$f ?v0 )(conversep$g ?v1 ))(conversep$s (rel_sp_mu$d ?v0 ?v1 )))):named a200 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ ))(= (rel_sp_mu$l (conversep$h ?v0 )(conversep$i ?v1 ))(conversep$t (rel_sp_mu$ ?v0 ?v1 )))):named a201 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ ))(= (rel_sp_mu$m (conversep$j ?v0 )(conversep$k ?v1 ))(conversep$u (rel_sp_mu$a ?v0 ?v1 )))):named a202 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ ))(= (rel_sp_mu$ (conversep$l ?v0 )(conversep$m ?v1 ))(conversep$v (rel_sp_mu$l ?v0 ?v1 )))):named a203 ))
(assert (! (forall ((?v0 H_f_bool_fun_fun$ )(?v1 I_g_bool_fun_fun$ ))(= (rel_sp_mu$a (conversep$n ?v0 )(conversep$o ?v1 ))(conversep$w (rel_sp_mu$m ?v0 ?v1 )))):named a204 ))
(assert (! (forall ((?v0 E_h_i_sp_mu$ ))(= (fun_app$et (map_sp_mu$j uvn$ uvo$ )?v0 )?v0 )):named a205 ))
(assert (! (forall ((?v0 E_f_g_sp_mu$ ))(= (fun_app$eu (map_sp_mu$k uvp$ uvq$ )?v0 )?v0 )):named a206 ))
(assert (! (forall ((?v0 E_b_d_sp_mu$ ))(= (fun_app$ev (map_sp_mu$l uvr$ uvs$ )?v0 )?v0 )):named a207 ))
(assert (! (forall ((?v0 E_a_c_sp_mu$ ))(= (fun_app$ew (map_sp_mu$m uvt$ uvu$ )?v0 )?v0 )):named a208 ))
(assert (! (= (map_sp_mu$j id$ id$a )id$h ):named a209 ))
(assert (! (= (map_sp_mu$k id$b id$c )id$i ):named a210 ))
(assert (! (= (map_sp_mu$l id$d id$e )id$j ):named a211 ))
(assert (! (= (map_sp_mu$m id$f id$g )id$k ):named a212 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 E_a_c_sp_mu$ )(?v3 E_b_d_sp_mu$ )(?v4 A_b_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$i ?v6 (set1_sp_mu$e ?v2 ))(and (member$h ?v7 (set1_sp_mu$d ?v3 ))(fun_app$p (fun_app$ao ?v0 ?v6 )?v7 )))(fun_app$p (fun_app$ao ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (and (member$g ?v6 (set2_sp_mu$e ?v2 ))(and (member$f ?v7 (set2_sp_mu$d ?v3 ))(fun_app$n (fun_app$af ?v1 ?v6 )?v7 )))(fun_app$n (fun_app$af ?v5 ?v6 )?v7 )))))(fun_app$cs (fun_app$ct (rel_sp_mu$ ?v4 ?v5 )?v2 )?v3 ))):named a213 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 F_h_bool_fun_fun$ )(?v5 G_i_bool_fun_fun$ ))(=> (and (fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 F$ )(?v7 H$ ))(=> (and (member$e ?v6 (set1_sp_mu$c ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$ai ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$ai ?v4 ?v6 )?v7 )))(forall ((?v6 G$ )(?v7 I$ ))(=> (and (member$l ?v6 (set2_sp_mu$c ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$z ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$z ?v5 ?v6 )?v7 )))))(fun_app$cw (fun_app$cx (rel_sp_mu$a ?v4 ?v5 )?v2 )?v3 ))):named a214 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 F_i_bool_fun_fun$ )(?v2 E_f_f_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 F_h_bool_fun_fun$ )(?v5 F_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$n ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 F$ )(?v7 H$ ))(=> (and (member$e ?v6 (set1_sp_mu$f ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$ai ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$ai ?v4 ?v6 )?v7 )))(forall ((?v6 F$ )(?v7 I$ ))(=> (and (member$e ?v6 (set2_sp_mu$f ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$gj ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$gj ?v5 ?v6 )?v7 )))))(rel_sp_mu$n ?v4 ?v5 ?v2 ?v3 ))):named a215 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 D_i_bool_fun_fun$ )(?v2 E_f_d_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 F_h_bool_fun_fun$ )(?v5 D_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$o ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 F$ )(?v7 H$ ))(=> (and (member$e ?v6 (set1_sp_mu$g ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$ai ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$ai ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 I$ ))(=> (and (member$f ?v6 (set2_sp_mu$g ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$ek ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$ek ?v5 ?v6 )?v7 )))))(rel_sp_mu$o ?v4 ?v5 ?v2 ?v3 ))):named a216 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 C_i_bool_fun_fun$ )(?v2 E_f_c_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 F_h_bool_fun_fun$ )(?v5 C_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$p ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 F$ )(?v7 H$ ))(=> (and (member$e ?v6 (set1_sp_mu$h ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$ai ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$ai ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 I$ ))(=> (and (member$g ?v6 (set2_sp_mu$h ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$ac ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$ac ?v5 ?v6 )?v7 )))))(rel_sp_mu$p ?v4 ?v5 ?v2 ?v3 ))):named a217 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 B_i_bool_fun_fun$ )(?v2 E_f_b_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 F_h_bool_fun_fun$ )(?v5 B_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$q ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 F$ )(?v7 H$ ))(=> (and (member$e ?v6 (set1_sp_mu$i ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$ai ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$ai ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 I$ ))(=> (and (member$h ?v6 (set2_sp_mu$i ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$gk ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$gk ?v5 ?v6 )?v7 )))))(rel_sp_mu$q ?v4 ?v5 ?v2 ?v3 ))):named a218 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 A_i_bool_fun_fun$ )(?v2 E_f_a_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 F_h_bool_fun_fun$ )(?v5 A_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$r ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 F$ )(?v7 H$ ))(=> (and (member$e ?v6 (set1_sp_mu$j ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$ai ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$ai ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 I$ ))(=> (and (member$i ?v6 (set2_sp_mu$j ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$gl ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$gl ?v5 ?v6 )?v7 )))))(rel_sp_mu$r ?v4 ?v5 ?v2 ?v3 ))):named a219 ))
(assert (! (forall ((?v0 D_h_bool_fun_fun$ )(?v1 F_i_bool_fun_fun$ )(?v2 E_d_f_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 D_h_bool_fun_fun$ )(?v5 F_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$s ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 H$ ))(=> (and (member$f ?v6 (set1_sp_mu$k ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$gm ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$gm ?v4 ?v6 )?v7 )))(forall ((?v6 F$ )(?v7 I$ ))(=> (and (member$e ?v6 (set2_sp_mu$k ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$gj ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$gj ?v5 ?v6 )?v7 )))))(rel_sp_mu$s ?v4 ?v5 ?v2 ?v3 ))):named a220 ))
(assert (! (forall ((?v0 D_h_bool_fun_fun$ )(?v1 D_i_bool_fun_fun$ )(?v2 E_d_d_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 D_h_bool_fun_fun$ )(?v5 D_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$t ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 H$ ))(=> (and (member$f ?v6 (set1_sp_mu$l ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$gm ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$gm ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 I$ ))(=> (and (member$f ?v6 (set2_sp_mu$l ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$ek ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$ek ?v5 ?v6 )?v7 )))))(rel_sp_mu$t ?v4 ?v5 ?v2 ?v3 ))):named a221 ))
(assert (! (forall ((?v0 D_h_bool_fun_fun$ )(?v1 C_i_bool_fun_fun$ )(?v2 E_d_c_sp_mu$ )(?v3 E_h_i_sp_mu$ )(?v4 D_h_bool_fun_fun$ )(?v5 C_i_bool_fun_fun$ ))(=> (and (rel_sp_mu$u ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 H$ ))(=> (and (member$f ?v6 (set1_sp_mu$m ?v2 ))(and (member$j ?v7 (set1_sp_mu$b ?v3 ))(fun_app$cc (fun_app$gm ?v0 ?v6 )?v7 )))(fun_app$cc (fun_app$gm ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 I$ ))(=> (and (member$g ?v6 (set2_sp_mu$m ?v2 ))(and (member$k ?v7 (set2_sp_mu$b ?v3 ))(fun_app$bw (fun_app$ac ?v1 ?v6 )?v7 )))(fun_app$bw (fun_app$ac ?v5 ?v6 )?v7 )))))(rel_sp_mu$u ?v4 ?v5 ?v2 ?v3 ))):named a222 ))
(assert (! (forall ((?v0 G_c_fun$ ))(= (fun_app$ey (comp$a id$g )?v0 )?v0 )):named a223 ))
(assert (! (forall ((?v0 H_b_fun$ ))(= (fun_app$ez (comp$b id$d )?v0 )?v0 )):named a224 ))
(assert (! (forall ((?v0 F_a_fun$ ))(= (fun_app$ex (comp$ id$f )?v0 )?v0 )):named a225 ))
(assert (! (forall ((?v0 G_c_fun$ ))(= (fun_app$ey (comp$a id$g )?v0 )?v0 )):named a226 ))
(assert (! (forall ((?v0 H_b_fun$ ))(= (fun_app$ez (comp$b id$d )?v0 )?v0 )):named a227 ))
(assert (! (forall ((?v0 F_a_fun$ ))(= (fun_app$ex (comp$ id$f )?v0 )?v0 )):named a228 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 F_h_bool_fun_fun$ ))(= (= (conversep$j ?v0 )(conversep$j ?v1 ))(= ?v0 ?v1 ))):named a229 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ ))(= (= (conversep$m ?v0 )(conversep$m ?v1 ))(= ?v0 ?v1 ))):named a230 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ ))(= (= (conversep$i ?v0 )(conversep$i ?v1 ))(= ?v0 ?v1 ))):named a231 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ ))(= (= (conversep$l ?v0 )(conversep$l ?v1 ))(= ?v0 ?v1 ))):named a232 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ ))(= (= (conversep$h ?v0 )(conversep$h ?v1 ))(= ?v0 ?v1 ))):named a233 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 H$ )(?v2 F$ ))(! (= (fun_app$m (fun_app$w (conversep$j ?v0 )?v1 )?v2 )(fun_app$cc (fun_app$ai ?v0 ?v2 )?v1 )):pattern ((fun_app$m (fun_app$w (conversep$j ?v0 )?v1 )?v2 )))):named a234 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C$ )(?v2 D$ ))(! (= (fun_app$n (fun_app$af (conversep$m ?v0 )?v1 )?v2 )(fun_app$o (fun_app$aw ?v0 ?v2 )?v1 )):pattern ((fun_app$n (fun_app$af (conversep$m ?v0 )?v1 )?v2 )))):named a235 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D$ )(?v2 C$ ))(! (= (fun_app$o (fun_app$aw (conversep$i ?v0 )?v1 )?v2 )(fun_app$n (fun_app$af ?v0 ?v2 )?v1 )):pattern ((fun_app$o (fun_app$aw (conversep$i ?v0 )?v1 )?v2 )))):named a236 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$p (fun_app$ao (conversep$l ?v0 )?v1 )?v2 )(fun_app$q (fun_app$bj ?v0 ?v2 )?v1 )):pattern ((fun_app$p (fun_app$ao (conversep$l ?v0 )?v1 )?v2 )))):named a237 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B$ )(?v2 A$ ))(! (= (fun_app$q (fun_app$bj (conversep$h ?v0 )?v1 )?v2 )(fun_app$p (fun_app$ao ?v0 ?v2 )?v1 )):pattern ((fun_app$q (fun_app$bj (conversep$h ?v0 )?v1 )?v2 )))):named a238 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ ))(= (conversep$n (conversep$j ?v0 ))?v0 )):named a239 ))
(assert (! (forall ((?v0 H_f_bool_fun_fun$ ))(= (conversep$j (conversep$n ?v0 ))?v0 )):named a240 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ ))(= (conversep$m (conversep$i ?v0 ))?v0 )):named a241 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ ))(= (conversep$i (conversep$m ?v0 ))?v0 )):named a242 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ ))(= (conversep$l (conversep$h ?v0 ))?v0 )):named a243 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ ))(= (conversep$h (conversep$l ?v0 ))?v0 )):named a244 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G$ ))(! (= (fun_app$ba (fun_app$ey (comp$a ?v0 )?v1 )?v2 )(fun_app$bd ?v0 (fun_app$ba ?v1 ?v2 ))):pattern ((fun_app$ba (fun_app$ey (comp$a ?v0 )?v1 )?v2 )))):named a245 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H$ ))(! (= (fun_app$fv (fun_app$fx (comp$u ?v0 )?v1 )?v2 )(fun_app$cq ?v0 (fun_app$bg ?v1 ?v2 ))):pattern ((fun_app$fv (fun_app$fx (comp$u ?v0 )?v1 )?v2 )))):named a246 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H$ ))(! (= (fun_app$bg (fun_app$ez (comp$b ?v0 )?v1 )?v2 )(fun_app$bl ?v0 (fun_app$bg ?v1 ?v2 ))):pattern ((fun_app$bg (fun_app$ez (comp$b ?v0 )?v1 )?v2 )))):named a247 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 F$ ))(! (= (fun_app$ga (fun_app$ff (comp$h ?v0 )?v1 )?v2 )(fun_app$cr ?v0 (fun_app$bn ?v1 ?v2 ))):pattern ((fun_app$ga (fun_app$ff (comp$h ?v0 )?v1 )?v2 )))):named a248 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 F$ ))(! (= (fun_app$bn (fun_app$ex (comp$ ?v0 )?v1 )?v2 )(fun_app$bq ?v0 (fun_app$bn ?v1 ?v2 ))):pattern ((fun_app$bn (fun_app$ex (comp$ ?v0 )?v1 )?v2 )))):named a249 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ ))(= (fun_app$dc (fun_app$dd (vimage2p$b id$g )id$e )?v0 )?v0 )):named a250 ))
(assert (! (forall ((?v0 G_i_bool_fun_fun$ ))(= (fun_app$de (fun_app$df (vimage2p$c id$c )id$a )?v0 )?v0 )):named a251 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ ))(= (fun_app$dg (fun_app$dh (vimage2p$d id$f )id$d )?v0 )?v0 )):named a252 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ ))(= (fun_app$di (fun_app$dj (vimage2p$e id$b )id$ )?v0 )?v0 )):named a253 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G_c_fun$ )(?v3 G$ ))(=> (= (fun_app$ey (comp$a ?v0 )?v1 )?v2 )(= (fun_app$bd ?v0 (fun_app$ba ?v1 ?v3 ))(fun_app$ba ?v2 ?v3 )))):named a254 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H_nat_fun$ )(?v3 H$ ))(=> (= (fun_app$fx (comp$u ?v0 )?v1 )?v2 )(= (fun_app$cq ?v0 (fun_app$bg ?v1 ?v3 ))(fun_app$fv ?v2 ?v3 )))):named a255 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H_b_fun$ )(?v3 H$ ))(=> (= (fun_app$ez (comp$b ?v0 )?v1 )?v2 )(= (fun_app$bl ?v0 (fun_app$bg ?v1 ?v3 ))(fun_app$bg ?v2 ?v3 )))):named a256 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 F_nat_fun$ )(?v3 F$ ))(=> (= (fun_app$ff (comp$h ?v0 )?v1 )?v2 )(= (fun_app$cr ?v0 (fun_app$bn ?v1 ?v3 ))(fun_app$ga ?v2 ?v3 )))):named a257 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 F_a_fun$ )(?v3 F$ ))(=> (= (fun_app$ex (comp$ ?v0 )?v1 )?v2 )(= (fun_app$bq ?v0 (fun_app$bn ?v1 ?v3 ))(fun_app$bn ?v2 ?v3 )))):named a258 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 B_nat_fun$ )(?v2 B_nat_fun$ )(?v3 H_b_fun$ ))(=> (= (fun_app$gn (comp$ae ?v0 )?v1 )?v2 )(= (fun_app$go (comp$af ?v0 )(fun_app$fx (comp$u ?v1 )?v3 ))(fun_app$fx (comp$u ?v2 )?v3 )))):named a259 ))
(assert (! (forall ((?v0 Nat_b_fun$ )(?v1 B_nat_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ ))(=> (= (fun_app$gp (comp$ag ?v0 )?v1 )?v2 )(= (fun_app$gq (comp$ah ?v0 )(fun_app$fx (comp$u ?v1 )?v3 ))(fun_app$ez (comp$b ?v2 )?v3 )))):named a260 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A_nat_fun$ )(?v2 A_nat_fun$ )(?v3 F_a_fun$ ))(=> (= (fun_app$gr (comp$ai ?v0 )?v1 )?v2 )(= (fun_app$gs (comp$aj ?v0 )(fun_app$ff (comp$h ?v1 )?v3 ))(fun_app$ff (comp$h ?v2 )?v3 )))):named a261 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 A_nat_fun$ )(?v2 A_a_fun$ )(?v3 F_a_fun$ ))(=> (= (fun_app$gt (comp$ak ?v0 )?v1 )?v2 )(= (fun_app$gu (comp$al ?v0 )(fun_app$ff (comp$h ?v1 )?v3 ))(fun_app$ex (comp$ ?v2 )?v3 )))):named a262 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 C_c_fun$ )(?v3 G_c_fun$ ))(=> (= (fun_app$fu (comp$s ?v0 )?v1 )?v2 )(= (fun_app$ey (comp$a ?v0 )(fun_app$ey (comp$a ?v1 )?v3 ))(fun_app$ey (comp$a ?v2 )?v3 )))):named a263 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 B_b_fun$ )(?v2 B_nat_fun$ )(?v3 H_b_fun$ ))(=> (= (fun_app$fy (comp$v ?v0 )?v1 )?v2 )(= (fun_app$fx (comp$u ?v0 )(fun_app$ez (comp$b ?v1 )?v3 ))(fun_app$fx (comp$u ?v2 )?v3 )))):named a264 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ ))(=> (= (fun_app$gd (comp$y ?v0 )?v1 )?v2 )(= (fun_app$ez (comp$b ?v0 )(fun_app$ez (comp$b ?v1 )?v3 ))(fun_app$ez (comp$b ?v2 )?v3 )))):named a265 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_a_fun$ )(?v2 A_nat_fun$ )(?v3 F_a_fun$ ))(=> (= (fun_app$gh (comp$ac ?v0 )?v1 )?v2 )(= (fun_app$ff (comp$h ?v0 )(fun_app$ex (comp$ ?v1 )?v3 ))(fun_app$ff (comp$h ?v2 )?v3 )))):named a266 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 F_a_fun$ ))(=> (= (fun_app$gi (comp$ad ?v0 )?v1 )?v2 )(= (fun_app$ex (comp$ ?v0 )(fun_app$ex (comp$ ?v1 )?v3 ))(fun_app$ex (comp$ ?v2 )?v3 )))):named a267 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G_c_fun$ )(?v3 G_g_fun$ ))(=> (= (fun_app$ey (comp$a ?v0 )?v1 )?v2 )(= (fun_app$ey (comp$a ?v0 )(fun_app$fc (comp$e ?v1 )?v3 ))(fun_app$fc (comp$e ?v2 )?v3 )))):named a268 ))
(assert (! (forall ((?v0 G_c_fun$ )(?v1 G_g_fun$ )(?v2 G_c_fun$ )(?v3 C_c_fun$ ))(=> (= (fun_app$fc (comp$e ?v0 )?v1 )?v2 )(= (fun_app$fc (comp$e (fun_app$ey (comp$a ?v3 )?v0 ))?v1 )(fun_app$ey (comp$a ?v3 )?v2 )))):named a269 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 H_h_fun$ )(?v2 H_b_fun$ )(?v3 B_nat_fun$ ))(=> (= (fun_app$fd (comp$f ?v0 )?v1 )?v2 )(= (fun_app$fw (comp$t (fun_app$fx (comp$u ?v3 )?v0 ))?v1 )(fun_app$fx (comp$u ?v3 )?v2 )))):named a270 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 H_h_fun$ )(?v2 H_b_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$fd (comp$f ?v0 )?v1 )?v2 )(= (fun_app$fd (comp$f (fun_app$ez (comp$b ?v3 )?v0 ))?v1 )(fun_app$ez (comp$b ?v3 )?v2 )))):named a271 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 F_f_fun$ )(?v2 F_a_fun$ )(?v3 A_nat_fun$ ))(=> (= (fun_app$fb (comp$d ?v0 )?v1 )?v2 )(= (fun_app$gg (comp$ab (fun_app$ff (comp$h ?v3 )?v0 ))?v1 )(fun_app$ff (comp$h ?v3 )?v2 )))):named a272 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 F_f_fun$ )(?v2 F_a_fun$ )(?v3 A_a_fun$ ))(=> (= (fun_app$fb (comp$d ?v0 )?v1 )?v2 )(= (fun_app$fb (comp$d (fun_app$ex (comp$ ?v3 )?v0 ))?v1 )(fun_app$ex (comp$ ?v3 )?v2 )))):named a273 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G_c_fun$ )(?v3 C_c_fun$ ))(=> (= (fun_app$ey (comp$a ?v0 )?v1 )?v2 )(= (fun_app$ey (comp$a (fun_app$fu (comp$s ?v3 )?v0 ))?v1 )(fun_app$ey (comp$a ?v3 )?v2 )))):named a274 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H_nat_fun$ )(?v3 Nat_nat_fun$ ))(=> (= (fun_app$fx (comp$u ?v0 )?v1 )?v2 )(= (fun_app$fx (comp$u (fun_app$gn (comp$ae ?v3 )?v0 ))?v1 )(fun_app$go (comp$af ?v3 )?v2 )))):named a275 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H_nat_fun$ )(?v3 Nat_b_fun$ ))(=> (= (fun_app$fx (comp$u ?v0 )?v1 )?v2 )(= (fun_app$ez (comp$b (fun_app$gp (comp$ag ?v3 )?v0 ))?v1 )(fun_app$gq (comp$ah ?v3 )?v2 )))):named a276 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H_b_fun$ )(?v3 B_nat_fun$ ))(=> (= (fun_app$ez (comp$b ?v0 )?v1 )?v2 )(= (fun_app$fx (comp$u (fun_app$fy (comp$v ?v3 )?v0 ))?v1 )(fun_app$fx (comp$u ?v3 )?v2 )))):named a277 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H_b_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$ez (comp$b ?v0 )?v1 )?v2 )(= (fun_app$ez (comp$b (fun_app$gd (comp$y ?v3 )?v0 ))?v1 )(fun_app$ez (comp$b ?v3 )?v2 )))):named a278 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 C_c_fun$ )(?v3 G_c_fun$ )(?v4 G$ ))(=> (= (fun_app$ey (comp$a ?v0 )?v1 )(fun_app$ey (comp$a ?v2 )?v3 ))(= (fun_app$bd ?v0 (fun_app$ba ?v1 ?v4 ))(fun_app$bd ?v2 (fun_app$ba ?v3 ?v4 ))))):named a279 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 B_nat_fun$ )(?v3 H_b_fun$ )(?v4 H$ ))(=> (= (fun_app$fx (comp$u ?v0 )?v1 )(fun_app$fx (comp$u ?v2 )?v3 ))(= (fun_app$cq ?v0 (fun_app$bg ?v1 ?v4 ))(fun_app$cq ?v2 (fun_app$bg ?v3 ?v4 ))))):named a280 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ )(?v4 H$ ))(=> (= (fun_app$ez (comp$b ?v0 )?v1 )(fun_app$ez (comp$b ?v2 )?v3 ))(= (fun_app$bl ?v0 (fun_app$bg ?v1 ?v4 ))(fun_app$bl ?v2 (fun_app$bg ?v3 ?v4 ))))):named a281 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 A_nat_fun$ )(?v3 F_a_fun$ )(?v4 F$ ))(=> (= (fun_app$ff (comp$h ?v0 )?v1 )(fun_app$ff (comp$h ?v2 )?v3 ))(= (fun_app$cr ?v0 (fun_app$bn ?v1 ?v4 ))(fun_app$cr ?v2 (fun_app$bn ?v3 ?v4 ))))):named a282 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 A_a_fun$ )(?v3 F_a_fun$ )(?v4 F$ ))(=> (= (fun_app$ex (comp$ ?v0 )?v1 )(fun_app$ex (comp$ ?v2 )?v3 ))(= (fun_app$bq ?v0 (fun_app$bn ?v1 ?v4 ))(fun_app$bq ?v2 (fun_app$bn ?v3 ?v4 ))))):named a283 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 C_c_fun$ )(?v3 C_c_fun$ )(?v4 G_c_fun$ )(?v5 G_c_fun$ ))(=> (and (= (fun_app$fu (comp$s ?v0 )?v1 )(fun_app$fu (comp$s ?v2 )?v3 ))(= (fun_app$ey (comp$a ?v3 )?v4 )?v5 ))(= (fun_app$ey (comp$a ?v0 )(fun_app$ey (comp$a ?v1 )?v4 ))(fun_app$ey (comp$a ?v2 )?v5 )))):named a284 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 B_b_fun$ )(?v2 Nat_nat_fun$ )(?v3 B_nat_fun$ )(?v4 H_b_fun$ )(?v5 H_nat_fun$ ))(=> (and (= (fun_app$fy (comp$v ?v0 )?v1 )(fun_app$gn (comp$ae ?v2 )?v3 ))(= (fun_app$fx (comp$u ?v3 )?v4 )?v5 ))(= (fun_app$fx (comp$u ?v0 )(fun_app$ez (comp$b ?v1 )?v4 ))(fun_app$go (comp$af ?v2 )?v5 )))):named a285 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 Nat_b_fun$ )(?v3 B_nat_fun$ )(?v4 H_b_fun$ )(?v5 H_nat_fun$ ))(=> (and (= (fun_app$gd (comp$y ?v0 )?v1 )(fun_app$gp (comp$ag ?v2 )?v3 ))(= (fun_app$fx (comp$u ?v3 )?v4 )?v5 ))(= (fun_app$ez (comp$b ?v0 )(fun_app$ez (comp$b ?v1 )?v4 ))(fun_app$gq (comp$ah ?v2 )?v5 )))):named a286 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 B_nat_fun$ )(?v2 B_nat_fun$ )(?v3 B_b_fun$ )(?v4 H_b_fun$ )(?v5 H_b_fun$ ))(=> (and (= (fun_app$gn (comp$ae ?v0 )?v1 )(fun_app$fy (comp$v ?v2 )?v3 ))(= (fun_app$ez (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$go (comp$af ?v0 )(fun_app$fx (comp$u ?v1 )?v4 ))(fun_app$fx (comp$u ?v2 )?v5 )))):named a287 ))
(assert (! (forall ((?v0 Nat_b_fun$ )(?v1 B_nat_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 H_b_fun$ )(?v5 H_b_fun$ ))(=> (and (= (fun_app$gp (comp$ag ?v0 )?v1 )(fun_app$gd (comp$y ?v2 )?v3 ))(= (fun_app$ez (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$gq (comp$ah ?v0 )(fun_app$fx (comp$u ?v1 )?v4 ))(fun_app$ez (comp$b ?v2 )?v5 )))):named a288 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 B_b_fun$ )(?v2 B_nat_fun$ )(?v3 B_b_fun$ )(?v4 H_b_fun$ )(?v5 H_b_fun$ ))(=> (and (= (fun_app$fy (comp$v ?v0 )?v1 )(fun_app$fy (comp$v ?v2 )?v3 ))(= (fun_app$ez (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$fx (comp$u ?v0 )(fun_app$ez (comp$b ?v1 )?v4 ))(fun_app$fx (comp$u ?v2 )?v5 )))):named a289 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 H_b_fun$ )(?v5 H_b_fun$ ))(=> (and (= (fun_app$gd (comp$y ?v0 )?v1 )(fun_app$gd (comp$y ?v2 )?v3 ))(= (fun_app$ez (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$ez (comp$b ?v0 )(fun_app$ez (comp$b ?v1 )?v4 ))(fun_app$ez (comp$b ?v2 )?v5 )))):named a290 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_a_fun$ )(?v2 Nat_nat_fun$ )(?v3 A_nat_fun$ )(?v4 F_a_fun$ )(?v5 F_nat_fun$ ))(=> (and (= (fun_app$gh (comp$ac ?v0 )?v1 )(fun_app$gr (comp$ai ?v2 )?v3 ))(= (fun_app$ff (comp$h ?v3 )?v4 )?v5 ))(= (fun_app$ff (comp$h ?v0 )(fun_app$ex (comp$ ?v1 )?v4 ))(fun_app$gs (comp$aj ?v2 )?v5 )))):named a291 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 Nat_a_fun$ )(?v3 A_nat_fun$ )(?v4 F_a_fun$ )(?v5 F_nat_fun$ ))(=> (and (= (fun_app$gi (comp$ad ?v0 )?v1 )(fun_app$gt (comp$ak ?v2 )?v3 ))(= (fun_app$ff (comp$h ?v3 )?v4 )?v5 ))(= (fun_app$ex (comp$ ?v0 )(fun_app$ex (comp$ ?v1 )?v4 ))(fun_app$gu (comp$al ?v2 )?v5 )))):named a292 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A_nat_fun$ )(?v2 A_nat_fun$ )(?v3 A_a_fun$ )(?v4 F_a_fun$ )(?v5 F_a_fun$ ))(=> (and (= (fun_app$gr (comp$ai ?v0 )?v1 )(fun_app$gh (comp$ac ?v2 )?v3 ))(= (fun_app$ex (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$gs (comp$aj ?v0 )(fun_app$ff (comp$h ?v1 )?v4 ))(fun_app$ff (comp$h ?v2 )?v5 )))):named a293 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 F_h_fun$ )(?v2 A_b_fun$ )(?v3 F_a_fun$ )(?v4 B_nat_fun$ )(?v5 A_nat_fun$ ))(=> (and (= (fun_app$gv (comp$am ?v0 )?v1 )(fun_app$gw (comp$an ?v2 )?v3 ))(= (fun_app$gc (comp$x ?v4 )?v2 )?v5 ))(= (fun_app$gb (comp$w (fun_app$fx (comp$u ?v4 )?v0 ))?v1 )(fun_app$ff (comp$h ?v5 )?v3 )))):named a294 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 H_f_fun$ )(?v2 B_a_fun$ )(?v3 H_b_fun$ )(?v4 A_nat_fun$ )(?v5 B_nat_fun$ ))(=> (and (= (fun_app$gx (comp$ao ?v0 )?v1 )(fun_app$gy (comp$ap ?v2 )?v3 ))(= (fun_app$gf (comp$aa ?v4 )?v2 )?v5 ))(= (fun_app$ge (comp$z (fun_app$ff (comp$h ?v4 )?v0 ))?v1 )(fun_app$fx (comp$u ?v5 )?v3 )))):named a295 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 F_a_fun$ )(?v2 H_b_fun$ )(?v3 F_h_fun$ )(?v4 B_nat_fun$ )(?v5 H_nat_fun$ ))(=> (and (= (fun_app$gw (comp$an ?v0 )?v1 )(fun_app$gv (comp$am ?v2 )?v3 ))(= (fun_app$fx (comp$u ?v4 )?v2 )?v5 ))(= (fun_app$ff (comp$h (fun_app$gc (comp$x ?v4 )?v0 ))?v1 )(fun_app$gb (comp$w ?v5 )?v3 )))):named a296 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 H_b_fun$ )(?v2 F_a_fun$ )(?v3 H_f_fun$ )(?v4 A_nat_fun$ )(?v5 F_nat_fun$ ))(=> (and (= (fun_app$gy (comp$ap ?v0 )?v1 )(fun_app$gx (comp$ao ?v2 )?v3 ))(= (fun_app$ff (comp$h ?v4 )?v2 )?v5 ))(= (fun_app$fx (comp$u (fun_app$gf (comp$aa ?v4 )?v0 ))?v1 )(fun_app$ge (comp$z ?v5 )?v3 )))):named a297 ))
(assert (! (forall ((?v0 G_c_fun$ )(?v1 G_g_fun$ )(?v2 C_c_fun$ )(?v3 G_c_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (= (fun_app$fc (comp$e ?v0 )?v1 )(fun_app$ey (comp$a ?v2 )?v3 ))(= (fun_app$fu (comp$s ?v4 )?v2 )?v5 ))(= (fun_app$fc (comp$e (fun_app$ey (comp$a ?v4 )?v0 ))?v1 )(fun_app$ey (comp$a ?v5 )?v3 )))):named a298 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 H_h_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ )(?v4 B_nat_fun$ )(?v5 B_nat_fun$ ))(=> (and (= (fun_app$fd (comp$f ?v0 )?v1 )(fun_app$ez (comp$b ?v2 )?v3 ))(= (fun_app$fy (comp$v ?v4 )?v2 )?v5 ))(= (fun_app$fw (comp$t (fun_app$fx (comp$u ?v4 )?v0 ))?v1 )(fun_app$fx (comp$u ?v5 )?v3 )))):named a299 ))
(assert (! (forall ((?v0 H_b_fun$ )(?v1 H_h_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$fd (comp$f ?v0 )?v1 )(fun_app$ez (comp$b ?v2 )?v3 ))(= (fun_app$gd (comp$y ?v4 )?v2 )?v5 ))(= (fun_app$fd (comp$f (fun_app$ez (comp$b ?v4 )?v0 ))?v1 )(fun_app$ez (comp$b ?v5 )?v3 )))):named a300 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 F_f_fun$ )(?v2 A_a_fun$ )(?v3 F_a_fun$ )(?v4 A_nat_fun$ )(?v5 A_nat_fun$ ))(=> (and (= (fun_app$fb (comp$d ?v0 )?v1 )(fun_app$ex (comp$ ?v2 )?v3 ))(= (fun_app$gh (comp$ac ?v4 )?v2 )?v5 ))(= (fun_app$gg (comp$ab (fun_app$ff (comp$h ?v4 )?v0 ))?v1 )(fun_app$ff (comp$h ?v5 )?v3 )))):named a301 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 F_f_fun$ )(?v2 A_a_fun$ )(?v3 F_a_fun$ )(?v4 A_a_fun$ )(?v5 A_a_fun$ ))(=> (and (= (fun_app$fb (comp$d ?v0 )?v1 )(fun_app$ex (comp$ ?v2 )?v3 ))(= (fun_app$gi (comp$ad ?v4 )?v2 )?v5 ))(= (fun_app$fb (comp$d (fun_app$ex (comp$ ?v4 )?v0 ))?v1 )(fun_app$ex (comp$ ?v5 )?v3 )))):named a302 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G_c_fun$ )(?v3 G_g_fun$ )(?v4 C_c_fun$ )(?v5 G_c_fun$ ))(=> (and (= (fun_app$ey (comp$a ?v0 )?v1 )(fun_app$fc (comp$e ?v2 )?v3 ))(= (fun_app$ey (comp$a ?v4 )?v2 )?v5 ))(= (fun_app$ey (comp$a (fun_app$fu (comp$s ?v4 )?v0 ))?v1 )(fun_app$fc (comp$e ?v5 )?v3 )))):named a303 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 C_c_fun$ )(?v3 G_c_fun$ ))(=> (and (= (fun_app$ey (comp$a ?v0 )?v1 )(fun_app$ey (comp$a ?v2 )?v3 ))(=> (forall ((?v4 G$ ))(= (fun_app$bd ?v0 (fun_app$ba ?v1 ?v4 ))(fun_app$bd ?v2 (fun_app$ba ?v3 ?v4 ))))false ))false )):named a304 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 B_nat_fun$ )(?v3 H_b_fun$ ))(=> (and (= (fun_app$fx (comp$u ?v0 )?v1 )(fun_app$fx (comp$u ?v2 )?v3 ))(=> (forall ((?v4 H$ ))(= (fun_app$cq ?v0 (fun_app$bg ?v1 ?v4 ))(fun_app$cq ?v2 (fun_app$bg ?v3 ?v4 ))))false ))false )):named a305 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ ))(=> (and (= (fun_app$ez (comp$b ?v0 )?v1 )(fun_app$ez (comp$b ?v2 )?v3 ))(=> (forall ((?v4 H$ ))(= (fun_app$bl ?v0 (fun_app$bg ?v1 ?v4 ))(fun_app$bl ?v2 (fun_app$bg ?v3 ?v4 ))))false ))false )):named a306 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 A_nat_fun$ )(?v3 F_a_fun$ ))(=> (and (= (fun_app$ff (comp$h ?v0 )?v1 )(fun_app$ff (comp$h ?v2 )?v3 ))(=> (forall ((?v4 F$ ))(= (fun_app$cr ?v0 (fun_app$bn ?v1 ?v4 ))(fun_app$cr ?v2 (fun_app$bn ?v3 ?v4 ))))false ))false )):named a307 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 A_a_fun$ )(?v3 F_a_fun$ ))(=> (and (= (fun_app$ex (comp$ ?v0 )?v1 )(fun_app$ex (comp$ ?v2 )?v3 ))(=> (forall ((?v4 F$ ))(= (fun_app$bq ?v0 (fun_app$bn ?v1 ?v4 ))(fun_app$bq ?v2 (fun_app$bn ?v3 ?v4 ))))false ))false )):named a308 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G$ ))(! (= (fun_app$ba (fun_app$ey (comp$a ?v0 )?v1 )?v2 )(fun_app$bd ?v0 (fun_app$ba ?v1 ?v2 ))):pattern ((fun_app$ba (fun_app$ey (comp$a ?v0 )?v1 )?v2 )))):named a309 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H$ ))(! (= (fun_app$fv (fun_app$fx (comp$u ?v0 )?v1 )?v2 )(fun_app$cq ?v0 (fun_app$bg ?v1 ?v2 ))):pattern ((fun_app$fv (fun_app$fx (comp$u ?v0 )?v1 )?v2 )))):named a310 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H$ ))(! (= (fun_app$bg (fun_app$ez (comp$b ?v0 )?v1 )?v2 )(fun_app$bl ?v0 (fun_app$bg ?v1 ?v2 ))):pattern ((fun_app$bg (fun_app$ez (comp$b ?v0 )?v1 )?v2 )))):named a311 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 F$ ))(! (= (fun_app$ga (fun_app$ff (comp$h ?v0 )?v1 )?v2 )(fun_app$cr ?v0 (fun_app$bn ?v1 ?v2 ))):pattern ((fun_app$ga (fun_app$ff (comp$h ?v0 )?v1 )?v2 )))):named a312 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 F$ ))(! (= (fun_app$bn (fun_app$ex (comp$ ?v0 )?v1 )?v2 )(fun_app$bq ?v0 (fun_app$bn ?v1 ?v2 ))):pattern ((fun_app$bn (fun_app$ex (comp$ ?v0 )?v1 )?v2 )))):named a313 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G_g_fun$ ))(= (fun_app$fc (comp$e (fun_app$ey (comp$a ?v0 )?v1 ))?v2 )(fun_app$ey (comp$a ?v0 )(fun_app$fc (comp$e ?v1 )?v2 )))):named a314 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H_h_fun$ ))(= (fun_app$fw (comp$t (fun_app$fx (comp$u ?v0 )?v1 ))?v2 )(fun_app$fx (comp$u ?v0 )(fun_app$fd (comp$f ?v1 )?v2 )))):named a315 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H_h_fun$ ))(= (fun_app$fd (comp$f (fun_app$ez (comp$b ?v0 )?v1 ))?v2 )(fun_app$ez (comp$b ?v0 )(fun_app$fd (comp$f ?v1 )?v2 )))):named a316 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 F_f_fun$ ))(= (fun_app$gg (comp$ab (fun_app$ff (comp$h ?v0 )?v1 ))?v2 )(fun_app$ff (comp$h ?v0 )(fun_app$fb (comp$d ?v1 )?v2 )))):named a317 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 F_f_fun$ ))(= (fun_app$fb (comp$d (fun_app$ex (comp$ ?v0 )?v1 ))?v2 )(fun_app$ex (comp$ ?v0 )(fun_app$fb (comp$d ?v1 )?v2 )))):named a318 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 G_c_fun$ ))(= (fun_app$ey (comp$a (fun_app$fu (comp$s ?v0 )?v1 ))?v2 )(fun_app$ey (comp$a ?v0 )(fun_app$ey (comp$a ?v1 )?v2 )))):named a319 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 B_nat_fun$ )(?v2 H_b_fun$ ))(= (fun_app$fx (comp$u (fun_app$gn (comp$ae ?v0 )?v1 ))?v2 )(fun_app$go (comp$af ?v0 )(fun_app$fx (comp$u ?v1 )?v2 )))):named a320 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 B_b_fun$ )(?v2 H_b_fun$ ))(= (fun_app$fx (comp$u (fun_app$fy (comp$v ?v0 )?v1 ))?v2 )(fun_app$fx (comp$u ?v0 )(fun_app$ez (comp$b ?v1 )?v2 )))):named a321 ))
(assert (! (forall ((?v0 Nat_b_fun$ )(?v1 B_nat_fun$ )(?v2 H_b_fun$ ))(= (fun_app$ez (comp$b (fun_app$gp (comp$ag ?v0 )?v1 ))?v2 )(fun_app$gq (comp$ah ?v0 )(fun_app$fx (comp$u ?v1 )?v2 )))):named a322 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 H_b_fun$ ))(= (fun_app$ez (comp$b (fun_app$gd (comp$y ?v0 )?v1 ))?v2 )(fun_app$ez (comp$b ?v0 )(fun_app$ez (comp$b ?v1 )?v2 )))):named a323 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 B_nat_fun$ )(?v2 H_b_fun$ ))(= (fun_app$go (comp$af ?v0 )(fun_app$fx (comp$u ?v1 )?v2 ))(fun_app$fx (comp$u (fun_app$gn (comp$ae ?v0 )?v1 ))?v2 ))):named a324 ))
(assert (! (forall ((?v0 Nat_b_fun$ )(?v1 B_nat_fun$ )(?v2 H_b_fun$ ))(= (fun_app$gq (comp$ah ?v0 )(fun_app$fx (comp$u ?v1 )?v2 ))(fun_app$ez (comp$b (fun_app$gp (comp$ag ?v0 )?v1 ))?v2 ))):named a325 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A_nat_fun$ )(?v2 F_a_fun$ ))(= (fun_app$gs (comp$aj ?v0 )(fun_app$ff (comp$h ?v1 )?v2 ))(fun_app$ff (comp$h (fun_app$gr (comp$ai ?v0 )?v1 ))?v2 ))):named a326 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 A_nat_fun$ )(?v2 F_a_fun$ ))(= (fun_app$gu (comp$al ?v0 )(fun_app$ff (comp$h ?v1 )?v2 ))(fun_app$ex (comp$ (fun_app$gt (comp$ak ?v0 )?v1 ))?v2 ))):named a327 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G_g_fun$ ))(= (fun_app$ey (comp$a ?v0 )(fun_app$fc (comp$e ?v1 )?v2 ))(fun_app$fc (comp$e (fun_app$ey (comp$a ?v0 )?v1 ))?v2 ))):named a328 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 G_c_fun$ ))(= (fun_app$ey (comp$a ?v0 )(fun_app$ey (comp$a ?v1 )?v2 ))(fun_app$ey (comp$a (fun_app$fu (comp$s ?v0 )?v1 ))?v2 ))):named a329 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H_h_fun$ ))(= (fun_app$fx (comp$u ?v0 )(fun_app$fd (comp$f ?v1 )?v2 ))(fun_app$fw (comp$t (fun_app$fx (comp$u ?v0 )?v1 ))?v2 ))):named a330 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 B_b_fun$ )(?v2 H_b_fun$ ))(= (fun_app$fx (comp$u ?v0 )(fun_app$ez (comp$b ?v1 )?v2 ))(fun_app$fx (comp$u (fun_app$fy (comp$v ?v0 )?v1 ))?v2 ))):named a331 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H_h_fun$ ))(= (fun_app$ez (comp$b ?v0 )(fun_app$fd (comp$f ?v1 )?v2 ))(fun_app$fd (comp$f (fun_app$ez (comp$b ?v0 )?v1 ))?v2 ))):named a332 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 H_b_fun$ ))(= (fun_app$ez (comp$b ?v0 )(fun_app$ez (comp$b ?v1 )?v2 ))(fun_app$ez (comp$b (fun_app$gd (comp$y ?v0 )?v1 ))?v2 ))):named a333 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 F$ )(?v2 H$ ))(=> (fun_app$cc (fun_app$ai ?v0 ?v1 )?v2 )(fun_app$m (fun_app$w (conversep$j ?v0 )?v2 )?v1 ))):named a334 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D$ )(?v2 C$ ))(=> (fun_app$o (fun_app$aw ?v0 ?v1 )?v2 )(fun_app$n (fun_app$af (conversep$m ?v0 )?v2 )?v1 ))):named a335 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C$ )(?v2 D$ ))(=> (fun_app$n (fun_app$af ?v0 ?v1 )?v2 )(fun_app$o (fun_app$aw (conversep$i ?v0 )?v2 )?v1 ))):named a336 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 A$ ))(=> (fun_app$q (fun_app$bj ?v0 ?v1 )?v2 )(fun_app$p (fun_app$ao (conversep$l ?v0 )?v2 )?v1 ))):named a337 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 B$ ))(=> (fun_app$p (fun_app$ao ?v0 ?v1 )?v2 )(fun_app$q (fun_app$bj (conversep$h ?v0 )?v2 )?v1 ))):named a338 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 H$ )(?v2 F$ ))(=> (fun_app$m (fun_app$w (conversep$j ?v0 )?v1 )?v2 )(fun_app$cc (fun_app$ai ?v0 ?v2 )?v1 ))):named a339 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C$ )(?v2 D$ ))(=> (fun_app$n (fun_app$af (conversep$m ?v0 )?v1 )?v2 )(fun_app$o (fun_app$aw ?v0 ?v2 )?v1 ))):named a340 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D$ )(?v2 C$ ))(=> (fun_app$o (fun_app$aw (conversep$i ?v0 )?v1 )?v2 )(fun_app$n (fun_app$af ?v0 ?v2 )?v1 ))):named a341 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A$ )(?v2 B$ ))(=> (fun_app$p (fun_app$ao (conversep$l ?v0 )?v1 )?v2 )(fun_app$q (fun_app$bj ?v0 ?v2 )?v1 ))):named a342 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B$ )(?v2 A$ ))(=> (fun_app$q (fun_app$bj (conversep$h ?v0 )?v1 )?v2 )(fun_app$p (fun_app$ao ?v0 ?v2 )?v1 ))):named a343 ))
(assert (! (forall ((?v0 E_a_b_prod_c_d_prod_sp_mu_bool_fun$ )(?v1 E_a_b_prod_c_d_prod_sp_mu_bool_fun$ ))(=> (forall ((?v2 E_a_b_prod_c_d_prod_sp_mu$ ))(= (fun_app$h ?v0 ?v2 )(fun_app$h ?v1 ?v2 )))(= (collect$d ?v0 )(collect$d ?v1 )))):named a344 ))
(assert (! (forall ((?v0 G_i_prod_bool_fun$ )(?v1 G_i_prod_bool_fun$ ))(=> (forall ((?v2 G_i_prod$ ))(= (fun_app$i ?v0 ?v2 )(fun_app$i ?v1 ?v2 )))(= (collect$a ?v0 )(collect$a ?v1 )))):named a345 ))
(assert (! (forall ((?v0 F_h_prod_bool_fun$ )(?v1 F_h_prod_bool_fun$ ))(=> (forall ((?v2 F_h_prod$ ))(= (fun_app$j ?v0 ?v2 )(fun_app$j ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a346 ))
(assert (! (forall ((?v0 C_d_prod_bool_fun$ )(?v1 C_d_prod_bool_fun$ ))(=> (forall ((?v2 C_d_prod$ ))(= (fun_app$k ?v0 ?v2 )(fun_app$k ?v1 ?v2 )))(= (collect$c ?v0 )(collect$c ?v1 )))):named a347 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A_b_prod_bool_fun$ ))(=> (forall ((?v2 A_b_prod$ ))(= (fun_app$l ?v0 ?v2 )(fun_app$l ?v1 ?v2 )))(= (collect$b ?v0 )(collect$b ?v1 )))):named a348 ))
(assert (! (forall ((?v0 F_set$ ))(= (collect$e (uvv$ ?v0 ))?v0 )):named a349 ))
(assert (! (forall ((?v0 D_set$ ))(= (collect$f (uvw$ ?v0 ))?v0 )):named a350 ))
(assert (! (forall ((?v0 C_set$ ))(= (collect$g (uvx$ ?v0 ))?v0 )):named a351 ))
(assert (! (forall ((?v0 B_set$ ))(= (collect$h (uvy$ ?v0 ))?v0 )):named a352 ))
(assert (! (forall ((?v0 A_set$ ))(= (collect$i (uvz$ ?v0 ))?v0 )):named a353 ))
(assert (! (forall ((?v0 E_a_b_prod_c_d_prod_sp_mu_set$ ))(= (collect$d (uwa$ ?v0 ))?v0 )):named a354 ))
(assert (! (forall ((?v0 G_i_prod_set$ ))(= (collect$a (uwb$ ?v0 ))?v0 )):named a355 ))
(assert (! (forall ((?v0 F_h_prod_set$ ))(= (collect$ (uwc$ ?v0 ))?v0 )):named a356 ))
(assert (! (forall ((?v0 C_d_prod_set$ ))(= (collect$c (uwd$ ?v0 ))?v0 )):named a357 ))
(assert (! (forall ((?v0 A_b_prod_set$ ))(= (collect$b (uwe$ ?v0 ))?v0 )):named a358 ))
(assert (! (forall ((?v0 F$ )(?v1 F_bool_fun$ ))(= (member$e ?v0 (collect$e ?v1 ))(fun_app$m ?v1 ?v0 ))):named a359 ))
(assert (! (forall ((?v0 D$ )(?v1 D_bool_fun$ ))(= (member$f ?v0 (collect$f ?v1 ))(fun_app$n ?v1 ?v0 ))):named a360 ))
(assert (! (forall ((?v0 C$ )(?v1 C_bool_fun$ ))(= (member$g ?v0 (collect$g ?v1 ))(fun_app$o ?v1 ?v0 ))):named a361 ))
(assert (! (forall ((?v0 B$ )(?v1 B_bool_fun$ ))(= (member$h ?v0 (collect$h ?v1 ))(fun_app$p ?v1 ?v0 ))):named a362 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(= (member$i ?v0 (collect$i ?v1 ))(fun_app$q ?v1 ?v0 ))):named a363 ))
(assert (! (forall ((?v0 E_a_b_prod_c_d_prod_sp_mu$ )(?v1 E_a_b_prod_c_d_prod_sp_mu_bool_fun$ ))(= (member$ ?v0 (collect$d ?v1 ))(fun_app$h ?v1 ?v0 ))):named a364 ))
(assert (! (forall ((?v0 G_i_prod$ )(?v1 G_i_prod_bool_fun$ ))(= (member$a ?v0 (collect$a ?v1 ))(fun_app$i ?v1 ?v0 ))):named a365 ))
(assert (! (forall ((?v0 F_h_prod$ )(?v1 F_h_prod_bool_fun$ ))(= (member$b ?v0 (collect$ ?v1 ))(fun_app$j ?v1 ?v0 ))):named a366 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod_bool_fun$ ))(= (member$c ?v0 (collect$c ?v1 ))(fun_app$k ?v1 ?v0 ))):named a367 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_bool_fun$ ))(= (member$d ?v0 (collect$b ?v1 ))(fun_app$l ?v1 ?v0 ))):named a368 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 H$ )(?v2 F$ ))(=> (and (fun_app$m (fun_app$w (conversep$j ?v0 )?v1 )?v2 )(forall ((?v3 F$ )(?v4 H$ ))(=> (and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$cc (fun_app$ai ?v0 ?v3 )?v4 )))false )))false )):named a369 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C$ )(?v2 D$ ))(=> (and (fun_app$n (fun_app$af (conversep$m ?v0 )?v1 )?v2 )(forall ((?v3 D$ )(?v4 C$ ))(=> (and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$o (fun_app$aw ?v0 ?v3 )?v4 )))false )))false )):named a370 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D$ )(?v2 C$ ))(=> (and (fun_app$o (fun_app$aw (conversep$i ?v0 )?v1 )?v2 )(forall ((?v3 C$ )(?v4 D$ ))(=> (and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$n (fun_app$af ?v0 ?v3 )?v4 )))false )))false )):named a371 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A$ )(?v2 B$ ))(=> (and (fun_app$p (fun_app$ao (conversep$l ?v0 )?v1 )?v2 )(forall ((?v3 B$ )(?v4 A$ ))(=> (and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$q (fun_app$bj ?v0 ?v3 )?v4 )))false )))false )):named a372 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B$ )(?v2 A$ ))(=> (and (fun_app$q (fun_app$bj (conversep$h ?v0 )?v1 )?v2 )(forall ((?v3 A$ )(?v4 B$ ))(=> (and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$p (fun_app$ao ?v0 ?v3 )?v4 )))false )))false )):named a373 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 H$ )(?v2 F$ ))(= (fun_app$m (fun_app$w (conversep$j ?v0 )?v1 )?v2 )(exists ((?v3 F$ )(?v4 H$ ))(and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$cc (fun_app$ai ?v0 ?v3 )?v4 )))))):named a374 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C$ )(?v2 D$ ))(= (fun_app$n (fun_app$af (conversep$m ?v0 )?v1 )?v2 )(exists ((?v3 D$ )(?v4 C$ ))(and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$o (fun_app$aw ?v0 ?v3 )?v4 )))))):named a375 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D$ )(?v2 C$ ))(= (fun_app$o (fun_app$aw (conversep$i ?v0 )?v1 )?v2 )(exists ((?v3 C$ )(?v4 D$ ))(and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$n (fun_app$af ?v0 ?v3 )?v4 )))))):named a376 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A$ )(?v2 B$ ))(= (fun_app$p (fun_app$ao (conversep$l ?v0 )?v1 )?v2 )(exists ((?v3 B$ )(?v4 A$ ))(and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$q (fun_app$bj ?v0 ?v3 )?v4 )))))):named a377 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B$ )(?v2 A$ ))(= (fun_app$q (fun_app$bj (conversep$h ?v0 )?v1 )?v2 )(exists ((?v3 A$ )(?v4 B$ ))(and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$p (fun_app$ao ?v0 ?v3 )?v4 )))))):named a378 ))
(assert (! (forall ((?v0 G_c_fun$ ))(= (fun_app$ey (comp$a uvu$ )?v0 )?v0 )):named a379 ))
(assert (! (forall ((?v0 H_b_fun$ ))(= (fun_app$ez (comp$b uvr$ )?v0 )?v0 )):named a380 ))
(assert (! (forall ((?v0 F_a_fun$ ))(= (fun_app$ex (comp$ uvt$ )?v0 )?v0 )):named a381 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G_c_fun$ )(?v3 G$ ))(=> (= (fun_app$ey (comp$a ?v0 )?v1 )(fun_app$ey (comp$a id$g )?v2 ))(= (fun_app$bd ?v0 (fun_app$ba ?v1 ?v3 ))(fun_app$ba ?v2 ?v3 )))):named a382 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H_nat_fun$ )(?v3 H$ ))(=> (= (fun_app$fx (comp$u ?v0 )?v1 )(fun_app$go (comp$af id$l )?v2 ))(= (fun_app$cq ?v0 (fun_app$bg ?v1 ?v3 ))(fun_app$fv ?v2 ?v3 )))):named a383 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H_b_fun$ )(?v3 H$ ))(=> (= (fun_app$ez (comp$b ?v0 )?v1 )(fun_app$ez (comp$b id$d )?v2 ))(= (fun_app$bl ?v0 (fun_app$bg ?v1 ?v3 ))(fun_app$bg ?v2 ?v3 )))):named a384 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 F_nat_fun$ )(?v3 F$ ))(=> (= (fun_app$ff (comp$h ?v0 )?v1 )(fun_app$gs (comp$aj id$l )?v2 ))(= (fun_app$cr ?v0 (fun_app$bn ?v1 ?v3 ))(fun_app$ga ?v2 ?v3 )))):named a385 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 F_a_fun$ )(?v3 F$ ))(=> (= (fun_app$ex (comp$ ?v0 )?v1 )(fun_app$ex (comp$ id$f )?v2 ))(= (fun_app$bq ?v0 (fun_app$bn ?v1 ?v3 ))(fun_app$bn ?v2 ?v3 )))):named a386 ))
(assert (! (= (comp$a id$g )id$m ):named a387 ))
(assert (! (= (comp$b id$d )id$n ):named a388 ))
(assert (! (= (comp$ id$f )id$o ):named a389 ))
(assert (! (forall ((?v0 F_a_fun$ )(?v1 F_f_fun$ )(?v2 H_b_fun$ )(?v3 H_h_fun$ ))(= (fun_app$cz (vimage2p$ (fun_app$fb (comp$d ?v0 )?v1 ))(fun_app$fd (comp$f ?v2 )?v3 ))(fun_app$gz (comp$aq (fun_app$dj (vimage2p$e ?v1 )?v3 ))(fun_app$cz (vimage2p$ ?v0 )?v2 )))):named a390 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ ))(= (fun_app$cz (vimage2p$ (fun_app$ex (comp$ ?v0 )?v1 ))(fun_app$ez (comp$b ?v2 )?v3 ))(fun_app$ha (comp$ar (fun_app$cz (vimage2p$ ?v1 )?v3 ))(fun_app$dh (vimage2p$d ?v0 )?v2 )))):named a391 ))
(assert (! (forall ((?v0 G_c_fun$ )(?v1 G_g_fun$ )(?v2 I_d_fun$ )(?v3 I_i_fun$ ))(= (fun_app$db (vimage2p$a (fun_app$fc (comp$e ?v0 )?v1 ))(fun_app$fe (comp$g ?v2 )?v3 ))(fun_app$hb (comp$as (fun_app$df (vimage2p$c ?v1 )?v3 ))(fun_app$db (vimage2p$a ?v0 )?v2 )))):named a392 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 D_d_fun$ )(?v3 I_d_fun$ ))(= (fun_app$db (vimage2p$a (fun_app$ey (comp$a ?v0 )?v1 ))(fun_app$fa (comp$c ?v2 )?v3 ))(fun_app$hc (comp$at (fun_app$db (vimage2p$a ?v1 )?v3 ))(fun_app$dd (vimage2p$b ?v0 )?v2 )))):named a393 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 B_nat_fun$ )(?v3 H_b_fun$ ))(= (fun_app$hd (vimage2p$f (fun_app$ff (comp$h ?v0 )?v1 ))(fun_app$fx (comp$u ?v2 )?v3 ))(fun_app$he (comp$au (fun_app$cz (vimage2p$ ?v1 )?v3 ))(fun_app$hf (vimage2p$g ?v0 )?v2 )))):named a394 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 B_b_fun$ )(?v3 H_b_fun$ ))(= (fun_app$hg (vimage2p$h (fun_app$ff (comp$h ?v0 )?v1 ))(fun_app$ez (comp$b ?v2 )?v3 ))(fun_app$hh (comp$av (fun_app$cz (vimage2p$ ?v1 )?v3 ))(fun_app$hi (vimage2p$i ?v0 )?v2 )))):named a395 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 B_nat_fun$ )(?v3 H_b_fun$ ))(= (fun_app$hj (vimage2p$j (fun_app$ex (comp$ ?v0 )?v1 ))(fun_app$fx (comp$u ?v2 )?v3 ))(fun_app$hk (comp$aw (fun_app$cz (vimage2p$ ?v1 )?v3 ))(fun_app$hl (vimage2p$k ?v0 )?v2 )))):named a396 ))
(assert (! (forall ((?v0 G_c_fun$ )(?v1 C_g_fun$ )(?v2 I_d_fun$ )(?v3 D_i_fun$ ))(= (fun_app$dd (vimage2p$b (fun_app$fl (comp$n ?v0 )?v1 ))(fun_app$fn (comp$p ?v2 )?v3 ))(fun_app$hm (comp$ax (fun_app$hn (vimage2p$l ?v1 )?v3 ))(fun_app$db (vimage2p$a ?v0 )?v2 )))):named a397 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ )(?v2 D_d_fun$ )(?v3 D_d_fun$ ))(= (fun_app$dd (vimage2p$b (fun_app$fu (comp$s ?v0 )?v1 ))(fun_app$ho (comp$ay ?v2 )?v3 ))(fun_app$hp (comp$az (fun_app$dd (vimage2p$b ?v1 )?v3 ))(fun_app$dd (vimage2p$b ?v0 )?v2 )))):named a398 ))
(assert (! (forall ((?v0 C_g_fun$ )(?v1 G_c_fun$ )(?v2 D_i_fun$ )(?v3 I_d_fun$ ))(= (fun_app$df (vimage2p$c (fun_app$fh (comp$j ?v0 )?v1 ))(fun_app$fj (comp$l ?v2 )?v3 ))(fun_app$hq (comp$ba (fun_app$db (vimage2p$a ?v1 )?v3 ))(fun_app$hn (vimage2p$l ?v0 )?v2 )))):named a399 ))
(assert (! (forall ((?v0 C$ )(?v1 G_c_fun$ )(?v2 G$ ))(= (fun_app$ba (fun_app$ey (comp$a (uwf$ ?v0 ))?v1 )?v2 )?v0 )):named a400 ))
(assert (! (forall ((?v0 Nat$ )(?v1 H_b_fun$ )(?v2 H$ ))(= (fun_app$fv (fun_app$fx (comp$u (uwg$ ?v0 ))?v1 )?v2 )?v0 )):named a401 ))
(assert (! (forall ((?v0 B$ )(?v1 H_b_fun$ )(?v2 H$ ))(= (fun_app$bg (fun_app$ez (comp$b (uwh$ ?v0 ))?v1 )?v2 )?v0 )):named a402 ))
(assert (! (forall ((?v0 Nat$ )(?v1 F_a_fun$ )(?v2 F$ ))(= (fun_app$ga (fun_app$ff (comp$h (uwi$ ?v0 ))?v1 )?v2 )?v0 )):named a403 ))
(assert (! (forall ((?v0 A$ )(?v1 F_a_fun$ )(?v2 F$ ))(= (fun_app$bn (fun_app$ex (comp$ (uwj$ ?v0 ))?v1 )?v2 )?v0 )):named a404 ))
(assert (! (forall ((?v0 H_bool_fun$ )(?v1 I_bool_fun$ )(?v2 H$ )(?v3 I$ ))(! (= (pred_sp_mu$ ?v0 ?v1 (put$b ?v2 ?v3 ))(and (fun_app$cc ?v0 ?v2 )(fun_app$bw ?v1 ?v3 ))):pattern ((pred_sp_mu$ ?v0 ?v1 (put$b ?v2 ?v3 ))))):named a405 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 D_bool_fun$ )(?v2 B$ )(?v3 D$ ))(! (= (pred_sp_mu$a ?v0 ?v1 (put$c ?v2 ?v3 ))(and (fun_app$p ?v0 ?v2 )(fun_app$n ?v1 ?v3 ))):pattern ((pred_sp_mu$a ?v0 ?v1 (put$c ?v2 ?v3 ))))):named a406 ))
(assert (! (forall ((?v0 F_bool_fun$ )(?v1 G_bool_fun$ )(?v2 F$ )(?v3 G$ ))(! (= (pred_sp_mu$b ?v0 ?v1 (put$ ?v2 ?v3 ))(and (fun_app$m ?v0 ?v2 )(fun_app$br ?v1 ?v3 ))):pattern ((pred_sp_mu$b ?v0 ?v1 (put$ ?v2 ?v3 ))))):named a407 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 C_bool_fun$ )(?v2 A$ )(?v3 C$ ))(! (= (pred_sp_mu$c ?v0 ?v1 (put$a ?v2 ?v3 ))(and (fun_app$q ?v0 ?v2 )(fun_app$o ?v1 ?v3 ))):pattern ((pred_sp_mu$c ?v0 ?v1 (put$a ?v2 ?v3 ))))):named a408 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 A_nat_fun$ )(?v2 C_nat_fun$ )(?v3 F_a_fun$ )(?v4 G_c_fun$ ))(= (comp$bb (size_sp_mu$ ?v0 ?v1 ?v2 )(map_sp_mu$ ?v3 ?v4 ))(size_sp_mu$a ?v0 (fun_app$ff (comp$h ?v1 )?v3 )(comp$bc ?v2 ?v4 )))):named a409 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 B_nat_fun$ )(?v2 D_nat_fun$ )(?v3 H_b_fun$ )(?v4 I_d_fun$ ))(= (comp$bd (size_sp_mu$b ?v0 ?v1 ?v2 )(map_sp_mu$a ?v3 ?v4 ))(size_sp_mu$c ?v0 (fun_app$fx (comp$u ?v1 )?v3 )(fun_app$hr (comp$be ?v2 )?v4 )))):named a410 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 B_nat_fun$ )(?v2 D_nat_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ ))(= (comp$bf (size_sp_mu$b ?v0 ?v1 ?v2 )(map_sp_mu$l ?v3 ?v4 ))(size_sp_mu$b ?v0 (fun_app$fy (comp$v ?v1 )?v3 )(fun_app$hs (comp$bg ?v2 )?v4 )))):named a411 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 B_nat_fun$ )(?v2 D_nat_fun$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ ))(= (comp$bh (size_sp_mu$b ?v0 ?v1 ?v2 )(map_sp_mu$r ?v3 ?v4 ))(size_sp_mu$ ?v0 (fun_app$gc (comp$x ?v1 )?v3 )(fun_app$ht (comp$bi ?v2 )?v4 )))):named a412 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 B_nat_fun$ )(?v2 D_nat_fun$ )(?v3 F_b_fun$ )(?v4 G_d_fun$ ))(= (comp$bj (size_sp_mu$b ?v0 ?v1 ?v2 )(map_sp_mu$h ?v3 ?v4 ))(size_sp_mu$a ?v0 (fun_app$hu (comp$bk ?v1 )?v3 )(comp$bl ?v2 ?v4 )))):named a413 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 H_nat_fun$ )(?v2 I_nat_fun$ )(?v3 B_h_fun$ )(?v4 D_i_fun$ ))(= (comp$bm (size_sp_mu$c ?v0 ?v1 ?v2 )(map_sp_mu$d ?v3 ?v4 ))(size_sp_mu$b ?v0 (fun_app$hv (comp$bn ?v1 )?v3 )(fun_app$hw (comp$bo ?v2 )?v4 )))):named a414 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 H_nat_fun$ )(?v2 I_nat_fun$ )(?v3 H_h_fun$ )(?v4 I_i_fun$ ))(= (comp$bp (size_sp_mu$c ?v0 ?v1 ?v2 )(map_sp_mu$j ?v3 ?v4 ))(size_sp_mu$c ?v0 (fun_app$fw (comp$t ?v1 )?v3 )(fun_app$hx (comp$bq ?v2 )?v4 )))):named a415 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 H_nat_fun$ )(?v2 I_nat_fun$ )(?v3 A_h_fun$ )(?v4 C_i_fun$ ))(= (comp$br (size_sp_mu$c ?v0 ?v1 ?v2 )(map_sp_mu$i ?v3 ?v4 ))(size_sp_mu$ ?v0 (fun_app$hy (comp$bs ?v1 )?v3 )(fun_app$hz (comp$bt ?v2 )?v4 )))):named a416 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 H_nat_fun$ )(?v2 I_nat_fun$ )(?v3 F_h_fun$ )(?v4 G_i_fun$ ))(= (comp$bu (size_sp_mu$c ?v0 ?v1 ?v2 )(map_sp_mu$g ?v3 ?v4 ))(size_sp_mu$a ?v0 (fun_app$gb (comp$w ?v1 )?v3 )(comp$bv ?v2 ?v4 )))):named a417 ))
(assert (! (forall ((?v0 E_nat_fun$ )(?v1 A_nat_fun$ )(?v2 C_nat_fun$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ ))(= (comp$bw (size_sp_mu$ ?v0 ?v1 ?v2 )(map_sp_mu$f ?v3 ?v4 ))(size_sp_mu$b ?v0 (fun_app$gf (comp$aa ?v1 )?v3 )(fun_app$ia (comp$bx ?v2 )?v4 )))):named a418 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 G_c_fun$ )(?v2 G$ )(?v3 C_c_fun$ )(?v4 G_c_fun$ )(?v5 G$ ))(=> (= (fun_app$bd ?v0 (fun_app$ba ?v1 ?v2 ))(fun_app$bd ?v3 (fun_app$ba ?v4 ?v5 )))(= (fun_app$ba (fun_app$ey (comp$a ?v0 )?v1 )?v2 )(fun_app$ba (fun_app$ey (comp$a ?v3 )?v4 )?v5 )))):named a419 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H$ )(?v3 B_nat_fun$ )(?v4 H_b_fun$ )(?v5 H$ ))(=> (= (fun_app$cq ?v0 (fun_app$bg ?v1 ?v2 ))(fun_app$cq ?v3 (fun_app$bg ?v4 ?v5 )))(= (fun_app$fv (fun_app$fx (comp$u ?v0 )?v1 )?v2 )(fun_app$fv (fun_app$fx (comp$u ?v3 )?v4 )?v5 )))):named a420 ))
(assert (! (forall ((?v0 B_nat_fun$ )(?v1 H_b_fun$ )(?v2 H$ )(?v3 A_nat_fun$ )(?v4 F_a_fun$ )(?v5 F$ ))(=> (= (fun_app$cq ?v0 (fun_app$bg ?v1 ?v2 ))(fun_app$cr ?v3 (fun_app$bn ?v4 ?v5 )))(= (fun_app$fv (fun_app$fx (comp$u ?v0 )?v1 )?v2 )(fun_app$ga (fun_app$ff (comp$h ?v3 )?v4 )?v5 )))):named a421 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 H_b_fun$ )(?v2 H$ )(?v3 B_b_fun$ )(?v4 H_b_fun$ )(?v5 H$ ))(=> (= (fun_app$bl ?v0 (fun_app$bg ?v1 ?v2 ))(fun_app$bl ?v3 (fun_app$bg ?v4 ?v5 )))(= (fun_app$bg (fun_app$ez (comp$b ?v0 )?v1 )?v2 )(fun_app$bg (fun_app$ez (comp$b ?v3 )?v4 )?v5 )))):named a422 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 F$ )(?v3 B_nat_fun$ )(?v4 H_b_fun$ )(?v5 H$ ))(=> (= (fun_app$cr ?v0 (fun_app$bn ?v1 ?v2 ))(fun_app$cq ?v3 (fun_app$bg ?v4 ?v5 )))(= (fun_app$ga (fun_app$ff (comp$h ?v0 )?v1 )?v2 )(fun_app$fv (fun_app$fx (comp$u ?v3 )?v4 )?v5 )))):named a423 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 F_a_fun$ )(?v2 F$ )(?v3 A_nat_fun$ )(?v4 F_a_fun$ )(?v5 F$ ))(=> (= (fun_app$cr ?v0 (fun_app$bn ?v1 ?v2 ))(fun_app$cr ?v3 (fun_app$bn ?v4 ?v5 )))(= (fun_app$ga (fun_app$ff (comp$h ?v0 )?v1 )?v2 )(fun_app$ga (fun_app$ff (comp$h ?v3 )?v4 )?v5 )))):named a424 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 F_a_fun$ )(?v2 F$ )(?v3 A_a_fun$ )(?v4 F_a_fun$ )(?v5 F$ ))(=> (= (fun_app$bq ?v0 (fun_app$bn ?v1 ?v2 ))(fun_app$bq ?v3 (fun_app$bn ?v4 ?v5 )))(= (fun_app$bn (fun_app$ex (comp$ ?v0 )?v1 )?v2 )(fun_app$bn (fun_app$ex (comp$ ?v3 )?v4 )?v5 )))):named a425 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 E_a_c_sp_mu$ )(?v3 E_b_d_sp_mu$ ))(= (fun_app$cs (fun_app$ct (rel_sp_mu$ ?v0 ?v1 )?v2 )?v3 )(exists ((?v4 E_a_b_prod_c_d_prod_sp_mu$ ))(and (member$ ?v4 (collect$d (fun_app$s (uwk$ ?v0 )?v1 )))(and (= (map_sp_mu$q uwl$ uwm$ ?v4 )?v2 )(= (map_sp_mu$s uwn$ uwo$ ?v4 )?v3 )))))):named a426 ))
(assert (! (forall ((?v0 F_h_bool_fun_fun$ )(?v1 G_i_bool_fun_fun$ )(?v2 E_f_g_sp_mu$ )(?v3 E_h_i_sp_mu$ ))(= (fun_app$cw (fun_app$cx (rel_sp_mu$a ?v0 ?v1 )?v2 )?v3 )(exists ((?v4 E_f_h_prod_g_i_prod_sp_mu$ ))(and (member$m ?v4 (collect$j (uwp$ ?v0 ?v1 )))(and (= (map_sp_mu$t uwq$ uwr$ ?v4 )?v2 )(= (map_sp_mu$u uws$ uwt$ ?v4 )?v3 )))))):named a427 ))
(check-sat )
;(get-unsat-core )
