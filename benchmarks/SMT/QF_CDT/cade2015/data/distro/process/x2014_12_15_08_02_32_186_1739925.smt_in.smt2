;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_process$ 0)
(declare-fun prefOf$ (A_process$)A$)
(declare-fun contOf$ (A_process$)A_process$)
(declare-fun action$ (A$ A_process$ )A_process$)
(declare-fun ch1Of$ (A_process$)A_process$)
(declare-fun ch2Of$ (A_process$)A_process$)
(declare-fun choice$ (A_process$ A_process$ )A_process$)
(declare-fun p$ ()A_process$ )
(declare-fun isAction$ (A_process$ )Bool )
(declare-fun isChoice$ (A_process$ )Bool )
(assert (! (not (or (isAction$ p$ )(isChoice$ p$ ))):named a0 ))
(check-sat )
;(get-unsat-core )
