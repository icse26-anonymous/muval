;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-datatypes ()((A_list$ (nil$ )(cons$ (hd$ A$ )(tl$ A_list$ )))))
(declare-sort A_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun ma$ ()Nat$ )
(declare-fun na$ ()Nat$ )
(declare-fun sa$ ()A_stream$ )
(declare-fun min$ (Nat$ Nat$ )Nat$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun take$ (Nat$ A_list$ )A_list$ )
(declare-fun stake$ (Nat$ A_stream$ )A_list$ )
(declare-fun replicate$ (Nat$ A$ )A_list$ )
(assert (! (not (= (take$ na$ (stake$ (suc$ ma$ )sa$ ))(stake$ (min$ na$ (suc$ ma$ ))sa$ ))):named a0 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (take$ ?v0 (stake$ ma$ ?v1 ))(stake$ (min$ ?v0 ma$ )?v1 ))):named a1 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 A_list$ ))(= (take$ ?v0 (take$ ?v1 ?v2 ))(take$ (min$ ?v0 ?v1 )?v2 ))):named a2 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (min$ (suc$ ?v0 )(suc$ ?v1 ))(suc$ (min$ ?v0 ?v1 )))):named a3 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (min$ (min$ ?v0 ?v1 )?v1 )(min$ ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (min$ ?v0 (min$ ?v0 ?v1 ))(min$ ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 Nat$ ))(= (min$ ?v0 ?v0 )?v0 )):named a6 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ ))(=> (forall ((?v2 Nat$ ))(= (take$ ?v2 ?v0 )(take$ ?v2 ?v1 )))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (min$ (min$ ?v0 ?v1 )?v2 )(min$ ?v0 (min$ ?v1 ?v2 )))):named a10 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (min$ ?v0 (min$ ?v1 ?v2 ))(min$ ?v1 (min$ ?v0 ?v2 )))):named a11 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (min$ ?v0 ?v1 )(min$ ?v1 ?v0 ))):named a12 ))
(assert (! (forall ((?v0 Nat$ ))(not (= ?v0 (suc$ ?v0 )))):named a13 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 A$ ))(= (take$ ?v0 (replicate$ ?v1 ?v2 ))(replicate$ (min$ ?v0 ?v1 )?v2 ))):named a15 ))
(check-sat )
;(get-unsat-core )
