;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_b_prod_bool_fun$ 0 )
(declare-datatypes ()((A_b_prod$ (pair$ (fst$ A$ )(snd$ B$ )))))
(declare-sort A_b_prod_stream$ 0)
(declare-sort A_stream$ 0)
(declare-sort B_stream$ 0)
(declare-fun shd$ (A_b_prod_stream$)A_b_prod$)
(declare-fun stl$ (A_b_prod_stream$)A_b_prod_stream$)
(declare-fun sCons$ (A_b_prod$ A_b_prod_stream$ )A_b_prod_stream$)
(declare-fun shd$a (A_stream$)A$)
(declare-fun stl$a (A_stream$)A_stream$)
(declare-fun sCons$a (A$ A_stream$ )A_stream$)
(declare-fun shd$b (B_stream$)B$)
(declare-fun stl$b (B_stream$)B_stream$)
(declare-fun sCons$b (B$ B_stream$ )B_stream$)
(declare-fun n$ ()Nat$ )
(declare-fun s1$ ()A_stream$ )
(declare-fun s2$ ()B_stream$ )
(declare-fun snth$ (A_b_prod_stream$ Nat$ )A_b_prod$ )
(declare-fun szip$ (A_stream$ B_stream$ )A_b_prod_stream$ )
(declare-fun snth$a (A_stream$ Nat$ )A$ )
(declare-fun snth$b (B_stream$ Nat$ )B$ )
(declare-fun fun_app$ (A_b_prod_bool_fun$ A_b_prod$ )Bool )
(assert (! (not (= (snth$ (szip$ s1$ s2$ )n$ )(pair$ (snth$a s1$ n$ )(snth$b s2$ n$ )))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a2 ))
(assert (! (forall ((?v0 A_b_prod$ ))(=> (forall ((?v1 A$ )(?v2 B$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a3 ))
(assert (! (forall ((?v0 A_b_prod$ ))(exists ((?v1 A$ )(?v2 B$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ )(?v2 A$ )(?v3 B$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a5 ))
(assert (! (forall ((?v0 A_b_prod$ ))(=> (forall ((?v1 A$ )(?v2 B$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a6 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A_b_prod$ ))(=> (forall ((?v2 A$ )(?v3 B$ ))(fun_app$ ?v0 (pair$ ?v2 ?v3 )))(fun_app$ ?v0 ?v1 ))):named a7 ))
(check-sat )
;(get-unsat-core )
