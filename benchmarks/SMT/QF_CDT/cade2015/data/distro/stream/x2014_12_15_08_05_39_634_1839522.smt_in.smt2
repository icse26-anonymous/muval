;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_a_stream_stream_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_stream_stream_a_fun$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_stream_a_stream_stream_fun$ 0 )
(declare-sort A_stream_stream_a_stream_fun$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$b (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$b (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$b (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun top$ ()A_set$ )
(declare-fun smap$ (A_stream_stream_a_stream_stream_fun$ A_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun top$a ()A_stream_set$ )
(declare-fun top$b ()A_stream_stream_set$ )
(declare-fun smap$a (A_stream_stream_a_fun$ A_stream_stream_stream$ )A_stream$ )
(declare-fun smap$b (A_stream_stream_a_stream_fun$ A_stream_stream_stream$ )A_stream_stream$ )
(declare-fun smap$c (A_a_stream_stream_fun$ A_stream$ )A_stream_stream_stream$ )
(declare-fun smap$d (A_stream_a_stream_stream_fun$ A_stream_stream$ )A_stream_stream_stream$ )
(declare-fun smap$e (A_stream_a_stream_fun$ )A_stream_stream_a_stream_stream_fun$ )
(declare-fun smap$f (A_stream_a_fun$ )A_stream_stream_a_stream_fun$ )
(declare-fun smap$g (A_a_stream_fun$ )A_stream_a_stream_stream_fun$ )
(declare-fun smap$h (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun member$ (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun fun_app$ (A_stream_stream_a_stream_stream_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_stream$ A_stream_set$ )Bool )
(declare-fun member$c (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun streams$ (A_set$ )A_stream_set$ )
(declare-fun fun_app$a (A_stream_stream_a_fun$ A_stream_stream$ )A$ )
(declare-fun fun_app$b (A_stream_stream_a_stream_fun$ A_stream_stream$ )A_stream$ )
(declare-fun fun_app$c (A_a_stream_stream_fun$ A$ )A_stream_stream$ )
(declare-fun fun_app$d (A_stream_a_stream_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun fun_app$e (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$f (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$g (A_a_stream_fun$ A$ )A_stream$ )
(declare-fun fun_app$h (A_a_fun$ A$ )A$ )
(declare-fun fun_app$i (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun fun_app$j (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$k (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun streams$a (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun streams$b (A_stream_set$ )A_stream_stream_set$ )
(assert (! (not (= (streams$ top$ )top$a )):named a0 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(= (member$ ?v0 top$b )true )):named a1 ))
(assert (! (forall ((?v0 A$ ))(= (member$a ?v0 top$ )true )):named a2 ))
(assert (! (forall ((?v0 A_stream$ ))(= (member$b ?v0 top$a )true )):named a3 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(member$ ?v0 top$b )):named a4 ))
(assert (! (forall ((?v0 A$ ))(member$a ?v0 top$ )):named a5 ))
(assert (! (forall ((?v0 A_stream$ ))(member$b ?v0 top$a )):named a6 ))
(assert (! (forall ((?v0 A_stream_stream_set$ ))(=> (forall ((?v1 A_stream_stream$ ))(member$ ?v1 ?v0 ))(= top$b ?v0 ))):named a7 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(member$a ?v1 ?v0 ))(= top$ ?v0 ))):named a8 ))
(assert (! (forall ((?v0 A_stream_set$ ))(=> (forall ((?v1 A_stream$ ))(member$b ?v1 ?v0 ))(= top$a ?v0 ))):named a9 ))
(assert (! (exists ((?v0 A_stream_stream$ ))(member$ ?v0 top$b )):named a10 ))
(assert (! (exists ((?v0 A$ ))(member$a ?v0 top$ )):named a11 ))
(assert (! (exists ((?v0 A_stream$ ))(member$b ?v0 top$a )):named a12 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (member$c ?v0 (streams$a ?v1 ))(member$ (shd$b ?v0 )?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$ ?v0 (streams$b ?v1 ))(member$b (shd$a ?v0 )?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$b ?v0 (streams$ ?v1 ))(member$a (shd$ ?v0 )?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (member$ ?v0 (streams$b ?v1 ))(member$ (stl$a ?v0 )(streams$b ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (member$b ?v0 (streams$ ?v1 ))(member$b (stl$ ?v0 )(streams$ ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_a_stream_stream_fun$ )(?v3 A_stream_stream_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(forall ((?v4 A_stream_stream$ ))(=> (member$ ?v4 ?v1 )(member$ (fun_app$ ?v2 ?v4 )?v3 ))))(member$c (smap$ ?v2 ?v0 )(streams$a ?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(forall ((?v4 A_stream_stream$ ))(=> (member$ ?v4 ?v1 )(member$a (fun_app$a ?v2 ?v4 )?v3 ))))(member$b (smap$a ?v2 ?v0 )(streams$ ?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ )(?v2 A_stream_stream_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(forall ((?v4 A_stream_stream$ ))(=> (member$ ?v4 ?v1 )(member$b (fun_app$b ?v2 ?v4 )?v3 ))))(member$ (smap$b ?v2 ?v0 )(streams$b ?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_stream_stream_fun$ )(?v3 A_stream_stream_set$ ))(=> (and (member$b ?v0 (streams$ ?v1 ))(forall ((?v4 A$ ))(=> (member$a ?v4 ?v1 )(member$ (fun_app$c ?v2 ?v4 )?v3 ))))(member$c (smap$c ?v2 ?v0 )(streams$a ?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_stream_stream_fun$ )(?v3 A_stream_stream_set$ ))(=> (and (member$ ?v0 (streams$b ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$b ?v4 ?v1 )(member$ (fun_app$d ?v2 ?v4 )?v3 ))))(member$c (smap$d ?v2 ?v0 )(streams$a ?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$ ?v0 (streams$b ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$b ?v4 ?v1 )(member$b (fun_app$e ?v2 ?v4 )?v3 ))))(member$ (fun_app$ (smap$e ?v2 )?v0 )(streams$b ?v3 )))):named a23 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ )(?v2 A_stream_a_fun$ )(?v3 A_set$ ))(=> (and (member$ ?v0 (streams$b ?v1 ))(forall ((?v4 A_stream$ ))(=> (member$b ?v4 ?v1 )(member$a (fun_app$f ?v2 ?v4 )?v3 ))))(member$b (fun_app$b (smap$f ?v2 )?v0 )(streams$ ?v3 )))):named a24 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_stream_fun$ )(?v3 A_stream_set$ ))(=> (and (member$b ?v0 (streams$ ?v1 ))(forall ((?v4 A$ ))(=> (member$a ?v4 ?v1 )(member$b (fun_app$g ?v2 ?v4 )?v3 ))))(member$ (fun_app$d (smap$g ?v2 )?v0 )(streams$b ?v3 )))):named a25 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ )(?v2 A_a_fun$ )(?v3 A_set$ ))(=> (and (member$b ?v0 (streams$ ?v1 ))(forall ((?v4 A$ ))(=> (member$a ?v4 ?v1 )(member$a (fun_app$h ?v2 ?v4 )?v3 ))))(member$b (fun_app$e (smap$h ?v2 )?v0 )(streams$ ?v3 )))):named a26 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(= (member$c (sCons$b ?v0 ?v1 )(streams$a ?v2 ))(and (member$ ?v0 ?v2 )(member$c ?v1 (streams$a ?v2 ))))):named a27 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(= (member$ (sCons$a ?v0 ?v1 )(streams$b ?v2 ))(and (member$b ?v0 ?v2 )(member$ ?v1 (streams$b ?v2 ))))):named a28 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_set$ ))(= (member$b (sCons$ ?v0 ?v1 )(streams$ ?v2 ))(and (member$a ?v0 ?v2 )(member$b ?v1 (streams$ ?v2 ))))):named a29 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(= (member$c ?v0 (streams$a ?v1 ))(exists ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$a ?v1 ))))))):named a30 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(= (member$ ?v0 (streams$b ?v1 ))(exists ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$ ?v3 (streams$b ?v1 ))))))):named a31 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(= (member$b ?v0 (streams$ ?v1 ))(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$b ?v3 (streams$ ?v1 ))))))):named a32 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(forall ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(=> (and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (streams$a ?v1 ))))false )))false )):named a33 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$ ?v0 (streams$b ?v1 ))(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$ ?v3 (streams$b ?v1 ))))false )))false )):named a34 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$b ?v0 (streams$ ?v1 ))(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$b ?v3 (streams$ ?v1 ))))false )))false )):named a35 ))
(assert (! (forall ((?v0 A_stream_stream_stream_bool_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(=> (and (fun_app$i ?v0 ?v1 )(forall ((?v3 A_stream_stream_stream$ ))(=> (fun_app$i ?v0 ?v3 )(exists ((?v4 A_stream_stream$ )(?v5 A_stream_stream_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (member$ ?v4 ?v2 )(or (fun_app$i ?v0 ?v5 )(member$c ?v5 (streams$a ?v2 )))))))))(member$c ?v1 (streams$a ?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_stream_stream_bool_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(=> (and (fun_app$j ?v0 ?v1 )(forall ((?v3 A_stream_stream$ ))(=> (fun_app$j ?v0 ?v3 )(exists ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (member$b ?v4 ?v2 )(or (fun_app$j ?v0 ?v5 )(member$ ?v5 (streams$b ?v2 )))))))))(member$ ?v1 (streams$b ?v2 )))):named a37 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_set$ ))(=> (and (fun_app$k ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$k ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (member$a ?v4 ?v2 )(or (fun_app$k ?v0 ?v5 )(member$b ?v5 (streams$ ?v2 )))))))))(member$b ?v1 (streams$ ?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a40 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (stl$a (fun_app$d (smap$g ?v0 )?v1 ))(fun_app$d (smap$g ?v0 )(stl$ ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (stl$ (fun_app$b (smap$f ?v0 )?v1 ))(fun_app$b (smap$f ?v0 )(stl$a ?v1 )))):named a42 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (stl$a (fun_app$ (smap$e ?v0 )?v1 ))(fun_app$ (smap$e ?v0 )(stl$a ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (stl$ (fun_app$e (smap$h ?v0 )?v1 ))(fun_app$e (smap$h ?v0 )(stl$ ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ ))(= (shd$a (fun_app$d (smap$g ?v0 )?v1 ))(fun_app$g ?v0 (shd$ ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ ))(= (shd$ (fun_app$b (smap$f ?v0 )?v1 ))(fun_app$f ?v0 (shd$a ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ ))(= (shd$a (fun_app$ (smap$e ?v0 )?v1 ))(fun_app$e ?v0 (shd$a ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (shd$ (fun_app$e (smap$h ?v0 )?v1 ))(fun_app$h ?v0 (shd$ ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(= (sCons$a (shd$a ?v0 )(stl$a ?v0 ))?v0 )):named a49 ))
(assert (! (forall ((?v0 A_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a50 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (fun_app$b (smap$f ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(and (= (fun_app$f ?v0 (shd$a ?v1 ))?v2 )(= (fun_app$b (smap$f ?v0 )(stl$a ?v1 ))?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (fun_app$d (smap$g ?v0 )?v1 )(sCons$a ?v2 ?v3 ))(and (= (fun_app$g ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$d (smap$g ?v0 )(stl$ ?v1 ))?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (fun_app$ (smap$e ?v0 )?v1 )(sCons$a ?v2 ?v3 ))(and (= (fun_app$e ?v0 (shd$a ?v1 ))?v2 )(= (fun_app$ (smap$e ?v0 )(stl$a ?v1 ))?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (fun_app$e (smap$h ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(and (= (fun_app$h ?v0 (shd$ ?v1 ))?v2 )(= (fun_app$e (smap$h ?v0 )(stl$ ?v1 ))?v3 )))):named a54 ))
(check-sat )
;(get-unsat-core )
