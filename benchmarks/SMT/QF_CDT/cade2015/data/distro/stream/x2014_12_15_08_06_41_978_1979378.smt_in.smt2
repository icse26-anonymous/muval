;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_a_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_stream_stream_set$ 0 )
(declare-sort A_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_stream_bool_fun$ 0 )
(declare-sort A_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_bool_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_bool_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun shd$a (A_stream_stream$)A_stream$)
(declare-fun stl$a (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$a (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$b (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$b (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$b (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun a$ ()A$ )
(declare-fun p$ ()A_bool_fun$ )
(declare-fun s$ ()A_stream$ )
(declare-fun uu$ ()A_a_bool_fun_fun$ )
(declare-fun uua$ ()A_stream_a_stream_bool_fun_fun$ )
(declare-fun member$ (A_stream_stream_stream$ A_stream_stream_stream_set$ )Bool )
(declare-fun fun_app$ (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun member$a (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$b (A_stream$ A_stream_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun smember$ (A_stream$ )A_stream_stream_bool_fun$ )
(declare-fun streams$ (A_stream_stream_set$ )A_stream_stream_stream_set$ )
(declare-fun fun_app$a (A_stream_a_stream_bool_fun_fun$ A_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$b (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$c (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$d (A_stream_stream_bool_fun$ A_stream_stream$ )Bool )
(declare-fun fun_app$e (A_stream_stream_stream_bool_fun$ A_stream_stream_stream$ )Bool )
(declare-fun fun_app$f (A_stream_a_stream_stream_bool_fun_fun$ A_stream$ )A_stream_stream_bool_fun$ )
(declare-fun fun_app$g (A_a_stream_bool_fun_fun$ A$ )A_stream_bool_fun$ )
(declare-fun fun_app$h (A_stream_stream_a_stream_bool_fun_fun$ A_stream_stream$ )A_stream_bool_fun$ )
(declare-fun fun_app$i (A_stream_a_bool_fun_fun$ A_stream$ )A_bool_fun$ )
(declare-fun fun_app$j (A_stream_stream_a_stream_stream_bool_fun_fun$ A_stream_stream$ )A_stream_stream_bool_fun$ )
(declare-fun smember$a (A$ )A_stream_bool_fun$ )
(declare-fun streams$a (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$b (A_set$ )A_stream_set$ )
(declare-fun streamsp$ (A_stream_bool_fun$ )A_stream_stream_bool_fun$ )
(declare-fun streamsp$a (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun pred_stream$ (A_stream_bool_fun$ )A_stream_stream_bool_fun$ )
(declare-fun sdrop_while$ (A_bool_fun$ A_stream$ )A_stream$ )
(declare-fun stream_all2$ (A_a_stream_bool_fun_fun$ )A_stream_a_stream_stream_bool_fun_fun$ )
(declare-fun pred_stream$a (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun stream_all2$a (A_stream_a_bool_fun_fun$ )A_stream_stream_a_stream_bool_fun_fun$ )
(declare-fun stream_all2$b (A_stream_a_stream_bool_fun_fun$ )A_stream_stream_a_stream_stream_bool_fun_fun$ )
(declare-fun stream_all2$c (A_a_bool_fun_fun$ )A_stream_a_stream_bool_fun_fun$ )
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$b (fun_app$c uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (not (= (sdrop_while$ p$ (sCons$ a$ s$ ))(ite (fun_app$b p$ a$ )(sdrop_while$ p$ s$ )(sCons$ a$ s$ )))):named a2 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a4 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(=> (forall ((?v1 A_stream$ )(?v2 A_stream_stream$ ))(=> (= ?v0 (sCons$a ?v1 ?v2 ))false ))false )):named a5 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (forall ((?v1 A$ )(?v2 A_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a6 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (fun_app$d (smember$ ?v0 )(sCons$a ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$d (smember$ ?v0 )?v2 ))):pattern ((fun_app$d (smember$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$ (smember$a ?v0 )(sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$ (smember$a ?v0 )?v2 ))):pattern ((fun_app$ (smember$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a8 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(! (= (fun_app$d (pred_stream$ ?v0 )(sCons$a ?v1 ?v2 ))(and (fun_app$ ?v0 ?v1 )(fun_app$d (pred_stream$ ?v0 )?v2 ))):pattern ((fun_app$d (pred_stream$ ?v0 )(sCons$a ?v1 ?v2 ))))):named a9 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$ (pred_stream$a ?v0 )(sCons$ ?v1 ?v2 ))(and (fun_app$b ?v0 ?v1 )(fun_app$ (pred_stream$a ?v0 )?v2 ))):pattern ((fun_app$ (pred_stream$a ?v0 )(sCons$ ?v1 ?v2 ))))):named a10 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_stream$ ))(= (fun_app$d (streamsp$ ?v0 )?v1 )(exists ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$ ?v0 ?v2 )(fun_app$d (streamsp$ ?v0 )?v3 )))))):named a11 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (fun_app$ (streamsp$a ?v0 )?v1 )(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(fun_app$ (streamsp$a ?v0 )?v3 )))))):named a12 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_stream$ ))(=> (and (fun_app$d (streamsp$ ?v0 )?v1 )(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$ ?v0 ?v2 )(fun_app$d (streamsp$ ?v0 )?v3 )))false )))false )):named a13 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(=> (and (fun_app$ (streamsp$a ?v0 )?v1 )(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$b ?v0 ?v2 )(fun_app$ (streamsp$a ?v0 )?v3 )))false )))false )):named a14 ))
(assert (! (forall ((?v0 A_stream_stream_bool_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_bool_fun$ ))(=> (and (fun_app$d ?v0 ?v1 )(forall ((?v3 A_stream_stream$ ))(=> (fun_app$d ?v0 ?v3 )(exists ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (fun_app$ ?v2 ?v4 )(or (fun_app$d ?v0 ?v5 )(fun_app$d (streamsp$ ?v2 )?v5 ))))))))(fun_app$d (streamsp$ ?v2 )?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_bool_fun$ ))(=> (and (fun_app$ ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$ ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (fun_app$b ?v2 ?v4 )(or (fun_app$ ?v0 ?v5 )(fun_app$ (streamsp$a ?v2 )?v5 ))))))))(fun_app$ (streamsp$a ?v2 )?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(= (member$ (sCons$b ?v0 ?v1 )(streams$ ?v2 ))(and (member$a ?v0 ?v2 )(member$ ?v1 (streams$ ?v2 ))))):named a17 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(= (member$a (sCons$a ?v0 ?v1 )(streams$a ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (streams$a ?v2 ))))):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_set$ ))(= (member$b (sCons$ ?v0 ?v1 )(streams$b ?v2 ))(and (member$c ?v0 ?v2 )(member$b ?v1 (streams$b ?v2 ))))):named a19 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(= (member$ ?v0 (streams$ ?v1 ))(exists ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (streams$ ?v1 ))))))):named a20 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(= (member$a ?v0 (streams$a ?v1 ))(exists ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$a ?v1 ))))))):named a21 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(= (member$b ?v0 (streams$b ?v1 ))(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$b ?v3 (streams$b ?v1 ))))))):named a22 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_set$ ))(=> (and (member$ ?v0 (streams$ ?v1 ))(forall ((?v2 A_stream_stream$ )(?v3 A_stream_stream_stream$ ))(=> (and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (streams$ ?v1 ))))false )))false )):named a23 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_set$ ))(=> (and (member$a ?v0 (streams$a ?v1 ))(forall ((?v2 A_stream$ )(?v3 A_stream_stream$ ))(=> (and (= ?v0 (sCons$a ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$a ?v1 ))))false )))false )):named a24 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_set$ ))(=> (and (member$b ?v0 (streams$b ?v1 ))(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$b ?v3 (streams$b ?v1 ))))false )))false )):named a25 ))
(assert (! (forall ((?v0 A_stream_stream_stream_bool_fun$ )(?v1 A_stream_stream_stream$ )(?v2 A_stream_stream_set$ ))(=> (and (fun_app$e ?v0 ?v1 )(forall ((?v3 A_stream_stream_stream$ ))(=> (fun_app$e ?v0 ?v3 )(exists ((?v4 A_stream_stream$ )(?v5 A_stream_stream_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (member$a ?v4 ?v2 )(or (fun_app$e ?v0 ?v5 )(member$ ?v5 (streams$ ?v2 )))))))))(member$ ?v1 (streams$ ?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_stream_stream_bool_fun$ )(?v1 A_stream_stream$ )(?v2 A_stream_set$ ))(=> (and (fun_app$d ?v0 ?v1 )(forall ((?v3 A_stream_stream$ ))(=> (fun_app$d ?v0 ?v3 )(exists ((?v4 A_stream$ )(?v5 A_stream_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (member$b ?v4 ?v2 )(or (fun_app$d ?v0 ?v5 )(member$a ?v5 (streams$a ?v2 )))))))))(member$a ?v1 (streams$a ?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_set$ ))(=> (and (fun_app$ ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$ ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (member$c ?v4 ?v2 )(or (fun_app$ ?v0 ?v5 )(member$b ?v5 (streams$b ?v2 )))))))))(member$b ?v1 (streams$b ?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(! (= (fun_app$d (fun_app$f (stream_all2$ ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(and (fun_app$ (fun_app$g ?v0 ?v1 )?v3 )(fun_app$d (fun_app$f (stream_all2$ ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$f (stream_all2$ ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a29 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A$ )(?v4 A_stream$ ))(! (= (fun_app$ (fun_app$h (stream_all2$a ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(and (fun_app$b (fun_app$i ?v0 ?v1 )?v3 )(fun_app$ (fun_app$h (stream_all2$a ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$h (stream_all2$a ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a30 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(! (= (fun_app$d (fun_app$j (stream_all2$b ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))(and (fun_app$ (fun_app$a ?v0 ?v1 )?v3 )(fun_app$d (fun_app$j (stream_all2$b ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$j (stream_all2$b ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a ?v3 ?v4 ))))):named a31 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A$ )(?v4 A_stream$ ))(! (= (fun_app$ (fun_app$a (stream_all2$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))(and (fun_app$b (fun_app$c ?v0 ?v1 )?v3 )(fun_app$ (fun_app$a (stream_all2$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$a (stream_all2$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ ?v3 ?v4 ))))):named a32 ))
(assert (! (= (stream_all2$c uu$ )uua$ ):named a33 ))
(assert (! (forall ((?v0 A_a_stream_bool_fun_fun$ )(?v1 A$ )(?v2 A_stream$ )(?v3 A_stream$ )(?v4 A_stream_stream$ ))(=> (and (fun_app$ (fun_app$g ?v0 ?v1 )?v2 )(fun_app$d (fun_app$f (stream_all2$ ?v0 )?v3 )?v4 ))(fun_app$d (fun_app$f (stream_all2$ ?v0 )(sCons$ ?v1 ?v3 ))(sCons$a ?v2 ?v4 )))):named a34 ))
(assert (! (forall ((?v0 A_stream_a_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream_stream$ )(?v4 A_stream$ ))(=> (and (fun_app$b (fun_app$i ?v0 ?v1 )?v2 )(fun_app$ (fun_app$h (stream_all2$a ?v0 )?v3 )?v4 ))(fun_app$ (fun_app$h (stream_all2$a ?v0 )(sCons$a ?v1 ?v3 ))(sCons$ ?v2 ?v4 )))):named a35 ))
(assert (! (forall ((?v0 A_stream_a_stream_bool_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream_stream$ )(?v4 A_stream_stream$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(fun_app$d (fun_app$j (stream_all2$b ?v0 )?v3 )?v4 ))(fun_app$d (fun_app$j (stream_all2$b ?v0 )(sCons$a ?v1 ?v3 ))(sCons$a ?v2 ?v4 )))):named a36 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 A_stream$ )(?v4 A_stream$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(fun_app$ (fun_app$a (stream_all2$c ?v0 )?v3 )?v4 ))(fun_app$ (fun_app$a (stream_all2$c ?v0 )(sCons$ ?v1 ?v3 ))(sCons$ ?v2 ?v4 )))):named a37 ))
(check-sat )
;(get-unsat-core )
