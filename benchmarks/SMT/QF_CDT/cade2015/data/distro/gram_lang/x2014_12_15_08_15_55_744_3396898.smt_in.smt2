;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_T_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort T_T_T_sum_fun$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort N_set_N_set_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_N_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_set_T_sum_set$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort Dtree_T_N_sum_fun$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort N_T_set_N_sum_fun$ 0 )
(declare-sort T_N_sum_dtree_fun$ 0 )
(declare-sort T_T_N_sum_sum_set$ 0 )
(declare-sort T_T_set_T_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort T_set_dtree_sum_set$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort Dtree_set_dtree_set_fun$ 0 )
(declare-sort N_set_set_N_set_set_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort Dtree_T_set_dtree_sum_fun$ 0 )
(declare-sort T_N_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_N_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_set_T_sum_T_set_T_sum_fun$ 0 )
(declare-sort T_N_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_N_sum_fun$ 0 )
(declare-sort Dtree_set_set_dtree_set_set_fun$ 0 )
(declare-sort N_N_fun_T_N_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_set_N_sum_T_set_dtree_sum_fun$ 0 )
(declare-sort T_set_dtree_sum_T_set_N_sum_fun$ 0 )
(declare-sort T_set_set_set_T_set_set_set_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_set_dtree_sum_T_set_dtree_sum_fun$ 0 )
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0 )
(declare-datatypes ()((T_dtree_sum$ (inl$ (projl$ T$ ))(inr$ (projr$ Dtree$ )))(T_N_sum$ (inl$a (projl$a T$ ))(inr$a (projr$a N$ )))(T_T_dtree_sum_sum$ (inl$b (projl$b T$ ))(inr$b (projr$b T_dtree_sum$ )))(T_T_N_sum_sum$ (inl$c (projl$c T$ ))(inr$c (projr$c T_N_sum$ )))(T_T_sum$ (inl$d (projl$d T$ ))(inr$d (projr$d T$ )))(T_set_dtree_sum$ (inl$e (projl$e T_set$ ))(inr$e (projr$e Dtree$ )))(T_set_N_sum$ (inl$f (projl$f T_set$ ))(inr$f (projr$f N$ )))(T_set_T_sum$ (inl$g (projl$g T_set$ ))(inr$g (projr$g T$ )))(T_set_T_N_sum_sum$ (inl$h (projl$h T_set$ ))(inr$h (projr$h T_N_sum$ )))))
(declare-fun k$ (N$ )T_set$ )
(declare-fun n$ ()N$ )
(declare-fun fr$ (N_set$ Dtree$ )T_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun ns$ ()N_set$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun bot$ ()N_set$ )
(declare-fun ftr$ ()N_dtree_fun$ )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()N_set_N_set_fun$ )
(declare-fun id$c ()N_set_set_N_set_set_fun$ )
(declare-fun id$d ()T_set_set_T_set_set_fun$ )
(declare-fun id$e ()T_set_set_set_T_set_set_set_fun$ )
(declare-fun id$f ()Dtree_dtree_fun$ )
(declare-fun id$g ()Dtree_set_dtree_set_fun$ )
(declare-fun id$h ()Dtree_set_set_dtree_set_set_fun$ )
(declare-fun id$i ()N_N_fun$ )
(declare-fun tns$ ()T_N_sum_set$ )
(declare-fun uua$ ()N_T_N_sum_fun$ )
(declare-fun uub$ ()T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun uuc$ ()T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun uud$ ()T_T_T_sum_fun$ )
(declare-fun uue$ ()Dtree_T_set_dtree_sum_fun$ )
(declare-fun uuf$ ()N_T_set_N_sum_fun$ )
(declare-fun uug$ ()T_T_set_T_sum_fun$ )
(declare-fun bot$a ()T_dtree_sum_set$ )
(declare-fun bot$b ()T_N_sum_set$ )
(declare-fun bot$c ()Dtree_set$ )
(declare-fun bot$d ()T_T_dtree_sum_sum_set$ )
(declare-fun bot$e ()T_T_N_sum_sum_set$ )
(declare-fun bot$f ()T_set$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun root$ (Dtree$ )N$ )
(declare-fun image$ (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun minus$ (N_set$ N_set$ )N_set$ )
(declare-fun image$a (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$b (Dtree_dtree_fun$ )Dtree_set_dtree_set_fun$ )
(declare-fun image$c (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun image$d (Dtree_N_fun$ Dtree_set$ )N_set$ )
(declare-fun image$e (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$f (N_N_fun$ )N_set_N_set_fun$ )
(declare-fun image$g (N_dtree_fun$ N_set$ )Dtree_set$ )
(declare-fun image$h (T_T_N_sum_sum_T_T_dtree_sum_sum_fun$ T_T_N_sum_sum_set$ )T_T_dtree_sum_sum_set$ )
(declare-fun image$i (T_T_sum_T_T_sum_fun$ T_T_sum_set$ )T_T_sum_set$ )
(declare-fun image$j (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$k (T_set_dtree_sum_T_set_dtree_sum_fun$ T_set_dtree_sum_set$ )T_set_dtree_sum_set$ )
(declare-fun image$l (T_set_dtree_sum_T_set_N_sum_fun$ T_set_dtree_sum_set$ )T_set_N_sum_set$ )
(declare-fun image$m (T_set_T_sum_T_set_T_sum_fun$ T_set_T_sum_set$ )T_set_T_sum_set$ )
(declare-fun image$n (T_set_N_sum_T_set_dtree_sum_fun$ T_set_N_sum_set$ )T_set_dtree_sum_set$ )
(declare-fun image$o (T_T_dtree_sum_sum_T_dtree_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$p (T_T_N_sum_sum_T_dtree_sum_fun$ T_T_N_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$q (T_T_dtree_sum_sum_T_N_sum_fun$ T_T_dtree_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$r (T_T_N_sum_sum_T_N_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$s (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum_set$ )T_T_dtree_sum_sum_set$ )
(declare-fun image$t (T_N_sum_T_T_dtree_sum_sum_fun$ T_N_sum_set$ )T_T_dtree_sum_sum_set$ )
(declare-fun image$u (N_set_N_set_fun$ )N_set_set_N_set_set_fun$ )
(declare-fun image$v (T_set_set_T_set_set_fun$ )T_set_set_set_T_set_set_set_fun$ )
(declare-fun image$w (Dtree_set_dtree_set_fun$ )Dtree_set_set_dtree_set_set_fun$ )
(declare-fun image$x (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (Dtree$ Dtree_set$ )Bool )
(declare-fun vimage$ (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun collect$ (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun fun_app$ (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum$ )T_T_dtree_sum_sum$ )
(declare-fun map_sum$ (T_T_fun$ )N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ )
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$b (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$c (T_T_dtree_sum_sum$ T_T_dtree_sum_sum_set$ )Bool )
(declare-fun member$d (T_T_N_sum_sum$ T_T_N_sum_sum_set$ )Bool )
(declare-fun member$e (N$ N_set$ )Bool )
(declare-fun member$f (T$ T_set$ )Bool )
(declare-fun vimage$a (N_T_N_sum_fun$ T_N_sum_set$ )N_set$ )
(declare-fun vimage$b (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$c (T_N_sum_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun vimage$d (T_T_T_sum_fun$ T_T_sum_set$ )T_set$ )
(declare-fun vimage$e (Dtree_T_set_dtree_sum_fun$ T_set_dtree_sum_set$ )Dtree_set$ )
(declare-fun vimage$f (N_T_set_N_sum_fun$ T_set_N_sum_set$ )N_set$ )
(declare-fun vimage$g (T_T_set_T_sum_fun$ T_set_T_sum_set$ )T_set$ )
(declare-fun vimage$h (N_set_N_set_fun$ )N_set_set_N_set_set_fun$ )
(declare-fun vimage$i (T_set_set_T_set_set_fun$ )T_set_set_set_T_set_set_set_fun$ )
(declare-fun vimage$j (Dtree_dtree_fun$ )Dtree_set_dtree_set_fun$ )
(declare-fun vimage$k (Dtree_set_dtree_set_fun$ )Dtree_set_set_dtree_set_set_fun$ )
(declare-fun vimage$l (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun vimage$m (N_N_fun$ )N_set_N_set_fun$ )
(declare-fun vimage$n (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun vimage$o (Dtree_N_fun$ N_set$ )Dtree_set$ )
(declare-fun vimage$p (N_dtree_fun$ Dtree_set$ )N_set$ )
(declare-fun vimage$q (Dtree_T_N_sum_fun$ T_N_sum_set$ )Dtree_set$ )
(declare-fun vimage$r (T_N_sum_dtree_fun$ Dtree_set$ )T_N_sum_set$ )
(declare-fun vimage$s (T_N_sum_N_fun$ N_set$ )T_N_sum_set$ )
(declare-fun vimage$t (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun collect$a (T_N_sum_bool_fun$ )T_N_sum_set$ )
(declare-fun collect$b (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun collect$c (N_bool_fun$ )N_set$ )
(declare-fun fun_app$a (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum$ )T_T_N_sum_sum$ )
(declare-fun fun_app$b (Dtree_T_set_dtree_sum_fun$ Dtree$ )T_set_dtree_sum$ )
(declare-fun fun_app$c (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$d (T_T_set_T_sum_fun$ T$ )T_set_T_sum$ )
(declare-fun fun_app$e (T_T_T_sum_fun$ T$ )T_T_sum$ )
(declare-fun fun_app$f (N_T_set_N_sum_fun$ N$ )T_set_N_sum$ )
(declare-fun fun_app$g (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$h (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$i (Dtree_set_dtree_set_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun fun_app$j (N_N_fun_T_N_sum_T_N_sum_fun_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun fun_app$k (N_set_N_set_fun$ N_set$ )N_set$ )
(declare-fun fun_app$l (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$m (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$n (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$o (N_N_fun$ N$ )N$ )
(declare-fun fun_app$p (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$q (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$r (T_N_sum_dtree_fun$ T_N_sum$ )Dtree$ )
(declare-fun fun_app$s (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$t (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$u (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$v (Dtree_T_N_sum_fun$ Dtree$ )T_N_sum$ )
(declare-fun fun_app$w (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$x (T_set_set_T_set_set_fun$ T_set_set$ )T_set_set$ )
(declare-fun fun_app$y (T_T_fun$ T$ )T$ )
(declare-fun fun_app$z (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun map_sum$a (T_T_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun map_sum$c (T_T_fun$ )N_N_fun_T_N_sum_T_N_sum_fun_fun$ )
(declare-fun map_sum$d (T_T_fun$ T_N_sum_T_dtree_sum_fun$ )T_T_N_sum_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun map_sum$e (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$f (T_set_T_set_fun$ Dtree_dtree_fun$ )T_set_dtree_sum_T_set_dtree_sum_fun$ )
(declare-fun map_sum$g (T_set_T_set_fun$ Dtree_N_fun$ )T_set_dtree_sum_T_set_N_sum_fun$ )
(declare-fun map_sum$h (T_set_T_set_fun$ T_T_fun$ )T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun map_sum$i (T_set_T_set_fun$ N_dtree_fun$ )T_set_N_sum_T_set_dtree_sum_fun$ )
(declare-fun map_sum$j (T_T_fun$ T_dtree_sum_dtree_fun$ )T_T_dtree_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$k (T_T_fun$ T_N_sum_dtree_fun$ )T_T_N_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$l (T_T_fun$ T_dtree_sum_N_fun$ )T_T_dtree_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$m (T_T_fun$ T_N_sum_N_fun$ )T_T_N_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$n (T_T_fun$ Dtree_T_dtree_sum_fun$ )T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun map_sum$o (T_T_fun$ N_T_dtree_sum_fun$ )T_N_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun fun_app$aa (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$ab (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$ac (N_bool_fun$ N$ )Bool )
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ uub$ ?v0 )(inr$b ?v0 )):pattern ((fun_app$ uub$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T_N_sum$ ))(! (= (fun_app$a uuc$ ?v0 )(inr$c ?v0 )):pattern ((fun_app$a uuc$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uue$ ?v0 )(inr$e ?v0 )):pattern ((fun_app$b uue$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$c uu$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$c uu$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$d uug$ ?v0 )(inr$g ?v0 )):pattern ((fun_app$d uug$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$e uud$ ?v0 )(inr$d ?v0 )):pattern ((fun_app$e uud$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$f uuf$ ?v0 )(inr$f ?v0 )):pattern ((fun_app$f uuf$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$g uua$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$g uua$ ?v0 )))):named a7 ))
(assert (! (not (forall ((?v0 Dtree$ ))(=> (member$ ?v0 (vimage$ uu$ (image$ (fun_app$h (map_sum$ id$ )ftr$ )tns$ )))(forall ((?v1 Dtree$ ))(=> (and (member$ ?v1 (vimage$ uu$ (image$ (fun_app$h (map_sum$ id$ )ftr$ )tns$ )))(= (root$ ?v0 )(root$ ?v1 )))(= ?v0 ?v1 )))))):named a8 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$ uu$ (image$a (map_sum$a id$ ?v0 )?v1 ))(fun_app$i (image$b ?v0 )(vimage$ uu$ ?v1 )))):named a9 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$a uua$ (image$c (map_sum$b id$ ?v0 )?v1 ))(image$d ?v0 (vimage$ uu$ ?v1 )))):named a10 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$a uua$ (image$e (fun_app$j (map_sum$c id$ )?v0 )?v1 ))(fun_app$k (image$f ?v0 )(vimage$a uua$ ?v1 )))):named a11 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$ uu$ (image$ (fun_app$h (map_sum$ id$ )?v0 )?v1 ))(image$g ?v0 (vimage$a uua$ ?v1 )))):named a12 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$b uub$ (image$h (map_sum$d id$ ?v0 )?v1 ))(image$ ?v0 (vimage$c uuc$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_T_sum_set$ ))(= (vimage$d uud$ (image$i (map_sum$e id$ ?v0 )?v1 ))(fun_app$l (image$j ?v0 )(vimage$d uud$ ?v1 )))):named a14 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_set_dtree_sum_set$ ))(= (vimage$e uue$ (image$k (map_sum$f id$a ?v0 )?v1 ))(fun_app$i (image$b ?v0 )(vimage$e uue$ ?v1 )))):named a15 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_set_dtree_sum_set$ ))(= (vimage$f uuf$ (image$l (map_sum$g id$a ?v0 )?v1 ))(image$d ?v0 (vimage$e uue$ ?v1 )))):named a16 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set_T_sum_set$ ))(= (vimage$g uug$ (image$m (map_sum$h id$a ?v0 )?v1 ))(fun_app$l (image$j ?v0 )(vimage$g uug$ ?v1 )))):named a17 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_set_N_sum_set$ ))(= (vimage$e uue$ (image$n (map_sum$i id$a ?v0 )?v1 ))(image$g ?v0 (vimage$f uuf$ ?v1 )))):named a18 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a (inr$ ?v0 )(image$a (map_sum$a id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$ ?v3 )?v2 )(= (fun_app$m ?v1 ?v3 )?v0 ))))):named a19 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b (inr$a ?v0 )(image$c (map_sum$b id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$ ?v3 )?v2 )(= (fun_app$n ?v1 ?v3 )?v0 ))))):named a20 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$b (inr$a ?v0 )(image$e (fun_app$j (map_sum$c id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$o ?v1 ?v3 )?v0 ))))):named a21 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$a (inr$ ?v0 )(image$ (fun_app$h (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$p ?v1 ?v3 )?v0 ))))):named a22 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$a (inr$ ?v0 )(image$o (map_sum$j id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$c (inr$b ?v3 )?v2 )(= (fun_app$q ?v1 ?v3 )?v0 ))))):named a23 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$a (inr$ ?v0 )(image$p (map_sum$k id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$c ?v3 )?v2 )(= (fun_app$r ?v1 ?v3 )?v0 ))))):named a24 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$b (inr$a ?v0 )(image$q (map_sum$l id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$c (inr$b ?v3 )?v2 )(= (fun_app$s ?v1 ?v3 )?v0 ))))):named a25 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$b (inr$a ?v0 )(image$r (map_sum$m id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$c ?v3 )?v2 )(= (fun_app$t ?v1 ?v3 )?v0 ))))):named a26 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c (inr$b ?v0 )(image$s (map_sum$n id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$ ?v3 )?v2 )(= (fun_app$c ?v1 ?v3 )?v0 ))))):named a27 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$c (inr$b ?v0 )(image$t (map_sum$o id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$u ?v1 ?v3 )?v0 ))))):named a28 ))
(assert (! (= tr$ (node$ n$ (image$ (fun_app$h (map_sum$ id$ )ftr$ )tns$ ))):named a29 ))
(assert (! (forall ((?v0 N$ ))(=> (member$b (inr$a ?v0 )tns$ )(and (= (k$ ?v0 )(fr$ (minus$ ns$ (insert$ n$ bot$ ))(fun_app$p ftr$ ?v0 )))(and (wf$ (fun_app$p ftr$ ?v0 ))(= (root$ (fun_app$p ftr$ ?v0 ))?v0 ))))):named a30 ))
(assert (! (= (vimage$h id$b )id$c ):named a31 ))
(assert (! (= (vimage$i id$d )id$e ):named a32 ))
(assert (! (= (vimage$j id$f )id$g ):named a33 ))
(assert (! (= (vimage$k id$g )id$h ):named a34 ))
(assert (! (= (vimage$l id$a )id$d ):named a35 ))
(assert (! (= (vimage$m id$i )id$b ):named a36 ))
(assert (! (= (vimage$n id$ )id$a ):named a37 ))
(assert (! (= (image$u id$b )id$c ):named a38 ))
(assert (! (= (image$v id$d )id$e ):named a39 ))
(assert (! (= (image$w id$g )id$h ):named a40 ))
(assert (! (= (image$x id$a )id$d ):named a41 ))
(assert (! (= (image$b id$f )id$g ):named a42 ))
(assert (! (= (image$f id$i )id$b ):named a43 ))
(assert (! (= (image$j id$ )id$a ):named a44 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (inr$ ?v0 )(image$a (map_sum$a id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$ ?v3 )?v2 )(= (fun_app$m ?v1 ?v3 )?v0 ))))):named a45 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (inr$a ?v0 )(image$c (map_sum$b id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$ ?v3 )?v2 )(= (fun_app$n ?v1 ?v3 )?v0 ))))):named a46 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$b (inr$a ?v0 )(image$e (fun_app$j (map_sum$c id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$o ?v1 ?v3 )?v0 ))))):named a47 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$a (inr$ ?v0 )(image$ (fun_app$h (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$p ?v1 ?v3 )?v0 ))))):named a48 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(=> (member$a (inr$ ?v0 )(image$o (map_sum$j id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$c (inr$b ?v3 )?v2 )(= (fun_app$q ?v1 ?v3 )?v0 ))))):named a49 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(=> (member$a (inr$ ?v0 )(image$p (map_sum$k id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$c ?v3 )?v2 )(= (fun_app$r ?v1 ?v3 )?v0 ))))):named a50 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(=> (member$b (inr$a ?v0 )(image$q (map_sum$l id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$c (inr$b ?v3 )?v2 )(= (fun_app$s ?v1 ?v3 )?v0 ))))):named a51 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(=> (member$b (inr$a ?v0 )(image$r (map_sum$m id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$c ?v3 )?v2 )(= (fun_app$t ?v1 ?v3 )?v0 ))))):named a52 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$c (inr$b ?v0 )(image$s (map_sum$n id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$ ?v3 )?v2 )(= (fun_app$c ?v1 ?v3 )?v0 ))))):named a53 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (member$c (inr$b ?v0 )(image$t (map_sum$o id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$u ?v1 ?v3 )?v0 ))))):named a54 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$ ?v0 (fun_app$i (vimage$j ?v1 )?v2 ))(member$ (fun_app$m ?v1 ?v0 )?v2 ))):named a55 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_N_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (vimage$o ?v1 ?v2 ))(member$e (fun_app$n ?v1 ?v0 )?v2 ))):named a56 ))
(assert (! (forall ((?v0 N$ )(?v1 N_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$e ?v0 (vimage$p ?v1 ?v2 ))(member$ (fun_app$p ?v1 ?v0 )?v2 ))):named a57 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$e ?v0 (fun_app$k (vimage$m ?v1 )?v2 ))(member$e (fun_app$o ?v1 ?v0 )?v2 ))):named a58 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$ ?v0 (vimage$q ?v1 ?v2 ))(member$b (fun_app$v ?v1 ?v0 )?v2 ))):named a59 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (vimage$r ?v1 ?v2 ))(member$ (fun_app$r ?v1 ?v0 )?v2 ))):named a60 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_N_fun$ )(?v2 N_set$ ))(= (member$b ?v0 (vimage$s ?v1 ?v2 ))(member$e (fun_app$t ?v1 ?v0 )?v2 ))):named a61 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$e ?v0 (vimage$a ?v1 ?v2 ))(member$b (fun_app$g ?v1 ?v0 )?v2 ))):named a62 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$ ?v1 ?v2 ))(member$a (fun_app$c ?v1 ?v0 )?v2 ))):named a63 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$b ?v0 (vimage$t ?v1 ?v2 ))(member$b (fun_app$w ?v1 ?v0 )?v2 ))):named a64 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$m ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (fun_app$i (vimage$j ?v0 )?v3 )))):named a65 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 N$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$p ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$e ?v1 (vimage$p ?v0 ?v3 )))):named a66 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$n ?v0 ?v1 )?v2 )(member$e ?v2 ?v3 ))(member$ ?v1 (vimage$o ?v0 ?v3 )))):named a67 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$o ?v0 ?v1 )?v2 )(member$e ?v2 ?v3 ))(member$e ?v1 (fun_app$k (vimage$m ?v0 )?v3 )))):named a68 ))
(assert (! (forall ((?v0 T_N_sum_dtree_fun$ )(?v1 T_N_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$r ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$b ?v1 (vimage$r ?v0 ?v3 )))):named a69 ))
(assert (! (forall ((?v0 Dtree_T_N_sum_fun$ )(?v1 Dtree$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= (fun_app$v ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$ ?v1 (vimage$q ?v0 ?v3 )))):named a70 ))
(assert (! (forall ((?v0 N_T_N_sum_fun$ )(?v1 N$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= (fun_app$g ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$e ?v1 (vimage$a ?v0 ?v3 )))):named a71 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_N_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$t ?v0 ?v1 )?v2 )(member$e ?v2 ?v3 ))(member$b ?v1 (vimage$s ?v0 ?v3 )))):named a72 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$c ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$ ?v1 (vimage$ ?v0 ?v3 )))):named a73 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= (fun_app$w ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$b ?v1 (vimage$t ?v0 ?v3 )))):named a74 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum$ ))(= (= (inr$h ?v0 )(inr$h ?v1 ))(= ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$e ?v0 )(inr$e ?v1 ))(= ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inr$g ?v0 )(inr$g ?v1 ))(= ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inr$d ?v0 )(inr$d ?v1 ))(= ?v0 ?v1 ))):named a78 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$f ?v0 )(inr$f ?v1 ))(= ?v0 ?v1 ))):named a79 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$b ?v0 )(inr$b ?v1 ))(= ?v0 ?v1 ))):named a80 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a81 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a82 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a83 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum$ ))(= (= (inr$h ?v0 )(inr$h ?v1 ))(= ?v0 ?v1 ))):named a84 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$e ?v0 )(inr$e ?v1 ))(= ?v0 ?v1 ))):named a85 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inr$g ?v0 )(inr$g ?v1 ))(= ?v0 ?v1 ))):named a86 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inr$d ?v0 )(inr$d ?v1 ))(= ?v0 ?v1 ))):named a87 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$f ?v0 )(inr$f ?v1 ))(= ?v0 ?v1 ))):named a88 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$b ?v0 )(inr$b ?v1 ))(= ?v0 ?v1 ))):named a89 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a90 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a91 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a92 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$o id$i ?v0 )?v0 ):pattern ((fun_app$o id$i ?v0 )))):named a93 ))
(assert (! (forall ((?v0 N_set$ ))(! (= (fun_app$k id$b ?v0 )?v0 ):pattern ((fun_app$k id$b ?v0 )))):named a94 ))
(assert (! (forall ((?v0 T_set_set$ ))(! (= (fun_app$x id$d ?v0 )?v0 ):pattern ((fun_app$x id$d ?v0 )))):named a95 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$m id$f ?v0 )?v0 ):pattern ((fun_app$m id$f ?v0 )))):named a96 ))
(assert (! (forall ((?v0 Dtree_set$ ))(! (= (fun_app$i id$g ?v0 )?v0 ):pattern ((fun_app$i id$g ?v0 )))):named a97 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$l id$a ?v0 )?v0 ):pattern ((fun_app$l id$a ?v0 )))):named a98 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$y id$ ?v0 )?v0 ):pattern ((fun_app$y id$ ?v0 )))):named a99 ))
(assert (! (member$e n$ ns$ ):named a100 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ ))(= (= (collect$ ?v0 )bot$a )(forall ((?v1 T_dtree_sum$ ))(not (fun_app$z ?v0 ?v1 ))))):named a101 ))
(assert (! (forall ((?v0 T_N_sum_bool_fun$ ))(= (= (collect$a ?v0 )bot$b )(forall ((?v1 T_N_sum$ ))(not (fun_app$aa ?v0 ?v1 ))))):named a102 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ ))(= (= (collect$b ?v0 )bot$c )(forall ((?v1 Dtree$ ))(not (fun_app$ab ?v0 ?v1 ))))):named a103 ))
(assert (! (forall ((?v0 N_bool_fun$ ))(= (= (collect$c ?v0 )bot$ )(forall ((?v1 N$ ))(not (fun_app$ac ?v0 ?v1 ))))):named a104 ))
(assert (! (forall ((?v0 T_T_dtree_sum_sum_set$ ))(= (forall ((?v1 T_T_dtree_sum_sum$ ))(not (member$c ?v1 ?v0 )))(= ?v0 bot$d ))):named a105 ))
(assert (! (forall ((?v0 T_T_N_sum_sum_set$ ))(= (forall ((?v1 T_T_N_sum_sum$ ))(not (member$d ?v1 ?v0 )))(= ?v0 bot$e ))):named a106 ))
(assert (! (forall ((?v0 T_set$ ))(= (forall ((?v1 T$ ))(not (member$f ?v1 ?v0 )))(= ?v0 bot$f ))):named a107 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (forall ((?v1 T_dtree_sum$ ))(not (member$a ?v1 ?v0 )))(= ?v0 bot$a ))):named a108 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (forall ((?v1 Dtree$ ))(not (member$ ?v1 ?v0 )))(= ?v0 bot$c ))):named a109 ))
(assert (! (forall ((?v0 T_N_sum_set$ ))(= (forall ((?v1 T_N_sum$ ))(not (member$b ?v1 ?v0 )))(= ?v0 bot$b ))):named a110 ))
(assert (! (forall ((?v0 N_set$ ))(= (forall ((?v1 N$ ))(not (member$e ?v1 ?v0 )))(= ?v0 bot$ ))):named a111 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ ))(= (= bot$a (collect$ ?v0 ))(forall ((?v1 T_dtree_sum$ ))(not (fun_app$z ?v0 ?v1 ))))):named a112 ))
(assert (! (forall ((?v0 T_N_sum_bool_fun$ ))(= (= bot$b (collect$a ?v0 ))(forall ((?v1 T_N_sum$ ))(not (fun_app$aa ?v0 ?v1 ))))):named a113 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ ))(= (= bot$c (collect$b ?v0 ))(forall ((?v1 Dtree$ ))(not (fun_app$ab ?v0 ?v1 ))))):named a114 ))
(assert (! (forall ((?v0 N_bool_fun$ ))(= (= bot$ (collect$c ?v0 ))(forall ((?v1 N$ ))(not (fun_app$ac ?v0 ?v1 ))))):named a115 ))
(assert (! (forall ((?v0 T_T_dtree_sum_sum$ ))(= (member$c ?v0 bot$d )false )):named a116 ))
(assert (! (forall ((?v0 T_T_N_sum_sum$ ))(= (member$d ?v0 bot$e )false )):named a117 ))
(assert (! (forall ((?v0 T$ ))(= (member$f ?v0 bot$f )false )):named a118 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(= (member$a ?v0 bot$a )false )):named a119 ))
(assert (! (forall ((?v0 Dtree$ ))(= (member$ ?v0 bot$c )false )):named a120 ))
(assert (! (forall ((?v0 T_N_sum$ ))(= (member$b ?v0 bot$b )false )):named a121 ))
(assert (! (forall ((?v0 N$ ))(= (member$e ?v0 bot$ )false )):named a122 ))
(check-sat )
;(get-unsat-core )
