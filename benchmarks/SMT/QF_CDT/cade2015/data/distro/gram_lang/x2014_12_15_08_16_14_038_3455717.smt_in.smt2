;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Nat$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_set_set$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort N_T_set_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort N_set_set_set$ 0 )
(declare-sort T_T_N_sum_fun$ 0 )
(declare-sort T_set_set_set$ 0 )
(declare-sort N_set_bool_fun$ 0 )
(declare-sort T_set_bool_fun$ 0 )
(declare-sort N_set_set_set_set$ 0 )
(declare-sort T_set_set_set_set$ 0 )
(declare-sort N_set_set_bool_fun$ 0 )
(declare-sort T_set_set_bool_fun$ 0 )
(declare-sort T_set_set_set_set_set$ 0 )
(declare-sort N_T_N_sum_set_prod_set$ 0 )
(declare-sort T_set_set_set_bool_fun$ 0 )
(declare-datatypes ()((T_N_sum$ (inl$ (projl$ T$ ))(inr$ (projr$ N$ )))(N_T_N_sum_set_prod$ (pair$ (fst$ N$ )(snd$ T_N_sum_set$ )))))
(declare-fun l$ (N_set$ N$ )T_set_set$ )
(declare-fun p$ ()N_T_N_sum_set_prod_set$ )
(declare-fun ll$ (N_set$ N$ )T_set_set$ )
(declare-fun lr$ (N_set$ N$ )T_set_set$ )
(declare-fun na$ ()N$ )
(declare-fun uu$ ()T_T_N_sum_fun$ )
(declare-fun bot$ ()N_set$ )
(declare-fun nsa$ ()N_set$ )
(declare-fun sup$ (T_set$ T_set$ )T_set$ )
(declare-fun uua$ (T_N_sum_set$ N_T_set_fun$ )T_set_bool_fun$ )
(declare-fun uub$ ()T_set_bool_fun$ )
(declare-fun uuc$ ()T_set_bool_fun$ )
(declare-fun uud$ (N_set$ N$ )T_set_bool_fun$ )
(declare-fun uue$ (N$ N_set$ )T_set_bool_fun$ )
(declare-fun uuf$ (N$ N_set$ )T_set_bool_fun$ )
(declare-fun uug$ (N_set_set$ )N_set_set_bool_fun$ )
(declare-fun uuh$ (T_set_set_set$ )T_set_set_set_bool_fun$ )
(declare-fun uui$ (T_set_set$ )T_set_set_bool_fun$ )
(declare-fun uuj$ (N_set$ )N_set_bool_fun$ )
(declare-fun uuk$ (N$ )N_bool_fun$ )
(declare-fun uul$ (T$ )T_bool_fun$ )
(declare-fun uum$ (T_set$ )T_set_bool_fun$ )
(declare-fun uun$ (N_set_set$ )N_set_set_bool_fun$ )
(declare-fun uuo$ (T_set_set_set$ )T_set_set_set_bool_fun$ )
(declare-fun uup$ (T_set_set$ )T_set_set_bool_fun$ )
(declare-fun uuq$ (N_set$ )N_set_bool_fun$ )
(declare-fun uur$ (N$ )N_bool_fun$ )
(declare-fun uus$ (T$ )T_bool_fun$ )
(declare-fun uut$ (T_set$ )T_set_bool_fun$ )
(declare-fun bot$a ()T_set$ )
(declare-fun bot$b ()T_set_set$ )
(declare-fun bot$c ()N_set_set_set$ )
(declare-fun bot$d ()T_set_set_set_set$ )
(declare-fun bot$e ()T_set_set_set$ )
(declare-fun bot$f ()N_set_set$ )
(declare-fun bot$g ()N_set_set_set_set$ )
(declare-fun bot$h ()T_set_set_set_set_set$ )
(declare-fun card$ (N_set$ )Nat$ )
(declare-fun less$ (Nat$ Nat$ )Bool )
(declare-fun sup$a (T_set_set$ )T_set$ )
(declare-fun sup$b (N_set_set_set$ )N_set_set$ )
(declare-fun sup$c (N_set_set$ N_set_set$ )N_set_set$ )
(declare-fun sup$d (T_set_set_set_set$ )T_set_set_set$ )
(declare-fun sup$e (T_set_set_set$ T_set_set_set$ )T_set_set_set$ )
(declare-fun sup$f (T_set_set_set$ )T_set_set$ )
(declare-fun sup$g (T_set_set$ T_set_set$ )T_set_set$ )
(declare-fun sup$h (N_set_set$ )N_set$ )
(declare-fun sup$i (N_set$ N_set$ )N_set$ )
(declare-fun sup$j (N_set_set_set_set$ )N_set_set_set$ )
(declare-fun sup$k (T_set_set_set_set_set$ )T_set_set_set_set$ )
(declare-fun minus$ (N_set$ N_set$ )N_set$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (N_T_N_sum_set_prod$ N_T_N_sum_set_prod_set$ )Bool )
(declare-fun minus$a (N_set_set_set$ N_set_set_set$ )N_set_set_set$ )
(declare-fun minus$b (T_set_set_set_set$ T_set_set_set_set$ )T_set_set_set_set$ )
(declare-fun minus$c (T_set_set_set$ T_set_set_set$ )T_set_set_set$ )
(declare-fun minus$d (N_set_set$ N_set_set$ )N_set_set$ )
(declare-fun minus$e (T_set$ T_set$ )T_set$ )
(declare-fun minus$f (T_set_set$ T_set_set$ )T_set_set$ )
(declare-fun vimage$ (T_T_N_sum_fun$ T_N_sum_set$ )T_set$ )
(declare-fun collect$ (T_set_bool_fun$ )T_set_set$ )
(declare-fun fun_app$ (T_set_bool_fun$ T_set$ )Bool )
(declare-fun insert$a (T_set$ T_set_set$ )T_set_set$ )
(declare-fun insert$b (N_set_set$ N_set_set_set$ )N_set_set_set$ )
(declare-fun insert$c (T_set_set_set$ T_set_set_set_set$ )T_set_set_set_set$ )
(declare-fun insert$d (T_set_set$ T_set_set_set$ )T_set_set_set$ )
(declare-fun insert$e (N_set$ N_set_set$ )N_set_set$ )
(declare-fun insert$f (T$ T_set$ )T_set$ )
(declare-fun less_eq$ (T_set_set$ T_set_set$ )Bool )
(declare-fun member$a (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$b (T_set$ T_set_set$ )Bool )
(declare-fun member$c (N$ N_set$ )Bool )
(declare-fun collect$a (N_set_set_bool_fun$ )N_set_set_set$ )
(declare-fun collect$b (T_set_set_set_bool_fun$ )T_set_set_set_set$ )
(declare-fun collect$c (T_set_set_bool_fun$ )T_set_set_set$ )
(declare-fun collect$d (N_set_bool_fun$ )N_set_set$ )
(declare-fun collect$e (N_bool_fun$ )N_set$ )
(declare-fun collect$f (T_bool_fun$ )T_set$ )
(declare-fun fun_app$a (N_T_set_fun$ N$ )T_set$ )
(declare-fun fun_app$b (T_T_N_sum_fun$ T$ )T_N_sum$ )
(declare-fun fun_app$c (T_set_set_set_bool_fun$ T_set_set_set$ )Bool )
(declare-fun fun_app$d (T_set_set_bool_fun$ T_set_set$ )Bool )
(declare-fun fun_app$e (N_set_set_bool_fun$ N_set_set$ )Bool )
(declare-fun fun_app$f (N_set_bool_fun$ N_set$ )Bool )
(declare-fun fun_app$g (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$h (N_bool_fun$ N$ )Bool )
(declare-fun less_eq$a (N_set_set_set$ N_set_set_set$ )Bool )
(declare-fun less_eq$b (T_set_set_set_set$ T_set_set_set_set$ )Bool )
(declare-fun less_eq$c (T_set_set_set$ T_set_set_set$ )Bool )
(declare-fun less_eq$d (N_set_set$ N_set_set$ )Bool )
(declare-fun less_eq$e (T_set$ T_set$ )Bool )
(declare-fun less_eq$f (N_set$ N_set$ )Bool )
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$ uub$ ?v0 )(exists ((?v1 T_N_sum_set$ )(?v2 N_T_set_fun$ ))(and (= ?v0 (sup$ (vimage$ uu$ ?v1 )(sup$a (collect$ (uua$ ?v1 ?v2 )))))(and (member$ (pair$ na$ ?v1 )p$ )(forall ((?v3 N$ ))(=> (member$a (inr$ ?v3 )?v1 )(member$b (fun_app$a ?v2 ?v3 )(lr$ (minus$ nsa$ (insert$ na$ bot$ ))?v3 )))))))):pattern ((fun_app$ uub$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$ uuc$ ?v0 )(exists ((?v1 T_N_sum_set$ )(?v2 N_T_set_fun$ ))(and (= ?v0 (sup$ (vimage$ uu$ ?v1 )(sup$a (collect$ (uua$ ?v1 ?v2 )))))(and (member$ (pair$ na$ ?v1 )p$ )(forall ((?v3 N$ ))(=> (member$a (inr$ ?v3 )?v1 )(member$b (fun_app$a ?v2 ?v3 )(ll$ (minus$ nsa$ (insert$ na$ bot$ ))?v3 )))))))):pattern ((fun_app$ uuc$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$b uu$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$b uu$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set$ ))(! (= (fun_app$c (uuh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$c (uuh$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set$ ))(! (= (fun_app$d (uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (uui$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(! (= (fun_app$e (uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$e (uug$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(! (= (fun_app$ (uum$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (uum$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(! (= (fun_app$f (uuj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (uuj$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(! (= (fun_app$g (uul$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$g (uul$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(! (= (fun_app$h (uuk$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (uuk$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set$ ))(! (= (fun_app$c (uuo$ ?v0 )?v1 )(= ?v1 ?v0 )):pattern ((fun_app$c (uuo$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set$ ))(! (= (fun_app$d (uup$ ?v0 )?v1 )(= ?v1 ?v0 )):pattern ((fun_app$d (uup$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(! (= (fun_app$e (uun$ ?v0 )?v1 )(= ?v1 ?v0 )):pattern ((fun_app$e (uun$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(! (= (fun_app$ (uut$ ?v0 )?v1 )(= ?v1 ?v0 )):pattern ((fun_app$ (uut$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(! (= (fun_app$f (uuq$ ?v0 )?v1 )(= ?v1 ?v0 )):pattern ((fun_app$f (uuq$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(! (= (fun_app$g (uus$ ?v0 )?v1 )(= ?v1 ?v0 )):pattern ((fun_app$g (uus$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(! (= (fun_app$h (uur$ ?v0 )?v1 )(= ?v1 ?v0 )):pattern ((fun_app$h (uur$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 N_T_set_fun$ )(?v2 T_set$ ))(! (= (fun_app$ (uua$ ?v0 ?v1 )?v2 )(exists ((?v3 N$ ))(and (= ?v2 (fun_app$a ?v1 ?v3 ))(member$a (inr$ ?v3 )?v0 )))):pattern ((fun_app$ (uua$ ?v0 ?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_set$ ))(! (= (fun_app$ (uue$ ?v0 ?v1 )?v2 )(exists ((?v3 T_N_sum_set$ )(?v4 N_T_set_fun$ ))(and (= ?v2 (sup$ (vimage$ uu$ ?v3 )(sup$a (collect$ (uua$ ?v3 ?v4 )))))(and (member$ (pair$ ?v0 ?v3 )p$ )(forall ((?v5 N$ ))(=> (member$a (inr$ ?v5 )?v3 )(member$b (fun_app$a ?v4 ?v5 )(lr$ (minus$ ?v1 (insert$ ?v0 bot$ ))?v5 )))))))):pattern ((fun_app$ (uue$ ?v0 ?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 T_set$ ))(! (= (fun_app$ (uuf$ ?v0 ?v1 )?v2 )(exists ((?v3 T_N_sum_set$ )(?v4 N_T_set_fun$ ))(and (= ?v2 (sup$ (vimage$ uu$ ?v3 )(sup$a (collect$ (uua$ ?v3 ?v4 )))))(and (member$ (pair$ ?v0 ?v3 )p$ )(forall ((?v5 N$ ))(=> (member$a (inr$ ?v5 )?v3 )(member$b (fun_app$a ?v4 ?v5 )(l$ (minus$ ?v1 (insert$ ?v0 bot$ ))?v5 )))))))):pattern ((fun_app$ (uuf$ ?v0 ?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N$ )(?v2 T_set$ ))(! (= (fun_app$ (uud$ ?v0 ?v1 )?v2 )(exists ((?v3 T_N_sum_set$ )(?v4 N_T_set_fun$ ))(and (= ?v2 (sup$ (vimage$ uu$ ?v3 )(sup$a (collect$ (uua$ ?v3 ?v4 )))))(and (member$ (pair$ ?v1 ?v3 )p$ )(forall ((?v5 N$ ))(=> (member$a (inr$ ?v5 )?v3 )(member$b (fun_app$a ?v4 ?v5 )(ll$ (minus$ ?v0 (insert$ ?v1 bot$ ))?v5 )))))))):pattern ((fun_app$ (uud$ ?v0 ?v1 )?v2 )))):named a20 ))
(assert (! (not (less_eq$ (collect$ uub$ )(ite (not (member$c na$ nsa$ ))(insert$a bot$a bot$b )(collect$ uuc$ )))):named a21 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(=> (member$c ?v0 ?v1 )(less$ (card$ (minus$ ?v1 (insert$ ?v0 bot$ )))(card$ ?v1 )))):named a22 ))
(assert (! (member$c na$ nsa$ ):named a23 ))
(assert (! (forall ((?v0 N_set$ ))(=> (less$ (card$ ?v0 )(card$ nsa$ ))(forall ((?v1 N$ ))(less_eq$ (lr$ ?v0 ?v1 )(ll$ ?v0 ?v1 ))))):named a24 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N$ ))(= (ll$ ?v0 ?v1 )(ite (not (member$c ?v1 ?v0 ))(insert$a bot$a bot$b )(collect$ (uud$ ?v0 ?v1 ))))):named a25 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(=> (member$c ?v0 ?v1 )(less_eq$ (lr$ ?v1 ?v0 )(collect$ (uue$ ?v0 ?v1 ))))):named a26 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(! (=> (not (member$c ?v0 ?v1 ))(= (lr$ ?v1 ?v0 )(insert$a bot$a bot$b ))):pattern ((lr$ ?v1 ?v0 )))):named a27 ))
(assert (! (forall ((?v0 N$ ))(exists ((?v1 T_N_sum_set$ ))(member$ (pair$ ?v0 ?v1 )p$ ))):named a28 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(=> (member$c ?v0 ?v1 )(less_eq$ (collect$ (uuf$ ?v0 ?v1 ))(l$ ?v1 ?v0 )))):named a29 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set_set$ ))(= (sup$b (insert$b ?v0 ?v1 ))(sup$c ?v0 (sup$b ?v1 )))):named a30 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set_set$ ))(= (sup$d (insert$c ?v0 ?v1 ))(sup$e ?v0 (sup$d ?v1 )))):named a31 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set$ ))(= (sup$f (insert$d ?v0 ?v1 ))(sup$g ?v0 (sup$f ?v1 )))):named a32 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ ))(= (sup$h (insert$e ?v0 ?v1 ))(sup$i ?v0 (sup$h ?v1 )))):named a33 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ ))(= (sup$a (insert$a ?v0 ?v1 ))(sup$ ?v0 (sup$a ?v1 )))):named a34 ))
(assert (! (forall ((?v0 N_set_set$ ))(= (sup$b (insert$b ?v0 bot$c ))?v0 )):named a35 ))
(assert (! (forall ((?v0 T_set_set_set$ ))(= (sup$d (insert$c ?v0 bot$d ))?v0 )):named a36 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (sup$f (insert$d ?v0 bot$e ))?v0 )):named a37 ))
(assert (! (forall ((?v0 N_set$ ))(= (sup$h (insert$e ?v0 bot$f ))?v0 )):named a38 ))
(assert (! (forall ((?v0 T_set$ ))(= (sup$a (insert$a ?v0 bot$b ))?v0 )):named a39 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set_set$ ))(= (insert$b ?v0 (minus$a ?v1 (insert$b ?v0 bot$c )))(insert$b ?v0 ?v1 ))):named a40 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set_set$ ))(= (insert$c ?v0 (minus$b ?v1 (insert$c ?v0 bot$d )))(insert$c ?v0 ?v1 ))):named a41 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set$ ))(= (insert$d ?v0 (minus$c ?v1 (insert$d ?v0 bot$e )))(insert$d ?v0 ?v1 ))):named a42 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ ))(= (insert$e ?v0 (minus$d ?v1 (insert$e ?v0 bot$f )))(insert$e ?v0 ?v1 ))):named a43 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ ))(= (insert$f ?v0 (minus$e ?v1 (insert$f ?v0 bot$a )))(insert$f ?v0 ?v1 ))):named a44 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ ))(= (insert$a ?v0 (minus$f ?v1 (insert$a ?v0 bot$b )))(insert$a ?v0 ?v1 ))):named a45 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(= (insert$ ?v0 (minus$ ?v1 (insert$ ?v0 bot$ )))(insert$ ?v0 ?v1 ))):named a46 ))
(assert (! (forall ((?v0 N_set_set_set$ )(?v1 N_set_set_set$ ))(= (= (minus$a ?v0 ?v1 )bot$c )(less_eq$a ?v0 ?v1 ))):named a47 ))
(assert (! (forall ((?v0 T_set_set_set_set$ )(?v1 T_set_set_set_set$ ))(= (= (minus$b ?v0 ?v1 )bot$d )(less_eq$b ?v0 ?v1 ))):named a48 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set$ ))(= (= (minus$c ?v0 ?v1 )bot$e )(less_eq$c ?v0 ?v1 ))):named a49 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(= (= (minus$d ?v0 ?v1 )bot$f )(less_eq$d ?v0 ?v1 ))):named a50 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(= (= (minus$e ?v0 ?v1 )bot$a )(less_eq$e ?v0 ?v1 ))):named a51 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (= (minus$ ?v0 ?v1 )bot$ )(less_eq$f ?v0 ?v1 ))):named a52 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set$ ))(= (= (minus$f ?v0 ?v1 )bot$b )(less_eq$ ?v0 ?v1 ))):named a53 ))
(assert (! (= (sup$j bot$g )bot$c ):named a54 ))
(assert (! (= (sup$k bot$h )bot$d ):named a55 ))
(assert (! (= (sup$d bot$d )bot$e ):named a56 ))
(assert (! (= (sup$b bot$c )bot$f ):named a57 ))
(assert (! (= (sup$h bot$f )bot$ ):named a58 ))
(assert (! (= (sup$f bot$e )bot$b ):named a59 ))
(assert (! (= (sup$a bot$b )bot$a ):named a60 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set_set$ )(?v2 N_set_set$ ))(= (= (insert$b ?v0 ?v1 )(insert$b ?v2 bot$c ))(and (= ?v0 ?v2 )(less_eq$a ?v1 (insert$b ?v2 bot$c ))))):named a61 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set_set$ )(?v2 T_set_set_set$ ))(= (= (insert$c ?v0 ?v1 )(insert$c ?v2 bot$d ))(and (= ?v0 ?v2 )(less_eq$b ?v1 (insert$c ?v2 bot$d ))))):named a62 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set$ )(?v2 T_set_set$ ))(= (= (insert$d ?v0 ?v1 )(insert$d ?v2 bot$e ))(and (= ?v0 ?v2 )(less_eq$c ?v1 (insert$d ?v2 bot$e ))))):named a63 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ )(?v2 N_set$ ))(= (= (insert$e ?v0 ?v1 )(insert$e ?v2 bot$f ))(and (= ?v0 ?v2 )(less_eq$d ?v1 (insert$e ?v2 bot$f ))))):named a64 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N$ ))(= (= (insert$ ?v0 ?v1 )(insert$ ?v2 bot$ ))(and (= ?v0 ?v2 )(less_eq$f ?v1 (insert$ ?v2 bot$ ))))):named a65 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T$ ))(= (= (insert$f ?v0 ?v1 )(insert$f ?v2 bot$a ))(and (= ?v0 ?v2 )(less_eq$e ?v1 (insert$f ?v2 bot$a ))))):named a66 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ )(?v2 T_set$ ))(= (= (insert$a ?v0 ?v1 )(insert$a ?v2 bot$b ))(and (= ?v0 ?v2 )(less_eq$ ?v1 (insert$a ?v2 bot$b ))))):named a67 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ )(?v2 N_set_set_set$ ))(= (= (insert$b ?v0 bot$c )(insert$b ?v1 ?v2 ))(and (= ?v1 ?v0 )(less_eq$a ?v2 (insert$b ?v0 bot$c ))))):named a68 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set$ )(?v2 T_set_set_set_set$ ))(= (= (insert$c ?v0 bot$d )(insert$c ?v1 ?v2 ))(and (= ?v1 ?v0 )(less_eq$b ?v2 (insert$c ?v0 bot$d ))))):named a69 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set$ )(?v2 T_set_set_set$ ))(= (= (insert$d ?v0 bot$e )(insert$d ?v1 ?v2 ))(and (= ?v1 ?v0 )(less_eq$c ?v2 (insert$d ?v0 bot$e ))))):named a70 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set_set$ ))(= (= (insert$e ?v0 bot$f )(insert$e ?v1 ?v2 ))(and (= ?v1 ?v0 )(less_eq$d ?v2 (insert$e ?v0 bot$f ))))):named a71 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ )(?v2 N_set$ ))(= (= (insert$ ?v0 bot$ )(insert$ ?v1 ?v2 ))(and (= ?v1 ?v0 )(less_eq$f ?v2 (insert$ ?v0 bot$ ))))):named a72 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ )(?v2 T_set$ ))(= (= (insert$f ?v0 bot$a )(insert$f ?v1 ?v2 ))(and (= ?v1 ?v0 )(less_eq$e ?v2 (insert$f ?v0 bot$a ))))):named a73 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_set_set$ ))(= (= (insert$a ?v0 bot$b )(insert$a ?v1 ?v2 ))(and (= ?v1 ?v0 )(less_eq$ ?v2 (insert$a ?v0 bot$b ))))):named a74 ))
(assert (! (forall ((?v0 N_set_set$ ))(= (collect$a (uug$ ?v0 ))(insert$b ?v0 bot$c ))):named a75 ))
(assert (! (forall ((?v0 T_set_set_set$ ))(= (collect$b (uuh$ ?v0 ))(insert$c ?v0 bot$d ))):named a76 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (collect$c (uui$ ?v0 ))(insert$d ?v0 bot$e ))):named a77 ))
(assert (! (forall ((?v0 N_set$ ))(= (collect$d (uuj$ ?v0 ))(insert$e ?v0 bot$f ))):named a78 ))
(assert (! (forall ((?v0 N$ ))(= (collect$e (uuk$ ?v0 ))(insert$ ?v0 bot$ ))):named a79 ))
(assert (! (forall ((?v0 T$ ))(= (collect$f (uul$ ?v0 ))(insert$f ?v0 bot$a ))):named a80 ))
(assert (! (forall ((?v0 T_set$ ))(= (collect$ (uum$ ?v0 ))(insert$a ?v0 bot$b ))):named a81 ))
(assert (! (forall ((?v0 N_set_set$ ))(= (collect$a (uun$ ?v0 ))(insert$b ?v0 bot$c ))):named a82 ))
(assert (! (forall ((?v0 T_set_set_set$ ))(= (collect$b (uuo$ ?v0 ))(insert$c ?v0 bot$d ))):named a83 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (collect$c (uup$ ?v0 ))(insert$d ?v0 bot$e ))):named a84 ))
(assert (! (forall ((?v0 N_set$ ))(= (collect$d (uuq$ ?v0 ))(insert$e ?v0 bot$f ))):named a85 ))
(assert (! (forall ((?v0 N$ ))(= (collect$e (uur$ ?v0 ))(insert$ ?v0 bot$ ))):named a86 ))
(assert (! (forall ((?v0 T$ ))(= (collect$f (uus$ ?v0 ))(insert$f ?v0 bot$a ))):named a87 ))
(assert (! (forall ((?v0 T_set$ ))(= (collect$ (uut$ ?v0 ))(insert$a ?v0 bot$b ))):named a88 ))
(check-sat )
;(get-unsat-core )
