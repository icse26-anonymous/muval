;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort N_T_fun$ 0 )
(declare-sort T_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_dtree_sum_T_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-datatypes ()((T_dtree_sum$ (inl$ (projl$ T$ ))(inr$ (projr$ Dtree$ )))))
(declare-fun t$ ()T$ )
(declare-fun ns$ ()N_set$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()T_T_dtree_sum_fun$ )
(declare-fun bot$ ()N_set$ )
(declare-fun tr0$ ()Dtree$ )
(declare-fun tr1$ ()Dtree$ )
(declare-fun tra$ ()Dtree$ )
(declare-fun bot$a ()T_dtree_sum_set$ )
(declare-fun bot$b ()T_set$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun inFr$ (N_set$ Dtree$ T$ )Bool )
(declare-fun root$ (Dtree$ )N$ )
(declare-fun inFrr$ (N_set$ Dtree$ T$ )Bool )
(declare-fun minus$ (N_set$ N_set$ )N_set$ )
(declare-fun hsubst$ (Dtree$ Dtree$ )Dtree$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (T$ T_set$ )Bool )
(declare-fun minus$a (T_dtree_sum_set$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun minus$b (T_set$ T_set$ )T_set$ )
(declare-fun vimage$ (T_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun fun_app$ (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun insert$a (T_dtree_sum$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun insert$b (T$ T_set$ )T_set$ )
(declare-fun member$a (N$ N_set$ )Bool )
(declare-fun member$b (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun vimage$a (T_dtree_sum_N_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun vimage$b (T_N_fun$ N_set$ )T_set$ )
(declare-fun vimage$c (N_T_dtree_sum_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun vimage$d (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$e (N_T_fun$ T_set$ )N_set$ )
(declare-fun vimage$f (T_dtree_sum_T_fun$ T_set$ )T_dtree_sum_set$ )
(declare-fun vimage$g (T_T_fun$ T_set$ )T_set$ )
(declare-fun vimage$h (N_N_fun$ N_set$ )N_set$ )
(declare-fun hsubst_c$ (Dtree$ Dtree$ )T_dtree_sum_set$ )
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$ uu$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (not (or (member$ t$ (vimage$ uu$ (cont$ tr0$ )))(or (inFrr$ (minus$ ns$ (insert$ (root$ tr0$ )bot$ ))tr0$ t$ )(inFr$ (minus$ ns$ (insert$ (root$ tr0$ )bot$ ))tra$ t$ )))):named a1 ))
(assert (! (inFr$ ns$ tr1$ t$ ):named a2 ))
(assert (! (= tr1$ (hsubst$ tr0$ tra$ )):named a3 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (= (root$ ?v0 )(root$ tr0$ ))(= (hsubst$ tr0$ ?v0 )(hsubst$ tr0$ tr0$ )))):named a4 ))
(assert (! (inFr$ ns$ (hsubst$ tr0$ tr$ )t$ ):named a5 ))
(assert (! (forall ((?v0 Dtree$ ))(= (root$ (hsubst$ tr0$ ?v0 ))(root$ ?v0 ))):named a6 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (hsubst_c$ tr0$ ?v0 )(ite (= (root$ ?v0 )(root$ tr0$ ))(cont$ tr0$ )(cont$ ?v0 ))):pattern ((hsubst_c$ tr0$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (= (root$ ?v0 )(root$ tr0$ ))(= (vimage$ uu$ (cont$ (hsubst$ tr0$ ?v0 )))(vimage$ uu$ (cont$ tr0$ ))))):named a8 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (not (= (root$ ?v0 )(root$ tr0$ )))(= (vimage$ uu$ (cont$ (hsubst$ tr0$ ?v0 )))(vimage$ uu$ (cont$ ?v0 ))))):named a9 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (root$ (hsubst$ ?v0 ?v1 ))(root$ ?v1 ))):named a10 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (inFr$ ?v0 ?v1 ?v2 )(member$a (root$ ?v1 )?v0 ))):named a11 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (root$ ?v0 )(root$ ?v1 ))(= (vimage$ uu$ (cont$ (hsubst$ ?v1 ?v0 )))(vimage$ uu$ (cont$ ?v1 ))))):named a12 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (root$ ?v0 )(root$ ?v1 ))(= (hsubst$ ?v1 ?v0 )(hsubst$ ?v1 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (and (member$a (root$ ?v0 )?v1 )(member$b (inl$ ?v2 )(cont$ ?v0 )))(inFr$ ?v1 ?v0 ?v2 ))):named a14 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (not (= (root$ ?v0 )(root$ ?v1 )))(= (vimage$ uu$ (cont$ (hsubst$ ?v1 ?v0 )))(vimage$ uu$ (cont$ ?v0 ))))):named a15 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (not (member$a (root$ ?v0 )?v1 ))(not (inFr$ ?v1 ?v0 ?v2 )))):named a16 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ ))(= (insert$a ?v0 (minus$a ?v1 (insert$a ?v0 bot$a )))(insert$a ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ ))(= (insert$b ?v0 (minus$b ?v1 (insert$b ?v0 bot$b )))(insert$b ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(= (insert$ ?v0 (minus$ ?v1 (insert$ ?v0 bot$ )))(insert$ ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ ))(= (vimage$a ?v0 bot$ )bot$a )):named a20 ))
(assert (! (forall ((?v0 T_N_fun$ ))(= (vimage$b ?v0 bot$ )bot$b )):named a21 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ ))(= (vimage$c ?v0 bot$a )bot$ )):named a22 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ ))(= (vimage$d ?v0 bot$a )bot$a )):named a23 ))
(assert (! (forall ((?v0 N_T_fun$ ))(= (vimage$e ?v0 bot$b )bot$ )):named a24 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ ))(= (vimage$f ?v0 bot$b )bot$a )):named a25 ))
(assert (! (forall ((?v0 T_T_fun$ ))(= (vimage$g ?v0 bot$b )bot$b )):named a26 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ ))(= (vimage$ ?v0 bot$a )bot$b )):named a27 ))
(assert (! (forall ((?v0 N_N_fun$ ))(= (vimage$h ?v0 bot$ )bot$ )):named a28 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_set$ ))(=> (member$ ?v0 ?v1 )(= (minus$b (insert$b ?v0 ?v2 )?v1 )(minus$b ?v2 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (member$b ?v0 ?v1 )(= (minus$a (insert$a ?v0 ?v2 )?v1 )(minus$a ?v2 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (member$a ?v0 ?v1 )(= (minus$ (insert$ ?v0 ?v2 )?v1 )(minus$ ?v2 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_set$ ))(=> (not (member$ ?v0 ?v1 ))(= (minus$b ?v1 (insert$b ?v0 ?v2 ))(minus$b ?v1 ?v2 )))):named a32 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (not (member$b ?v0 ?v1 ))(= (minus$a ?v1 (insert$a ?v0 ?v2 ))(minus$a ?v1 ?v2 )))):named a33 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (not (member$a ?v0 ?v1 ))(= (minus$ ?v1 (insert$ ?v0 ?v2 ))(minus$ ?v1 ?v2 )))):named a34 ))
(check-sat )
;(get-unsat-core )
