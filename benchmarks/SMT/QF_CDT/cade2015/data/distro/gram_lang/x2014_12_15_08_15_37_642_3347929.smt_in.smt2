;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_T_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort N_set_N_set_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set$ 0 )
(declare-sort N_set_set_N_set_set_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort N_N_T_N_sum_set_prod_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_N_fun$ 0 )
(declare-sort T_N_sum_set_T_N_sum_set_fun$ 0 )
(declare-sort T_T_set_sum_T_T_set_sum_fun$ 0 )
(declare-sort T_T_sum_set_T_T_sum_set_fun$ 0 )
(declare-sort T_set_T_sum_T_set_T_sum_fun$ 0 )
(declare-sort T_T_T_sum_sum_T_T_T_sum_sum_fun$ 0 )
(declare-sort T_T_sum_T_sum_T_T_sum_T_sum_fun$ 0 )
(declare-sort T_set_set_set_T_set_set_set_fun$ 0 )
(declare-sort T_T_sum_set_set_T_T_sum_set_set_fun$ 0 )
(declare-sort T_set_T_set_sum_T_set_T_set_sum_fun$ 0 )
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ 0 )
(declare-sort T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set_set_N_T_N_sum_set_prod_set_set_fun$ 0 )
(declare-datatypes ()((T_dtree_sum$ (inl$ (projl$ T$ ))(inr$ (projr$ Dtree$ )))(T_N_sum$ (inl$a (projl$a T$ ))(inr$a (projr$a N$ )))(T_T_sum$ (inl$b (projl$b T$ ))(inr$b (projr$b T$ )))(N_T_N_sum_set_prod$ (pair$ (fst$ N$ )(snd$ T_N_sum_set$ )))(T_T_set_sum$ (inl$c (projl$c T$ ))(inr$c (projr$c T_set$ )))(T_set_T_sum$ (inl$d (projl$d T_set$ ))(inr$d (projr$d T$ )))(T_T_T_sum_sum$ (inl$e (projl$e T$ ))(inr$e (projr$e T_T_sum$ )))(T_set_T_set_sum$ (inl$f (projl$f T_set$ ))(inr$f (projr$f T_set$ )))(T_T_sum_T_sum$ (inl$g (projl$g T_T_sum$ ))(inr$g (projr$g T$ )))(T_set_T_T_sum_sum$ (inl$h (projl$h T_set$ ))(inr$h (projr$h T_T_sum$ )))(T_T_sum_T_set_sum$ (inl$i (projl$i T_T_sum$ ))(inr$i (projr$i T_set$ )))(T_T_sum_T_T_sum_sum$ (inl$j (projl$j T_T_sum$ ))(inr$j (projr$j T_T_sum$ )))))
(declare-fun n$ ()N$ )
(declare-fun p$ ()N_T_N_sum_set_prod_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun ns$ ()N_set$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun ftr$ ()N_dtree_fun$ )
(declare-fun id$a ()N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ )
(declare-fun id$b ()N_T_N_sum_set_prod_set_set_N_T_N_sum_set_prod_set_set_fun$ )
(declare-fun id$c ()T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun id$d ()T_T_sum_set_set_T_T_sum_set_set_fun$ )
(declare-fun id$e ()T_set_set_T_set_set_fun$ )
(declare-fun id$f ()T_set_set_set_T_set_set_set_fun$ )
(declare-fun id$g ()N_set_N_set_fun$ )
(declare-fun id$h ()N_set_set_N_set_set_fun$ )
(declare-fun id$i ()T_N_sum_T_N_sum_fun$ )
(declare-fun id$j ()T_N_sum_set_T_N_sum_set_fun$ )
(declare-fun id$k ()T_set_T_set_fun$ )
(declare-fun id$l ()T_T_sum_T_T_sum_fun$ )
(declare-fun id$m ()N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )
(declare-fun id$n ()N_N_fun$ )
(declare-fun id$o ()T_T_set_sum_T_T_set_sum_fun$ )
(declare-fun id$p ()T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun id$q ()T_T_T_sum_sum_T_T_T_sum_sum_fun$ )
(declare-fun id$r ()T_set_T_set_sum_T_set_T_set_sum_fun$ )
(declare-fun id$s ()T_T_sum_T_sum_T_T_sum_T_sum_fun$ )
(declare-fun id$t ()T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ )
(declare-fun id$u ()T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ )
(declare-fun id$v ()T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ )
(declare-fun tns$ ()T_N_sum_set$ )
(declare-fun tr$a ()Dtree$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun rcut$ (Dtree$ )Dtree$ )
(declare-fun root$ (Dtree$ )N$ )
(declare-fun image$ (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun hsubst$ (Dtree$ Dtree$ )Dtree$ )
(declare-fun image$a (N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ )N_T_N_sum_set_prod_set_set_N_T_N_sum_set_prod_set_set_fun$ )
(declare-fun image$b (T_T_sum_set_T_T_sum_set_fun$ )T_T_sum_set_set_T_T_sum_set_set_fun$ )
(declare-fun image$c (T_set_set_T_set_set_fun$ )T_set_set_set_T_set_set_set_fun$ )
(declare-fun image$d (N_set_N_set_fun$ )N_set_set_N_set_set_fun$ )
(declare-fun image$e (T_N_sum_T_N_sum_fun$ )T_N_sum_set_T_N_sum_set_fun$ )
(declare-fun image$f (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun image$g (T_T_sum_T_T_sum_fun$ )T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun image$h (N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ )
(declare-fun image$i (N_N_fun$ )N_set_N_set_fun$ )
(declare-fun image$j (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$k (N_N_T_N_sum_set_prod_fun$ N_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun image$l (N_T_N_sum_set_prod_N_fun$ N_T_N_sum_set_prod_set$ )N_set$ )
(declare-fun image$m (N_T_N_sum_fun$ N_set$ )T_N_sum_set$ )
(declare-fun image$n (N_T_dtree_sum_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun image$o (T_N_sum_N_fun$ T_N_sum_set$ )N_set$ )
(declare-fun image$p (T_dtree_sum_N_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun member$ (N$ N_set$ )Bool )
(declare-fun fun_app$ (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$ (T_T_fun$ )N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ )
(declare-fun member$a (N_T_N_sum_set_prod$ N_T_N_sum_set_prod_set$ )Bool )
(declare-fun member$b (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$c (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$d (T$ T_set$ )Bool )
(declare-fun member$e (T_set$ T_set_set$ )Bool )
(declare-fun fun_app$a (N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun fun_app$b (T_T_sum_set_T_T_sum_set_fun$ T_T_sum_set$ )T_T_sum_set$ )
(declare-fun fun_app$c (T_set_set_T_set_set_fun$ T_set_set$ )T_set_set$ )
(declare-fun fun_app$d (N_set_N_set_fun$ N_set$ )N_set$ )
(declare-fun fun_app$e (N_N_fun$ N$ )N$ )
(declare-fun fun_app$f (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$g (T_T_sum_T_T_sum_fun$ T_T_sum$ )T_T_sum$ )
(declare-fun fun_app$h (T_T_fun$ T$ )T$ )
(declare-fun fun_app$i (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$j (N_N_T_N_sum_set_prod_fun$ N$ )N_T_N_sum_set_prod$ )
(declare-fun fun_app$k (N_T_N_sum_set_prod_N_fun$ N_T_N_sum_set_prod$ )N$ )
(declare-fun fun_app$l (N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ N_T_N_sum_set_prod$ )N_T_N_sum_set_prod$ )
(declare-fun fun_app$m (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$n (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$o (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$p (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$q (T_T_set_sum_T_T_set_sum_fun$ T_T_set_sum$ )T_T_set_sum$ )
(declare-fun fun_app$r (T_set_T_sum_T_set_T_sum_fun$ T_set_T_sum$ )T_set_T_sum$ )
(declare-fun fun_app$s (T_T_T_sum_sum_T_T_T_sum_sum_fun$ T_T_T_sum_sum$ )T_T_T_sum_sum$ )
(declare-fun fun_app$t (T_set_T_set_sum_T_set_T_set_sum_fun$ T_set_T_set_sum$ )T_set_T_set_sum$ )
(declare-fun fun_app$u (T_T_sum_T_sum_T_T_sum_T_sum_fun$ T_T_sum_T_sum$ )T_T_sum_T_sum$ )
(declare-fun fun_app$v (T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ T_set_T_T_sum_sum$ )T_set_T_T_sum_sum$ )
(declare-fun fun_app$w (T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ T_T_sum_T_set_sum$ )T_T_sum_T_set_sum$ )
(declare-fun fun_app$x (T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ T_T_sum_T_T_sum_sum$ )T_T_sum_T_T_sum_sum$ )
(declare-fun fun_app$y (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun hsubst_r$ (Dtree$ )N$ )
(declare-fun map_sum$a (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ T_set_T_set_fun$ )T_T_set_sum_T_T_set_sum_fun$ )
(declare-fun map_sum$c (T_set_T_set_fun$ T_T_fun$ )T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun map_sum$d (T_T_fun$ T_T_sum_T_T_sum_fun$ )T_T_T_sum_sum_T_T_T_sum_sum_fun$ )
(declare-fun map_sum$e (T_set_T_set_fun$ T_set_T_set_fun$ )T_set_T_set_sum_T_set_T_set_sum_fun$ )
(declare-fun map_sum$f (T_T_sum_T_T_sum_fun$ T_T_fun$ )T_T_sum_T_sum_T_T_sum_T_sum_fun$ )
(declare-fun map_sum$g (T_set_T_set_fun$ T_T_sum_T_T_sum_fun$ )T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ )
(declare-fun map_sum$h (T_T_sum_T_T_sum_fun$ T_set_T_set_fun$ )T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ )
(declare-fun map_sum$i (T_T_sum_T_T_sum_fun$ T_T_sum_T_T_sum_fun$ )T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ )
(declare-fun map_sum$j (T_T_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(assert (! (not (= (root$ (node$ n$ (image$ (fun_app$ (map_sum$ id$ )ftr$ )tns$ )))n$ )):named a0 ))
(assert (! (member$ n$ ns$ ):named a1 ))
(assert (! (= tr$ (node$ n$ (image$ (fun_app$ (map_sum$ id$ )ftr$ )tns$ ))):named a2 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_set$ ))(= (root$ (node$ ?v0 ?v1 ))?v0 )):named a3 ))
(assert (! (= (image$a id$a )id$b ):named a4 ))
(assert (! (= (image$b id$c )id$d ):named a5 ))
(assert (! (= (image$c id$e )id$f ):named a6 ))
(assert (! (= (image$d id$g )id$h ):named a7 ))
(assert (! (= (image$e id$i )id$j ):named a8 ))
(assert (! (= (image$f id$k )id$e ):named a9 ))
(assert (! (= (image$g id$l )id$c ):named a10 ))
(assert (! (= (image$h id$m )id$a ):named a11 ))
(assert (! (= (image$i id$n )id$g ):named a12 ))
(assert (! (= (image$j id$ )id$k ):named a13 ))
(assert (! (member$a (pair$ n$ tns$ )p$ ):named a14 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(! (= (fun_app$a id$a ?v0 )?v0 ):pattern ((fun_app$a id$a ?v0 )))):named a15 ))
(assert (! (forall ((?v0 T_T_sum_set$ ))(! (= (fun_app$b id$c ?v0 )?v0 ):pattern ((fun_app$b id$c ?v0 )))):named a16 ))
(assert (! (forall ((?v0 T_set_set$ ))(! (= (fun_app$c id$e ?v0 )?v0 ):pattern ((fun_app$c id$e ?v0 )))):named a17 ))
(assert (! (forall ((?v0 N_set$ ))(! (= (fun_app$d id$g ?v0 )?v0 ):pattern ((fun_app$d id$g ?v0 )))):named a18 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$e id$n ?v0 )?v0 ):pattern ((fun_app$e id$n ?v0 )))):named a19 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$f id$k ?v0 )?v0 ):pattern ((fun_app$f id$k ?v0 )))):named a20 ))
(assert (! (forall ((?v0 T_T_sum$ ))(! (= (fun_app$g id$l ?v0 )?v0 ):pattern ((fun_app$g id$l ?v0 )))):named a21 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$h id$ ?v0 )?v0 ):pattern ((fun_app$h id$ ?v0 )))):named a22 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$e ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (fun_app$d (image$i ?v1 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$c ?v0 (image$ ?v1 ?v3 )))):named a24 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_N_T_N_sum_set_prod_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$k ?v1 ?v3 )))):named a25 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_set_prod_N_fun$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= ?v0 (fun_app$k ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$l ?v1 ?v3 )))):named a26 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (fun_app$a (image$h ?v1 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$h ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$d ?v0 (fun_app$f (image$j ?v1 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$m ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$m ?v1 ?v3 )))):named a29 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$n ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$c ?v0 (image$n ?v1 ?v3 )))):named a30 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$o ?v1 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$ ?v0 (image$p ?v1 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 T_T_sum$ ))(= (fun_app$g (map_sum$a id$ id$ )?v0 )?v0 )):named a33 ))
(assert (! (forall ((?v0 T_T_set_sum$ ))(= (fun_app$q (map_sum$b id$ id$k )?v0 )?v0 )):named a34 ))
(assert (! (forall ((?v0 T_set_T_sum$ ))(= (fun_app$r (map_sum$c id$k id$ )?v0 )?v0 )):named a35 ))
(assert (! (forall ((?v0 T_T_T_sum_sum$ ))(= (fun_app$s (map_sum$d id$ id$l )?v0 )?v0 )):named a36 ))
(assert (! (forall ((?v0 T_set_T_set_sum$ ))(= (fun_app$t (map_sum$e id$k id$k )?v0 )?v0 )):named a37 ))
(assert (! (forall ((?v0 T_T_sum_T_sum$ ))(= (fun_app$u (map_sum$f id$l id$ )?v0 )?v0 )):named a38 ))
(assert (! (forall ((?v0 T_set_T_T_sum_sum$ ))(= (fun_app$v (map_sum$g id$k id$l )?v0 )?v0 )):named a39 ))
(assert (! (forall ((?v0 T_T_sum_T_set_sum$ ))(= (fun_app$w (map_sum$h id$l id$k )?v0 )?v0 )):named a40 ))
(assert (! (forall ((?v0 T_T_sum_T_T_sum_sum$ ))(= (fun_app$x (map_sum$i id$l id$l )?v0 )?v0 )):named a41 ))
(assert (! (forall ((?v0 T_N_sum$ ))(= (fun_app$y (map_sum$j id$ id$n )?v0 )?v0 )):named a42 ))
(assert (! (= (map_sum$a id$ id$ )id$l ):named a43 ))
(assert (! (= (map_sum$b id$ id$k )id$o ):named a44 ))
(assert (! (= (map_sum$c id$k id$ )id$p ):named a45 ))
(assert (! (= (map_sum$d id$ id$l )id$q ):named a46 ))
(assert (! (= (map_sum$e id$k id$k )id$r ):named a47 ))
(assert (! (= (map_sum$f id$l id$ )id$s ):named a48 ))
(assert (! (= (map_sum$g id$k id$l )id$t ):named a49 ))
(assert (! (= (map_sum$h id$l id$k )id$u ):named a50 ))
(assert (! (= (map_sum$i id$l id$l )id$v ):named a51 ))
(assert (! (= (map_sum$j id$ id$n )id$i ):named a52 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (hsubst_r$ ?v0 )(root$ ?v0 )):pattern ((hsubst_r$ ?v0 )))):named a53 ))
(assert (! (forall ((?v0 Dtree$ ))(= (root$ (rcut$ ?v0 ))(root$ ?v0 ))):named a54 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(! (= (fun_app$a id$a ?v0 )?v0 ):pattern ((fun_app$a id$a ?v0 )))):named a55 ))
(assert (! (forall ((?v0 T_T_sum_set$ ))(! (= (fun_app$b id$c ?v0 )?v0 ):pattern ((fun_app$b id$c ?v0 )))):named a56 ))
(assert (! (forall ((?v0 T_set_set$ ))(! (= (fun_app$c id$e ?v0 )?v0 ):pattern ((fun_app$c id$e ?v0 )))):named a57 ))
(assert (! (forall ((?v0 N_set$ ))(! (= (fun_app$d id$g ?v0 )?v0 ):pattern ((fun_app$d id$g ?v0 )))):named a58 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$e id$n ?v0 )?v0 ):pattern ((fun_app$e id$n ?v0 )))):named a59 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$f id$k ?v0 )?v0 ):pattern ((fun_app$f id$k ?v0 )))):named a60 ))
(assert (! (forall ((?v0 T_T_sum$ ))(! (= (fun_app$g id$l ?v0 )?v0 ):pattern ((fun_app$g id$l ?v0 )))):named a61 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$h id$ ?v0 )?v0 ):pattern ((fun_app$h id$ ?v0 )))):named a62 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (fun_app$d (image$i ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$e ?v1 ?v3 )))))):named a63 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$c ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$i ?v1 ?v3 )))))):named a64 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_N_sum_set_prod_N_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$ ?v0 (image$l ?v1 ?v2 ))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$k ?v1 ?v3 )))))):named a65 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_N_T_N_sum_set_prod_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (image$k ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$j ?v1 ?v3 )))))):named a66 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$a ?v0 (fun_app$a (image$h ?v1 )?v2 ))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$l ?v1 ?v3 )))))):named a67 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(= (member$d ?v0 (fun_app$f (image$j ?v1 )?v2 ))(exists ((?v3 T$ ))(and (member$d ?v3 ?v2 )(= ?v0 (fun_app$h ?v1 ?v3 )))))):named a68 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$ ?v0 (image$o ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$o ?v1 ?v3 )))))):named a69 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (image$p ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$c ?v3 ?v2 )(= ?v0 (fun_app$p ?v1 ?v3 )))))):named a70 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N_set$ ))(= (member$b ?v0 (image$m ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$m ?v1 ?v3 )))))):named a71 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N_set$ ))(= (member$c ?v0 (image$n ?v1 ?v2 ))(exists ((?v3 N$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$n ?v1 ?v3 )))))):named a72 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ )(?v3 T_N_sum_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_N_sum$ ))(=> (member$b ?v4 ?v1 )(= (fun_app$i ?v2 ?v4 )(fun_app$i ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_T_fun$ )(?v3 T_T_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T$ ))(=> (member$d ?v4 ?v1 )(= (fun_app$h ?v2 ?v4 )(fun_app$h ?v3 ?v4 )))))(= (fun_app$f (image$j ?v2 )?v0 )(fun_app$f (image$j ?v3 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_N_fun$ )(?v3 N_N_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 N$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$e ?v2 ?v4 )(fun_app$e ?v3 ?v4 )))))(= (fun_app$d (image$i ?v2 )?v0 )(fun_app$d (image$i ?v3 )?v1 )))):named a75 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_N_T_N_sum_set_prod_fun$ )(?v3 N_N_T_N_sum_set_prod_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 N$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$j ?v2 ?v4 )(fun_app$j ?v3 ?v4 )))))(= (image$k ?v2 ?v0 )(image$k ?v3 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_N_fun$ )(?v3 N_T_N_sum_set_prod_N_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 N_T_N_sum_set_prod$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$k ?v2 ?v4 )(fun_app$k ?v3 ?v4 )))))(= (image$l ?v2 ?v0 )(image$l ?v3 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v3 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 N_T_N_sum_set_prod$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$l ?v2 ?v4 )(fun_app$l ?v3 ?v4 )))))(= (fun_app$a (image$h ?v2 )?v0 )(fun_app$a (image$h ?v3 )?v1 )))):named a78 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set$ )(?v2 T_set_T_set_fun$ )(?v3 T_set_T_set_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_set$ ))(=> (member$e ?v4 ?v1 )(= (fun_app$f ?v2 ?v4 )(fun_app$f ?v3 ?v4 )))))(= (fun_app$c (image$f ?v2 )?v0 )(fun_app$c (image$f ?v3 )?v1 )))):named a79 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_T_dtree_sum_fun$ )(?v3 N_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 N$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$n ?v2 ?v4 )(fun_app$n ?v3 ?v4 )))))(= (image$n ?v2 ?v0 )(image$n ?v3 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_T_N_sum_fun$ )(?v3 N_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 N$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$m ?v2 ?v4 )(fun_app$m ?v3 ?v4 )))))(= (image$m ?v2 ?v0 )(image$m ?v3 ?v1 )))):named a81 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_N_fun$ )(?v3 T_N_sum_N_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_N_sum$ ))(=> (member$b ?v4 ?v1 )(= (fun_app$o ?v2 ?v4 )(fun_app$o ?v3 ?v4 )))))(= (image$o ?v2 ?v0 )(image$o ?v3 ?v1 )))):named a82 ))
(assert (! (= tr$a (hsubst$ tr$ tr$ )):named a83 ))
(assert (! (forall ((?v0 N$ ))(exists ((?v1 T_N_sum_set$ ))(member$a (pair$ ?v0 ?v1 )p$ ))):named a84 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_N_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$e ?v2 ?v0 )(fun_app$d (image$i ?v2 )?v1 )))):named a85 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ ))(=> (member$b ?v0 ?v1 )(member$c (fun_app$i ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_N_T_N_sum_set_prod_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$j ?v2 ?v0 )(image$k ?v2 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_N_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$k ?v2 ?v0 )(image$l ?v2 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$l ?v2 ?v0 )(fun_app$a (image$h ?v2 )?v1 )))):named a89 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_T_fun$ ))(=> (member$d ?v0 ?v1 )(member$d (fun_app$h ?v2 ?v0 )(fun_app$f (image$j ?v2 )?v1 )))):named a90 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_N_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$b (fun_app$m ?v2 ?v0 )(image$m ?v2 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$c (fun_app$n ?v2 ?v0 )(image$n ?v2 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_N_fun$ ))(=> (member$b ?v0 ?v1 )(member$ (fun_app$o ?v2 ?v0 )(image$o ?v2 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_N_fun$ ))(=> (member$c ?v0 ?v1 )(member$ (fun_app$p ?v2 ?v0 )(image$p ?v2 ?v1 )))):named a94 ))
(check-sat )
;(get-unsat-core )
