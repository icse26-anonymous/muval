;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_T_sum_set$ 0 )
(declare-sort T_N_sum_T_fun$ 0 )
(declare-sort T_T_N_sum_fun$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort T_set_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort N_T_N_sum_set_fun$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_set_dtree_set_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_set_fun$ 0 )
(declare-sort Dtree_T_sum_dtree_T_sum_fun$ 0 )
(declare-sort T_N_sum_set_T_N_sum_set_fun$ 0 )
(declare-sort T_T_set_sum_T_T_set_sum_fun$ 0 )
(declare-sort T_T_sum_set_T_T_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_set_T_sum_T_set_T_sum_fun$ 0 )
(declare-sort Dtree_set_set_dtree_set_set_fun$ 0 )
(declare-sort T_T_T_sum_sum_T_T_T_sum_sum_fun$ 0 )
(declare-sort T_set_set_set_T_set_set_set_fun$ 0 )
(declare-sort Dtree_T_set_sum_dtree_T_set_sum_fun$ 0 )
(declare-sort Dtree_dtree_sum_dtree_dtree_sum_fun$ 0 )
(declare-sort T_T_sum_set_set_T_T_sum_set_set_fun$ 0 )
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun$ 0 )
(declare-sort T_set_dtree_sum_T_set_dtree_sum_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_dtree_sum_set_set_T_dtree_sum_set_set_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_set_fun_dtree_dtree_fun_fun$ 0 )
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0 )
(declare-datatypes ()((T_N_sum$ (inl$ (projl$ T$ ))(inr$ (projr$ N$ )))(T_dtree_sum$ (inl$a (projl$a T$ ))(inr$a (projr$a Dtree$ )))(T_T_sum$ (inl$b (projl$b T$ ))(inr$b (projr$b T$ )))(Dtree_T_sum$ (inl$c (projl$c Dtree$ ))(inr$c (projr$c T$ )))(Dtree_dtree_sum$ (inl$d (projl$d Dtree$ ))(inr$d (projr$d Dtree$ )))(T_T_set_sum$ (inl$e (projl$e T$ ))(inr$e (projr$e T_set$ )))(T_set_T_sum$ (inl$f (projl$f T_set$ ))(inr$f (projr$f T$ )))(T_set_dtree_sum$ (inl$g (projl$g T_set$ ))(inr$g (projr$g Dtree$ )))(Dtree_T_set_sum$ (inl$h (projl$h Dtree$ ))(inr$h (projr$h T_set$ )))(T_T_dtree_sum_sum$ (inl$i (projl$i T$ ))(inr$i (projr$i T_dtree_sum$ )))(T_T_T_sum_sum$ (inl$j (projl$j T$ ))(inr$j (projr$j T_T_sum$ )))))
(declare-fun h$ (Dtree$ )N_dtree_fun$ )
(declare-fun n$ ()N$ )
(declare-fun s$ (N$ )T_N_sum_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun h_c$ (Dtree$ )N_T_N_sum_set_fun$ )
(declare-fun h_r$ (Dtree$ )N_N_fun$ )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun id$c ()T_dtree_sum_set_T_dtree_sum_set_fun$ )
(declare-fun id$d ()Dtree_dtree_fun$ )
(declare-fun id$e ()Dtree_set_dtree_set_fun$ )
(declare-fun id$f ()T_set_set_T_set_set_fun$ )
(declare-fun id$g ()T_T_sum_T_T_sum_fun$ )
(declare-fun id$h ()T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun id$i ()T_N_sum_T_N_sum_fun$ )
(declare-fun id$j ()T_N_sum_set_T_N_sum_set_fun$ )
(declare-fun id$k ()T_dtree_sum_set_set_T_dtree_sum_set_set_fun$ )
(declare-fun id$l ()Dtree_set_set_dtree_set_set_fun$ )
(declare-fun id$m ()T_set_set_set_T_set_set_set_fun$ )
(declare-fun id$n ()T_T_sum_set_set_T_T_sum_set_set_fun$ )
(declare-fun id$o ()Dtree_T_sum_dtree_T_sum_fun$ )
(declare-fun id$p ()Dtree_dtree_sum_dtree_dtree_sum_fun$ )
(declare-fun id$q ()T_T_set_sum_T_T_set_sum_fun$ )
(declare-fun id$r ()T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun id$s ()T_set_dtree_sum_T_set_dtree_sum_fun$ )
(declare-fun id$t ()Dtree_T_set_sum_dtree_T_set_sum_fun$ )
(declare-fun id$u ()T_T_dtree_sum_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun id$v ()T_T_T_sum_sum_T_T_T_sum_sum_fun$ )
(declare-fun tr0$ ()Dtree$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun pick$ (Dtree$ N$ )Dtree$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun deftr$ ()N_dtree_fun$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun finite$ (T_N_sum_set$ )Bool )
(declare-fun hsubst$ (Dtree$ )Dtree_dtree_fun$ )
(declare-fun image$a (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$b (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_set_T_dtree_sum_set_fun$ )
(declare-fun image$c (Dtree_dtree_fun$ )Dtree_set_dtree_set_fun$ )
(declare-fun image$d (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun image$e (T_T_sum_T_T_sum_fun$ )T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun image$f (T_N_sum_T_N_sum_fun$ )T_N_sum_set_T_N_sum_set_fun$ )
(declare-fun image$g (T_dtree_sum_set_T_dtree_sum_set_fun$ )T_dtree_sum_set_set_T_dtree_sum_set_set_fun$ )
(declare-fun image$h (Dtree_set_dtree_set_fun$ )Dtree_set_set_dtree_set_set_fun$ )
(declare-fun image$i (T_set_set_T_set_set_fun$ )T_set_set_set_T_set_set_set_fun$ )
(declare-fun image$j (T_T_sum_set_T_T_sum_set_fun$ )T_T_sum_set_set_T_T_sum_set_set_fun$ )
(declare-fun image$k (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$l (T_N_sum_T_fun$ T_N_sum_set$ )T_set$ )
(declare-fun image$m (T_dtree_sum_T_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun image$n (T_T_N_sum_fun$ T_set$ )T_N_sum_set$ )
(declare-fun image$o (T_T_dtree_sum_fun$ T_set$ )T_dtree_sum_set$ )
(declare-fun member$ (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun unfold$ (N_N_fun$ N_T_N_sum_set_fun$ )N_dtree_fun$ )
(declare-fun finite$a (T_dtree_sum_set$ )Bool )
(declare-fun finite$b (T_set$ )Bool )
(declare-fun finite$c (Dtree_set$ )Bool )
(declare-fun finite$d (T_set_set$ )Bool )
(declare-fun fun_app$ (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$b (T$ )T_set_bool_fun$ )
(declare-fun member$c (Dtree$ Dtree_set$ )Bool )
(declare-fun member$d (T_set$ T_set_set$ )Bool )
(declare-fun subtrOf$ (Dtree$ N$ )Dtree$ )
(declare-fun unfold$a (Dtree_N_fun$ )Dtree_T_dtree_sum_set_fun_dtree_dtree_fun_fun$ )
(declare-fun fun_app$a (N_N_fun$ N$ )N$ )
(declare-fun fun_app$b (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$c (N_T_N_sum_set_fun$ N$ )T_N_sum_set$ )
(declare-fun fun_app$d (T_N_sum_set_T_N_sum_set_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun fun_app$e (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun fun_app$f (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$g (Dtree_set_dtree_set_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun fun_app$h (T_set_set_T_set_set_fun$ T_set_set$ )T_set_set$ )
(declare-fun fun_app$i (T_T_fun$ T$ )T$ )
(declare-fun fun_app$j (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$k (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$l (T_T_sum_T_T_sum_fun$ T_T_sum$ )T_T_sum$ )
(declare-fun fun_app$m (T_T_sum_set_T_T_sum_set_fun$ T_T_sum_set$ )T_T_sum_set$ )
(declare-fun fun_app$n (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$o (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$p (T_N_sum_T_N_sum_fun$ T_N_sum$ )T_N_sum$ )
(declare-fun fun_app$q (T_set_bool_fun$ T_set$ )Bool )
(declare-fun fun_app$r (T_N_sum_T_fun$ T_N_sum$ )T$ )
(declare-fun fun_app$s (T_dtree_sum_T_fun$ T_dtree_sum$ )T$ )
(declare-fun fun_app$t (T_T_N_sum_fun$ T$ )T_N_sum$ )
(declare-fun fun_app$u (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$v (Dtree_T_sum_dtree_T_sum_fun$ Dtree_T_sum$ )Dtree_T_sum$ )
(declare-fun fun_app$w (Dtree_dtree_sum_dtree_dtree_sum_fun$ Dtree_dtree_sum$ )Dtree_dtree_sum$ )
(declare-fun fun_app$x (T_T_set_sum_T_T_set_sum_fun$ T_T_set_sum$ )T_T_set_sum$ )
(declare-fun fun_app$y (T_set_T_sum_T_set_T_sum_fun$ T_set_T_sum$ )T_set_T_sum$ )
(declare-fun fun_app$z (T_set_dtree_sum_T_set_dtree_sum_fun$ T_set_dtree_sum$ )T_set_dtree_sum$ )
(declare-fun hsubst_c$ (Dtree$ )Dtree_T_dtree_sum_set_fun$ )
(declare-fun hsubst_r$ (Dtree$ )N$ )
(declare-fun map_sum$a (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ )Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ )
(declare-fun map_sum$c (Dtree_dtree_fun$ T_T_fun$ )Dtree_T_sum_dtree_T_sum_fun$ )
(declare-fun map_sum$d (Dtree_dtree_fun$ Dtree_dtree_fun$ )Dtree_dtree_sum_dtree_dtree_sum_fun$ )
(declare-fun map_sum$e (T_T_fun$ T_set_T_set_fun$ )T_T_set_sum_T_T_set_sum_fun$ )
(declare-fun map_sum$f (T_set_T_set_fun$ T_T_fun$ )T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun map_sum$g (T_set_T_set_fun$ Dtree_dtree_fun$ )T_set_dtree_sum_T_set_dtree_sum_fun$ )
(declare-fun map_sum$h (Dtree_dtree_fun$ T_set_T_set_fun$ )Dtree_T_set_sum_dtree_T_set_sum_fun$ )
(declare-fun map_sum$i (T_T_fun$ T_dtree_sum_T_dtree_sum_fun$ )T_T_dtree_sum_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun map_sum$j (T_T_fun$ T_T_sum_T_T_sum_fun$ )T_T_T_sum_sum_T_T_T_sum_sum_fun$ )
(declare-fun map_sum$k (T_T_fun$ )N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ )
(declare-fun fun_app$aa (Dtree_T_set_sum_dtree_T_set_sum_fun$ Dtree_T_set_sum$ )Dtree_T_set_sum$ )
(declare-fun fun_app$ab (T_T_dtree_sum_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum$ )T_T_dtree_sum_sum$ )
(declare-fun fun_app$ac (T_T_T_sum_sum_T_T_T_sum_sum_fun$ T_T_T_sum_sum$ )T_T_T_sum_sum$ )
(declare-fun fun_app$ad (Dtree_T_dtree_sum_set_fun$ Dtree$ )T_dtree_sum_set$ )
(declare-fun fun_app$ae (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$af (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$ag (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$ah (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$ai (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun fun_app$aj (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$ak (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$al (Dtree_T_dtree_sum_set_fun_dtree_dtree_fun_fun$ Dtree_T_dtree_sum_set_fun$ )Dtree_dtree_fun$ )
(assert (! (not (finite$ (image$ (fun_app$ (map_sum$ id$ )root$ )(cont$ (pick$ tr0$ n$ ))))):named a0 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$a (h_r$ tr0$ )?v0 )(fun_app$b root$ (pick$ tr0$ ?v0 ))):pattern ((fun_app$a (h_r$ tr0$ )?v0 )))):named a1 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$c (h_c$ tr0$ )?v0 )(image$ (fun_app$ (map_sum$ id$ )root$ )(cont$ (pick$ tr0$ ?v0 )))):pattern ((fun_app$c (h_c$ tr0$ )?v0 )))):named a2 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N$ ))(! (= (fun_app$c (h_c$ ?v0 )?v1 )(image$ (fun_app$ (map_sum$ id$ )root$ )(cont$ (pick$ ?v0 ?v1 )))):pattern ((fun_app$c (h_c$ ?v0 )?v1 )))):named a3 ))
(assert (! (= (image$a id$ )id$a ):named a4 ))
(assert (! (= (image$b id$b )id$c ):named a5 ))
(assert (! (= (image$c id$d )id$e ):named a6 ))
(assert (! (= (image$d id$a )id$f ):named a7 ))
(assert (! (= (image$e id$g )id$h ):named a8 ))
(assert (! (= (image$f id$i )id$j ):named a9 ))
(assert (! (= (image$g id$c )id$k ):named a10 ))
(assert (! (= (image$h id$e )id$l ):named a11 ))
(assert (! (= (image$i id$f )id$m ):named a12 ))
(assert (! (= (image$j id$h )id$n ):named a13 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_T_N_sum_fun$ ))(=> (finite$ ?v0 )(finite$ (fun_app$d (image$f ?v1 )?v0 )))):named a14 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_T_dtree_sum_fun$ ))(=> (finite$ ?v0 )(finite$a (image$k ?v1 ?v0 )))):named a15 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_T_N_sum_fun$ ))(=> (finite$a ?v0 )(finite$ (image$ ?v1 ?v0 )))):named a16 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ ))(=> (finite$a ?v0 )(finite$a (fun_app$e (image$b ?v1 )?v0 )))):named a17 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_T_fun$ ))(=> (finite$b ?v0 )(finite$b (fun_app$f (image$a ?v1 )?v0 )))):named a18 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_fun$ ))(=> (finite$c ?v0 )(finite$c (fun_app$g (image$c ?v1 )?v0 )))):named a19 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_T_set_fun$ ))(=> (finite$d ?v0 )(finite$d (fun_app$h (image$d ?v1 )?v0 )))):named a20 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_T_fun$ ))(=> (finite$ ?v0 )(finite$b (image$l ?v1 ?v0 )))):named a21 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_T_fun$ ))(=> (finite$a ?v0 )(finite$b (image$m ?v1 ?v0 )))):named a22 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_T_N_sum_fun$ ))(=> (finite$b ?v0 )(finite$ (image$n ?v1 ?v0 )))):named a23 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$i id$ ?v0 )?v0 ):pattern ((fun_app$i id$ ?v0 )))):named a24 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$j id$d ?v0 )?v0 ):pattern ((fun_app$j id$d ?v0 )))):named a25 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$f id$a ?v0 )?v0 ):pattern ((fun_app$f id$a ?v0 )))):named a26 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$k id$b ?v0 )?v0 ):pattern ((fun_app$k id$b ?v0 )))):named a27 ))
(assert (! (forall ((?v0 T_T_sum$ ))(! (= (fun_app$l id$g ?v0 )?v0 ):pattern ((fun_app$l id$g ?v0 )))):named a28 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(! (= (fun_app$e id$c ?v0 )?v0 ):pattern ((fun_app$e id$c ?v0 )))):named a29 ))
(assert (! (forall ((?v0 Dtree_set$ ))(! (= (fun_app$g id$e ?v0 )?v0 ):pattern ((fun_app$g id$e ?v0 )))):named a30 ))
(assert (! (forall ((?v0 T_set_set$ ))(! (= (fun_app$h id$f ?v0 )?v0 ):pattern ((fun_app$h id$f ?v0 )))):named a31 ))
(assert (! (forall ((?v0 T_T_sum_set$ ))(! (= (fun_app$m id$h ?v0 )?v0 ):pattern ((fun_app$m id$h ?v0 )))):named a32 ))
(assert (! (forall ((?v0 T_N_sum_set$ ))(! (= (fun_app$d id$j ?v0 )?v0 ):pattern ((fun_app$d id$j ?v0 )))):named a33 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$k ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (fun_app$e (image$b ?v1 )?v3 )))):named a34 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$n ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$ ?v1 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$k ?v1 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (fun_app$d (image$f ?v1 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(fun_app$q (member$b ?v2 )?v3 ))(fun_app$q (member$b ?v0 )(fun_app$f (image$a ?v1 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (fun_app$g (image$c ?v1 )?v3 )))):named a39 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_T_set_fun$ )(?v2 T_set$ )(?v3 T_set_set$ ))(=> (and (= ?v0 (fun_app$f ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$d ?v0 (fun_app$h (image$d ?v1 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_sum_T_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v2 ))(member$a ?v2 ?v3 ))(fun_app$q (member$b ?v0 )(image$l ?v1 ?v3 )))):named a41 ))
(assert (! (forall ((?v0 T$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$s ?v1 ?v2 ))(member$ ?v2 ?v3 ))(fun_app$q (member$b ?v0 )(image$m ?v1 ?v3 )))):named a42 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_T_N_sum_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$t ?v1 ?v2 ))(fun_app$q (member$b ?v2 )?v3 ))(member$a ?v0 (image$n ?v1 ?v3 )))):named a43 ))
(assert (! (forall ((?v0 T_T_sum$ ))(= (fun_app$l (map_sum$a id$ id$ )?v0 )?v0 )):named a44 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(= (fun_app$k (fun_app$u (map_sum$b id$ )id$d )?v0 )?v0 )):named a45 ))
(assert (! (forall ((?v0 Dtree_T_sum$ ))(= (fun_app$v (map_sum$c id$d id$ )?v0 )?v0 )):named a46 ))
(assert (! (forall ((?v0 Dtree_dtree_sum$ ))(= (fun_app$w (map_sum$d id$d id$d )?v0 )?v0 )):named a47 ))
(assert (! (forall ((?v0 T_T_set_sum$ ))(= (fun_app$x (map_sum$e id$ id$a )?v0 )?v0 )):named a48 ))
(assert (! (forall ((?v0 T_set_T_sum$ ))(= (fun_app$y (map_sum$f id$a id$ )?v0 )?v0 )):named a49 ))
(assert (! (forall ((?v0 T_set_dtree_sum$ ))(= (fun_app$z (map_sum$g id$a id$d )?v0 )?v0 )):named a50 ))
(assert (! (forall ((?v0 Dtree_T_set_sum$ ))(= (fun_app$aa (map_sum$h id$d id$a )?v0 )?v0 )):named a51 ))
(assert (! (forall ((?v0 T_T_dtree_sum_sum$ ))(= (fun_app$ab (map_sum$i id$ id$b )?v0 )?v0 )):named a52 ))
(assert (! (forall ((?v0 T_T_T_sum_sum$ ))(= (fun_app$ac (map_sum$j id$ id$g )?v0 )?v0 )):named a53 ))
(assert (! (= (map_sum$a id$ id$ )id$g ):named a54 ))
(assert (! (= (fun_app$u (map_sum$b id$ )id$d )id$b ):named a55 ))
(assert (! (= (map_sum$c id$d id$ )id$o ):named a56 ))
(assert (! (= (map_sum$d id$d id$d )id$p ):named a57 ))
(assert (! (= (map_sum$e id$ id$a )id$q ):named a58 ))
(assert (! (= (map_sum$f id$a id$ )id$r ):named a59 ))
(assert (! (= (map_sum$g id$a id$d )id$s ):named a60 ))
(assert (! (= (map_sum$h id$d id$a )id$t ):named a61 ))
(assert (! (= (map_sum$i id$ id$b )id$u ):named a62 ))
(assert (! (= (map_sum$j id$ id$g )id$v ):named a63 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (fun_app$b root$ ?v0 )(fun_app$b root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(! (= (fun_app$ad (hsubst_c$ ?v0 )?v1 )(ite (= (fun_app$b root$ ?v1 )(fun_app$b root$ ?v0 ))(cont$ ?v0 )(cont$ ?v1 ))):pattern ((fun_app$ad (hsubst_c$ ?v0 )?v1 )))):named a65 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N$ ))(! (= (fun_app$a (h_r$ ?v0 )?v1 )(fun_app$b root$ (pick$ ?v0 ?v1 ))):pattern ((fun_app$a (h_r$ ?v0 )?v1 )))):named a66 ))
(assert (! (forall ((?v0 N$ ))(finite$ (s$ ?v0 ))):named a67 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(finite$a (fun_app$ad (hsubst_c$ ?v0 )?v1 ))):named a68 ))
(assert (! (forall ((?v0 Dtree$ ))(finite$a (cont$ ?v0 ))):named a69 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$k ?v2 ?v0 )(fun_app$e (image$b ?v2 )?v1 )))):named a70 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$n ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$o ?v2 ?v0 )(image$k ?v2 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_N_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$p ?v2 ?v0 )(fun_app$d (image$f ?v2 )?v1 )))):named a73 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_T_fun$ ))(=> (fun_app$q (member$b ?v0 )?v1 )(fun_app$q (member$b (fun_app$i ?v2 ?v0 ))(fun_app$f (image$a ?v2 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_fun$ ))(=> (member$c ?v0 ?v1 )(member$c (fun_app$j ?v2 ?v0 )(fun_app$g (image$c ?v2 )?v1 )))):named a75 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ )(?v2 T_set_T_set_fun$ ))(=> (member$d ?v0 ?v1 )(member$d (fun_app$f ?v2 ?v0 )(fun_app$h (image$d ?v2 )?v1 )))):named a76 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_fun$ ))(=> (member$a ?v0 ?v1 )(fun_app$q (member$b (fun_app$r ?v2 ?v0 ))(image$l ?v2 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_fun$ ))(=> (member$ ?v0 ?v1 )(fun_app$q (member$b (fun_app$s ?v2 ?v0 ))(image$m ?v2 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_T_N_sum_fun$ ))(=> (fun_app$q (member$b ?v0 )?v1 )(member$a (fun_app$t ?v2 ?v0 )(image$n ?v2 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$k ?v3 ?v0 )))(member$ ?v2 (fun_app$e (image$b ?v3 )?v1 )))):named a80 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$n ?v3 ?v0 )))(member$a ?v2 (image$ ?v3 ?v1 )))):named a81 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_N_sum_T_dtree_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$o ?v3 ?v0 )))(member$ ?v2 (image$k ?v3 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum$ )(?v3 T_N_sum_T_N_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$p ?v3 ?v0 )))(member$a ?v2 (fun_app$d (image$f ?v3 )?v1 )))):named a83 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T$ )(?v3 T_T_fun$ ))(=> (and (fun_app$q (member$b ?v0 )?v1 )(= ?v2 (fun_app$i ?v3 ?v0 )))(fun_app$q (member$b ?v2 )(fun_app$f (image$a ?v3 )?v1 )))):named a84 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_fun$ ))(=> (and (member$c ?v0 ?v1 )(= ?v2 (fun_app$j ?v3 ?v0 )))(member$c ?v2 (fun_app$g (image$c ?v3 )?v1 )))):named a85 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ )(?v2 T_set$ )(?v3 T_set_T_set_fun$ ))(=> (and (member$d ?v0 ?v1 )(= ?v2 (fun_app$f ?v3 ?v0 )))(member$d ?v2 (fun_app$h (image$d ?v3 )?v1 )))):named a86 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T$ )(?v3 T_N_sum_T_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$r ?v3 ?v0 )))(fun_app$q (member$b ?v2 )(image$l ?v3 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T$ )(?v3 T_dtree_sum_T_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$s ?v3 ?v0 )))(fun_app$q (member$b ?v2 )(image$m ?v3 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_N_sum$ )(?v3 T_T_N_sum_fun$ ))(=> (and (fun_app$q (member$b ?v0 )?v1 )(= ?v2 (fun_app$t ?v3 ?v0 )))(member$a ?v2 (image$n ?v3 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 (fun_app$e (image$b ?v0 )?v1 ))(fun_app$ae ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$k ?v0 ?v3 )))))):named a90 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 (image$k ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$o ?v0 ?v3 )))))):named a91 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$a ?v3 (image$ ?v0 ?v1 ))(fun_app$af ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v1 )(fun_app$af ?v2 (fun_app$n ?v0 ?v3 )))))):named a92 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$a ?v3 (fun_app$d (image$f ?v0 )?v1 ))(fun_app$af ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$af ?v2 (fun_app$p ?v0 ?v3 )))))):named a93 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(=> (fun_app$q (member$b ?v3 )(fun_app$f (image$a ?v0 )?v1 ))(fun_app$ag ?v2 ?v3 )))(forall ((?v3 T$ ))(=> (fun_app$q (member$b ?v3 )?v1 )(fun_app$ag ?v2 (fun_app$i ?v0 ?v3 )))))):named a94 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(=> (member$c ?v3 (fun_app$g (image$c ?v0 )?v1 ))(fun_app$ah ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$c ?v3 ?v1 )(fun_app$ah ?v2 (fun_app$j ?v0 ?v3 )))))):named a95 ))
(assert (! (forall ((?v0 T_set_T_set_fun$ )(?v1 T_set_set$ )(?v2 T_set_bool_fun$ ))(=> (forall ((?v3 T_set$ ))(=> (member$d ?v3 (fun_app$h (image$d ?v0 )?v1 ))(fun_app$q ?v2 ?v3 )))(forall ((?v3 T_set$ ))(=> (member$d ?v3 ?v1 )(fun_app$q ?v2 (fun_app$f ?v0 ?v3 )))))):named a96 ))
(assert (! (forall ((?v0 T_T_N_sum_fun$ )(?v1 T_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$a ?v3 (image$n ?v0 ?v1 ))(fun_app$af ?v2 ?v3 )))(forall ((?v3 T$ ))(=> (fun_app$q (member$b ?v3 )?v1 )(fun_app$af ?v2 (fun_app$t ?v0 ?v3 )))))):named a97 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 (image$o ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(forall ((?v3 T$ ))(=> (fun_app$q (member$b ?v3 )?v1 )(fun_app$ae ?v2 (fun_app$ai ?v0 ?v3 )))))):named a98 ))
(assert (! (forall ((?v0 T_N_sum_T_fun$ )(?v1 T_N_sum_set$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(=> (fun_app$q (member$b ?v3 )(image$l ?v0 ?v1 ))(fun_app$ag ?v2 ?v3 )))(forall ((?v3 T_N_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$ag ?v2 (fun_app$r ?v0 ?v3 )))))):named a99 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 (image$o ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(exists ((?v3 T$ ))(and (fun_app$q (member$b ?v3 )?v1 )(fun_app$ae ?v2 (fun_app$ai ?v0 ?v3 )))))):named a100 ))
(assert (! (forall ((?v0 T_N_sum_T_fun$ )(?v1 T_N_sum_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (fun_app$q (member$b ?v3 )(image$l ?v0 ?v1 ))(fun_app$ag ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$ag ?v2 (fun_app$r ?v0 ?v3 )))))):named a101 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (fun_app$q (member$b ?v3 )(image$m ?v0 ?v1 ))(fun_app$ag ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$ag ?v2 (fun_app$s ?v0 ?v3 )))))):named a102 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T_bool_fun$ ))(=> (exists ((?v3 T$ ))(and (fun_app$q (member$b ?v3 )(fun_app$f (image$a ?v0 )?v1 ))(fun_app$ag ?v2 ?v3 )))(exists ((?v3 T$ ))(and (fun_app$q (member$b ?v3 )?v1 )(fun_app$ag ?v2 (fun_app$i ?v0 ?v3 )))))):named a103 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 (fun_app$e (image$b ?v0 )?v1 ))(fun_app$ae ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$k ?v0 ?v3 )))))):named a104 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 (image$k ?v0 ?v1 ))(fun_app$ae ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$ae ?v2 (fun_app$o ?v0 ?v3 )))))):named a105 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$a ?v3 (image$ ?v0 ?v1 ))(fun_app$af ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(fun_app$af ?v2 (fun_app$n ?v0 ?v3 )))))):named a106 ))
(assert (! (forall ((?v0 T_N_sum_T_N_sum_fun$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$a ?v3 (fun_app$d (image$f ?v0 )?v1 ))(fun_app$af ?v2 ?v3 )))(exists ((?v3 T_N_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$af ?v2 (fun_app$p ?v0 ?v3 )))))):named a107 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_T_fun$ )(?v3 T_T_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T$ ))(=> (fun_app$q (member$b ?v4 )?v1 )(= (fun_app$i ?v2 ?v4 )(fun_app$i ?v3 ?v4 )))))(= (fun_app$f (image$a ?v2 )?v0 )(fun_app$f (image$a ?v3 )?v1 )))):named a108 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_N_sum_fun$ )(?v3 T_N_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_N_sum$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$p ?v2 ?v4 )(fun_app$p ?v3 ?v4 )))))(= (fun_app$d (image$f ?v2 )?v0 )(fun_app$d (image$f ?v3 )?v1 )))):named a109 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$n ?v2 ?v4 )(fun_app$n ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$ ?v4 ?v1 )(= (fun_app$k ?v2 ?v4 )(fun_app$k ?v3 ?v4 )))))(= (fun_app$e (image$b ?v2 )?v0 )(fun_app$e (image$b ?v3 )?v1 )))):named a111 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_T_dtree_sum_fun$ )(?v3 T_N_sum_T_dtree_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_N_sum$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$o ?v2 ?v4 )(fun_app$o ?v3 ?v4 )))))(= (image$k ?v2 ?v0 )(image$k ?v3 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(= (fun_app$q (member$b ?v0 )(fun_app$f (image$a ?v1 )?v2 ))(exists ((?v3 T$ ))(and (fun_app$q (member$b ?v3 )?v2 )(= ?v0 (fun_app$i ?v1 ?v3 )))))):named a113 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (fun_app$e (image$b ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$k ?v1 ?v3 )))))):named a114 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$ ?v0 (image$k ?v1 ?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$o ?v1 ?v3 )))))):named a115 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$n ?v1 ?v3 )))))):named a116 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$a ?v0 (fun_app$d (image$f ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$p ?v1 ?v3 )))))):named a117 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$k id$b ?v0 )?v0 ):pattern ((fun_app$k id$b ?v0 )))):named a118 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(! (= (fun_app$e id$c ?v0 )?v0 ):pattern ((fun_app$e id$c ?v0 )))):named a119 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$f id$a ?v0 )?v0 ):pattern ((fun_app$f id$a ?v0 )))):named a120 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$j id$d ?v0 )?v0 ):pattern ((fun_app$j id$d ?v0 )))):named a121 ))
(assert (! (forall ((?v0 T_T_sum$ ))(! (= (fun_app$l id$g ?v0 )?v0 ):pattern ((fun_app$l id$g ?v0 )))):named a122 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$i id$ ?v0 )?v0 ):pattern ((fun_app$i id$ ?v0 )))):named a123 ))
(assert (! (= (h$ tr0$ )(unfold$ (h_r$ tr0$ )(h_c$ tr0$ ))):named a124 ))
(assert (! (forall ((?v0 N$ ))(= (cont$ (fun_app$aj deftr$ ?v0 ))(image$k (fun_app$ak (map_sum$k id$ )deftr$ )(s$ ?v0 )))):named a125 ))
(assert (! (forall ((?v0 N_T_N_sum_set_fun$ )(?v1 N$ )(?v2 N_N_fun$ ))(=> (finite$ (fun_app$c ?v0 ?v1 ))(= (cont$ (fun_app$aj (unfold$ ?v2 ?v0 )?v1 ))(image$k (fun_app$ak (map_sum$k id$ )(unfold$ ?v2 ?v0 ))(fun_app$c ?v0 ?v1 ))))):named a126 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_set_fun$ )(?v1 Dtree$ )(?v2 Dtree_N_fun$ ))(=> (finite$a (fun_app$ad ?v0 ?v1 ))(= (cont$ (fun_app$j (fun_app$al (unfold$a ?v2 )?v0 )?v1 ))(fun_app$e (image$b (fun_app$u (map_sum$b id$ )(fun_app$al (unfold$a ?v2 )?v0 )))(fun_app$ad ?v0 ?v1 ))))):named a127 ))
(assert (! (forall ((?v0 Dtree$ ))(= (node$ (fun_app$b root$ ?v0 )(cont$ ?v0 ))?v0 )):named a128 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (not (= (fun_app$b root$ ?v0 )(fun_app$b root$ ?v1 )))(= (cont$ (fun_app$j (hsubst$ ?v1 )?v0 ))(fun_app$e (image$b (fun_app$u (map_sum$b id$ )(hsubst$ ?v1 )))(cont$ ?v0 ))))):named a129 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (fun_app$b root$ ?v0 )(fun_app$b root$ ?v1 ))(= (cont$ (fun_app$j (hsubst$ ?v1 )?v0 ))(fun_app$e (image$b (fun_app$u (map_sum$b id$ )(hsubst$ ?v1 )))(cont$ ?v1 ))))):named a130 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (hsubst_r$ ?v0 )(fun_app$b root$ ?v0 )):pattern ((hsubst_r$ ?v0 )))):named a131 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (h$ ?v0 )(unfold$ (h_r$ ?v0 )(h_c$ ?v0 ))):pattern ((h$ ?v0 )))):named a132 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 N$ ))(=> (finite$a ?v0 )(= (cont$ (node$ ?v1 ?v0 ))?v0 ))):named a133 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree$ ))(=> (member$a (inr$ ?v0 )(image$ (fun_app$ (map_sum$ id$ )root$ )(cont$ ?v1 )))(= (fun_app$b root$ (subtrOf$ ?v1 ?v0 ))?v0 ))):named a134 ))
(check-sat )
;(get-unsat-core )
