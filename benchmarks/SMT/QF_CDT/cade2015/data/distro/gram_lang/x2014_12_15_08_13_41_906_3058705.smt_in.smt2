;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_T_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort N_set_N_set_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort T_T_set_sum_T_T_set_sum_fun$ 0 )
(declare-sort T_T_sum_set_T_T_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_set_T_sum_T_set_T_sum_fun$ 0 )
(declare-sort T_T_T_sum_sum_T_T_T_sum_sum_fun$ 0 )
(declare-sort T_T_sum_T_sum_T_T_sum_T_sum_fun$ 0 )
(declare-sort T_set_set_set_T_set_set_set_fun$ 0 )
(declare-sort T_T_set_set_sum_T_T_set_set_sum_fun$ 0 )
(declare-sort T_T_set_sum_set_T_T_set_sum_set_fun$ 0 )
(declare-sort T_T_sum_set_set_T_T_sum_set_set_fun$ 0 )
(declare-sort T_set_T_set_sum_T_set_T_set_sum_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort T_T_T_sum_sum_set_T_T_T_sum_sum_set_fun$ 0 )
(declare-sort T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ 0 )
(declare-sort T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set_set_N_T_N_sum_set_prod_set_set_fun$ 0 )
(declare-datatypes ()((N_T_N_sum_set_prod$ (pair$ (fst$ N$ )(snd$ T_N_sum_set$ )))(T_N_sum$ (inl$ (projl$ T$ ))(inr$ (projr$ N$ )))(T_dtree_sum$ (inl$a (projl$a T$ ))(inr$a (projr$a Dtree$ )))(T_T_sum$ (inl$b (projl$b T$ ))(inr$b (projr$b T$ )))(T_T_T_sum_sum$ (inl$c (projl$c T$ ))(inr$c (projr$c T_T_sum$ )))(T_T_set_sum$ (inl$d (projl$d T$ ))(inr$d (projr$d T_set$ )))(T_set_T_sum$ (inl$e (projl$e T_set$ ))(inr$e (projr$e T$ )))(T_set_T_set_sum$ (inl$f (projl$f T_set$ ))(inr$f (projr$f T_set$ )))(T_T_sum_T_sum$ (inl$g (projl$g T_T_sum$ ))(inr$g (projr$g T$ )))(T_set_T_T_sum_sum$ (inl$h (projl$h T_set$ ))(inr$h (projr$h T_T_sum$ )))(T_T_sum_T_set_sum$ (inl$i (projl$i T_T_sum$ ))(inr$i (projr$i T_set$ )))(T_T_sum_T_T_sum_sum$ (inl$j (projl$j T_T_sum$ ))(inr$j (projr$j T_T_sum$ )))(T_T_set_set_sum$ (inl$k (projl$k T$ ))(inr$k (projr$k T_set_set$ )))))
(declare-fun h$ (Dtree$ N$ )Dtree$ )
(declare-fun n$ ()N$ )
(declare-fun p$ ()N_T_N_sum_set_prod_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun h_c$ (Dtree$ N$ )T_N_sum_set$ )
(declare-fun id$a ()T_T_T_sum_sum_T_T_T_sum_sum_fun$ )
(declare-fun id$b ()T_T_T_sum_sum_set_T_T_T_sum_sum_set_fun$ )
(declare-fun id$c ()T_T_set_sum_T_T_set_sum_fun$ )
(declare-fun id$d ()T_T_set_sum_set_T_T_set_sum_set_fun$ )
(declare-fun id$e ()N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ )
(declare-fun id$f ()N_T_N_sum_set_prod_set_set_N_T_N_sum_set_prod_set_set_fun$ )
(declare-fun id$g ()T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun id$h ()T_T_sum_set_set_T_T_sum_set_set_fun$ )
(declare-fun id$i ()T_set_set_T_set_set_fun$ )
(declare-fun id$j ()T_set_set_set_T_set_set_set_fun$ )
(declare-fun id$k ()N_N_fun$ )
(declare-fun id$l ()N_set_N_set_fun$ )
(declare-fun id$m ()T_set_T_set_fun$ )
(declare-fun id$n ()T_T_sum_T_T_sum_fun$ )
(declare-fun id$o ()N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )
(declare-fun id$p ()T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun id$q ()T_set_T_set_sum_T_set_T_set_sum_fun$ )
(declare-fun id$r ()T_T_sum_T_sum_T_T_sum_T_sum_fun$ )
(declare-fun id$s ()T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ )
(declare-fun id$t ()T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ )
(declare-fun id$u ()T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ )
(declare-fun id$v ()T_T_set_set_sum_T_T_set_set_sum_fun$ )
(declare-fun top$ ()N_set$ )
(declare-fun tr0$ ()Dtree$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun pick$ (Dtree$ N$ )Dtree$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun top$a ()T_set$ )
(declare-fun top$b ()T_dtree_sum_set$ )
(declare-fun top$c ()T_N_sum_set$ )
(declare-fun top$d ()N_T_N_sum_set_prod_set$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun inItr$ (N_set$ Dtree$ N$ )Bool )
(declare-fun image$a (T_T_T_sum_sum_T_T_T_sum_sum_fun$ )T_T_T_sum_sum_set_T_T_T_sum_sum_set_fun$ )
(declare-fun image$b (T_T_set_sum_T_T_set_sum_fun$ )T_T_set_sum_set_T_T_set_sum_set_fun$ )
(declare-fun image$c (N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ )N_T_N_sum_set_prod_set_set_N_T_N_sum_set_prod_set_set_fun$ )
(declare-fun image$d (T_T_sum_set_T_T_sum_set_fun$ )T_T_sum_set_set_T_T_sum_set_set_fun$ )
(declare-fun image$e (T_set_set_T_set_set_fun$ )T_set_set_set_T_set_set_set_fun$ )
(declare-fun image$f (N_N_fun$ )N_set_N_set_fun$ )
(declare-fun image$g (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun image$h (T_T_sum_T_T_sum_fun$ )T_T_sum_set_T_T_sum_set_fun$ )
(declare-fun image$i (N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ )
(declare-fun image$j (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$k (T_dtree_sum_N_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun image$l (T_N_sum_N_fun$ T_N_sum_set$ )N_set$ )
(declare-fun image$m (N_T_dtree_sum_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun image$n (N_T_N_sum_fun$ N_set$ )T_N_sum_set$ )
(declare-fun image$o (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$p (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun member$ (N_T_N_sum_set_prod$ N_T_N_sum_set_prod_set$ )Bool )
(declare-fun fun_app$ (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$b (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$c (T$ T_set$ )Bool )
(declare-fun member$d (N$ N_set$ )Bool )
(declare-fun fun_app$a (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$b (T_T_T_sum_sum_T_T_T_sum_sum_fun$ T_T_T_sum_sum$ )T_T_T_sum_sum$ )
(declare-fun fun_app$c (T_T_set_sum_T_T_set_sum_fun$ T_T_set_sum$ )T_T_set_sum$ )
(declare-fun fun_app$d (N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun fun_app$e (T_T_sum_set_T_T_sum_set_fun$ T_T_sum_set$ )T_T_sum_set$ )
(declare-fun fun_app$f (T_set_set_T_set_set_fun$ T_set_set$ )T_set_set$ )
(declare-fun fun_app$g (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$h (T_T_sum_T_T_sum_fun$ T_T_sum$ )T_T_sum$ )
(declare-fun fun_app$i (T_T_fun$ T$ )T$ )
(declare-fun fun_app$j (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$k (N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ N_T_N_sum_set_prod$ )N_T_N_sum_set_prod$ )
(declare-fun fun_app$l (N_N_fun$ N$ )N$ )
(declare-fun fun_app$m (N_set_N_set_fun$ N_set$ )N_set$ )
(declare-fun fun_app$n (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$o (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$p (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$q (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$r (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$s (T_N_sum_T_dtree_sum_fun$ T_N_sum$ )T_dtree_sum$ )
(declare-fun fun_app$t (T_set_T_sum_T_set_T_sum_fun$ T_set_T_sum$ )T_set_T_sum$ )
(declare-fun fun_app$u (T_set_T_set_sum_T_set_T_set_sum_fun$ T_set_T_set_sum$ )T_set_T_set_sum$ )
(declare-fun fun_app$v (T_T_sum_T_sum_T_T_sum_T_sum_fun$ T_T_sum_T_sum$ )T_T_sum_T_sum$ )
(declare-fun fun_app$w (T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ T_set_T_T_sum_sum$ )T_set_T_T_sum_sum$ )
(declare-fun fun_app$x (T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ T_T_sum_T_set_sum$ )T_T_sum_T_set_sum$ )
(declare-fun fun_app$y (T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ T_T_sum_T_T_sum_sum$ )T_T_sum_T_T_sum_sum$ )
(declare-fun fun_app$z (T_T_set_set_sum_T_T_set_set_sum_fun$ T_T_set_set_sum$ )T_T_set_set_sum$ )
(declare-fun map_sum$a (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ T_set_T_set_fun$ )T_T_set_sum_T_T_set_sum_fun$ )
(declare-fun map_sum$c (T_set_T_set_fun$ T_T_fun$ )T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun map_sum$d (T_T_fun$ T_T_sum_T_T_sum_fun$ )T_T_T_sum_sum_T_T_T_sum_sum_fun$ )
(declare-fun map_sum$e (T_set_T_set_fun$ T_set_T_set_fun$ )T_set_T_set_sum_T_set_T_set_sum_fun$ )
(declare-fun map_sum$f (T_T_sum_T_T_sum_fun$ T_T_fun$ )T_T_sum_T_sum_T_T_sum_T_sum_fun$ )
(declare-fun map_sum$g (T_set_T_set_fun$ T_T_sum_T_T_sum_fun$ )T_set_T_T_sum_sum_T_set_T_T_sum_sum_fun$ )
(declare-fun map_sum$h (T_T_sum_T_T_sum_fun$ T_set_T_set_fun$ )T_T_sum_T_set_sum_T_T_sum_T_set_sum_fun$ )
(declare-fun map_sum$i (T_T_sum_T_T_sum_fun$ T_T_sum_T_T_sum_fun$ )T_T_sum_T_T_sum_sum_T_T_sum_T_T_sum_sum_fun$ )
(declare-fun map_sum$j (T_T_fun$ T_set_set_T_set_set_fun$ )T_T_set_set_sum_T_T_set_set_sum_fun$ )
(assert (! (not (member$ (pair$ n$ (image$ (fun_app$ (map_sum$ id$ )root$ )(cont$ (h$ tr0$ n$ ))))p$ )):named a0 ))
(assert (! (wf$ tr0$ ):named a1 ))
(assert (! (forall ((?v0 N$ ))(exists ((?v1 T_N_sum_set$ ))(member$ (pair$ ?v0 ?v1 )p$ ))):named a2 ))
(assert (! (forall ((?v0 N$ ))(= (fun_app$a root$ (h$ tr0$ ?v0 ))(fun_app$a root$ (pick$ tr0$ ?v0 )))):named a3 ))
(assert (! (= (image$a id$a )id$b ):named a4 ))
(assert (! (= (image$b id$c )id$d ):named a5 ))
(assert (! (= (image$c id$e )id$f ):named a6 ))
(assert (! (= (image$d id$g )id$h ):named a7 ))
(assert (! (= (image$e id$i )id$j ):named a8 ))
(assert (! (= (image$f id$k )id$l ):named a9 ))
(assert (! (= (image$g id$m )id$i ):named a10 ))
(assert (! (= (image$h id$n )id$g ):named a11 ))
(assert (! (= (image$i id$o )id$e ):named a12 ))
(assert (! (= (image$j id$ )id$m ):named a13 ))
(assert (! (forall ((?v0 N$ ))(! (= (h_c$ tr0$ ?v0 )(image$ (fun_app$ (map_sum$ id$ )root$ )(cont$ (pick$ tr0$ ?v0 )))):pattern ((h_c$ tr0$ ?v0 )))):named a14 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (wf$ ?v0 )(member$ (pair$ (fun_app$a root$ ?v0 )(image$ (fun_app$ (map_sum$ id$ )root$ )(cont$ ?v0 )))p$ ))):named a15 ))
(assert (! (inItr$ top$ tr0$ n$ ):named a16 ))
(assert (! (forall ((?v0 T_T_T_sum_sum$ ))(! (= (fun_app$b id$a ?v0 )?v0 ):pattern ((fun_app$b id$a ?v0 )))):named a17 ))
(assert (! (forall ((?v0 T_T_set_sum$ ))(! (= (fun_app$c id$c ?v0 )?v0 ):pattern ((fun_app$c id$c ?v0 )))):named a18 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(! (= (fun_app$d id$e ?v0 )?v0 ):pattern ((fun_app$d id$e ?v0 )))):named a19 ))
(assert (! (forall ((?v0 T_T_sum_set$ ))(! (= (fun_app$e id$g ?v0 )?v0 ):pattern ((fun_app$e id$g ?v0 )))):named a20 ))
(assert (! (forall ((?v0 T_set_set$ ))(! (= (fun_app$f id$i ?v0 )?v0 ):pattern ((fun_app$f id$i ?v0 )))):named a21 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$g id$m ?v0 )?v0 ):pattern ((fun_app$g id$m ?v0 )))):named a22 ))
(assert (! (forall ((?v0 T_T_sum$ ))(! (= (fun_app$h id$n ?v0 )?v0 ):pattern ((fun_app$h id$n ?v0 )))):named a23 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$i id$ ?v0 )?v0 ):pattern ((fun_app$i id$ ?v0 )))):named a24 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$j ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$b ?v0 (image$ ?v1 ?v3 )))):named a25 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= ?v0 (fun_app$k ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (fun_app$d (image$i ?v1 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$i ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$c ?v0 (fun_app$g (image$j ?v1 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$l ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$d ?v0 (fun_app$m (image$f ?v1 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$n ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$d ?v0 (image$k ?v1 ?v3 )))):named a29 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$o ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$d ?v0 (image$l ?v1 ?v3 )))):named a30 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$a ?v0 (image$m ?v1 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$q ?v1 ?v2 ))(member$d ?v2 ?v3 ))(member$b ?v0 (image$n ?v1 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$o ?v1 ?v3 )))):named a33 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_N_sum$ )(?v3 T_N_sum_set$ ))(=> (and (= ?v0 (fun_app$s ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$a ?v0 (image$p ?v1 ?v3 )))):named a34 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 T_T_sum$ ))(= (fun_app$h (map_sum$a id$ id$ )?v0 )?v0 )):named a37 ))
(assert (! (forall ((?v0 T_T_set_sum$ ))(= (fun_app$c (map_sum$b id$ id$m )?v0 )?v0 )):named a38 ))
(assert (! (forall ((?v0 T_set_T_sum$ ))(= (fun_app$t (map_sum$c id$m id$ )?v0 )?v0 )):named a39 ))
(assert (! (forall ((?v0 T_T_T_sum_sum$ ))(= (fun_app$b (map_sum$d id$ id$n )?v0 )?v0 )):named a40 ))
(assert (! (forall ((?v0 T_set_T_set_sum$ ))(= (fun_app$u (map_sum$e id$m id$m )?v0 )?v0 )):named a41 ))
(assert (! (forall ((?v0 T_T_sum_T_sum$ ))(= (fun_app$v (map_sum$f id$n id$ )?v0 )?v0 )):named a42 ))
(assert (! (forall ((?v0 T_set_T_T_sum_sum$ ))(= (fun_app$w (map_sum$g id$m id$n )?v0 )?v0 )):named a43 ))
(assert (! (forall ((?v0 T_T_sum_T_set_sum$ ))(= (fun_app$x (map_sum$h id$n id$m )?v0 )?v0 )):named a44 ))
(assert (! (forall ((?v0 T_T_sum_T_T_sum_sum$ ))(= (fun_app$y (map_sum$i id$n id$n )?v0 )?v0 )):named a45 ))
(assert (! (forall ((?v0 T_T_set_set_sum$ ))(= (fun_app$z (map_sum$j id$ id$i )?v0 )?v0 )):named a46 ))
(assert (! (= (map_sum$a id$ id$ )id$n ):named a47 ))
(assert (! (= (map_sum$b id$ id$m )id$c ):named a48 ))
(assert (! (= (map_sum$c id$m id$ )id$p ):named a49 ))
(assert (! (= (map_sum$d id$ id$n )id$a ):named a50 ))
(assert (! (= (map_sum$e id$m id$m )id$q ):named a51 ))
(assert (! (= (map_sum$f id$n id$ )id$r ):named a52 ))
(assert (! (= (map_sum$g id$m id$n )id$s ):named a53 ))
(assert (! (= (map_sum$h id$n id$m )id$t ):named a54 ))
(assert (! (= (map_sum$i id$n id$n )id$u ):named a55 ))
(assert (! (= (map_sum$j id$ id$i )id$v ):named a56 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (fun_app$a root$ ?v0 )(fun_app$a root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a57 ))
(assert (! (forall ((?v0 T$ ))(member$c ?v0 top$a )):named a58 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(member$a ?v0 top$b )):named a59 ))
(assert (! (forall ((?v0 T_N_sum$ ))(member$b ?v0 top$c )):named a60 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(member$ ?v0 top$d )):named a61 ))
(assert (! (forall ((?v0 N$ ))(member$d ?v0 top$ )):named a62 ))
(assert (! (forall ((?v0 N$ ))(=> (inItr$ top$ tr0$ ?v0 )(= (fun_app$a root$ (pick$ tr0$ ?v0 ))?v0 ))):named a63 ))
(assert (! (forall ((?v0 N$ ))(=> (and (wf$ tr0$ )(inItr$ top$ tr0$ ?v0 ))(wf$ (pick$ tr0$ ?v0 )))):named a64 ))
(check-sat )
;(get-unsat-core )
