;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort T_T_set_fun$ 0 )
(declare-sort T_set_T_fun$ 0 )
(declare-sort T_set_set_set$ 0 )
(declare-sort T_set_bool_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_fun$ 0 )
(declare-sort T_set_set_set_set$ 0 )
(declare-sort T_set_set_bool_fun$ 0 )
(declare-sort T_dtree_sum_set_set$ 0 )
(declare-sort Dtree_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort T_set_T_bool_fun_fun$ 0 )
(declare-sort T_T_dtree_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_T_set_fun$ 0 )
(declare-sort T_dtree_sum_set_T_fun$ 0 )
(declare-sort T_set_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_set_set_set$ 0 )
(declare-sort Dtree_T_set_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_bool_fun$ 0 )
(declare-sort T_set_T_set_bool_fun_fun$ 0 )
(declare-sort T_set_set_T_bool_fun_fun$ 0 )
(declare-sort T_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_set_T_dtree_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_set_set_set_set$ 0 )
(declare-sort T_dtree_sum_set_set_bool_fun$ 0 )
(declare-sort T_set_set_T_set_bool_fun_fun$ 0 )
(declare-sort T_bool_fun_T_set_bool_fun_fun$ 0 )
(declare-sort T_set_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_bool_fun_fun$ 0 )
(declare-sort T_set_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_set_bool_fun_T_set_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_set_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_set_T_bool_fun_fun$ 0 )
(declare-sort T_set_set_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_dtree_sum_set_fun$ 0 )
(declare-sort T_dtree_sum_set_set_T_set_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_set_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_set_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-datatypes ()((T_dtree_sum$ (inl$ (projl$ T$ ))(inr$ (projr$ Dtree$ )))))
(declare-fun x$ ()T$ )
(declare-fun fr$ (N_set$ Dtree$ )T_set$ )
(declare-fun ns$ ()N_set$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()T_T_dtree_sum_fun$ )
(declare-fun sup$ (T_set_set$ )T_set$ )
(declare-fun uua$ ()T_set_bool_fun$ )
(declare-fun uub$ (N_set$ )Dtree_T_set_bool_fun_fun$ )
(declare-fun uuc$ (T_T_fun$ )T_bool_fun_T_bool_fun_fun$ )
(declare-fun uud$ (T_T_set_fun$ )T_set_bool_fun_T_bool_fun_fun$ )
(declare-fun uue$ (T_set_T_fun$ )T_bool_fun_T_set_bool_fun_fun$ )
(declare-fun uuf$ (T_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_bool_fun_fun$ )
(declare-fun uug$ (T_set_T_set_fun$ )T_set_bool_fun_T_set_bool_fun_fun$ )
(declare-fun uuh$ (T_dtree_sum_T_fun$ )T_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uui$ (T_dtree_sum_T_set_fun$ )T_set_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuj$ (T_set_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_set_bool_fun_fun$ )
(declare-fun uuk$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uul$ (T_T_dtree_sum_set_fun$ )T_dtree_sum_set_bool_fun_T_bool_fun_fun$ )
(declare-fun uum$ ()T_dtree_sum_set_T_dtree_sum_set_fun$ )
(declare-fun uun$ ()T_set_T_set_fun$ )
(declare-fun uuo$ ()T_T_fun$ )
(declare-fun uup$ (T_T_fun$ )T_set_T_bool_fun_fun$ )
(declare-fun uuq$ (T_set_T_fun$ )T_set_T_set_bool_fun_fun$ )
(declare-fun uur$ (T_T_dtree_sum_fun$ )T_dtree_sum_set_T_bool_fun_fun$ )
(declare-fun uus$ (T_set_T_dtree_sum_fun$ )T_dtree_sum_set_T_set_bool_fun_fun$ )
(declare-fun uut$ (T_T_set_fun$ )T_set_set_T_bool_fun_fun$ )
(declare-fun uuu$ (T_set_T_set_fun$ )T_set_set_T_set_bool_fun_fun$ )
(declare-fun uuv$ (T_dtree_sum_T_fun$ )T_set_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuw$ (T_T_dtree_sum_set_fun$ )T_dtree_sum_set_set_T_bool_fun_fun$ )
(declare-fun uux$ (T_dtree_sum_T_set_fun$ )T_set_set_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuy$ (T_set_T_dtree_sum_set_fun$ )T_dtree_sum_set_set_T_set_bool_fun_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun inFr$ (N_set$ )Dtree_T_bool_fun_fun$ )
(declare-fun sup$a (T_dtree_sum_set_set_set_set$ )T_dtree_sum_set_set_set$ )
(declare-fun sup$b (T_set_set_set_set$ )T_set_set_set$ )
(declare-fun sup$c (T_set_set_set$ )T_set_set$ )
(declare-fun sup$d (T_dtree_sum_set_set_set$ )T_dtree_sum_set_set$ )
(declare-fun sup$e (T_dtree_sum_set_set$ )T_dtree_sum_set$ )
(declare-fun subtr$ (N_set$ Dtree$ Dtree$ )Bool )
(declare-fun member$ (T_set$ )T_set_set_bool_fun$ )
(declare-fun vimage$ (T_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun collect$ (T_set_bool_fun$ )T_set_set$ )
(declare-fun fun_app$ (T_set_bool_fun$ T_set$ )Bool )
(declare-fun member$a (T$ )T_set_bool_fun$ )
(declare-fun member$b (T_dtree_sum$ )T_dtree_sum_set_bool_fun$ )
(declare-fun member$c (T_dtree_sum_set$ )T_dtree_sum_set_set_bool_fun$ )
(declare-fun member$d (T_dtree_sum_set_set$ T_dtree_sum_set_set_set$ )Bool )
(declare-fun member$e (T_dtree_sum_set_set_set$ T_dtree_sum_set_set_set_set$ )Bool )
(declare-fun member$f (T_set_set$ T_set_set_set$ )Bool )
(declare-fun member$g (T_set_set_set$ T_set_set_set_set$ )Bool )
(declare-fun vimage$a (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun vimage$b (T_T_set_fun$ T_set_set$ )T_set$ )
(declare-fun vimage$c (T_set_T_fun$ T_set$ )T_set_set$ )
(declare-fun vimage$d (T_set_T_set_fun$ T_set_set$ )T_set_set$ )
(declare-fun vimage$e (T_dtree_sum_T_fun$ )T_set_T_dtree_sum_set_fun$ )
(declare-fun vimage$f (T_dtree_sum_T_set_fun$ T_set_set$ )T_dtree_sum_set$ )
(declare-fun vimage$g (T_set_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set_set$ )
(declare-fun vimage$h (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$i (T_T_dtree_sum_set_fun$ T_dtree_sum_set_set$ )T_set$ )
(declare-fun vimage$j (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set_set$ )T_dtree_sum_set_set$ )
(declare-fun vimage$k (T_dtree_sum_set_T_fun$ T_set$ )T_dtree_sum_set_set$ )
(declare-fun vimage$l (T_set_T_dtree_sum_set_fun$ T_dtree_sum_set_set$ )T_set_set$ )
(declare-fun collect$a (T_bool_fun$ )T_set$ )
(declare-fun collect$b (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun collect$c (T_dtree_sum_set_bool_fun$ )T_dtree_sum_set_set$ )
(declare-fun fun_app$a (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun fun_app$b (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$c (T_set_set_T_dtree_sum_bool_fun_fun$ T_set_set$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$d (T_set_set_bool_fun$ T_set_set$ )Bool )
(declare-fun fun_app$e (T_dtree_sum_T_set_fun$ T_dtree_sum$ )T_set$ )
(declare-fun fun_app$f (T_set_T_dtree_sum_bool_fun_fun$ T_set$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$g (T_dtree_sum_T_fun$ T_dtree_sum$ )T$ )
(declare-fun fun_app$h (T_dtree_sum_set_T_set_bool_fun_fun$ T_dtree_sum_set$ )T_set_bool_fun$ )
(declare-fun fun_app$i (T_dtree_sum_set_bool_fun$ T_dtree_sum_set$ )Bool )
(declare-fun fun_app$j (T_set_T_dtree_sum_fun$ T_set$ )T_dtree_sum$ )
(declare-fun fun_app$k (T_dtree_sum_set_set_T_set_bool_fun_fun$ T_dtree_sum_set_set$ )T_set_bool_fun$ )
(declare-fun fun_app$l (T_dtree_sum_set_set_bool_fun$ T_dtree_sum_set_set$ )Bool )
(declare-fun fun_app$m (T_set_T_dtree_sum_set_fun$ T_set$ )T_dtree_sum_set$ )
(declare-fun fun_app$n (T_set_set_T_set_bool_fun_fun$ T_set_set$ )T_set_bool_fun$ )
(declare-fun fun_app$o (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$p (T_set_T_set_bool_fun_fun$ T_set$ )T_set_bool_fun$ )
(declare-fun fun_app$q (T_set_T_fun$ T_set$ )T$ )
(declare-fun fun_app$r (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$s (T_dtree_sum_set_T_bool_fun_fun$ T_dtree_sum_set$ )T_bool_fun$ )
(declare-fun fun_app$t (T_dtree_sum_set_set_T_bool_fun_fun$ T_dtree_sum_set_set$ )T_bool_fun$ )
(declare-fun fun_app$u (T_T_dtree_sum_set_fun$ T$ )T_dtree_sum_set$ )
(declare-fun fun_app$v (T_set_set_T_bool_fun_fun$ T_set_set$ )T_bool_fun$ )
(declare-fun fun_app$w (T_T_set_fun$ T$ )T_set$ )
(declare-fun fun_app$x (T_set_T_bool_fun_fun$ T_set$ )T_bool_fun$ )
(declare-fun fun_app$y (T_T_fun$ T$ )T$ )
(declare-fun fun_app$z (T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$aa (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$ab (T_set_bool_fun_T_dtree_sum_bool_fun_fun$ T_set_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$ac (T_bool_fun_T_dtree_sum_bool_fun_fun$ T_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$ad (T_dtree_sum_bool_fun_T_set_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_set_bool_fun$ )
(declare-fun fun_app$ae (T_set_bool_fun_T_set_bool_fun_fun$ T_set_bool_fun$ )T_set_bool_fun$ )
(declare-fun fun_app$af (T_bool_fun_T_set_bool_fun_fun$ T_bool_fun$ )T_set_bool_fun$ )
(declare-fun fun_app$ag (T_dtree_sum_bool_fun_T_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$ah (T_dtree_sum_set_bool_fun_T_bool_fun_fun$ T_dtree_sum_set_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$ai (T_set_bool_fun_T_bool_fun_fun$ T_set_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$aj (T_bool_fun_T_bool_fun_fun$ T_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$ak (Dtree_T_set_bool_fun_fun$ Dtree$ )T_set_bool_fun$ )
(declare-fun fun_app$al (T_dtree_sum_set_T_dtree_sum_set_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun fun_app$am (Dtree_T_bool_fun_fun$ Dtree$ )T_bool_fun$ )
(declare-fun fun_app$an (T_dtree_sum_set_T_fun$ T_dtree_sum_set$ )T$ )
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$ uua$ ?v0 )(exists ((?v1 Dtree$ ))(and (= ?v0 (vimage$ uu$ (cont$ ?v1 )))(subtr$ ns$ ?v1 tr$ )))):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$a uu$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$a uu$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$ )(?v1 T_set_set$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$b (fun_app$c (uux$ ?v0 )?v1 )?v2 )(fun_app$d (member$ (fun_app$e ?v0 ?v2 ))?v1 )):pattern ((fun_app$b (fun_app$c (uux$ ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_set$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$b (fun_app$f (uuv$ ?v0 )?v1 )?v2 )(fun_app$ (member$a (fun_app$g ?v0 ?v2 ))?v1 )):pattern ((fun_app$b (fun_app$f (uuv$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 T_set_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$h (uus$ ?v0 )?v1 )?v2 )(fun_app$i (member$b (fun_app$j ?v0 ?v2 ))?v1 )):pattern ((fun_app$ (fun_app$h (uus$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 T_set_T_dtree_sum_set_fun$ )(?v1 T_dtree_sum_set_set$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$k (uuy$ ?v0 )?v1 )?v2 )(fun_app$l (member$c (fun_app$m ?v0 ?v2 ))?v1 )):pattern ((fun_app$ (fun_app$k (uuy$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 T_set_T_set_fun$ )(?v1 T_set_set$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$n (uuu$ ?v0 )?v1 )?v2 )(fun_app$d (member$ (fun_app$o ?v0 ?v2 ))?v1 )):pattern ((fun_app$ (fun_app$n (uuu$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 T_set_T_fun$ )(?v1 T_set$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$p (uuq$ ?v0 )?v1 )?v2 )(fun_app$ (member$a (fun_app$q ?v0 ?v2 ))?v1 )):pattern ((fun_app$ (fun_app$p (uuq$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$s (uur$ ?v0 )?v1 )?v2 )(fun_app$i (member$b (fun_app$a ?v0 ?v2 ))?v1 )):pattern ((fun_app$r (fun_app$s (uur$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 T_T_dtree_sum_set_fun$ )(?v1 T_dtree_sum_set_set$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$t (uuw$ ?v0 )?v1 )?v2 )(fun_app$l (member$c (fun_app$u ?v0 ?v2 ))?v1 )):pattern ((fun_app$r (fun_app$t (uuw$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 T_T_set_fun$ )(?v1 T_set_set$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$v (uut$ ?v0 )?v1 )?v2 )(fun_app$d (member$ (fun_app$w ?v0 ?v2 ))?v1 )):pattern ((fun_app$r (fun_app$v (uut$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$x (uup$ ?v0 )?v1 )?v2 )(fun_app$ (member$a (fun_app$y ?v0 ?v2 ))?v1 )):pattern ((fun_app$r (fun_app$x (uup$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$b (fun_app$z (uuk$ ?v0 )?v1 )?v2 )(fun_app$b ?v1 (fun_app$aa ?v0 ?v2 ))):pattern ((fun_app$b (fun_app$z (uuk$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$ )(?v1 T_set_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$b (fun_app$ab (uui$ ?v0 )?v1 )?v2 )(fun_app$ ?v1 (fun_app$e ?v0 ?v2 ))):pattern ((fun_app$b (fun_app$ab (uui$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$b (fun_app$ac (uuh$ ?v0 )?v1 )?v2 )(fun_app$r ?v1 (fun_app$g ?v0 ?v2 ))):pattern ((fun_app$b (fun_app$ac (uuh$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 T_set_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$ad (uuj$ ?v0 )?v1 )?v2 )(fun_app$b ?v1 (fun_app$j ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$ad (uuj$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 T_set_T_set_fun$ )(?v1 T_set_bool_fun$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$ae (uug$ ?v0 )?v1 )?v2 )(fun_app$ ?v1 (fun_app$o ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$ae (uug$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 T_set_T_fun$ )(?v1 T_bool_fun$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$af (uue$ ?v0 )?v1 )?v2 )(fun_app$r ?v1 (fun_app$q ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$af (uue$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$ag (uuf$ ?v0 )?v1 )?v2 )(fun_app$b ?v1 (fun_app$a ?v0 ?v2 ))):pattern ((fun_app$r (fun_app$ag (uuf$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 T_T_dtree_sum_set_fun$ )(?v1 T_dtree_sum_set_bool_fun$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$ah (uul$ ?v0 )?v1 )?v2 )(fun_app$i ?v1 (fun_app$u ?v0 ?v2 ))):pattern ((fun_app$r (fun_app$ah (uul$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 T_T_set_fun$ )(?v1 T_set_bool_fun$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$ai (uud$ ?v0 )?v1 )?v2 )(fun_app$ ?v1 (fun_app$w ?v0 ?v2 ))):pattern ((fun_app$r (fun_app$ai (uud$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ )(?v2 T$ ))(! (= (fun_app$r (fun_app$aj (uuc$ ?v0 )?v1 )?v2 )(fun_app$r ?v1 (fun_app$y ?v0 ?v2 ))):pattern ((fun_app$r (fun_app$aj (uuc$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T_set$ ))(! (= (fun_app$ (fun_app$ak (uub$ ?v0 )?v1 )?v2 )(exists ((?v3 Dtree$ ))(and (= ?v2 (fr$ ?v0 ?v3 ))(subtr$ ?v0 ?v3 ?v1 )))):pattern ((fun_app$ (fun_app$ak (uub$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(! (= (fun_app$al uum$ ?v0 )?v0 ):pattern ((fun_app$al uum$ ?v0 )))):named a23 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$o uun$ ?v0 )?v0 ):pattern ((fun_app$o uun$ ?v0 )))):named a24 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$y uuo$ ?v0 )?v0 ):pattern ((fun_app$y uuo$ ?v0 )))):named a25 ))
(assert (! (not (fun_app$ (member$a x$ )(sup$ (collect$ uua$ )))):named a26 ))
(assert (! (fun_app$r (fun_app$am (inFr$ ns$ )tr$ )x$ ):named a27 ))
(assert (! (exists ((?v0 Dtree$ ))(and (subtr$ ns$ ?v0 tr$ )(fun_app$i (member$b (inl$ x$ ))(cont$ ?v0 )))):named a28 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ )(?v3 Dtree$ ))(=> (and (fun_app$r (fun_app$am (inFr$ ?v0 )?v1 )?v2 )(subtr$ ?v0 ?v1 ?v3 ))(fun_app$r (fun_app$am (inFr$ ?v0 )?v3 )?v2 ))):named a29 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (fun_app$r (fun_app$am (inFr$ ?v0 )?v1 )?v2 )(exists ((?v3 Dtree$ ))(and (subtr$ ?v0 ?v3 ?v1 )(fun_app$i (member$b (inl$ ?v2 ))(cont$ ?v3 )))))):named a30 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (subtr$ ?v0 ?v1 ?v2 )(subtr$ ?v0 ?v2 ?v3 ))(subtr$ ?v0 ?v1 ?v3 ))):named a31 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ ))(= (fr$ ?v0 ?v1 )(sup$ (collect$ (fun_app$ak (uub$ ?v0 )?v1 ))))):named a32 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ ))(= (fun_app$o (vimage$a ?v0 )(collect$a ?v1 ))(collect$a (fun_app$aj (uuc$ ?v0 )?v1 )))):named a33 ))
(assert (! (forall ((?v0 T_T_set_fun$ )(?v1 T_set_bool_fun$ ))(= (vimage$b ?v0 (collect$ ?v1 ))(collect$a (fun_app$ai (uud$ ?v0 )?v1 )))):named a34 ))
(assert (! (forall ((?v0 T_set_T_fun$ )(?v1 T_bool_fun$ ))(= (vimage$c ?v0 (collect$a ?v1 ))(collect$ (fun_app$af (uue$ ?v0 )?v1 )))):named a35 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$ ?v0 (collect$b ?v1 ))(collect$a (fun_app$ag (uuf$ ?v0 )?v1 )))):named a36 ))
(assert (! (forall ((?v0 T_set_T_set_fun$ )(?v1 T_set_bool_fun$ ))(= (vimage$d ?v0 (collect$ ?v1 ))(collect$ (fun_app$ae (uug$ ?v0 )?v1 )))):named a37 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_bool_fun$ ))(= (fun_app$m (vimage$e ?v0 )(collect$a ?v1 ))(collect$b (fun_app$ac (uuh$ ?v0 )?v1 )))):named a38 ))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$ )(?v1 T_set_bool_fun$ ))(= (vimage$f ?v0 (collect$ ?v1 ))(collect$b (fun_app$ab (uui$ ?v0 )?v1 )))):named a39 ))
(assert (! (forall ((?v0 T_set_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$g ?v0 (collect$b ?v1 ))(collect$ (fun_app$ad (uuj$ ?v0 )?v1 )))):named a40 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$h ?v0 (collect$b ?v1 ))(collect$b (fun_app$z (uuk$ ?v0 )?v1 )))):named a41 ))
(assert (! (forall ((?v0 T_T_dtree_sum_set_fun$ )(?v1 T_dtree_sum_set_bool_fun$ ))(= (vimage$i ?v0 (collect$c ?v1 ))(collect$a (fun_app$ah (uul$ ?v0 )?v1 )))):named a42 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ ))(= (vimage$j uum$ ?v0 )?v0 )):named a43 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (vimage$d uun$ ?v0 )?v0 )):named a44 ))
(assert (! (forall ((?v0 T_set$ ))(= (fun_app$o (vimage$a uuo$ )?v0 )?v0 )):named a45 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(= (fun_app$ (member$a ?v0 )(fun_app$o (vimage$a ?v1 )?v2 ))(fun_app$ (member$a (fun_app$y ?v1 ?v0 ))?v2 ))):named a46 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_set$ ))(= (fun_app$i (member$b ?v0 )(fun_app$m (vimage$e ?v1 )?v2 ))(fun_app$ (member$a (fun_app$g ?v1 ?v0 ))?v2 ))):named a47 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (fun_app$ (member$a ?v0 )(vimage$ ?v1 ?v2 ))(fun_app$i (member$b (fun_app$a ?v1 ?v0 ))?v2 ))):named a48 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (fun_app$i (member$b ?v0 )(vimage$h ?v1 ?v2 ))(fun_app$i (member$b (fun_app$aa ?v1 ?v0 ))?v2 ))):named a49 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_T_fun$ )(?v2 T_set$ ))(= (fun_app$d (member$ ?v0 )(vimage$c ?v1 ?v2 ))(fun_app$ (member$a (fun_app$q ?v1 ?v0 ))?v2 ))):named a50 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_set_fun$ )(?v2 T_set_set$ ))(= (fun_app$ (member$a ?v0 )(vimage$b ?v1 ?v2 ))(fun_app$d (member$ (fun_app$w ?v1 ?v0 ))?v2 ))):named a51 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_T_set_fun$ )(?v2 T_set_set$ ))(= (fun_app$d (member$ ?v0 )(vimage$d ?v1 ?v2 ))(fun_app$d (member$ (fun_app$o ?v1 ?v0 ))?v2 ))):named a52 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_set_fun$ )(?v2 T_dtree_sum_set_set$ ))(= (fun_app$ (member$a ?v0 )(vimage$i ?v1 ?v2 ))(fun_app$l (member$c (fun_app$u ?v1 ?v0 ))?v2 ))):named a53 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_set_fun$ )(?v2 T_set_set$ ))(= (fun_app$i (member$b ?v0 )(vimage$f ?v1 ?v2 ))(fun_app$d (member$ (fun_app$e ?v1 ?v0 ))?v2 ))):named a54 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set_T_fun$ )(?v2 T_set$ ))(= (fun_app$l (member$c ?v0 )(vimage$k ?v1 ?v2 ))(fun_app$ (member$a (fun_app$an ?v1 ?v0 ))?v2 ))):named a55 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$y ?v0 ?v1 )?v2 )(fun_app$ (member$a ?v2 )?v3 ))(fun_app$ (member$a ?v1 )(fun_app$o (vimage$a ?v0 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_dtree_sum$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$g ?v0 ?v1 )?v2 )(fun_app$ (member$a ?v2 )?v3 ))(fun_app$i (member$b ?v1 )(fun_app$m (vimage$e ?v0 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$a ?v0 ?v1 )?v2 )(fun_app$i (member$b ?v2 )?v3 ))(fun_app$ (member$a ?v1 )(vimage$ ?v0 ?v3 )))):named a58 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$aa ?v0 ?v1 )?v2 )(fun_app$i (member$b ?v2 )?v3 ))(fun_app$i (member$b ?v1 )(vimage$h ?v0 ?v3 )))):named a59 ))
(assert (! (forall ((?v0 T_set_T_fun$ )(?v1 T_set$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$q ?v0 ?v1 )?v2 )(fun_app$ (member$a ?v2 )?v3 ))(fun_app$d (member$ ?v1 )(vimage$c ?v0 ?v3 )))):named a60 ))
(assert (! (forall ((?v0 T_T_set_fun$ )(?v1 T$ )(?v2 T_set$ )(?v3 T_set_set$ ))(=> (and (= (fun_app$w ?v0 ?v1 )?v2 )(fun_app$d (member$ ?v2 )?v3 ))(fun_app$ (member$a ?v1 )(vimage$b ?v0 ?v3 )))):named a61 ))
(assert (! (forall ((?v0 T_set_T_set_fun$ )(?v1 T_set$ )(?v2 T_set$ )(?v3 T_set_set$ ))(=> (and (= (fun_app$o ?v0 ?v1 )?v2 )(fun_app$d (member$ ?v2 )?v3 ))(fun_app$d (member$ ?v1 )(vimage$d ?v0 ?v3 )))):named a62 ))
(assert (! (forall ((?v0 T_dtree_sum_set_T_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$an ?v0 ?v1 )?v2 )(fun_app$ (member$a ?v2 )?v3 ))(fun_app$l (member$c ?v1 )(vimage$k ?v0 ?v3 )))):named a63 ))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$ )(?v1 T_dtree_sum$ )(?v2 T_set$ )(?v3 T_set_set$ ))(=> (and (= (fun_app$e ?v0 ?v1 )?v2 )(fun_app$d (member$ ?v2 )?v3 ))(fun_app$i (member$b ?v1 )(vimage$f ?v0 ?v3 )))):named a64 ))
(assert (! (forall ((?v0 T_T_dtree_sum_set_fun$ )(?v1 T$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_set_set$ ))(=> (and (= (fun_app$u ?v0 ?v1 )?v2 )(fun_app$l (member$c ?v2 )?v3 ))(fun_app$ (member$a ?v1 )(vimage$i ?v0 ?v3 )))):named a65 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a66 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a67 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set_set$ )(?v1 T_dtree_sum_set_set_bool_fun$ ))(= (exists ((?v2 T_dtree_sum_set_set$ ))(and (member$d ?v2 (sup$a ?v0 ))(fun_app$l ?v1 ?v2 )))(exists ((?v2 T_dtree_sum_set_set_set$ ))(and (member$e ?v2 ?v0 )(exists ((?v3 T_dtree_sum_set_set$ ))(and (member$d ?v3 ?v2 )(fun_app$l ?v1 ?v3 ))))))):named a68 ))
(assert (! (forall ((?v0 T_set_set_set_set$ )(?v1 T_set_set_bool_fun$ ))(= (exists ((?v2 T_set_set$ ))(and (member$f ?v2 (sup$b ?v0 ))(fun_app$d ?v1 ?v2 )))(exists ((?v2 T_set_set_set$ ))(and (member$g ?v2 ?v0 )(exists ((?v3 T_set_set$ ))(and (member$f ?v3 ?v2 )(fun_app$d ?v1 ?v3 ))))))):named a69 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_bool_fun$ ))(= (exists ((?v2 T_set$ ))(and (fun_app$d (member$ ?v2 )(sup$c ?v0 ))(fun_app$ ?v1 ?v2 )))(exists ((?v2 T_set_set$ ))(and (member$f ?v2 ?v0 )(exists ((?v3 T_set$ ))(and (fun_app$d (member$ ?v3 )?v2 )(fun_app$ ?v1 ?v3 ))))))):named a70 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set$ )(?v1 T_dtree_sum_set_bool_fun$ ))(= (exists ((?v2 T_dtree_sum_set$ ))(and (fun_app$l (member$c ?v2 )(sup$d ?v0 ))(fun_app$i ?v1 ?v2 )))(exists ((?v2 T_dtree_sum_set_set$ ))(and (member$d ?v2 ?v0 )(exists ((?v3 T_dtree_sum_set$ ))(and (fun_app$l (member$c ?v3 )?v2 )(fun_app$i ?v1 ?v3 ))))))):named a71 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_bool_fun$ ))(= (exists ((?v2 T_dtree_sum$ ))(and (fun_app$i (member$b ?v2 )(sup$e ?v0 ))(fun_app$b ?v1 ?v2 )))(exists ((?v2 T_dtree_sum_set$ ))(and (fun_app$l (member$c ?v2 )?v0 )(exists ((?v3 T_dtree_sum$ ))(and (fun_app$i (member$b ?v3 )?v2 )(fun_app$b ?v1 ?v3 ))))))):named a72 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_bool_fun$ ))(= (exists ((?v2 T$ ))(and (fun_app$ (member$a ?v2 )(sup$ ?v0 ))(fun_app$r ?v1 ?v2 )))(exists ((?v2 T_set$ ))(and (fun_app$d (member$ ?v2 )?v0 )(exists ((?v3 T$ ))(and (fun_app$ (member$a ?v3 )?v2 )(fun_app$r ?v1 ?v3 ))))))):named a73 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_set_set_set_set$ ))(= (member$d ?v0 (sup$a ?v1 ))(exists ((?v2 T_dtree_sum_set_set_set$ ))(and (member$e ?v2 ?v1 )(member$d ?v0 ?v2 ))))):named a74 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set_set$ ))(= (member$f ?v0 (sup$b ?v1 ))(exists ((?v2 T_set_set_set$ ))(and (member$g ?v2 ?v1 )(member$f ?v0 ?v2 ))))):named a75 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set_set$ ))(= (fun_app$d (member$ ?v0 )(sup$c ?v1 ))(exists ((?v2 T_set_set$ ))(and (member$f ?v2 ?v1 )(fun_app$d (member$ ?v0 )?v2 ))))):named a76 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set_set_set$ ))(= (fun_app$l (member$c ?v0 )(sup$d ?v1 ))(exists ((?v2 T_dtree_sum_set_set$ ))(and (member$d ?v2 ?v1 )(fun_app$l (member$c ?v0 )?v2 ))))):named a77 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set_set$ ))(= (fun_app$i (member$b ?v0 )(sup$e ?v1 ))(exists ((?v2 T_dtree_sum_set$ ))(and (fun_app$l (member$c ?v2 )?v1 )(fun_app$i (member$b ?v0 )?v2 ))))):named a78 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set_set$ ))(= (fun_app$ (member$a ?v0 )(sup$ ?v1 ))(exists ((?v2 T_set$ ))(and (fun_app$d (member$ ?v2 )?v1 )(fun_app$ (member$a ?v0 )?v2 ))))):named a79 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set_set$ )(?v1 T_dtree_sum_set_set_bool_fun$ ))(= (forall ((?v2 T_dtree_sum_set_set$ ))(=> (member$d ?v2 (sup$a ?v0 ))(fun_app$l ?v1 ?v2 )))(forall ((?v2 T_dtree_sum_set_set_set$ ))(=> (member$e ?v2 ?v0 )(forall ((?v3 T_dtree_sum_set_set$ ))(=> (member$d ?v3 ?v2 )(fun_app$l ?v1 ?v3 ))))))):named a80 ))
(assert (! (forall ((?v0 T_set_set_set_set$ )(?v1 T_set_set_bool_fun$ ))(= (forall ((?v2 T_set_set$ ))(=> (member$f ?v2 (sup$b ?v0 ))(fun_app$d ?v1 ?v2 )))(forall ((?v2 T_set_set_set$ ))(=> (member$g ?v2 ?v0 )(forall ((?v3 T_set_set$ ))(=> (member$f ?v3 ?v2 )(fun_app$d ?v1 ?v3 ))))))):named a81 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_bool_fun$ ))(= (forall ((?v2 T_set$ ))(=> (fun_app$d (member$ ?v2 )(sup$c ?v0 ))(fun_app$ ?v1 ?v2 )))(forall ((?v2 T_set_set$ ))(=> (member$f ?v2 ?v0 )(forall ((?v3 T_set$ ))(=> (fun_app$d (member$ ?v3 )?v2 )(fun_app$ ?v1 ?v3 ))))))):named a82 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set$ )(?v1 T_dtree_sum_set_bool_fun$ ))(= (forall ((?v2 T_dtree_sum_set$ ))(=> (fun_app$l (member$c ?v2 )(sup$d ?v0 ))(fun_app$i ?v1 ?v2 )))(forall ((?v2 T_dtree_sum_set_set$ ))(=> (member$d ?v2 ?v0 )(forall ((?v3 T_dtree_sum_set$ ))(=> (fun_app$l (member$c ?v3 )?v2 )(fun_app$i ?v1 ?v3 ))))))):named a83 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_bool_fun$ ))(= (forall ((?v2 T_dtree_sum$ ))(=> (fun_app$i (member$b ?v2 )(sup$e ?v0 ))(fun_app$b ?v1 ?v2 )))(forall ((?v2 T_dtree_sum_set$ ))(=> (fun_app$l (member$c ?v2 )?v0 )(forall ((?v3 T_dtree_sum$ ))(=> (fun_app$i (member$b ?v3 )?v2 )(fun_app$b ?v1 ?v3 ))))))):named a84 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_bool_fun$ ))(= (forall ((?v2 T$ ))(=> (fun_app$ (member$a ?v2 )(sup$ ?v0 ))(fun_app$r ?v1 ?v2 )))(forall ((?v2 T_set$ ))(=> (fun_app$d (member$ ?v2 )?v0 )(forall ((?v3 T$ ))(=> (fun_app$ (member$a ?v3 )?v2 )(fun_app$r ?v1 ?v3 ))))))):named a85 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set_set$ )(?v1 T_dtree_sum_set_set_set_set$ )(?v2 T_dtree_sum_set_set$ ))(=> (and (member$e ?v0 ?v1 )(member$d ?v2 ?v0 ))(member$d ?v2 (sup$a ?v1 )))):named a86 ))
(assert (! (forall ((?v0 T_set_set_set$ )(?v1 T_set_set_set_set$ )(?v2 T_set_set$ ))(=> (and (member$g ?v0 ?v1 )(member$f ?v2 ?v0 ))(member$f ?v2 (sup$b ?v1 )))):named a87 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set$ )(?v2 T_set$ ))(=> (and (member$f ?v0 ?v1 )(fun_app$d (member$ ?v2 )?v0 ))(fun_app$d (member$ ?v2 )(sup$c ?v1 )))):named a88 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_set_set_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$d ?v0 ?v1 )(fun_app$l (member$c ?v2 )?v0 ))(fun_app$l (member$c ?v2 )(sup$d ?v1 )))):named a89 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set_set$ )(?v2 T_dtree_sum$ ))(=> (and (fun_app$l (member$c ?v0 )?v1 )(fun_app$i (member$b ?v2 )?v0 ))(fun_app$i (member$b ?v2 )(sup$e ?v1 )))):named a90 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ )(?v2 T$ ))(=> (and (fun_app$d (member$ ?v0 )?v1 )(fun_app$ (member$a ?v2 )?v0 ))(fun_app$ (member$a ?v2 )(sup$ ?v1 )))):named a91 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ ))(= (fun_app$o (vimage$a ?v0 )?v1 )(collect$a (fun_app$x (uup$ ?v0 )?v1 )))):named a92 ))
(assert (! (forall ((?v0 T_set_T_fun$ )(?v1 T_set$ ))(= (vimage$c ?v0 ?v1 )(collect$ (fun_app$p (uuq$ ?v0 )?v1 )))):named a93 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$ ?v0 ?v1 )(collect$a (fun_app$s (uur$ ?v0 )?v1 )))):named a94 ))
(assert (! (forall ((?v0 T_set_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$g ?v0 ?v1 )(collect$ (fun_app$h (uus$ ?v0 )?v1 )))):named a95 ))
(assert (! (forall ((?v0 T_T_set_fun$ )(?v1 T_set_set$ ))(= (vimage$b ?v0 ?v1 )(collect$a (fun_app$v (uut$ ?v0 )?v1 )))):named a96 ))
(assert (! (forall ((?v0 T_set_T_set_fun$ )(?v1 T_set_set$ ))(= (vimage$d ?v0 ?v1 )(collect$ (fun_app$n (uuu$ ?v0 )?v1 )))):named a97 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_set$ ))(= (fun_app$m (vimage$e ?v0 )?v1 )(collect$b (fun_app$f (uuv$ ?v0 )?v1 )))):named a98 ))
(assert (! (forall ((?v0 T_T_dtree_sum_set_fun$ )(?v1 T_dtree_sum_set_set$ ))(= (vimage$i ?v0 ?v1 )(collect$a (fun_app$t (uuw$ ?v0 )?v1 )))):named a99 ))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$ )(?v1 T_set_set$ ))(= (vimage$f ?v0 ?v1 )(collect$b (fun_app$c (uux$ ?v0 )?v1 )))):named a100 ))
(assert (! (forall ((?v0 T_set_T_dtree_sum_set_fun$ )(?v1 T_dtree_sum_set_set$ ))(= (vimage$l ?v0 ?v1 )(collect$ (fun_app$k (uuy$ ?v0 )?v1 )))):named a101 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_set_set_set_set$ ))(=> (and (member$d ?v0 (sup$a ?v1 ))(forall ((?v2 T_dtree_sum_set_set_set$ ))(=> (and (member$d ?v0 ?v2 )(member$e ?v2 ?v1 ))false )))false )):named a102 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set_set$ ))(=> (and (member$f ?v0 (sup$b ?v1 ))(forall ((?v2 T_set_set_set$ ))(=> (and (member$f ?v0 ?v2 )(member$g ?v2 ?v1 ))false )))false )):named a103 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set_set$ ))(=> (and (fun_app$d (member$ ?v0 )(sup$c ?v1 ))(forall ((?v2 T_set_set$ ))(=> (and (fun_app$d (member$ ?v0 )?v2 )(member$f ?v2 ?v1 ))false )))false )):named a104 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set_set_set$ ))(=> (and (fun_app$l (member$c ?v0 )(sup$d ?v1 ))(forall ((?v2 T_dtree_sum_set_set$ ))(=> (and (fun_app$l (member$c ?v0 )?v2 )(member$d ?v2 ?v1 ))false )))false )):named a105 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set_set$ ))(=> (and (fun_app$i (member$b ?v0 )(sup$e ?v1 ))(forall ((?v2 T_dtree_sum_set$ ))(=> (and (fun_app$i (member$b ?v0 )?v2 )(fun_app$l (member$c ?v2 )?v1 ))false )))false )):named a106 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set_set$ ))(=> (and (fun_app$ (member$a ?v0 )(sup$ ?v1 ))(forall ((?v2 T_set$ ))(=> (and (fun_app$ (member$a ?v0 )?v2 )(fun_app$d (member$ ?v2 )?v1 ))false )))false )):named a107 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(=> (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T$ )(?v2 T_set$ ))(=> (fun_app$ (member$a (fun_app$y ?v0 ?v1 ))?v2 )(fun_app$ (member$a ?v1 )(fun_app$o (vimage$a ?v0 )?v2 )))):named a109 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_dtree_sum$ )(?v2 T_set$ ))(=> (fun_app$ (member$a (fun_app$g ?v0 ?v1 ))?v2 )(fun_app$i (member$b ?v1 )(fun_app$m (vimage$e ?v0 )?v2 )))):named a110 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T$ )(?v2 T_dtree_sum_set$ ))(=> (fun_app$i (member$b (fun_app$a ?v0 ?v1 ))?v2 )(fun_app$ (member$a ?v1 )(vimage$ ?v0 ?v2 )))):named a111 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ ))(=> (fun_app$i (member$b (fun_app$aa ?v0 ?v1 ))?v2 )(fun_app$i (member$b ?v1 )(vimage$h ?v0 ?v2 )))):named a112 ))
(assert (! (forall ((?v0 T_set_T_fun$ )(?v1 T_set$ )(?v2 T_set$ ))(=> (fun_app$ (member$a (fun_app$q ?v0 ?v1 ))?v2 )(fun_app$d (member$ ?v1 )(vimage$c ?v0 ?v2 )))):named a113 ))
(assert (! (forall ((?v0 T_T_set_fun$ )(?v1 T$ )(?v2 T_set_set$ ))(=> (fun_app$d (member$ (fun_app$w ?v0 ?v1 ))?v2 )(fun_app$ (member$a ?v1 )(vimage$b ?v0 ?v2 )))):named a114 ))
(assert (! (forall ((?v0 T_set_T_set_fun$ )(?v1 T_set$ )(?v2 T_set_set$ ))(=> (fun_app$d (member$ (fun_app$o ?v0 ?v1 ))?v2 )(fun_app$d (member$ ?v1 )(vimage$d ?v0 ?v2 )))):named a115 ))
(assert (! (forall ((?v0 T_dtree_sum_set_T_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_set$ ))(=> (fun_app$ (member$a (fun_app$an ?v0 ?v1 ))?v2 )(fun_app$l (member$c ?v1 )(vimage$k ?v0 ?v2 )))):named a116 ))
(assert (! (forall ((?v0 T_dtree_sum_T_set_fun$ )(?v1 T_dtree_sum$ )(?v2 T_set_set$ ))(=> (fun_app$d (member$ (fun_app$e ?v0 ?v1 ))?v2 )(fun_app$i (member$b ?v1 )(vimage$f ?v0 ?v2 )))):named a117 ))
(assert (! (forall ((?v0 T_T_dtree_sum_set_fun$ )(?v1 T$ )(?v2 T_dtree_sum_set_set$ ))(=> (fun_app$l (member$c (fun_app$u ?v0 ?v1 ))?v2 )(fun_app$ (member$a ?v1 )(vimage$i ?v0 ?v2 )))):named a118 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(=> (fun_app$ (member$a ?v0 )(fun_app$o (vimage$a ?v1 )?v2 ))(fun_app$ (member$a (fun_app$y ?v1 ?v0 ))?v2 ))):named a119 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_set$ ))(=> (fun_app$i (member$b ?v0 )(fun_app$m (vimage$e ?v1 )?v2 ))(fun_app$ (member$a (fun_app$g ?v1 ?v0 ))?v2 ))):named a120 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (fun_app$ (member$a ?v0 )(vimage$ ?v1 ?v2 ))(fun_app$i (member$b (fun_app$a ?v1 ?v0 ))?v2 ))):named a121 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (fun_app$i (member$b ?v0 )(vimage$h ?v1 ?v2 ))(fun_app$i (member$b (fun_app$aa ?v1 ?v0 ))?v2 ))):named a122 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_T_fun$ )(?v2 T_set$ ))(=> (fun_app$d (member$ ?v0 )(vimage$c ?v1 ?v2 ))(fun_app$ (member$a (fun_app$q ?v1 ?v0 ))?v2 ))):named a123 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_set_fun$ )(?v2 T_set_set$ ))(=> (fun_app$ (member$a ?v0 )(vimage$b ?v1 ?v2 ))(fun_app$d (member$ (fun_app$w ?v1 ?v0 ))?v2 ))):named a124 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_T_set_fun$ )(?v2 T_set_set$ ))(=> (fun_app$d (member$ ?v0 )(vimage$d ?v1 ?v2 ))(fun_app$d (member$ (fun_app$o ?v1 ?v0 ))?v2 ))):named a125 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_set_fun$ )(?v2 T_dtree_sum_set_set$ ))(=> (fun_app$ (member$a ?v0 )(vimage$i ?v1 ?v2 ))(fun_app$l (member$c (fun_app$u ?v1 ?v0 ))?v2 ))):named a126 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_set_fun$ )(?v2 T_set_set$ ))(=> (fun_app$i (member$b ?v0 )(vimage$f ?v1 ?v2 ))(fun_app$d (member$ (fun_app$e ?v1 ?v0 ))?v2 ))):named a127 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set_T_fun$ )(?v2 T_set$ ))(=> (fun_app$l (member$c ?v0 )(vimage$k ?v1 ?v2 ))(fun_app$ (member$a (fun_app$an ?v1 ?v0 ))?v2 ))):named a128 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(=> (and (fun_app$ (member$a ?v0 )(fun_app$o (vimage$a ?v1 )?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$y ?v1 ?v0 )?v3 )(fun_app$ (member$a ?v3 )?v2 ))false )))false )):named a129 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_set$ ))(=> (and (fun_app$i (member$b ?v0 )(fun_app$m (vimage$e ?v1 )?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$g ?v1 ?v0 )?v3 )(fun_app$ (member$a ?v3 )?v2 ))false )))false )):named a130 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (fun_app$ (member$a ?v0 )(vimage$ ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$a ?v1 ?v0 )?v3 )(fun_app$i (member$b ?v3 )?v2 ))false )))false )):named a131 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (fun_app$i (member$b ?v0 )(vimage$h ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$aa ?v1 ?v0 )?v3 )(fun_app$i (member$b ?v3 )?v2 ))false )))false )):named a132 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_T_fun$ )(?v2 T_set$ ))(=> (and (fun_app$d (member$ ?v0 )(vimage$c ?v1 ?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$q ?v1 ?v0 )?v3 )(fun_app$ (member$a ?v3 )?v2 ))false )))false )):named a133 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_set_fun$ )(?v2 T_set_set$ ))(=> (and (fun_app$ (member$a ?v0 )(vimage$b ?v1 ?v2 ))(forall ((?v3 T_set$ ))(=> (and (= (fun_app$w ?v1 ?v0 )?v3 )(fun_app$d (member$ ?v3 )?v2 ))false )))false )):named a134 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_T_set_fun$ )(?v2 T_set_set$ ))(=> (and (fun_app$d (member$ ?v0 )(vimage$d ?v1 ?v2 ))(forall ((?v3 T_set$ ))(=> (and (= (fun_app$o ?v1 ?v0 )?v3 )(fun_app$d (member$ ?v3 )?v2 ))false )))false )):named a135 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_dtree_sum_set_fun$ )(?v2 T_dtree_sum_set_set$ ))(=> (and (fun_app$ (member$a ?v0 )(vimage$i ?v1 ?v2 ))(forall ((?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$u ?v1 ?v0 )?v3 )(fun_app$l (member$c ?v3 )?v2 ))false )))false )):named a136 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_set_fun$ )(?v2 T_set_set$ ))(=> (and (fun_app$i (member$b ?v0 )(vimage$f ?v1 ?v2 ))(forall ((?v3 T_set$ ))(=> (and (= (fun_app$e ?v1 ?v0 )?v3 )(fun_app$d (member$ ?v3 )?v2 ))false )))false )):named a137 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set_T_fun$ )(?v2 T_set$ ))(=> (and (fun_app$l (member$c ?v0 )(vimage$k ?v1 ?v2 ))(forall ((?v3 T$ ))(=> (and (= (fun_app$an ?v1 ?v0 )?v3 )(fun_app$ (member$a ?v3 )?v2 ))false )))false )):named a138 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_T_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$r ?v0 (fun_app$y ?v1 ?v3 ))(fun_app$r ?v2 ?v3 )))(= (fun_app$o (vimage$a ?v1 )(collect$a ?v0 ))(collect$a ?v2 )))):named a139 ))
(assert (! (forall ((?v0 T_set_bool_fun$ )(?v1 T_T_set_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$ ?v0 (fun_app$w ?v1 ?v3 ))(fun_app$r ?v2 ?v3 )))(= (vimage$b ?v1 (collect$ ?v0 ))(collect$a ?v2 )))):named a140 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_set_T_fun$ )(?v2 T_set_bool_fun$ ))(=> (forall ((?v3 T_set$ ))(= (fun_app$r ?v0 (fun_app$q ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))(= (vimage$c ?v1 (collect$a ?v0 ))(collect$ ?v2 )))):named a141 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_T_dtree_sum_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$b ?v0 (fun_app$a ?v1 ?v3 ))(fun_app$r ?v2 ?v3 )))(= (vimage$ ?v1 (collect$b ?v0 ))(collect$a ?v2 )))):named a142 ))
(assert (! (forall ((?v0 T_set_bool_fun$ )(?v1 T_set_T_set_fun$ )(?v2 T_set_bool_fun$ ))(=> (forall ((?v3 T_set$ ))(= (fun_app$ ?v0 (fun_app$o ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))(= (vimage$d ?v1 (collect$ ?v0 ))(collect$ ?v2 )))):named a143 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_dtree_sum_T_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$r ?v0 (fun_app$g ?v1 ?v3 ))(fun_app$b ?v2 ?v3 )))(= (fun_app$m (vimage$e ?v1 )(collect$a ?v0 ))(collect$b ?v2 )))):named a144 ))
(assert (! (forall ((?v0 T_set_bool_fun$ )(?v1 T_dtree_sum_T_set_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$ ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$b ?v2 ?v3 )))(= (vimage$f ?v1 (collect$ ?v0 ))(collect$b ?v2 )))):named a145 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_set_T_dtree_sum_fun$ )(?v2 T_set_bool_fun$ ))(=> (forall ((?v3 T_set$ ))(= (fun_app$b ?v0 (fun_app$j ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))(= (vimage$g ?v1 (collect$b ?v0 ))(collect$ ?v2 )))):named a146 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$b ?v0 (fun_app$aa ?v1 ?v3 ))(fun_app$b ?v2 ?v3 )))(= (vimage$h ?v1 (collect$b ?v0 ))(collect$b ?v2 )))):named a147 ))
(assert (! (forall ((?v0 T_dtree_sum_set_bool_fun$ )(?v1 T_T_dtree_sum_set_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$i ?v0 (fun_app$u ?v1 ?v3 ))(fun_app$r ?v2 ?v3 )))(= (vimage$i ?v1 (collect$c ?v0 ))(collect$a ?v2 )))):named a148 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ ))(! (= (fr$ ?v0 ?v1 )(collect$a (fun_app$am (inFr$ ?v0 )?v1 ))):pattern ((fr$ ?v0 ?v1 )))):named a149 ))
(check-sat )
;(get-unsat-core )
