;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Ref$ 0 )
(declare-datatypes ()((Dag$ (tip$ )(node$ (select$ Dag$ )(selecta$ Ref$ )(selectb$ Dag$ )))))
(declare-fun a$ ()Ref$ )
(declare-fun l$ ()Dag$ )
(declare-fun r$ ()Dag$ )
(declare-fun x$ ()Dag$ )
(declare-fun less$ (Dag$ Dag$ )Bool )
(declare-fun less_eq$ (Dag$ Dag$ )Bool )
(assert (! (not (= (less$ x$ (node$ l$ a$ r$ ))(or (less_eq$ x$ l$ )(less_eq$ x$ r$ )))):named a0 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Ref$ )(?v2 Dag$ )(?v3 Dag$ )(?v4 Ref$ )(?v5 Dag$ ))(= (= (node$ ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a1 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a2 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less_eq$ ?v0 ?v1 )(or (= ?v0 ?v1 )(less$ ?v0 ?v1 ))):pattern ((less_eq$ ?v0 ?v1 )))):named a3 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ )(?v2 Dag$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less_eq$ ?v0 ?v2 ))):named a5 ))
(assert (! (forall ((?v0 Dag$ ))(less_eq$ ?v0 ?v0 )):named a6 ))
(assert (! (forall ((?v0 Dag$ ))(less_eq$ ?v0 ?v0 )):named a7 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$ ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (less_eq$ ?v1 ?v0 )))):pattern ((less$ ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less_eq$ ?v0 ?v1 )(or (less$ ?v0 ?v1 )(= ?v1 ?v0 ))):pattern ((less_eq$ ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(! (= (less_eq$ ?v0 ?v1 )(or (less$ ?v0 ?v1 )(= ?v0 ?v1 ))):pattern ((less_eq$ ?v0 ?v1 )))):named a13 ))
(check-sat )
;(get-unsat-core )
