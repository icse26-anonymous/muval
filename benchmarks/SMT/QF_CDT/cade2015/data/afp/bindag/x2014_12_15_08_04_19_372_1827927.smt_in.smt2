;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Ref$ 0 )
(declare-sort Ref_set$ 0 )
(declare-datatypes ()((Dag$ (tip$ )(node$ (select$ Dag$ )(selecta$ Ref$ )(selectb$ Dag$ )))))
(declare-fun a$ ()Ref$ )
(declare-fun l$ ()Dag$ )
(declare-fun r$ ()Dag$ )
(declare-fun x$ ()Dag$ )
(declare-fun y$ ()Dag$ )
(declare-fun bot$ ()Ref_set$ )
(declare-fun dag$ (Dag$ )Bool )
(declare-fun less$ (Dag$ Dag$ )Bool )
(declare-fun member$ (Ref$ Ref_set$ )Bool )
(declare-fun set_of$ (Dag$ )Ref_set$ )
(declare-fun subdag$ (Dag$ Dag$ )Bool )
(declare-fun thesis$ ()Bool )
(declare-fun less_eq$ (Dag$ Dag$ )Bool )
(declare-fun less_eq$a (Ref_set$ Ref_set$ )Bool )
(assert (! (not thesis$ ):named a0 ))
(assert (! (=> (and (not (member$ a$ (set_of$ l$ )))(not (member$ a$ (set_of$ r$ ))))thesis$ ):named a1 ))
(assert (! (= y$ (node$ l$ a$ r$ )):named a2 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Ref$ )(?v2 Dag$ )(?v3 Dag$ )(?v4 Ref$ )(?v5 Dag$ ))(= (= (node$ ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a3 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Ref$ )(?v2 Dag$ ))(! (= (dag$ (node$ ?v0 ?v1 ?v2 ))(and (not (member$ ?v1 (set_of$ ?v0 )))(and (not (member$ ?v1 (set_of$ ?v2 )))(and (dag$ ?v0 )(dag$ ?v2 ))))):pattern ((node$ ?v0 ?v1 ?v2 )))):named a4 ))
(assert (! (less$ x$ y$ ):named a5 ))
(assert (! (= (set_of$ tip$ )bot$ ):named a6 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$a (set_of$ ?v0 )(set_of$ ?v1 )))):named a7 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(=> (less$ ?v0 ?v1 )(less_eq$a (set_of$ ?v0 )(set_of$ ?v1 )))):named a8 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ )(?v2 Dag$ ))(=> (and (subdag$ ?v0 ?v1 )(subdag$ ?v1 ?v2 ))(subdag$ ?v0 ?v2 ))):named a9 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(=> (and (subdag$ ?v0 ?v1 )(subdag$ ?v1 ?v0 ))false )):named a10 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ ))(=> (subdag$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):named a11 ))
(assert (! (= (dag$ tip$ )true ):named a12 ))
(assert (! (dag$ y$ ):named a13 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Ref$ )(?v2 Dag$ )(?v3 Dag$ ))(! (= (subdag$ (node$ ?v0 ?v1 ?v2 )?v3 )(or (= ?v3 ?v0 )(or (= ?v3 ?v2 )(or (subdag$ ?v0 ?v3 )(subdag$ ?v2 ?v3 ))))):pattern ((subdag$ (node$ ?v0 ?v1 ?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ )(?v2 Ref$ )(?v3 Dag$ ))(! (= (less$ ?v0 (node$ ?v1 ?v2 ?v3 ))(or (= ?v0 ?v1 )(or (= ?v0 ?v3 )(or (less$ ?v0 ?v1 )(less$ ?v0 ?v3 ))))):pattern ((less$ ?v0 (node$ ?v1 ?v2 ?v3 ))))):named a15 ))
(assert (! (forall ((?v0 Dag$ )(?v1 Dag$ )(?v2 Ref$ )(?v3 Dag$ ))(! (= (less$ ?v0 (node$ ?v1 ?v2 ?v3 ))(or (less_eq$ ?v0 ?v1 )(less_eq$ ?v0 ?v3 ))):pattern ((less$ ?v0 (node$ ?v1 ?v2 ?v3 ))))):named a16 ))
(check-sat )
;(get-unsat-core )
