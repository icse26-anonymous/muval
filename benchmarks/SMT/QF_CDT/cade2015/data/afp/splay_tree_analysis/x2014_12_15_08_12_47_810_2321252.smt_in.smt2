;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-datatypes ()((A_op_s_t$ (splay$ (select$ A$ ))(insert$ (selecta$ A$ ))(delete$ (selectb$ A$ )))(A_tree$ (leaf$ )(node$ (left$ A_tree$ )(val$ A$ )(right$ A_tree$ )))(Num$ (one$ )(bit0$ (selectc$ Num$ ))(bit1$ (selectd$ Num$ )))))
(declare-fun a$ ()A$ )
(declare-fun e$ ()A$ )
(declare-fun f$ ()A_op_s_t$ )
(declare-fun l$ ()A_tree$ )
(declare-fun r$ ()A_tree$ )
(declare-fun s$ ()A_tree$ )
(declare-fun bst$ (A_tree$ )Bool )
(declare-fun log$ (Real Real )Real )
(declare-fun phi$ (A_tree$ )Real )
(declare-fun less$ (A$ A$ )Bool )
(declare-fun plus$ (Num$ Num$ )Num$ )
(declare-fun real$ (Nat$ )Real )
(declare-fun size$ (A_tree$ )Nat$ )
(declare-fun size1$ (A_tree$ )Nat$ )
(declare-fun t_s_t$ (A_op_s_t$ A_tree$ )Real )
(declare-fun numeral$ (Num$ )Real )
(declare-fun nxt_s_t$ (A_op_s_t$ A_tree$ )A_tree$ )
(declare-fun t_splay$ (A$ A_tree$ )Nat$ )
(assert (! (not (= (- (+ (t_s_t$ f$ s$ )(phi$ (nxt_s_t$ f$ s$ )))(phi$ s$ ))(+ (+ (- (+ (real$ (t_splay$ a$ s$ ))(+ (phi$ l$ )(phi$ r$ )))(phi$ s$ ))(log$ 2.0 (+ 2.0 (real$ (size$ r$ )))))(log$ 2.0 (+ 1.0 (+ (real$ (size1$ l$ ))(real$ (size1$ r$ )))))))):named a0 ))
(assert (! (not (= e$ a$ )):named a1 ))
(assert (! (not (= s$ leaf$ )):named a2 ))
(assert (! (less$ a$ e$ ):named a3 ))
(assert (! (bst$ s$ ):named a4 ))
(assert (! (or (less$ e$ a$ )(or (= e$ a$ )(less$ a$ e$ ))):named a5 ))
(assert (! (= (+ 1.0 1.0 )2.0 ):named a6 ))
(assert (! (forall ((?v0 Num$ ))(= (+ (numeral$ ?v0 )1.0 )(numeral$ (plus$ ?v0 one$ )))):named a7 ))
(assert (! (forall ((?v0 Num$ ))(= (+ 1.0 (numeral$ ?v0 ))(numeral$ (plus$ one$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 Num$ ))(= (= (numeral$ ?v0 )1.0 )(= ?v0 one$ ))):named a9 ))
(assert (! (forall ((?v0 Num$ ))(= (= 1.0 (numeral$ ?v0 ))(= one$ ?v0 ))):named a10 ))
(assert (! (forall ((?v0 Num$ ))(= (= (bit0$ ?v0 )one$ )false )):named a11 ))
(assert (! (forall ((?v0 Num$ ))(= (= one$ (bit0$ ?v0 ))false )):named a12 ))
(assert (! (forall ((?v0 Real )(?v1 Real )(?v2 Real ))(= (- (+ ?v0 ?v1 )(+ ?v0 ?v2 ))(- ?v1 ?v2 ))):named a13 ))
(assert (! (forall ((?v0 Real )(?v1 Real ))(= (+ (- ?v0 ?v1 )?v1 )?v0 )):named a14 ))
(check-sat )
;(get-unsat-core )
