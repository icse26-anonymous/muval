;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Real_set$ 0 )
(declare-sort Real_bool_fun$ 0 )
(declare-sort Real_real_bool_fun_fun$ 0 )
(declare-datatypes ()((A_tree$ (leaf$ )(node$ (left$ A_tree$ )(val$ A$ )(right$ A_tree$ )))))
(declare-fun phi$ (A_tree$ )Real )
(declare-fun member$ (Real Real_set$ )Bool )
(declare-fun fun_app$ (Real_bool_fun$ Real )Bool )
(declare-fun fun_app$a (Real_real_bool_fun_fun$ Real )Real_bool_fun$ )
(assert (! (not (<= 0.0 (phi$ leaf$ ))):named a0 ))
(assert (! (= (phi$ leaf$ )0.0 ):named a1 ))
(assert (! (forall ((?v0 Real ))(<= ?v0 ?v0 )):named a2 ))
(assert (! (<= 0.0 0.0 ):named a3 ))
(assert (! (forall ((?v0 A_tree$ ))(=> (and (=> (= ?v0 leaf$ )false )(=> (not (= ?v0 leaf$ ))false ))false )):named a4 ))
(assert (! (forall ((?v0 Real_set$ ))(=> (and (exists ((?v1 Real ))(member$ ?v1 ?v0 ))(exists ((?v1 Real ))(forall ((?v2 Real ))(=> (member$ ?v2 ?v0 )(<= ?v2 ?v1 )))))(exists ((?v1 Real ))(and (forall ((?v2 Real ))(=> (member$ ?v2 ?v0 )(<= ?v2 ?v1 )))(forall ((?v2 Real ))(=> (forall ((?v3 Real ))(=> (member$ ?v3 ?v0 )(<= ?v3 ?v2 )))(<= ?v1 ?v2 ))))))):named a5 ))
(assert (! (forall ((?v0 Real ))(= (= 0.0 ?v0 )(= ?v0 0.0 ))):named a6 ))
(assert (! (forall ((?v0 Real )(?v1 Real ))(= (= ?v0 ?v1 )(and (<= ?v0 ?v1 )(<= ?v1 ?v0 )))):named a7 ))
(assert (! (forall ((?v0 Real )(?v1 Real ))(=> (and (=> (<= ?v0 ?v1 )false )(=> (<= ?v1 ?v0 )false ))false )):named a8 ))
(assert (! (forall ((?v0 Real_real_bool_fun_fun$ )(?v1 Real )(?v2 Real ))(=> (and (forall ((?v3 Real )(?v4 Real ))(=> (<= ?v3 ?v4 )(fun_app$ (fun_app$a ?v0 ?v3 )?v4 )))(forall ((?v3 Real )(?v4 Real ))(=> (fun_app$ (fun_app$a ?v0 ?v4 )?v3 )(fun_app$ (fun_app$a ?v0 ?v3 )?v4 ))))(fun_app$ (fun_app$a ?v0 ?v1 )?v2 ))):named a9 ))
(assert (! (forall ((?v0 Real ))(<= ?v0 ?v0 )):named a10 ))
(assert (! (forall ((?v0 Real )(?v1 Real ))(or (<= ?v0 ?v1 )(<= ?v1 ?v0 ))):named a11 ))
(assert (! (forall ((?v0 Real )(?v1 Real ))(=> (<= ?v0 ?v1 )(= (<= ?v1 ?v0 )(= ?v1 ?v0 )))):named a12 ))
(assert (! (forall ((?v0 Real )(?v1 Real )(?v2 Real ))(=> (and (<= ?v0 ?v1 )(<= ?v1 ?v2 ))(<= ?v0 ?v2 ))):named a13 ))
(check-sat )
;(get-unsat-core )
