;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_tree_set$ 0 )
(declare-datatypes ()((Num$ (one$ )(bit0$ (select$ Num$ ))(bit1$ (selecta$ Num$ )))(A_tree$ (leaf$ )(node$ (left$ A_tree$ )(val$ A$ )(right$ A_tree$ )))))
(declare-fun a$ (A$ A_tree$ )Real )
(declare-fun b$ ()A$ )
(declare-fun c$ ()A$ )
(declare-fun l$ ()A_tree$ )
(declare-fun r$ ()A_tree$ )
(declare-fun u$ ()A$ )
(declare-fun aa$ ()A$ )
(declare-fun l$a ()A_tree$ )
(declare-fun la$ ()A_tree$ )
(declare-fun ll$ ()A_tree$ )
(declare-fun lr$ ()A_tree$ )
(declare-fun r$a ()A_tree$ )
(declare-fun ra$ ()A_tree$ )
(declare-fun bst$ (A_tree$ )Bool )
(declare-fun log$ (Real Real )Real )
(declare-fun less$ (A$ A$ )Bool )
(declare-fun plus$ (Num$ Num$ )Num$ )
(declare-fun real$ (Nat$ )Real )
(declare-fun size1$ (A_tree$ )Nat$ )
(declare-fun splay$ (A$ A_tree$ )A_tree$ )
(declare-fun member$ (A_tree$ A_tree_set$ )Bool )
(declare-fun numeral$ (Num$ )Real )
(declare-fun subtrees$ (A_tree$ )A_tree_set$ )
(assert (! (not (<= (+ (- (+ (+ (log$ 2.0 (real$ (size1$ lr$ )))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))2.0 )(+ (- (+ (log$ 2.0 (real$ (size1$ lr$ )))(* 2.0 (log$ 2.0 (real$ (size1$ (node$ l$a c$ r$a ))))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))1.0 ))):named a0 ))
(assert (! (not (= aa$ c$ )):named a1 ))
(assert (! (not (= aa$ b$ )):named a2 ))
(assert (! (=> (forall ((?v0 A_tree$ )(?v1 A$ )(?v2 A_tree$ ))(=> (= l$a (node$ ?v0 ?v1 ?v2 ))false ))false ):named a3 ))
(assert (! (= (splay$ aa$ lr$ )(node$ l$ u$ r$ )):named a4 ))
(assert (! (=> (forall ((?v0 A_tree$ )(?v1 A$ )(?v2 A_tree$ ))(=> (= (splay$ aa$ lr$ )(node$ ?v0 ?v1 ?v2 ))false ))false ):named a5 ))
(assert (! (less$ aa$ c$ ):named a6 ))
(assert (! (less$ b$ aa$ ):named a7 ))
(assert (! (member$ (node$ la$ aa$ ra$ )(subtrees$ (node$ l$a c$ r$a ))):named a8 ))
(assert (! (bst$ (node$ l$a c$ r$a )):named a9 ))
(assert (! (<= (+ (- (- (+ (+ (* 2.0 (log$ 2.0 (real$ (size1$ lr$ ))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ lr$ )))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))2.0 )(+ (- (+ (+ (log$ 2.0 (real$ (size1$ lr$ )))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))2.0 )):named a10 ))
(assert (! (= l$a (node$ ll$ b$ lr$ )):named a11 ))
(assert (! (= (+ (- (- (- (+ (+ (* 3.0 (log$ 2.0 (real$ (size1$ lr$ ))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ lr$ )))))(log$ 2.0 (real$ (size1$ (node$ l$ u$ r$ )))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))2.0 )(+ (- (- (+ (+ (* 2.0 (log$ 2.0 (real$ (size1$ lr$ ))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ lr$ )))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))2.0 )):named a12 ))
(assert (! (<= (a$ aa$ (node$ l$a c$ r$a ))(+ (- (+ (+ (log$ 2.0 (real$ (size1$ lr$ )))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))2.0 )):named a13 ))
(assert (! (<= (+ (- (- (+ (+ (a$ aa$ lr$ )(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ lr$ )))))(log$ 2.0 (real$ (size1$ (node$ l$ u$ r$ )))))1.0 )(+ (- (- (- (+ (+ (* 3.0 (log$ 2.0 (real$ (size1$ lr$ ))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ lr$ )))))(log$ 2.0 (real$ (size1$ (node$ l$ u$ r$ )))))(* 3.0 (log$ 2.0 (real$ (size1$ (node$ la$ aa$ ra$ ))))))2.0 )):named a14 ))
(assert (! (= (a$ aa$ (node$ l$a c$ r$a ))(+ (- (- (+ (+ (a$ aa$ lr$ )(log$ 2.0 (real$ (size1$ (node$ ll$ b$ l$ )))))(log$ 2.0 (real$ (size1$ (node$ r$ c$ r$a )))))(log$ 2.0 (real$ (size1$ (node$ ll$ b$ lr$ )))))(log$ 2.0 (real$ (size1$ (node$ l$ u$ r$ )))))1.0 )):named a15 ))
(assert (! (= (+ 1.0 1.0 )2.0 ):named a16 ))
(assert (! (forall ((?v0 Num$ ))(= (+ (numeral$ ?v0 )1.0 )(numeral$ (plus$ ?v0 one$ )))):named a17 ))
(check-sat )
;(get-unsat-core )
