;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_c_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_c_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort C_a_bool_fun_fun$ 0 )
(declare-sort C_b_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort B_llist$ 0)
(declare-sort C_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()B_llist$)
(declare-fun lhd$a (B_llist$)B$)
(declare-fun ltl$a (B_llist$)B_llist$)
(declare-fun lCons$a (B$ B_llist$ )B_llist$)
(declare-fun lNil$b ()C_llist$)
(declare-fun lhd$b (C_llist$)C$)
(declare-fun ltl$b (C_llist$)C_llist$)
(declare-fun lCons$b (C$ C_llist$ )C_llist$)
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))))
(declare-fun f$ ()B_a_fun$ )
(declare-fun g$ ()C_a_fun$ )
(declare-fun uu$ ()B_c_bool_fun_fun$ )
(declare-fun xs$ ()B_llist$ )
(declare-fun ys$ ()C_llist$ )
(declare-fun uua$ ()A_a_fun$ )
(declare-fun uub$ ()B_b_fun$ )
(declare-fun uuc$ ()C_c_fun$ )
(declare-fun uud$ (A_c_bool_fun_fun$ B_a_fun$ )B_c_bool_fun_fun$ )
(declare-fun uue$ (B_c_bool_fun_fun$ B_b_fun$ )B_c_bool_fun_fun$ )
(declare-fun uuf$ (A_a_bool_fun_fun$ B_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uug$ (B_c_bool_fun_fun$ A_b_fun$ )A_c_bool_fun_fun$ )
(declare-fun uuh$ (A_c_bool_fun_fun$ C_a_fun$ )C_c_bool_fun_fun$ )
(declare-fun uui$ (A_c_bool_fun_fun$ A_a_fun$ )A_c_bool_fun_fun$ )
(declare-fun uuj$ (B_a_bool_fun_fun$ B_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun uuk$ (C_a_bool_fun_fun$ B_c_fun$ )B_a_bool_fun_fun$ )
(declare-fun uul$ (C_a_bool_fun_fun$ A_c_fun$ )A_a_bool_fun_fun$ )
(declare-fun uum$ (A_b_bool_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun uun$ (B_a_bool_fun_fun$ C_a_fun$ )B_c_bool_fun_fun$ )
(declare-fun uuo$ (B_c_bool_fun_fun$ C_c_fun$ )B_c_bool_fun_fun$ )
(declare-fun uup$ (A_a_bool_fun_fun$ C_a_fun$ )A_c_bool_fun_fun$ )
(declare-fun uuq$ (B_c_bool_fun_fun$ A_c_fun$ )B_a_bool_fun_fun$ )
(declare-fun uur$ (A_c_bool_fun_fun$ C_c_fun$ )A_c_bool_fun_fun$ )
(declare-fun uus$ (B_a_bool_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun uut$ (B_a_bool_fun_fun$ A_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uuu$ (A_b_bool_fun_fun$ C_b_fun$ )A_c_bool_fun_fun$ )
(declare-fun uuv$ (C_a_bool_fun_fun$ C_a_fun$ )C_c_bool_fun_fun$ )
(declare-fun uuw$ (A_b_bool_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun uux$ (C_c_bool_fun_fun$ C_c_bool_fun_fun$ )C_c_bool_fun_fun$ )
(declare-fun uuy$ (A_a_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uuz$ (B_b_bool_fun_fun$ B_b_bool_fun_fun$ )B_b_bool_fun_fun$ )
(declare-fun uva$ (C_b_bool_fun_fun$ C_b_bool_fun_fun$ )C_b_bool_fun_fun$ )
(declare-fun uvb$ (A_c_bool_fun_fun$ A_c_bool_fun_fun$ )A_c_bool_fun_fun$ )
(declare-fun uvc$ (B_a_bool_fun_fun$ B_a_bool_fun_fun$ )B_a_bool_fun_fun$ )
(declare-fun uvd$ (B_c_bool_fun_fun$ B_c_bool_fun_fun$ )B_c_bool_fun_fun$ )
(declare-fun uve$ ()A_a_bool_fun_fun$ )
(declare-fun uvf$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uvg$ ()B_b_bool_fun_fun$ )
(declare-fun uvh$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uvi$ ()B_b_bool_fun_fun$ )
(declare-fun uvj$ ()C_b_bool_fun_fun$ )
(declare-fun uvk$ ()C_c_bool_fun_fun$ )
(declare-fun uvl$ ()A_c_bool_fun_fun$ )
(declare-fun uvm$ ()B_a_bool_fun_fun$ )
(declare-fun uvn$ ()B_c_bool_fun_fun$ )
(declare-fun lmap$ (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun ldrop$ (Enat$ A_llist$ )A_llist$ )
(declare-fun lmap$a (C_a_fun$ C_llist$ )A_llist$ )
(declare-fun lmap$b (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$c (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$d (C_c_fun$ C_llist$ )C_llist$ )
(declare-fun lmap$e (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$f (B_c_fun$ B_llist$ )C_llist$ )
(declare-fun lmap$g (A_c_fun$ A_llist$ )C_llist$ )
(declare-fun lmap$h (C_b_fun$ C_llist$ )B_llist$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun ldrop$a (Enat$ C_llist$ )C_llist$ )
(declare-fun ldrop$b (Enat$ B_llist$ )B_llist$ )
(declare-fun ldropn$ (Nat$ A_llist$ )A_llist$ )
(declare-fun lnull$a (C_llist$ )Bool )
(declare-fun lnull$b (B_llist$ )Bool )
(declare-fun fun_app$ (C_bool_fun$ C$ )Bool )
(declare-fun ldropn$a (Nat$ C_llist$ )C_llist$ )
(declare-fun ldropn$b (Nat$ B_llist$ )B_llist$ )
(declare-fun llength$ (B_llist$ )Enat$ )
(declare-fun fun_app$a (B_c_bool_fun_fun$ B$ )C_bool_fun$ )
(declare-fun fun_app$b (B_a_fun$ B$ )A$ )
(declare-fun fun_app$c (C_a_fun$ C$ )A$ )
(declare-fun fun_app$d (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$e (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$f (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$g (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$h (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$i (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$j (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$k (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$l (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$m (C_a_bool_fun_fun$ C$ )A_bool_fun$ )
(declare-fun fun_app$n (B_c_fun$ B$ )C$ )
(declare-fun fun_app$o (A_c_fun$ A$ )C$ )
(declare-fun fun_app$p (B_b_fun$ B$ )B$ )
(declare-fun fun_app$q (A_c_bool_fun_fun$ A$ )C_bool_fun$ )
(declare-fun fun_app$r (A_b_fun$ A$ )B$ )
(declare-fun fun_app$s (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$t (A_a_fun$ A$ )A$ )
(declare-fun fun_app$u (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$v (C_c_fun$ C$ )C$ )
(declare-fun fun_app$w (C_b_fun$ C$ )B$ )
(declare-fun fun_app$x (C_b_bool_fun_fun$ C$ )B_bool_fun$ )
(declare-fun fun_app$y (C_llist_bool_fun$ C_llist$ )Bool )
(declare-fun iterates$ (B_b_fun$ B$ )B_llist$ )
(declare-fun llength$a (C_llist$ )Enat$ )
(declare-fun llength$b (A_llist$ )Enat$ )
(declare-fun iterates$a (C_c_fun$ C$ )C_llist$ )
(declare-fun llist_all2$ (B_c_bool_fun_fun$ B_llist$ )C_llist_bool_fun$ )
(declare-fun llist_all2$a (A_c_bool_fun_fun$ A_llist$ )C_llist_bool_fun$ )
(declare-fun llist_all2$b (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$c (B_a_bool_fun_fun$ B_llist$ )A_llist_bool_fun$ )
(declare-fun llist_all2$d (C_c_bool_fun_fun$ C_llist$ )C_llist_bool_fun$ )
(declare-fun llist_all2$e (C_a_bool_fun_fun$ C_llist$ A_llist$ )Bool )
(declare-fun llist_all2$f (A_b_bool_fun_fun$ A_llist$ B_llist$ )Bool )
(declare-fun llist_all2$g (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$h (C_b_bool_fun_fun$ C_llist$ )B_llist_bool_fun$ )
(declare-fun lstrict_prefix$ (C_llist$ C_llist$ )Bool )
(declare-fun lstrict_prefix$a (B_llist$ B_llist$ )Bool )
(declare-fun lstrict_prefix$b (A_llist$ A_llist$ )Bool )
(assert (! (forall ((?v0 B$ )(?v1 C$ ))(! (= (fun_app$ (fun_app$a uu$ ?v0 )?v1 )(= (fun_app$b f$ ?v0 )(fun_app$c g$ ?v1 ))):pattern ((fun_app$ (fun_app$a uu$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e uvh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uvh$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$g uvf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uvf$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$h (fun_app$i uvg$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uvg$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$j (fun_app$k uve$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uve$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 B_c_fun$ )(?v2 B$ ))(! (= (fun_app$l (uuk$ ?v0 ?v1 )?v2 )(fun_app$m ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$l (uuk$ ?v0 ?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 A_c_fun$ )(?v2 A$ ))(! (= (fun_app$k (uul$ ?v0 ?v1 )?v2 )(fun_app$m ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$k (uul$ ?v0 ?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$a (uue$ ?v0 ?v1 )?v2 )(fun_app$a ?v0 (fun_app$p ?v1 ?v2 ))):pattern ((fun_app$a (uue$ ?v0 ?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$q (uug$ ?v0 ?v1 )?v2 )(fun_app$a ?v0 (fun_app$r ?v1 ?v2 ))):pattern ((fun_app$q (uug$ ?v0 ?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$l (uuj$ ?v0 ?v1 )?v2 )(fun_app$l ?v0 (fun_app$p ?v1 ?v2 ))):pattern ((fun_app$l (uuj$ ?v0 ?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_a_fun$ )(?v2 C$ ))(! (= (fun_app$s (uuh$ ?v0 ?v1 )?v2 )(fun_app$q ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$s (uuh$ ?v0 ?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$a (uud$ ?v0 ?v1 )?v2 )(fun_app$q ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$a (uud$ ?v0 ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$q (uui$ ?v0 ?v1 )?v2 )(fun_app$q ?v0 (fun_app$t ?v1 ?v2 ))):pattern ((fun_app$q (uui$ ?v0 ?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$i (uum$ ?v0 ?v1 )?v2 )(fun_app$u ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$i (uum$ ?v0 ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$l (uuf$ ?v0 ?v1 )?v2 )(fun_app$k ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$l (uuf$ ?v0 ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 C_a_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$s (uuv$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j (fun_app$m ?v0 ?v2 )(fun_app$c ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$s (uuv$ ?v0 ?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 B$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$a (uuo$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$a ?v0 ?v2 )(fun_app$v ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uuo$ ?v0 ?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 A_c_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$j (fun_app$l (uuq$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$a ?v0 ?v2 )(fun_app$o ?v1 ?v3 ))):pattern ((fun_app$j (fun_app$l (uuq$ ?v0 ?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 C_a_fun$ )(?v2 B$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$a (uun$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j (fun_app$l ?v0 ?v2 )(fun_app$c ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uun$ ?v0 ?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$h (fun_app$i (uus$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j (fun_app$l ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$h (fun_app$i (uus$ ?v0 ?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$j (fun_app$l (uut$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j (fun_app$l ?v0 ?v2 )(fun_app$t ?v1 ?v3 ))):pattern ((fun_app$j (fun_app$l (uut$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 A$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$q (uur$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$q ?v0 ?v2 )(fun_app$v ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$q (uur$ ?v0 ?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_b_fun$ )(?v2 A$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$q (uuu$ ?v0 ?v1 )?v2 )?v3 )(fun_app$h (fun_app$u ?v0 ?v2 )(fun_app$w ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$q (uuu$ ?v0 ?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$j (fun_app$k (uuw$ ?v0 ?v1 )?v2 )?v3 )(fun_app$h (fun_app$u ?v0 ?v2 )(fun_app$r ?v1 ?v3 ))):pattern ((fun_app$j (fun_app$k (uuw$ ?v0 ?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_a_fun$ )(?v2 A$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$q (uup$ ?v0 ?v1 )?v2 )?v3 )(fun_app$j (fun_app$k ?v0 ?v2 )(fun_app$c ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$q (uup$ ?v0 ?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$s (uux$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$s ?v0 ?v2 )?v3 )(fun_app$ (fun_app$s ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$s (uux$ ?v0 ?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (forall ((?v0 C_b_bool_fun_fun$ )(?v1 C_b_bool_fun_fun$ )(?v2 C$ )(?v3 B$ ))(! (= (fun_app$h (fun_app$x (uva$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$h (fun_app$x ?v0 ?v2 )?v3 )(fun_app$h (fun_app$x ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$x (uva$ ?v0 ?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_c_bool_fun_fun$ )(?v2 B$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$a (uvd$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$a ?v0 ?v2 )?v3 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uvd$ ?v0 ?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$h (fun_app$i (uuz$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$h (fun_app$i ?v0 ?v2 )?v3 )(fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (uuz$ ?v0 ?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$j (fun_app$l (uvc$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$j (fun_app$l ?v0 ?v2 )?v3 )(fun_app$j (fun_app$l ?v1 ?v2 )?v3 ))):pattern ((fun_app$j (fun_app$l (uvc$ ?v0 ?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A$ )(?v3 C$ ))(! (= (fun_app$ (fun_app$q (uvb$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$q ?v0 ?v2 )?v3 )(fun_app$ (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$q (uvb$ ?v0 ?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$j (fun_app$k (uuy$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$j (fun_app$k ?v0 ?v2 )?v3 )(fun_app$j (fun_app$k ?v1 ?v2 )?v3 ))):pattern ((fun_app$j (fun_app$k (uuy$ ?v0 ?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$ (fun_app$s uvk$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$s uvk$ ?v0 )?v1 )))):named a32 ))
(assert (! (forall ((?v0 C$ )(?v1 B$ ))(! (= (fun_app$h (fun_app$x uvj$ ?v0 )?v1 )true ):pattern ((fun_app$h (fun_app$x uvj$ ?v0 )?v1 )))):named a33 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ ))(! (= (fun_app$ (fun_app$a uvn$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$a uvn$ ?v0 )?v1 )))):named a34 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$h (fun_app$i uvi$ ?v0 )?v1 )true ):pattern ((fun_app$h (fun_app$i uvi$ ?v0 )?v1 )))):named a35 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$j (fun_app$l uvm$ ?v0 )?v1 )true ):pattern ((fun_app$j (fun_app$l uvm$ ?v0 )?v1 )))):named a36 ))
(assert (! (forall ((?v0 A$ )(?v1 C$ ))(! (= (fun_app$ (fun_app$q uvl$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$q uvl$ ?v0 )?v1 )))):named a37 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$v uuc$ ?v0 )?v0 ):pattern ((fun_app$v uuc$ ?v0 )))):named a38 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$p uub$ ?v0 )?v0 ):pattern ((fun_app$p uub$ ?v0 )))):named a39 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$t uua$ ?v0 )?v0 ):pattern ((fun_app$t uua$ ?v0 )))):named a40 ))
(assert (! (not (= (= (lmap$ f$ xs$ )(lmap$a g$ ys$ ))(fun_app$y (llist_all2$ uu$ xs$ )ys$ ))):named a41 ))
(assert (! (forall ((?v0 A_llist$ ))(= (lmap$b uua$ ?v0 )?v0 )):named a42 ))
(assert (! (forall ((?v0 B_llist$ ))(= (lmap$c uub$ ?v0 )?v0 )):named a43 ))
(assert (! (forall ((?v0 C_llist$ ))(= (lmap$d uuc$ ?v0 )?v0 )):named a44 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 (lmap$ ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$ (uud$ ?v0 ?v1 )?v2 )?v3 ))):named a45 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$ ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$ (uue$ ?v0 ?v1 )?v2 )?v3 ))):named a46 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$f (fun_app$g (llist_all2$b ?v0 )(lmap$ ?v1 ?v2 ))?v3 )(fun_app$f (llist_all2$c (uuf$ ?v0 ?v1 )?v2 )?v3 ))):named a47 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$ ?v0 (lmap$e ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$a (uug$ ?v0 ?v1 )?v2 )?v3 ))):named a48 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_a_fun$ )(?v2 C_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 (lmap$a ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$d (uuh$ ?v0 ?v1 )?v2 )?v3 ))):named a49 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 (lmap$b ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$a (uui$ ?v0 ?v1 )?v2 )?v3 ))):named a50 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$f (llist_all2$c ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$f (llist_all2$c (uuj$ ?v0 ?v1 )?v2 )?v3 ))):named a51 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 B_c_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (llist_all2$e ?v0 (lmap$f ?v1 ?v2 )?v3 )(fun_app$f (llist_all2$c (uuk$ ?v0 ?v1 )?v2 )?v3 ))):named a52 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 A_c_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (llist_all2$e ?v0 (lmap$g ?v1 ?v2 )?v3 )(fun_app$f (fun_app$g (llist_all2$b (uul$ ?v0 ?v1 ))?v2 )?v3 ))):named a53 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (llist_all2$f ?v0 (lmap$ ?v1 ?v2 )?v3 )(fun_app$d (fun_app$e (llist_all2$g (uum$ ?v0 ?v1 ))?v2 )?v3 ))):named a54 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 (lmap$ ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$ (uud$ ?v0 ?v1 )?v2 )?v3 ))):named a55 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$ ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$ (uue$ ?v0 ?v1 )?v2 )?v3 ))):named a56 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$f (fun_app$g (llist_all2$b ?v0 )(lmap$ ?v1 ?v2 ))?v3 )(fun_app$f (llist_all2$c (uuf$ ?v0 ?v1 )?v2 )?v3 ))):named a57 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$ ?v0 (lmap$e ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$a (uug$ ?v0 ?v1 )?v2 )?v3 ))):named a58 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_a_fun$ )(?v2 C_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 (lmap$a ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$d (uuh$ ?v0 ?v1 )?v2 )?v3 ))):named a59 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 (lmap$b ?v1 ?v2 ))?v3 )(fun_app$y (llist_all2$a (uui$ ?v0 ?v1 )?v2 )?v3 ))):named a60 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$f (llist_all2$c ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$f (llist_all2$c (uuj$ ?v0 ?v1 )?v2 )?v3 ))):named a61 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 B_c_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (llist_all2$e ?v0 (lmap$f ?v1 ?v2 )?v3 )(fun_app$f (llist_all2$c (uuk$ ?v0 ?v1 )?v2 )?v3 ))):named a62 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 A_c_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (llist_all2$e ?v0 (lmap$g ?v1 ?v2 )?v3 )(fun_app$f (fun_app$g (llist_all2$b (uul$ ?v0 ?v1 ))?v2 )?v3 ))):named a63 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (llist_all2$f ?v0 (lmap$ ?v1 ?v2 )?v3 )(fun_app$d (fun_app$e (llist_all2$g (uum$ ?v0 ?v1 ))?v2 )?v3 ))):named a64 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 C_a_fun$ )(?v3 C_llist$ ))(= (fun_app$f (llist_all2$c ?v0 ?v1 )(lmap$a ?v2 ?v3 ))(fun_app$y (llist_all2$ (uun$ ?v0 ?v2 )?v1 )?v3 ))):named a65 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_llist$ )(?v2 C_c_fun$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$ ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(fun_app$y (llist_all2$ (uuo$ ?v0 ?v2 )?v1 )?v3 ))):named a66 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_a_fun$ )(?v3 C_llist$ ))(= (fun_app$f (fun_app$g (llist_all2$b ?v0 )?v1 )(lmap$a ?v2 ?v3 ))(fun_app$y (llist_all2$a (uup$ ?v0 ?v2 )?v1 )?v3 ))):named a67 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_c_fun$ )(?v3 A_llist$ ))(= (fun_app$y (llist_all2$ ?v0 ?v1 )(lmap$g ?v2 ?v3 ))(fun_app$f (llist_all2$c (uuq$ ?v0 ?v2 )?v1 )?v3 ))):named a68 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_c_fun$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(fun_app$y (llist_all2$a (uur$ ?v0 ?v2 )?v1 )?v3 ))):named a69 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$f (llist_all2$c ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(fun_app$d (fun_app$e (llist_all2$g (uus$ ?v0 ?v2 ))?v1 )?v3 ))):named a70 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$f (llist_all2$c ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(fun_app$f (llist_all2$c (uut$ ?v0 ?v2 )?v1 )?v3 ))):named a71 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_b_fun$ )(?v3 C_llist$ ))(= (llist_all2$f ?v0 ?v1 (lmap$h ?v2 ?v3 ))(fun_app$y (llist_all2$a (uuu$ ?v0 ?v2 )?v1 )?v3 ))):named a72 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_a_fun$ )(?v3 C_llist$ ))(= (llist_all2$e ?v0 ?v1 (lmap$a ?v2 ?v3 ))(fun_app$y (llist_all2$d (uuv$ ?v0 ?v2 )?v1 )?v3 ))):named a73 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (llist_all2$f ?v0 ?v1 (lmap$e ?v2 ?v3 ))(fun_app$f (fun_app$g (llist_all2$b (uuw$ ?v0 ?v2 ))?v1 )?v3 ))):named a74 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 C_a_fun$ )(?v3 C_llist$ ))(= (fun_app$f (llist_all2$c ?v0 ?v1 )(lmap$a ?v2 ?v3 ))(fun_app$y (llist_all2$ (uun$ ?v0 ?v2 )?v1 )?v3 ))):named a75 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_llist$ )(?v2 C_c_fun$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$ ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(fun_app$y (llist_all2$ (uuo$ ?v0 ?v2 )?v1 )?v3 ))):named a76 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_a_fun$ )(?v3 C_llist$ ))(= (fun_app$f (fun_app$g (llist_all2$b ?v0 )?v1 )(lmap$a ?v2 ?v3 ))(fun_app$y (llist_all2$a (uup$ ?v0 ?v2 )?v1 )?v3 ))):named a77 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_c_fun$ )(?v3 A_llist$ ))(= (fun_app$y (llist_all2$ ?v0 ?v1 )(lmap$g ?v2 ?v3 ))(fun_app$f (llist_all2$c (uuq$ ?v0 ?v2 )?v1 )?v3 ))):named a78 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_c_fun$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(fun_app$y (llist_all2$a (uur$ ?v0 ?v2 )?v1 )?v3 ))):named a79 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$f (llist_all2$c ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(fun_app$d (fun_app$e (llist_all2$g (uus$ ?v0 ?v2 ))?v1 )?v3 ))):named a80 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$f (llist_all2$c ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(fun_app$f (llist_all2$c (uut$ ?v0 ?v2 )?v1 )?v3 ))):named a81 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_b_fun$ )(?v3 C_llist$ ))(= (llist_all2$f ?v0 ?v1 (lmap$h ?v2 ?v3 ))(fun_app$y (llist_all2$a (uuu$ ?v0 ?v2 )?v1 )?v3 ))):named a82 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_a_fun$ )(?v3 C_llist$ ))(= (llist_all2$e ?v0 ?v1 (lmap$a ?v2 ?v3 ))(fun_app$y (llist_all2$d (uuv$ ?v0 ?v2 )?v1 )?v3 ))):named a83 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (llist_all2$f ?v0 ?v1 (lmap$e ?v2 ?v3 ))(fun_app$f (fun_app$g (llist_all2$b (uuw$ ?v0 ?v2 ))?v1 )?v3 ))):named a84 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$d (uux$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$y (llist_all2$d ?v0 ?v2 )?v3 )(fun_app$y (llist_all2$d ?v1 ?v2 )?v3 )))):named a85 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$f (fun_app$g (llist_all2$b (uuy$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$f (fun_app$g (llist_all2$b ?v0 )?v2 )?v3 )(fun_app$f (fun_app$g (llist_all2$b ?v1 )?v2 )?v3 )))):named a86 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$g (uuz$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$d (fun_app$e (llist_all2$g ?v0 )?v2 )?v3 )(fun_app$d (fun_app$e (llist_all2$g ?v1 )?v2 )?v3 )))):named a87 ))
(assert (! (forall ((?v0 C_b_bool_fun_fun$ )(?v1 C_b_bool_fun_fun$ )(?v2 C_llist$ )(?v3 B_llist$ ))(= (fun_app$d (llist_all2$h (uva$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$d (llist_all2$h ?v0 ?v2 )?v3 )(fun_app$d (llist_all2$h ?v1 ?v2 )?v3 )))):named a88 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_c_bool_fun_fun$ )(?v2 A_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$a (uvb$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$y (llist_all2$a ?v0 ?v2 )?v3 )(fun_app$y (llist_all2$a ?v1 ?v2 )?v3 )))):named a89 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$f (llist_all2$c (uvc$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$f (llist_all2$c ?v0 ?v2 )?v3 )(fun_app$f (llist_all2$c ?v1 ?v2 )?v3 )))):named a90 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_c_bool_fun_fun$ )(?v2 B_llist$ )(?v3 C_llist$ ))(= (fun_app$y (llist_all2$ (uvd$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$y (llist_all2$ ?v0 ?v2 )?v3 )(fun_app$y (llist_all2$ ?v1 ?v2 )?v3 )))):named a91 ))
(assert (! (= (llist_all2$b uve$ )uvf$ ):named a92 ))
(assert (! (= (llist_all2$g uvg$ )uvh$ ):named a93 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist$ )(?v2 C_llist$ )(?v3 A_c_bool_fun_fun$ ))(=> (and (fun_app$y (llist_all2$a ?v0 ?v1 )?v2 )(forall ((?v4 A$ )(?v5 C$ ))(=> (fun_app$ (fun_app$q ?v0 ?v4 )?v5 )(fun_app$ (fun_app$q ?v3 ?v4 )?v5 ))))(fun_app$y (llist_all2$a ?v3 ?v1 )?v2 ))):named a94 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$f (llist_all2$c ?v0 ?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$j (fun_app$l ?v0 ?v4 )?v5 )(fun_app$j (fun_app$l ?v3 ?v4 )?v5 ))))(fun_app$f (llist_all2$c ?v3 ?v1 )?v2 ))):named a95 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_llist$ )(?v2 C_llist$ )(?v3 B_c_bool_fun_fun$ ))(=> (and (fun_app$y (llist_all2$ ?v0 ?v1 )?v2 )(forall ((?v4 B$ )(?v5 C$ ))(=> (fun_app$ (fun_app$a ?v0 ?v4 )?v5 )(fun_app$ (fun_app$a ?v3 ?v4 )?v5 ))))(fun_app$y (llist_all2$ ?v3 ?v1 )?v2 ))):named a96 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ )(?v2 C_c_fun$ ))(=> (lstrict_prefix$ ?v0 ?v1 )(lstrict_prefix$ (lmap$d ?v2 ?v0 )(lmap$d ?v2 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ )(?v2 C_b_fun$ ))(=> (lstrict_prefix$ ?v0 ?v1 )(lstrict_prefix$a (lmap$h ?v2 ?v0 )(lmap$h ?v2 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_c_fun$ ))(=> (lstrict_prefix$b ?v0 ?v1 )(lstrict_prefix$ (lmap$g ?v2 ?v0 )(lmap$g ?v2 ?v1 )))):named a99 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_a_fun$ ))(=> (lstrict_prefix$b ?v0 ?v1 )(lstrict_prefix$b (lmap$b ?v2 ?v0 )(lmap$b ?v2 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_b_fun$ ))(=> (lstrict_prefix$b ?v0 ?v1 )(lstrict_prefix$a (lmap$e ?v2 ?v0 )(lmap$e ?v2 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_c_fun$ ))(=> (lstrict_prefix$a ?v0 ?v1 )(lstrict_prefix$ (lmap$f ?v2 ?v0 )(lmap$f ?v2 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_b_fun$ ))(=> (lstrict_prefix$a ?v0 ?v1 )(lstrict_prefix$a (lmap$c ?v2 ?v0 )(lmap$c ?v2 ?v1 )))):named a103 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_a_fun$ ))(=> (lstrict_prefix$a ?v0 ?v1 )(lstrict_prefix$b (lmap$ ?v2 ?v0 )(lmap$ ?v2 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ )(?v2 C_a_fun$ ))(=> (lstrict_prefix$ ?v0 ?v1 )(lstrict_prefix$b (lmap$a ?v2 ?v0 )(lmap$a ?v2 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$g uvi$ )?v0 )?v1 )(= (llength$ ?v0 )(llength$ ?v1 )))):named a106 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 B_llist$ ))(= (fun_app$d (llist_all2$h uvj$ ?v0 )?v1 )(= (llength$a ?v0 )(llength$ ?v1 )))):named a107 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ ))(= (fun_app$y (llist_all2$d uvk$ ?v0 )?v1 )(= (llength$a ?v0 )(llength$a ?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C_llist$ ))(= (fun_app$y (llist_all2$a uvl$ ?v0 )?v1 )(= (llength$b ?v0 )(llength$a ?v1 )))):named a109 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(= (fun_app$f (llist_all2$c uvm$ ?v0 )?v1 )(= (llength$ ?v0 )(llength$b ?v1 )))):named a110 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 C_llist$ ))(= (fun_app$y (llist_all2$ uvn$ ?v0 )?v1 )(= (llength$ ?v0 )(llength$a ?v1 )))):named a111 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_fun$ )(?v2 A_llist$ ))(= (ldropn$ ?v0 (lmap$b ?v1 ?v2 ))(lmap$b ?v1 (ldropn$ ?v0 ?v2 )))):named a112 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_c_fun$ )(?v2 A_llist$ ))(= (ldropn$a ?v0 (lmap$g ?v1 ?v2 ))(lmap$g ?v1 (ldropn$ ?v0 ?v2 )))):named a113 ))
(assert (! (forall ((?v0 Nat$ )(?v1 B_c_fun$ )(?v2 B_llist$ ))(= (ldropn$a ?v0 (lmap$f ?v1 ?v2 ))(lmap$f ?v1 (ldropn$b ?v0 ?v2 )))):named a114 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_b_fun$ )(?v2 A_llist$ ))(= (ldropn$b ?v0 (lmap$e ?v1 ?v2 ))(lmap$e ?v1 (ldropn$ ?v0 ?v2 )))):named a115 ))
(assert (! (forall ((?v0 Nat$ )(?v1 C_b_fun$ )(?v2 C_llist$ ))(= (ldropn$b ?v0 (lmap$h ?v1 ?v2 ))(lmap$h ?v1 (ldropn$a ?v0 ?v2 )))):named a116 ))
(assert (! (forall ((?v0 Nat$ )(?v1 B_b_fun$ )(?v2 B_llist$ ))(= (ldropn$b ?v0 (lmap$c ?v1 ?v2 ))(lmap$c ?v1 (ldropn$b ?v0 ?v2 )))):named a117 ))
(assert (! (forall ((?v0 Nat$ )(?v1 C_c_fun$ )(?v2 C_llist$ ))(= (ldropn$a ?v0 (lmap$d ?v1 ?v2 ))(lmap$d ?v1 (ldropn$a ?v0 ?v2 )))):named a118 ))
(assert (! (forall ((?v0 Nat$ )(?v1 B_a_fun$ )(?v2 B_llist$ ))(= (ldropn$ ?v0 (lmap$ ?v1 ?v2 ))(lmap$ ?v1 (ldropn$b ?v0 ?v2 )))):named a119 ))
(assert (! (forall ((?v0 Nat$ )(?v1 C_a_fun$ )(?v2 C_llist$ ))(= (ldropn$ ?v0 (lmap$a ?v1 ?v2 ))(lmap$a ?v1 (ldropn$a ?v0 ?v2 )))):named a120 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_a_fun$ )(?v2 A_llist$ ))(= (ldrop$ ?v0 (lmap$b ?v1 ?v2 ))(lmap$b ?v1 (ldrop$ ?v0 ?v2 )))):named a121 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_c_fun$ )(?v2 A_llist$ ))(= (ldrop$a ?v0 (lmap$g ?v1 ?v2 ))(lmap$g ?v1 (ldrop$ ?v0 ?v2 )))):named a122 ))
(assert (! (forall ((?v0 Enat$ )(?v1 B_c_fun$ )(?v2 B_llist$ ))(= (ldrop$a ?v0 (lmap$f ?v1 ?v2 ))(lmap$f ?v1 (ldrop$b ?v0 ?v2 )))):named a123 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_b_fun$ )(?v2 A_llist$ ))(= (ldrop$b ?v0 (lmap$e ?v1 ?v2 ))(lmap$e ?v1 (ldrop$ ?v0 ?v2 )))):named a124 ))
(assert (! (forall ((?v0 Enat$ )(?v1 C_b_fun$ )(?v2 C_llist$ ))(= (ldrop$b ?v0 (lmap$h ?v1 ?v2 ))(lmap$h ?v1 (ldrop$a ?v0 ?v2 )))):named a125 ))
(assert (! (forall ((?v0 Enat$ )(?v1 B_b_fun$ )(?v2 B_llist$ ))(= (ldrop$b ?v0 (lmap$c ?v1 ?v2 ))(lmap$c ?v1 (ldrop$b ?v0 ?v2 )))):named a126 ))
(assert (! (forall ((?v0 Enat$ )(?v1 C_c_fun$ )(?v2 C_llist$ ))(= (ldrop$a ?v0 (lmap$d ?v1 ?v2 ))(lmap$d ?v1 (ldrop$a ?v0 ?v2 )))):named a127 ))
(assert (! (forall ((?v0 Enat$ )(?v1 B_a_fun$ )(?v2 B_llist$ ))(= (ldrop$ ?v0 (lmap$ ?v1 ?v2 ))(lmap$ ?v1 (ldrop$b ?v0 ?v2 )))):named a128 ))
(assert (! (forall ((?v0 Enat$ )(?v1 C_a_fun$ )(?v2 C_llist$ ))(= (ldrop$ ?v0 (lmap$a ?v1 ?v2 ))(lmap$a ?v1 (ldrop$a ?v0 ?v2 )))):named a129 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (lmap$c ?v0 (iterates$ ?v0 ?v1 ))(iterates$ ?v0 (fun_app$p ?v0 ?v1 )))):named a130 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(= (lmap$d ?v0 (iterates$a ?v0 ?v1 ))(iterates$a ?v0 (fun_app$v ?v0 ?v1 )))):named a131 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$y (llist_all2$d ?v0 ?v1 )lNil$b )(= ?v1 lNil$b )):pattern ((llist_all2$d ?v0 ?v1 )))):named a132 ))
(assert (! (forall ((?v0 C_b_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$d (llist_all2$h ?v0 ?v1 )lNil$a )(= ?v1 lNil$b )):pattern ((llist_all2$h ?v0 ?v1 )))):named a133 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$g ?v0 )?v1 )lNil$a )(= ?v1 lNil$a )):pattern ((fun_app$e (llist_all2$g ?v0 )?v1 )))):named a134 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$y (llist_all2$a ?v0 ?v1 )lNil$b )(= ?v1 lNil$ )):pattern ((llist_all2$a ?v0 ?v1 )))):named a135 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$f (llist_all2$c ?v0 ?v1 )lNil$ )(= ?v1 lNil$a )):pattern ((llist_all2$c ?v0 ?v1 )))):named a136 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$y (llist_all2$ ?v0 ?v1 )lNil$b )(= ?v1 lNil$a )):pattern ((llist_all2$ ?v0 ?v1 )))):named a137 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$y (llist_all2$d ?v0 lNil$b )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$y (llist_all2$d ?v0 lNil$b )?v1 )))):named a138 ))
(assert (! (forall ((?v0 C_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (llist_all2$h ?v0 lNil$b )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$d (llist_all2$h ?v0 lNil$b )?v1 )))):named a139 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$g ?v0 )lNil$a )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$d (fun_app$e (llist_all2$g ?v0 )lNil$a )?v1 )))):named a140 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$y (llist_all2$a ?v0 lNil$ )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$y (llist_all2$a ?v0 lNil$ )?v1 )))):named a141 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$f (llist_all2$c ?v0 lNil$a )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$f (llist_all2$c ?v0 lNil$a )?v1 )))):named a142 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$y (llist_all2$ ?v0 lNil$a )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$y (llist_all2$ ?v0 lNil$a )?v1 )))):named a143 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (lnull$ (lmap$b ?v0 ?v1 ))(lnull$ ?v1 ))):named a144 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 A_llist$ ))(= (lnull$a (lmap$g ?v0 ?v1 ))(lnull$ ?v1 ))):named a145 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_llist$ ))(= (lnull$a (lmap$d ?v0 ?v1 ))(lnull$a ?v1 ))):named a146 ))
(assert (! (forall ((?v0 B_c_fun$ )(?v1 B_llist$ ))(= (lnull$a (lmap$f ?v0 ?v1 ))(lnull$b ?v1 ))):named a147 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_llist$ ))(= (lnull$b (lmap$e ?v0 ?v1 ))(lnull$ ?v1 ))):named a148 ))
(assert (! (forall ((?v0 C_b_fun$ )(?v1 C_llist$ ))(= (lnull$b (lmap$h ?v0 ?v1 ))(lnull$a ?v1 ))):named a149 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_llist$ ))(= (lnull$b (lmap$c ?v0 ?v1 ))(lnull$b ?v1 ))):named a150 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_llist$ ))(= (lnull$ (lmap$ ?v0 ?v1 ))(lnull$b ?v1 ))):named a151 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_llist$ ))(= (lnull$ (lmap$a ?v0 ?v1 ))(lnull$a ?v1 ))):named a152 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$g ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$h (fun_app$i ?v0 ?v1 )?v3 )(fun_app$d (fun_app$e (llist_all2$g ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$e (llist_all2$g ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a153 ))
(assert (! (forall ((?v0 C_b_bool_fun_fun$ )(?v1 C$ )(?v2 C_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$d (llist_all2$h ?v0 (lCons$b ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$h (fun_app$x ?v0 ?v1 )?v3 )(fun_app$d (llist_all2$h ?v0 ?v2 )?v4 ))):pattern ((fun_app$d (llist_all2$h ?v0 (lCons$b ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a154 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C$ )(?v2 C_llist$ )(?v3 C$ )(?v4 C_llist$ ))(! (= (fun_app$y (llist_all2$d ?v0 (lCons$b ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$ (fun_app$s ?v0 ?v1 )?v3 )(fun_app$y (llist_all2$d ?v0 ?v2 )?v4 ))):pattern ((fun_app$y (llist_all2$d ?v0 (lCons$b ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a155 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 C$ )(?v4 C_llist$ ))(! (= (fun_app$y (llist_all2$a ?v0 (lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$ (fun_app$q ?v0 ?v1 )?v3 )(fun_app$y (llist_all2$a ?v0 ?v2 )?v4 ))):pattern ((fun_app$y (llist_all2$a ?v0 (lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a156 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$f (llist_all2$c ?v0 (lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$j (fun_app$l ?v0 ?v1 )?v3 )(fun_app$f (llist_all2$c ?v0 ?v2 )?v4 ))):pattern ((fun_app$f (llist_all2$c ?v0 (lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a157 ))
(assert (! (forall ((?v0 B_c_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 C$ )(?v4 C_llist$ ))(! (= (fun_app$y (llist_all2$ ?v0 (lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$ (fun_app$a ?v0 ?v1 )?v3 )(fun_app$y (llist_all2$ ?v0 ?v2 )?v4 ))):pattern ((fun_app$y (llist_all2$ ?v0 (lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a158 ))
(check-sat )
;(get-unsat-core )
