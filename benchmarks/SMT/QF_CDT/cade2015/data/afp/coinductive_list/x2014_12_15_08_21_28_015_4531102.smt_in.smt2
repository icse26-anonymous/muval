;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_b_llist_fun$ 0 )
(declare-sort B_llist_a_llist_fun$ 0 )
(declare-sort A_b_prod_llist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_fun$ 0 )
(declare-sort A_b_prod_llist_b_llist_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_b_llist_prod_bool_fun$ 0 )
(declare-sort B_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort B_llist_b_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_b_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_b_llist_fun_fun$ 0 )
(declare-sort B_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort B_llist_a_llist_b_llist_fun_fun$ 0 )
(declare-sort B_llist_b_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_prod_b_llist_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_b_llist_prod_b_llist_fun$ 0 )
(declare-sort B_llist_a_llist_prod_a_llist_fun$ 0 )
(declare-sort B_llist_a_llist_prod_b_llist_fun$ 0 )
(declare-sort B_llist_b_llist_prod_a_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_bool_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_a_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_b_llist_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_prod_a_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_prod_b_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun_a_llist_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_b_llist_fun_fun_a_llist_a_llist_prod_b_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_a_llist_fun_fun_a_llist_b_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_b_llist_fun_fun_a_llist_b_llist_prod_b_llist_fun_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_b_prod_llist_fun_fun_a_llist_a_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_b_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ 0 )
(declare-sort B_llist$ 0)
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()B_llist$)
(declare-fun lhd$ (B_llist$)B$)
(declare-fun ltl$ (B_llist$)B_llist$)
(declare-fun lCons$ (B$ B_llist$ )B_llist$)
(declare-fun lNil$a ()A_llist$)
(declare-fun lhd$a (A_llist$)A$)
(declare-fun ltl$a (A_llist$)A_llist$)
(declare-fun lCons$a (A$ A_llist$ )A_llist$)
(declare-datatypes ()((A_llist_b_llist_prod$ (pair$ (fst$ A_llist$ )(snd$ B_llist$ )))(A_b_prod$ (pair$a (fst$a A$ )(snd$a B$ )))))
(declare-sort A_b_prod_llist$ 0)
(declare-fun lNil$b ()A_b_prod_llist$)
(declare-fun lhd$b (A_b_prod_llist$)A_b_prod$)
(declare-fun ltl$b (A_b_prod_llist$)A_b_prod_llist$)
(declare-fun lCons$b (A_b_prod$ A_b_prod_llist$ )A_b_prod_llist$)
(declare-datatypes ()((B_llist_a_b_prod_llist_prod$ (pair$b (fst$b B_llist$ )(snd$b A_b_prod_llist$ )))(B_llist_b_llist_prod$ (pair$c (fst$c B_llist$ )(snd$c B_llist$ )))(B_llist_a_llist_prod$ (pair$d (fst$d B_llist$ )(snd$d A_llist$ )))(A_llist_a_b_prod_llist_prod$ (pair$e (fst$e A_llist$ )(snd$e A_b_prod_llist$ )))(A_llist_a_llist_prod$ (pair$f (fst$f A_llist$ )(snd$f A_llist$ )))(A_b_prod_llist_a_b_prod_llist_prod$ (pair$g (fst$g A_b_prod_llist$ )(snd$g A_b_prod_llist$ )))))
(declare-fun uu$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uua$ ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun uub$ ()B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun uuc$ ()B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun uud$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uue$ ()B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun uuf$ ()A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun uug$ ()A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun uuh$ ()A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun uui$ ()A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun uuj$ (A_llist_b_llist_a_b_prod_llist_fun_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ )
(declare-fun uuk$ (A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uul$ (A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ )
(declare-fun uum$ (A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ )
(declare-fun uun$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uuo$ (B_llist_a_llist_a_llist_fun_fun$ )A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uup$ (B_llist_b_llist_a_llist_fun_fun$ )A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uuq$ (A_llist_b_llist_a_llist_fun_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ )
(declare-fun uur$ (A_llist_a_llist_b_llist_fun_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ )
(declare-fun uus$ (B_llist_a_llist_b_llist_fun_fun$ )A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ )
(declare-fun lzip$ ()A_llist_b_llist_a_b_prod_llist_fun_fun$ )
(declare-fun transp$ (A_llist_a_llist_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (A_b_prod_llist_bool_fun$ A_b_prod_llist$ )Bool )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun transp$a (B_llist_b_llist_bool_fun_fun$ )Bool )
(declare-fun transp$b (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_bool_fun$ )
(declare-fun fun_app$b (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$c (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$d (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$e (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$f (A_b_prod_llist_a_b_prod_llist_prod_bool_fun$ A_b_prod_llist_a_b_prod_llist_prod$ )Bool )
(declare-fun fun_app$g (A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_prod$ )A_b_prod_llist_a_b_prod_llist_prod_bool_fun$ )
(declare-fun fun_app$h (B_llist_a_b_prod_llist_prod_bool_fun$ B_llist_a_b_prod_llist_prod$ )Bool )
(declare-fun fun_app$i (B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ B_llist_a_b_prod_llist_prod$ )B_llist_a_b_prod_llist_prod_bool_fun$ )
(declare-fun fun_app$j (B_llist_b_llist_prod_bool_fun$ B_llist_b_llist_prod$ )Bool )
(declare-fun fun_app$k (B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ B_llist_b_llist_prod$ )B_llist_b_llist_prod_bool_fun$ )
(declare-fun fun_app$l (B_llist_a_llist_prod_bool_fun$ B_llist_a_llist_prod$ )Bool )
(declare-fun fun_app$m (B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ B_llist_a_llist_prod$ )B_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$n (A_llist_a_b_prod_llist_prod_bool_fun$ A_llist_a_b_prod_llist_prod$ )Bool )
(declare-fun fun_app$o (A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ A_llist_a_b_prod_llist_prod$ )A_llist_a_b_prod_llist_prod_bool_fun$ )
(declare-fun fun_app$p (A_llist_b_llist_prod_bool_fun$ A_llist_b_llist_prod$ )Bool )
(declare-fun fun_app$q (A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ A_llist_b_llist_prod$ )A_llist_b_llist_prod_bool_fun$ )
(declare-fun fun_app$r (A_llist_a_llist_prod_bool_fun$ A_llist_a_llist_prod$ )Bool )
(declare-fun fun_app$s (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$t (A_llist_b_llist_prod_a_b_prod_llist_fun$ A_llist_b_llist_prod$ )A_b_prod_llist$ )
(declare-fun fun_app$u (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun$ )
(declare-fun fun_app$v (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun fun_app$w (A_b_prod_llist_a_b_prod_llist_fun$ A_b_prod_llist$ )A_b_prod_llist$ )
(declare-fun fun_app$x (A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$y (A_llist_b_llist_prod_b_llist_fun$ A_llist_b_llist_prod$ )B_llist$ )
(declare-fun fun_app$z (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )A_llist_b_llist_prod_b_llist_fun$ )
(declare-fun lprefix$a ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun lprefix$b ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun monotone$ (A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )Bool )
(declare-fun rel_prod$ (A_llist_a_llist_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ )A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$ ()A_llist_b_llist_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun fun_app$aa (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun$ )
(declare-fun fun_app$ab (A_b_prod_llist_b_llist_fun$ A_b_prod_llist$ )B_llist$ )
(declare-fun fun_app$ac (A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_b_llist_fun$ )
(declare-fun fun_app$ad (A_llist_b_llist_prod_a_llist_fun$ A_llist_b_llist_prod$ )A_llist$ )
(declare-fun fun_app$ae (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )A_llist_b_llist_prod_a_llist_fun$ )
(declare-fun fun_app$af (A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$ag (A_b_prod_llist_a_llist_fun$ A_b_prod_llist$ )A_llist$ )
(declare-fun fun_app$ah (A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun fun_app$ai (A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ A_llist_b_llist_prod_b_llist_fun$ )A_llist_b_llist_prod_a_llist_fun$ )
(declare-fun fun_app$aj (A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ A_llist_b_llist_prod_b_llist_fun$ )A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$ak (B_llist_a_llist_fun$ B_llist$ )A_llist$ )
(declare-fun fun_app$al (B_llist_b_llist_a_llist_fun_fun$ B_llist$ )B_llist_a_llist_fun$ )
(declare-fun fun_app$am (A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )A_llist_b_llist_prod_b_llist_fun$ )
(declare-fun fun_app$an (A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ A_llist_b_llist_prod_b_llist_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun$ )
(declare-fun fun_app$ao (A_llist_b_llist_fun$ A_llist$ )B_llist$ )
(declare-fun fun_app$ap (B_llist_a_llist_b_llist_fun_fun$ B_llist$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$aq (A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )A_llist_b_llist_prod_a_llist_fun$ )
(declare-fun fun_app$ar (A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ A_llist_b_llist_prod_b_llist_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$as (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$at (B_llist_a_llist_a_llist_fun_fun$ B_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$au (A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ A_llist_b_llist_prod_b_llist_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun$ )
(declare-fun fun_app$av (A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun fun_app$aw (B_llist_a_b_prod_llist_fun$ B_llist$ )A_b_prod_llist$ )
(declare-fun fun_app$ax (A_llist_b_llist_a_b_prod_llist_fun_fun$ A_llist$ )B_llist_a_b_prod_llist_fun$ )
(declare-fun fun_app$ay (A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )A_llist_b_llist_prod_b_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$az (A_llist_b_llist_a_llist_fun_fun$ A_llist$ )B_llist_a_llist_fun$ )
(declare-fun fun_app$ba (A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_b_llist_fun_fun$ )
(declare-fun fun_app$bb (A_llist_a_llist_b_llist_fun_fun$ A_llist$ )A_llist_b_llist_fun$ )
(declare-fun fun_app$bc (A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )A_llist_b_llist_prod_a_llist_fun_a_llist_b_llist_prod_a_llist_fun_fun$ )
(declare-fun fun_app$bd (A_llist_a_llist_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$be (A_llist_b_llist_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ A_llist_b_llist_a_b_prod_llist_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun$ )
(declare-fun fun_app$bf (A_b_prod_llist_a_b_prod_llist_prod_b_llist_fun$ A_b_prod_llist_a_b_prod_llist_prod$ )B_llist$ )
(declare-fun fun_app$bg (A_b_prod_llist_a_b_prod_llist_prod_a_llist_fun$ A_b_prod_llist_a_b_prod_llist_prod$ )A_llist$ )
(declare-fun fun_app$bh (A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_prod$ )A_b_prod_llist$ )
(declare-fun fun_app$bi (A_llist_a_llist_prod_b_llist_fun$ A_llist_a_llist_prod$ )B_llist$ )
(declare-fun fun_app$bj (A_llist_a_llist_prod_a_llist_fun$ A_llist_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$bk (A_llist_a_b_prod_llist_prod_b_llist_fun$ A_llist_a_b_prod_llist_prod$ )B_llist$ )
(declare-fun fun_app$bl (A_llist_a_b_prod_llist_prod_a_llist_fun$ A_llist_a_b_prod_llist_prod$ )A_llist$ )
(declare-fun fun_app$bm (A_llist_b_llist_b_llist_fun_fun_a_llist_b_llist_prod_b_llist_fun_fun$ A_llist_b_llist_b_llist_fun_fun$ )A_llist_b_llist_prod_b_llist_fun$ )
(declare-fun fun_app$bn (A_llist_b_llist_a_llist_fun_fun_a_llist_b_llist_prod_a_llist_fun_fun$ A_llist_b_llist_a_llist_fun_fun$ )A_llist_b_llist_prod_a_llist_fun$ )
(declare-fun fun_app$bo (A_llist_a_llist_prod_a_b_prod_llist_fun$ A_llist_a_llist_prod$ )A_b_prod_llist$ )
(declare-fun fun_app$bp (A_llist_a_llist_a_b_prod_llist_fun_fun_a_llist_a_llist_prod_a_b_prod_llist_fun_fun$ A_llist_a_llist_a_b_prod_llist_fun_fun$ )A_llist_a_llist_prod_a_b_prod_llist_fun$ )
(declare-fun fun_app$bq (A_llist_a_llist_b_llist_fun_fun_a_llist_a_llist_prod_b_llist_fun_fun$ A_llist_a_llist_b_llist_fun_fun$ )A_llist_a_llist_prod_b_llist_fun$ )
(declare-fun fun_app$br (A_llist_a_llist_a_llist_fun_fun_a_llist_a_llist_prod_a_llist_fun_fun$ A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$bs (A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun_fun$ A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ )
(declare-fun fun_app$bt (A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_b_llist_fun_fun$ A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun$ )A_b_prod_llist_a_b_prod_llist_prod_b_llist_fun$ )
(declare-fun fun_app$bu (A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_llist_fun_fun$ A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )A_b_prod_llist_a_b_prod_llist_prod_a_llist_fun$ )
(declare-fun monotone$a (A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$b (A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ A_llist_b_llist_prod_b_llist_fun$ )Bool )
(declare-fun monotone$c (A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_prod_b_llist_fun$ )Bool )
(declare-fun monotone$d (A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$e (A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ )Bool )
(declare-fun monotone$f (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ A_llist_a_llist_prod_b_llist_fun$ )Bool )
(declare-fun monotone$g (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$h (A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ A_llist_a_b_prod_llist_prod_b_llist_fun$ )Bool )
(declare-fun monotone$i (A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_b_prod_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$j (B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ B_llist_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$k (B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ B_llist_b_llist_prod_a_llist_fun$ )Bool )
(declare-fun monotone$l (B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_a_llist_prod_b_llist_fun$ )Bool )
(declare-fun rel_prod$a (B_llist_b_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$b (B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ )B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$c (B_llist_b_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$d (A_llist_a_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$e (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$f (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$a ()A_llist_b_llist_b_llist_fun_fun_a_llist_b_llist_prod_b_llist_fun_fun$ )
(declare-fun case_prod$b ()A_llist_b_llist_a_llist_fun_fun_a_llist_b_llist_prod_a_llist_fun_fun$ )
(declare-fun case_prod$c ()A_llist_a_llist_a_b_prod_llist_fun_fun_a_llist_a_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun case_prod$d ()A_llist_a_llist_b_llist_fun_fun_a_llist_a_llist_prod_b_llist_fun_fun$ )
(declare-fun case_prod$e ()A_llist_a_llist_a_llist_fun_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun case_prod$f ()A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun case_prod$g ()A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_b_llist_fun_fun$ )
(declare-fun case_prod$h ()A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_llist_fun_fun$ )
(declare-fun case_prod$i (B_llist_a_llist_a_llist_fun_fun$ )B_llist_a_llist_prod_a_llist_fun$ )
(declare-fun case_prod$j (B_llist_b_llist_a_llist_fun_fun$ )B_llist_b_llist_prod_a_llist_fun$ )
(declare-fun case_prod$k (B_llist_a_llist_b_llist_fun_fun$ )B_llist_a_llist_prod_b_llist_fun$ )
(declare-fun finite_lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun internal_split$ ()A_llist_b_llist_b_llist_fun_fun_a_llist_b_llist_prod_b_llist_fun_fun$ )
(declare-fun lstrict_prefix$ (A_llist$ A_llist$ )Bool )
(declare-fun finite_lprefix$a ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$b ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun internal_split$a ()A_llist_b_llist_a_llist_fun_fun_a_llist_b_llist_prod_a_llist_fun_fun$ )
(declare-fun internal_split$b ()A_llist_a_llist_a_b_prod_llist_fun_fun_a_llist_a_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun internal_split$c ()A_llist_a_llist_b_llist_fun_fun_a_llist_a_llist_prod_b_llist_fun_fun$ )
(declare-fun internal_split$d ()A_llist_a_llist_a_llist_fun_fun_a_llist_a_llist_prod_a_llist_fun_fun$ )
(declare-fun internal_split$e ()A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun internal_split$f ()A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_b_llist_fun_fun$ )
(declare-fun internal_split$g ()A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun_a_b_prod_llist_a_b_prod_llist_prod_a_llist_fun_fun$ )
(declare-fun internal_split$h ()A_llist_b_llist_a_b_prod_llist_fun_fun_a_llist_b_llist_prod_a_b_prod_llist_fun_fun$ )
(declare-fun lstrict_prefix$a (B_llist$ B_llist$ )Bool )
(declare-fun lstrict_prefix$b (A_b_prod_llist$ A_b_prod_llist$ )Bool )
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$b (fun_app$c uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$d (fun_app$e uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uud$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod$ )(?v1 A_b_prod_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$f (fun_app$g uuh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uuh$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_llist_a_b_prod_llist_prod$ )(?v1 B_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$h (fun_app$i uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uub$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ )(?v1 B_llist_b_llist_prod$ ))(! (= (fun_app$j (fun_app$k uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uuc$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B_llist_a_llist_prod$ )(?v1 B_llist_a_llist_prod$ ))(! (= (fun_app$l (fun_app$m uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uue$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod$ )(?v1 A_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$n (fun_app$o uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uuf$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ )(?v1 A_llist_b_llist_prod$ ))(! (= (fun_app$p (fun_app$q uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$p (fun_app$q uui$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ ))(! (= (fun_app$r (fun_app$s uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$r (fun_app$s uug$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v2 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$t (fun_app$u (fun_app$v (uum$ ?v0 )?v1 )?v2 )?v3 )(fun_app$w (fun_app$x ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$t ?v2 ?v3 ))):pattern ((fun_app$t (fun_app$u (fun_app$v (uum$ ?v0 )?v1 )?v2 )?v3 )))):named a10 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v2 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$y (fun_app$z (fun_app$aa (uul$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ab (fun_app$ac ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$t ?v2 ?v3 ))):pattern ((fun_app$y (fun_app$z (fun_app$aa (uul$ ?v0 )?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v2 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$ad (fun_app$ae (fun_app$af (uuk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ag (fun_app$ah ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$t ?v2 ?v3 ))):pattern ((fun_app$ad (fun_app$ae (fun_app$af (uuk$ ?v0 )?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 B_llist_b_llist_a_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_b_llist_fun$ )(?v2 A_llist_b_llist_prod_b_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$ad (fun_app$ai (fun_app$aj (uup$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ak (fun_app$al ?v0 (fun_app$y ?v1 ?v3 ))(fun_app$y ?v2 ?v3 ))):pattern ((fun_app$ad (fun_app$ai (fun_app$aj (uup$ ?v0 )?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 B_llist_a_llist_b_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_b_llist_fun$ )(?v2 A_llist_b_llist_prod_a_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$y (fun_app$am (fun_app$an (uus$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ao (fun_app$ap ?v0 (fun_app$y ?v1 ?v3 ))(fun_app$ad ?v2 ?v3 ))):pattern ((fun_app$y (fun_app$am (fun_app$an (uus$ ?v0 )?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 B_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_b_llist_fun$ )(?v2 A_llist_b_llist_prod_a_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$ad (fun_app$aq (fun_app$ar (uuo$ ?v0 )?v1 )?v2 )?v3 )(fun_app$as (fun_app$at ?v0 (fun_app$y ?v1 ?v3 ))(fun_app$ad ?v2 ?v3 ))):pattern ((fun_app$ad (fun_app$aq (fun_app$ar (uuo$ ?v0 )?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_b_llist_a_b_prod_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_a_llist_fun$ )(?v2 A_llist_b_llist_prod_b_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$t (fun_app$au (fun_app$av (uuj$ ?v0 )?v1 )?v2 )?v3 )(fun_app$aw (fun_app$ax ?v0 (fun_app$ad ?v1 ?v3 ))(fun_app$y ?v2 ?v3 ))):pattern ((fun_app$t (fun_app$au (fun_app$av (uuj$ ?v0 )?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_b_llist_a_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_a_llist_fun$ )(?v2 A_llist_b_llist_prod_b_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$ad (fun_app$ai (fun_app$ay (uuq$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ak (fun_app$az ?v0 (fun_app$ad ?v1 ?v3 ))(fun_app$y ?v2 ?v3 ))):pattern ((fun_app$ad (fun_app$ai (fun_app$ay (uuq$ ?v0 )?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_a_llist_b_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_a_llist_fun$ )(?v2 A_llist_b_llist_prod_a_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$y (fun_app$am (fun_app$ba (uur$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ao (fun_app$bb ?v0 (fun_app$ad ?v1 ?v3 ))(fun_app$ad ?v2 ?v3 ))):pattern ((fun_app$y (fun_app$am (fun_app$ba (uur$ ?v0 )?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist_b_llist_prod_a_llist_fun$ )(?v2 A_llist_b_llist_prod_a_llist_fun$ )(?v3 A_llist_b_llist_prod$ ))(! (= (fun_app$ad (fun_app$aq (fun_app$bc (uun$ ?v0 )?v1 )?v2 )?v3 )(fun_app$as (fun_app$bd ?v0 (fun_app$ad ?v1 ?v3 ))(fun_app$ad ?v2 ?v3 ))):pattern ((fun_app$ad (fun_app$aq (fun_app$bc (uun$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (not (monotone$ (rel_prod$ lprefix$ lprefix$a )lprefix$b (fun_app$be case_prod$ lzip$ ))):named a20 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$d (fun_app$e lprefix$ ?v0 )?v0 )):named a21 ))
(assert (! (forall ((?v0 B_llist$ ))(fun_app$b (fun_app$c lprefix$a ?v0 )?v0 )):named a22 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$ (fun_app$a lprefix$b ?v0 )?v0 )):named a23 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$d (fun_app$e lprefix$ ?v0 )?v0 )):named a24 ))
(assert (! (forall ((?v0 B_llist$ ))(fun_app$b (fun_app$c lprefix$a ?v0 )?v0 )):named a25 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$ (fun_app$a lprefix$b ?v0 )?v0 )):named a26 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$d (fun_app$e lprefix$ ?v0 )?v1 )(fun_app$d (fun_app$e lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a27 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (fun_app$b (fun_app$c lprefix$a ?v0 )?v1 )(fun_app$b (fun_app$c lprefix$a ?v1 )?v0 ))(= ?v0 ?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$b ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$b ?v1 )?v0 ))(= ?v0 ?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$d (fun_app$e lprefix$ ?v0 )?v1 )(fun_app$d (fun_app$e lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (fun_app$b (fun_app$c lprefix$a ?v0 )?v1 )(fun_app$b (fun_app$c lprefix$a ?v1 )?v0 ))(= ?v0 ?v1 ))):named a31 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$b ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$b ?v1 )?v0 ))(= ?v0 ?v1 ))):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$d (fun_app$e lprefix$ ?v0 )?v1 )(fun_app$d (fun_app$e lprefix$ ?v2 )?v1 ))(or (fun_app$d (fun_app$e lprefix$ ?v0 )?v2 )(fun_app$d (fun_app$e lprefix$ ?v2 )?v0 )))):named a33 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$b (fun_app$c lprefix$a ?v0 )?v1 )(fun_app$b (fun_app$c lprefix$a ?v2 )?v1 ))(or (fun_app$b (fun_app$c lprefix$a ?v0 )?v2 )(fun_app$b (fun_app$c lprefix$a ?v2 )?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$b ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$b ?v2 )?v1 ))(or (fun_app$ (fun_app$a lprefix$b ?v0 )?v2 )(fun_app$ (fun_app$a lprefix$b ?v2 )?v0 )))):named a35 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$d (fun_app$e lprefix$ ?v0 )?v1 )(fun_app$d (fun_app$e lprefix$ ?v1 )?v2 ))(fun_app$d (fun_app$e lprefix$ ?v0 )?v2 ))):named a36 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$b (fun_app$c lprefix$a ?v0 )?v1 )(fun_app$b (fun_app$c lprefix$a ?v1 )?v2 ))(fun_app$b (fun_app$c lprefix$a ?v0 )?v2 ))):named a37 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$b ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$b ?v1 )?v2 ))(fun_app$ (fun_app$a lprefix$b ?v0 )?v2 ))):named a38 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$d (fun_app$e lprefix$ ?v0 )?v1 )(fun_app$d (fun_app$e lprefix$ ?v1 )?v2 ))(fun_app$d (fun_app$e lprefix$ ?v0 )?v2 ))):named a39 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$b (fun_app$c lprefix$a ?v0 )?v1 )(fun_app$b (fun_app$c lprefix$a ?v1 )?v2 ))(fun_app$b (fun_app$c lprefix$a ?v0 )?v2 ))):named a40 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$b ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$b ?v1 )?v2 ))(fun_app$ (fun_app$a lprefix$b ?v0 )?v2 ))):named a41 ))
(assert (! (= (rel_prod$a uu$ uua$ )uub$ ):named a42 ))
(assert (! (= (rel_prod$b uu$ uu$ )uuc$ ):named a43 ))
(assert (! (= (rel_prod$c uu$ uud$ )uue$ ):named a44 ))
(assert (! (= (rel_prod$d uud$ uua$ )uuf$ ):named a45 ))
(assert (! (= (rel_prod$e uud$ uud$ )uug$ ):named a46 ))
(assert (! (= (rel_prod$f uua$ uua$ )uuh$ ):named a47 ))
(assert (! (= (rel_prod$ uud$ uu$ )uui$ ):named a48 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_a_b_prod_llist_fun$ ))(= (monotone$ ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (fun_app$p (fun_app$q ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$t ?v2 ?v3 ))(fun_app$t ?v2 ?v4 )))))):named a49 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_a_llist_fun$ ))(= (monotone$a ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (fun_app$p (fun_app$q ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$ad ?v2 ?v3 ))(fun_app$ad ?v2 ?v4 )))))):named a50 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_b_llist_fun$ ))(= (monotone$b ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (fun_app$p (fun_app$q ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$y ?v2 ?v3 ))(fun_app$y ?v2 ?v4 )))))):named a51 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_b_llist_fun$ ))(= (monotone$c ?v0 ?v1 ?v2 )(forall ((?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$bf ?v2 ?v3 ))(fun_app$bf ?v2 ?v4 )))))):named a52 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_a_llist_fun$ ))(= (monotone$d ?v0 ?v1 ?v2 )(forall ((?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$bg ?v2 ?v3 ))(fun_app$bg ?v2 ?v4 )))))):named a53 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ ))(= (monotone$e ?v0 ?v1 ?v2 )(forall ((?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$bh ?v2 ?v3 ))(fun_app$bh ?v2 ?v4 )))))):named a54 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_b_llist_fun$ ))(= (monotone$f ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$r (fun_app$s ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$bi ?v2 ?v3 ))(fun_app$bi ?v2 ?v4 )))))):named a55 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ ))(= (monotone$g ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$r (fun_app$s ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$bj ?v2 ?v3 ))(fun_app$bj ?v2 ?v4 )))))):named a56 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_prod_b_llist_fun$ ))(= (monotone$h ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_a_b_prod_llist_prod$ )(?v4 A_llist_a_b_prod_llist_prod$ ))(=> (fun_app$n (fun_app$o ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$bk ?v2 ?v3 ))(fun_app$bk ?v2 ?v4 )))))):named a57 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_prod_a_llist_fun$ ))(= (monotone$i ?v0 ?v1 ?v2 )(forall ((?v3 A_llist_a_b_prod_llist_prod$ )(?v4 A_llist_a_b_prod_llist_prod$ ))(=> (fun_app$n (fun_app$o ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$bl ?v2 ?v3 ))(fun_app$bl ?v2 ?v4 )))))):named a58 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_a_b_prod_llist_fun$ ))(=> (forall ((?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (fun_app$p (fun_app$q ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$t ?v2 ?v3 ))(fun_app$t ?v2 ?v4 ))))(monotone$ ?v0 ?v1 ?v2 ))):named a59 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_a_llist_fun$ ))(=> (forall ((?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (fun_app$p (fun_app$q ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$ad ?v2 ?v3 ))(fun_app$ad ?v2 ?v4 ))))(monotone$a ?v0 ?v1 ?v2 ))):named a60 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_b_llist_fun$ ))(=> (forall ((?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (fun_app$p (fun_app$q ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$y ?v2 ?v3 ))(fun_app$y ?v2 ?v4 ))))(monotone$b ?v0 ?v1 ?v2 ))):named a61 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_b_llist_fun$ ))(=> (forall ((?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$bf ?v2 ?v3 ))(fun_app$bf ?v2 ?v4 ))))(monotone$c ?v0 ?v1 ?v2 ))):named a62 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_a_llist_fun$ ))(=> (forall ((?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$bg ?v2 ?v3 ))(fun_app$bg ?v2 ?v4 ))))(monotone$d ?v0 ?v1 ?v2 ))):named a63 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ ))(=> (forall ((?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (fun_app$f (fun_app$g ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v1 (fun_app$bh ?v2 ?v3 ))(fun_app$bh ?v2 ?v4 ))))(monotone$e ?v0 ?v1 ?v2 ))):named a64 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_b_llist_fun$ ))(=> (forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$r (fun_app$s ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$bi ?v2 ?v3 ))(fun_app$bi ?v2 ?v4 ))))(monotone$f ?v0 ?v1 ?v2 ))):named a65 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ ))(=> (forall ((?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (fun_app$r (fun_app$s ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$bj ?v2 ?v3 ))(fun_app$bj ?v2 ?v4 ))))(monotone$g ?v0 ?v1 ?v2 ))):named a66 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_prod_b_llist_fun$ ))(=> (forall ((?v3 A_llist_a_b_prod_llist_prod$ )(?v4 A_llist_a_b_prod_llist_prod$ ))(=> (fun_app$n (fun_app$o ?v0 ?v3 )?v4 )(fun_app$b (fun_app$c ?v1 (fun_app$bk ?v2 ?v3 ))(fun_app$bk ?v2 ?v4 ))))(monotone$h ?v0 ?v1 ?v2 ))):named a67 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_prod_a_llist_fun$ ))(=> (forall ((?v3 A_llist_a_b_prod_llist_prod$ )(?v4 A_llist_a_b_prod_llist_prod$ ))(=> (fun_app$n (fun_app$o ?v0 ?v3 )?v4 )(fun_app$d (fun_app$e ?v1 (fun_app$bl ?v2 ?v3 ))(fun_app$bl ?v2 ?v4 ))))(monotone$i ?v0 ?v1 ?v2 ))):named a68 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (and (monotone$ ?v0 ?v1 ?v2 )(fun_app$p (fun_app$q ?v0 ?v3 )?v4 ))(fun_app$ (fun_app$a ?v1 (fun_app$t ?v2 ?v3 ))(fun_app$t ?v2 ?v4 )))):named a69 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_a_llist_fun$ )(?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (and (monotone$a ?v0 ?v1 ?v2 )(fun_app$p (fun_app$q ?v0 ?v3 )?v4 ))(fun_app$d (fun_app$e ?v1 (fun_app$ad ?v2 ?v3 ))(fun_app$ad ?v2 ?v4 )))):named a70 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_prod_b_llist_fun$ )(?v3 A_llist_b_llist_prod$ )(?v4 A_llist_b_llist_prod$ ))(=> (and (monotone$b ?v0 ?v1 ?v2 )(fun_app$p (fun_app$q ?v0 ?v3 )?v4 ))(fun_app$b (fun_app$c ?v1 (fun_app$y ?v2 ?v3 ))(fun_app$y ?v2 ?v4 )))):named a71 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_b_llist_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (and (monotone$c ?v0 ?v1 ?v2 )(fun_app$f (fun_app$g ?v0 ?v3 )?v4 ))(fun_app$b (fun_app$c ?v1 (fun_app$bf ?v2 ?v3 ))(fun_app$bf ?v2 ?v4 )))):named a72 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_a_llist_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (and (monotone$d ?v0 ?v1 ?v2 )(fun_app$f (fun_app$g ?v0 ?v3 )?v4 ))(fun_app$d (fun_app$e ?v1 (fun_app$bg ?v2 ?v3 ))(fun_app$bg ?v2 ?v4 )))):named a73 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_prod$ )(?v4 A_b_prod_llist_a_b_prod_llist_prod$ ))(=> (and (monotone$e ?v0 ?v1 ?v2 )(fun_app$f (fun_app$g ?v0 ?v3 )?v4 ))(fun_app$ (fun_app$a ?v1 (fun_app$bh ?v2 ?v3 ))(fun_app$bh ?v2 ?v4 )))):named a74 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_b_llist_fun$ )(?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (and (monotone$f ?v0 ?v1 ?v2 )(fun_app$r (fun_app$s ?v0 ?v3 )?v4 ))(fun_app$b (fun_app$c ?v1 (fun_app$bi ?v2 ?v3 ))(fun_app$bi ?v2 ?v4 )))):named a75 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_prod_a_llist_fun$ )(?v3 A_llist_a_llist_prod$ )(?v4 A_llist_a_llist_prod$ ))(=> (and (monotone$g ?v0 ?v1 ?v2 )(fun_app$r (fun_app$s ?v0 ?v3 )?v4 ))(fun_app$d (fun_app$e ?v1 (fun_app$bj ?v2 ?v3 ))(fun_app$bj ?v2 ?v4 )))):named a76 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_prod_b_llist_fun$ )(?v3 A_llist_a_b_prod_llist_prod$ )(?v4 A_llist_a_b_prod_llist_prod$ ))(=> (and (monotone$h ?v0 ?v1 ?v2 )(fun_app$n (fun_app$o ?v0 ?v3 )?v4 ))(fun_app$b (fun_app$c ?v1 (fun_app$bk ?v2 ?v3 ))(fun_app$bk ?v2 ?v4 )))):named a77 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_b_prod_llist_prod_a_llist_fun$ )(?v3 A_llist_a_b_prod_llist_prod$ )(?v4 A_llist_a_b_prod_llist_prod$ ))(=> (and (monotone$i ?v0 ?v1 ?v2 )(fun_app$n (fun_app$o ?v0 ?v3 )?v4 ))(fun_app$d (fun_app$e ?v1 (fun_app$bl ?v2 ?v3 ))(fun_app$bl ?v2 ?v4 )))):named a78 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ )(?v1 A_llist_b_llist_prod$ )(?v2 A_llist_b_llist_b_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$y (fun_app$bm case_prod$a ?v2 )?v0 )(fun_app$y (fun_app$bm case_prod$a ?v2 )?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ )(?v1 A_llist_b_llist_prod$ )(?v2 A_llist_b_llist_a_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ad (fun_app$bn case_prod$b ?v2 )?v0 )(fun_app$ad (fun_app$bn case_prod$b ?v2 )?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_a_b_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bo (fun_app$bp case_prod$c ?v2 )?v0 )(fun_app$bo (fun_app$bp case_prod$c ?v2 )?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_b_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bi (fun_app$bq case_prod$d ?v2 )?v0 )(fun_app$bi (fun_app$bq case_prod$d ?v2 )?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bj (fun_app$br case_prod$e ?v2 )?v0 )(fun_app$bj (fun_app$br case_prod$e ?v2 )?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod$ )(?v1 A_b_prod_llist_a_b_prod_llist_prod$ )(?v2 A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bh (fun_app$bs case_prod$f ?v2 )?v0 )(fun_app$bh (fun_app$bs case_prod$f ?v2 )?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod$ )(?v1 A_b_prod_llist_a_b_prod_llist_prod$ )(?v2 A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bf (fun_app$bt case_prod$g ?v2 )?v0 )(fun_app$bf (fun_app$bt case_prod$g ?v2 )?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_prod$ )(?v1 A_b_prod_llist_a_b_prod_llist_prod$ )(?v2 A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bg (fun_app$bu case_prod$h ?v2 )?v0 )(fun_app$bg (fun_app$bu case_prod$h ?v2 )?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ )(?v1 A_llist_b_llist_prod$ )(?v2 A_llist_b_llist_a_b_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$t (fun_app$be case_prod$ ?v2 )?v0 )(fun_app$t (fun_app$be case_prod$ ?v2 )?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_a_b_prod_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_llist_fun$ )(?v5 A_llist_b_llist_prod_b_llist_fun$ ))(=> (and (monotone$ (rel_prod$ ?v0 ?v1 )lprefix$b (fun_app$be case_prod$ ?v2 ))(and (monotone$a ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$b (fun_app$au (fun_app$av (uuj$ ?v2 )?v4 )?v5 )))):named a88 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_a_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v5 A_llist_b_llist_prod_a_b_prod_llist_fun$ ))(=> (and (monotone$d (rel_prod$f ?v0 ?v1 )lprefix$ (fun_app$bu case_prod$h ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$a ?v3 lprefix$ (fun_app$ae (fun_app$af (uuk$ ?v2 )?v4 )?v5 )))):named a89 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_b_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v5 A_llist_b_llist_prod_a_b_prod_llist_fun$ ))(=> (and (monotone$c (rel_prod$f ?v0 ?v1 )lprefix$a (fun_app$bt case_prod$g ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$b ?v3 lprefix$a (fun_app$z (fun_app$aa (uul$ ?v2 )?v4 )?v5 )))):named a90 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_a_b_prod_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v5 A_llist_b_llist_prod_a_b_prod_llist_fun$ ))(=> (and (monotone$e (rel_prod$f ?v0 ?v1 )lprefix$b (fun_app$bs case_prod$f ?v2 ))(and (monotone$ ?v3 ?v0 ?v4 )(monotone$ ?v3 ?v1 ?v5 )))(monotone$ ?v3 lprefix$b (fun_app$u (fun_app$v (uum$ ?v2 )?v4 )?v5 )))):named a91 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_llist_fun$ )(?v5 A_llist_b_llist_prod_a_llist_fun$ ))(=> (and (monotone$g (rel_prod$e ?v0 ?v1 )lprefix$ (fun_app$br case_prod$e ?v2 ))(and (monotone$a ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$a ?v3 lprefix$ (fun_app$aq (fun_app$bc (uun$ ?v2 )?v4 )?v5 )))):named a92 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 B_llist_a_llist_a_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_b_llist_fun$ )(?v5 A_llist_b_llist_prod_a_llist_fun$ ))(=> (and (monotone$j (rel_prod$c ?v0 ?v1 )lprefix$ (case_prod$i ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$a ?v3 lprefix$ (fun_app$aq (fun_app$ar (uuo$ ?v2 )?v4 )?v5 )))):named a93 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist_b_llist_a_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_b_llist_fun$ )(?v5 A_llist_b_llist_prod_b_llist_fun$ ))(=> (and (monotone$k (rel_prod$b ?v0 ?v1 )lprefix$ (case_prod$j ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$a ?v3 lprefix$ (fun_app$ai (fun_app$aj (uup$ ?v2 )?v4 )?v5 )))):named a94 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_b_llist_a_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_llist_fun$ )(?v5 A_llist_b_llist_prod_b_llist_fun$ ))(=> (and (monotone$a (rel_prod$ ?v0 ?v1 )lprefix$ (fun_app$bn case_prod$b ?v2 ))(and (monotone$a ?v3 ?v0 ?v4 )(monotone$b ?v3 ?v1 ?v5 )))(monotone$a ?v3 lprefix$ (fun_app$ai (fun_app$ay (uuq$ ?v2 )?v4 )?v5 )))):named a95 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_b_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_llist_fun$ )(?v5 A_llist_b_llist_prod_a_llist_fun$ ))(=> (and (monotone$f (rel_prod$e ?v0 ?v1 )lprefix$a (fun_app$bq case_prod$d ?v2 ))(and (monotone$a ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$b ?v3 lprefix$a (fun_app$am (fun_app$ba (uur$ ?v2 )?v4 )?v5 )))):named a96 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 B_llist_a_llist_b_llist_fun_fun$ )(?v3 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_b_llist_fun$ )(?v5 A_llist_b_llist_prod_a_llist_fun$ ))(=> (and (monotone$l (rel_prod$c ?v0 ?v1 )lprefix$a (case_prod$k ?v2 ))(and (monotone$b ?v3 ?v0 ?v4 )(monotone$a ?v3 ?v1 ?v5 )))(monotone$b ?v3 lprefix$a (fun_app$am (fun_app$an (uus$ ?v2 )?v4 )?v5 )))):named a97 ))
(assert (! (= finite_lprefix$ lprefix$ ):named a98 ))
(assert (! (= finite_lprefix$a lprefix$a ):named a99 ))
(assert (! (= finite_lprefix$b lprefix$b ):named a100 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (lstrict_prefix$ ?v0 ?v1 )(and (fun_app$d (fun_app$e lprefix$ ?v0 )?v1 )(not (= ?v0 ?v1 )))):pattern ((lstrict_prefix$ ?v0 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (lstrict_prefix$a ?v0 ?v1 )(and (fun_app$b (fun_app$c lprefix$a ?v0 )?v1 )(not (= ?v0 ?v1 )))):pattern ((lstrict_prefix$a ?v0 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(! (= (lstrict_prefix$b ?v0 ?v1 )(and (fun_app$ (fun_app$a lprefix$b ?v0 )?v1 )(not (= ?v0 ?v1 )))):pattern ((lstrict_prefix$b ?v0 ?v1 )))):named a103 ))
(assert (! (= internal_split$ case_prod$a ):named a104 ))
(assert (! (= internal_split$a case_prod$b ):named a105 ))
(assert (! (= internal_split$b case_prod$c ):named a106 ))
(assert (! (= internal_split$c case_prod$d ):named a107 ))
(assert (! (= internal_split$d case_prod$e ):named a108 ))
(assert (! (= internal_split$e case_prod$f ):named a109 ))
(assert (! (= internal_split$f case_prod$g ):named a110 ))
(assert (! (= internal_split$g case_prod$h ):named a111 ))
(assert (! (= internal_split$h case_prod$ ):named a112 ))
(assert (! (transp$ lprefix$ ):named a113 ))
(assert (! (transp$a lprefix$a ):named a114 ))
(assert (! (transp$b lprefix$b ):named a115 ))
(check-sat )
;(get-unsat-core )
