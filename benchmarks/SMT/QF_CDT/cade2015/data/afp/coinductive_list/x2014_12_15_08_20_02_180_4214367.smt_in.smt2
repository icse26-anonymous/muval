;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort Enat_enat_prod_set$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort Enat_enat_prod_bool_fun$ 0 )
(declare-sort Enat_enat_enat_prod_set_fun$ 0 )
(declare-sort Enat_enat_prod_set_bool_fun$ 0 )
(declare-sort Enat_enat_enat_enat_prod_set_fun_fun$ 0 )
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))(Enat_enat_prod$ (pair$ (fst$ Enat$ )(snd$ Enat$ )))))
(declare-fun less$ ()Enat_enat_bool_fun_fun$ )
(declare-fun member$ (Enat_enat_prod$ )Enat_enat_prod_set_bool_fun$ )
(declare-fun collect$ (Enat_enat_prod_bool_fun$ )Enat_enat_prod_set$ )
(declare-fun fun_app$ (Enat_enat_prod_set_bool_fun$ Enat_enat_prod_set$ )Bool )
(declare-fun fun_app$a (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$b (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(declare-fun fun_app$c (Enat_enat_prod_bool_fun$ Enat_enat_prod$ )Bool )
(declare-fun fun_app$d (Enat_enat_enat_prod_set_fun$ Enat$ )Enat_enat_prod_set$ )
(declare-fun fun_app$e (Enat_enat_enat_enat_prod_set_fun_fun$ Enat$ )Enat_enat_enat_prod_set_fun$ )
(declare-fun fun_app$f (Bool_bool_fun$ Bool )Bool )
(declare-fun case_prod$ (Enat_enat_bool_fun_fun$ )Enat_enat_prod_bool_fun$ )
(declare-fun case_prod$a (Enat_enat_enat_enat_prod_set_fun_fun$ Enat_enat_prod$ )Enat_enat_prod_set$ )
(assert (! (not (forall ((?v0 Enat_bool_fun$ ))(=> (forall ((?v1 Enat$ ))(=> (forall ((?v2 Enat$ ))(=> (fun_app$ (member$ (pair$ ?v2 ?v1 ))(collect$ (case_prod$ less$ )))(fun_app$a ?v0 ?v2 )))(fun_app$a ?v0 ?v1 )))(forall ((?v1 Enat$ ))(fun_app$a ?v0 ?v1 ))))):named a0 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_bool_fun_fun$ ))(=> (forall ((?v2 Enat$ )(?v3 Enat$ ))(=> (= ?v0 (pair$ ?v2 ?v3 ))(fun_app$a (fun_app$b ?v1 ?v2 )?v3 )))(fun_app$c (case_prod$ ?v1 )?v0 ))):named a1 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (fun_app$a (fun_app$b ?v0 ?v1 )?v2 )(fun_app$c (case_prod$ ?v0 )(pair$ ?v1 ?v2 )))):named a2 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (fun_app$a (fun_app$b ?v0 ?v1 )?v2 )(fun_app$c (case_prod$ ?v0 )(pair$ ?v1 ?v2 )))):named a3 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ )(?v2 Enat$ )(?v3 Enat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a4 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ )(?v2 Enat$ )(?v3 Enat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a5 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (fun_app$c (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))(fun_app$a (fun_app$b ?v0 ?v1 )?v2 ))):named a6 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_prod$ ))(=> (and (fun_app$c (case_prod$ ?v0 )?v1 )(forall ((?v2 Enat$ )(?v3 Enat$ ))(=> (and (= ?v1 (pair$ ?v2 ?v3 ))(fun_app$a (fun_app$b ?v0 ?v2 )?v3 ))false )))false )):named a7 ))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_set_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (case_prod$a ?v0 (pair$ ?v1 ?v2 ))(fun_app$d (fun_app$e ?v0 ?v1 )?v2 )):pattern ((case_prod$a ?v0 (pair$ ?v1 ?v2 ))))):named a8 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$c (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))(fun_app$a (fun_app$b ?v0 ?v1 )?v2 )):pattern ((fun_app$c (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))))):named a9 ))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_set_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (case_prod$a ?v0 (pair$ ?v1 ?v2 ))(fun_app$d (fun_app$e ?v0 ?v1 )?v2 )):pattern ((case_prod$a ?v0 (pair$ ?v1 ?v2 ))))):named a10 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$c (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))(fun_app$a (fun_app$b ?v0 ?v1 )?v2 )):pattern ((fun_app$c (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))))):named a11 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_enat_enat_prod_set_fun_fun$ )(?v2 Enat_enat_enat_enat_prod_set_fun_fun$ )(?v3 Enat_enat_prod$ ))(=> (and (forall ((?v4 Enat$ )(?v5 Enat$ ))(=> (= (pair$ ?v4 ?v5 )?v0 )(= (fun_app$d (fun_app$e ?v1 ?v4 )?v5 )(fun_app$d (fun_app$e ?v2 ?v4 )?v5 ))))(= ?v3 ?v0 ))(= (case_prod$a ?v1 ?v3 )(case_prod$a ?v2 ?v0 )))):named a12 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_bool_fun_fun$ )(?v3 Enat_enat_prod$ ))(=> (and (forall ((?v4 Enat$ )(?v5 Enat$ ))(=> (= (pair$ ?v4 ?v5 )?v0 )(= (fun_app$a (fun_app$b ?v1 ?v4 )?v5 )(fun_app$a (fun_app$b ?v2 ?v4 )?v5 ))))(= ?v3 ?v0 ))(= (fun_app$c (case_prod$ ?v1 )?v3 )(fun_app$c (case_prod$ ?v2 )?v0 )))):named a13 ))
(assert (! (forall ((?v0 Enat_enat_prod_set_bool_fun$ )(?v1 Enat_enat_enat_enat_prod_set_fun_fun$ )(?v2 Enat_enat_prod$ ))(=> (and (fun_app$ ?v0 (case_prod$a ?v1 ?v2 ))(forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(fun_app$ ?v0 (fun_app$d (fun_app$e ?v1 ?v3 )?v4 )))false )))false )):named a14 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_prod$ ))(=> (and (fun_app$f ?v0 (fun_app$c (case_prod$ ?v1 )?v2 ))(forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(fun_app$f ?v0 (fun_app$a (fun_app$b ?v1 ?v3 )?v4 )))false )))false )):named a15 ))
(assert (! (forall ((?v0 Enat_bool_fun$ )(?v1 Enat$ ))(=> (forall ((?v2 Enat$ ))(=> (forall ((?v3 Enat$ ))(=> (fun_app$a (fun_app$b less$ ?v3 )?v2 )(fun_app$a ?v0 ?v3 )))(fun_app$a ?v0 ?v2 )))(fun_app$a ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_enat_enat_prod_set_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(=> (fun_app$ (member$ ?v0 )(fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))(fun_app$ (member$ ?v0 )(case_prod$a ?v1 (pair$ ?v2 ?v3 ))))):named a17 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_prod$ )(?v2 Enat_enat_enat_enat_prod_set_fun_fun$ ))(=> (forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (= ?v0 (pair$ ?v3 ?v4 ))(fun_app$ (member$ ?v1 )(fun_app$d (fun_app$e ?v2 ?v3 )?v4 ))))(fun_app$ (member$ ?v1 )(case_prod$a ?v2 ?v0 )))):named a18 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_enat_enat_prod_set_fun_fun$ )(?v2 Enat_enat_prod$ ))(=> (and (fun_app$ (member$ ?v0 )(case_prod$a ?v1 ?v2 ))(forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (and (= ?v2 (pair$ ?v3 ?v4 ))(fun_app$ (member$ ?v0 )(fun_app$d (fun_app$e ?v1 ?v3 )?v4 )))false )))false )):named a19 ))
(check-sat )
;(get-unsat-core )
