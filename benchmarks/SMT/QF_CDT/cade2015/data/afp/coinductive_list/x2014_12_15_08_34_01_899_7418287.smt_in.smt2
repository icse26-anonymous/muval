;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_set_a_set_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort A_llist_set_a_llist_set_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun bot$ ()A_set$ )
(declare-fun inf$ (A_set$ )A_set_a_set_fun$ )
(declare-fun xss$ ()A_llist_llist$ )
(declare-fun bot$a ()A_llist_bool_fun$ )
(declare-fun bot$b ()A_llist_set$ )
(declare-fun bot$c ()A_bool_fun$ )
(declare-fun inf$a (A_llist_bool_fun$ )A_llist_bool_fun_a_llist_bool_fun_fun$ )
(declare-fun inf$b (A_llist_set$ )A_llist_set_a_llist_set_fun$ )
(declare-fun inf$c (A_bool_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun inf$d (Bool Bool )Bool )
(declare-fun lset$ (A_llist_llist$ )A_llist_set$ )
(declare-fun lset$a (A_llist$ )A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun collect$ (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun fun_app$ (A_set_a_set_fun$ A_set$ )A_set$ )
(declare-fun lconcat$ (A_llist_llist$ )A_llist$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun collect$a (A_bool_fun$ )A_set$ )
(declare-fun fun_app$a (A_llist_bool_fun_a_llist_bool_fun_fun$ A_llist_bool_fun$ )A_llist_bool_fun$ )
(declare-fun fun_app$b (A_llist_set_a_llist_set_fun$ A_llist_set$ )A_llist_set$ )
(declare-fun fun_app$c (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$d (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$e (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun ldistinct$ (A_llist$ )Bool )
(declare-fun ldistinct$a (A_llist_llist$ )Bool )
(assert (! (not (ldistinct$ (lconcat$ xss$ ))):named a0 ))
(assert (! (ldistinct$a xss$ ):named a1 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (member$ ?v0 (lset$ xss$ ))(ldistinct$ ?v0 ))):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (member$ ?v0 (lset$ xss$ ))(and (member$ ?v1 (lset$ xss$ ))(not (= ?v0 ?v1 ))))(= (fun_app$ (inf$ (lset$a ?v0 ))(lset$a ?v1 ))bot$ ))):named a3 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (fun_app$a (inf$a ?v0 )bot$a )bot$a )):named a4 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (fun_app$b (inf$b ?v0 )bot$b )bot$b )):named a5 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (fun_app$c (inf$c ?v0 )bot$c )bot$c )):named a6 ))
(assert (! (forall ((?v0 A_set$ ))(= (fun_app$ (inf$ ?v0 )bot$ )bot$ )):named a7 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (fun_app$a (inf$a bot$a )?v0 )bot$a )):named a8 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (fun_app$b (inf$b bot$b )?v0 )bot$b )):named a9 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (fun_app$c (inf$c bot$c )?v0 )bot$c )):named a10 ))
(assert (! (forall ((?v0 A_set$ ))(= (fun_app$ (inf$ bot$ )?v0 )bot$ )):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(= (member$ ?v0 (fun_app$b (inf$b ?v1 )?v2 ))(and (member$ ?v0 ?v1 )(member$ ?v0 ?v2 )))):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_set$ ))(= (member$a ?v0 (fun_app$ (inf$ ?v1 )?v2 ))(and (member$a ?v0 ?v1 )(member$a ?v0 ?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$ ?v0 ?v1 )(member$ ?v0 ?v2 ))(member$ ?v0 (fun_app$b (inf$b ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$a ?v0 ?v1 )(member$a ?v0 ?v2 ))(member$a ?v0 (fun_app$ (inf$ ?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$d (fun_app$c (inf$c ?v0 )?v1 )?v2 )(inf$d (fun_app$d ?v0 ?v2 )(fun_app$d ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$c (inf$c ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (fun_app$c (inf$c (fun_app$c (inf$c ?v0 )?v1 ))?v1 )(fun_app$c (inf$c ?v0 )?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (fun_app$b (inf$b (fun_app$b (inf$b ?v0 )?v1 ))?v1 )(fun_app$b (inf$b ?v0 )?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (fun_app$ (inf$ (fun_app$ (inf$ ?v0 )?v1 ))?v1 )(fun_app$ (inf$ ?v0 )?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (fun_app$c (inf$c (fun_app$c (inf$c ?v0 )?v1 ))?v1 )(fun_app$c (inf$c ?v0 )?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (fun_app$b (inf$b (fun_app$b (inf$b ?v0 )?v1 ))?v1 )(fun_app$b (inf$b ?v0 )?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (fun_app$ (inf$ (fun_app$ (inf$ ?v0 )?v1 ))?v1 )(fun_app$ (inf$ ?v0 )?v1 ))):named a22 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (fun_app$c (inf$c ?v0 )(fun_app$c (inf$c ?v0 )?v1 ))(fun_app$c (inf$c ?v0 )?v1 ))):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (fun_app$b (inf$b ?v0 )(fun_app$b (inf$b ?v0 )?v1 ))(fun_app$b (inf$b ?v0 )?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v0 )?v1 ))(fun_app$ (inf$ ?v0 )?v1 ))):named a25 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (fun_app$c (inf$c ?v0 )(fun_app$c (inf$c ?v0 )?v1 ))(fun_app$c (inf$c ?v0 )?v1 ))):named a26 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (fun_app$b (inf$b ?v0 )(fun_app$b (inf$b ?v0 )?v1 ))(fun_app$b (inf$b ?v0 )?v1 ))):named a27 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v0 )?v1 ))(fun_app$ (inf$ ?v0 )?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(! (= (fun_app$c (inf$c ?v0 )?v0 )?v0 ):pattern ((inf$c ?v0 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_set$ ))(! (= (fun_app$b (inf$b ?v0 )?v0 )?v0 ):pattern ((inf$b ?v0 )))):named a30 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (fun_app$ (inf$ ?v0 )?v0 )?v0 ):pattern ((inf$ ?v0 )))):named a31 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(! (= (fun_app$c (inf$c ?v0 )?v0 )?v0 ):pattern ((inf$c ?v0 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_set$ ))(! (= (fun_app$b (inf$b ?v0 )?v0 )?v0 ):pattern ((inf$b ?v0 )))):named a33 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (fun_app$ (inf$ ?v0 )?v0 )?v0 ):pattern ((inf$ ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (= (collect$ ?v0 )bot$b )(forall ((?v1 A_llist$ ))(not (fun_app$e ?v0 ?v1 ))))):named a35 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (= (collect$a ?v0 )bot$ )(forall ((?v1 A$ ))(not (fun_app$d ?v0 ?v1 ))))):named a36 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$ ?v0 bot$b )false )):named a37 ))
(assert (! (forall ((?v0 A$ ))(= (member$a ?v0 bot$ )false )):named a38 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (= bot$b (collect$ ?v0 ))(forall ((?v1 A_llist$ ))(not (fun_app$e ?v0 ?v1 ))))):named a39 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (= bot$ (collect$a ?v0 ))(forall ((?v1 A$ ))(not (fun_app$d ?v0 ?v1 ))))):named a40 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (forall ((?v1 A_llist$ ))(not (member$ ?v1 ?v0 )))(= ?v0 bot$b ))):named a41 ))
(assert (! (forall ((?v0 A_set$ ))(= (forall ((?v1 A$ ))(not (member$a ?v1 ?v0 )))(= ?v0 bot$ ))):named a42 ))
(assert (! (= bot$b (collect$ bot$a )):named a43 ))
(assert (! (= bot$ (collect$a bot$c )):named a44 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (member$ ?v0 bot$b )false )):named a45 ))
(assert (! (forall ((?v0 A$ ))(=> (member$a ?v0 bot$ )false )):named a46 ))
(check-sat )
;(get-unsat-core )
