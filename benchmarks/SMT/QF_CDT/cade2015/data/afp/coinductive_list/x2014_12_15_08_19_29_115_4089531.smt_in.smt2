;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_fun$ 0 )
(declare-sort A_a_prod_llist_set$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_a_a_a_prod_prod_fun$ 0 )
(declare-sort A_a_a_prod_a_prod_fun$ 0 )
(declare-sort A_a_a_prod_prod_a_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_prod_a_fun$ 0 )
(declare-sort A_a_a_prod_prod_llist_set$ 0 )
(declare-sort A_a_prod_a_prod_llist_set$ 0 )
(declare-sort A_a_a_prod_prod_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_a_fun$ 0 )
(declare-sort A_a_prod_a_prod_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_llist_set$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_a_a_prod_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-datatypes ()((A_a_prod$ (pair$ (fst$ A$ )(snd$ A$ )))))
(declare-sort A_a_prod_llist$ 0)
(declare-fun lNil$a ()A_a_prod_llist$)
(declare-fun lhd$a (A_a_prod_llist$)A_a_prod$)
(declare-fun ltl$a (A_a_prod_llist$)A_a_prod_llist$)
(declare-fun lCons$a (A_a_prod$ A_a_prod_llist$ )A_a_prod_llist$)
(declare-datatypes ()((A_a_prod_a_prod$ (pair$a (fst$a A_a_prod$ )(snd$a A$ )))))
(declare-sort A_a_prod_a_prod_llist$ 0)
(declare-fun lNil$b ()A_a_prod_a_prod_llist$)
(declare-fun lhd$b (A_a_prod_a_prod_llist$)A_a_prod_a_prod$)
(declare-fun ltl$b (A_a_prod_a_prod_llist$)A_a_prod_a_prod_llist$)
(declare-fun lCons$b (A_a_prod_a_prod$ A_a_prod_a_prod_llist$ )A_a_prod_a_prod_llist$)
(declare-datatypes ()((A_a_a_prod_prod$ (pair$b (fst$b A$ )(snd$b A_a_prod$ )))))
(declare-sort A_a_a_prod_prod_llist$ 0)
(declare-fun lNil$c ()A_a_a_prod_prod_llist$)
(declare-fun lhd$c (A_a_a_prod_prod_llist$)A_a_a_prod_prod$)
(declare-fun ltl$c (A_a_a_prod_prod_llist$)A_a_a_prod_prod_llist$)
(declare-fun lCons$c (A_a_a_prod_prod$ A_a_a_prod_prod_llist$ )A_a_a_prod_prod_llist$)
(declare-datatypes ()((A_a_prod_a_a_prod_prod$ (pair$c (fst$c A_a_prod$ )(snd$c A_a_prod$ )))))
(declare-sort A_a_prod_a_a_prod_prod_llist$ 0)
(declare-fun lNil$d ()A_a_prod_a_a_prod_prod_llist$)
(declare-fun lhd$d (A_a_prod_a_a_prod_prod_llist$)A_a_prod_a_a_prod_prod$)
(declare-fun ltl$d (A_a_prod_a_a_prod_prod_llist$)A_a_prod_a_a_prod_prod_llist$)
(declare-fun lCons$d (A_a_prod_a_a_prod_prod$ A_a_prod_a_a_prod_prod_llist$ )A_a_prod_a_a_prod_prod_llist$)
(declare-datatypes ()((A_a_a_prod_a_prod_prod$ (pair$d (fst$d A$ )(snd$d A_a_prod_a_prod$ )))))
(declare-sort A_a_a_prod_a_prod_prod_llist$ 0)
(declare-fun lNil$e ()A_a_a_prod_a_prod_prod_llist$)
(declare-fun lhd$e (A_a_a_prod_a_prod_prod_llist$)A_a_a_prod_a_prod_prod$)
(declare-fun ltl$e (A_a_a_prod_a_prod_prod_llist$)A_a_a_prod_a_prod_prod_llist$)
(declare-fun lCons$e (A_a_a_prod_a_prod_prod$ A_a_a_prod_a_prod_prod_llist$ )A_a_a_prod_a_prod_prod_llist$)
(declare-datatypes ()((A_a_a_a_prod_prod_prod$ (pair$e (fst$e A$ )(snd$e A_a_a_prod_prod$ )))))
(declare-sort A_a_a_a_prod_prod_prod_llist$ 0)
(declare-fun lNil$f ()A_a_a_a_prod_prod_prod_llist$)
(declare-fun lhd$f (A_a_a_a_prod_prod_prod_llist$)A_a_a_a_prod_prod_prod$)
(declare-fun ltl$f (A_a_a_a_prod_prod_prod_llist$)A_a_a_a_prod_prod_prod_llist$)
(declare-fun lCons$f (A_a_a_a_prod_prod_prod$ A_a_a_a_prod_prod_prod_llist$ )A_a_a_a_prod_prod_prod_llist$)
(declare-datatypes ()((A_a_prod_a_prod_a_prod$ (pair$f (fst$f A_a_prod_a_prod$ )(snd$f A$ )))))
(declare-sort A_a_prod_a_prod_a_prod_llist$ 0)
(declare-fun lNil$g ()A_a_prod_a_prod_a_prod_llist$)
(declare-fun lhd$g (A_a_prod_a_prod_a_prod_llist$)A_a_prod_a_prod_a_prod$)
(declare-fun ltl$g (A_a_prod_a_prod_a_prod_llist$)A_a_prod_a_prod_a_prod_llist$)
(declare-fun lCons$g (A_a_prod_a_prod_a_prod$ A_a_prod_a_prod_a_prod_llist$ )A_a_prod_a_prod_a_prod_llist$)
(declare-datatypes ()((A_a_a_prod_prod_a_prod$ (pair$g (fst$g A_a_a_prod_prod$ )(snd$g A$ )))))
(declare-sort A_a_a_prod_prod_a_prod_llist$ 0)
(declare-fun lNil$h ()A_a_a_prod_prod_a_prod_llist$)
(declare-fun lhd$h (A_a_a_prod_prod_a_prod_llist$)A_a_a_prod_prod_a_prod$)
(declare-fun ltl$h (A_a_a_prod_prod_a_prod_llist$)A_a_a_prod_prod_a_prod_llist$)
(declare-fun lCons$h (A_a_a_prod_prod_a_prod$ A_a_a_prod_prod_a_prod_llist$ )A_a_a_prod_prod_a_prod_llist$)
(declare-datatypes ()((A_a_a_prod_a_a_prod_prod_prod$ (pair$h (fst$h A$ )(snd$h A_a_prod_a_a_prod_prod$ )))))
(declare-sort A_a_a_prod_a_a_prod_prod_prod_llist$ 0)
(declare-fun lNil$i ()A_a_a_prod_a_a_prod_prod_prod_llist$)
(declare-fun lhd$i (A_a_a_prod_a_a_prod_prod_prod_llist$)A_a_a_prod_a_a_prod_prod_prod$)
(declare-fun ltl$i (A_a_a_prod_a_a_prod_prod_prod_llist$)A_a_a_prod_a_a_prod_prod_prod_llist$)
(declare-fun lCons$i (A_a_a_prod_a_a_prod_prod_prod$ A_a_a_prod_a_a_prod_prod_prod_llist$ )A_a_a_prod_a_a_prod_prod_prod_llist$)
(declare-datatypes ()((A_a_prod_a_a_prod_a_prod_prod$ (pair$i (fst$i A_a_prod$ )(snd$i A_a_prod_a_prod$ )))))
(declare-sort A_a_prod_a_a_prod_a_prod_prod_llist$ 0)
(declare-fun lNil$j ()A_a_prod_a_a_prod_a_prod_prod_llist$)
(declare-fun lhd$j (A_a_prod_a_a_prod_a_prod_prod_llist$)A_a_prod_a_a_prod_a_prod_prod$)
(declare-fun ltl$j (A_a_prod_a_a_prod_a_prod_prod_llist$)A_a_prod_a_a_prod_a_prod_prod_llist$)
(declare-fun lCons$j (A_a_prod_a_a_prod_a_prod_prod$ A_a_prod_a_a_prod_a_prod_prod_llist$ )A_a_prod_a_a_prod_a_prod_prod_llist$)
(declare-fun f$ ()A_a_fun$ )
(declare-fun n$ ()Nat$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun lmap$ (A_a_fun$ )A_llist_a_llist_fun$ )
(declare-fun lzip$ (A_llist$ A_llist$ )A_a_prod_llist$ )
(declare-fun lmap$a (A_a_prod_a_fun$ A_a_prod_llist$ )A_llist$ )
(declare-fun lmap$b (A_a_a_prod_fun$ A_llist$ )A_a_prod_llist$ )
(declare-fun lmap$c (A_a_prod_a_a_prod_fun$ A_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$d (A_a_prod_a_prod_a_fun$ A_a_prod_a_prod_llist$ )A_llist$ )
(declare-fun lmap$e (A_a_a_prod_prod_a_fun$ A_a_a_prod_prod_llist$ )A_llist$ )
(declare-fun lmap$f (A_a_a_prod_a_prod_fun$ A_llist$ )A_a_prod_a_prod_llist$ )
(declare-fun lmap$g (A_a_a_a_prod_prod_fun$ A_llist$ )A_a_a_prod_prod_llist$ )
(declare-fun lmap$h (A_a_prod_a_a_prod_prod_a_fun$ A_a_prod_a_a_prod_prod_llist$ )A_llist$ )
(declare-fun lmap$i (A_a_prod_a_prod_a_a_prod_fun$ A_a_prod_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$j (A_a_prod_a_a_prod_prod_a_a_prod_fun$ A_a_prod_a_a_prod_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$k (A_a_a_prod_prod_a_a_prod_fun$ A_a_a_prod_prod_llist$ )A_a_prod_llist$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun lzip$a (A_llist$ A_a_prod_llist$ )A_a_a_prod_prod_llist$ )
(declare-fun lzip$b (A_a_prod_llist$ A_llist$ )A_a_prod_a_prod_llist$ )
(declare-fun lzip$c (A_a_prod_llist$ A_a_prod_llist$ )A_a_prod_a_a_prod_prod_llist$ )
(declare-fun lzip$d (A_llist$ A_a_prod_a_prod_llist$ )A_a_a_prod_a_prod_prod_llist$ )
(declare-fun lzip$e (A_llist$ A_a_a_prod_prod_llist$ )A_a_a_a_prod_prod_prod_llist$ )
(declare-fun lzip$f (A_a_prod_a_prod_llist$ A_llist$ )A_a_prod_a_prod_a_prod_llist$ )
(declare-fun lzip$g (A_a_a_prod_prod_llist$ A_llist$ )A_a_a_prod_prod_a_prod_llist$ )
(declare-fun lzip$h (A_llist$ A_a_prod_a_a_prod_prod_llist$ )A_a_a_prod_a_a_prod_prod_prod_llist$ )
(declare-fun lzip$i (A_a_prod_llist$ A_a_prod_a_prod_llist$ )A_a_prod_a_a_prod_a_prod_prod_llist$ )
(declare-fun compow$ ()Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ )
(declare-fun funpow$ ()Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ )
(declare-fun lnull$a (A_a_prod_llist$ )Bool )
(declare-fun lnull$b (A_a_prod_a_prod_llist$ )Bool )
(declare-fun lnull$c (A_a_a_prod_prod_llist$ )Bool )
(declare-fun lnull$d (A_a_prod_a_a_prod_prod_llist$ )Bool )
(declare-fun lnull$e (A_a_a_prod_a_prod_prod_llist$ )Bool )
(declare-fun lnull$f (A_a_a_a_prod_prod_prod_llist$ )Bool )
(declare-fun lnull$g (A_a_prod_a_prod_a_prod_llist$ )Bool )
(declare-fun lnull$h (A_a_a_prod_prod_a_prod_llist$ )Bool )
(declare-fun lnull$i (A_a_a_prod_a_a_prod_prod_prod_llist$ )Bool )
(declare-fun lnull$j (A_a_prod_a_a_prod_a_prod_prod_llist$ )Bool )
(declare-fun member$ (A_a_prod_a_a_prod_prod_llist$ A_a_prod_a_a_prod_prod_llist_set$ )Bool )
(declare-fun fun_app$ (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun member$a (A_a_prod_a_prod_llist$ A_a_prod_a_prod_llist_set$ )Bool )
(declare-fun member$b (A_a_a_prod_prod_llist$ A_a_a_prod_prod_llist_set$ )Bool )
(declare-fun member$c (A_a_prod_llist$ A_a_prod_llist_set$ )Bool )
(declare-fun member$d (A_llist$ A_llist_set$ )Bool )
(declare-fun fun_app$a (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$b (Nat_a_llist_a_llist_fun_a_llist_a_llist_fun_fun_fun$ Nat$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun fun_app$c (A_a_a_prod_fun$ A$ )A_a_prod$ )
(declare-fun fun_app$d (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod$ )
(declare-fun fun_app$e (A_a_prod_a_a_prod_prod_a_fun$ A_a_prod_a_a_prod_prod$ )A$ )
(declare-fun fun_app$f (A_a_prod_a_a_prod_prod_a_a_prod_fun$ A_a_prod_a_a_prod_prod$ )A_a_prod$ )
(declare-fun fun_app$g (A_a_prod_a_prod_a_fun$ A_a_prod_a_prod$ )A$ )
(declare-fun fun_app$h (A_a_prod_a_prod_a_a_prod_fun$ A_a_prod_a_prod$ )A_a_prod$ )
(declare-fun fun_app$i (A_a_a_prod_prod_a_fun$ A_a_a_prod_prod$ )A$ )
(declare-fun fun_app$j (A_a_a_prod_prod_a_a_prod_fun$ A_a_a_prod_prod$ )A_a_prod$ )
(declare-fun fun_app$k (A_a_prod_a_fun$ A_a_prod$ )A$ )
(declare-fun fun_app$l (A_a_fun$ A$ )A$ )
(assert (! (not (= (lnull$ (fun_app$ (fun_app$a (fun_app$b compow$ n$ )(lmap$ f$ ))xs$ ))(lnull$ xs$ ))):named a0 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (lnull$ (fun_app$ (lmap$ ?v0 )?v1 ))(lnull$ ?v1 ))):named a1 ))
(assert (! (forall ((?v0 A_a_prod_a_fun$ )(?v1 A_a_prod_llist$ ))(= (lnull$ (lmap$a ?v0 ?v1 ))(lnull$a ?v1 ))):named a2 ))
(assert (! (forall ((?v0 A_a_a_prod_fun$ )(?v1 A_llist$ ))(= (lnull$a (lmap$b ?v0 ?v1 ))(lnull$ ?v1 ))):named a3 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_prod_llist$ ))(= (lnull$a (lmap$c ?v0 ?v1 ))(lnull$a ?v1 ))):named a4 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_a_fun$ )(?v1 A_a_prod_a_prod_llist$ ))(= (lnull$ (lmap$d ?v0 ?v1 ))(lnull$b ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_a_fun$ )(?v1 A_a_a_prod_prod_llist$ ))(= (lnull$ (lmap$e ?v0 ?v1 ))(lnull$c ?v1 ))):named a6 ))
(assert (! (forall ((?v0 A_a_a_prod_a_prod_fun$ )(?v1 A_llist$ ))(= (lnull$b (lmap$f ?v0 ?v1 ))(lnull$ ?v1 ))):named a7 ))
(assert (! (forall ((?v0 A_a_a_a_prod_prod_fun$ )(?v1 A_llist$ ))(= (lnull$c (lmap$g ?v0 ?v1 ))(lnull$ ?v1 ))):named a8 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_a_fun$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (lnull$ (lmap$h ?v0 ?v1 ))(lnull$d ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_a_a_prod_fun$ )(?v1 A_a_prod_a_prod_llist$ ))(= (lnull$a (lmap$i ?v0 ?v1 ))(lnull$b ?v1 ))):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a12 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a13 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a14 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$b ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$c ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$c ?v1 )))false ))false )):named a16 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$b ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$b ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a17 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$c ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$c ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$d ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$d ?v1 )))false ))false )):named a19 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$b ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a20 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$d ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$d ?v1 ))))false ))false )):named a21 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 ))))false ))false )):named a22 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_a_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 )))false )(=> (not (forall ((?v1 A_a_a_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 ))))false ))false )):named a23 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 ))))false ))false )):named a24 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$ ?v1 ))))false ))false )):named a25 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (=> (and (lnull$d ?v0 )(lnull$d ?v1 ))false )(=> (or (not (lnull$d ?v0 ))(not (lnull$d ?v1 )))false ))false )):named a26 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (=> (and (lnull$b ?v0 )(lnull$b ?v1 ))false )(=> (or (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a27 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (and (=> (and (lnull$c ?v0 )(lnull$c ?v1 ))false )(=> (or (not (lnull$c ?v0 ))(not (lnull$c ?v1 )))false ))false )):named a28 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (and (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (or (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a29 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (or (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a30 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (=> (lnull$d ?v0 )false )(=> (not (lnull$d ?v0 ))false ))false )):named a31 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ ))(=> (and (=> (lnull$b ?v0 )false )(=> (not (lnull$b ?v0 ))false ))false )):named a32 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ ))(=> (and (=> (lnull$c ?v0 )false )(=> (not (lnull$c ?v0 ))false ))false )):named a33 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(=> (and (=> (lnull$a ?v0 )false )(=> (not (lnull$a ?v0 ))false ))false )):named a34 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (lnull$ ?v0 )false )(=> (not (lnull$ ?v0 ))false ))false )):named a35 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Nat$ )(?v2 A_llist$ ))(= (fun_app$ ?v0 (fun_app$ (fun_app$a (fun_app$b compow$ ?v1 )?v0 )?v2 ))(fun_app$ (fun_app$a (fun_app$b compow$ ?v1 )?v0 )(fun_app$ ?v0 ?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (not (lnull$a (lzip$ ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$ ?v1 ))))):named a37 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(= (not (lnull$c (lzip$a ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$a ?v1 ))))):named a38 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(= (not (lnull$b (lzip$b ?v0 ?v1 )))(and (not (lnull$a ?v0 ))(not (lnull$ ?v1 ))))):named a39 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(= (not (lnull$d (lzip$c ?v0 ?v1 )))(and (not (lnull$a ?v0 ))(not (lnull$a ?v1 ))))):named a40 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (not (lnull$e (lzip$d ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$b ?v1 ))))):named a41 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(= (not (lnull$f (lzip$e ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$c ?v1 ))))):named a42 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(= (not (lnull$g (lzip$f ?v0 ?v1 )))(and (not (lnull$b ?v0 ))(not (lnull$ ?v1 ))))):named a43 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(= (not (lnull$h (lzip$g ?v0 ?v1 )))(and (not (lnull$c ?v0 ))(not (lnull$ ?v1 ))))):named a44 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (not (lnull$i (lzip$h ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$d ?v1 ))))):named a45 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (not (lnull$j (lzip$i ?v0 ?v1 )))(and (not (lnull$a ?v0 ))(not (lnull$b ?v1 ))))):named a46 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (lnull$a (lzip$ ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$ ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(= (lnull$c (lzip$a ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$a ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(= (lnull$b (lzip$b ?v0 ?v1 ))(or (lnull$a ?v0 )(lnull$ ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(= (lnull$d (lzip$c ?v0 ?v1 ))(or (lnull$a ?v0 )(lnull$a ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (lnull$e (lzip$d ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$b ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(= (lnull$f (lzip$e ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$c ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(= (lnull$g (lzip$f ?v0 ?v1 ))(or (lnull$b ?v0 )(lnull$ ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(= (lnull$h (lzip$g ?v0 ?v1 ))(or (lnull$c ?v0 )(lnull$ ?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (lnull$i (lzip$h ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$d ?v1 )))):named a55 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (lnull$j (lzip$i ?v0 ?v1 ))(or (lnull$a ?v0 )(lnull$b ?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_fun$ ))(=> (not (lnull$ ?v0 ))(= (lhd$a (lmap$b ?v1 ?v0 ))(fun_app$c ?v1 (lhd$ ?v0 ))))):named a57 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_a_prod_fun$ ))(=> (not (lnull$a ?v0 ))(= (lhd$a (lmap$c ?v1 ?v0 ))(fun_app$d ?v1 (lhd$a ?v0 ))))):named a58 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_a_fun$ ))(=> (not (lnull$d ?v0 ))(= (lhd$ (lmap$h ?v1 ?v0 ))(fun_app$e ?v1 (lhd$d ?v0 ))))):named a59 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_a_a_prod_fun$ ))(=> (not (lnull$d ?v0 ))(= (lhd$a (lmap$j ?v1 ?v0 ))(fun_app$f ?v1 (lhd$d ?v0 ))))):named a60 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_a_fun$ ))(=> (not (lnull$b ?v0 ))(= (lhd$ (lmap$d ?v1 ?v0 ))(fun_app$g ?v1 (lhd$b ?v0 ))))):named a61 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_a_a_prod_fun$ ))(=> (not (lnull$b ?v0 ))(= (lhd$a (lmap$i ?v1 ?v0 ))(fun_app$h ?v1 (lhd$b ?v0 ))))):named a62 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_a_fun$ ))(=> (not (lnull$c ?v0 ))(= (lhd$ (lmap$e ?v1 ?v0 ))(fun_app$i ?v1 (lhd$c ?v0 ))))):named a63 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_a_a_prod_fun$ ))(=> (not (lnull$c ?v0 ))(= (lhd$a (lmap$k ?v1 ?v0 ))(fun_app$j ?v1 (lhd$c ?v0 ))))):named a64 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_fun$ ))(=> (not (lnull$a ?v0 ))(= (lhd$ (lmap$a ?v1 ?v0 ))(fun_app$k ?v1 (lhd$a ?v0 ))))):named a65 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_fun$ ))(=> (not (lnull$ ?v0 ))(= (lhd$ (fun_app$ (lmap$ ?v1 )?v0 ))(fun_app$l ?v1 (lhd$ ?v0 ))))):named a66 ))
(assert (! (= funpow$ compow$ ):named a67 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (or (lnull$ ?v0 )(lnull$ ?v1 ))(lnull$a (lzip$ ?v0 ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(=> (or (lnull$ ?v0 )(lnull$a ?v1 ))(lnull$c (lzip$a ?v0 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(=> (or (lnull$a ?v0 )(lnull$ ?v1 ))(lnull$b (lzip$b ?v0 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (or (lnull$a ?v0 )(lnull$a ?v1 ))(lnull$d (lzip$c ?v0 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (or (lnull$ ?v0 )(lnull$b ?v1 ))(lnull$e (lzip$d ?v0 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (or (lnull$ ?v0 )(lnull$c ?v1 ))(lnull$f (lzip$e ?v0 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(=> (or (lnull$b ?v0 )(lnull$ ?v1 ))(lnull$g (lzip$f ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(=> (or (lnull$c ?v0 )(lnull$ ?v1 ))(lnull$h (lzip$g ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (or (lnull$ ?v0 )(lnull$d ?v1 ))(lnull$i (lzip$h ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (or (lnull$a ?v0 )(lnull$b ?v1 ))(lnull$j (lzip$i ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))(not (lnull$a (lzip$ ?v0 ?v1 ))))):named a78 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$a ?v1 )))(not (lnull$c (lzip$a ?v0 ?v1 ))))):named a79 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$a ?v0 ))(not (lnull$ ?v1 )))(not (lnull$b (lzip$b ?v0 ?v1 ))))):named a80 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))(not (lnull$d (lzip$c ?v0 ?v1 ))))):named a81 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$b ?v1 )))(not (lnull$e (lzip$d ?v0 ?v1 ))))):named a82 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$c ?v1 )))(not (lnull$f (lzip$e ?v0 ?v1 ))))):named a83 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$b ?v0 ))(not (lnull$ ?v1 )))(not (lnull$g (lzip$f ?v0 ?v1 ))))):named a84 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(=> (and (not (lnull$c ?v0 ))(not (lnull$ ?v1 )))(not (lnull$h (lzip$g ?v0 ?v1 ))))):named a85 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (not (lnull$ ?v0 ))(not (lnull$d ?v1 )))(not (lnull$i (lzip$h ?v0 ?v1 ))))):named a86 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (not (lnull$a ?v0 ))(not (lnull$b ?v1 )))(not (lnull$j (lzip$i ?v0 ?v1 ))))):named a87 ))
(check-sat )
;(get-unsat-core )
