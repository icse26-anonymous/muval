;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_set_set$ 0 )
(declare-sort A_a_sum_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_set_set_set$ 0 )
(declare-sort A_a_sum_set_set$ 0 )
(declare-sort A_llist_set_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_a_llist_sum_set$ 0 )
(declare-sort A_llist_a_sum_set$ 0 )
(declare-sort A_llist_set_set_set$ 0 )
(declare-sort A_a_llist_set_sum_set$ 0 )
(declare-sort A_llist_set_a_sum_set$ 0 )
(declare-sort A_llist_a_llist_sum_set$ 0 )
(declare-sort A_llist_set_set_set_set$ 0 )
(declare-sort A_a_llist_set_sum_set_set$ 0 )
(declare-sort A_llist_a_llist_set_sum_set$ 0 )
(declare-sort A_llist_a_llist_sum_set_set$ 0 )
(declare-sort A_llist_set_a_llist_sum_set$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_a_llist_a_llist_sum_sum_set$ 0 )
(declare-sort A_llist_a_llist_sum_set_set_set$ 0 )
(declare-sort A_llist_set_a_llist_set_sum_set$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-datatypes ()((A_a_llist_set_sum$ (inl$ (projl$ A$ ))(inr$ (projr$ A_llist_set$ )))))
(declare-sort A_a_llist_set_sum_llist$ 0)
(declare-fun lNil$a ()A_a_llist_set_sum_llist$)
(declare-fun lhd$a (A_a_llist_set_sum_llist$)A_a_llist_set_sum$)
(declare-fun ltl$a (A_a_llist_set_sum_llist$)A_a_llist_set_sum_llist$)
(declare-fun lCons$a (A_a_llist_set_sum$ A_a_llist_set_sum_llist$ )A_a_llist_set_sum_llist$)
(declare-datatypes ()((A_a_sum$ (inl$a (projl$a A$ ))(inr$a (projr$a A$ )))))
(declare-sort A_a_sum_llist$ 0)
(declare-sort A_llist_a_llist_sum_set_llist$ 0)
(declare-sort A_llist_set_set_llist$ 0)
(declare-sort A_set_llist$ 0)
(declare-sort A_llist_set_llist$ 0)
(declare-fun lNil$b ()A_a_sum_llist$)
(declare-fun lhd$b (A_a_sum_llist$)A_a_sum$)
(declare-fun ltl$b (A_a_sum_llist$)A_a_sum_llist$)
(declare-fun lCons$b (A_a_sum$ A_a_sum_llist$ )A_a_sum_llist$)
(declare-fun lNil$c ()A_llist_a_llist_sum_set_llist$)
(declare-fun lhd$c (A_llist_a_llist_sum_set_llist$)A_llist_a_llist_sum_set$)
(declare-fun ltl$c (A_llist_a_llist_sum_set_llist$)A_llist_a_llist_sum_set_llist$)
(declare-fun lCons$c (A_llist_a_llist_sum_set$ A_llist_a_llist_sum_set_llist$ )A_llist_a_llist_sum_set_llist$)
(declare-fun lNil$d ()A_llist_set_set_llist$)
(declare-fun lhd$d (A_llist_set_set_llist$)A_llist_set_set$)
(declare-fun ltl$d (A_llist_set_set_llist$)A_llist_set_set_llist$)
(declare-fun lCons$d (A_llist_set_set$ A_llist_set_set_llist$ )A_llist_set_set_llist$)
(declare-fun lNil$e ()A_set_llist$)
(declare-fun lhd$e (A_set_llist$)A_set$)
(declare-fun ltl$e (A_set_llist$)A_set_llist$)
(declare-fun lCons$e (A_set$ A_set_llist$ )A_set_llist$)
(declare-fun lNil$f ()A_llist_set_llist$)
(declare-fun lhd$f (A_llist_set_llist$)A_llist_set$)
(declare-fun ltl$f (A_llist_set_llist$)A_llist_set_llist$)
(declare-fun lCons$f (A_llist_set$ A_llist_set_llist$ )A_llist_set_llist$)
(declare-datatypes ()((A_llist_a_llist_sum$ (inl$b (projl$b A_llist$ ))(inr$b (projr$b A_llist$ )))))
(declare-sort A_llist_a_llist_sum_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-fun lNil$g ()A_llist_a_llist_sum_llist$)
(declare-fun lhd$g (A_llist_a_llist_sum_llist$)A_llist_a_llist_sum$)
(declare-fun ltl$g (A_llist_a_llist_sum_llist$)A_llist_a_llist_sum_llist$)
(declare-fun lCons$g (A_llist_a_llist_sum$ A_llist_a_llist_sum_llist$ )A_llist_a_llist_sum_llist$)
(declare-fun lNil$h ()A_llist_llist$)
(declare-fun lhd$h (A_llist_llist$)A_llist$)
(declare-fun ltl$h (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$h (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun a$ ()A_llist_set$ )
(declare-fun pow$ (A_a_llist_set_sum_set$ )A_a_llist_set_sum_set_set$ )
(declare-fun lset$ (A_a_llist_set_sum_llist$ )A_a_llist_set_sum_set$ )
(declare-fun plus$ (A_llist_set$ A_llist_set$ )A_llist_a_llist_sum_set$ )
(declare-fun pow$a (A_a_sum_set$ )A_a_sum_set_set$ )
(declare-fun pow$b (A_llist_a_llist_sum_set_set$ )A_llist_a_llist_sum_set_set_set$ )
(declare-fun pow$c (A_llist_set_set_set$ )A_llist_set_set_set_set$ )
(declare-fun pow$d (A_set_set$ )A_set_set_set$ )
(declare-fun pow$e (A_set$ )A_set_set$ )
(declare-fun pow$f (A_llist_set_set$ )A_llist_set_set_set$ )
(declare-fun pow$g (A_llist_a_llist_sum_set$ )A_llist_a_llist_sum_set_set$ )
(declare-fun pow$h (A_llist_set$ )A_llist_set_set$ )
(declare-fun chain$ (A_llist_a_llist_bool_fun_fun$ A_llist_set$ )Bool )
(declare-fun lset$a (A_a_sum_llist$ )A_a_sum_set$ )
(declare-fun lset$b (A_llist_a_llist_sum_set_llist$ )A_llist_a_llist_sum_set_set$ )
(declare-fun lset$c (A_llist_set_set_llist$ )A_llist_set_set_set$ )
(declare-fun lset$d (A_set_llist$ )A_set_set$ )
(declare-fun lset$e (A_llist_set_llist$ )A_llist_set_set$ )
(declare-fun lset$f (A_llist_a_llist_sum_llist$ )A_llist_a_llist_sum_set$ )
(declare-fun lset$g (A_llist_llist$ )A_llist_set$ )
(declare-fun lset$h (A_llist$ )A_set$ )
(declare-fun plus$a (A_set$ A_set$ )A_a_sum_set$ )
(declare-fun plus$b (A_llist_set$ A_set$ )A_llist_a_sum_set$ )
(declare-fun plus$c (A_set$ A_llist_set$ )A_a_llist_sum_set$ )
(declare-fun plus$d (A_set$ A_llist_set_set$ )A_a_llist_set_sum_set$ )
(declare-fun plus$e (A_llist_set_set$ A_set$ )A_llist_set_a_sum_set$ )
(declare-fun plus$f (A_llist_set$ A_llist_set_set$ )A_llist_a_llist_set_sum_set$ )
(declare-fun plus$g (A_llist_set_set$ A_llist_set$ )A_llist_set_a_llist_sum_set$ )
(declare-fun plus$h (A_set$ A_llist_a_llist_sum_set$ )A_a_llist_a_llist_sum_sum_set$ )
(declare-fun plus$i (A_llist_set_set$ A_llist_set_set$ )A_llist_set_a_llist_set_sum_set$ )
(declare-fun finite$ (A_llist_set$ )Bool )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finite$a (A_a_llist_set_sum_set$ )Bool )
(declare-fun finite$b (A_a_sum_set$ )Bool )
(declare-fun finite$c (A_llist_a_llist_sum_set_set$ )Bool )
(declare-fun finite$d (A_llist_set_set_set$ )Bool )
(declare-fun finite$e (A_set_set$ )Bool )
(declare-fun finite$f (A_llist_set_set$ )Bool )
(declare-fun finite$g (A_llist_a_llist_sum_set$ )Bool )
(declare-fun finite$h (A_set$ )Bool )
(declare-fun finite$i (A_a_llist_set_sum_set_set$ )Bool )
(declare-fun finite$j (A_a_sum_set_set$ )Bool )
(declare-fun finite$k (A_llist_a_llist_sum_set_set_set$ )Bool )
(declare-fun finite$l (A_llist_set_set_set_set$ )Bool )
(declare-fun finite$m (A_set_set_set$ )Bool )
(declare-fun finite$n (A_llist_a_sum_set$ )Bool )
(declare-fun finite$o (A_a_llist_sum_set$ )Bool )
(declare-fun finite$p (A_llist_set_a_sum_set$ )Bool )
(declare-fun finite$q (A_llist_a_llist_set_sum_set$ )Bool )
(declare-fun finite$r (A_llist_set_a_llist_sum_set$ )Bool )
(declare-fun finite$s (A_a_llist_a_llist_sum_sum_set$ )Bool )
(declare-fun finite$t (A_llist_set_a_llist_set_sum_set$ )Bool )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun lfinite$ (A_llist$ )Bool )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$a (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun lfinite$a (A_a_llist_set_sum_llist$ )Bool )
(declare-fun lfinite$b (A_a_sum_llist$ )Bool )
(declare-fun lfinite$c (A_llist_a_llist_sum_set_llist$ )Bool )
(declare-fun lfinite$d (A_llist_set_set_llist$ )Bool )
(declare-fun lfinite$e (A_set_llist$ )Bool )
(declare-fun lfinite$f (A_llist_set_llist$ )Bool )
(declare-fun lfinite$g (A_llist_a_llist_sum_llist$ )Bool )
(declare-fun lfinite$h (A_llist_llist$ )Bool )
(assert (! (not (finite$ a$ )):named a0 ))
(assert (! (and (finite$ a$ )(forall ((?v0 A_llist$ ))(=> (member$ ?v0 a$ )(lfinite$ ?v0 )))):named a1 ))
(assert (! (chain$ lprefix$ a$ ):named a2 ))
(assert (! (forall ((?v0 A_a_llist_set_sum_llist$ ))(=> (lfinite$a ?v0 )(finite$a (lset$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_a_sum_llist$ ))(=> (lfinite$b ?v0 )(finite$b (lset$a ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_a_llist_sum_set_llist$ ))(=> (lfinite$c ?v0 )(finite$c (lset$b ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_set_set_llist$ ))(=> (lfinite$d ?v0 )(finite$d (lset$c ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_set_llist$ ))(=> (lfinite$e ?v0 )(finite$e (lset$d ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_set_llist$ ))(=> (lfinite$f ?v0 )(finite$f (lset$e ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_a_llist_sum_llist$ ))(=> (lfinite$g ?v0 )(finite$g (lset$f ?v0 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (lfinite$h ?v0 )(finite$ (lset$g ?v0 )))):named a10 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (lfinite$ ?v0 )(finite$h (lset$h ?v0 )))):named a11 ))
(assert (! (forall ((?v0 A_a_llist_set_sum_set$ ))(= (finite$i (pow$ ?v0 ))(finite$a ?v0 ))):named a12 ))
(assert (! (forall ((?v0 A_a_sum_set$ ))(= (finite$j (pow$a ?v0 ))(finite$b ?v0 ))):named a13 ))
(assert (! (forall ((?v0 A_llist_a_llist_sum_set_set$ ))(= (finite$k (pow$b ?v0 ))(finite$c ?v0 ))):named a14 ))
(assert (! (forall ((?v0 A_llist_set_set_set$ ))(= (finite$l (pow$c ?v0 ))(finite$d ?v0 ))):named a15 ))
(assert (! (forall ((?v0 A_set_set$ ))(= (finite$m (pow$d ?v0 ))(finite$e ?v0 ))):named a16 ))
(assert (! (forall ((?v0 A_set$ ))(= (finite$e (pow$e ?v0 ))(finite$h ?v0 ))):named a17 ))
(assert (! (forall ((?v0 A_llist_set_set$ ))(= (finite$d (pow$f ?v0 ))(finite$f ?v0 ))):named a18 ))
(assert (! (forall ((?v0 A_llist_a_llist_sum_set$ ))(= (finite$c (pow$g ?v0 ))(finite$g ?v0 ))):named a19 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (finite$f (pow$h ?v0 ))(finite$ ?v0 ))):named a20 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (finite$g (plus$ ?v0 ?v1 ))(and (finite$ ?v0 )(finite$ ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (finite$b (plus$a ?v0 ?v1 ))(and (finite$h ?v0 )(finite$h ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_set$ ))(= (finite$n (plus$b ?v0 ?v1 ))(and (finite$ ?v0 )(finite$h ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_llist_set$ ))(= (finite$o (plus$c ?v0 ?v1 ))(and (finite$h ?v0 )(finite$ ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_llist_set_set$ ))(= (finite$a (plus$d ?v0 ?v1 ))(and (finite$h ?v0 )(finite$f ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_set_set$ )(?v1 A_set$ ))(= (finite$p (plus$e ?v0 ?v1 ))(and (finite$f ?v0 )(finite$h ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set_set$ ))(= (finite$q (plus$f ?v0 ?v1 ))(and (finite$ ?v0 )(finite$f ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_set_set$ )(?v1 A_llist_set$ ))(= (finite$r (plus$g ?v0 ?v1 ))(and (finite$f ?v0 )(finite$ ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_llist_a_llist_sum_set$ ))(= (finite$s (plus$h ?v0 ?v1 ))(and (finite$h ?v0 )(finite$g ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_set_set$ )(?v1 A_llist_set_set$ ))(= (finite$t (plus$i ?v0 ?v1 ))(and (finite$f ?v0 )(finite$f ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$ (fun_app$a lprefix$ ?v0 )?v0 )):named a31 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$ (fun_app$a lprefix$ ?v0 )?v0 )):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$ (fun_app$a lprefix$ ?v0 )?v1 )(fun_app$ (fun_app$a lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a33 ))
(check-sat )
;(get-unsat-core )
