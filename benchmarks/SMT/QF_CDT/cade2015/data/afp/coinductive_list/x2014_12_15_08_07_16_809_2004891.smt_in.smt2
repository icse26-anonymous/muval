;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_a_set_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun x$ ()A$ )
(declare-fun lmap$ (A_a_fun$ )A_llist_a_llist_fun$ )
(declare-fun lset$ (A_llist$ )A_set$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (A_llist_a_set_fun$ A_llist$ )A_set$ )
(declare-fun lmember$ (A$ A_llist$ )Bool )
(declare-fun fun_app$a (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun gen_lset$ (A_set$ )A_llist_a_set_fun$ )
(declare-fun pred_llist$ (A_bool_fun$ A_llist$ )Bool )
(assert (! (not (= (lmember$ x$ lNil$ )false )):named a0 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (fun_app$ (gen_lset$ ?v0 )lNil$ )?v0 ):pattern ((gen_lset$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(! (= (lmember$ ?v0 ?v1 )(member$ ?v0 (lset$ ?v1 ))):pattern ((lmember$ ?v0 ?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(pred_llist$ ?v0 lNil$ )):named a3 ))
(assert (! (= (ltl$ lNil$ )lNil$ ):named a4 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (= (fun_app$a (lmap$ ?v0 )?v1 )lNil$ )(= ?v1 lNil$ ))):named a5 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (= lNil$ (fun_app$a (lmap$ ?v0 )?v1 ))(= ?v1 lNil$ ))):named a6 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$a (lmap$ ?v0 )lNil$ )lNil$ ):pattern ((lmap$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (lnull$ ?v0 )(= ?v0 lNil$ )):pattern ((lnull$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (= ?v0 lNil$ )(lnull$ ?v0 ))):named a9 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (lnull$ (fun_app$a (lmap$ ?v0 )?v1 ))(lnull$ ?v1 ))):named a10 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (ltl$ (fun_app$a (lmap$ ?v0 )?v1 ))(fun_app$a (lmap$ ?v0 )(ltl$ ?v1 )))):named a11 ))
(check-sat )
;(get-unsat-core )
