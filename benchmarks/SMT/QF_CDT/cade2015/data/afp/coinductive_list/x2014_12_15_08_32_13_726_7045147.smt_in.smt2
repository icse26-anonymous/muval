;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_b_llist_fun$ 0 )
(declare-sort B_llist_a_llist_fun$ 0 )
(declare-sort B_llist_b_llist_fun$ 0 )
(declare-sort A_a_llist_bool_fun_fun$ 0 )
(declare-sort A_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_bool_fun_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort B_a_llist_bool_fun_fun$ 0 )
(declare-sort B_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_bool_fun_fun$ 0 )
(declare-sort B_llist_b_bool_fun_fun$ 0 )
(declare-sort B_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_fun$ 0 )
(declare-sort B_llist_llist_b_llist_llist_fun$ 0 )
(declare-sort A_llist_a_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_b_llist_llist_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort B_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort B_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort B_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()B_llist$)
(declare-fun lhd$a (B_llist$)B$)
(declare-fun ltl$a (B_llist$)B_llist$)
(declare-fun lCons$a (B$ B_llist$ )B_llist$)
(declare-fun lNil$b ()A_llist_llist$)
(declare-fun lhd$b (A_llist_llist$)A_llist$)
(declare-fun ltl$b (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$b (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$c ()B_llist_llist$)
(declare-fun lhd$c (B_llist_llist$)B_llist$)
(declare-fun ltl$c (B_llist_llist$)B_llist_llist$)
(declare-fun lCons$c (B_llist$ B_llist_llist$ )B_llist_llist$)
(declare-fun lNil$d ()A_llist_llist_llist$)
(declare-fun lhd$d (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$d (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$d (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$e ()B_llist_llist_llist$)
(declare-fun lhd$e (B_llist_llist_llist$)B_llist_llist$)
(declare-fun ltl$e (B_llist_llist_llist$)B_llist_llist_llist$)
(declare-fun lCons$e (B_llist_llist$ B_llist_llist_llist$ )B_llist_llist_llist$)
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))))
(declare-fun uu$ ()A_b_bool_fun_fun$ )
(declare-fun uua$ (A_llist_llist_b_llist_llist_bool_fun_fun$ A_llist_llist_b_llist_llist_bool_fun_fun$ )A_llist_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun uub$ (B_b_bool_fun_fun$ B_b_bool_fun_fun$ )B_b_bool_fun_fun$ )
(declare-fun uuc$ (B_a_bool_fun_fun$ B_a_bool_fun_fun$ )B_a_bool_fun_fun$ )
(declare-fun uud$ (A_a_bool_fun_fun$ A_a_bool_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uue$ (A_llist_b_llist_bool_fun_fun$ A_llist_b_llist_bool_fun_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun uuf$ (A_b_bool_fun_fun$ A_b_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun uug$ ()B_b_bool_fun_fun$ )
(declare-fun uuh$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uui$ ()A_a_bool_fun_fun$ )
(declare-fun uuj$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uuk$ ()A_llist_b_llist_bool_fun_fun$ )
(declare-fun uul$ ()A_a_bool_fun_fun$ )
(declare-fun uum$ ()B_a_bool_fun_fun$ )
(declare-fun uun$ ()B_b_bool_fun_fun$ )
(declare-fun uuo$ ()A_llist_b_llist_bool_fun_fun$ )
(declare-fun uup$ ()A_a_llist_bool_fun_fun$ )
(declare-fun uuq$ ()A_b_llist_bool_fun_fun$ )
(declare-fun uur$ ()B_a_llist_bool_fun_fun$ )
(declare-fun uus$ ()B_b_llist_bool_fun_fun$ )
(declare-fun uut$ ()A_llist_a_bool_fun_fun$ )
(declare-fun uuu$ (A_b_bool_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun uuv$ (A_llist_llist_b_llist_llist_bool_fun_fun$ A_llist_llist_a_llist_llist_fun$ )A_llist_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun uuw$ (B_b_bool_fun_fun$ A_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uux$ (B_b_bool_fun_fun$ B_b_fun$ )B_b_bool_fun_fun$ )
(declare-fun uuy$ (B_a_bool_fun_fun$ B_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun uuz$ (B_a_bool_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun uva$ (A_a_bool_fun_fun$ B_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uvb$ (A_a_bool_fun_fun$ A_a_fun$ )A_a_bool_fun_fun$ )
(declare-fun uvc$ (A_llist_b_llist_bool_fun_fun$ A_llist_a_llist_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun uvd$ (A_b_bool_fun_fun$ A_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uve$ (A_b_bool_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun uvf$ (A_llist_llist_b_llist_llist_bool_fun_fun$ B_llist_llist_b_llist_llist_fun$ )A_llist_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun uvg$ (B_b_bool_fun_fun$ B_b_fun$ )B_b_bool_fun_fun$ )
(declare-fun uvh$ (B_b_bool_fun_fun$ A_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun uvi$ (B_a_bool_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun uvj$ (B_a_bool_fun_fun$ A_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uvk$ (A_a_bool_fun_fun$ B_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uvl$ (A_a_bool_fun_fun$ A_a_fun$ )A_a_bool_fun_fun$ )
(declare-fun uvm$ (A_llist_b_llist_bool_fun_fun$ B_llist_b_llist_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun uvn$ (A_b_bool_fun_fun$ B_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uvo$ (A_llist_a_llist_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun uvp$ (B_llist_b_llist_fun$ B_llist_b_llist_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun uvq$ (A_llist_b_llist_fun$ B_llist_b_llist_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun uvr$ (A_llist_a_llist_fun$ B_llist_a_llist_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun uvs$ (A_b_fun$ B_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uvt$ (A_a_fun$ B_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uvu$ (B_b_fun$ B_b_fun$ )B_b_bool_fun_fun$ )
(declare-fun uvv$ (B_a_fun$ A_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uvw$ (B_b_fun$ A_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun uvx$ (A_a_fun$ A_a_fun$ )A_a_bool_fun_fun$ )
(declare-fun xss$ ()A_llist_llist$ )
(declare-fun yss$ ()B_llist_llist$ )
(declare-fun lmap$ (B_a_fun$ )B_llist_a_llist_fun$ )
(declare-fun lmap$a (A_llist_llist_a_llist_llist_fun$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lmap$b (A_b_fun$ )A_llist_b_llist_fun$ )
(declare-fun lmap$c (B_b_fun$ )B_llist_b_llist_fun$ )
(declare-fun lmap$d (A_a_fun$ )A_llist_a_llist_fun$ )
(declare-fun lmap$e (A_llist_a_llist_fun$ )A_llist_llist_a_llist_llist_fun$ )
(declare-fun lmap$f (B_llist_llist_b_llist_llist_fun$ B_llist_llist_llist$ )B_llist_llist_llist$ )
(declare-fun lmap$g (B_llist_b_llist_fun$ )B_llist_llist_b_llist_llist_fun$ )
(declare-fun lmap$h (A_llist_b_llist_fun$ A_llist_llist$ )B_llist_llist$ )
(declare-fun lmap$i (B_llist_a_llist_fun$ B_llist_llist$ )A_llist_llist$ )
(declare-fun transp$ (B_b_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun lconcat$ (A_llist_llist$ )A_llist$ )
(declare-fun llength$ (A_llist$ )Enat$ )
(declare-fun transp$a (A_a_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (A_llist_b_llist_bool_fun_fun$ A_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$b (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$d (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$e (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$f (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$g (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$h (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$i (A_llist_llist_b_llist_llist_bool_fun_fun$ A_llist_llist$ )B_llist_llist_bool_fun$ )
(declare-fun fun_app$j (A_llist_llist_a_llist_llist_fun$ A_llist_llist$ )A_llist_llist$ )
(declare-fun fun_app$k (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$l (B_b_fun$ B$ )B$ )
(declare-fun fun_app$m (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$n (A_b_fun$ A$ )B$ )
(declare-fun fun_app$o (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$p (B_a_fun$ B$ )A$ )
(declare-fun fun_app$q (A_a_fun$ A$ )A$ )
(declare-fun fun_app$r (B_llist_llist_bool_fun$ B_llist_llist$ )Bool )
(declare-fun fun_app$s (B_llist_llist_b_llist_llist_fun$ B_llist_llist$ )B_llist_llist$ )
(declare-fun fun_app$t (B_llist_b_llist_fun$ B_llist$ )B_llist$ )
(declare-fun fun_app$u (A_llist_b_llist_fun$ A_llist$ )B_llist$ )
(declare-fun fun_app$v (B_llist_a_llist_fun$ B_llist$ )A_llist$ )
(declare-fun fun_app$w (A_llist_a_bool_fun_fun$ A_llist$ )A_bool_fun$ )
(declare-fun fun_app$x (B_b_llist_bool_fun_fun$ B$ )B_llist_bool_fun$ )
(declare-fun fun_app$y (B_a_llist_bool_fun_fun$ B$ )A_llist_bool_fun$ )
(declare-fun fun_app$z (A_b_llist_bool_fun_fun$ A$ )B_llist_bool_fun$ )
(declare-fun lconcat$a (B_llist_llist$ )B_llist$ )
(declare-fun lconcat$b (A_llist_llist_llist$ )A_llist_llist$ )
(declare-fun lconcat$c (B_llist_llist_llist$ )B_llist_llist$ )
(declare-fun llength$a (B_llist$ )Enat$ )
(declare-fun llength$b (A_llist_llist$ )Enat$ )
(declare-fun llength$c (B_llist_llist$ )Enat$ )
(declare-fun fun_app$aa (A_a_llist_bool_fun_fun$ A$ )A_llist_bool_fun$ )
(declare-fun fun_app$ab (B_llist_a_llist_bool_fun_fun$ B_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$ac (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$ad (A_llist_a_llist_llist_bool_fun_fun$ A_llist$ )A_llist_llist_bool_fun$ )
(declare-fun fun_app$ae (A_llist_b_llist_llist_bool_fun_fun$ A_llist$ )B_llist_llist_bool_fun$ )
(declare-fun fun_app$af (B_llist_a_llist_llist_bool_fun_fun$ B_llist$ )A_llist_llist_bool_fun$ )
(declare-fun fun_app$ag (B_llist_b_llist_llist_bool_fun_fun$ B_llist$ )B_llist_llist_bool_fun$ )
(declare-fun fun_app$ah (A_llist_llist_a_llist_bool_fun_fun$ A_llist_llist$ )A_llist_bool_fun$ )
(declare-fun llist_all2$ (A_llist_b_llist_bool_fun_fun$ )A_llist_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$a (A_b_bool_fun_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (A_llist_llist_b_llist_llist_bool_fun_fun$ A_llist_llist_llist$ B_llist_llist_llist$ )Bool )
(declare-fun llist_all2$c (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$d (B_a_bool_fun_fun$ )B_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$e (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$f (B_llist_b_llist_bool_fun_fun$ B_llist_llist$ B_llist_llist$ )Bool )
(declare-fun llist_all2$g (B_llist_a_llist_bool_fun_fun$ B_llist_llist$ A_llist_llist$ )Bool )
(declare-fun llist_all2$h (A_llist_a_llist_bool_fun_fun$ A_llist_llist$ A_llist_llist$ )Bool )
(declare-fun llist_all2$i (A_llist_a_llist_llist_bool_fun_fun$ A_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun llist_all2$j (A_a_llist_bool_fun_fun$ )A_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$k (A_llist_b_llist_llist_bool_fun_fun$ A_llist_llist$ B_llist_llist_llist$ )Bool )
(declare-fun llist_all2$l (A_b_llist_bool_fun_fun$ )A_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$m (B_llist_a_llist_llist_bool_fun_fun$ B_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun llist_all2$n (B_a_llist_bool_fun_fun$ )B_llist_a_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$o (B_llist_b_llist_llist_bool_fun_fun$ B_llist_llist$ B_llist_llist_llist$ )Bool )
(declare-fun llist_all2$p (B_b_llist_bool_fun_fun$ )B_llist_b_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$q (A_llist_llist_a_llist_bool_fun_fun$ A_llist_llist_llist$ A_llist_llist$ )Bool )
(declare-fun llist_all2$r (A_llist_a_bool_fun_fun$ )A_llist_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$s (B_llist_b_bool_fun_fun$ B_llist_llist$ )B_llist_bool_fun$ )
(declare-fun llist_all2$t (A_llist_b_bool_fun_fun$ A_llist_llist$ )B_llist_bool_fun$ )
(declare-fun llist_all2$u (B_llist_a_bool_fun_fun$ B_llist_llist$ )A_llist_bool_fun$ )
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a uuk$ ?v0 )?v1 )(= (llength$ ?v0 )(llength$a ?v1 ))):pattern ((fun_app$ (fun_app$a uuk$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$b uuh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$b uuh$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$c (fun_app$d uuj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$c (fun_app$d uuj$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$e (fun_app$f uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$e (fun_app$f uug$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$h uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$g (fun_app$h uui$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_a_llist_llist_fun$ )(?v2 A_llist_llist$ ))(! (= (fun_app$i (uuv$ ?v0 ?v1 )?v2 )(fun_app$i ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$i (uuv$ ?v0 ?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (uvc$ ?v0 ?v1 )?v2 )(fun_app$a ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$a (uvc$ ?v0 ?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$f (uux$ ?v0 ?v1 )?v2 )(fun_app$f ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$f (uux$ ?v0 ?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$m (uuw$ ?v0 ?v1 )?v2 )(fun_app$f ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$m (uuw$ ?v0 ?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$o (uuy$ ?v0 ?v1 )?v2 )(fun_app$o ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$o (uuy$ ?v0 ?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$h (uuz$ ?v0 ?v1 )?v2 )(fun_app$o ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$h (uuz$ ?v0 ?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$f (uuu$ ?v0 ?v1 )?v2 )(fun_app$m ?v0 (fun_app$p ?v1 ?v2 ))):pattern ((fun_app$f (uuu$ ?v0 ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$m (uvd$ ?v0 ?v1 )?v2 )(fun_app$m ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$m (uvd$ ?v0 ?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$o (uva$ ?v0 ?v1 )?v2 )(fun_app$h ?v0 (fun_app$p ?v1 ?v2 ))):pattern ((fun_app$o (uva$ ?v0 ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$h (uvb$ ?v0 ?v1 )?v2 )(fun_app$h ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$h (uvb$ ?v0 ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 B_llist_llist_b_llist_llist_fun$ )(?v2 A_llist_llist$ )(?v3 B_llist_llist$ ))(! (= (fun_app$r (fun_app$i (uvf$ ?v0 ?v1 )?v2 )?v3 )(fun_app$r (fun_app$i ?v0 ?v2 )(fun_app$s ?v1 ?v3 ))):pattern ((fun_app$r (fun_app$i (uvf$ ?v0 ?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_b_llist_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (uvm$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$a ?v0 ?v2 )(fun_app$t ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uvm$ ?v0 ?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$f (uvg$ ?v0 ?v1 )?v2 )?v3 )(fun_app$e (fun_app$f ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$f (uvg$ ?v0 ?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$o (uvh$ ?v0 ?v1 )?v2 )?v3 )(fun_app$e (fun_app$f ?v0 ?v2 )(fun_app$n ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$o (uvh$ ?v0 ?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$f (uvi$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$o ?v0 ?v2 )(fun_app$p ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$f (uvi$ ?v0 ?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$o (uvj$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$o ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$o (uvj$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$m (uvn$ ?v0 ?v1 )?v2 )?v3 )(fun_app$e (fun_app$m ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$m (uvn$ ?v0 ?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$h (uve$ ?v0 ?v1 )?v2 )?v3 )(fun_app$e (fun_app$m ?v0 ?v2 )(fun_app$n ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uve$ ?v0 ?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$m (uvk$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$h ?v0 ?v2 )(fun_app$p ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$m (uvk$ ?v0 ?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$h (uvl$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$h ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uvl$ ?v0 ?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B_llist_llist$ ))(! (= (fun_app$r (fun_app$i (uua$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$r (fun_app$i ?v0 ?v2 )?v3 )(fun_app$r (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$i (uua$ ?v0 ?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_b_llist_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (uue$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$a ?v0 ?v2 )?v3 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uue$ ?v0 ?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$f (uub$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$e (fun_app$f ?v0 ?v2 )?v3 )(fun_app$e (fun_app$f ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$f (uub$ ?v0 ?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$o (uuc$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$g (fun_app$o ?v0 ?v2 )?v3 )(fun_app$g (fun_app$o ?v1 ?v2 )?v3 ))):pattern ((fun_app$g (fun_app$o (uuc$ ?v0 ?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$m (uuf$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$e (fun_app$m ?v0 ?v2 )?v3 )(fun_app$e (fun_app$m ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$m (uuf$ ?v0 ?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$h (uud$ ?v0 ?v1 )?v2 )?v3 )(and (fun_app$g (fun_app$h ?v0 ?v2 )?v3 )(fun_app$g (fun_app$h ?v1 ?v2 )?v3 ))):pattern ((fun_app$g (fun_app$h (uud$ ?v0 ?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 B_llist_b_llist_fun$ )(?v1 B_llist_b_llist_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$b (uvp$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$t ?v0 ?v2 )(fun_app$t ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$b (uvp$ ?v0 ?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 B_llist_b_llist_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (uvq$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$u ?v0 ?v2 )(fun_app$t ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uvq$ ?v0 ?v1 )?v2 )?v3 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 B_llist_a_llist_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (uvr$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$k ?v0 ?v2 )(fun_app$v ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uvr$ ?v0 ?v1 )?v2 )?v3 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(! (= (fun_app$c (fun_app$d (uvo$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$k ?v0 ?v2 )(fun_app$k ?v1 ?v3 ))):pattern ((fun_app$c (fun_app$d (uvo$ ?v0 ?v1 )?v2 )?v3 )))):named a34 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$f (uvu$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$l ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$f (uvu$ ?v0 ?v1 )?v2 )?v3 )))):named a35 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_b_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$o (uvw$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$l ?v0 ?v2 )(fun_app$n ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$o (uvw$ ?v0 ?v1 )?v2 )?v3 )))):named a36 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_a_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$o (uvv$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$p ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$o (uvv$ ?v0 ?v1 )?v2 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$m (uvs$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$n ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$m (uvs$ ?v0 ?v1 )?v2 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$e (fun_app$m (uvt$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$q ?v0 ?v2 )(fun_app$p ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$m (uvt$ ?v0 ?v1 )?v2 )?v3 )))):named a39 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$h (uvx$ ?v0 ?v1 )?v2 )?v3 )(= (fun_app$q ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uvx$ ?v0 ?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a uuo$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$a uuo$ ?v0 )?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$w uut$ ?v0 )?v1 )true ):pattern ((fun_app$g (fun_app$w uut$ ?v0 )?v1 )))):named a42 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$x uus$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$x uus$ ?v0 )?v1 )))):named a43 ))
(assert (! (forall ((?v0 B$ )(?v1 A_llist$ ))(! (= (fun_app$c (fun_app$y uur$ ?v0 )?v1 )true ):pattern ((fun_app$c (fun_app$y uur$ ?v0 )?v1 )))):named a44 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$e (fun_app$f uun$ ?v0 )?v1 )true ):pattern ((fun_app$e (fun_app$f uun$ ?v0 )?v1 )))):named a45 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$o uum$ ?v0 )?v1 )true ):pattern ((fun_app$g (fun_app$o uum$ ?v0 )?v1 )))):named a46 ))
(assert (! (forall ((?v0 A$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$z uuq$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$z uuq$ ?v0 )?v1 )))):named a47 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(! (= (fun_app$c (fun_app$aa uup$ ?v0 )?v1 )true ):pattern ((fun_app$c (fun_app$aa uup$ ?v0 )?v1 )))):named a48 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$e (fun_app$m uu$ ?v0 )?v1 )true ):pattern ((fun_app$e (fun_app$m uu$ ?v0 )?v1 )))):named a49 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$h uul$ ?v0 )?v1 )true ):pattern ((fun_app$g (fun_app$h uul$ ?v0 )?v1 )))):named a50 ))
(assert (! (not (fun_app$r (fun_app$i (llist_all2$ (llist_all2$a uu$ ))xss$ )yss$ )):named a51 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v2 A_llist_llist_llist$ )(?v3 B_llist_llist_llist$ ))(= (llist_all2$b (uua$ ?v0 ?v1 )?v2 ?v3 )(and (llist_all2$b ?v0 ?v2 ?v3 )(llist_all2$b ?v1 ?v2 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c (uub$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v2 )?v3 )(fun_app$ (fun_app$b (llist_all2$c ?v1 )?v2 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d (uuc$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v2 )?v3 )(fun_app$c (fun_app$ab (llist_all2$d ?v1 )?v2 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e (uud$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v2 )?v3 )(fun_app$c (fun_app$d (llist_all2$e ?v1 )?v2 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_b_llist_bool_fun_fun$ )(?v2 A_llist_llist$ )(?v3 B_llist_llist$ ))(= (fun_app$r (fun_app$i (llist_all2$ (uue$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$r (fun_app$i (llist_all2$ ?v0 )?v2 )?v3 )(fun_app$r (fun_app$i (llist_all2$ ?v1 )?v2 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a (uuf$ ?v0 ?v1 ))?v2 )?v3 )(and (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v2 )?v3 )(fun_app$ (fun_app$a (llist_all2$a ?v1 )?v2 )?v3 )))):named a57 ))
(assert (! (= (llist_all2$c uug$ )uuh$ ):named a58 ))
(assert (! (= (llist_all2$e uui$ )uuj$ ):named a59 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 B_llist_llist_llist$ )(?v3 A_llist_llist_b_llist_llist_bool_fun_fun$ ))(=> (and (llist_all2$b ?v0 ?v1 ?v2 )(forall ((?v4 A_llist_llist$ )(?v5 B_llist_llist$ ))(=> (fun_app$r (fun_app$i ?v0 ?v4 )?v5 )(fun_app$r (fun_app$i ?v3 ?v4 )?v5 ))))(llist_all2$b ?v3 ?v1 ?v2 ))):named a60 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (fun_app$e (fun_app$f ?v0 ?v4 )?v5 )(fun_app$e (fun_app$f ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$b (llist_all2$c ?v3 )?v1 )?v2 ))):named a61 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$g (fun_app$o ?v0 ?v4 )?v5 )(fun_app$g (fun_app$o ?v3 ?v4 )?v5 ))))(fun_app$c (fun_app$ab (llist_all2$d ?v3 )?v1 )?v2 ))):named a62 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (fun_app$g (fun_app$h ?v0 ?v4 )?v5 )(fun_app$g (fun_app$h ?v3 ?v4 )?v5 ))))(fun_app$c (fun_app$d (llist_all2$e ?v3 )?v1 )?v2 ))):named a63 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist$ )(?v3 A_llist_b_llist_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$i (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 B_llist$ ))(=> (fun_app$ (fun_app$a ?v0 ?v4 )?v5 )(fun_app$ (fun_app$a ?v3 ?v4 )?v5 ))))(fun_app$r (fun_app$i (llist_all2$ ?v3 )?v1 )?v2 ))):named a64 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$e (fun_app$m ?v0 ?v4 )?v5 )(fun_app$e (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$a (llist_all2$a ?v3 )?v1 )?v2 ))):named a65 ))
(assert (! (fun_app$r (fun_app$i (llist_all2$ uuk$ )xss$ )yss$ ):named a66 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist$ ))(=> (fun_app$r (fun_app$i (llist_all2$ (llist_all2$a ?v0 ))?v1 )?v2 )(fun_app$ (fun_app$a (llist_all2$a ?v0 )(lconcat$ ?v1 ))(lconcat$a ?v2 )))):named a67 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 B_llist_llist_llist$ ))(=> (llist_all2$b (llist_all2$ ?v0 )?v1 ?v2 )(fun_app$r (fun_app$i (llist_all2$ ?v0 )(lconcat$b ?v1 ))(lconcat$c ?v2 )))):named a68 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 B_llist_llist$ ))(=> (llist_all2$f (llist_all2$c ?v0 )?v1 ?v2 )(fun_app$ (fun_app$b (llist_all2$c ?v0 )(lconcat$a ?v1 ))(lconcat$a ?v2 )))):named a69 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 A_llist_llist$ ))(=> (llist_all2$g (llist_all2$d ?v0 )?v1 ?v2 )(fun_app$c (fun_app$ab (llist_all2$d ?v0 )(lconcat$a ?v1 ))(lconcat$ ?v2 )))):named a70 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (llist_all2$h (llist_all2$e ?v0 )?v1 ?v2 )(fun_app$c (fun_app$d (llist_all2$e ?v0 )(lconcat$ ?v1 ))(lconcat$ ?v2 )))):named a71 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (llist_all2$i (llist_all2$j ?v0 )?v1 ?v2 )(fun_app$ac (fun_app$ad (llist_all2$j ?v0 )(lconcat$ ?v1 ))(lconcat$b ?v2 )))):named a72 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_llist_llist$ ))(=> (llist_all2$k (llist_all2$l ?v0 )?v1 ?v2 )(fun_app$r (fun_app$ae (llist_all2$l ?v0 )(lconcat$ ?v1 ))(lconcat$c ?v2 )))):named a73 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (llist_all2$m (llist_all2$n ?v0 )?v1 ?v2 )(fun_app$ac (fun_app$af (llist_all2$n ?v0 )(lconcat$a ?v1 ))(lconcat$b ?v2 )))):named a74 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ )(?v2 B_llist_llist_llist$ ))(=> (llist_all2$o (llist_all2$p ?v0 )?v1 ?v2 )(fun_app$r (fun_app$ag (llist_all2$p ?v0 )(lconcat$a ?v1 ))(lconcat$c ?v2 )))):named a75 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ ))(=> (llist_all2$q (llist_all2$r ?v0 )?v1 ?v2 )(fun_app$c (fun_app$ah (llist_all2$r ?v0 )(lconcat$b ?v1 ))(lconcat$ ?v2 )))):named a76 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e uul$ )?v0 )?v1 )(= (llength$ ?v0 )(llength$ ?v1 )))):named a77 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d uum$ )?v0 )?v1 )(= (llength$a ?v0 )(llength$ ?v1 )))):named a78 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c uun$ )?v0 )?v1 )(= (llength$a ?v0 )(llength$a ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a uu$ )?v0 )?v1 )(= (llength$ ?v0 )(llength$a ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 B_llist_llist$ ))(= (fun_app$r (fun_app$i (llist_all2$ uuo$ )?v0 )?v1 )(= (llength$b ?v0 )(llength$c ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ ))(= (fun_app$ac (fun_app$ad (llist_all2$j uup$ )?v0 )?v1 )(= (llength$ ?v0 )(llength$b ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist_llist$ ))(= (fun_app$r (fun_app$ae (llist_all2$l uuq$ )?v0 )?v1 )(= (llength$ ?v0 )(llength$c ?v1 )))):named a83 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist_llist$ ))(= (fun_app$ac (fun_app$af (llist_all2$n uur$ )?v0 )?v1 )(= (llength$a ?v0 )(llength$b ?v1 )))):named a84 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist_llist$ ))(= (fun_app$r (fun_app$ag (llist_all2$p uus$ )?v0 )?v1 )(= (llength$a ?v0 )(llength$c ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist$ ))(= (fun_app$c (fun_app$ah (llist_all2$r uut$ )?v0 )?v1 )(= (llength$b ?v0 )(llength$ ?v1 )))):named a86 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_llist$ ))(=> (and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )?v2 )(and (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v2 )?v3 )(transp$ ?v0 )))(fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )?v3 ))):named a87 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (and (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )?v2 )(and (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v2 )?v3 )(transp$a ?v0 )))(fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )?v3 ))):named a88 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )lNil$a )(= ?v1 lNil$ )):pattern ((fun_app$a (llist_all2$a ?v0 )?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$r (fun_app$i (llist_all2$ ?v0 )?v1 )lNil$c )(= ?v1 lNil$b )):pattern ((fun_app$i (llist_all2$ ?v0 )?v1 )))):named a90 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )lNil$a )(= ?v1 lNil$a )):pattern ((fun_app$b (llist_all2$c ?v0 )?v1 )))):named a91 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v1 )lNil$ )(= ?v1 lNil$a )):pattern ((fun_app$ab (llist_all2$d ?v0 )?v1 )))):named a92 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )lNil$ )(= ?v1 lNil$ )):pattern ((fun_app$d (llist_all2$e ?v0 )?v1 )))):named a93 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$ (llist_all2$s ?v0 ?v1 )lNil$a )(= ?v1 lNil$c )):pattern ((llist_all2$s ?v0 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$ (llist_all2$t ?v0 ?v1 )lNil$a )(= ?v1 lNil$b )):pattern ((llist_all2$t ?v0 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$c (llist_all2$u ?v0 ?v1 )lNil$ )(= ?v1 lNil$c )):pattern ((llist_all2$u ?v0 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$c (fun_app$ah (llist_all2$r ?v0 )?v1 )lNil$ )(= ?v1 lNil$b )):pattern ((fun_app$ah (llist_all2$r ?v0 )?v1 )))):named a97 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$r (fun_app$ag (llist_all2$p ?v0 )?v1 )lNil$c )(= ?v1 lNil$a )):pattern ((fun_app$ag (llist_all2$p ?v0 )?v1 )))):named a98 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a (llist_all2$a ?v0 )lNil$ )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$ (fun_app$a (llist_all2$a ?v0 )lNil$ )?v1 )))):named a99 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$r (fun_app$i (llist_all2$ ?v0 )lNil$b )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$r (fun_app$i (llist_all2$ ?v0 )lNil$b )?v1 )))):named a100 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$b (llist_all2$c ?v0 )lNil$a )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$ (fun_app$b (llist_all2$c ?v0 )lNil$a )?v1 )))):named a101 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )lNil$a )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$c (fun_app$ab (llist_all2$d ?v0 )lNil$a )?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$c (fun_app$d (llist_all2$e ?v0 )lNil$ )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$c (fun_app$d (llist_all2$e ?v0 )lNil$ )?v1 )))):named a103 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$r (fun_app$ag (llist_all2$p ?v0 )lNil$a )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$r (fun_app$ag (llist_all2$p ?v0 )lNil$a )?v1 )))):named a104 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$ac (fun_app$af (llist_all2$n ?v0 )lNil$a )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$ac (fun_app$af (llist_all2$n ?v0 )lNil$a )?v1 )))):named a105 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 B_llist_llist$ ))(! (= (fun_app$r (fun_app$ae (llist_all2$l ?v0 )lNil$ )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$r (fun_app$ae (llist_all2$l ?v0 )lNil$ )?v1 )))):named a106 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A_llist_llist$ ))(! (= (fun_app$ac (fun_app$ad (llist_all2$j ?v0 )lNil$ )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$ac (fun_app$ad (llist_all2$j ?v0 )lNil$ )?v1 )))):named a107 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (llist_all2$s ?v0 lNil$c )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$ (llist_all2$s ?v0 lNil$c )?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$ (fun_app$a (llist_all2$a ?v0 )(lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$e (fun_app$m ?v0 ?v1 )?v3 )(fun_app$ (fun_app$a (llist_all2$a ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$a (llist_all2$a ?v0 )(lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a109 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_llist$ )(?v3 B_llist$ )(?v4 B_llist_llist$ ))(! (= (fun_app$r (fun_app$i (llist_all2$ ?v0 )(lCons$b ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$ (fun_app$a ?v0 ?v1 )?v3 )(fun_app$r (fun_app$i (llist_all2$ ?v0 )?v2 )?v4 ))):pattern ((fun_app$r (fun_app$i (llist_all2$ ?v0 )(lCons$b ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a110 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$ (fun_app$b (llist_all2$c ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$e (fun_app$f ?v0 ?v1 )?v3 )(fun_app$ (fun_app$b (llist_all2$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$b (llist_all2$c ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a111 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )(lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$g (fun_app$o ?v0 ?v1 )?v3 )(fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v2 )?v4 ))):pattern ((fun_app$c (fun_app$ab (llist_all2$d ?v0 )(lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a112 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$c (fun_app$d (llist_all2$e ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$g (fun_app$h ?v0 ?v1 )?v3 )(fun_app$c (fun_app$d (llist_all2$e ?v0 )?v2 )?v4 ))):pattern ((fun_app$c (fun_app$d (llist_all2$e ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a113 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A_llist$ )(?v4 A_llist_llist$ ))(! (= (fun_app$ac (fun_app$ad (llist_all2$j ?v0 )(lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$c (fun_app$aa ?v0 ?v1 )?v3 )(fun_app$ac (fun_app$ad (llist_all2$j ?v0 )?v2 )?v4 ))):pattern ((fun_app$ac (fun_app$ad (llist_all2$j ?v0 )(lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a114 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 B_llist$ )(?v4 B_llist_llist$ ))(! (= (fun_app$r (fun_app$ae (llist_all2$l ?v0 )(lCons$ ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$ (fun_app$z ?v0 ?v1 )?v3 )(fun_app$r (fun_app$ae (llist_all2$l ?v0 )?v2 )?v4 ))):pattern ((fun_app$r (fun_app$ae (llist_all2$l ?v0 )(lCons$ ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a115 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 A_llist$ )(?v4 A_llist_llist$ ))(! (= (fun_app$ac (fun_app$af (llist_all2$n ?v0 )(lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$c (fun_app$y ?v0 ?v1 )?v3 )(fun_app$ac (fun_app$af (llist_all2$n ?v0 )?v2 )?v4 ))):pattern ((fun_app$ac (fun_app$af (llist_all2$n ?v0 )(lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a116 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 B_llist$ )(?v4 B_llist_llist$ ))(! (= (fun_app$r (fun_app$ag (llist_all2$p ?v0 )(lCons$a ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$ (fun_app$x ?v0 ?v1 )?v3 )(fun_app$r (fun_app$ag (llist_all2$p ?v0 )?v2 )?v4 ))):pattern ((fun_app$r (fun_app$ag (llist_all2$p ?v0 )(lCons$a ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a117 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$c (fun_app$ah (llist_all2$r ?v0 )(lCons$b ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$g (fun_app$w ?v0 ?v1 )?v3 )(fun_app$c (fun_app$ah (llist_all2$r ?v0 )?v2 )?v4 ))):pattern ((fun_app$c (fun_app$ah (llist_all2$r ?v0 )(lCons$b ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a118 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )(fun_app$v (lmap$ ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$b (llist_all2$c (uuu$ ?v0 ?v1 ))?v2 )?v3 ))):named a119 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_a_llist_llist_fun$ )(?v2 A_llist_llist_llist$ )(?v3 B_llist_llist_llist$ ))(= (llist_all2$b ?v0 (lmap$a ?v1 ?v2 )?v3 )(llist_all2$b (uuv$ ?v0 ?v1 )?v2 ?v3 ))):named a120 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )(fun_app$u (lmap$b ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$a (uuw$ ?v0 ?v1 ))?v2 )?v3 ))):named a121 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )(fun_app$t (lmap$c ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$b (llist_all2$c (uux$ ?v0 ?v1 ))?v2 )?v3 ))):named a122 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )(fun_app$t (lmap$c ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$ab (llist_all2$d (uuy$ ?v0 ?v1 ))?v2 )?v3 ))):named a123 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )(fun_app$u (lmap$b ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$d (llist_all2$e (uuz$ ?v0 ?v1 ))?v2 )?v3 ))):named a124 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )(fun_app$v (lmap$ ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$ab (llist_all2$d (uva$ ?v0 ?v1 ))?v2 )?v3 ))):named a125 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )(fun_app$k (lmap$d ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$d (llist_all2$e (uvb$ ?v0 ?v1 ))?v2 )?v3 ))):named a126 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist_llist$ )(?v3 B_llist_llist$ ))(= (fun_app$r (fun_app$i (llist_all2$ ?v0 )(fun_app$j (lmap$e ?v1 )?v2 ))?v3 )(fun_app$r (fun_app$i (llist_all2$ (uvc$ ?v0 ?v1 ))?v2 )?v3 ))):named a127 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )(fun_app$k (lmap$d ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$a (uvd$ ?v0 ?v1 ))?v2 )?v3 ))):named a128 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )(fun_app$v (lmap$ ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$b (llist_all2$c (uuu$ ?v0 ?v1 ))?v2 )?v3 ))):named a129 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_a_llist_llist_fun$ )(?v2 A_llist_llist_llist$ )(?v3 B_llist_llist_llist$ ))(= (llist_all2$b ?v0 (lmap$a ?v1 ?v2 )?v3 )(llist_all2$b (uuv$ ?v0 ?v1 )?v2 ?v3 ))):named a130 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )(fun_app$u (lmap$b ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$a (uuw$ ?v0 ?v1 ))?v2 )?v3 ))):named a131 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )(fun_app$t (lmap$c ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$b (llist_all2$c (uux$ ?v0 ?v1 ))?v2 )?v3 ))):named a132 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )(fun_app$t (lmap$c ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$ab (llist_all2$d (uuy$ ?v0 ?v1 ))?v2 )?v3 ))):named a133 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )(fun_app$u (lmap$b ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$d (llist_all2$e (uuz$ ?v0 ?v1 ))?v2 )?v3 ))):named a134 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )(fun_app$v (lmap$ ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$ab (llist_all2$d (uva$ ?v0 ?v1 ))?v2 )?v3 ))):named a135 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )(fun_app$k (lmap$d ?v1 )?v2 ))?v3 )(fun_app$c (fun_app$d (llist_all2$e (uvb$ ?v0 ?v1 ))?v2 )?v3 ))):named a136 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist_llist$ )(?v3 B_llist_llist$ ))(= (fun_app$r (fun_app$i (llist_all2$ ?v0 )(fun_app$j (lmap$e ?v1 )?v2 ))?v3 )(fun_app$r (fun_app$i (llist_all2$ (uvc$ ?v0 ?v1 ))?v2 )?v3 ))):named a137 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )(fun_app$k (lmap$d ?v1 )?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$a (uvd$ ?v0 ?v1 ))?v2 )?v3 ))):named a138 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )(fun_app$u (lmap$b ?v2 )?v3 ))(fun_app$c (fun_app$d (llist_all2$e (uve$ ?v0 ?v2 ))?v1 )?v3 ))):named a139 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 B_llist_llist_b_llist_llist_fun$ )(?v3 B_llist_llist_llist$ ))(= (llist_all2$b ?v0 ?v1 (lmap$f ?v2 ?v3 ))(llist_all2$b (uvf$ ?v0 ?v2 )?v1 ?v3 ))):named a140 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )(fun_app$t (lmap$c ?v2 )?v3 ))(fun_app$ (fun_app$b (llist_all2$c (uvg$ ?v0 ?v2 ))?v1 )?v3 ))):named a141 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )(fun_app$u (lmap$b ?v2 )?v3 ))(fun_app$c (fun_app$ab (llist_all2$d (uvh$ ?v0 ?v2 ))?v1 )?v3 ))):named a142 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v1 )(fun_app$v (lmap$ ?v2 )?v3 ))(fun_app$ (fun_app$b (llist_all2$c (uvi$ ?v0 ?v2 ))?v1 )?v3 ))):named a143 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v1 )(fun_app$k (lmap$d ?v2 )?v3 ))(fun_app$c (fun_app$ab (llist_all2$d (uvj$ ?v0 ?v2 ))?v1 )?v3 ))):named a144 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )(fun_app$v (lmap$ ?v2 )?v3 ))(fun_app$ (fun_app$a (llist_all2$a (uvk$ ?v0 ?v2 ))?v1 )?v3 ))):named a145 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )(fun_app$k (lmap$d ?v2 )?v3 ))(fun_app$c (fun_app$d (llist_all2$e (uvl$ ?v0 ?v2 ))?v1 )?v3 ))):named a146 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_b_llist_fun$ )(?v3 B_llist_llist$ ))(= (fun_app$r (fun_app$i (llist_all2$ ?v0 )?v1 )(fun_app$s (lmap$g ?v2 )?v3 ))(fun_app$r (fun_app$i (llist_all2$ (uvm$ ?v0 ?v2 ))?v1 )?v3 ))):named a147 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )(fun_app$t (lmap$c ?v2 )?v3 ))(fun_app$ (fun_app$a (llist_all2$a (uvn$ ?v0 ?v2 ))?v1 )?v3 ))):named a148 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )(fun_app$u (lmap$b ?v2 )?v3 ))(fun_app$c (fun_app$d (llist_all2$e (uve$ ?v0 ?v2 ))?v1 )?v3 ))):named a149 ))
(assert (! (forall ((?v0 A_llist_llist_b_llist_llist_bool_fun_fun$ )(?v1 A_llist_llist_llist$ )(?v2 B_llist_llist_b_llist_llist_fun$ )(?v3 B_llist_llist_llist$ ))(= (llist_all2$b ?v0 ?v1 (lmap$f ?v2 ?v3 ))(llist_all2$b (uvf$ ?v0 ?v2 )?v1 ?v3 ))):named a150 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )(fun_app$t (lmap$c ?v2 )?v3 ))(fun_app$ (fun_app$b (llist_all2$c (uvg$ ?v0 ?v2 ))?v1 )?v3 ))):named a151 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$ (fun_app$b (llist_all2$c ?v0 )?v1 )(fun_app$u (lmap$b ?v2 )?v3 ))(fun_app$c (fun_app$ab (llist_all2$d (uvh$ ?v0 ?v2 ))?v1 )?v3 ))):named a152 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v1 )(fun_app$v (lmap$ ?v2 )?v3 ))(fun_app$ (fun_app$b (llist_all2$c (uvi$ ?v0 ?v2 ))?v1 )?v3 ))):named a153 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$ab (llist_all2$d ?v0 )?v1 )(fun_app$k (lmap$d ?v2 )?v3 ))(fun_app$c (fun_app$ab (llist_all2$d (uvj$ ?v0 ?v2 ))?v1 )?v3 ))):named a154 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )(fun_app$v (lmap$ ?v2 )?v3 ))(fun_app$ (fun_app$a (llist_all2$a (uvk$ ?v0 ?v2 ))?v1 )?v3 ))):named a155 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$c (fun_app$d (llist_all2$e ?v0 )?v1 )(fun_app$k (lmap$d ?v2 )?v3 ))(fun_app$c (fun_app$d (llist_all2$e (uvl$ ?v0 ?v2 ))?v1 )?v3 ))):named a156 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_b_llist_fun$ )(?v3 B_llist_llist$ ))(= (fun_app$r (fun_app$i (llist_all2$ ?v0 )?v1 )(fun_app$s (lmap$g ?v2 )?v3 ))(fun_app$r (fun_app$i (llist_all2$ (uvm$ ?v0 ?v2 ))?v1 )?v3 ))):named a157 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )(fun_app$t (lmap$c ?v2 )?v3 ))(fun_app$ (fun_app$a (llist_all2$a (uvn$ ?v0 ?v2 ))?v1 )?v3 ))):named a158 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist_llist$ ))(= (= (fun_app$j (lmap$e ?v0 )?v1 )(fun_app$j (lmap$e ?v2 )?v3 ))(llist_all2$h (uvo$ ?v0 ?v2 )?v1 ?v3 ))):named a159 ))
(assert (! (forall ((?v0 B_llist_b_llist_fun$ )(?v1 B_llist_llist$ )(?v2 B_llist_b_llist_fun$ )(?v3 B_llist_llist$ ))(= (= (fun_app$s (lmap$g ?v0 )?v1 )(fun_app$s (lmap$g ?v2 )?v3 ))(llist_all2$f (uvp$ ?v0 ?v2 )?v1 ?v3 ))):named a160 ))
(assert (! (forall ((?v0 A_llist_b_llist_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_b_llist_fun$ )(?v3 B_llist_llist$ ))(= (= (lmap$h ?v0 ?v1 )(fun_app$s (lmap$g ?v2 )?v3 ))(fun_app$r (fun_app$i (llist_all2$ (uvq$ ?v0 ?v2 ))?v1 )?v3 ))):named a161 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_llist$ )(?v2 B_llist_a_llist_fun$ )(?v3 B_llist_llist$ ))(= (= (fun_app$j (lmap$e ?v0 )?v1 )(lmap$i ?v2 ?v3 ))(fun_app$r (fun_app$i (llist_all2$ (uvr$ ?v0 ?v2 ))?v1 )?v3 ))):named a162 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (= (fun_app$u (lmap$b ?v0 )?v1 )(fun_app$t (lmap$c ?v2 )?v3 ))(fun_app$ (fun_app$a (llist_all2$a (uvs$ ?v0 ?v2 ))?v1 )?v3 ))):named a163 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (= (fun_app$k (lmap$d ?v0 )?v1 )(fun_app$v (lmap$ ?v2 )?v3 ))(fun_app$ (fun_app$a (llist_all2$a (uvt$ ?v0 ?v2 ))?v1 )?v3 ))):named a164 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (= (fun_app$t (lmap$c ?v0 )?v1 )(fun_app$t (lmap$c ?v2 )?v3 ))(fun_app$ (fun_app$b (llist_all2$c (uvu$ ?v0 ?v2 ))?v1 )?v3 ))):named a165 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (= (fun_app$v (lmap$ ?v0 )?v1 )(fun_app$k (lmap$d ?v2 )?v3 ))(fun_app$c (fun_app$ab (llist_all2$d (uvv$ ?v0 ?v2 ))?v1 )?v3 ))):named a166 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (= (fun_app$t (lmap$c ?v0 )?v1 )(fun_app$u (lmap$b ?v2 )?v3 ))(fun_app$c (fun_app$ab (llist_all2$d (uvw$ ?v0 ?v2 ))?v1 )?v3 ))):named a167 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (= (fun_app$k (lmap$d ?v0 )?v1 )(fun_app$k (lmap$d ?v2 )?v3 ))(fun_app$c (fun_app$d (llist_all2$e (uvx$ ?v0 ?v2 ))?v1 )?v3 ))):named a168 ))
(check-sat )
;(get-unsat-core )
