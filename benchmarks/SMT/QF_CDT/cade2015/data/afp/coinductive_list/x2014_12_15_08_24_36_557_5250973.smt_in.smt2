;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_enat_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort B_llist_enat_fun$ 0 )
(declare-sort A_a_fun_a_a_bool_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_a_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_b_bool_fun_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort B_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()B_llist$)
(declare-fun lhd$a (B_llist$)B$)
(declare-fun ltl$a (B_llist$)B_llist$)
(declare-fun lCons$a (B$ B_llist$ )B_llist$)
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))))
(declare-fun p$ ()B_bool_fun$ )
(declare-fun uu$ ()A_b_bool_fun_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun ys$ ()B_llist$ )
(declare-fun uua$ ()A_a_bool_fun_fun$ )
(declare-fun uub$ ()B_a_bool_fun_fun$ )
(declare-fun uuc$ ()B_b_bool_fun_fun$ )
(declare-fun uud$ ()A_b_bool_fun_fun$ )
(declare-fun uue$ (A_bool_fun$ )A_a_bool_fun_fun$ )
(declare-fun uuf$ (B_bool_fun$ )B_a_bool_fun_fun$ )
(declare-fun uug$ (B_bool_fun$ )B_b_bool_fun_fun$ )
(declare-fun uuh$ (A_bool_fun$ )A_b_bool_fun_fun$ )
(declare-fun uui$ ()B_b_bool_fun_fun$ )
(declare-fun uuj$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uuk$ ()A_a_bool_fun_fun$ )
(declare-fun uul$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uum$ (A_b_bool_fun_fun$ )B_a_fun_b_b_bool_fun_fun_fun$ )
(declare-fun uun$ (B_b_bool_fun_fun$ )A_b_fun_a_b_bool_fun_fun_fun$ )
(declare-fun uuo$ (B_b_bool_fun_fun$ )B_b_fun_b_b_bool_fun_fun_fun$ )
(declare-fun uup$ (B_a_bool_fun_fun$ )B_b_fun_b_a_bool_fun_fun_fun$ )
(declare-fun uuq$ (B_a_bool_fun_fun$ )A_b_fun_a_a_bool_fun_fun_fun$ )
(declare-fun uur$ (A_a_bool_fun_fun$ )B_a_fun_b_a_bool_fun_fun_fun$ )
(declare-fun uus$ (A_a_bool_fun_fun$ )A_a_fun_a_a_bool_fun_fun_fun$ )
(declare-fun uut$ (A_b_bool_fun_fun$ )A_a_fun_a_b_bool_fun_fun_fun$ )
(declare-fun uuu$ (A_b_bool_fun_fun$ )A_b_fun_a_a_bool_fun_fun_fun$ )
(declare-fun uuv$ (B_b_bool_fun_fun$ )B_b_fun_b_b_bool_fun_fun_fun$ )
(declare-fun uuw$ (B_b_bool_fun_fun$ )A_b_fun_b_a_bool_fun_fun_fun$ )
(declare-fun uux$ (B_a_bool_fun_fun$ )B_a_fun_b_b_bool_fun_fun_fun$ )
(declare-fun uuy$ (B_a_bool_fun_fun$ )A_a_fun_b_a_bool_fun_fun_fun$ )
(declare-fun uuz$ (A_a_bool_fun_fun$ )B_a_fun_a_b_bool_fun_fun_fun$ )
(declare-fun uva$ (A_a_bool_fun_fun$ )A_a_fun_a_a_bool_fun_fun_fun$ )
(declare-fun uvb$ (A_b_bool_fun_fun$ )B_b_fun_a_b_bool_fun_fun_fun$ )
(declare-fun llcp$ (A_llist$ )A_llist_enat_fun$ )
(declare-fun lmap$ (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun lset$ (B_llist$ )B_set$ )
(declare-fun llcp$a (B_llist$ )B_llist_enat_fun$ )
(declare-fun lmap$a (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$b (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$c (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lset$a (A_llist$ )A_set$ )
(declare-fun lsetp$ (A_llist$ )A_bool_fun$ )
(declare-fun lsetp$a (B_llist$ )B_bool_fun$ )
(declare-fun member$ (B$ B_set$ )Bool )
(declare-fun collect$ (A_bool_fun$ )A_set$ )
(declare-fun fun_app$ (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun llength$ (A_llist$ )Enat$ )
(declare-fun lmember$ (A$ A_llist$ )Bool )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun collect$a (B_bool_fun$ )B_set$ )
(declare-fun fun_app$a (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$b (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$c (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$d (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$e (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$f (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$g (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$h (B_b_fun_b_b_bool_fun_fun_fun$ B_b_fun$ )B_b_bool_fun_fun$ )
(declare-fun fun_app$i (B_b_fun$ B$ )B$ )
(declare-fun fun_app$j (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$k (A_b_fun_a_b_bool_fun_fun_fun$ A_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$l (A_b_fun$ A$ )B$ )
(declare-fun fun_app$m (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$n (B_b_fun_b_a_bool_fun_fun_fun$ B_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun fun_app$o (A_b_fun_a_a_bool_fun_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun fun_app$p (B_a_fun_b_b_bool_fun_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun fun_app$q (B_a_fun$ B$ )A$ )
(declare-fun fun_app$r (A_a_fun_a_b_bool_fun_fun_fun$ A_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$s (A_a_fun$ A$ )A$ )
(declare-fun fun_app$t (B_a_fun_b_a_bool_fun_fun_fun$ B_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun fun_app$u (A_a_fun_a_a_bool_fun_fun_fun$ A_a_fun$ )A_a_bool_fun_fun$ )
(declare-fun fun_app$v (A_b_fun_b_a_bool_fun_fun_fun$ A_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun fun_app$w (A_a_fun_b_a_bool_fun_fun_fun$ A_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun fun_app$x (B_b_fun_a_b_bool_fun_fun_fun$ B_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$y (B_a_fun_a_b_bool_fun_fun_fun$ B_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun fun_app$z (A_llist_enat_fun$ A_llist$ )Enat$ )
(declare-fun llength$a (B_llist$ )Enat$ )
(declare-fun lmember$a (B$ B_llist$ )Bool )
(declare-fun fun_app$aa (B_llist_enat_fun$ B_llist$ )Enat$ )
(declare-fun llist_all2$ (A_b_bool_fun_fun$ A_llist$ )B_llist_bool_fun$ )
(declare-fun llist_all2$a (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (B_a_bool_fun_fun$ B_llist$ )A_llist_bool_fun$ )
(declare-fun llist_all2$c (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a uuj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uuj$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$b (fun_app$c uul$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uul$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$d (fun_app$e uui$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uui$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$f (fun_app$g uuk$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uuk$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$e (fun_app$h (uuo$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$h (uuo$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$k (uun$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$k (uun$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$m (fun_app$n (uup$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$n (uup$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$g (fun_app$o (uuq$ ?v0 )?v1 )?v2 )(fun_app$m ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$o (uuq$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$e (fun_app$p (uum$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$p (uum$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$r (uut$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$s ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$r (uut$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$m (fun_app$t (uur$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$t (uur$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$g (fun_app$u (uus$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$s ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$u (uus$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$e (uug$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e (uug$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$m (uuf$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 ?v1 )):pattern ((fun_app$f (fun_app$m (uuf$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$j (uuh$ ?v0 )?v1 )?v2 )(fun_app$f ?v0 ?v1 )):pattern ((fun_app$d (fun_app$j (uuh$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$g (uue$ ?v0 )?v1 )?v2 )(fun_app$f ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g (uue$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (fun_app$h (uuv$ ?v0 )?v1 )?v2 )?v3 )(fun_app$d (fun_app$e ?v0 ?v2 )(fun_app$i ?v1 ?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$h (uuv$ ?v0 )?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$f (fun_app$m (fun_app$v (uuw$ ?v0 )?v1 )?v2 )?v3 )(fun_app$d (fun_app$e ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$f (fun_app$m (fun_app$v (uuw$ ?v0 )?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$e (fun_app$p (uux$ ?v0 )?v1 )?v2 )?v3 )(fun_app$f (fun_app$m ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$p (uux$ ?v0 )?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$f (fun_app$m (fun_app$w (uuy$ ?v0 )?v1 )?v2 )?v3 )(fun_app$f (fun_app$m ?v0 ?v2 )(fun_app$s ?v1 ?v3 ))):pattern ((fun_app$f (fun_app$m (fun_app$w (uuy$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$j (fun_app$x (uvb$ ?v0 )?v1 )?v2 )?v3 )(fun_app$d (fun_app$j ?v0 ?v2 )(fun_app$i ?v1 ?v3 ))):pattern ((fun_app$d (fun_app$j (fun_app$x (uvb$ ?v0 )?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$f (fun_app$g (fun_app$o (uuu$ ?v0 )?v1 )?v2 )?v3 )(fun_app$d (fun_app$j ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$o (uuu$ ?v0 )?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$j (fun_app$y (uuz$ ?v0 )?v1 )?v2 )?v3 )(fun_app$f (fun_app$g ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$d (fun_app$j (fun_app$y (uuz$ ?v0 )?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$f (fun_app$g (fun_app$u (uva$ ?v0 )?v1 )?v2 )?v3 )(fun_app$f (fun_app$g ?v0 ?v2 )(fun_app$s ?v1 ?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$u (uva$ ?v0 )?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$d (fun_app$e uuc$ ?v0 )?v1 )true ):pattern ((fun_app$d (fun_app$e uuc$ ?v0 )?v1 )))):named a24 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$f (fun_app$m uub$ ?v0 )?v1 )true ):pattern ((fun_app$f (fun_app$m uub$ ?v0 )?v1 )))):named a25 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$d (fun_app$j uud$ ?v0 )?v1 )true ):pattern ((fun_app$d (fun_app$j uud$ ?v0 )?v1 )))):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$f (fun_app$g uua$ ?v0 )?v1 )true ):pattern ((fun_app$f (fun_app$g uua$ ?v0 )?v1 )))):named a27 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$j uu$ ?v0 )p$ ):pattern ((fun_app$j uu$ ?v0 )))):named a28 ))
(assert (! (not (= (fun_app$ (llist_all2$ uu$ xs$ )ys$ )(and (= (llength$ xs$ )(llength$a ys$ ))(forall ((?v0 B$ ))(=> (member$ ?v0 (lset$ ys$ ))(fun_app$d p$ ?v0 )))))):named a29 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a uua$ )?v0 )?v1 )(= (llength$ ?v0 )(llength$ ?v1 )))):named a30 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(= (fun_app$b (llist_all2$b uub$ ?v0 )?v1 )(= (llength$a ?v0 )(llength$ ?v1 )))):named a31 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c uuc$ )?v0 )?v1 )(= (llength$a ?v0 )(llength$a ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(= (fun_app$ (llist_all2$ uud$ ?v0 )?v1 )(= (llength$ ?v0 )(llength$a ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a (uue$ ?v0 ))?v1 )?v2 )(and (= (llength$ ?v1 )(llength$ ?v2 ))(forall ((?v3 A$ ))(=> (member$a ?v3 (lset$a ?v1 ))(fun_app$f ?v0 ?v3 )))))):named a34 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_llist$ )(?v2 A_llist$ ))(= (fun_app$b (llist_all2$b (uuf$ ?v0 )?v1 )?v2 )(and (= (llength$a ?v1 )(llength$ ?v2 ))(forall ((?v3 B$ ))(=> (member$ ?v3 (lset$ ?v1 ))(fun_app$d ?v0 ?v3 )))))):named a35 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_llist$ )(?v2 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c (uug$ ?v0 ))?v1 )?v2 )(and (= (llength$a ?v1 )(llength$a ?v2 ))(forall ((?v3 B$ ))(=> (member$ ?v3 (lset$ ?v1 ))(fun_app$d ?v0 ?v3 )))))):named a36 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 B_llist$ ))(= (fun_app$ (llist_all2$ (uuh$ ?v0 )?v1 )?v2 )(and (= (llength$ ?v1 )(llength$a ?v2 ))(forall ((?v3 A$ ))(=> (member$a ?v3 (lset$a ?v1 ))(fun_app$f ?v0 ?v3 )))))):named a37 ))
(assert (! (= (llist_all2$c uui$ )uuj$ ):named a38 ))
(assert (! (= (llist_all2$a uuk$ )uul$ ):named a39 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_bool_fun_fun$ ))(=> (forall ((?v2 A$ ))(=> (member$a ?v2 (lset$a ?v0 ))(fun_app$f (fun_app$g ?v1 ?v2 )?v2 )))(fun_app$b (fun_app$c (llist_all2$a ?v1 )?v0 )?v0 ))):named a40 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_b_bool_fun_fun$ ))(=> (forall ((?v2 B$ ))(=> (member$ ?v2 (lset$ ?v0 ))(fun_app$d (fun_app$e ?v1 ?v2 )?v2 )))(fun_app$ (fun_app$a (llist_all2$c ?v1 )?v0 )?v0 ))):named a41 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$b (llist_all2$b ?v0 ?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (and (member$ ?v4 (lset$ ?v1 ))(and (member$a ?v5 (lset$a ?v2 ))(fun_app$f (fun_app$m ?v0 ?v4 )?v5 )))(fun_app$f (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$b (llist_all2$b ?v3 ?v1 )?v2 ))):named a42 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (and (member$a ?v4 (lset$a ?v1 ))(and (member$a ?v5 (lset$a ?v2 ))(fun_app$f (fun_app$g ?v0 ?v4 )?v5 )))(fun_app$f (fun_app$g ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$c (llist_all2$a ?v3 )?v1 )?v2 ))):named a43 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (and (member$ ?v4 (lset$ ?v1 ))(and (member$ ?v5 (lset$ ?v2 ))(fun_app$d (fun_app$e ?v0 ?v4 )?v5 )))(fun_app$d (fun_app$e ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$a (llist_all2$c ?v3 )?v1 )?v2 ))):named a44 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$ (llist_all2$ ?v0 ?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (and (member$a ?v4 (lset$a ?v1 ))(and (member$ ?v5 (lset$ ?v2 ))(fun_app$d (fun_app$j ?v0 ?v4 )?v5 )))(fun_app$d (fun_app$j ?v3 ?v4 )?v5 ))))(fun_app$ (llist_all2$ ?v3 ?v1 )?v2 ))):named a45 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (fun_app$d (fun_app$e ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$a (llist_all2$c ?v3 )?v1 )?v2 ))):named a46 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$b (llist_all2$b ?v0 ?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$f (fun_app$m ?v0 ?v4 )?v5 )(fun_app$f (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$b (llist_all2$b ?v3 ?v1 )?v2 ))):named a47 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (fun_app$f (fun_app$g ?v0 ?v4 )?v5 )(fun_app$f (fun_app$g ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$c (llist_all2$a ?v3 )?v1 )?v2 ))):named a48 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$ (llist_all2$ ?v0 ?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$d (fun_app$j ?v0 ?v4 )?v5 )(fun_app$d (fun_app$j ?v3 ?v4 )?v5 ))))(fun_app$ (llist_all2$ ?v3 ?v1 )?v2 ))):named a49 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(= (llength$ ?v1 )(llength$ ?v2 )))):named a50 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ ))(=> (fun_app$b (llist_all2$b ?v0 ?v1 )?v2 )(= (llength$a ?v1 )(llength$ ?v2 )))):named a51 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (fun_app$ (fun_app$a (llist_all2$c ?v0 )?v1 )?v2 )(= (llength$a ?v1 )(llength$a ?v2 )))):named a52 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ ))(=> (fun_app$ (llist_all2$ ?v0 ?v1 )?v2 )(= (llength$ ?v1 )(llength$a ?v2 )))):named a53 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(= (member$a ?v0 (lset$a ?v1 ))(lmember$ ?v0 ?v1 ))):named a54 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(= (member$ ?v0 (lset$ ?v1 ))(lmember$a ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (lset$a ?v0 )(collect$ (lsetp$ ?v0 ))):pattern ((lset$a ?v0 )))):named a56 ))
(assert (! (forall ((?v0 B_llist$ ))(! (= (lset$ ?v0 )(collect$a (lsetp$a ?v0 ))):pattern ((lset$ ?v0 )))):named a57 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(=> (member$a ?v0 (lset$a ?v1 ))(fun_app$f (lsetp$ ?v1 )?v0 ))):named a58 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(=> (member$ ?v0 (lset$ ?v1 ))(fun_app$d (lsetp$a ?v1 )?v0 ))):named a59 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A$ ))(=> (fun_app$f (lsetp$ ?v0 )?v1 )(member$a ?v1 (lset$a ?v0 )))):named a60 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B$ ))(=> (fun_app$d (lsetp$a ?v0 )?v1 )(member$ ?v1 (lset$ ?v0 )))):named a61 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$z (llcp$ ?v0 )?v0 )(llength$ ?v0 )):pattern ((llcp$ ?v0 )))):named a62 ))
(assert (! (forall ((?v0 B_llist$ ))(! (= (fun_app$aa (llcp$a ?v0 )?v0 )(llength$a ?v0 )):pattern ((llcp$a ?v0 )))):named a63 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a (llist_all2$c ?v0 )?v1 )lNil$a )(= ?v1 lNil$a )):pattern ((fun_app$a (llist_all2$c ?v0 )?v1 )))):named a64 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$b (llist_all2$b ?v0 ?v1 )lNil$ )(= ?v1 lNil$a )):pattern ((llist_all2$b ?v0 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )lNil$ )(= ?v1 lNil$ )):pattern ((fun_app$c (llist_all2$a ?v0 )?v1 )))):named a66 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$ (llist_all2$ ?v0 ?v1 )lNil$a )(= ?v1 lNil$ )):pattern ((llist_all2$ ?v0 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a (llist_all2$c ?v0 )lNil$a )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$ (fun_app$a (llist_all2$c ?v0 )lNil$a )?v1 )))):named a68 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$b (llist_all2$b ?v0 lNil$a )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$b (llist_all2$b ?v0 lNil$a )?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$a ?v0 )lNil$ )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$b (fun_app$c (llist_all2$a ?v0 )lNil$ )?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$ (llist_all2$ ?v0 lNil$ )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$ (llist_all2$ ?v0 lNil$ )?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (llist_all2$ ?v0 (lmap$ ?v1 ?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$c (fun_app$p (uum$ ?v0 )?v1 ))?v2 )?v3 ))):named a72 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c ?v0 )(lmap$a ?v1 ?v2 ))?v3 )(fun_app$ (llist_all2$ (fun_app$k (uun$ ?v0 )?v1 )?v2 )?v3 ))):named a73 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c ?v0 )(lmap$b ?v1 ?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$c (fun_app$h (uuo$ ?v0 )?v1 ))?v2 )?v3 ))):named a74 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$b (llist_all2$b ?v0 (lmap$b ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$b (fun_app$n (uup$ ?v0 )?v1 )?v2 )?v3 ))):named a75 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$b (llist_all2$b ?v0 (lmap$a ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (fun_app$o (uuq$ ?v0 )?v1 ))?v2 )?v3 ))):named a76 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$ ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$b (fun_app$t (uur$ ?v0 )?v1 )?v2 )?v3 ))):named a77 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$c ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (fun_app$u (uus$ ?v0 )?v1 ))?v2 )?v3 ))):named a78 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (llist_all2$ ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$ (llist_all2$ (fun_app$r (uut$ ?v0 )?v1 )?v2 )?v3 ))):named a79 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (llist_all2$ ?v0 (lmap$ ?v1 ?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$c (fun_app$p (uum$ ?v0 )?v1 ))?v2 )?v3 ))):named a80 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c ?v0 )(lmap$a ?v1 ?v2 ))?v3 )(fun_app$ (llist_all2$ (fun_app$k (uun$ ?v0 )?v1 )?v2 )?v3 ))):named a81 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c ?v0 )(lmap$b ?v1 ?v2 ))?v3 )(fun_app$ (fun_app$a (llist_all2$c (fun_app$h (uuo$ ?v0 )?v1 ))?v2 )?v3 ))):named a82 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$b (llist_all2$b ?v0 (lmap$b ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$b (fun_app$n (uup$ ?v0 )?v1 )?v2 )?v3 ))):named a83 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$b (llist_all2$b ?v0 (lmap$a ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (fun_app$o (uuq$ ?v0 )?v1 ))?v2 )?v3 ))):named a84 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$ ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$b (fun_app$t (uur$ ?v0 )?v1 )?v2 )?v3 ))):named a85 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$c ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (fun_app$u (uus$ ?v0 )?v1 ))?v2 )?v3 ))):named a86 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$ (llist_all2$ ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$ (llist_all2$ (fun_app$r (uut$ ?v0 )?v1 )?v2 )?v3 ))):named a87 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$ (llist_all2$ ?v0 ?v1 )(lmap$a ?v2 ?v3 ))(fun_app$b (fun_app$c (llist_all2$a (fun_app$o (uuu$ ?v0 )?v2 ))?v1 )?v3 ))):named a88 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c ?v0 )?v1 )(lmap$b ?v2 ?v3 ))(fun_app$ (fun_app$a (llist_all2$c (fun_app$h (uuv$ ?v0 )?v2 ))?v1 )?v3 ))):named a89 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$c ?v0 )?v1 )(lmap$a ?v2 ?v3 ))(fun_app$b (llist_all2$b (fun_app$v (uuw$ ?v0 )?v2 )?v1 )?v3 ))):named a90 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$b ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(fun_app$ (fun_app$a (llist_all2$c (fun_app$p (uux$ ?v0 )?v2 ))?v1 )?v3 ))):named a91 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$b (llist_all2$b ?v0 ?v1 )(lmap$c ?v2 ?v3 ))(fun_app$b (llist_all2$b (fun_app$w (uuy$ ?v0 )?v2 )?v1 )?v3 ))):named a92 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )(lmap$ ?v2 ?v3 ))(fun_app$ (llist_all2$ (fun_app$y (uuz$ ?v0 )?v2 )?v1 )?v3 ))):named a93 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )(lmap$c ?v2 ?v3 ))(fun_app$b (fun_app$c (llist_all2$a (fun_app$u (uva$ ?v0 )?v2 ))?v1 )?v3 ))):named a94 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$ (llist_all2$ ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(fun_app$ (llist_all2$ (fun_app$x (uvb$ ?v0 )?v2 )?v1 )?v3 ))):named a95 ))
(check-sat )
;(get-unsat-core )
