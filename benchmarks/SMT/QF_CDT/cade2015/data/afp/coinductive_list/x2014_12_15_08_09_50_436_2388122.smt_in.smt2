;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_a_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_a_llist_fun$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_a_llist_llist_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_a_llist_llist_llist_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun x$ ()A$ )
(declare-fun y$ ()A_llist_set$ )
(declare-fun uu$ ()A_llist_a_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun inf$ (A_llist_set$ A_llist_set$ )A_llist_set$ )
(declare-fun the$ (A_bool_fun$ )A$ )
(declare-fun uua$ ()A_llist_bool_fun$ )
(declare-fun uub$ ()A_bool_fun$ )
(declare-fun uuc$ ()A_llist_a_llist_fun$ )
(declare-fun uud$ ()A_llist_llist_llist_a_llist_llist_llist_fun$ )
(declare-fun uue$ ()A_llist_llist_llist_bool_fun$ )
(declare-fun uuf$ ()A_llist_llist_a_llist_llist_fun$ )
(declare-fun uug$ ()A_llist_llist_bool_fun$ )
(declare-fun uuh$ ()A_llist_llist_llist_llist_a_llist_llist_llist_fun$ )
(declare-fun uui$ ()A_llist_llist_llist_llist_bool_fun$ )
(declare-fun uuj$ (A_llist_llist_llist_llist_set$ )A_llist_llist_llist_bool_fun$ )
(declare-fun uuk$ ()A_llist_llist_llist_a_llist_llist_fun$ )
(declare-fun uul$ (A_llist_llist_llist_set$ )A_llist_llist_bool_fun$ )
(declare-fun uum$ ()A_llist_llist_a_llist_fun$ )
(declare-fun uun$ (A_llist_llist_set$ )A_llist_bool_fun$ )
(declare-fun uuo$ (A_llist_set$ )A_bool_fun$ )
(declare-fun uup$ (A_llist_llist$ )A_llist_llist_llist_a_llist_llist_llist_fun$ )
(declare-fun uuq$ (A_llist$ )A_llist_llist_a_llist_llist_fun$ )
(declare-fun uur$ (A$ )A_llist_a_llist_fun$ )
(declare-fun inf$a (A_llist_llist_set$ A_llist_llist_set$ )A_llist_llist_set$ )
(declare-fun inf$b (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inf$c (A_llist_llist_llist_llist_set$ A_llist_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun lSup$ (A_llist_set$ )A_llist$ )
(declare-fun the$a (A_llist_llist_llist_bool_fun$ )A_llist_llist_llist$ )
(declare-fun the$b (A_llist_llist_bool_fun$ )A_llist_llist$ )
(declare-fun the$c (A_llist_bool_fun$ )A_llist$ )
(declare-fun image$ (A_llist_a_fun$ A_llist_set$ )A_set$ )
(declare-fun lSup$a (A_llist_llist_llist_set$ )A_llist_llist_llist$ )
(declare-fun lSup$b (A_llist_llist_set$ )A_llist_llist$ )
(declare-fun lSup$c (A_llist_llist_llist_llist_set$ )A_llist_llist_llist_llist$ )
(declare-fun lnull$ (A_llist_llist_llist_llist$ )Bool )
(declare-fun image$a (A_llist_llist_a_llist_fun$ A_llist_llist_set$ )A_llist_set$ )
(declare-fun image$b (A_llist_llist_llist_a_llist_llist_fun$ A_llist_llist_llist_set$ )A_llist_llist_set$ )
(declare-fun image$c (A_llist_llist_llist_llist_a_llist_llist_llist_fun$ A_llist_llist_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun image$d (A_llist_a_llist_fun$ A_llist_set$ )A_llist_set$ )
(declare-fun image$e (A_llist_llist_llist_a_llist_llist_llist_fun$ A_llist_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun image$f (A_llist_llist_a_llist_llist_fun$ A_llist_llist_set$ )A_llist_llist_set$ )
(declare-fun lnull$a (A_llist_llist_llist$ )Bool )
(declare-fun lnull$b (A_llist_llist$ )Bool )
(declare-fun lnull$c (A_llist$ )Bool )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun collect$ (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun member$a (A_llist$ A_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun collect$a (A_llist_llist_bool_fun$ )A_llist_llist_set$ )
(declare-fun collect$b (A_llist_llist_llist_bool_fun$ )A_llist_llist_llist_set$ )
(declare-fun collect$c (A_llist_llist_llist_llist_bool_fun$ )A_llist_llist_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$d (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$e (A_llist_llist_llist_a_llist_llist_llist_fun$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun fun_app$f (A_llist_llist_a_llist_llist_fun$ A_llist_llist$ )A_llist_llist$ )
(declare-fun fun_app$g (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$h (A_llist_llist_llist_llist_a_llist_llist_llist_fun$ A_llist_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun fun_app$i (A_llist_llist_llist_a_llist_llist_fun$ A_llist_llist_llist$ )A_llist_llist$ )
(declare-fun fun_app$j (A_llist_llist_a_llist_fun$ A_llist_llist$ )A_llist$ )
(declare-fun fun_app$k (A_llist_a_fun$ A_llist$ )A$ )
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$ uub$ ?v0 )(member$ ?v0 (image$ uu$ (inf$ y$ (collect$ uua$ ))))):pattern ((fun_app$ uub$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ ))(! (= (fun_app$a uui$ ?v0 )(not (lnull$ ?v0 ))):pattern ((fun_app$a uui$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(! (= (fun_app$b uue$ ?v0 )(not (lnull$a ?v0 ))):pattern ((fun_app$b uue$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$c uug$ ?v0 )(not (lnull$b ?v0 ))):pattern ((fun_app$c uug$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$d uua$ ?v0 )(not (lnull$c ?v0 ))):pattern ((fun_app$d uua$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(! (= (fun_app$e uud$ ?v0 )(ltl$b ?v0 )):pattern ((fun_app$e uud$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$f uuf$ ?v0 )(ltl$a ?v0 )):pattern ((fun_app$f uuf$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$g uuc$ ?v0 )(ltl$ ?v0 )):pattern ((fun_app$g uuc$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ ))(! (= (fun_app$h uuh$ ?v0 )(lhd$c ?v0 )):pattern ((fun_app$h uuh$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(! (= (fun_app$i uuk$ ?v0 )(lhd$b ?v0 )):pattern ((fun_app$i uuk$ ?v0 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$j uum$ ?v0 )(lhd$a ?v0 )):pattern ((fun_app$j uum$ ?v0 )))):named a10 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$k uu$ ?v0 )(lhd$ ?v0 )):pattern ((fun_app$k uu$ ?v0 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist$ ))(! (= (fun_app$d (uun$ ?v0 )?v1 )(member$a ?v1 (image$a uum$ (inf$a ?v0 (collect$a uug$ ))))):pattern ((fun_app$d (uun$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist$ ))(! (= (fun_app$c (uul$ ?v0 )?v1 )(member$b ?v1 (image$b uuk$ (inf$b ?v0 (collect$b uue$ ))))):pattern ((fun_app$c (uul$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_set$ )(?v1 A_llist_llist_llist$ ))(! (= (fun_app$b (uuj$ ?v0 )?v1 )(member$c ?v1 (image$c uuh$ (inf$c ?v0 (collect$c uui$ ))))):pattern ((fun_app$b (uuj$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A$ ))(! (= (fun_app$ (uuo$ ?v0 )?v1 )(member$ ?v1 (image$ uu$ (inf$ ?v0 (collect$ uua$ ))))):pattern ((fun_app$ (uuo$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ ))(! (= (fun_app$e (uup$ ?v0 )?v1 )(lCons$b ?v0 ?v1 )):pattern ((fun_app$e (uup$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ ))(! (= (fun_app$f (uuq$ ?v0 )?v1 )(lCons$a ?v0 ?v1 )):pattern ((fun_app$f (uuq$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(! (= (fun_app$g (uur$ ?v0 )?v1 )(lCons$ ?v0 ?v1 )):pattern ((fun_app$g (uur$ ?v0 )?v1 )))):named a18 ))
(assert (! (not (= (= (lSup$ y$ )(lCons$ x$ xs$ ))(and (exists ((?v0 A_llist$ ))(and (member$a ?v0 y$ )(not (lnull$c ?v0 ))))(and (= x$ (the$ uub$ ))(= xs$ (lSup$ (image$d uuc$ (inf$ y$ (collect$ uua$ ))))))))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (lnull$a (lSup$a ?v0 ))(forall ((?v1 A_llist_llist_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 ))))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (lnull$b (lSup$b ?v0 ))(forall ((?v1 A_llist_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$b ?v1 ))))):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (lnull$c (lSup$ ?v0 ))(forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$c ?v1 ))))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (not (lnull$a ?v0 ))(= (lCons$b (lhd$b ?v0 )(ltl$b ?v0 ))?v0 ))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (not (lnull$b ?v0 ))(= (lCons$a (lhd$a ?v0 )(ltl$a ?v0 ))?v0 ))):named a26 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (not (lnull$c ?v0 ))(= (lCons$ (lhd$ ?v0 )(ltl$ ?v0 ))?v0 ))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (ltl$b (lSup$a ?v0 ))(lSup$a (image$e uud$ (inf$b ?v0 (collect$b uue$ )))))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (ltl$a (lSup$b ?v0 ))(lSup$b (image$f uuf$ (inf$a ?v0 (collect$a uug$ )))))):named a29 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (ltl$ (lSup$ ?v0 ))(lSup$ (image$d uuc$ (inf$ ?v0 (collect$ uua$ )))))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_set$ ))(=> (exists ((?v1 A_llist_llist_llist_llist$ ))(and (member$d ?v1 ?v0 )(not (lnull$ ?v1 ))))(= (lhd$c (lSup$c ?v0 ))(the$a (uuj$ ?v0 ))))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (exists ((?v1 A_llist_llist_llist$ ))(and (member$c ?v1 ?v0 )(not (lnull$a ?v1 ))))(= (lhd$b (lSup$a ?v0 ))(the$b (uul$ ?v0 ))))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (exists ((?v1 A_llist_llist$ ))(and (member$b ?v1 ?v0 )(not (lnull$b ?v1 ))))(= (lhd$a (lSup$b ?v0 ))(the$c (uun$ ?v0 ))))):named a33 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (exists ((?v1 A_llist$ ))(and (member$a ?v1 ?v0 )(not (lnull$c ?v1 ))))(= (lhd$ (lSup$ ?v0 ))(the$ (uuo$ ?v0 ))))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (inf$b (image$e (uup$ ?v0 )?v1 )(collect$b uue$ ))(image$e (uup$ ?v0 )?v1 ))):named a35 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist_set$ ))(= (inf$a (image$f (uuq$ ?v0 )?v1 )(collect$a uug$ ))(image$f (uuq$ ?v0 )?v1 ))):named a36 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist_set$ ))(= (inf$ (image$d (uur$ ?v0 )?v1 )(collect$ uua$ ))(image$d (uur$ ?v0 )?v1 ))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(= (not (lnull$a ?v0 ))(exists ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(= ?v0 (lCons$b ?v1 ?v2 ))))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (not (lnull$b ?v0 ))(exists ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(= ?v0 (lCons$a ?v1 ?v2 ))))):named a39 ))
(assert (! (forall ((?v0 A_llist$ ))(= (not (lnull$c ?v0 ))(exists ((?v1 A$ )(?v2 A_llist$ ))(= ?v0 (lCons$ ?v1 ?v2 ))))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (not (lnull$a (lSup$a ?v0 )))(not (forall ((?v1 A_llist_llist_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 )))))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (not (lnull$b (lSup$b ?v0 )))(not (forall ((?v1 A_llist_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$b ?v1 )))))):named a42 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (not (lnull$c (lSup$ ?v0 )))(not (forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$c ?v1 )))))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ ))(! (= (lhd$b (lCons$b ?v0 ?v1 ))?v0 ):pattern ((lCons$b ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ ))(! (= (lhd$a (lCons$a ?v0 ?v1 ))?v0 ):pattern ((lCons$a ?v0 ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(! (= (lhd$ (lCons$ ?v0 ?v1 ))?v0 ):pattern ((lCons$ ?v0 ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ ))(! (= (ltl$a (lCons$a ?v0 ?v1 ))?v1 ):pattern ((lCons$a ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(! (= (ltl$ (lCons$ ?v0 ?v1 ))?v1 ):pattern ((lCons$ ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist_llist_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 )))false )(=> (not (forall ((?v1 A_llist_llist_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 ))))false ))false )):named a49 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$b ?v1 )))false )(=> (not (forall ((?v1 A_llist_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$b ?v1 ))))false ))false )):named a50 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$c ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$c ?v1 ))))false ))false )):named a51 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (=> (and (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (or (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a52 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (=> (and (lnull$b ?v0 )(lnull$b ?v1 ))false )(=> (or (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a53 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (lnull$c ?v0 )(lnull$c ?v1 ))false )(=> (or (not (lnull$c ?v0 ))(not (lnull$c ?v1 )))false ))false )):named a54 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (lnull$a ?v0 )false )(=> (not (lnull$a ?v0 ))false ))false )):named a55 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (lnull$b ?v0 )false )(=> (not (lnull$b ?v0 ))false ))false )):named a56 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (lnull$c ?v0 )false )(=> (not (lnull$c ?v0 ))false ))false )):named a57 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (= (lnull$a ?v0 )(lnull$a ?v1 ))(=> (and (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))(and (= (lhd$b ?v0 )(lhd$b ?v1 ))(= (ltl$b ?v0 )(ltl$b ?v1 )))))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (= (lnull$b ?v0 )(lnull$b ?v1 ))(=> (and (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))(and (= (lhd$a ?v0 )(lhd$a ?v1 ))(= (ltl$a ?v0 )(ltl$a ?v1 )))))(= ?v0 ?v1 ))):named a59 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (= (lnull$c ?v0 )(lnull$c ?v1 ))(=> (and (not (lnull$c ?v0 ))(not (lnull$c ?v1 )))(and (= (lhd$ ?v0 )(lhd$ ?v1 ))(= (ltl$ ?v0 )(ltl$ ?v1 )))))(= ?v0 ?v1 ))):named a60 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (= ?v0 (lCons$b ?v1 ?v2 ))(not (lnull$a ?v0 )))):named a61 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))(not (lnull$b ?v0 )))):named a62 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))(not (lnull$c ?v0 )))):named a63 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 )))(lnull$a (lSup$a ?v0 )))):named a64 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$b ?v1 )))(lnull$b (lSup$b ?v0 )))):named a65 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$c ?v1 )))(lnull$c (lSup$ ?v0 )))):named a66 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (not (forall ((?v1 A_llist_llist_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 ))))(not (lnull$a (lSup$a ?v0 ))))):named a67 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (not (forall ((?v1 A_llist_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$b ?v1 ))))(not (lnull$b (lSup$b ?v0 ))))):named a68 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (not (forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$c ?v1 ))))(not (lnull$c (lSup$ ?v0 ))))):named a69 ))
(check-sat )
;(get-unsat-core )
