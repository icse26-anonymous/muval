;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_a_llist_fun$ 0 )
(declare-sort A_llist_a_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_a_llist_llist_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_llist_a_fun$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_a_llist_llist_fun$ 0 )
(declare-sort A_llist_llist_a_llist_fun$ 0 )
(declare-sort A_llist_llist_a_llist_llist_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun xss$ ()A_llist_llist$ )
(declare-fun lmap$ (A_llist_a_llist_llist_fun$ A_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lset$ (A_llist_llist_llist$ )A_llist_llist_set$ )
(declare-fun lmap$a (A_a_llist_llist_fun$ A_llist$ )A_llist_llist_llist$ )
(declare-fun lmap$b (A_llist_llist_a_fun$ A_llist_llist_llist$ )A_llist$ )
(declare-fun lmap$c (A_llist_llist_a_llist_fun$ A_llist_llist_llist$ )A_llist_llist$ )
(declare-fun lmap$d (A_llist_llist_a_llist_llist_fun$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lmap$e (A_llist_a_fun$ )A_llist_llist_a_llist_fun$ )
(declare-fun lmap$f (A_llist_a_llist_fun$ )A_llist_llist_a_llist_llist_fun$ )
(declare-fun lmap$g (A_a_fun$ )A_llist_a_llist_fun$ )
(declare-fun lmap$h (A_a_llist_fun$ )A_llist_a_llist_llist_fun$ )
(declare-fun lnull$ (A_llist_llist$ )Bool )
(declare-fun lset$a (A_llist_llist$ )A_llist_set$ )
(declare-fun lset$b (A_llist$ )A_set$ )
(declare-fun lnull$a (A_llist$ )Bool )
(declare-fun lnull$b (A_llist_llist_llist$ )Bool )
(declare-fun member$ (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun fun_app$ (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lconcat$ (A_llist_llist$ )A_llist$ )
(declare-fun lprefix$ (A_llist_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist$ A_llist_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun fun_app$a (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$b (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$c (A_llist_llist_a_llist_llist_fun$ A_llist_llist$ )A_llist_llist$ )
(declare-fun fun_app$d (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$e (A_llist_a_llist_llist_fun$ A_llist$ )A_llist_llist$ )
(declare-fun fun_app$f (A_a_llist_llist_fun$ A$ )A_llist_llist$ )
(declare-fun fun_app$g (A_llist_llist_a_fun$ A_llist_llist$ )A$ )
(declare-fun fun_app$h (A_llist_llist_a_llist_fun$ A_llist_llist$ )A_llist$ )
(declare-fun fun_app$i (A_llist_a_fun$ A_llist$ )A$ )
(declare-fun fun_app$j (A_a_fun$ A$ )A$ )
(declare-fun fun_app$k (A_a_llist_fun$ A$ )A_llist$ )
(declare-fun lappend$a (A_llist_llist$ )A_llist_llist_a_llist_llist_fun$ )
(declare-fun lappend$b (A_llist$ )A_llist_a_llist_fun$ )
(declare-fun lprefix$a (A_llist_llist$ )A_llist_llist_bool_fun$ )
(declare-fun lprefix$b (A_llist$ )A_llist_bool_fun$ )
(declare-fun ltakeWhile$ (A_llist_llist_bool_fun$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun ltakeWhile$a (A_llist_bool_fun$ )A_llist_llist_a_llist_llist_fun$ )
(declare-fun ltakeWhile$b (A_bool_fun$ )A_llist_a_llist_fun$ )
(assert (! (not (= (lhd$ (lconcat$ xss$ ))(lhd$ (lhd$a xss$ )))):named a0 ))
(assert (! (not (lnull$ xss$ )):named a1 ))
(assert (! (not (lnull$a (lhd$a xss$ ))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_bool_fun$ ))(=> (and (=> (or (lnull$b ?v0 )(not (fun_app$ ?v1 (lhd$b ?v0 ))))false )(=> (and (not (lnull$b ?v0 ))(fun_app$ ?v1 (lhd$b ?v0 )))false ))false )):named a3 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_bool_fun$ ))(=> (and (=> (or (lnull$ ?v0 )(not (fun_app$a ?v1 (lhd$a ?v0 ))))false )(=> (and (not (lnull$ ?v0 ))(fun_app$a ?v1 (lhd$a ?v0 )))false ))false )):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (and (=> (or (lnull$a ?v0 )(not (fun_app$b ?v1 (lhd$ ?v0 ))))false )(=> (and (not (lnull$a ?v0 ))(fun_app$b ?v1 (lhd$ ?v0 )))false ))false )):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$b ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$b ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (=> (or (lnull$b ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$b ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$b ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$b ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (=> (or (lnull$b ?v0 )(lnull$b ?v1 ))false )(=> (and (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a10 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist_llist_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$b ?v1 )))false )(=> (not (forall ((?v1 A_llist_llist_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$b ?v1 ))))false ))false )):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_llist_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$ ?v1 ))))false ))false )):named a16 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$a ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$a ?v1 ))))false ))false )):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (=> (and (lnull$b ?v0 )(lnull$b ?v1 ))false )(=> (or (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a18 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (=> (and (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (or (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (or (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (lnull$b ?v0 )false )(=> (not (lnull$b ?v0 ))false ))false )):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (lnull$ ?v0 )false )(=> (not (lnull$ ?v0 ))false ))false )):named a22 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (lnull$a ?v0 )false )(=> (not (lnull$a ?v0 ))false ))false )):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ ))(= (not (lnull$b (ltakeWhile$ ?v0 ?v1 )))(and (not (lnull$b ?v1 ))(fun_app$ ?v0 (lhd$b ?v1 ))))):named a24 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(= (not (lnull$ (fun_app$c (ltakeWhile$a ?v0 )?v1 )))(and (not (lnull$ ?v1 ))(fun_app$a ?v0 (lhd$a ?v1 ))))):named a25 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(= (not (lnull$a (fun_app$d (ltakeWhile$b ?v0 )?v1 )))(and (not (lnull$a ?v1 ))(fun_app$b ?v0 (lhd$ ?v1 ))))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ ))(= (lnull$b (ltakeWhile$ ?v0 ?v1 ))(or (lnull$b ?v1 )(not (fun_app$ ?v0 (lhd$b ?v1 )))))):named a27 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(= (lnull$ (fun_app$c (ltakeWhile$a ?v0 )?v1 ))(or (lnull$ ?v1 )(not (fun_app$a ?v0 (lhd$a ?v1 )))))):named a28 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(= (lnull$a (fun_app$d (ltakeWhile$b ?v0 )?v1 ))(or (lnull$a ?v1 )(not (fun_app$b ?v0 (lhd$ ?v1 )))))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ ))(= (lnull$b (ltakeWhile$ ?v0 ?v1 ))(=> (not (lnull$b ?v1 ))(not (fun_app$ ?v0 (lhd$b ?v1 )))))):named a30 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(= (lnull$ (fun_app$c (ltakeWhile$a ?v0 )?v1 ))(=> (not (lnull$ ?v1 ))(not (fun_app$a ?v0 (lhd$a ?v1 )))))):named a31 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(= (lnull$a (fun_app$d (ltakeWhile$b ?v0 )?v1 ))(=> (not (lnull$a ?v1 ))(not (fun_app$b ?v0 (lhd$ ?v1 )))))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (lhd$b (lappend$ ?v0 ?v1 ))(ite (lnull$b ?v0 )(lhd$b ?v1 )(lhd$b ?v0 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (lhd$a (fun_app$c (lappend$a ?v0 )?v1 ))(ite (lnull$ ?v0 )(lhd$a ?v1 )(lhd$a ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (lhd$ (fun_app$d (lappend$b ?v0 )?v1 ))(ite (lnull$a ?v0 )(lhd$ ?v1 )(lhd$ ?v0 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_a_llist_llist_fun$ ))(=> (not (lnull$ ?v0 ))(= (lhd$b (lmap$ ?v1 ?v0 ))(fun_app$e ?v1 (lhd$a ?v0 ))))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_llist_llist_fun$ ))(=> (not (lnull$a ?v0 ))(= (lhd$b (lmap$a ?v1 ?v0 ))(fun_app$f ?v1 (lhd$ ?v0 ))))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_a_fun$ ))(=> (not (lnull$b ?v0 ))(= (lhd$ (lmap$b ?v1 ?v0 ))(fun_app$g ?v1 (lhd$b ?v0 ))))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_a_llist_fun$ ))(=> (not (lnull$b ?v0 ))(= (lhd$a (lmap$c ?v1 ?v0 ))(fun_app$h ?v1 (lhd$b ?v0 ))))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_a_llist_llist_fun$ ))(=> (not (lnull$b ?v0 ))(= (lhd$b (lmap$d ?v1 ?v0 ))(fun_app$c ?v1 (lhd$b ?v0 ))))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_a_fun$ ))(=> (not (lnull$ ?v0 ))(= (lhd$ (fun_app$h (lmap$e ?v1 )?v0 ))(fun_app$i ?v1 (lhd$a ?v0 ))))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_a_llist_fun$ ))(=> (not (lnull$ ?v0 ))(= (lhd$a (fun_app$c (lmap$f ?v1 )?v0 ))(fun_app$d ?v1 (lhd$a ?v0 ))))):named a42 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_fun$ ))(=> (not (lnull$a ?v0 ))(= (lhd$ (fun_app$d (lmap$g ?v1 )?v0 ))(fun_app$j ?v1 (lhd$ ?v0 ))))):named a43 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_llist_fun$ ))(=> (not (lnull$a ?v0 ))(= (lhd$a (fun_app$e (lmap$h ?v1 )?v0 ))(fun_app$k ?v1 (lhd$ ?v0 ))))):named a44 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (lprefix$ ?v0 ?v1 )(not (lnull$b ?v0 )))(= (lhd$b ?v0 )(lhd$b ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (fun_app$ (lprefix$a ?v0 )?v1 )(not (lnull$ ?v0 )))(= (lhd$a ?v0 )(lhd$a ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$a (lprefix$b ?v0 )?v1 )(not (lnull$a ?v0 )))(= (lhd$ ?v0 )(lhd$ ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_bool_fun$ ))(=> (or (lnull$b ?v0 )(not (fun_app$ ?v1 (lhd$b ?v0 ))))(lnull$b (ltakeWhile$ ?v1 ?v0 )))):named a48 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_bool_fun$ ))(=> (or (lnull$ ?v0 )(not (fun_app$a ?v1 (lhd$a ?v0 ))))(lnull$ (fun_app$c (ltakeWhile$a ?v1 )?v0 )))):named a49 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (or (lnull$a ?v0 )(not (fun_app$b ?v1 (lhd$ ?v0 ))))(lnull$a (fun_app$d (ltakeWhile$b ?v1 )?v0 )))):named a50 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_bool_fun$ ))(=> (and (not (lnull$b ?v0 ))(fun_app$ ?v1 (lhd$b ?v0 )))(= (lhd$b (ltakeWhile$ ?v1 ?v0 ))(lhd$b ?v0 )))):named a51 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_bool_fun$ ))(=> (and (not (lnull$ ?v0 ))(fun_app$a ?v1 (lhd$a ?v0 )))(= (lhd$a (fun_app$c (ltakeWhile$a ?v1 )?v0 ))(lhd$a ?v0 )))):named a52 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (and (not (lnull$a ?v0 ))(fun_app$b ?v1 (lhd$ ?v0 )))(= (lhd$ (fun_app$d (ltakeWhile$b ?v1 )?v0 ))(lhd$ ?v0 )))):named a53 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_bool_fun$ ))(=> (and (not (lnull$b ?v0 ))(fun_app$ ?v1 (lhd$b ?v0 )))(not (lnull$b (ltakeWhile$ ?v1 ?v0 ))))):named a54 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_bool_fun$ ))(=> (and (not (lnull$ ?v0 ))(fun_app$a ?v1 (lhd$a ?v0 )))(not (lnull$ (fun_app$c (ltakeWhile$a ?v1 )?v0 ))))):named a55 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (and (not (lnull$a ?v0 ))(fun_app$b ?v1 (lhd$ ?v0 )))(not (lnull$a (fun_app$d (ltakeWhile$b ?v1 )?v0 ))))):named a56 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (not (lnull$b ?v0 ))(member$a (lhd$b ?v0 )(lset$ ?v0 )))):named a57 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (not (lnull$ ?v0 ))(member$b (lhd$a ?v0 )(lset$a ?v0 )))):named a58 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (not (lnull$a ?v0 ))(member$c (lhd$ ?v0 )(lset$b ?v0 )))):named a59 ))
(check-sat )
;(get-unsat-core )
