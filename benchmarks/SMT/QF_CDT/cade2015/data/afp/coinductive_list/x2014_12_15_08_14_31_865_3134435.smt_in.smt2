;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort Enat_enat_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_enat_fun$ 0 )
(declare-sort A_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort A_llist_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_enat_fun$ 0 )
(declare-sort Enat_a_llist_enat_fun_fun$ 0 )
(declare-sort A_a_llist_enat_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_fun_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_a_llist_a_llist_enat_fun_enat_fun_fun_fun$ 0 )
(declare-sort A_a_llist_enat_fun_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_bool_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ 0 )
(declare-sort Enat_a_a_llist_enat_fun_fun_fun_a_llist_enat_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_a_llist_enat_fun_fun_fun_a_llist_a_llist_enat_fun_enat_fun_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_fun_a_llist_bool_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun_fun$ 0 )
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))))
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun f$ (A_llist_enat_fun$ )A_llist_enat_fun$ )
(declare-fun uu$ (A_llist_enat_fun$ )A_a_llist_enat_fun_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun uua$ ()A_llist_enat_fun_enat_fun$ )
(declare-fun uub$ (Enat_a_a_llist_enat_fun_fun_fun$ )A_a_llist_enat_enat_fun_fun_fun$ )
(declare-fun uuc$ (Enat_enat_fun$ )Enat_a_a_llist_enat_fun_fun_fun_a_llist_enat_enat_fun_fun_fun$ )
(declare-fun uud$ (A_llist_enat_fun_a_a_llist_enat_fun_fun_fun$ )A_a_llist_a_llist_enat_fun_enat_fun_fun_fun$ )
(declare-fun uue$ (A_llist_enat_fun_enat_fun$ )A_llist_enat_fun_a_a_llist_enat_fun_fun_fun_a_llist_a_llist_enat_fun_enat_fun_fun_fun$ )
(declare-fun uuf$ ()Enat_enat_bool_fun_fun$ )
(declare-fun uug$ (A_llist$ )A_llist_enat_fun_enat_fun$ )
(declare-fun uuh$ (A_llist_enat_fun_enat_fun$ )A_llist_enat_fun_enat_fun$ )
(declare-fun uui$ (Enat_enat_fun$ )Enat_enat_fun$ )
(declare-fun uuj$ (Enat_a_llist_enat_fun_fun$ )A_llist_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ )
(declare-fun uuk$ (Enat_enat_fun$ )A_llist_a_llist_enat_fun_enat_fun_fun$ )
(declare-fun uul$ (A_llist$ )A_llist_enat_fun_enat_fun$ )
(declare-fun uum$ (Enat_a_llist_enat_fun_fun$ )A_llist_enat_enat_fun_fun$ )
(declare-fun uun$ (A_llist_enat_fun_a_llist_enat_fun_fun$ )A_llist_a_llist_enat_fun_enat_fun_fun$ )
(declare-fun uuo$ (A_llist_enat_fun_a_llist_enat_fun_fun$ )A_llist_enat_fun_a_llist_enat_fun_fun_a_llist_bool_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun_fun$ )
(declare-fun eSuc$ (Enat$ )Enat$ )
(declare-fun zero$ ()Enat$ )
(declare-fun fun_app$ (A_llist_enat_fun_enat_fun$ A_llist_enat_fun$ )Enat$ )
(declare-fun fun_ord$ (Enat_enat_bool_fun_fun$ )A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ )
(declare-fun less_eq$ ()Enat_enat_bool_fun_fun$ )
(declare-fun fun_app$a (A_llist_enat_fun$ A_llist$ )Enat$ )
(declare-fun fun_app$b (A_a_llist_enat_fun_fun_a_llist_enat_fun_fun$ A_a_llist_enat_fun_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$c (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$d (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(declare-fun fun_app$e (Enat_enat_fun$ Enat$ )Enat$ )
(declare-fun fun_app$f (A_llist_enat_enat_fun_fun$ A_llist$ )Enat_enat_fun$ )
(declare-fun fun_app$g (Enat_a_llist_enat_fun_fun$ Enat$ )A_llist_enat_fun$ )
(declare-fun fun_app$h (A_llist_a_llist_enat_fun_enat_fun_fun$ A_llist$ )A_llist_enat_fun_enat_fun$ )
(declare-fun fun_app$i (A_llist_enat_fun_a_llist_enat_fun_fun$ A_llist_enat_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$j (A_llist_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ A_llist$ )A_llist_enat_fun_a_llist_enat_fun_fun$ )
(declare-fun fun_app$k (A_a_llist_enat_fun_fun$ A$ )A_llist_enat_fun$ )
(declare-fun fun_app$l (A_a_llist_enat_enat_fun_fun_fun$ A$ )A_llist_enat_enat_fun_fun$ )
(declare-fun fun_app$m (Enat_a_a_llist_enat_fun_fun_fun$ Enat$ )A_a_llist_enat_fun_fun$ )
(declare-fun fun_app$n (A_a_llist_a_llist_enat_fun_enat_fun_fun_fun$ A$ )A_llist_a_llist_enat_fun_enat_fun_fun$ )
(declare-fun fun_app$o (A_llist_enat_fun_a_a_llist_enat_fun_fun_fun$ A_llist_enat_fun$ )A_a_llist_enat_fun_fun$ )
(declare-fun fun_app$p (Enat_a_a_llist_enat_fun_fun_fun_a_llist_enat_enat_fun_fun_fun$ Enat_a_a_llist_enat_fun_fun_fun$ )A_llist_enat_enat_fun_fun$ )
(declare-fun fun_app$q (A_llist_enat_fun_a_a_llist_enat_fun_fun_fun_a_llist_a_llist_enat_fun_enat_fun_fun_fun$ A_llist_enat_fun_a_a_llist_enat_fun_fun_fun$ )A_llist_a_llist_enat_fun_enat_fun_fun$ )
(declare-fun fun_app$r (A_llist_bool_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ A_llist_bool_fun$ )A_llist_enat_fun_a_llist_enat_fun_fun$ )
(declare-fun fun_app$s (A_llist_enat_fun_a_llist_enat_fun_fun_a_llist_bool_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun_fun$ A_llist_enat_fun_a_llist_enat_fun_fun$ )A_llist_bool_fun_a_llist_enat_fun_a_llist_enat_fun_fun_fun$ )
(declare-fun fun_app$t (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun monotone$ (A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ Enat_enat_bool_fun_fun$ A_llist_enat_fun_enat_fun$ )Bool )
(declare-fun monotone$a (Enat_enat_bool_fun_fun$ Enat_enat_bool_fun_fun$ Enat_enat_fun$ )Bool )
(declare-fun monotone$b (Enat_enat_bool_fun_fun$ A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ Enat_a_llist_enat_fun_fun$ )Bool )
(declare-fun monotone$c (A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ A_llist_enat_fun_a_llist_enat_fun_fun$ )Bool )
(declare-fun case_llist$ (Enat$ )A_a_llist_enat_fun_fun_a_llist_enat_fun_fun$ )
(assert (! (forall ((?v0 A_llist_enat_fun$ ))(! (= (fun_app$ uua$ ?v0 )(fun_app$a (fun_app$b (case_llist$ zero$ )(uu$ ?v0 ))xs$ )):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(! (= (fun_app$c (fun_app$d uuf$ ?v0 )?v1 )(fun_app$c (fun_app$d less_eq$ ?v1 )?v0 )):pattern ((fun_app$c (fun_app$d uuf$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_enat_fun$ ))(! (= (fun_app$ (uul$ ?v0 )?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$ (uul$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 Enat$ ))(! (= (fun_app$e (uui$ ?v0 )?v1 )(eSuc$ (fun_app$e ?v0 ?v1 ))):pattern ((fun_app$e (uui$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_enat_fun_enat_fun$ )(?v1 A_llist_enat_fun$ ))(! (= (fun_app$ (uuh$ ?v0 )?v1 )(eSuc$ (fun_app$ ?v0 ?v1 ))):pattern ((fun_app$ (uuh$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_enat_fun$ ))(! (= (fun_app$ (uug$ ?v0 )?v1 )(eSuc$ (fun_app$a ?v1 ?v0 ))):pattern ((fun_app$ (uug$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 Enat$ ))(! (= (fun_app$e (fun_app$f (uum$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$g ?v0 ?v2 )?v1 )):pattern ((fun_app$e (fun_app$f (uum$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_enat_fun_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_enat_fun$ ))(! (= (fun_app$ (fun_app$h (uun$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$i ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$h (uun$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 A_llist$ )(?v2 A_llist_enat_fun$ ))(! (= (fun_app$ (fun_app$h (uuk$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$a ?v2 ?v1 ))):pattern ((fun_app$ (fun_app$h (uuk$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist_enat_fun$ ))(! (= (fun_app$i (fun_app$j (uuj$ ?v0 )?v1 )?v2 )(fun_app$g ?v0 (fun_app$a ?v2 ?v1 ))):pattern ((fun_app$i (fun_app$j (uuj$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_enat_fun$ )(?v1 A$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$k (uu$ ?v0 )?v1 )?v2 )(eSuc$ (fun_app$a ?v0 ?v2 ))):pattern ((fun_app$a (fun_app$k (uu$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Enat_a_a_llist_enat_fun_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 Enat$ ))(! (= (fun_app$e (fun_app$f (fun_app$l (uub$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$k (fun_app$m ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$e (fun_app$f (fun_app$l (uub$ ?v0 )?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_enat_fun_a_a_llist_enat_fun_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A_llist_enat_fun$ ))(! (= (fun_app$ (fun_app$h (fun_app$n (uud$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$k (fun_app$o ?v0 ?v3 )?v1 )?v2 )):pattern ((fun_app$ (fun_app$h (fun_app$n (uud$ ?v0 )?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 Enat_enat_fun$ )(?v1 Enat_a_a_llist_enat_fun_fun_fun$ )(?v2 A_llist$ )(?v3 Enat$ ))(! (= (fun_app$e (fun_app$f (fun_app$p (uuc$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b (case_llist$ (fun_app$e ?v0 ?v3 ))(fun_app$m ?v1 ?v3 ))?v2 )):pattern ((fun_app$e (fun_app$f (fun_app$p (uuc$ ?v0 )?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_enat_fun_enat_fun$ )(?v1 A_llist_enat_fun_a_a_llist_enat_fun_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist_enat_fun$ ))(! (= (fun_app$ (fun_app$h (fun_app$q (uue$ ?v0 )?v1 )?v2 )?v3 )(fun_app$a (fun_app$b (case_llist$ (fun_app$ ?v0 ?v3 ))(fun_app$o ?v1 ?v3 ))?v2 )):pattern ((fun_app$ (fun_app$h (fun_app$q (uue$ ?v0 )?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_enat_fun_a_llist_enat_fun_fun$ )(?v1 A_llist_enat_fun_a_llist_enat_fun_fun$ )(?v2 A_llist_bool_fun$ )(?v3 A_llist_enat_fun$ )(?v4 A_llist$ ))(! (= (fun_app$a (fun_app$i (fun_app$r (fun_app$s (uuo$ ?v0 )?v1 )?v2 )?v3 )?v4 )(ite (fun_app$t ?v2 ?v4 )(fun_app$a (fun_app$i ?v0 ?v3 )?v4 )(fun_app$a (fun_app$i ?v1 ?v3 )?v4 ))):pattern ((fun_app$a (fun_app$i (fun_app$r (fun_app$s (uuo$ ?v0 )?v1 )?v2 )?v3 )?v4 )))):named a15 ))
(assert (! (not (monotone$ (fun_ord$ less_eq$ )less_eq$ uua$ )):named a16 ))
(assert (! (forall ((?v0 A_llist_enat_fun$ )(?v1 A_llist$ ))(= (fun_app$a (f$ ?v0 )?v1 )(fun_app$a (fun_app$b (case_llist$ zero$ )(uu$ ?v0 ))?v1 ))):named a17 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (and (forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (fun_app$c (fun_app$d less_eq$ ?v3 )?v4 )(fun_app$c (fun_app$d ?v0 ?v3 )?v4 )))(=> (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(fun_app$c (fun_app$d ?v0 ?v2 )?v1 )))(fun_app$c (fun_app$d ?v0 ?v2 )?v1 ))):named a18 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_fun$ )(?v3 Enat_a_a_llist_enat_fun_fun_fun$ )(?v4 A_llist$ ))(=> (and (monotone$a ?v0 ?v1 ?v2 )(forall ((?v5 A$ )(?v6 A_llist$ ))(monotone$a ?v0 ?v1 (fun_app$f (fun_app$l (uub$ ?v3 )?v5 )?v6 ))))(monotone$a ?v0 ?v1 (fun_app$f (fun_app$p (uuc$ ?v2 )?v3 )?v4 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_fun_enat_fun$ )(?v3 A_llist_enat_fun_a_a_llist_enat_fun_fun_fun$ )(?v4 A_llist$ ))(=> (and (monotone$ ?v0 ?v1 ?v2 )(forall ((?v5 A$ )(?v6 A_llist$ ))(monotone$ ?v0 ?v1 (fun_app$h (fun_app$n (uud$ ?v3 )?v5 )?v6 ))))(monotone$ ?v0 ?v1 (fun_app$h (fun_app$q (uue$ ?v2 )?v3 )?v4 )))):named a20 ))
(assert (! (forall ((?v0 A_llist$ ))(monotone$ (fun_ord$ uuf$ )uuf$ (uug$ ?v0 ))):named a21 ))
(assert (! (forall ((?v0 A_llist_enat_fun_enat_fun$ ))(=> (monotone$ (fun_ord$ less_eq$ )less_eq$ ?v0 )(monotone$ (fun_ord$ less_eq$ )less_eq$ (uuh$ ?v0 )))):named a22 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$c (fun_app$d less_eq$ (eSuc$ ?v0 ))(eSuc$ ?v1 ))(fun_app$c (fun_app$d less_eq$ ?v0 )?v1 ))):named a23 ))
(assert (! (forall ((?v0 Enat$ ))(= (fun_app$c (fun_app$d less_eq$ ?v0 )zero$ )(= ?v0 zero$ ))):named a24 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_fun$ ))(=> (monotone$a ?v0 less_eq$ ?v1 )(monotone$a ?v0 less_eq$ (uui$ ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ )(?v1 A_llist_enat_fun_enat_fun$ ))(=> (monotone$ ?v0 less_eq$ ?v1 )(monotone$ ?v0 less_eq$ (uuh$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 A_llist$ ))(=> (monotone$b ?v0 ?v1 ?v2 )(monotone$c (fun_ord$ ?v0 )?v1 (fun_app$j (uuj$ ?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_fun$ )(?v3 A_llist$ ))(=> (monotone$a ?v0 ?v1 ?v2 )(monotone$ (fun_ord$ ?v0 )?v1 (fun_app$h (uuk$ ?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 Enat$ ))(not (fun_app$c (fun_app$d less_eq$ (eSuc$ ?v0 ))zero$ ))):named a29 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (= (eSuc$ ?v0 )(eSuc$ ?v1 ))(= ?v0 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (= (eSuc$ ?v0 )(eSuc$ ?v1 ))(= ?v0 ?v1 ))):named a31 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 A_llist$ ))(monotone$ (fun_ord$ ?v0 )?v0 (uul$ ?v1 ))):named a32 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ ))(= (monotone$b ?v0 (fun_ord$ ?v1 )?v2 )(forall ((?v3 A_llist$ ))(monotone$a ?v0 ?v1 (fun_app$f (uum$ ?v2 )?v3 ))))):named a33 ))
(assert (! (forall ((?v0 A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_fun_a_llist_enat_fun_fun$ ))(= (monotone$c ?v0 (fun_ord$ ?v1 )?v2 )(forall ((?v3 A_llist$ ))(monotone$ ?v0 ?v1 (fun_app$h (uun$ ?v2 )?v3 ))))):named a34 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_fun_a_llist_enat_fun_fun$ )(?v3 A_llist_enat_fun_a_llist_enat_fun_fun$ )(?v4 A_llist_bool_fun$ ))(=> (and (monotone$c (fun_ord$ ?v0 )(fun_ord$ ?v1 )?v2 )(monotone$c (fun_ord$ ?v0 )(fun_ord$ ?v1 )?v3 ))(monotone$c (fun_ord$ ?v0 )(fun_ord$ ?v1 )(fun_app$r (fun_app$s (uuo$ ?v2 )?v3 )?v4 )))):named a35 ))
(check-sat )
;(get-unsat-core )
