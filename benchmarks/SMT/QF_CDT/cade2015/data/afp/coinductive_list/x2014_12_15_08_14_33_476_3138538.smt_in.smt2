;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Enat_set$ 0 )
(declare-sort Enat_set_set$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort Enat_set_set_set$ 0 )
(declare-sort Enat_set_enat_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_set_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ 0 )
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))))
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun f$ ()A_llist_enat_fun_a_llist_enat_fun_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun sup$ ()Enat_set_enat_fun$ )
(declare-fun fixp$ (A_llist_enat_fun_set_a_llist_enat_fun_fun$ A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ A_llist_enat_fun_a_llist_enat_fun_fun$ A_llist$ )Enat$ )
(declare-fun sup$a (Enat_set_set_set$ )Enat_set_set$ )
(declare-fun sup$b (Enat_set_set$ )Enat_set$ )
(declare-fun member$ (Enat_set_set$ Enat_set_set_set$ )Bool )
(declare-fun fun_app$ (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_lub$ (Enat_set_enat_fun$ )A_llist_enat_fun_set_a_llist_enat_fun_fun$ )
(declare-fun fun_ord$ (Enat_enat_bool_fun_fun$ )A_llist_enat_fun_a_llist_enat_fun_bool_fun_fun$ )
(declare-fun less_eq$ ()Enat_enat_bool_fun_fun$ )
(declare-fun llength$ (A_llist$ )Enat$ )
(declare-fun member$a (Enat_set$ Enat_set_set$ )Bool )
(declare-fun member$b (Enat$ Enat_set$ )Bool )
(declare-fun fun_app$a (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(declare-fun fun_app$b (Enat_set_enat_fun$ Enat_set$ )Enat$ )
(declare-fun less_eq$a (Enat_set_set$ Enat_set_set$ )Bool )
(declare-fun less_eq$b (Enat_set$ Enat_set$ )Bool )
(declare-fun less_eq$c (Enat_set_set_set$ Enat_set_set_set$ )Bool )
(assert (! (not (= (llength$ xs$ )(fixp$ (fun_lub$ sup$ )(fun_ord$ less_eq$ )f$ xs$ ))):named a0 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (and (forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (fun_app$ (fun_app$a less_eq$ ?v3 )?v4 )(fun_app$ (fun_app$a ?v0 ?v3 )?v4 )))(=> (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(fun_app$ (fun_app$a ?v0 ?v2 )?v1 )))(fun_app$ (fun_app$a ?v0 ?v2 )?v1 ))):named a1 ))
(assert (! (forall ((?v0 Enat_set_set$ ))(less_eq$a ?v0 ?v0 )):named a2 ))
(assert (! (forall ((?v0 Enat_set$ ))(less_eq$b ?v0 ?v0 )):named a3 ))
(assert (! (forall ((?v0 Enat$ ))(fun_app$ (fun_app$a less_eq$ ?v0 )?v0 )):named a4 ))
(assert (! (forall ((?v0 Enat_set_set_set$ )(?v1 Enat_set_set$ ))(= (less_eq$a (sup$a ?v0 )?v1 )(forall ((?v2 Enat_set_set$ ))(=> (member$ ?v2 ?v0 )(less_eq$a ?v2 ?v1 ))))):named a5 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set$ ))(= (less_eq$b (sup$b ?v0 )?v1 )(forall ((?v2 Enat_set$ ))(=> (member$a ?v2 ?v0 )(less_eq$b ?v2 ?v1 ))))):named a6 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat$ ))(= (fun_app$ (fun_app$a less_eq$ (fun_app$b sup$ ?v0 ))?v1 )(forall ((?v2 Enat$ ))(=> (member$b ?v2 ?v0 )(fun_app$ (fun_app$a less_eq$ ?v2 )?v1 ))))):named a7 ))
(assert (! (forall ((?v0 Enat_set_set_set$ )(?v1 Enat_set_set$ ))(=> (and (forall ((?v2 Enat_set_set$ ))(=> (member$ ?v2 ?v0 )(less_eq$a ?v2 ?v1 )))(forall ((?v2 Enat_set_set$ ))(=> (forall ((?v3 Enat_set_set$ ))(=> (member$ ?v3 ?v0 )(less_eq$a ?v3 ?v2 )))(less_eq$a ?v1 ?v2 ))))(= (sup$a ?v0 )?v1 ))):named a8 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set$ ))(=> (and (forall ((?v2 Enat_set$ ))(=> (member$a ?v2 ?v0 )(less_eq$b ?v2 ?v1 )))(forall ((?v2 Enat_set$ ))(=> (forall ((?v3 Enat_set$ ))(=> (member$a ?v3 ?v0 )(less_eq$b ?v3 ?v2 )))(less_eq$b ?v1 ?v2 ))))(= (sup$b ?v0 )?v1 ))):named a9 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat$ ))(=> (and (forall ((?v2 Enat$ ))(=> (member$b ?v2 ?v0 )(fun_app$ (fun_app$a less_eq$ ?v2 )?v1 )))(forall ((?v2 Enat$ ))(=> (forall ((?v3 Enat$ ))(=> (member$b ?v3 ?v0 )(fun_app$ (fun_app$a less_eq$ ?v3 )?v2 )))(fun_app$ (fun_app$a less_eq$ ?v1 )?v2 ))))(= (fun_app$b sup$ ?v0 )?v1 ))):named a10 ))
(assert (! (forall ((?v0 Enat_set_set_set$ )(?v1 Enat_set_set_set$ ))(=> (forall ((?v2 Enat_set_set$ ))(=> (member$ ?v2 ?v0 )(exists ((?v3 Enat_set_set$ ))(and (member$ ?v3 ?v1 )(less_eq$a ?v2 ?v3 )))))(less_eq$a (sup$a ?v0 )(sup$a ?v1 )))):named a11 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set_set$ ))(=> (forall ((?v2 Enat_set$ ))(=> (member$a ?v2 ?v0 )(exists ((?v3 Enat_set$ ))(and (member$a ?v3 ?v1 )(less_eq$b ?v2 ?v3 )))))(less_eq$b (sup$b ?v0 )(sup$b ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat_set$ ))(=> (forall ((?v2 Enat$ ))(=> (member$b ?v2 ?v0 )(exists ((?v3 Enat$ ))(and (member$b ?v3 ?v1 )(fun_app$ (fun_app$a less_eq$ ?v2 )?v3 )))))(fun_app$ (fun_app$a less_eq$ (fun_app$b sup$ ?v0 ))(fun_app$b sup$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 Enat_set_set_set$ )(?v1 Enat_set_set$ ))(=> (forall ((?v2 Enat_set_set$ ))(=> (member$ ?v2 ?v0 )(less_eq$a ?v2 ?v1 )))(less_eq$a (sup$a ?v0 )?v1 ))):named a14 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set$ ))(=> (forall ((?v2 Enat_set$ ))(=> (member$a ?v2 ?v0 )(less_eq$b ?v2 ?v1 )))(less_eq$b (sup$b ?v0 )?v1 ))):named a15 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat$ ))(=> (forall ((?v2 Enat$ ))(=> (member$b ?v2 ?v0 )(fun_app$ (fun_app$a less_eq$ ?v2 )?v1 )))(fun_app$ (fun_app$a less_eq$ (fun_app$b sup$ ?v0 ))?v1 ))):named a16 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set_set_set$ )(?v2 Enat_set_set$ ))(=> (and (member$ ?v0 ?v1 )(less_eq$a ?v2 ?v0 ))(less_eq$a ?v2 (sup$a ?v1 )))):named a17 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat_set_set$ )(?v2 Enat_set$ ))(=> (and (member$a ?v0 ?v1 )(less_eq$b ?v2 ?v0 ))(less_eq$b ?v2 (sup$b ?v1 )))):named a18 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_set$ )(?v2 Enat$ ))(=> (and (member$b ?v0 ?v1 )(fun_app$ (fun_app$a less_eq$ ?v2 )?v0 ))(fun_app$ (fun_app$a less_eq$ ?v2 )(fun_app$b sup$ ?v1 )))):named a19 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set_set_set$ ))(=> (member$ ?v0 ?v1 )(less_eq$a ?v0 (sup$a ?v1 )))):named a20 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat_set_set$ ))(=> (member$a ?v0 ?v1 )(less_eq$b ?v0 (sup$b ?v1 )))):named a21 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat_set$ ))(=> (member$b ?v0 ?v1 )(fun_app$ (fun_app$a less_eq$ ?v0 )(fun_app$b sup$ ?v1 )))):named a22 ))
(assert (! (forall ((?v0 Enat_set_set_set$ )(?v1 Enat_set_set_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$a (sup$a ?v0 )(sup$a ?v1 )))):named a23 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$b (sup$b ?v0 )(sup$b ?v1 )))):named a24 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat_set$ ))(=> (less_eq$b ?v0 ?v1 )(fun_app$ (fun_app$a less_eq$ (fun_app$b sup$ ?v0 ))(fun_app$b sup$ ?v1 )))):named a25 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set_set$ ))(= (= ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 )))):named a26 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat_set$ ))(= (= ?v0 ?v1 )(and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 )))):named a27 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (= ?v0 ?v1 )(and (fun_app$ (fun_app$a less_eq$ ?v0 )?v1 )(fun_app$ (fun_app$a less_eq$ ?v1 )?v0 )))):named a28 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(=> (and (=> (fun_app$ (fun_app$a less_eq$ ?v0 )?v1 )false )(=> (fun_app$ (fun_app$a less_eq$ ?v1 )?v0 )false ))false )):named a29 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (and (forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (fun_app$ (fun_app$a less_eq$ ?v3 )?v4 )(fun_app$ (fun_app$a ?v0 ?v3 )?v4 )))(forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (fun_app$ (fun_app$a ?v0 ?v4 )?v3 )(fun_app$ (fun_app$a ?v0 ?v3 )?v4 ))))(fun_app$ (fun_app$a ?v0 ?v1 )?v2 ))):named a30 ))
(assert (! (forall ((?v0 Enat_set_set_set$ )(?v1 Enat_set_set$ ))(=> (forall ((?v2 Enat_set_set$ ))(=> (member$ ?v2 ?v0 )(less_eq$a ?v2 ?v1 )))(less_eq$a (sup$a ?v0 )?v1 ))):named a31 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set$ ))(=> (forall ((?v2 Enat_set$ ))(=> (member$a ?v2 ?v0 )(less_eq$b ?v2 ?v1 )))(less_eq$b (sup$b ?v0 )?v1 ))):named a32 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set_set_set$ ))(=> (member$ ?v0 ?v1 )(less_eq$a ?v0 (sup$a ?v1 )))):named a33 ))
(assert (! (forall ((?v0 Enat_set$ )(?v1 Enat_set_set$ ))(=> (member$a ?v0 ?v1 )(less_eq$b ?v0 (sup$b ?v1 )))):named a34 ))
(assert (! (forall ((?v0 Enat_set_set_set$ )(?v1 Enat_set_set_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$a (sup$a ?v0 )(sup$a ?v1 )))):named a35 ))
(assert (! (forall ((?v0 Enat_set_set$ )(?v1 Enat_set_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$b (sup$b ?v0 )(sup$b ?v1 )))):named a36 ))
(assert (! (forall ((?v0 Enat_set_set$ ))(less_eq$a ?v0 ?v0 )):named a37 ))
(assert (! (forall ((?v0 Enat_set$ ))(less_eq$b ?v0 ?v0 )):named a38 ))
(assert (! (forall ((?v0 Enat$ ))(fun_app$ (fun_app$a less_eq$ ?v0 )?v0 )):named a39 ))
(check-sat )
;(get-unsat-core )
