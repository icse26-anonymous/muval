;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Enat_set$ 0 )
(declare-sort Enat_set_set$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort Enat_enat_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_enat_fun$ 0 )
(declare-sort Enat_a_llist_fun$ 0 )
(declare-sort Enat_enat_set_fun$ 0 )
(declare-sort Enat_set_enat_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_enat_set_fun$ 0 )
(declare-sort Enat_set_a_llist_fun$ 0 )
(declare-sort Enat_enat_set_set_fun$ 0 )
(declare-sort Enat_set_enat_set_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort Enat_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_set_a_llist_fun$ 0 )
(declare-sort A_llist_enat_set_set_fun$ 0 )
(declare-sort A_llist_enat_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_set_enat_set_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun$ 0 )
(declare-sort Enat_enat_a_llist_prod_fun$ 0 )
(declare-sort Enat_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_enat_set_enat_fun_fun$ 0 )
(declare-sort Enat_set_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_prod_fun$ 0 )
(declare-sort A_llist_enat_enat_set_fun_fun$ 0 )
(declare-sort A_llist_enat_set_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_enat_set_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun$ 0 )
(declare-sort Enat_enat_set_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_set_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_set_fun$ 0 )
(declare-sort Enat_enat_set_enat_set_fun_fun$ 0 )
(declare-sort Enat_set_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_set_enat_set_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_fun_fun$ 0 )
(declare-sort Enat_set_set_set_enat_set_set_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_enat_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_enat_set_fun_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_set_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_set_enat_set_set_bool_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_fun$ 0 )
(declare-sort Enat_enat_set_fun_enat_enat_set_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_set_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_set_enat_a_llist_prod_fun$ 0 )
(declare-sort Enat_enat_a_llist_prod_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_prod_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-sort A_llist_set_a_llist_fun_enat_a_llist_prod_set_enat_a_llist_prod_fun_fun$ 0 )
(declare-sort Enat_a_llist_prod_enat_a_llist_prod_fun_enat_a_llist_prod_a_llist_fun_fun$ 0 )
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))))
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-datatypes ()((Enat_a_llist_prod$ (pair$ (fst$ Enat$ )(snd$ A_llist$ )))))
(declare-fun uu$ ()Enat_a_llist_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun sup$ ()Enat_set_enat_fun$ )
(declare-fun uua$ (Enat_enat_a_llist_fun_fun$ )Enat_enat_a_llist_fun_fun$ )
(declare-fun uub$ (Enat_enat_a_llist_fun_fun$ )Enat_enat_fun_enat_a_llist_fun_fun$ )
(declare-fun uuc$ (Enat_a_llist_a_llist_fun_fun$ )A_llist_enat_a_llist_fun_fun$ )
(declare-fun uud$ (Enat_a_llist_a_llist_fun_fun$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun uue$ (A_llist_enat_a_llist_fun_fun$ )Enat_a_llist_a_llist_fun_fun$ )
(declare-fun uuf$ (A_llist_enat_a_llist_fun_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uug$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_a_llist_fun_fun$ )
(declare-fun uuh$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uui$ (Enat_a_llist_prod_enat_a_llist_fun_fun$ )Enat_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uuj$ (Enat_a_llist_prod_enat_a_llist_fun_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uuk$ (Enat_enat_a_llist_prod_a_llist_fun_fun$ )Enat_a_llist_prod_enat_a_llist_fun_fun$ )
(declare-fun uul$ (Enat_enat_a_llist_prod_a_llist_fun_fun$ )Enat_enat_a_llist_prod_fun_enat_a_llist_fun_fun$ )
(declare-fun uum$ (A_llist_enat_a_llist_prod_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_a_llist_fun_fun$ )
(declare-fun uun$ (A_llist_enat_a_llist_prod_a_llist_fun_fun$ )A_llist_enat_a_llist_prod_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuo$ (Enat_a_llist_prod_a_llist_a_llist_fun_fun$ )A_llist_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uup$ (Enat_a_llist_prod_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uuq$ (Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uur$ (Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )Enat_a_llist_prod_enat_a_llist_prod_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uus$ (Enat_enat_set_a_llist_fun_fun$ )Enat_set_enat_a_llist_fun_fun$ )
(declare-fun uut$ (Enat_enat_set_a_llist_fun_fun$ )Enat_enat_set_fun_enat_a_llist_fun_fun$ )
(declare-fun uuu$ (Enat_a_llist_fun$ )Enat_enat_fun_enat_a_llist_fun_fun$ )
(declare-fun uuv$ (A_llist_a_llist_fun$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun uuw$ (Enat_a_llist_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uux$ (A_llist_a_llist_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuy$ (Enat_a_llist_fun$ )Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uuz$ (Enat_a_llist_prod_a_llist_fun$ )Enat_enat_a_llist_prod_fun_enat_a_llist_fun_fun$ )
(declare-fun uva$ (Enat_a_llist_prod_a_llist_fun$ )A_llist_enat_a_llist_prod_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uvb$ (A_llist_a_llist_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uvc$ (Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_enat_a_llist_prod_fun_enat_a_llist_prod_a_llist_fun_fun$ )
(declare-fun uvd$ (Enat_set_a_llist_fun$ )Enat_enat_set_fun_enat_a_llist_fun_fun$ )
(declare-fun uve$ (A_llist$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun uvf$ (A_llist$ )A_llist_a_llist_fun$ )
(declare-fun uvg$ (A_llist$ )Enat_a_llist_fun$ )
(declare-fun uvh$ (Enat_a_llist_enat_fun_fun$ )A_llist_enat_enat_fun_fun$ )
(declare-fun uvi$ (Enat_a_llist_enat_fun_fun$ )Enat_a_llist_fun_enat_enat_fun_fun$ )
(declare-fun uvj$ (Enat_enat_enat_fun_fun$ )Enat_enat_enat_fun_fun$ )
(declare-fun uvk$ (Enat_enat_enat_fun_fun$ )Enat_enat_fun_enat_enat_fun_fun$ )
(declare-fun uvl$ (A_llist_enat_enat_fun_fun$ )Enat_a_llist_enat_fun_fun$ )
(declare-fun uvm$ (A_llist_enat_enat_fun_fun$ )A_llist_enat_fun_a_llist_enat_fun_fun$ )
(declare-fun uvn$ (A_llist_a_llist_enat_fun_fun$ )A_llist_a_llist_enat_fun_fun$ )
(declare-fun uvo$ (A_llist_a_llist_enat_fun_fun$ )A_llist_a_llist_fun_a_llist_enat_fun_fun$ )
(declare-fun uvp$ (Enat_a_llist_prod_a_llist_enat_fun_fun$ )A_llist_enat_a_llist_prod_enat_fun_fun$ )
(declare-fun uvq$ (Enat_a_llist_prod_a_llist_enat_fun_fun$ )Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun$ )
(declare-fun uvr$ (Enat_enat_set_enat_fun_fun$ )Enat_set_enat_enat_fun_fun$ )
(declare-fun uvs$ (Enat_enat_set_enat_fun_fun$ )Enat_enat_set_fun_enat_enat_fun_fun$ )
(declare-fun uvt$ (Enat_enat_enat_set_fun_fun$ )Enat_enat_enat_set_fun_fun$ )
(declare-fun uvu$ (Enat_enat_enat_set_fun_fun$ )Enat_enat_fun_enat_enat_set_fun_fun$ )
(declare-fun uvv$ (A_llist_enat_set_enat_fun_fun$ )Enat_set_a_llist_enat_fun_fun$ )
(declare-fun uvw$ (A_llist_enat_set_enat_fun_fun$ )A_llist_enat_set_fun_a_llist_enat_fun_fun$ )
(declare-fun uvx$ (Enat_enat_set_enat_set_fun_fun$ )Enat_set_enat_enat_set_fun_fun$ )
(declare-fun uvy$ (Enat_enat_set_enat_set_fun_fun$ )Enat_enat_set_fun_enat_enat_set_fun_fun$ )
(declare-fun uvz$ (Enat_a_llist_enat_set_fun_fun$ )A_llist_enat_enat_set_fun_fun$ )
(declare-fun uwa$ (Enat_a_llist_enat_set_fun_fun$ )Enat_a_llist_fun_enat_enat_set_fun_fun$ )
(declare-fun uwb$ (A_llist_enat_set_set_fun$ )A_llist_enat_set_fun$ )
(declare-fun uwc$ (Enat_enat_set_set_fun$ )Enat_enat_set_fun$ )
(declare-fun uwd$ (Enat_a_llist_prod_enat_set_fun$ )Enat_a_llist_prod_enat_fun$ )
(declare-fun uwe$ (Enat_enat_set_fun$ )Enat_enat_fun$ )
(declare-fun uwf$ (A_llist_enat_set_fun$ )A_llist_enat_fun$ )
(declare-fun lSup$ ()A_llist_set_a_llist_fun$ )
(declare-fun sup$a ()Enat_set_set_enat_set_fun$ )
(declare-fun sup$b ()Enat_set_set_set_enat_set_set_fun$ )
(declare-fun ltake$ ()Enat_a_llist_a_llist_fun_fun$ )
(declare-fun mcont$ (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_a_llist_fun$ )Bool )
(declare-fun mcont$a (Enat_a_llist_prod_set_enat_a_llist_prod_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun mcont$b (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_enat_fun$ )Bool )
(declare-fun mcont$c (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ )Bool )
(declare-fun mcont$d (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ A_llist_enat_fun$ )Bool )
(declare-fun mcont$e (Enat_a_llist_prod_set_enat_a_llist_prod_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_a_llist_prod_enat_fun$ )Bool )
(declare-fun mcont$f (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_a_llist_prod_set_enat_a_llist_prod_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_enat_a_llist_prod_fun$ )Bool )
(declare-fun mcont$g (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_a_llist_prod_set_enat_a_llist_prod_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ A_llist_enat_a_llist_prod_fun$ )Bool )
(declare-fun mcont$h (Enat_a_llist_prod_set_enat_a_llist_prod_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_a_llist_prod_set_enat_a_llist_prod_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_a_llist_prod_enat_a_llist_prod_fun$ )Bool )
(declare-fun mcont$i (Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_a_llist_fun$ )Bool )
(declare-fun mcont$j (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_enat_set_fun$ )Bool )
(declare-fun mcont$k (Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_enat_fun$ )Bool )
(declare-fun mcont$l (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ A_llist_enat_set_fun$ )Bool )
(declare-fun mcont$m (Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_set_enat_set_fun$ )Bool )
(declare-fun mcont$n (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_set_set_enat_set_set_fun$ Enat_set_set_enat_set_set_bool_fun_fun$ A_llist_enat_set_set_fun$ )Bool )
(declare-fun mcont$o (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_set_set_enat_set_set_fun$ Enat_set_set_enat_set_set_bool_fun_fun$ Enat_enat_set_set_fun$ )Bool )
(declare-fun mcont$p (Enat_a_llist_prod_set_enat_a_llist_prod_fun$ Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_a_llist_prod_enat_set_fun$ )Bool )
(declare-fun fun_app$ (Enat_a_llist_fun$ Enat$ )A_llist$ )
(declare-fun less_eq$ ()Enat_enat_bool_fun_fun$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$a (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$b (Enat_a_llist_a_llist_fun_fun$ Enat$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$c (A_llist_enat_fun$ A_llist$ )Enat$ )
(declare-fun fun_app$d (Enat_set_enat_fun$ Enat_set$ )Enat$ )
(declare-fun fun_app$e (A_llist_enat_set_fun$ A_llist$ )Enat_set$ )
(declare-fun fun_app$f (Enat_set_set_enat_set_fun$ Enat_set_set$ )Enat_set$ )
(declare-fun fun_app$g (A_llist_enat_set_set_fun$ A_llist$ )Enat_set_set$ )
(declare-fun fun_app$h (Enat_a_llist_prod_enat_fun$ Enat_a_llist_prod$ )Enat$ )
(declare-fun fun_app$i (Enat_a_llist_prod_enat_set_fun$ Enat_a_llist_prod$ )Enat_set$ )
(declare-fun fun_app$j (Enat_enat_fun$ Enat$ )Enat$ )
(declare-fun fun_app$k (Enat_enat_set_fun$ Enat$ )Enat_set$ )
(declare-fun fun_app$l (Enat_enat_set_set_fun$ Enat$ )Enat_set_set$ )
(declare-fun fun_app$m (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$n (A_llist_a_llist_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$o (A_llist_a_llist_fun_a_llist_enat_fun_fun$ A_llist_a_llist_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$p (A_llist_a_llist_enat_fun_fun$ A_llist$ )A_llist_enat_fun$ )
(declare-fun fun_app$q (A_llist_enat_a_llist_prod_fun_a_llist_a_llist_fun_fun$ A_llist_enat_a_llist_prod_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$r (Enat_a_llist_prod_a_llist_fun$ Enat_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$s (A_llist_enat_a_llist_prod_a_llist_fun_fun$ A_llist$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$t (A_llist_enat_a_llist_prod_fun$ A_llist$ )Enat_a_llist_prod$ )
(declare-fun fun_app$u (A_llist_enat_fun_a_llist_a_llist_fun_fun$ A_llist_enat_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$v (A_llist_enat_a_llist_fun_fun$ A_llist$ )Enat_a_llist_fun$ )
(declare-fun fun_app$w (A_llist_enat_fun_a_llist_enat_fun_fun$ A_llist_enat_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$x (A_llist_enat_enat_fun_fun$ A_llist$ )Enat_enat_fun$ )
(declare-fun fun_app$y (A_llist_enat_set_fun_a_llist_enat_fun_fun$ A_llist_enat_set_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$z (A_llist_enat_set_enat_fun_fun$ A_llist$ )Enat_set_enat_fun$ )
(declare-fun less_eq$a ()Enat_set_enat_set_bool_fun_fun$ )
(declare-fun less_eq$b ()Enat_set_set_enat_set_set_bool_fun_fun$ )
(declare-fun prod_lub$ (Enat_set_enat_fun$ )A_llist_set_a_llist_fun_enat_a_llist_prod_set_enat_a_llist_prod_fun_fun$ )
(declare-fun rel_prod$ (Enat_enat_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$ (Enat_a_llist_a_llist_fun_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$aa (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$ab (Enat_a_llist_prod_a_llist_a_llist_fun_fun$ Enat_a_llist_prod$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$ac (Enat_a_llist_prod_a_llist_fun_enat_a_llist_prod_enat_fun_fun$ Enat_a_llist_prod_a_llist_fun$ )Enat_a_llist_prod_enat_fun$ )
(declare-fun fun_app$ad (Enat_a_llist_prod_a_llist_enat_fun_fun$ Enat_a_llist_prod$ )A_llist_enat_fun$ )
(declare-fun fun_app$ae (Enat_a_llist_prod_enat_a_llist_prod_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_enat_a_llist_prod_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$af (Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$ag (Enat_a_llist_prod_enat_a_llist_prod_fun$ Enat_a_llist_prod$ )Enat_a_llist_prod$ )
(declare-fun fun_app$ah (Enat_a_llist_prod_enat_fun_enat_a_llist_prod_a_llist_fun_fun$ Enat_a_llist_prod_enat_fun$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$ai (Enat_a_llist_prod_enat_a_llist_fun_fun$ Enat_a_llist_prod$ )Enat_a_llist_fun$ )
(declare-fun fun_app$aj (Enat_a_llist_fun_enat_a_llist_fun_fun$ Enat_a_llist_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ak (Enat_a_llist_fun_enat_enat_fun_fun$ Enat_a_llist_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$al (Enat_a_llist_enat_fun_fun$ Enat$ )A_llist_enat_fun$ )
(declare-fun fun_app$am (Enat_a_llist_fun_enat_enat_set_fun_fun$ Enat_a_llist_fun$ )Enat_enat_set_fun$ )
(declare-fun fun_app$an (Enat_a_llist_enat_set_fun_fun$ Enat$ )A_llist_enat_set_fun$ )
(declare-fun fun_app$ao (Enat_enat_a_llist_prod_fun_enat_a_llist_fun_fun$ Enat_enat_a_llist_prod_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ap (Enat_enat_a_llist_prod_a_llist_fun_fun$ Enat$ )Enat_a_llist_prod_a_llist_fun$ )
(declare-fun fun_app$aq (Enat_enat_a_llist_prod_fun$ Enat$ )Enat_a_llist_prod$ )
(declare-fun fun_app$ar (Enat_enat_fun_enat_a_llist_fun_fun$ Enat_enat_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$as (Enat_enat_a_llist_fun_fun$ Enat$ )Enat_a_llist_fun$ )
(declare-fun fun_app$at (Enat_enat_fun_enat_enat_fun_fun$ Enat_enat_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$au (Enat_enat_enat_fun_fun$ Enat$ )Enat_enat_fun$ )
(declare-fun fun_app$av (Enat_enat_fun_enat_enat_set_fun_fun$ Enat_enat_fun$ )Enat_enat_set_fun$ )
(declare-fun fun_app$aw (Enat_enat_enat_set_fun_fun$ Enat$ )Enat_enat_set_fun$ )
(declare-fun fun_app$ax (Enat_enat_set_fun_enat_a_llist_fun_fun$ Enat_enat_set_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ay (Enat_set_a_llist_fun$ Enat_set$ )A_llist$ )
(declare-fun fun_app$az (Enat_enat_set_a_llist_fun_fun$ Enat$ )Enat_set_a_llist_fun$ )
(declare-fun fun_app$ba (Enat_enat_set_fun_enat_enat_fun_fun$ Enat_enat_set_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$bb (Enat_enat_set_enat_fun_fun$ Enat$ )Enat_set_enat_fun$ )
(declare-fun fun_app$bc (Enat_enat_set_fun_enat_enat_set_fun_fun$ Enat_enat_set_fun$ )Enat_enat_set_fun$ )
(declare-fun fun_app$bd (Enat_set_enat_set_fun$ Enat_set$ )Enat_set$ )
(declare-fun fun_app$be (Enat_enat_set_enat_set_fun_fun$ Enat$ )Enat_set_enat_set_fun$ )
(declare-fun fun_app$bf (Enat_set_a_llist_enat_fun_fun$ Enat_set$ )A_llist_enat_fun$ )
(declare-fun fun_app$bg (A_llist_enat_a_llist_prod_enat_fun_fun$ A_llist$ )Enat_a_llist_prod_enat_fun$ )
(declare-fun fun_app$bh (A_llist_enat_enat_set_fun_fun$ A_llist$ )Enat_enat_set_fun$ )
(declare-fun fun_app$bi (Enat_set_enat_a_llist_fun_fun$ Enat_set$ )Enat_a_llist_fun$ )
(declare-fun fun_app$bj (Enat_set_enat_enat_fun_fun$ Enat_set$ )Enat_enat_fun$ )
(declare-fun fun_app$bk (Enat_set_enat_enat_set_fun_fun$ Enat_set$ )Enat_enat_set_fun$ )
(declare-fun fun_app$bl (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$bm (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$bn (A_llist_set_a_llist_fun_enat_a_llist_prod_set_enat_a_llist_prod_fun_fun$ A_llist_set_a_llist_fun$ )Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )
(declare-fun fun_app$bo (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$bp (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$ uu$ ?v0 )(fun_app$a (fun_app$b ltake$ ?v0 )xs$ )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_enat_set_fun$ )(?v1 A_llist$ ))(! (= (fun_app$c (uwf$ ?v0 )?v1 )(fun_app$d sup$ (fun_app$e ?v0 ?v1 ))):pattern ((fun_app$c (uwf$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_enat_set_set_fun$ )(?v1 A_llist$ ))(! (= (fun_app$e (uwb$ ?v0 )?v1 )(fun_app$f sup$a (fun_app$g ?v0 ?v1 ))):pattern ((fun_app$e (uwb$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_set_fun$ )(?v1 Enat_a_llist_prod$ ))(! (= (fun_app$h (uwd$ ?v0 )?v1 )(fun_app$d sup$ (fun_app$i ?v0 ?v1 ))):pattern ((fun_app$h (uwd$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Enat_enat_set_fun$ )(?v1 Enat$ ))(! (= (fun_app$j (uwe$ ?v0 )?v1 )(fun_app$d sup$ (fun_app$k ?v0 ?v1 ))):pattern ((fun_app$j (uwe$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 Enat_enat_set_set_fun$ )(?v1 Enat$ ))(! (= (fun_app$k (uwc$ ?v0 )?v1 )(fun_app$f sup$a (fun_app$l ?v0 ?v1 ))):pattern ((fun_app$k (uwc$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$m (uuh$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$n ?v0 ?v2 )(fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$m (uuh$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_a_llist_enat_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$c (fun_app$o (uvo$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$p ?v0 ?v2 )(fun_app$a ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$o (uvo$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_prod_a_llist_fun_fun$ )(?v1 A_llist_enat_a_llist_prod_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$q (uun$ ?v0 )?v1 )?v2 )(fun_app$r (fun_app$s ?v0 ?v2 )(fun_app$t ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$q (uun$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$u (uuf$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$v ?v0 ?v2 )(fun_app$c ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$u (uuf$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_enat_enat_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$c (fun_app$w (uvm$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$x ?v0 ?v2 )(fun_app$c ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$w (uvm$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_enat_set_enat_fun_fun$ )(?v1 A_llist_enat_set_fun$ )(?v2 A_llist$ ))(! (= (fun_app$c (fun_app$y (uvw$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$z ?v0 ?v2 )(fun_app$e ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$y (uvw$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$aa (uup$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$ab ?v0 ?v2 )(fun_app$r ?v1 ?v2 ))):pattern ((fun_app$r (fun_app$aa (uup$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_enat_fun_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$h (fun_app$ac (uvq$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ad ?v0 ?v2 )(fun_app$r ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$ac (uvq$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$ae (uur$ ?v0 )?v1 )?v2 )(fun_app$r (fun_app$af ?v0 ?v2 )(fun_app$ag ?v1 ?v2 ))):pattern ((fun_app$r (fun_app$ae (uur$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod_enat_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$ah (uuj$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$ai ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$r (fun_app$ah (uuj$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$aj (uud$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$b ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$aj (uud$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$j (fun_app$ak (uvi$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$al ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$ak (uvi$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_set_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$k (fun_app$am (uwa$ ?v0 )?v1 )?v2 )(fun_app$e (fun_app$an ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$am (uwa$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_prod_a_llist_fun_fun$ )(?v1 Enat_enat_a_llist_prod_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ao (uul$ ?v0 )?v1 )?v2 )(fun_app$r (fun_app$ap ?v0 ?v2 )(fun_app$aq ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ao (uul$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ar (uub$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$as ?v0 ?v2 )(fun_app$j ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ar (uub$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Enat_enat_enat_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$j (fun_app$at (uvk$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$au ?v0 ?v2 )(fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$at (uvk$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 Enat_enat_enat_set_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$k (fun_app$av (uvu$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$aw ?v0 ?v2 )(fun_app$j ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$av (uvu$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 Enat_enat_set_a_llist_fun_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ax (uut$ ?v0 )?v1 )?v2 )(fun_app$ay (fun_app$az ?v0 ?v2 )(fun_app$k ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ax (uut$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_fun_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$j (fun_app$ba (uvs$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$bb ?v0 ?v2 )(fun_app$k ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$ba (uvs$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_set_fun_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$k (fun_app$bc (uvy$ ?v0 )?v1 )?v2 )(fun_app$bd (fun_app$be ?v0 ?v2 )(fun_app$k ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$bc (uvy$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$n (uug$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$n ?v0 ?v2 )?v1 )):pattern ((fun_app$a (fun_app$n (uug$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$c (fun_app$p (uvn$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$p ?v0 ?v2 )?v1 )):pattern ((fun_app$c (fun_app$p (uvn$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_prod_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$ab (uum$ ?v0 )?v1 )?v2 )(fun_app$r (fun_app$s ?v0 ?v2 )?v1 )):pattern ((fun_app$a (fun_app$ab (uum$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$b (uue$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$v ?v0 ?v2 )?v1 )):pattern ((fun_app$a (fun_app$b (uue$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_enat_enat_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$c (fun_app$al (uvl$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$x ?v0 ?v2 )?v1 )):pattern ((fun_app$c (fun_app$al (uvl$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_enat_set_enat_fun_fun$ )(?v1 Enat_set$ )(?v2 A_llist$ ))(! (= (fun_app$c (fun_app$bf (uvv$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$z ?v0 ?v2 )?v1 )):pattern ((fun_app$c (fun_app$bf (uvv$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$s (uuo$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$ab ?v0 ?v2 )?v1 )):pattern ((fun_app$r (fun_app$s (uuo$ ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$h (fun_app$bg (uvp$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$ad ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$bg (uvp$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$af (uuq$ ?v0 )?v1 )?v2 )(fun_app$r (fun_app$af ?v0 ?v2 )?v1 )):pattern ((fun_app$r (fun_app$af (uuq$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_enat_a_llist_fun_fun$ )(?v1 Enat$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$ap (uui$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$ai ?v0 ?v2 )?v1 )):pattern ((fun_app$r (fun_app$ap (uui$ ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$v (uuc$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$b ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$v (uuc$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 Enat$ ))(! (= (fun_app$j (fun_app$x (uvh$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$al ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$x (uvh$ ?v0 )?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_set_fun_fun$ )(?v1 A_llist$ )(?v2 Enat$ ))(! (= (fun_app$k (fun_app$bh (uvz$ ?v0 )?v1 )?v2 )(fun_app$e (fun_app$an ?v0 ?v2 )?v1 )):pattern ((fun_app$k (fun_app$bh (uvz$ ?v0 )?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_prod_a_llist_fun_fun$ )(?v1 Enat_a_llist_prod$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ai (uuk$ ?v0 )?v1 )?v2 )(fun_app$r (fun_app$ap ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$ai (uuk$ ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$as (uua$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$as ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$as (uua$ ?v0 )?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 Enat_enat_enat_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$j (fun_app$au (uvj$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$au ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$au (uvj$ ?v0 )?v1 )?v2 )))):named a41 ))
(assert (! (forall ((?v0 Enat_enat_enat_set_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$k (fun_app$aw (uvt$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$aw ?v0 ?v2 )?v1 )):pattern ((fun_app$k (fun_app$aw (uvt$ ?v0 )?v1 )?v2 )))):named a42 ))
(assert (! (forall ((?v0 Enat_enat_set_a_llist_fun_fun$ )(?v1 Enat_set$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$bi (uus$ ?v0 )?v1 )?v2 )(fun_app$ay (fun_app$az ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$bi (uus$ ?v0 )?v1 )?v2 )))):named a43 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_fun_fun$ )(?v1 Enat_set$ )(?v2 Enat$ ))(! (= (fun_app$j (fun_app$bj (uvr$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$bb ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$bj (uvr$ ?v0 )?v1 )?v2 )))):named a44 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_set_fun_fun$ )(?v1 Enat_set$ )(?v2 Enat$ ))(! (= (fun_app$k (fun_app$bk (uvx$ ?v0 )?v1 )?v2 )(fun_app$bd (fun_app$be ?v0 ?v2 )?v1 )):pattern ((fun_app$k (fun_app$bk (uvx$ ?v0 )?v1 )?v2 )))):named a45 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$m (uux$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$m (uux$ ?v0 )?v1 )?v2 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Enat_a_llist_prod_a_llist_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$aa (uvb$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$r ?v1 ?v2 ))):pattern ((fun_app$r (fun_app$aa (uvb$ ?v0 )?v1 )?v2 )))):named a47 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$aj (uuv$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$aj (uuv$ ?v0 )?v1 )?v2 )))):named a48 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_fun$ )(?v1 A_llist_enat_a_llist_prod_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$q (uva$ ?v0 )?v1 )?v2 )(fun_app$r ?v0 (fun_app$t ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$q (uva$ ?v0 )?v1 )?v2 )))):named a49 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$ae (uvc$ ?v0 )?v1 )?v2 )(fun_app$r ?v0 (fun_app$ag ?v1 ?v2 ))):pattern ((fun_app$r (fun_app$ae (uvc$ ?v0 )?v1 )?v2 )))):named a50 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_a_llist_fun$ )(?v1 Enat_enat_a_llist_prod_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ao (uuz$ ?v0 )?v1 )?v2 )(fun_app$r ?v0 (fun_app$aq ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ao (uuz$ ?v0 )?v1 )?v2 )))):named a51 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$u (uuw$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$u (uuw$ ?v0 )?v1 )?v2 )))):named a52 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat_a_llist_prod_enat_fun$ )(?v2 Enat_a_llist_prod$ ))(! (= (fun_app$r (fun_app$ah (uuy$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$h ?v1 ?v2 ))):pattern ((fun_app$r (fun_app$ah (uuy$ ?v0 )?v1 )?v2 )))):named a53 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ar (uuu$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ar (uuu$ ?v0 )?v1 )?v2 )))):named a54 ))
(assert (! (forall ((?v0 Enat_set_a_llist_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ax (uvd$ ?v0 )?v1 )?v2 )(fun_app$ay ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ax (uvd$ ?v0 )?v1 )?v2 )))):named a55 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$a (uvf$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (uvf$ ?v0 )?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Enat_a_llist_prod$ ))(! (= (fun_app$r (uve$ ?v0 )?v1 )?v0 ):pattern ((fun_app$r (uve$ ?v0 )?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Enat$ ))(! (= (fun_app$ (uvg$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uvg$ ?v0 )?v1 )))):named a58 ))
(assert (! (not (mcont$ sup$ less_eq$ lSup$ lprefix$ uu$ )):named a59 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$bl (fun_app$bm lprefix$ ?v0 )?v0 )):named a60 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$bl (fun_app$bm lprefix$ ?v0 )?v0 )):named a61 ))
(assert (! (mcont$a (fun_app$bn (prod_lub$ sup$ )lSup$ )(rel_prod$ less_eq$ lprefix$ )lSup$ lprefix$ (case_prod$ ltake$ )):named a62 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist$ ))(fun_app$bl (fun_app$bm lprefix$ (fun_app$a (fun_app$b ltake$ ?v0 )?v1 ))?v1 )):named a63 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (and (forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (fun_app$bo (fun_app$bp less_eq$ ?v3 )?v4 )(fun_app$bo (fun_app$bp ?v0 ?v3 )?v4 )))(=> (fun_app$bo (fun_app$bp ?v0 ?v1 )?v2 )(fun_app$bo (fun_app$bp ?v0 ?v2 )?v1 )))(fun_app$bo (fun_app$bp ?v0 ?v2 )?v1 ))):named a64 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$ ?v0 ?v1 lSup$ lprefix$ (fun_app$as ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$as (uua$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ar (uub$ ?v2 )?v5 )))):named a65 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (fun_app$b ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$v (uuc$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$aj (uud$ ?v2 )?v5 )))):named a66 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$ ?v0 ?v1 lSup$ lprefix$ (fun_app$v ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$b (uue$ ?v2 )?v6 )))(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$u (uuf$ ?v2 )?v5 )))):named a67 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (fun_app$n ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$n (uug$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$m (uuh$ ?v2 )?v5 )))):named a68 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_enat_fun$ ))(=> (and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$ ?v0 ?v1 lSup$ lprefix$ (fun_app$ai ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$ap (uui$ ?v2 )?v6 )))(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$ah (uuj$ ?v2 )?v5 )))):named a69 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 Enat_enat_a_llist_prod_a_llist_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_a_llist_prod_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$ap ?v2 ?v6 )))(and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ai (uuk$ ?v2 )?v6 )))(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ao (uul$ ?v2 )?v5 )))):named a70 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 A_llist_enat_a_llist_prod_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_a_llist_prod_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$s ?v2 ?v6 )))(and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$ab (uum$ ?v2 )?v6 )))(mcont$g ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$q (uun$ ?v2 )?v5 )))):named a71 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (fun_app$ab ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$s (uuo$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$aa (uup$ ?v2 )?v5 )))):named a72 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 Enat_a_llist_prod_enat_a_llist_prod_a_llist_fun_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_enat_a_llist_prod_fun$ ))(=> (and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$af ?v2 ?v6 )))(and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$af (uuq$ ?v2 )?v6 )))(mcont$h ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$ae (uur$ ?v2 )?v5 )))):named a73 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_a_llist_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$i ?v0 ?v1 lSup$ lprefix$ (fun_app$az ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$bi (uus$ ?v2 )?v6 )))(mcont$j ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ax (uut$ ?v2 )?v5 )))):named a74 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (mcont$ ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ar (uuu$ ?v2 )?v5 )))):named a75 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$aj (uuv$ ?v2 )?v5 )))):named a76 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (mcont$ ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$u (uuw$ ?v2 )?v5 )))):named a77 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$m (uux$ ?v2 )?v5 )))):named a78 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_enat_fun$ ))(=> (and (mcont$ ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$ah (uuy$ ?v2 )?v5 )))):named a79 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_a_llist_prod_fun$ ))(=> (and (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ao (uuz$ ?v2 )?v5 )))):named a80 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_a_llist_prod_fun$ ))(=> (and (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$g ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$q (uva$ ?v2 )?v5 )))):named a81 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$aa (uvb$ ?v2 )?v5 )))):named a82 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_enat_a_llist_prod_fun$ ))(=> (and (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$h ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$a ?v3 ?v4 lSup$ lprefix$ (fun_app$ae (uvc$ ?v2 )?v5 )))):named a83 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_set_a_llist_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (mcont$i ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$j ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ax (uvd$ ?v2 )?v5 )))):named a84 ))
(assert (! (forall ((?v0 Enat$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 Enat$ ))(=> (and (= (fun_app$a (fun_app$b ltake$ ?v0 )?v1 )(fun_app$a (fun_app$b ltake$ ?v0 )?v2 ))(fun_app$bo (fun_app$bp less_eq$ ?v3 )?v0 ))(= (fun_app$a (fun_app$b ltake$ ?v3 )?v1 )(fun_app$a (fun_app$b ltake$ ?v3 )?v2 )))):named a85 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$bl (fun_app$bm lprefix$ ?v0 )?v1 )(fun_app$bl (fun_app$bm lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a86 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$bl (fun_app$bm lprefix$ ?v0 )?v1 )(fun_app$bl (fun_app$bm lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a87 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$bl (fun_app$bm lprefix$ ?v0 )?v1 )(fun_app$bl (fun_app$bm lprefix$ ?v2 )?v1 ))(or (fun_app$bl (fun_app$bm lprefix$ ?v0 )?v2 )(fun_app$bl (fun_app$bm lprefix$ ?v2 )?v0 )))):named a88 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$bl (fun_app$bm lprefix$ ?v0 )?v1 )(fun_app$bl (fun_app$bm lprefix$ ?v1 )?v2 ))(fun_app$bl (fun_app$bm lprefix$ ?v0 )?v2 ))):named a89 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$bl (fun_app$bm lprefix$ ?v0 )?v1 )(fun_app$bl (fun_app$bm lprefix$ ?v1 )?v2 ))(fun_app$bl (fun_app$bm lprefix$ ?v0 )?v2 ))):named a90 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 A_llist$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (uve$ ?v2 ))):named a91 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (uvf$ ?v2 ))):named a92 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist$ ))(mcont$ ?v0 ?v1 lSup$ lprefix$ (uvg$ ?v2 ))):named a93 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$d ?v0 ?v1 sup$ less_eq$ (fun_app$al ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$x (uvh$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$ak (uvi$ ?v2 )?v5 )))):named a94 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$b ?v0 ?v1 sup$ less_eq$ (fun_app$au ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$au (uvj$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$at (uvk$ ?v2 )?v5 )))):named a95 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$b ?v0 ?v1 sup$ less_eq$ (fun_app$x ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$al (uvl$ ?v2 )?v6 )))(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$w (uvm$ ?v2 )?v5 )))):named a96 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$d ?v0 ?v1 sup$ less_eq$ (fun_app$p ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$p (uvn$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$o (uvo$ ?v2 )?v5 )))):named a97 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_enat_fun_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$d ?v0 ?v1 sup$ less_eq$ (fun_app$ad ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$bg (uvp$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$ac (uvq$ ?v2 )?v5 )))):named a98 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$k ?v0 ?v1 sup$ less_eq$ (fun_app$bb ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$bj (uvr$ ?v2 )?v6 )))(mcont$j ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$ba (uvs$ ?v2 )?v5 )))):named a99 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$j ?v0 ?v1 sup$a less_eq$a (fun_app$aw ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$aw (uvt$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$av (uvu$ ?v2 )?v5 )))):named a100 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 A_llist_enat_set_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_set_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$k ?v0 ?v1 sup$ less_eq$ (fun_app$z ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$bf (uvv$ ?v2 )?v6 )))(mcont$l ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$y (uvw$ ?v2 )?v5 )))):named a101 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$m ?v0 ?v1 sup$a less_eq$a (fun_app$be ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$bk (uvx$ ?v2 )?v6 )))(mcont$j ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$bc (uvy$ ?v2 )?v5 )))):named a102 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$l ?v0 ?v1 sup$a less_eq$a (fun_app$an ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$bh (uvz$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$am (uwa$ ?v2 )?v5 )))):named a103 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$d ?v0 ?v1 sup$ less_eq$ (fun_app$al ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$x (uvh$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$ak (uvi$ ?v2 )?v5 )))):named a104 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$b ?v0 ?v1 sup$ less_eq$ (fun_app$au ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$au (uvj$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$at (uvk$ ?v2 )?v5 )))):named a105 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$b ?v0 ?v1 sup$ less_eq$ (fun_app$x ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$al (uvl$ ?v2 )?v6 )))(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$w (uvm$ ?v2 )?v5 )))):named a106 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$d ?v0 ?v1 sup$ less_eq$ (fun_app$p ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$p (uvn$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$o (uvo$ ?v2 )?v5 )))):named a107 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_prod_a_llist_enat_fun_fun$ )(?v3 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v4 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v5 Enat_a_llist_prod_a_llist_fun$ ))(=> (and (forall ((?v6 Enat_a_llist_prod$ ))(mcont$d ?v0 ?v1 sup$ less_eq$ (fun_app$ad ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$bg (uvp$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$ac (uvq$ ?v2 )?v5 )))):named a108 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$k ?v0 ?v1 sup$ less_eq$ (fun_app$bb ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$bj (uvr$ ?v2 )?v6 )))(mcont$j ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$ less_eq$ (fun_app$ba (uvs$ ?v2 )?v5 )))):named a109 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$j ?v0 ?v1 sup$a less_eq$a (fun_app$aw ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$aw (uvt$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$av (uvu$ ?v2 )?v5 )))):named a110 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 A_llist_enat_set_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_set_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$k ?v0 ?v1 sup$ less_eq$ (fun_app$z ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$bf (uvv$ ?v2 )?v6 )))(mcont$l ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$ less_eq$ (fun_app$y (uvw$ ?v2 )?v5 )))):named a111 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$m ?v0 ?v1 sup$a less_eq$a (fun_app$be ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$bk (uvx$ ?v2 )?v6 )))(mcont$j ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$bc (uvy$ ?v2 )?v5 )))):named a112 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$l ?v0 ?v1 sup$a less_eq$a (fun_app$an ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$bh (uvz$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$j ?v3 ?v4 sup$a less_eq$a (fun_app$am (uwa$ ?v2 )?v5 )))):named a113 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_enat_set_set_fun$ ))(=> (mcont$n ?v0 ?v1 sup$b less_eq$b ?v2 )(mcont$l ?v0 ?v1 sup$a less_eq$a (uwb$ ?v2 )))):named a114 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_set_set_fun$ ))(=> (mcont$o ?v0 ?v1 sup$b less_eq$b ?v2 )(mcont$j ?v0 ?v1 sup$a less_eq$a (uwc$ ?v2 )))):named a115 ))
(assert (! (forall ((?v0 Enat_a_llist_prod_set_enat_a_llist_prod_fun$ )(?v1 Enat_a_llist_prod_enat_a_llist_prod_bool_fun_fun$ )(?v2 Enat_a_llist_prod_enat_set_fun$ ))(=> (mcont$p ?v0 ?v1 sup$a less_eq$a ?v2 )(mcont$e ?v0 ?v1 sup$ less_eq$ (uwd$ ?v2 )))):named a116 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_set_fun$ ))(=> (mcont$j ?v0 ?v1 sup$a less_eq$a ?v2 )(mcont$b ?v0 ?v1 sup$ less_eq$ (uwe$ ?v2 )))):named a117 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_enat_set_fun$ ))(=> (mcont$l ?v0 ?v1 sup$a less_eq$a ?v2 )(mcont$d ?v0 ?v1 sup$ less_eq$ (uwf$ ?v2 )))):named a118 ))
(check-sat )
;(get-unsat-core )
