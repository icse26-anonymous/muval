;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-datatypes ()((A_list$ (nil$ )(cons$ (hd$ A$ )(tl$ A_list$ )))))
(declare-fun l1$ ()A_list$ )
(declare-fun l2$ ()A_list$ )
(declare-fun x1$ ()A$ )
(declare-fun x2$ ()A$ )
(declare-fun l1a$ ()A_list$ )
(declare-fun l2b$ ()A_list$ )
(declare-fun set$ (A_list$ )A_set$ )
(declare-fun less$ (A$ A$ )Bool )
(declare-fun minus$ (A_set$ A_set$ )A_set$ )
(declare-fun insert$ (A$ A_set$ )A_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun sorted$ (A_list$ )Bool )
(declare-fun less_eq$ (A$ A$ )Bool )
(declare-fun distinct$ (A_list$ )Bool )
(declare-fun diff_sorted$ (A_list$ A_list$ )A_list$ )
(assert (! (not (and (sorted$ (cons$ x1$ (diff_sorted$ l1a$ (cons$ x2$ l2b$ ))))(= (insert$ x1$ (minus$ (set$ l1a$ )(insert$ x2$ (set$ l2b$ ))))(minus$ (insert$ x1$ (set$ l1a$ ))(insert$ x2$ (set$ l2b$ )))))):named a0 ))
(assert (! (and (distinct$ (diff_sorted$ l1a$ (cons$ x2$ l2b$ )))(and (sorted$ (diff_sorted$ l1a$ (cons$ x2$ l2b$ )))(= (set$ (diff_sorted$ l1a$ (cons$ x2$ l2b$ )))(minus$ (set$ l1a$ )(insert$ x2$ (set$ l2b$ )))))):named a1 ))
(assert (! (less$ x1$ x2$ ):named a2 ))
(assert (! (not (member$ x1$ (set$ l1a$ ))):named a3 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(less_eq$ x1$ ?v0 ))):named a4 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l2b$ ))(less_eq$ x2$ ?v0 ))):named a5 ))
(assert (! (and (distinct$ l1$ )(sorted$ l1$ )):named a6 ))
(assert (! (and (distinct$ l2$ )(sorted$ l2$ )):named a7 ))
(assert (! (less$ x1$ x2$ ):named a8 ))
(assert (! (and (distinct$ (cons$ x1$ l1a$ ))(sorted$ (cons$ x1$ l1a$ ))):named a9 ))
(assert (! (and (distinct$ (cons$ x2$ l2b$ ))(sorted$ (cons$ x2$ l2b$ ))):named a10 ))
(assert (! (and (distinct$ l1a$ )(sorted$ l1a$ )):named a11 ))
(assert (! (and (distinct$ l2b$ )(sorted$ l2b$ )):named a12 ))
(assert (! (not (member$ x1$ (set$ l1a$ ))):named a13 ))
(assert (! (not (member$ x2$ (set$ l2b$ ))):named a14 ))
(assert (! (=> (and (distinct$ l2b$ )(sorted$ l2b$ ))(and (distinct$ (diff_sorted$ (cons$ x1$ l1a$ )l2b$ ))(and (sorted$ (diff_sorted$ (cons$ x1$ l1a$ )l2b$ ))(= (set$ (diff_sorted$ (cons$ x1$ l1a$ )l2b$ ))(minus$ (set$ (cons$ x1$ l1a$ ))(set$ l2b$ )))))):named a15 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(less_eq$ x1$ ?v0 ))):named a16 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l2b$ ))(less_eq$ x2$ ?v0 ))):named a17 ))
(assert (! (forall ((?v0 A_list$ ))(=> (and (distinct$ ?v0 )(sorted$ ?v0 ))(and (distinct$ (diff_sorted$ l1a$ ?v0 ))(and (sorted$ (diff_sorted$ l1a$ ?v0 ))(= (set$ (diff_sorted$ l1a$ ?v0 ))(minus$ (set$ l1a$ )(set$ ?v0 ))))))):named a18 ))
(assert (! (and (distinct$ (diff_sorted$ (cons$ x1$ l1a$ )l2b$ ))(and (sorted$ (diff_sorted$ (cons$ x1$ l1a$ )l2b$ ))(= (set$ (diff_sorted$ (cons$ x1$ l1a$ )l2b$ ))(minus$ (set$ (cons$ x1$ l1a$ ))(set$ l2b$ ))))):named a19 ))
(assert (! (and (distinct$ (diff_sorted$ l1a$ (cons$ x2$ l2b$ )))(and (sorted$ (diff_sorted$ l1a$ (cons$ x2$ l2b$ )))(= (set$ (diff_sorted$ l1a$ (cons$ x2$ l2b$ )))(minus$ (set$ l1a$ )(set$ (cons$ x2$ l2b$ )))))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A_list$ )(?v2 A$ )(?v3 A_list$ ))(! (= (diff_sorted$ (cons$ ?v0 ?v1 )(cons$ ?v2 ?v3 ))(ite (less$ ?v0 ?v2 )(cons$ ?v0 (diff_sorted$ ?v1 (cons$ ?v2 ?v3 )))(ite (= ?v0 ?v2 )(diff_sorted$ ?v1 ?v3 )(diff_sorted$ (cons$ ?v0 ?v1 )?v3 )))):pattern ((diff_sorted$ (cons$ ?v0 ?v1 )(cons$ ?v2 ?v3 ))))):named a21 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_list$ ))(! (= (sorted$ (cons$ ?v0 (cons$ ?v1 ?v2 )))(and (less_eq$ ?v0 ?v1 )(sorted$ (cons$ ?v1 ?v2 )))):pattern ((cons$ ?v0 (cons$ ?v1 ?v2 ))))):named a22 ))
(check-sat )
;(get-unsat-core )
