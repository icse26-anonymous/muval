;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-datatypes ()((A_list$ (nil$ )(cons$ (hd$ A$ )(tl$ A_list$ )))))
(declare-fun l1$ ()A_list$ )
(declare-fun l2$ ()A_list$ )
(declare-fun x1$ ()A$ )
(declare-fun l1a$ ()A_list$ )
(declare-fun l2a$ ()A_list$ )
(declare-fun set$ (A_list$ )A_set$ )
(declare-fun minus$ (A_set$ A_set$ )A_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun sorted$ (A_list$ )Bool )
(declare-fun less_eq$ (A$ A$ )Bool )
(declare-fun distinct$ (A_list$ )Bool )
(declare-fun diff_sorted$ (A_list$ A_list$ )A_list$ )
(assert (! (not (and (distinct$ (diff_sorted$ (cons$ x1$ l1a$ )nil$ ))(and (sorted$ (diff_sorted$ (cons$ x1$ l1a$ )nil$ ))(= (set$ (diff_sorted$ (cons$ x1$ l1a$ )nil$ ))(minus$ (set$ (cons$ x1$ l1a$ ))(set$ nil$ )))))):named a0 ))
(assert (! (and (distinct$ nil$ )(sorted$ nil$ )):named a1 ))
(assert (! (and (distinct$ l1$ )(sorted$ l1$ )):named a2 ))
(assert (! (and (distinct$ l2$ )(sorted$ l2$ )):named a3 ))
(assert (! (and (distinct$ l2a$ )(sorted$ l2a$ )):named a4 ))
(assert (! (and (distinct$ (cons$ x1$ l1a$ ))(sorted$ (cons$ x1$ l1a$ ))):named a5 ))
(assert (! (and (distinct$ l1a$ )(sorted$ l1a$ )):named a6 ))
(assert (! (not (member$ x1$ (set$ l1a$ ))):named a7 ))
(assert (! (forall ((?v0 A_list$ ))(=> (and (distinct$ ?v0 )(sorted$ ?v0 ))(and (distinct$ (diff_sorted$ l1a$ ?v0 ))(and (sorted$ (diff_sorted$ l1a$ ?v0 ))(= (set$ (diff_sorted$ l1a$ ?v0 ))(minus$ (set$ l1a$ )(set$ ?v0 ))))))):named a8 ))
(assert (! (forall ((?v0 A_list$ ))(=> (and (and (distinct$ l1a$ )(sorted$ l1a$ ))(and (distinct$ ?v0 )(sorted$ ?v0 )))(and (distinct$ (diff_sorted$ l1a$ ?v0 ))(and (sorted$ (diff_sorted$ l1a$ ?v0 ))(= (set$ (diff_sorted$ l1a$ ?v0 ))(minus$ (set$ l1a$ )(set$ ?v0 ))))))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A_list$ ))(! (= (diff_sorted$ (cons$ ?v0 ?v1 )nil$ )(cons$ ?v0 ?v1 )):pattern ((cons$ ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_list$ ))(! (= (diff_sorted$ nil$ ?v0 )nil$ ):pattern ((diff_sorted$ nil$ ?v0 )))):named a11 ))
(assert (! (forall ((?v0 A$ ))(sorted$ (cons$ ?v0 nil$ ))):named a12 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(less_eq$ x1$ ?v0 ))):named a13 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ ))(=> (and (sorted$ ?v0 )(and (distinct$ ?v0 )(and (sorted$ ?v1 )(and (distinct$ ?v1 )(= (set$ ?v0 )(set$ ?v1 ))))))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A_list$ ))(! (= (distinct$ (cons$ ?v0 ?v1 ))(and (not (member$ ?v0 (set$ ?v1 )))(distinct$ ?v1 ))):pattern ((cons$ ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A$ ))(distinct$ (cons$ ?v0 nil$ ))):named a16 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_set$ ))(= (member$ ?v0 (minus$ ?v1 ?v2 ))(and (member$ ?v0 ?v1 )(not (member$ ?v0 ?v2 ))))):named a17 ))
(check-sat )
;(get-unsat-core )
