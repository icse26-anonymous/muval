;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-datatypes ()((A_list$ (nil$ )(cons$ (hd$ A$ )(tl$ A_list$ )))))
(declare-fun a$ ()A$ )
(declare-fun x$ ()A$ )
(declare-fun set$ (A_list$ )A_set$ )
(declare-fun xsa$ ()A_list$ )
(declare-fun less$ (A$ A$ )Bool )
(declare-fun less$a (A_set$ A_set$ )Bool )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun sorted$ (A_list$ )Bool )
(declare-fun less_eq$ (A$ A$ )Bool )
(declare-fun distinct$ (A_list$ )Bool )
(declare-fun less_eq$a (A_set$ A_set$ )Bool )
(declare-fun delete_sorted$ (A$ A_list$ )A_list$ )
(assert (! (not (and (=> (= x$ a$ )(forall ((?v0 A$ ))(= (member$ ?v0 (set$ xsa$ ))(and (or (= ?v0 a$ )(member$ ?v0 (set$ xsa$ )))(not (= ?v0 a$ ))))))(=> (not (= x$ a$ ))(and (=> (less$ a$ x$ )(forall ((?v0 A$ ))(= (or (= ?v0 a$ )(and (member$ ?v0 (set$ xsa$ ))(not (= ?v0 x$ ))))(and (or (= ?v0 a$ )(member$ ?v0 (set$ xsa$ )))(not (= ?v0 x$ ))))))(=> (not (less$ a$ x$ ))(forall ((?v0 A$ ))(= (or (= ?v0 a$ )(member$ ?v0 (set$ xsa$ )))(and (or (= ?v0 a$ )(member$ ?v0 (set$ xsa$ )))(not (= ?v0 x$ )))))))))):named a0 ))
(assert (! (and (distinct$ (delete_sorted$ x$ xsa$ ))(and (sorted$ (delete_sorted$ x$ xsa$ ))(forall ((?v0 A$ ))(= (member$ ?v0 (set$ (delete_sorted$ x$ xsa$ )))(and (member$ ?v0 (set$ xsa$ ))(not (= ?v0 x$ ))))))):named a1 ))
(assert (! (and (sorted$ xsa$ )(forall ((?v0 A$ ))(=> (member$ ?v0 (set$ xsa$ ))(less_eq$ a$ ?v0 )))):named a2 ))
(assert (! (and (not (member$ a$ (set$ xsa$ )))(distinct$ xsa$ )):named a3 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ ))(=> (and (and (distinct$ ?v0 )(sorted$ ?v0 ))(and (distinct$ ?v1 )(sorted$ ?v1 )))(= (= ?v0 ?v1 )(= (set$ ?v0 )(set$ ?v1 ))))):named a4 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_list$ ))(=> (and (sorted$ ?v0 )(and (distinct$ ?v0 )(and (sorted$ ?v1 )(and (distinct$ ?v1 )(= (set$ ?v0 )(set$ ?v1 ))))))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a6 ))
(assert (! (forall ((?v0 A$ ))(less_eq$ ?v0 ?v0 )):named a7 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$a ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$a ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$ ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$a ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v1 ?v0 )))):pattern ((less$ ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$a ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$a ?v0 ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (= ?v0 ?v1 )))):pattern ((less$ ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less$a ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(not (less_eq$a ?v1 ?v0 )))):pattern ((less$a ?v0 ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less$ ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(not (less_eq$ ?v1 ?v0 )))):pattern ((less$ ?v0 ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less_eq$a ?v0 ?v1 )(or (less$a ?v0 ?v1 )(= ?v1 ?v0 ))):pattern ((less_eq$a ?v0 ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less_eq$ ?v0 ?v1 )(or (less$ ?v0 ?v1 )(= ?v1 ?v0 ))):pattern ((less_eq$ ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (less_eq$a ?v0 ?v1 )(or (less$a ?v0 ?v1 )(= ?v0 ?v1 ))):pattern ((less_eq$a ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (less_eq$ ?v0 ?v1 )(or (less$ ?v0 ?v1 )(= ?v0 ?v1 ))):pattern ((less_eq$ ?v0 ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_list$ )(?v1 A_set$ ))(= (less_eq$a (set$ ?v0 )?v1 )(forall ((?v2 A$ ))(=> (member$ ?v2 (set$ ?v0 ))(member$ ?v2 ?v1 ))))):named a24 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a25 ))
(assert (! (forall ((?v0 A$ ))(less_eq$ ?v0 ?v0 )):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(or (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))):named a27 ))
(check-sat )
;(get-unsat-core )
