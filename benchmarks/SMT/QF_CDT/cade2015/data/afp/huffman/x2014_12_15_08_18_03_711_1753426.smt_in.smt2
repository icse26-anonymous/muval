;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_nat_fun$ 0 )
(declare-sort A_a_prod_set$ 0 )
(declare-sort A_a_tree_fun$ 0 )
(declare-sort A_tree_a_fun$ 0 )
(declare-sort A_set_nat_fun$ 0 )
(declare-sort A_tree_nat_fun$ 0 )
(declare-sort A_tree_bool_fun$ 0 )
(declare-sort Nat_nat_prod_set$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_tree_set_nat_fun$ 0 )
(declare-sort A_a_tree_a_prod_fun$ 0 )
(declare-sort A_tree_a_prod_a_fun$ 0 )
(declare-sort A_set_a_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_nat_fun$ 0 )
(declare-sort A_list_a_list_prod_set$ 0 )
(declare-sort A_tree_a_prod_bool_fun$ 0 )
(declare-sort A_tree_a_tree_prod_set$ 0 )
(declare-sort A_tree_a_a_prod_set_fun$ 0 )
(declare-sort A_tree_a_prod_a_tree_fun$ 0 )
(declare-sort A_tree_a_prod_list_a_fun$ 0 )
(declare-sort A_tree_a_tree_a_prod_fun$ 0 )
(declare-sort A_tree_a_prod_set_nat_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_list_nat_fun$ 0 )
(declare-sort A_set_set_a_set_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_set_set_nat_fun$ 0 )
(declare-sort A_set_list_a_set_list_prod_set$ 0 )
(declare-sort A_tree_a_prod_list_set_nat_fun$ 0 )
(declare-sort A_tree_set_a_tree_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_a_prod_fun$ 0 )
(declare-sort A_tree_list_a_tree_list_prod_set$ 0 )
(declare-sort A_a_tree_prod_a_a_tree_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_a_prod_prod_set$ 0 )
(declare-sort A_tree_set_set_a_tree_set_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_a_prod_prod_nat_fun$ 0 )
(declare-sort A_tree_set_list_a_tree_set_list_prod_set$ 0 )
(declare-sort A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ 0 )
(declare-sort A_tree_a_tree_prod_a_tree_a_tree_prod_prod_set$ 0 )
(declare-sort A_a_tree_a_prod_prod_a_a_tree_a_prod_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_prod_a_tree_a_prod_a_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ 0 )
(declare-sort A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_set_list_a_tree_a_prod_set_list_prod_set$ 0 )
(declare-sort A_tree_a_prod_list_list_a_tree_a_prod_list_list_prod_set$ 0 )
(declare-sort A_a_tree_a_prod_list_prod_a_a_tree_a_prod_list_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_prod_a_tree_a_prod_a_tree_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_set_set_set_a_tree_a_prod_set_set_set_prod_set$ 0 )
(declare-sort A_tree_a_tree_a_prod_prod_a_tree_a_tree_a_prod_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_list_set_set_a_tree_a_prod_list_set_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_nat_fun_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ 0 )
(declare-sort A_tree_a_prod_set_set_list_a_tree_a_prod_set_set_list_prod_set$ 0 )
(declare-sort A_tree_a_prod_list_set_list_a_tree_a_prod_list_set_list_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_a_prod_prod_set_a_tree_a_prod_a_tree_a_prod_prod_set_prod_set$ 0 )
(declare-sort A_tree_a_prod_a_tree_a_prod_prod_list_a_tree_a_prod_a_tree_a_prod_prod_list_prod_set$ 0 )
(declare-datatypes ()((A_tree$ (leaf$ (select$ Nat$ )(selecta$ A$ ))(innerNode$ (selectb$ Nat$ )(selectc$ A_tree$ )(selectd$ A_tree$ )))(A_tree_a_prod$ (pair$ (fst$ A_tree$ )(snd$ A$ )))(A_tree_a_prod_list$ (nil$ )(cons$ (hd$ A_tree_a_prod$ )(tl$ A_tree_a_prod_list$ )))(A_tree_a_prod_a_tree_a_prod_prod$ (pair$a (fst$a A_tree_a_prod$ )(snd$a A_tree_a_prod$ )))(A_tree_a_prod_a_tree_a_prod_prod_nat_fun_list$ (nil$a )(cons$a (selecte$ A_tree_a_prod_a_tree_a_prod_prod_nat_fun$ )(selectf$ A_tree_a_prod_a_tree_a_prod_prod_nat_fun_list$ )))(A_tree_nat_fun_list$ (nil$b )(cons$b (selectg$ A_tree_nat_fun$ )(selecth$ A_tree_nat_fun_list$ )))(A_nat_fun_list$ (nil$c )(cons$c (selecti$ A_nat_fun$ )(selectj$ A_nat_fun_list$ )))(A_tree_a_prod_list_nat_fun_list$ (nil$d )(cons$d (selectk$ A_tree_a_prod_list_nat_fun$ )(selectl$ A_tree_a_prod_list_nat_fun_list$ )))(A_tree_a_prod_set_nat_fun_list$ (nil$e )(cons$e (selectm$ A_tree_a_prod_set_nat_fun$ )(selectn$ A_tree_a_prod_set_nat_fun_list$ )))(A_tree_a_prod_nat_fun_list$ (nil$f )(cons$f (selecto$ A_tree_a_prod_nat_fun$ )(selectp$ A_tree_a_prod_nat_fun_list$ )))))
(declare-fun r$ ()A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun wf$ (A_tree_a_prod_a_tree_a_prod_prod_set$ )Bool )
(declare-fun lex$ (A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun wf$a (A_tree_a_tree_prod_set$ )Bool )
(declare-fun wf$b (A_a_prod_set$ )Bool )
(declare-fun wf$c (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )Bool )
(declare-fun wf$d (A_a_prod_a_a_prod_prod_set$ )Bool )
(declare-fun wf$e (A_a_tree_prod_a_a_tree_prod_prod_set$ )Bool )
(declare-fun wf$f (A_tree_a_tree_prod_a_tree_a_tree_prod_prod_set$ )Bool )
(declare-fun wf$g (A_tree_a_prod_a_prod_a_tree_a_prod_a_prod_prod_set$ )Bool )
(declare-fun wf$h (A_a_tree_a_prod_prod_a_a_tree_a_prod_prod_prod_set$ )Bool )
(declare-fun wf$i (A_tree_a_prod_a_tree_prod_a_tree_a_prod_a_tree_prod_prod_set$ )Bool )
(declare-fun wf$j (A_tree_a_tree_a_prod_prod_a_tree_a_tree_a_prod_prod_prod_set$ )Bool )
(declare-fun wf$k (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )Bool )
(declare-fun wf$l (A_a_tree_a_prod_list_prod_a_a_tree_a_prod_list_prod_prod_set$ )Bool )
(declare-fun wf$m (A_list_a_list_prod_set$ )Bool )
(declare-fun wf$n (A_tree_list_a_tree_list_prod_set$ )Bool )
(declare-fun wf$o (A_tree_a_prod_list_list_a_tree_a_prod_list_list_prod_set$ )Bool )
(declare-fun wf$p (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )Bool )
(declare-fun wf$q (A_tree_a_prod_set_list_a_tree_a_prod_set_list_prod_set$ )Bool )
(declare-fun wf$r (A_tree_a_prod_a_tree_a_prod_prod_list_a_tree_a_prod_a_tree_a_prod_prod_list_prod_set$ )Bool )
(declare-fun wf$s (A_set_a_set_prod_set$ )Bool )
(declare-fun wf$t (A_set_list_a_set_list_prod_set$ )Bool )
(declare-fun wf$u (A_tree_set_a_tree_set_prod_set$ )Bool )
(declare-fun wf$v (A_tree_set_list_a_tree_set_list_prod_set$ )Bool )
(declare-fun wf$w (A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )Bool )
(declare-fun wf$x (A_tree_a_prod_list_set_list_a_tree_a_prod_list_set_list_prod_set$ )Bool )
(declare-fun wf$y (A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )Bool )
(declare-fun wf$z (A_tree_a_prod_set_set_list_a_tree_a_prod_set_set_list_prod_set$ )Bool )
(declare-fun lex$a (A_a_prod_set$ )A_list_a_list_prod_set$ )
(declare-fun lex$b (A_tree_a_tree_prod_set$ )A_tree_list_a_tree_list_prod_set$ )
(declare-fun lex$c (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )A_tree_a_prod_list_list_a_tree_a_prod_list_list_prod_set$ )
(declare-fun lex$d (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )A_tree_a_prod_set_list_a_tree_a_prod_set_list_prod_set$ )
(declare-fun lex$e (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_list_a_tree_a_prod_a_tree_a_prod_prod_list_prod_set$ )
(declare-fun lex$f (A_set_a_set_prod_set$ )A_set_list_a_set_list_prod_set$ )
(declare-fun lex$g (A_tree_set_a_tree_set_prod_set$ )A_tree_set_list_a_tree_set_list_prod_set$ )
(declare-fun lex$h (A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )A_tree_a_prod_list_set_list_a_tree_a_prod_list_set_list_prod_set$ )
(declare-fun lex$i (A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )A_tree_a_prod_set_set_list_a_tree_a_prod_set_set_list_prod_set$ )
(declare-fun lexn$ (A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ Nat$ )A_tree_a_prod_set_set_list_a_tree_a_prod_set_set_list_prod_set$ )
(declare-fun wf$aa (A_tree_a_prod_a_tree_a_prod_prod_set_a_tree_a_prod_a_tree_a_prod_prod_set_prod_set$ )Bool )
(declare-fun wf$ab (A_set_set_a_set_set_prod_set$ )Bool )
(declare-fun wf$ac (A_tree_set_set_a_tree_set_set_prod_set$ )Bool )
(declare-fun wf$ad (A_tree_a_prod_list_set_set_a_tree_a_prod_list_set_set_prod_set$ )Bool )
(declare-fun wf$ae (A_tree_a_prod_set_set_set_a_tree_a_prod_set_set_set_prod_set$ )Bool )
(declare-fun lexn$a (A_set_a_set_prod_set$ Nat$ )A_set_list_a_set_list_prod_set$ )
(declare-fun lexn$b (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ Nat$ )A_tree_a_prod_a_tree_a_prod_prod_list_a_tree_a_prod_a_tree_a_prod_prod_list_prod_set$ )
(declare-fun lexn$c (A_tree_a_tree_prod_set$ Nat$ )A_tree_list_a_tree_list_prod_set$ )
(declare-fun lexn$d (A_a_prod_set$ Nat$ )A_list_a_list_prod_set$ )
(declare-fun lexn$e (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ Nat$ )A_tree_a_prod_list_list_a_tree_a_prod_list_list_prod_set$ )
(declare-fun lexn$f (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ Nat$ )A_tree_a_prod_set_list_a_tree_a_prod_set_list_prod_set$ )
(declare-fun lexn$g (A_tree_a_prod_a_tree_a_prod_prod_set$ Nat$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun compat$ (A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_prod_a_tree_a_prod_fun$ )Bool )
(declare-fun lenlex$ (A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun member$ (A_tree_a_prod_a_tree_a_prod_prod$ A_tree_a_prod_a_tree_a_prod_prod_set$ )Bool )
(declare-fun acyclic$ (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )Bool )
(declare-fun compat$a (A_a_prod_set$ A_a_prod_set$ A_a_fun$ )Bool )
(declare-fun compat$b (A_a_prod_set$ A_tree_a_tree_prod_set$ A_a_tree_fun$ )Bool )
(declare-fun compat$c (A_tree_a_tree_prod_set$ A_a_prod_set$ A_tree_a_fun$ )Bool )
(declare-fun compat$d (A_tree_a_tree_prod_set$ A_tree_a_tree_prod_set$ A_tree_a_tree_fun$ )Bool )
(declare-fun compat$e (A_a_prod_set$ A_tree_a_prod_a_tree_a_prod_prod_set$ A_a_tree_a_prod_fun$ )Bool )
(declare-fun compat$f (A_tree_a_prod_a_tree_a_prod_prod_set$ A_a_prod_set$ A_tree_a_prod_a_fun$ )Bool )
(declare-fun compat$g (A_tree_a_tree_prod_set$ A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_tree_a_prod_fun$ )Bool )
(declare-fun compat$h (A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_tree_prod_set$ A_tree_a_prod_a_tree_fun$ )Bool )
(declare-fun compat$i (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ A_a_prod_set$ A_tree_a_prod_list_a_fun$ )Bool )
(declare-fun fun_app$ (A_tree_a_prod_bool_fun$ A_tree_a_prod$ )Bool )
(declare-fun lenlex$a (A_a_prod_set$ )A_list_a_list_prod_set$ )
(declare-fun lenlex$b (A_tree_a_tree_prod_set$ )A_tree_list_a_tree_list_prod_set$ )
(declare-fun lenlex$c (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )A_tree_a_prod_list_list_a_tree_a_prod_list_list_prod_set$ )
(declare-fun lenlex$d (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )A_tree_a_prod_set_list_a_tree_a_prod_set_list_prod_set$ )
(declare-fun lenlex$e (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_list_a_tree_a_prod_a_tree_a_prod_prod_list_prod_set$ )
(declare-fun lenlex$f (A_set_a_set_prod_set$ )A_set_list_a_set_list_prod_set$ )
(declare-fun lenlex$g (A_tree_set_a_tree_set_prod_set$ )A_tree_set_list_a_tree_set_list_prod_set$ )
(declare-fun lenlex$h (A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )A_tree_a_prod_list_set_list_a_tree_a_prod_list_set_list_prod_set$ )
(declare-fun lenlex$i (A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )A_tree_a_prod_set_set_list_a_tree_a_prod_set_set_list_prod_set$ )
(declare-fun max_ext$ (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_set_a_tree_a_prod_a_tree_a_prod_prod_set_prod_set$ )
(declare-fun measure$ ()A_tree_a_prod_nat_fun_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ )
(declare-fun min_ext$ (A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )
(declare-fun acyclic$a (A_tree_a_tree_prod_set$ )Bool )
(declare-fun acyclic$b (A_a_prod_set$ )Bool )
(declare-fun acyclic$c (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )Bool )
(declare-fun acyclic$d (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )Bool )
(declare-fun acyclic$e (A_tree_a_prod_a_tree_a_prod_prod_set$ )Bool )
(declare-fun fun_app$a (A_tree_a_prod_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ A_tree_a_prod$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun fun_app$b (A_tree_bool_fun$ A_tree$ )Bool )
(declare-fun fun_app$c (A_tree_a_a_prod_set_fun$ A_tree$ )A_a_prod_set$ )
(declare-fun fun_app$d (A_tree_a_prod_nat_fun_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ A_tree_a_prod_nat_fun$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun fun_app$e (A_tree_a_prod_a_tree_a_prod_fun$ A_tree_a_prod$ )A_tree_a_prod$ )
(declare-fun lex_prod$ (A_tree_a_tree_prod_set$ A_a_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun listrel1$ (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_list_a_tree_a_prod_a_tree_a_prod_prod_list_prod_set$ )
(declare-fun max_ext$a (A_tree_a_tree_prod_set$ )A_tree_set_a_tree_set_prod_set$ )
(declare-fun max_ext$b (A_a_prod_set$ )A_set_a_set_prod_set$ )
(declare-fun max_ext$c (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )
(declare-fun max_ext$d (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )
(declare-fun max_ext$e (A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )
(declare-fun measure$a (A_nat_fun$ )A_a_prod_set$ )
(declare-fun measure$b (A_tree_nat_fun$ )A_tree_a_tree_prod_set$ )
(declare-fun measure$c (A_tree_a_prod_list_nat_fun$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun measure$d (A_tree_a_prod_set_nat_fun$ )A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )
(declare-fun measure$e (A_tree_a_prod_a_tree_a_prod_prod_nat_fun$ )A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )
(declare-fun measure$f (A_set_nat_fun$ )A_set_a_set_prod_set$ )
(declare-fun measure$g (A_tree_set_nat_fun$ )A_tree_set_a_tree_set_prod_set$ )
(declare-fun measure$h (A_tree_a_prod_list_set_nat_fun$ )A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )
(declare-fun measure$i (A_tree_a_prod_set_set_nat_fun$ )A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )
(declare-fun measures$ (A_tree_a_prod_a_tree_a_prod_prod_nat_fun_list$ )A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )
(declare-fun min_ext$a (A_a_prod_set$ )A_set_a_set_prod_set$ )
(declare-fun min_ext$b (A_tree_a_tree_prod_set$ )A_tree_set_a_tree_set_prod_set$ )
(declare-fun min_ext$c (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )
(declare-fun min_ext$d (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )
(declare-fun min_ext$e (A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_set_a_tree_a_prod_a_tree_a_prod_prod_set_prod_set$ )
(declare-fun min_ext$f (A_set_a_set_prod_set$ )A_set_set_a_set_set_prod_set$ )
(declare-fun min_ext$g (A_tree_set_a_tree_set_prod_set$ )A_tree_set_set_a_tree_set_set_prod_set$ )
(declare-fun min_ext$h (A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )A_tree_a_prod_list_set_set_a_tree_a_prod_list_set_set_prod_set$ )
(declare-fun min_ext$i (A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )A_tree_a_prod_set_set_set_a_tree_a_prod_set_set_set_prod_set$ )
(declare-fun same_fst$ (A_tree_a_prod_bool_fun$ A_tree_a_prod_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ )A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )
(declare-fun inv_image$ (A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_prod_a_tree_a_prod_fun$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun less_than$ ()Nat_nat_prod_set$ )
(declare-fun lex_prod$a (A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )
(declare-fun lex_prod$b (A_a_prod_set$ A_a_prod_set$ )A_a_prod_a_a_prod_prod_set$ )
(declare-fun lex_prod$c (A_a_prod_set$ A_tree_a_tree_prod_set$ )A_a_tree_prod_a_a_tree_prod_prod_set$ )
(declare-fun lex_prod$d (A_tree_a_tree_prod_set$ A_tree_a_tree_prod_set$ )A_tree_a_tree_prod_a_tree_a_tree_prod_prod_set$ )
(declare-fun lex_prod$e (A_tree_a_prod_a_tree_a_prod_prod_set$ A_a_prod_set$ )A_tree_a_prod_a_prod_a_tree_a_prod_a_prod_prod_set$ )
(declare-fun lex_prod$f (A_a_prod_set$ A_tree_a_prod_a_tree_a_prod_prod_set$ )A_a_tree_a_prod_prod_a_a_tree_a_prod_prod_prod_set$ )
(declare-fun lex_prod$g (A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_tree_prod_set$ )A_tree_a_prod_a_tree_prod_a_tree_a_prod_a_tree_prod_prod_set$ )
(declare-fun lex_prod$h (A_tree_a_tree_prod_set$ A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_tree_a_prod_prod_a_tree_a_tree_a_prod_prod_prod_set$ )
(declare-fun lex_prod$i (A_a_prod_set$ A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )A_a_tree_a_prod_list_prod_a_a_tree_a_prod_list_prod_prod_set$ )
(declare-fun listrel1$a (A_tree_a_tree_prod_set$ )A_tree_list_a_tree_list_prod_set$ )
(declare-fun listrel1$b (A_a_prod_set$ )A_list_a_list_prod_set$ )
(declare-fun listrel1$c (A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )A_tree_a_prod_list_list_a_tree_a_prod_list_list_prod_set$ )
(declare-fun listrel1$d (A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )A_tree_a_prod_set_list_a_tree_a_prod_set_list_prod_set$ )
(declare-fun listrel1$e (A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun measures$a (A_tree_nat_fun_list$ )A_tree_a_tree_prod_set$ )
(declare-fun measures$b (A_nat_fun_list$ )A_a_prod_set$ )
(declare-fun measures$c (A_tree_a_prod_list_nat_fun_list$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun measures$d (A_tree_a_prod_set_nat_fun_list$ )A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )
(declare-fun measures$e (A_tree_a_prod_nat_fun_list$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun mlex_prod$ (A_tree_a_prod_nat_fun$ A_tree_a_prod_a_tree_a_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun same_fst$a (A_tree_bool_fun$ A_tree_a_a_prod_set_fun$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun inv_image$a (A_a_prod_set$ A_a_fun$ )A_a_prod_set$ )
(declare-fun inv_image$b (A_tree_a_tree_prod_set$ A_a_tree_fun$ )A_a_prod_set$ )
(declare-fun inv_image$c (A_a_prod_set$ A_tree_a_fun$ )A_tree_a_tree_prod_set$ )
(declare-fun inv_image$d (A_tree_a_tree_prod_set$ A_tree_a_tree_fun$ )A_tree_a_tree_prod_set$ )
(declare-fun inv_image$e (A_tree_a_prod_a_tree_a_prod_prod_set$ A_a_tree_a_prod_fun$ )A_a_prod_set$ )
(declare-fun inv_image$f (A_a_prod_set$ A_tree_a_prod_a_fun$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun inv_image$g (A_tree_a_prod_a_tree_a_prod_prod_set$ A_tree_a_tree_a_prod_fun$ )A_tree_a_tree_prod_set$ )
(declare-fun inv_image$h (A_tree_a_tree_prod_set$ A_tree_a_prod_a_tree_fun$ )A_tree_a_prod_a_tree_a_prod_prod_set$ )
(declare-fun inv_image$i (A_a_prod_set$ A_tree_a_prod_list_a_fun$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun inv_image$j (Nat_nat_prod_set$ )A_tree_a_prod_nat_fun_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ )
(declare-fun mlex_prod$a (A_nat_fun$ A_a_prod_set$ )A_a_prod_set$ )
(declare-fun mlex_prod$b (A_tree_nat_fun$ A_tree_a_tree_prod_set$ )A_tree_a_tree_prod_set$ )
(declare-fun mlex_prod$c (A_tree_a_prod_list_nat_fun$ A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )
(declare-fun mlex_prod$d (A_tree_a_prod_set_nat_fun$ A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )
(declare-fun mlex_prod$e (A_tree_a_prod_a_tree_a_prod_prod_nat_fun$ A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )
(declare-fun mlex_prod$f (A_set_nat_fun$ A_set_a_set_prod_set$ )A_set_a_set_prod_set$ )
(declare-fun mlex_prod$g (A_tree_set_nat_fun$ A_tree_set_a_tree_set_prod_set$ )A_tree_set_a_tree_set_prod_set$ )
(declare-fun mlex_prod$h (A_tree_a_prod_list_set_nat_fun$ A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )
(declare-fun mlex_prod$i (A_tree_a_prod_set_set_nat_fun$ A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )
(declare-fun finite_psubset$ ()A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )
(assert (! (not (wf$ r$ )):named a0 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_a_prod_set$ ))(=> (and (wf$a ?v0 )(wf$b ?v1 ))(wf$ (lex_prod$ ?v0 ?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (and (wf$ ?v0 )(wf$ ?v1 ))(wf$c (lex_prod$a ?v0 ?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_a_prod_set$ ))(=> (and (wf$b ?v0 )(wf$b ?v1 ))(wf$d (lex_prod$b ?v0 ?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_tree_prod_set$ ))(=> (and (wf$b ?v0 )(wf$a ?v1 ))(wf$e (lex_prod$c ?v0 ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_tree_a_tree_prod_set$ ))(=> (and (wf$a ?v0 )(wf$a ?v1 ))(wf$f (lex_prod$d ?v0 ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_a_prod_set$ ))(=> (and (wf$ ?v0 )(wf$b ?v1 ))(wf$g (lex_prod$e ?v0 ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (and (wf$b ?v0 )(wf$ ?v1 ))(wf$h (lex_prod$f ?v0 ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_tree_prod_set$ ))(=> (and (wf$ ?v0 )(wf$a ?v1 ))(wf$i (lex_prod$g ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (and (wf$a ?v0 )(wf$ ?v1 ))(wf$j (lex_prod$h ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ ))(=> (and (wf$b ?v0 )(wf$k ?v1 ))(wf$l (lex_prod$i ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_tree_a_prod_bool_fun$ )(?v1 A_tree_a_prod_a_tree_a_prod_a_tree_a_prod_prod_set_fun$ ))(=> (forall ((?v2 A_tree_a_prod$ ))(=> (fun_app$ ?v0 ?v2 )(wf$ (fun_app$a ?v1 ?v2 ))))(wf$c (same_fst$ ?v0 ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_tree_bool_fun$ )(?v1 A_tree_a_a_prod_set_fun$ ))(=> (forall ((?v2 A_tree$ ))(=> (fun_app$b ?v0 ?v2 )(wf$b (fun_app$c ?v1 ?v2 ))))(wf$ (same_fst$a ?v0 ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (wf$ ?v0 )(wf$k (lenlex$ ?v0 )))):named a13 ))
(assert (! (forall ((?v0 A_a_prod_set$ ))(=> (wf$b ?v0 )(wf$m (lenlex$a ?v0 )))):named a14 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ ))(=> (wf$a ?v0 )(wf$n (lenlex$b ?v0 )))):named a15 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ ))(=> (wf$k ?v0 )(wf$o (lenlex$c ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ ))(=> (wf$p ?v0 )(wf$q (lenlex$d ?v0 )))):named a17 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ ))(=> (wf$c ?v0 )(wf$r (lenlex$e ?v0 )))):named a18 ))
(assert (! (forall ((?v0 A_set_a_set_prod_set$ ))(=> (wf$s ?v0 )(wf$t (lenlex$f ?v0 )))):named a19 ))
(assert (! (forall ((?v0 A_tree_set_a_tree_set_prod_set$ ))(=> (wf$u ?v0 )(wf$v (lenlex$g ?v0 )))):named a20 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ ))(=> (wf$w ?v0 )(wf$x (lenlex$h ?v0 )))):named a21 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ ))(=> (wf$y ?v0 )(wf$z (lenlex$i ?v0 )))):named a22 ))
(assert (! (forall ((?v0 A_tree_a_prod_nat_fun$ ))(wf$ (fun_app$d measure$ ?v0 ))):named a23 ))
(assert (! (forall ((?v0 A_nat_fun$ ))(wf$b (measure$a ?v0 ))):named a24 ))
(assert (! (forall ((?v0 A_tree_nat_fun$ ))(wf$a (measure$b ?v0 ))):named a25 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_nat_fun$ ))(wf$k (measure$c ?v0 ))):named a26 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_nat_fun$ ))(wf$p (measure$d ?v0 ))):named a27 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_nat_fun$ ))(wf$c (measure$e ?v0 ))):named a28 ))
(assert (! (forall ((?v0 A_set_nat_fun$ ))(wf$s (measure$f ?v0 ))):named a29 ))
(assert (! (forall ((?v0 A_tree_set_nat_fun$ ))(wf$u (measure$g ?v0 ))):named a30 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_set_nat_fun$ ))(wf$w (measure$h ?v0 ))):named a31 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_set_nat_fun$ ))(wf$y (measure$i ?v0 ))):named a32 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (wf$ ?v0 )(wf$k (lex$ ?v0 )))):named a33 ))
(assert (! (forall ((?v0 A_a_prod_set$ ))(=> (wf$b ?v0 )(wf$m (lex$a ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ ))(=> (wf$a ?v0 )(wf$n (lex$b ?v0 )))):named a35 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ ))(=> (wf$k ?v0 )(wf$o (lex$c ?v0 )))):named a36 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ ))(=> (wf$p ?v0 )(wf$q (lex$d ?v0 )))):named a37 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ ))(=> (wf$c ?v0 )(wf$r (lex$e ?v0 )))):named a38 ))
(assert (! (forall ((?v0 A_set_a_set_prod_set$ ))(=> (wf$s ?v0 )(wf$t (lex$f ?v0 )))):named a39 ))
(assert (! (forall ((?v0 A_tree_set_a_tree_set_prod_set$ ))(=> (wf$u ?v0 )(wf$v (lex$g ?v0 )))):named a40 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ ))(=> (wf$w ?v0 )(wf$x (lex$h ?v0 )))):named a41 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ ))(=> (wf$y ?v0 )(wf$z (lex$i ?v0 )))):named a42 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_fun$ ))(=> (wf$ ?v0 )(wf$ (inv_image$ ?v0 ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_a_fun$ ))(=> (wf$b ?v0 )(wf$b (inv_image$a ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_a_tree_fun$ ))(=> (wf$a ?v0 )(wf$b (inv_image$b ?v0 ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_fun$ ))(=> (wf$b ?v0 )(wf$a (inv_image$c ?v0 ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_tree_a_tree_fun$ ))(=> (wf$a ?v0 )(wf$a (inv_image$d ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_a_tree_a_prod_fun$ ))(=> (wf$ ?v0 )(wf$b (inv_image$e ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_prod_a_fun$ ))(=> (wf$b ?v0 )(wf$ (inv_image$f ?v0 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_tree_a_prod_fun$ ))(=> (wf$ ?v0 )(wf$a (inv_image$g ?v0 ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_tree_a_prod_a_tree_fun$ ))(=> (wf$a ?v0 )(wf$ (inv_image$h ?v0 ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_prod_list_a_fun$ ))(=> (wf$b ?v0 )(wf$k (inv_image$i ?v0 ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (wf$ ?v0 )(wf$p (min_ext$ ?v0 )))):named a53 ))
(assert (! (forall ((?v0 A_a_prod_set$ ))(=> (wf$b ?v0 )(wf$s (min_ext$a ?v0 )))):named a54 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ ))(=> (wf$a ?v0 )(wf$u (min_ext$b ?v0 )))):named a55 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ ))(=> (wf$k ?v0 )(wf$w (min_ext$c ?v0 )))):named a56 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ ))(=> (wf$p ?v0 )(wf$y (min_ext$d ?v0 )))):named a57 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ ))(=> (wf$c ?v0 )(wf$aa (min_ext$e ?v0 )))):named a58 ))
(assert (! (forall ((?v0 A_set_a_set_prod_set$ ))(=> (wf$s ?v0 )(wf$ab (min_ext$f ?v0 )))):named a59 ))
(assert (! (forall ((?v0 A_tree_set_a_tree_set_prod_set$ ))(=> (wf$u ?v0 )(wf$ac (min_ext$g ?v0 )))):named a60 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ ))(=> (wf$w ?v0 )(wf$ad (min_ext$h ?v0 )))):named a61 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ ))(=> (wf$y ?v0 )(wf$ae (min_ext$i ?v0 )))):named a62 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_prod_nat_fun$ ))(=> (wf$ ?v0 )(wf$ (mlex_prod$ ?v1 ?v0 )))):named a63 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_nat_fun$ ))(=> (wf$b ?v0 )(wf$b (mlex_prod$a ?v1 ?v0 )))):named a64 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_tree_nat_fun$ ))(=> (wf$a ?v0 )(wf$a (mlex_prod$b ?v1 ?v0 )))):named a65 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )(?v1 A_tree_a_prod_list_nat_fun$ ))(=> (wf$k ?v0 )(wf$k (mlex_prod$c ?v1 ?v0 )))):named a66 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )(?v1 A_tree_a_prod_set_nat_fun$ ))(=> (wf$p ?v0 )(wf$p (mlex_prod$d ?v1 ?v0 )))):named a67 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_nat_fun$ ))(=> (wf$c ?v0 )(wf$c (mlex_prod$e ?v1 ?v0 )))):named a68 ))
(assert (! (forall ((?v0 A_set_a_set_prod_set$ )(?v1 A_set_nat_fun$ ))(=> (wf$s ?v0 )(wf$s (mlex_prod$f ?v1 ?v0 )))):named a69 ))
(assert (! (forall ((?v0 A_tree_set_a_tree_set_prod_set$ )(?v1 A_tree_set_nat_fun$ ))(=> (wf$u ?v0 )(wf$u (mlex_prod$g ?v1 ?v0 )))):named a70 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_set_a_tree_a_prod_list_set_prod_set$ )(?v1 A_tree_a_prod_list_set_nat_fun$ ))(=> (wf$w ?v0 )(wf$w (mlex_prod$h ?v1 ?v0 )))):named a71 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )(?v1 A_tree_a_prod_set_set_nat_fun$ ))(=> (wf$y ?v0 )(wf$y (mlex_prod$i ?v1 ?v0 )))):named a72 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v2 A_tree_a_prod_a_tree_a_prod_fun$ ))(=> (and (compat$ ?v0 ?v1 ?v2 )(wf$ ?v1 ))(wf$ ?v0 ))):named a73 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_a_prod_set$ )(?v2 A_a_fun$ ))(=> (and (compat$a ?v0 ?v1 ?v2 )(wf$b ?v1 ))(wf$b ?v0 ))):named a74 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_tree_prod_set$ )(?v2 A_a_tree_fun$ ))(=> (and (compat$b ?v0 ?v1 ?v2 )(wf$a ?v1 ))(wf$b ?v0 ))):named a75 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_a_prod_set$ )(?v2 A_tree_a_fun$ ))(=> (and (compat$c ?v0 ?v1 ?v2 )(wf$b ?v1 ))(wf$a ?v0 ))):named a76 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_tree_a_tree_prod_set$ )(?v2 A_tree_a_tree_fun$ ))(=> (and (compat$d ?v0 ?v1 ?v2 )(wf$a ?v1 ))(wf$a ?v0 ))):named a77 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v2 A_a_tree_a_prod_fun$ ))(=> (and (compat$e ?v0 ?v1 ?v2 )(wf$ ?v1 ))(wf$b ?v0 ))):named a78 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_a_prod_set$ )(?v2 A_tree_a_prod_a_fun$ ))(=> (and (compat$f ?v0 ?v1 ?v2 )(wf$b ?v1 ))(wf$ ?v0 ))):named a79 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v2 A_tree_a_tree_a_prod_fun$ ))(=> (and (compat$g ?v0 ?v1 ?v2 )(wf$ ?v1 ))(wf$a ?v0 ))):named a80 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_tree_prod_set$ )(?v2 A_tree_a_prod_a_tree_fun$ ))(=> (and (compat$h ?v0 ?v1 ?v2 )(wf$a ?v1 ))(wf$ ?v0 ))):named a81 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )(?v1 A_a_prod_set$ )(?v2 A_tree_a_prod_list_a_fun$ ))(=> (and (compat$i ?v0 ?v1 ?v2 )(wf$b ?v1 ))(wf$k ?v0 ))):named a82 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_set_a_tree_a_prod_set_set_prod_set$ )(?v1 Nat$ ))(=> (wf$y ?v0 )(wf$z (lexn$ ?v0 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_set_a_set_prod_set$ )(?v1 Nat$ ))(=> (wf$s ?v0 )(wf$t (lexn$a ?v0 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ )(?v1 Nat$ ))(=> (wf$c ?v0 )(wf$r (lexn$b ?v0 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ )(?v1 Nat$ ))(=> (wf$a ?v0 )(wf$n (lexn$c ?v0 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_a_prod_set$ )(?v1 Nat$ ))(=> (wf$b ?v0 )(wf$m (lexn$d ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ )(?v1 Nat$ ))(=> (wf$k ?v0 )(wf$o (lexn$e ?v0 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ )(?v1 Nat$ ))(=> (wf$p ?v0 )(wf$q (lexn$f ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 Nat$ ))(=> (wf$ ?v0 )(wf$k (lexn$g ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_nat_fun_list$ ))(wf$c (measures$ ?v0 ))):named a91 ))
(assert (! (forall ((?v0 A_tree_nat_fun_list$ ))(wf$a (measures$a ?v0 ))):named a92 ))
(assert (! (forall ((?v0 A_nat_fun_list$ ))(wf$b (measures$b ?v0 ))):named a93 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_nat_fun_list$ ))(wf$k (measures$c ?v0 ))):named a94 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_nat_fun_list$ ))(wf$p (measures$d ?v0 ))):named a95 ))
(assert (! (forall ((?v0 A_tree_a_prod_nat_fun_list$ ))(wf$ (measures$e ?v0 ))):named a96 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ ))(=> (wf$c ?v0 )(wf$aa (max_ext$ ?v0 )))):named a97 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ ))(=> (wf$a ?v0 )(wf$u (max_ext$a ?v0 )))):named a98 ))
(assert (! (forall ((?v0 A_a_prod_set$ ))(=> (wf$b ?v0 )(wf$s (max_ext$b ?v0 )))):named a99 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ ))(=> (wf$k ?v0 )(wf$w (max_ext$c ?v0 )))):named a100 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ ))(=> (wf$p ?v0 )(wf$y (max_ext$d ?v0 )))):named a101 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (wf$ ?v0 )(wf$p (max_ext$e ?v0 )))):named a102 ))
(assert (! (wf$p finite_psubset$ ):named a103 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ ))(= (wf$r (listrel1$ ?v0 ))(wf$c ?v0 ))):named a104 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ ))(= (wf$n (listrel1$a ?v0 ))(wf$a ?v0 ))):named a105 ))
(assert (! (forall ((?v0 A_a_prod_set$ ))(= (wf$m (listrel1$b ?v0 ))(wf$b ?v0 ))):named a106 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ ))(= (wf$o (listrel1$c ?v0 ))(wf$k ?v0 ))):named a107 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ ))(= (wf$q (listrel1$d ?v0 ))(wf$p ?v0 ))):named a108 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(= (wf$k (listrel1$e ?v0 ))(wf$ ?v0 ))):named a109 ))
(assert (! (= measure$ (inv_image$j less_than$ )):named a110 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_a_tree_a_prod_a_tree_a_prod_prod_prod_set$ ))(=> (wf$c ?v0 )(acyclic$ ?v0 ))):named a111 ))
(assert (! (forall ((?v0 A_tree_a_tree_prod_set$ ))(=> (wf$a ?v0 )(acyclic$a ?v0 ))):named a112 ))
(assert (! (forall ((?v0 A_a_prod_set$ ))(=> (wf$b ?v0 )(acyclic$b ?v0 ))):named a113 ))
(assert (! (forall ((?v0 A_tree_a_prod_list_a_tree_a_prod_list_prod_set$ ))(=> (wf$k ?v0 )(acyclic$c ?v0 ))):named a114 ))
(assert (! (forall ((?v0 A_tree_a_prod_set_a_tree_a_prod_set_prod_set$ ))(=> (wf$p ?v0 )(acyclic$d ?v0 ))):named a115 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ ))(=> (wf$ ?v0 )(acyclic$e ?v0 ))):named a116 ))
(assert (! (forall ((?v0 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v1 A_tree_a_prod_a_tree_a_prod_prod_set$ )(?v2 A_tree_a_prod_a_tree_a_prod_fun$ ))(= (compat$ ?v0 ?v1 ?v2 )(forall ((?v3 A_tree_a_prod$ )(?v4 A_tree_a_prod$ ))(=> (member$ (pair$a ?v3 ?v4 )?v0 )(member$ (pair$a (fun_app$e ?v2 ?v3 )(fun_app$e ?v2 ?v4 ))?v1 ))))):named a117 ))
(check-sat )
;(get-unsat-core )
