;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun n$ ()A$ )
(declare-fun x$ ()A$ )
(declare-fun n$a ()A$ )
(declare-fun ns$ ()A_set$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun bot$ ()A_set$ )
(declare-fun xs$a ()A_llist$ )
(declare-fun xs$b ()A_llist$ )
(declare-fun bot$a ()A_llist_set$ )
(declare-fun lset$ (A_llist$ )A_set$ )
(declare-fun graph$ ()A_a_bool_fun_fun$ )
(declare-fun minus$ (A_set$ A_set$ )A_set$ )
(declare-fun paths$ (A_a_bool_fun_fun$ )A_llist_set$ )
(declare-fun insert$ (A$ A_set$ )A_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun minus$a (A_llist_set$ A_llist_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun insert$a (A_llist$ A_llist_set$ )A_llist_set$ )
(declare-fun less_eq$ (A_set$ A_set$ )Bool )
(declare-fun member$a (A_llist$ A_llist_set$ )Bool )
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun reachable_via$ (A_a_bool_fun_fun$ A_set$ A$ )A_set$ )
(assert (! (not (member$ x$ (insert$ n$ (reachable_via$ graph$ (minus$ ns$ (insert$ n$ bot$ ))n$ )))):named a0 ))
(assert (! (not (member$ n$ (lset$ xs$ ))):named a1 ))
(assert (! (=> (forall ((?v0 A$ )(?v1 A_llist$ ))(=> (= xs$a (lCons$ ?v0 ?v1 ))false ))false ):named a2 ))
(assert (! (member$ x$ (lset$ xs$ )):named a3 ))
(assert (! (= xs$a (lCons$ n$ xs$b )):named a4 ))
(assert (! (less_eq$ (lset$ xs$a )ns$ ):named a5 ))
(assert (! (not (= x$ n$ )):named a6 ))
(assert (! (member$ x$ (lset$ xs$a )):named a7 ))
(assert (! (member$a (lCons$ n$ xs$ )(paths$ graph$ )):named a8 ))
(assert (! (member$ n$ ns$ ):named a9 ))
(assert (! (member$ x$ (lset$ xs$b )):named a10 ))
(assert (! (member$ x$ (reachable_via$ graph$ ns$ n$a )):named a11 ))
(assert (! (fun_app$ (fun_app$a graph$ n$a )n$ ):named a12 ))
(assert (! (member$a (lCons$ n$ xs$b )(paths$ graph$ )):named a13 ))
(assert (! (less_eq$ (lset$ xs$b )ns$ ):named a14 ))
(assert (! (member$a (lCons$ n$a xs$a )(paths$ graph$ )):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ ))(= (insert$a ?v0 (minus$a ?v1 (insert$a ?v0 bot$a )))(insert$a ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ ))(= (insert$ ?v0 (minus$ ?v1 (insert$ ?v0 bot$ )))(insert$ ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (member$a ?v0 ?v1 )(= (minus$a (insert$a ?v0 ?v2 )?v1 )(minus$a ?v2 ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (member$ ?v0 ?v1 )(= (minus$ (insert$ ?v0 ?v2 )?v1 )(minus$ ?v2 ?v1 )))):named a19 ))
(check-sat )
;(get-unsat-core )
