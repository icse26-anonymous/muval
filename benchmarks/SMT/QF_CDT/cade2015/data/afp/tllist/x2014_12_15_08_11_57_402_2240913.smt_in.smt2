;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_b_prod_set$ 0 )
(declare-sort C_d_prod_set$ 0 )
(declare-sort A_llist_c_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_b_prod_fun$ 0 )
(declare-sort A_b_prod_a_fun$ 0 )
(declare-sort A_b_prod_b_fun$ 0 )
(declare-sort B_a_b_prod_fun$ 0 )
(declare-sort C_c_d_prod_fun$ 0 )
(declare-sort C_d_prod_c_fun$ 0 )
(declare-sort C_d_prod_d_fun$ 0 )
(declare-sort D_c_d_prod_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort C_a_c_tllist_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_b_prod_bool_fun$ 0 )
(declare-sort C_d_prod_bool_fun$ 0 )
(declare-sort A_llist_c_prod_set$ 0 )
(declare-sort B_llist_d_prod_set$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort B_d_tllist_bool_fun$ 0 )
(declare-sort A_llist_c_prod_c_fun$ 0 )
(declare-sort B_llist_d_prod_d_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_fun$ 0 )
(declare-sort A_llist_c_bool_fun_fun$ 0 )
(declare-sort B_llist_d_bool_fun_fun$ 0 )
(declare-sort C_a_llist_bool_fun_fun$ 0 )
(declare-sort D_b_llist_bool_fun_fun$ 0 )
(declare-sort A_a_b_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_bool_fun_fun$ 0 )
(declare-sort A_b_prod_b_bool_fun_fun$ 0 )
(declare-sort A_llist_c_prod_bool_fun$ 0 )
(declare-sort B_a_b_prod_bool_fun_fun$ 0 )
(declare-sort B_llist_d_prod_bool_fun$ 0 )
(declare-sort C_c_d_prod_bool_fun_fun$ 0 )
(declare-sort C_d_prod_c_bool_fun_fun$ 0 )
(declare-sort C_d_prod_d_bool_fun_fun$ 0 )
(declare-sort A_llist_c_prod_a_llist_fun$ 0 )
(declare-sort B_llist_d_prod_b_llist_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_set$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_set$ 0 )
(declare-sort A_llist_c_a_c_tllist_fun_fun$ 0 )
(declare-sort B_llist_d_b_d_tllist_fun_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_set$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_set$ 0 )
(declare-sort C_a_llist_c_prod_bool_fun_fun$ 0 )
(declare-sort D_b_llist_d_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_bool_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_c_prod_bool_fun_bool_fun$ 0 )
(declare-sort B_llist_d_prod_bool_fun_bool_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort A_a_tllist_b_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_llist_c_prod_tllist_set$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_set$ 0 )
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_d_prod_a_b_prod_tllist_set$ 0 )
(declare-sort B_llist_d_prod_c_d_prod_tllist_set$ 0 )
(declare-sort C_a_tllist_d_b_tllist_bool_fun_fun$ 0 )
(declare-sort C_c_tllist_d_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_a_llist_c_prod_tllist_set$ 0 )
(declare-sort C_d_prod_b_llist_d_prod_tllist_set$ 0 )
(declare-sort A_c_tllist_a_c_tllist_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_a_a_tllist_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_b_b_tllist_fun$ 0 )
(declare-sort A_b_prod_a_llist_c_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ 0 )
(declare-sort B_llist_d_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort B_llist_d_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_c_a_tllist_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_d_b_tllist_fun$ 0 )
(declare-sort C_d_prod_a_llist_c_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_b_llist_d_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_c_c_tllist_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_d_d_tllist_fun$ 0 )
(declare-sort A_a_llist_tllist_b_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_llist_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_tllist_d_b_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_c_tllist_d_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_a_llist_tllist_d_c_tllist_bool_fun_fun$ 0 )
(declare-sort C_b_llist_tllist_d_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_d_b_llist_d_prod_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_prod_set$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_prod_set$ 0 )
(declare-sort A_b_prod_a_llist_c_prod_tllist_b_c_tllist_fun$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_b_d_tllist_fun$ 0 )
(declare-sort B_llist_d_prod_a_b_prod_tllist_d_b_tllist_fun$ 0 )
(declare-sort B_llist_d_prod_c_d_prod_tllist_d_d_tllist_fun$ 0 )
(declare-sort C_d_prod_a_llist_c_prod_tllist_d_c_tllist_fun$ 0 )
(declare-sort C_d_prod_b_llist_d_prod_tllist_d_d_tllist_fun$ 0 )
(declare-sort A_a_tllist_a_b_prod_a_b_prod_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_a_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_b_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_a_tllist_c_d_prod_a_b_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_c_tllist_c_d_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_c_a_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_d_b_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_c_c_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_d_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_prod_bool_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_prod_bool_fun$ 0 )
(declare-sort A_b_prod_a_llist_c_prod_tllist_a_a_llist_tllist_fun$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_a_b_llist_tllist_fun$ 0 )
(declare-sort B_llist_d_prod_a_b_prod_tllist_b_llist_a_tllist_fun$ 0 )
(declare-sort B_llist_d_prod_c_d_prod_tllist_b_llist_c_tllist_fun$ 0 )
(declare-sort C_d_prod_a_llist_c_prod_tllist_c_a_llist_tllist_fun$ 0 )
(declare-sort C_d_prod_b_llist_d_prod_tllist_c_b_llist_tllist_fun$ 0 )
(declare-sort A_b_prod_a_llist_c_prod_tllist_b_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_d_prod_a_b_prod_tllist_d_b_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_d_prod_c_d_prod_tllist_d_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_a_llist_c_prod_tllist_d_c_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_b_llist_d_prod_tllist_d_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_c_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_fun_fun$ 0 )
(declare-sort C_d_prod_d_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_fun_fun$ 0 )
(declare-sort A_a_llist_tllist_a_b_prod_a_llist_c_prod_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_llist_tllist_a_b_prod_b_llist_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_llist_c_prod_tllist_a_a_llist_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_a_b_llist_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_tllist_b_llist_d_prod_a_b_prod_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_c_tllist_b_llist_d_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_d_prod_a_b_prod_tllist_b_llist_a_tllist_bool_fun_fun$ 0 )
(declare-sort B_llist_d_prod_c_d_prod_tllist_b_llist_c_tllist_bool_fun_fun$ 0 )
(declare-sort C_a_llist_tllist_c_d_prod_a_llist_c_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_b_llist_tllist_c_d_prod_b_llist_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_a_llist_c_prod_tllist_c_a_llist_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_b_llist_d_prod_tllist_c_b_llist_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun$ 0 )
(declare-sort B_llist_d_bool_fun_fun_a_b_llist_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_c_d_prod_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_c_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_a_c_tllist_a_c_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_b_d_tllist_a_c_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_b_d_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_a_c_tllist_a_c_tllist_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_tllist_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun_a_b_llist_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_b_llist_d_prod_tllist_b_d_tllist_fun_a_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_c_tllist$ 0)
(declare-fun terminal$ (A_c_tllist$)C$)
(declare-fun tNil$ (C$ )A_c_tllist$)
(declare-fun thd$ (A_c_tllist$)A$)
(declare-fun ttl$ (A_c_tllist$)A_c_tllist$)
(declare-fun tCons$ (A$ A_c_tllist$ )A_c_tllist$)
(declare-datatypes ()((A_b_prod$ (pair$ (fst$ A$ )(snd$ B$ )))(C_d_prod$ (pair$a (fst$a C$ )(snd$a D$ )))))
(declare-sort A_b_prod_c_d_prod_tllist$ 0)
(declare-sort B_d_tllist$ 0)
(declare-sort A_llist$ 0)
(declare-sort A_b_prod_llist$ 0)
(declare-sort B_llist$ 0)
(declare-sort C_d_prod_llist$ 0)
(declare-sort C_d_prod_c_d_prod_tllist$ 0)
(declare-sort C_d_prod_a_b_prod_tllist$ 0)
(declare-sort A_b_prod_a_b_prod_tllist$ 0)
(declare-sort A_a_tllist$ 0)
(declare-sort B_b_tllist$ 0)
(declare-sort C_a_tllist$ 0)
(declare-sort D_b_tllist$ 0)
(declare-sort C_c_tllist$ 0)
(declare-sort D_d_tllist$ 0)
(declare-sort A_b_llist_tllist$ 0)
(declare-fun terminal$a (A_b_prod_c_d_prod_tllist$)C_d_prod$)
(declare-fun tNil$a (C_d_prod$ )A_b_prod_c_d_prod_tllist$)
(declare-fun thd$a (A_b_prod_c_d_prod_tllist$)A_b_prod$)
(declare-fun ttl$a (A_b_prod_c_d_prod_tllist$)A_b_prod_c_d_prod_tllist$)
(declare-fun tCons$a (A_b_prod$ A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist$)
(declare-fun terminal$b (B_d_tllist$)D$)
(declare-fun tNil$b (D$ )B_d_tllist$)
(declare-fun thd$b (B_d_tllist$)B$)
(declare-fun ttl$b (B_d_tllist$)B_d_tllist$)
(declare-fun tCons$b (B$ B_d_tllist$ )B_d_tllist$)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_b_prod_llist$)
(declare-fun lhd$a (A_b_prod_llist$)A_b_prod$)
(declare-fun ltl$a (A_b_prod_llist$)A_b_prod_llist$)
(declare-fun lCons$a (A_b_prod$ A_b_prod_llist$ )A_b_prod_llist$)
(declare-fun lNil$b ()B_llist$)
(declare-fun lhd$b (B_llist$)B$)
(declare-fun ltl$b (B_llist$)B_llist$)
(declare-fun lCons$b (B$ B_llist$ )B_llist$)
(declare-fun lNil$c ()C_d_prod_llist$)
(declare-fun lhd$c (C_d_prod_llist$)C_d_prod$)
(declare-fun ltl$c (C_d_prod_llist$)C_d_prod_llist$)
(declare-fun lCons$c (C_d_prod$ C_d_prod_llist$ )C_d_prod_llist$)
(declare-fun terminal$c (C_d_prod_c_d_prod_tllist$)C_d_prod$)
(declare-fun tNil$c (C_d_prod$ )C_d_prod_c_d_prod_tllist$)
(declare-fun thd$c (C_d_prod_c_d_prod_tllist$)C_d_prod$)
(declare-fun ttl$c (C_d_prod_c_d_prod_tllist$)C_d_prod_c_d_prod_tllist$)
(declare-fun tCons$c (C_d_prod$ C_d_prod_c_d_prod_tllist$ )C_d_prod_c_d_prod_tllist$)
(declare-fun terminal$d (C_d_prod_a_b_prod_tllist$)A_b_prod$)
(declare-fun tNil$d (A_b_prod$ )C_d_prod_a_b_prod_tllist$)
(declare-fun thd$d (C_d_prod_a_b_prod_tllist$)C_d_prod$)
(declare-fun ttl$d (C_d_prod_a_b_prod_tllist$)C_d_prod_a_b_prod_tllist$)
(declare-fun tCons$d (C_d_prod$ C_d_prod_a_b_prod_tllist$ )C_d_prod_a_b_prod_tllist$)
(declare-fun terminal$e (A_b_prod_a_b_prod_tllist$)A_b_prod$)
(declare-fun tNil$e (A_b_prod$ )A_b_prod_a_b_prod_tllist$)
(declare-fun thd$e (A_b_prod_a_b_prod_tllist$)A_b_prod$)
(declare-fun ttl$e (A_b_prod_a_b_prod_tllist$)A_b_prod_a_b_prod_tllist$)
(declare-fun tCons$e (A_b_prod$ A_b_prod_a_b_prod_tllist$ )A_b_prod_a_b_prod_tllist$)
(declare-fun terminal$f (A_a_tllist$)A$)
(declare-fun tNil$f (A$ )A_a_tllist$)
(declare-fun thd$f (A_a_tllist$)A$)
(declare-fun ttl$f (A_a_tllist$)A_a_tllist$)
(declare-fun tCons$f (A$ A_a_tllist$ )A_a_tllist$)
(declare-fun terminal$g (B_b_tllist$)B$)
(declare-fun tNil$g (B$ )B_b_tllist$)
(declare-fun thd$g (B_b_tllist$)B$)
(declare-fun ttl$g (B_b_tllist$)B_b_tllist$)
(declare-fun tCons$g (B$ B_b_tllist$ )B_b_tllist$)
(declare-fun terminal$h (C_a_tllist$)A$)
(declare-fun tNil$h (A$ )C_a_tllist$)
(declare-fun thd$h (C_a_tllist$)C$)
(declare-fun ttl$h (C_a_tllist$)C_a_tllist$)
(declare-fun tCons$h (C$ C_a_tllist$ )C_a_tllist$)
(declare-fun terminal$i (D_b_tllist$)B$)
(declare-fun tNil$i (B$ )D_b_tllist$)
(declare-fun thd$i (D_b_tllist$)D$)
(declare-fun ttl$i (D_b_tllist$)D_b_tllist$)
(declare-fun tCons$i (D$ D_b_tllist$ )D_b_tllist$)
(declare-fun terminal$j (C_c_tllist$)C$)
(declare-fun tNil$j (C$ )C_c_tllist$)
(declare-fun thd$j (C_c_tllist$)C$)
(declare-fun ttl$j (C_c_tllist$)C_c_tllist$)
(declare-fun tCons$j (C$ C_c_tllist$ )C_c_tllist$)
(declare-fun terminal$k (D_d_tllist$)D$)
(declare-fun tNil$k (D$ )D_d_tllist$)
(declare-fun thd$k (D_d_tllist$)D$)
(declare-fun ttl$k (D_d_tllist$)D_d_tllist$)
(declare-fun tCons$k (D$ D_d_tllist$ )D_d_tllist$)
(declare-fun terminal$l (A_b_llist_tllist$)B_llist$)
(declare-fun tNil$l (B_llist$ )A_b_llist_tllist$)
(declare-fun thd$l (A_b_llist_tllist$)A$)
(declare-fun ttl$l (A_b_llist_tllist$)A_b_llist_tllist$)
(declare-fun tCons$l (A$ A_b_llist_tllist$ )A_b_llist_tllist$)
(declare-datatypes ()((B_llist_d_prod$ (pair$b (fst$b B_llist$ )(snd$b D$ )))))
(declare-sort A_b_prod_b_llist_d_prod_tllist$ 0)
(declare-sort A_a_llist_tllist$ 0)
(declare-sort B_c_tllist$ 0)
(declare-fun terminal$m (A_b_prod_b_llist_d_prod_tllist$)B_llist_d_prod$)
(declare-fun tNil$m (B_llist_d_prod$ )A_b_prod_b_llist_d_prod_tllist$)
(declare-fun thd$m (A_b_prod_b_llist_d_prod_tllist$)A_b_prod$)
(declare-fun ttl$m (A_b_prod_b_llist_d_prod_tllist$)A_b_prod_b_llist_d_prod_tllist$)
(declare-fun tCons$m (A_b_prod$ A_b_prod_b_llist_d_prod_tllist$ )A_b_prod_b_llist_d_prod_tllist$)
(declare-fun terminal$n (A_a_llist_tllist$)A_llist$)
(declare-fun tNil$n (A_llist$ )A_a_llist_tllist$)
(declare-fun thd$n (A_a_llist_tllist$)A$)
(declare-fun ttl$n (A_a_llist_tllist$)A_a_llist_tllist$)
(declare-fun tCons$n (A$ A_a_llist_tllist$ )A_a_llist_tllist$)
(declare-fun terminal$o (B_c_tllist$)C$)
(declare-fun tNil$o (C$ )B_c_tllist$)
(declare-fun thd$o (B_c_tllist$)B$)
(declare-fun ttl$o (B_c_tllist$)B_c_tllist$)
(declare-fun tCons$o (B$ B_c_tllist$ )B_c_tllist$)
(declare-datatypes ()((A_llist_c_prod$ (pair$c (fst$c A_llist$ )(snd$c C$ )))))
(declare-sort A_b_prod_a_llist_c_prod_tllist$ 0)
(declare-sort C_b_llist_tllist$ 0)
(declare-sort C_d_prod_b_llist_d_prod_tllist$ 0)
(declare-sort C_a_llist_tllist$ 0)
(declare-sort D_c_tllist$ 0)
(declare-sort C_d_prod_a_llist_c_prod_tllist$ 0)
(declare-sort B_llist_a_tllist$ 0)
(declare-sort B_llist_d_prod_a_b_prod_tllist$ 0)
(declare-sort B_llist_c_tllist$ 0)
(declare-sort B_llist_d_prod_c_d_prod_tllist$ 0)
(declare-fun terminal$p (A_b_prod_a_llist_c_prod_tllist$)A_llist_c_prod$)
(declare-fun tNil$p (A_llist_c_prod$ )A_b_prod_a_llist_c_prod_tllist$)
(declare-fun thd$p (A_b_prod_a_llist_c_prod_tllist$)A_b_prod$)
(declare-fun ttl$p (A_b_prod_a_llist_c_prod_tllist$)A_b_prod_a_llist_c_prod_tllist$)
(declare-fun tCons$p (A_b_prod$ A_b_prod_a_llist_c_prod_tllist$ )A_b_prod_a_llist_c_prod_tllist$)
(declare-fun terminal$q (C_b_llist_tllist$)B_llist$)
(declare-fun tNil$q (B_llist$ )C_b_llist_tllist$)
(declare-fun thd$q (C_b_llist_tllist$)C$)
(declare-fun ttl$q (C_b_llist_tllist$)C_b_llist_tllist$)
(declare-fun tCons$q (C$ C_b_llist_tllist$ )C_b_llist_tllist$)
(declare-fun terminal$r (C_d_prod_b_llist_d_prod_tllist$)B_llist_d_prod$)
(declare-fun tNil$r (B_llist_d_prod$ )C_d_prod_b_llist_d_prod_tllist$)
(declare-fun thd$r (C_d_prod_b_llist_d_prod_tllist$)C_d_prod$)
(declare-fun ttl$r (C_d_prod_b_llist_d_prod_tllist$)C_d_prod_b_llist_d_prod_tllist$)
(declare-fun tCons$r (C_d_prod$ C_d_prod_b_llist_d_prod_tllist$ )C_d_prod_b_llist_d_prod_tllist$)
(declare-fun terminal$s (C_a_llist_tllist$)A_llist$)
(declare-fun tNil$s (A_llist$ )C_a_llist_tllist$)
(declare-fun thd$s (C_a_llist_tllist$)C$)
(declare-fun ttl$s (C_a_llist_tllist$)C_a_llist_tllist$)
(declare-fun tCons$s (C$ C_a_llist_tllist$ )C_a_llist_tllist$)
(declare-fun terminal$t (D_c_tllist$)C$)
(declare-fun tNil$t (C$ )D_c_tllist$)
(declare-fun thd$t (D_c_tllist$)D$)
(declare-fun ttl$t (D_c_tllist$)D_c_tllist$)
(declare-fun tCons$t (D$ D_c_tllist$ )D_c_tllist$)
(declare-fun terminal$u (C_d_prod_a_llist_c_prod_tllist$)A_llist_c_prod$)
(declare-fun tNil$u (A_llist_c_prod$ )C_d_prod_a_llist_c_prod_tllist$)
(declare-fun thd$u (C_d_prod_a_llist_c_prod_tllist$)C_d_prod$)
(declare-fun ttl$u (C_d_prod_a_llist_c_prod_tllist$)C_d_prod_a_llist_c_prod_tllist$)
(declare-fun tCons$u (C_d_prod$ C_d_prod_a_llist_c_prod_tllist$ )C_d_prod_a_llist_c_prod_tllist$)
(declare-fun terminal$v (B_llist_a_tllist$)A$)
(declare-fun tNil$v (A$ )B_llist_a_tllist$)
(declare-fun thd$v (B_llist_a_tllist$)B_llist$)
(declare-fun ttl$v (B_llist_a_tllist$)B_llist_a_tllist$)
(declare-fun tCons$v (B_llist$ B_llist_a_tllist$ )B_llist_a_tllist$)
(declare-fun terminal$w (B_llist_d_prod_a_b_prod_tllist$)A_b_prod$)
(declare-fun tNil$w (A_b_prod$ )B_llist_d_prod_a_b_prod_tllist$)
(declare-fun thd$w (B_llist_d_prod_a_b_prod_tllist$)B_llist_d_prod$)
(declare-fun ttl$w (B_llist_d_prod_a_b_prod_tllist$)B_llist_d_prod_a_b_prod_tllist$)
(declare-fun tCons$w (B_llist_d_prod$ B_llist_d_prod_a_b_prod_tllist$ )B_llist_d_prod_a_b_prod_tllist$)
(declare-fun terminal$x (B_llist_c_tllist$)C$)
(declare-fun tNil$x (C$ )B_llist_c_tllist$)
(declare-fun thd$x (B_llist_c_tllist$)B_llist$)
(declare-fun ttl$x (B_llist_c_tllist$)B_llist_c_tllist$)
(declare-fun tCons$x (B_llist$ B_llist_c_tllist$ )B_llist_c_tllist$)
(declare-fun terminal$y (B_llist_d_prod_c_d_prod_tllist$)C_d_prod$)
(declare-fun tNil$y (C_d_prod$ )B_llist_d_prod_c_d_prod_tllist$)
(declare-fun thd$y (B_llist_d_prod_c_d_prod_tllist$)B_llist_d_prod$)
(declare-fun ttl$y (B_llist_d_prod_c_d_prod_tllist$)B_llist_d_prod_c_d_prod_tllist$)
(declare-fun tCons$y (B_llist_d_prod$ B_llist_d_prod_c_d_prod_tllist$ )B_llist_d_prod_c_d_prod_tllist$)
(declare-datatypes ()((A_b_prod_c_d_prod_tllist_a_c_tllist_prod$ (pair$d (fst$d A_b_prod_c_d_prod_tllist$ )(snd$d A_c_tllist$ )))(A_b_prod_c_d_prod_tllist_b_d_tllist_prod$ (pair$e (fst$e A_b_prod_c_d_prod_tllist$ )(snd$e B_d_tllist$ )))))
(declare-sort A_c_tllist_a_c_tllist_tllist$ 0)
(declare-sort A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$ 0)
(declare-sort B_d_tllist_b_d_tllist_tllist$ 0)
(declare-fun terminal$z (A_c_tllist_a_c_tllist_tllist$)A_c_tllist$)
(declare-fun tNil$z (A_c_tllist$ )A_c_tllist_a_c_tllist_tllist$)
(declare-fun thd$z (A_c_tllist_a_c_tllist_tllist$)A_c_tllist$)
(declare-fun ttl$z (A_c_tllist_a_c_tllist_tllist$)A_c_tllist_a_c_tllist_tllist$)
(declare-fun tCons$z (A_c_tllist$ A_c_tllist_a_c_tllist_tllist$ )A_c_tllist_a_c_tllist_tllist$)
(declare-fun terminal$aa (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$)A_b_prod_c_d_prod_tllist$)
(declare-fun tNil$aa (A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$)
(declare-fun thd$aa (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$)A_b_prod_c_d_prod_tllist$)
(declare-fun ttl$aa (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$)A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$)
(declare-fun tCons$aa (A_b_prod_c_d_prod_tllist$ A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$)
(declare-fun terminal$ab (B_d_tllist_b_d_tllist_tllist$)B_d_tllist$)
(declare-fun tNil$ab (B_d_tllist$ )B_d_tllist_b_d_tllist_tllist$)
(declare-fun thd$ab (B_d_tllist_b_d_tllist_tllist$)B_d_tllist$)
(declare-fun ttl$ab (B_d_tllist_b_d_tllist_tllist$)B_d_tllist_b_d_tllist_tllist$)
(declare-fun tCons$ab (B_d_tllist$ B_d_tllist_b_d_tllist_tllist$ )B_d_tllist_b_d_tllist_tllist$)
(declare-fun b$ ()C$ )
(declare-fun y$ ()A_b_bool_fun_fun$ )
(declare-fun ba$ ()D$ )
(declare-fun bb$ ()A_b_prod_llist$ )
(declare-fun uu$ ()A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun ya$ ()C_d_bool_fun_fun$ )
(declare-fun grp$ (A_b_prod_c_d_prod_tllist_set$ )A_b_prod_c_d_prod_tllist_a_c_tllist_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ )
(declare-fun uua$ ()A_b_prod_a_fun$ )
(declare-fun uub$ ()C_d_prod_c_fun$ )
(declare-fun uuc$ ()A_b_prod_b_fun$ )
(declare-fun uud$ ()C_d_prod_d_fun$ )
(declare-fun uue$ ()B_b_fun$ )
(declare-fun uuf$ ()D_d_fun$ )
(declare-fun uug$ ()A_a_fun$ )
(declare-fun uuh$ ()C_c_fun$ )
(declare-fun uui$ (A_b_bool_fun_fun$ A_b_bool_fun_fun$ )A_b_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uuj$ (C_d_bool_fun_fun$ A_b_bool_fun_fun$ )C_d_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uuk$ (C_d_bool_fun_fun$ C_d_bool_fun_fun$ )C_d_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun uul$ (A_b_bool_fun_fun$ )C_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun uum$ (A_b_bool_fun_fun$ B_llist_d_bool_fun_fun$ )A_b_prod_b_llist_d_prod_tllist_bool_fun$ )
(declare-fun uun$ ()B_llist_d_prod_b_llist_fun$ )
(declare-fun uuo$ ()B_llist_d_prod_d_fun$ )
(declare-fun uup$ (A_b_bool_fun_fun$ A_llist_c_bool_fun_fun$ )A_b_prod_a_llist_c_prod_tllist_bool_fun$ )
(declare-fun uuq$ ()A_llist_c_prod_a_llist_fun$ )
(declare-fun uur$ ()A_llist_c_prod_c_fun$ )
(declare-fun uus$ (C_d_bool_fun_fun$ B_llist_d_bool_fun_fun$ )C_d_prod_b_llist_d_prod_tllist_bool_fun$ )
(declare-fun uut$ (C_d_bool_fun_fun$ A_llist_c_bool_fun_fun$ )C_d_prod_a_llist_c_prod_tllist_bool_fun$ )
(declare-fun uuu$ (B_llist_d_bool_fun_fun$ A_b_bool_fun_fun$ )B_llist_d_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uuv$ (B_llist_d_bool_fun_fun$ C_d_bool_fun_fun$ )B_llist_d_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun uuw$ ()A_b_prod_a_b_prod_fun$ )
(declare-fun uux$ (Bool B_llist_d_bool_fun_fun$ )B_llist_d_bool_fun_fun$ )
(declare-fun uuy$ (Bool A_llist_c_bool_fun_fun$ )A_llist_c_bool_fun_fun$ )
(declare-fun uuz$ (Bool A_b_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun uva$ (Bool C_d_bool_fun_fun$ )C_d_bool_fun_fun$ )
(declare-fun uvb$ ()A_llist_c_a_c_tllist_fun_fun$ )
(declare-fun uvc$ (A_llist$ C$ )A_llist_c_bool_fun_fun$ )
(declare-fun uvd$ ()A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )
(declare-fun uve$ ()B_llist_d_b_d_tllist_fun_fun$ )
(declare-fun uvf$ (B_llist$ D$ )B_llist_d_bool_fun_fun$ )
(declare-fun uvg$ ()B_llist_d_b_llist_d_prod_bool_fun_fun_fun$ )
(declare-fun uvh$ (A_b_prod_c_d_prod_tllist_set$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun uvi$ (A_b_prod_set$ )A_b_prod_bool_fun$ )
(declare-fun uvj$ (C_d_prod_set$ )C_d_prod_bool_fun$ )
(declare-fun grp$a (A_b_prod_c_d_prod_tllist_set$ )A_b_prod_c_d_prod_tllist_b_d_tllist_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun grp$b (A_b_prod_a_b_prod_tllist_set$ A_b_prod_a_b_prod_tllist_a_a_tllist_fun$ )A_b_prod_a_b_prod_tllist_a_a_tllist_bool_fun_fun$ )
(declare-fun grp$c (A_b_prod_a_b_prod_tllist_set$ A_b_prod_a_b_prod_tllist_b_b_tllist_fun$ )A_b_prod_a_b_prod_tllist_b_b_tllist_bool_fun_fun$ )
(declare-fun grp$d (C_d_prod_a_b_prod_tllist_set$ C_d_prod_a_b_prod_tllist_c_a_tllist_fun$ )C_d_prod_a_b_prod_tllist_c_a_tllist_bool_fun_fun$ )
(declare-fun grp$e (C_d_prod_a_b_prod_tllist_set$ C_d_prod_a_b_prod_tllist_d_b_tllist_fun$ )C_d_prod_a_b_prod_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun grp$f (C_d_prod_c_d_prod_tllist_set$ C_d_prod_c_d_prod_tllist_c_c_tllist_fun$ )C_d_prod_c_d_prod_tllist_c_c_tllist_bool_fun_fun$ )
(declare-fun grp$g (C_d_prod_c_d_prod_tllist_set$ C_d_prod_c_d_prod_tllist_d_d_tllist_fun$ )C_d_prod_c_d_prod_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun grp$h (A_b_prod_b_llist_d_prod_tllist_set$ A_b_prod_b_llist_d_prod_tllist_a_b_llist_tllist_fun$ )A_b_prod_b_llist_d_prod_tllist_a_b_llist_tllist_bool_fun_fun$ )
(declare-fun grp$i (A_b_prod_b_llist_d_prod_tllist_set$ )A_b_prod_b_llist_d_prod_tllist_b_d_tllist_fun_a_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun grp$j (A_b_prod_a_llist_c_prod_tllist_set$ A_b_prod_a_llist_c_prod_tllist_a_a_llist_tllist_fun$ )A_b_prod_a_llist_c_prod_tllist_a_a_llist_tllist_bool_fun_fun$ )
(declare-fun grp$k (A_b_prod_a_llist_c_prod_tllist_set$ A_b_prod_a_llist_c_prod_tllist_b_c_tllist_fun$ )A_b_prod_a_llist_c_prod_tllist_b_c_tllist_bool_fun_fun$ )
(declare-fun grp$l (C_d_prod_b_llist_d_prod_tllist_set$ C_d_prod_b_llist_d_prod_tllist_c_b_llist_tllist_fun$ )C_d_prod_b_llist_d_prod_tllist_c_b_llist_tllist_bool_fun_fun$ )
(declare-fun grp$m (C_d_prod_b_llist_d_prod_tllist_set$ C_d_prod_b_llist_d_prod_tllist_d_d_tllist_fun$ )C_d_prod_b_llist_d_prod_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun grp$n (C_d_prod_a_llist_c_prod_tllist_set$ C_d_prod_a_llist_c_prod_tllist_c_a_llist_tllist_fun$ )C_d_prod_a_llist_c_prod_tllist_c_a_llist_tllist_bool_fun_fun$ )
(declare-fun grp$o (C_d_prod_a_llist_c_prod_tllist_set$ C_d_prod_a_llist_c_prod_tllist_d_c_tllist_fun$ )C_d_prod_a_llist_c_prod_tllist_d_c_tllist_bool_fun_fun$ )
(declare-fun grp$p (B_llist_d_prod_a_b_prod_tllist_set$ B_llist_d_prod_a_b_prod_tllist_b_llist_a_tllist_fun$ )B_llist_d_prod_a_b_prod_tllist_b_llist_a_tllist_bool_fun_fun$ )
(declare-fun grp$q (B_llist_d_prod_a_b_prod_tllist_set$ B_llist_d_prod_a_b_prod_tllist_d_b_tllist_fun$ )B_llist_d_prod_a_b_prod_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun grp$r (B_llist_d_prod_c_d_prod_tllist_set$ B_llist_d_prod_c_d_prod_tllist_b_llist_c_tllist_fun$ )B_llist_d_prod_c_d_prod_tllist_b_llist_c_tllist_bool_fun_fun$ )
(declare-fun grp$s (B_llist_d_prod_c_d_prod_tllist_set$ B_llist_d_prod_c_d_prod_tllist_d_d_tllist_fun$ )B_llist_d_prod_c_d_prod_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun grp$t (C_set$ C_d_fun$ )C_d_bool_fun_fun$ )
(declare-fun grp$u (A_set$ A_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun grp$v (A_b_prod_set$ A_b_prod_b_fun$ )A_b_prod_b_bool_fun_fun$ )
(declare-fun grp$w (A_b_prod_set$ A_b_prod_a_fun$ )A_b_prod_a_bool_fun_fun$ )
(declare-fun grp$x (C_d_prod_set$ C_d_prod_c_fun$ )C_d_prod_c_bool_fun_fun$ )
(declare-fun grp$y (C_d_prod_set$ C_d_prod_d_fun$ )C_d_prod_d_bool_fun_fun$ )
(declare-fun grp$z (A_llist_set$ A_llist_c_fun$ )A_llist_c_bool_fun_fun$ )
(declare-fun lmap$ (A_b_prod_a_fun$ A_b_prod_llist$ )A_llist$ )
(declare-fun lset$ (A_b_prod_llist$ )A_b_prod_set$ )
(declare-fun tmap$ (A_b_prod_a_fun$ )C_d_prod_c_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_fun_fun$ )
(declare-fun tset$ (A_b_prod_c_d_prod_tllist$ )A_b_prod_set$ )
(declare-fun lmap$a (A_b_prod_b_fun$ A_b_prod_llist$ )B_llist$ )
(declare-fun lmap$b (A_a_b_prod_fun$ A_llist$ )A_b_prod_llist$ )
(declare-fun lmap$c (B_a_b_prod_fun$ B_llist$ )A_b_prod_llist$ )
(declare-fun lmap$d (A_b_prod_a_b_prod_fun$ A_b_prod_llist$ )A_b_prod_llist$ )
(declare-fun lmap$e (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$f (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$g (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun lmap$h (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lset$a (C_d_prod_llist$ )C_d_prod_set$ )
(declare-fun lset$b (A_llist$ )A_set$ )
(declare-fun lset$c (B_llist$ )B_set$ )
(declare-fun tmap$a (A_b_prod_b_fun$ )C_d_prod_d_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_fun_fun$ )
(declare-fun tmap$b (A_b_prod_a_fun$ A_b_prod_a_fun$ )A_b_prod_a_b_prod_tllist_a_a_tllist_fun$ )
(declare-fun tmap$c (A_a_b_prod_fun$ C_c_d_prod_fun$ A_c_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$d (B_a_b_prod_fun$ D_c_d_prod_fun$ B_d_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$e (A_b_prod_a_b_prod_fun$ C_d_prod_c_d_prod_fun$ A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$f (A_a_fun$ C_c_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tmap$g (A_b_fun$ C_d_fun$ A_c_tllist$ )B_d_tllist$ )
(declare-fun tmap$h (B_a_fun$ D_c_fun$ B_d_tllist$ )A_c_tllist$ )
(declare-fun tmap$i (B_b_fun$ D_d_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun tmap$j (A_b_prod_b_fun$ A_b_prod_b_fun$ )A_b_prod_a_b_prod_tllist_b_b_tllist_fun$ )
(declare-fun tmap$k (C_d_prod_c_fun$ A_b_prod_a_fun$ )C_d_prod_a_b_prod_tllist_c_a_tllist_fun$ )
(declare-fun tmap$l (C_d_prod_d_fun$ A_b_prod_b_fun$ )C_d_prod_a_b_prod_tllist_d_b_tllist_fun$ )
(declare-fun tmap$m (C_d_prod_c_fun$ C_d_prod_c_fun$ )C_d_prod_c_d_prod_tllist_c_c_tllist_fun$ )
(declare-fun tmap$n (C_d_prod_d_fun$ C_d_prod_d_fun$ )C_d_prod_c_d_prod_tllist_d_d_tllist_fun$ )
(declare-fun tmap$o (A_b_prod_a_fun$ B_llist_d_prod_b_llist_fun$ )A_b_prod_b_llist_d_prod_tllist_a_b_llist_tllist_fun$ )
(declare-fun tmap$p (A_b_prod_b_fun$ B_llist_d_prod_d_fun$ )A_b_prod_b_llist_d_prod_tllist_b_d_tllist_fun$ )
(declare-fun tmap$q (A_b_prod_a_fun$ A_llist_c_prod_a_llist_fun$ )A_b_prod_a_llist_c_prod_tllist_a_a_llist_tllist_fun$ )
(declare-fun tmap$r (A_b_prod_b_fun$ A_llist_c_prod_c_fun$ )A_b_prod_a_llist_c_prod_tllist_b_c_tllist_fun$ )
(declare-fun tmap$s (C_d_prod_c_fun$ B_llist_d_prod_b_llist_fun$ )C_d_prod_b_llist_d_prod_tllist_c_b_llist_tllist_fun$ )
(declare-fun tmap$t (C_d_prod_d_fun$ B_llist_d_prod_d_fun$ )C_d_prod_b_llist_d_prod_tllist_d_d_tllist_fun$ )
(declare-fun tmap$u (C_d_prod_c_fun$ A_llist_c_prod_a_llist_fun$ )C_d_prod_a_llist_c_prod_tllist_c_a_llist_tllist_fun$ )
(declare-fun tmap$v (C_d_prod_d_fun$ A_llist_c_prod_c_fun$ )C_d_prod_a_llist_c_prod_tllist_d_c_tllist_fun$ )
(declare-fun tmap$w (B_llist_d_prod_b_llist_fun$ A_b_prod_a_fun$ )B_llist_d_prod_a_b_prod_tllist_b_llist_a_tllist_fun$ )
(declare-fun tmap$x (B_llist_d_prod_d_fun$ A_b_prod_b_fun$ )B_llist_d_prod_a_b_prod_tllist_d_b_tllist_fun$ )
(declare-fun tmap$y (B_llist_d_prod_b_llist_fun$ C_d_prod_c_fun$ )B_llist_d_prod_c_d_prod_tllist_b_llist_c_tllist_fun$ )
(declare-fun tmap$z (B_llist_d_prod_d_fun$ C_d_prod_d_fun$ )B_llist_d_prod_c_d_prod_tllist_d_d_tllist_fun$ )
(declare-fun tset$a (B_llist_d_prod_c_d_prod_tllist$ )B_llist_d_prod_set$ )
(declare-fun tset$b (B_llist_d_prod_a_b_prod_tllist$ )B_llist_d_prod_set$ )
(declare-fun tset$c (C_d_prod_b_llist_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$d (C_d_prod_a_llist_c_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$e (C_d_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$f (C_d_prod_a_b_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$g (A_b_prod_b_llist_d_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$h (A_b_prod_a_llist_c_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$i (A_b_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$j (A_c_tllist$ )A_set$ )
(declare-fun tset$k (B_d_tllist$ )B_set$ )
(declare-fun member$ (A_b_prod_c_d_prod_tllist$ A_b_prod_c_d_prod_tllist_set$ )Bool )
(declare-fun collect$ (A_b_prod_bool_fun$ )A_b_prod_set$ )
(declare-fun fun_app$ (A_b_prod_c_d_prod_tllist_bool_fun$ A_b_prod_c_d_prod_tllist$ )Bool )
(declare-fun less_eq$ (A_b_prod_set$ A_b_prod_set$ )Bool )
(declare-fun lfinite$ (B_llist$ )Bool )
(declare-fun member$a (C_d_prod$ C_d_prod_set$ )Bool )
(declare-fun member$b (A_b_prod$ A_b_prod_set$ )Bool )
(declare-fun member$c (B$ B_set$ )Bool )
(declare-fun member$d (D$ D_set$ )Bool )
(declare-fun member$e (A$ A_set$ )Bool )
(declare-fun member$f (C$ C_set$ )Bool )
(declare-fun member$g (A_llist_c_prod$ A_llist_c_prod_set$ )Bool )
(declare-fun member$h (A_llist$ A_llist_set$ )Bool )
(declare-fun member$i (A_b_prod_c_d_prod_tllist_a_c_tllist_prod$ A_b_prod_c_d_prod_tllist_a_c_tllist_prod_set$ )Bool )
(declare-fun member$j (A_b_prod_c_d_prod_tllist_b_d_tllist_prod$ A_b_prod_c_d_prod_tllist_b_d_tllist_prod_set$ )Bool )
(declare-fun collect$a (C_d_prod_bool_fun$ )C_d_prod_set$ )
(declare-fun collect$b (B_llist_d_prod_bool_fun$ )B_llist_d_prod_set$ )
(declare-fun collect$c (A_llist_c_prod_bool_fun$ )A_llist_c_prod_set$ )
(declare-fun collect$d (A_b_prod_c_d_prod_tllist_bool_fun$ )A_b_prod_c_d_prod_tllist_set$ )
(declare-fun collect$e (A_b_prod_a_b_prod_tllist_bool_fun$ )A_b_prod_a_b_prod_tllist_set$ )
(declare-fun collect$f (C_d_prod_a_b_prod_tllist_bool_fun$ )C_d_prod_a_b_prod_tllist_set$ )
(declare-fun collect$g (C_d_prod_c_d_prod_tllist_bool_fun$ )C_d_prod_c_d_prod_tllist_set$ )
(declare-fun collect$h (A_b_prod_b_llist_d_prod_tllist_bool_fun$ )A_b_prod_b_llist_d_prod_tllist_set$ )
(declare-fun collect$i (A_b_prod_a_llist_c_prod_tllist_bool_fun$ )A_b_prod_a_llist_c_prod_tllist_set$ )
(declare-fun collect$j (C_d_prod_b_llist_d_prod_tllist_bool_fun$ )C_d_prod_b_llist_d_prod_tllist_set$ )
(declare-fun collect$k (C_d_prod_a_llist_c_prod_tllist_bool_fun$ )C_d_prod_a_llist_c_prod_tllist_set$ )
(declare-fun collect$l (B_llist_d_prod_a_b_prod_tllist_bool_fun$ )B_llist_d_prod_a_b_prod_tllist_set$ )
(declare-fun collect$m (B_llist_d_prod_c_d_prod_tllist_bool_fun$ )B_llist_d_prod_c_d_prod_tllist_set$ )
(declare-fun collect$n (A_b_prod_c_d_prod_tllist_a_c_tllist_prod_bool_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_prod_set$ )
(declare-fun collect$o (A_b_prod_c_d_prod_tllist_b_d_tllist_prod_bool_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_prod_set$ )
(declare-fun fun_app$a (B_llist_d_prod_d_fun$ B_llist_d_prod$ )D$ )
(declare-fun fun_app$b (A_llist_c_prod_c_fun$ A_llist_c_prod$ )C$ )
(declare-fun fun_app$c (C_d_prod_d_fun$ C_d_prod$ )D$ )
(declare-fun fun_app$d (A_b_prod_b_fun$ A_b_prod$ )B$ )
(declare-fun fun_app$e (B_llist_d_prod_b_llist_fun$ B_llist_d_prod$ )B_llist$ )
(declare-fun fun_app$f (A_llist_c_prod_a_llist_fun$ A_llist_c_prod$ )A_llist$ )
(declare-fun fun_app$g (C_d_prod_c_fun$ C_d_prod$ )C$ )
(declare-fun fun_app$h (A_b_prod_a_fun$ A_b_prod$ )A$ )
(declare-fun fun_app$i (D_b_d_tllist_fun$ D$ )B_d_tllist$ )
(declare-fun fun_app$j (B_llist_d_b_d_tllist_fun_fun$ B_llist$ )D_b_d_tllist_fun$ )
(declare-fun fun_app$k (C_a_c_tllist_fun$ C$ )A_c_tllist$ )
(declare-fun fun_app$l (A_llist_c_a_c_tllist_fun_fun$ A_llist$ )C_a_c_tllist_fun$ )
(declare-fun fun_app$m (C_d_prod_bool_fun$ C_d_prod$ )Bool )
(declare-fun fun_app$n (A_b_prod_bool_fun$ A_b_prod$ )Bool )
(declare-fun fun_app$o (D_b_llist_d_prod_bool_fun_fun$ D$ )B_llist_d_prod_bool_fun$ )
(declare-fun fun_app$p (B_llist_d_b_llist_d_prod_bool_fun_fun_fun$ B_llist$ )D_b_llist_d_prod_bool_fun_fun$ )
(declare-fun fun_app$q (C_a_llist_c_prod_bool_fun_fun$ C$ )A_llist_c_prod_bool_fun$ )
(declare-fun fun_app$r (A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ A_llist$ )C_a_llist_c_prod_bool_fun_fun$ )
(declare-fun fun_app$s (B_llist_d_prod_c_d_prod_tllist_bool_fun$ B_llist_d_prod_c_d_prod_tllist$ )Bool )
(declare-fun fun_app$t (B_llist_d_prod_a_b_prod_tllist_bool_fun$ B_llist_d_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$u (C_d_prod_b_llist_d_prod_tllist_bool_fun$ C_d_prod_b_llist_d_prod_tllist$ )Bool )
(declare-fun fun_app$v (C_d_prod_a_llist_c_prod_tllist_bool_fun$ C_d_prod_a_llist_c_prod_tllist$ )Bool )
(declare-fun fun_app$w (C_d_prod_c_d_prod_tllist_bool_fun$ C_d_prod_c_d_prod_tllist$ )Bool )
(declare-fun fun_app$x (C_d_prod_a_b_prod_tllist_bool_fun$ C_d_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$y (A_b_prod_b_llist_d_prod_tllist_bool_fun$ A_b_prod_b_llist_d_prod_tllist$ )Bool )
(declare-fun fun_app$z (A_b_prod_a_llist_c_prod_tllist_bool_fun$ A_b_prod_a_llist_c_prod_tllist$ )Bool )
(declare-fun less_eq$a (C_d_prod_set$ C_d_prod_set$ )Bool )
(declare-fun less_eq$b (B_llist_d_prod_set$ B_llist_d_prod_set$ )Bool )
(declare-fun less_eq$c (A_llist_c_prod_set$ A_llist_c_prod_set$ )Bool )
(declare-fun lfinite$a (A_llist$ )Bool )
(declare-fun lfinite$b (A_b_prod_llist$ )Bool )
(declare-fun relcompp$ (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun case_prod$ (A_b_bool_fun_fun$ )A_b_prod_bool_fun$ )
(declare-fun conversep$ (A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$aa (C_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_bool_fun_fun$ C_d_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$ab (A_b_prod_a_b_prod_tllist_bool_fun$ A_b_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$ac (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$ad (B_llist_d_bool_fun_fun$ B_llist$ )D_bool_fun$ )
(declare-fun fun_app$ae (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$af (A_llist_c_bool_fun_fun$ A_llist$ )C_bool_fun$ )
(declare-fun fun_app$ag (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$ah (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$ai (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$aj (A_b_prod_a_b_prod_fun$ A_b_prod$ )A_b_prod$ )
(declare-fun fun_app$ak (D_d_fun$ D$ )D$ )
(declare-fun fun_app$al (C_c_fun$ C$ )C$ )
(declare-fun fun_app$am (B_b_fun$ B$ )B$ )
(declare-fun fun_app$an (A_a_fun$ A$ )A$ )
(declare-fun fun_app$ao (B_d_tllist_bool_fun$ B_d_tllist$ )Bool )
(declare-fun fun_app$ap (A_c_tllist_b_d_tllist_bool_fun_fun$ A_c_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$aq (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )A_c_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$ar (A_b_prod_c_d_prod_tllist_a_c_tllist_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun fun_app$as (C_d_prod_c_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_fun_fun$ C_d_prod_c_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ )
(declare-fun fun_app$at (A_b_prod_c_d_prod_tllist_b_d_tllist_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$au (C_d_prod_d_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_fun_fun$ C_d_prod_d_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ )
(declare-fun fun_app$av (A_b_prod_a_b_prod_tllist_a_a_tllist_fun$ A_b_prod_a_b_prod_tllist$ )A_a_tllist$ )
(declare-fun fun_app$aw (C_c_d_prod_fun$ C$ )C_d_prod$ )
(declare-fun fun_app$ax (D_c_d_prod_fun$ D$ )C_d_prod$ )
(declare-fun fun_app$ay (C_d_prod_c_d_prod_fun$ C_d_prod$ )C_d_prod$ )
(declare-fun fun_app$az (A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ A_b_prod_c_d_prod_tllist$ )A_c_tllist$ )
(declare-fun fun_app$ba (A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ A_b_prod_c_d_prod_tllist$ )B_d_tllist$ )
(declare-fun fun_app$bb (C_d_fun$ C$ )D$ )
(declare-fun fun_app$bc (D_c_fun$ D$ )C$ )
(declare-fun fun_app$bd (B_a_fun$ B$ )A$ )
(declare-fun fun_app$be (A_b_fun$ A$ )B$ )
(declare-fun fun_app$bf (C_d_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ C_d_bool_fun_fun$ )A_c_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$bg (B_llist_d_bool_fun_fun_a_b_llist_tllist_b_d_tllist_bool_fun_fun_fun$ B_llist_d_bool_fun_fun$ )A_b_llist_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$bh (A_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun_a_b_llist_tllist_b_d_tllist_bool_fun_fun_fun$ A_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun$ )A_b_llist_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$bi (A_b_prod_b_llist_d_prod_tllist_b_d_tllist_fun_a_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ A_b_prod_b_llist_d_prod_tllist_b_d_tllist_fun$ )A_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$bj (B_llist_d_prod_bool_fun$ B_llist_d_prod$ )Bool )
(declare-fun fun_app$bk (A_llist_c_prod_bool_fun$ A_llist_c_prod$ )Bool )
(declare-fun fun_app$bl (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$bm (D_b_llist_bool_fun_fun$ D$ )B_llist_bool_fun$ )
(declare-fun fun_app$bn (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$bo (B_llist_d_prod_bool_fun_bool_fun$ B_llist_d_prod_bool_fun$ )Bool )
(declare-fun fun_app$bp (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$bq (C_a_llist_bool_fun_fun$ C$ )A_llist_bool_fun$ )
(declare-fun fun_app$br (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$bs (A_llist_c_prod_bool_fun_bool_fun$ A_llist_c_prod_bool_fun$ )Bool )
(declare-fun fun_app$bt (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$bu (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$bv (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$bw (A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_b_d_tllist_a_c_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )B_d_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun fun_app$bx (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_b_d_tllist_b_d_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$by (A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_a_c_tllist_a_c_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun fun_app$bz (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ A_c_tllist$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$ca (A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$cb (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun$ A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$ )Bool )
(declare-fun fun_app$cc (A_c_tllist_a_c_tllist_tllist_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun_fun$ A_c_tllist_a_c_tllist_tllist$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun$ )
(declare-fun fun_app$cd (A_c_tllist_a_c_tllist_tllist_bool_fun$ A_c_tllist_a_c_tllist_tllist$ )Bool )
(declare-fun fun_app$ce (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_a_c_tllist_a_c_tllist_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$ )A_c_tllist_a_c_tllist_tllist_bool_fun$ )
(declare-fun fun_app$cf (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$cg (C_d_prod_c_d_prod_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ C_d_prod_c_d_prod_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$ch (A_b_prod_a_b_prod_bool_fun_fun$ A_b_prod$ )A_b_prod_bool_fun$ )
(declare-fun fun_app$ci (C_d_prod_c_d_prod_bool_fun_fun$ C_d_prod$ )C_d_prod_bool_fun$ )
(declare-fun fun_app$cj (C_c_d_prod_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ C_c_d_prod_bool_fun_fun$ )A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$ck (C_d_prod_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ C_d_prod_d_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$cl (C_d_prod_c_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ C_d_prod_c_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun fun_app$cm (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$cn (B_d_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ B_d_tllist_b_d_tllist_bool_fun_fun$ )A_c_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$co (B_d_tllist_b_d_tllist_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ B_d_tllist_b_d_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$cp (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$cq (A_c_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ A_c_tllist_b_d_tllist_bool_fun_fun$ )A_c_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$cr (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$cs (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun relcompp$a (A_a_tllist_a_b_prod_a_b_prod_tllist_bool_fun_fun$ A_b_prod_a_b_prod_tllist_b_b_tllist_bool_fun_fun$ )A_a_tllist_b_b_tllist_bool_fun_fun$ )
(declare-fun relcompp$b (C_a_tllist_c_d_prod_a_b_prod_tllist_bool_fun_fun$ C_d_prod_a_b_prod_tllist_d_b_tllist_bool_fun_fun$ )C_a_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun relcompp$c (C_c_tllist_c_d_prod_c_d_prod_tllist_bool_fun_fun$ C_d_prod_c_d_prod_tllist_d_d_tllist_bool_fun_fun$ )C_c_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun relcompp$d (A_b_llist_tllist_a_b_prod_b_llist_d_prod_tllist_bool_fun_fun$ )A_b_prod_b_llist_d_prod_tllist_b_d_tllist_bool_fun_fun_a_b_llist_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$e (A_a_llist_tllist_a_b_prod_a_llist_c_prod_tllist_bool_fun_fun$ A_b_prod_a_llist_c_prod_tllist_b_c_tllist_bool_fun_fun$ )A_a_llist_tllist_b_c_tllist_bool_fun_fun$ )
(declare-fun relcompp$f (C_b_llist_tllist_c_d_prod_b_llist_d_prod_tllist_bool_fun_fun$ C_d_prod_b_llist_d_prod_tllist_d_d_tllist_bool_fun_fun$ )C_b_llist_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun relcompp$g (C_a_llist_tllist_c_d_prod_a_llist_c_prod_tllist_bool_fun_fun$ C_d_prod_a_llist_c_prod_tllist_d_c_tllist_bool_fun_fun$ )C_a_llist_tllist_d_c_tllist_bool_fun_fun$ )
(declare-fun relcompp$h (B_llist_a_tllist_b_llist_d_prod_a_b_prod_tllist_bool_fun_fun$ B_llist_d_prod_a_b_prod_tllist_d_b_tllist_bool_fun_fun$ )B_llist_a_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun relcompp$i (B_llist_c_tllist_b_llist_d_prod_c_d_prod_tllist_bool_fun_fun$ B_llist_d_prod_c_d_prod_tllist_d_d_tllist_bool_fun_fun$ )B_llist_c_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun relcompp$j (B_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_b_d_tllist_a_c_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$k (B_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_b_d_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$l (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_a_c_tllist_a_c_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$m (D_c_bool_fun_fun$ C_d_bool_fun_fun$ )D_d_bool_fun_fun$ )
(declare-fun relcompp$n (B_a_bool_fun_fun$ A_b_bool_fun_fun$ )B_b_bool_fun_fun$ )
(declare-fun relcompp$o (B_a_b_prod_bool_fun_fun$ A_b_prod_b_bool_fun_fun$ )B_b_bool_fun_fun$ )
(declare-fun relcompp$p (B_a_b_prod_bool_fun_fun$ A_b_prod_a_bool_fun_fun$ )B_a_bool_fun_fun$ )
(declare-fun relcompp$q (C_c_d_prod_bool_fun_fun$ C_d_prod_c_bool_fun_fun$ )C_c_bool_fun_fun$ )
(declare-fun relcompp$r (C_c_d_prod_bool_fun_fun$ C_d_prod_d_bool_fun_fun$ )C_d_bool_fun_fun$ )
(declare-fun relcompp$s (A_a_b_prod_bool_fun_fun$ A_b_prod_b_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun relcompp$t (A_c_tllist_a_c_tllist_tllist_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ )A_c_tllist_a_c_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ )
(declare-fun relcompp$u (A_c_tllist_b_d_tllist_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$v (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$w (A_c_tllist_a_c_tllist_bool_fun_fun$ )A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$x (A_c_tllist_a_c_tllist_bool_fun_fun$ )A_c_tllist_b_d_tllist_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$y (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun relcompp$z (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun case_prod$a (C_d_bool_fun_fun$ )C_d_prod_bool_fun$ )
(declare-fun case_prod$b (B_llist_d_bool_fun_fun$ )B_llist_d_prod_bool_fun$ )
(declare-fun case_prod$c (A_llist_c_bool_fun_fun$ )A_llist_c_prod_bool_fun$ )
(declare-fun case_prod$d (B_llist_d_b_llist_d_prod_bool_fun_fun_fun$ B_llist_d_prod$ )B_llist_d_prod_bool_fun$ )
(declare-fun case_prod$e (A_llist_c_a_c_tllist_fun_fun$ A_llist_c_prod$ )A_c_tllist$ )
(declare-fun case_prod$f (A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ A_llist_c_prod$ )A_llist_c_prod_bool_fun$ )
(declare-fun case_prod$g (A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_prod_bool_fun$ )
(declare-fun case_prod$h (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_prod_bool_fun$ )
(declare-fun case_prod$i (B_llist_d_b_d_tllist_fun_fun$ B_llist_d_prod$ )B_d_tllist$ )
(declare-fun conversep$a (A_b_prod_a_b_prod_tllist_a_a_tllist_bool_fun_fun$ )A_a_tllist_a_b_prod_a_b_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$b (C_d_prod_a_b_prod_tllist_c_a_tllist_bool_fun_fun$ )C_a_tllist_c_d_prod_a_b_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$c (C_d_prod_c_d_prod_tllist_c_c_tllist_bool_fun_fun$ )C_c_tllist_c_d_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$d (A_b_prod_b_llist_d_prod_tllist_a_b_llist_tllist_bool_fun_fun$ )A_b_llist_tllist_a_b_prod_b_llist_d_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$e (A_b_prod_a_llist_c_prod_tllist_a_a_llist_tllist_bool_fun_fun$ )A_a_llist_tllist_a_b_prod_a_llist_c_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$f (C_d_prod_b_llist_d_prod_tllist_c_b_llist_tllist_bool_fun_fun$ )C_b_llist_tllist_c_d_prod_b_llist_d_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$g (C_d_prod_a_llist_c_prod_tllist_c_a_llist_tllist_bool_fun_fun$ )C_a_llist_tllist_c_d_prod_a_llist_c_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$h (B_llist_d_prod_a_b_prod_tllist_b_llist_a_tllist_bool_fun_fun$ )B_llist_a_tllist_b_llist_d_prod_a_b_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$i (B_llist_d_prod_c_d_prod_tllist_b_llist_c_tllist_bool_fun_fun$ )B_llist_c_tllist_b_llist_d_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$j (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )B_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun conversep$k (C_d_bool_fun_fun$ )D_c_bool_fun_fun$ )
(declare-fun conversep$l (A_b_bool_fun_fun$ )B_a_bool_fun_fun$ )
(declare-fun conversep$m (A_b_prod_b_bool_fun_fun$ )B_a_b_prod_bool_fun_fun$ )
(declare-fun conversep$n (C_d_prod_c_bool_fun_fun$ )C_c_d_prod_bool_fun_fun$ )
(declare-fun conversep$o (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun conversep$p (A_b_prod_a_bool_fun_fun$ )A_a_b_prod_bool_fun_fun$ )
(declare-fun conversep$q (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_a_c_tllist_a_c_tllist_tllist_bool_fun_fun$ )A_c_tllist_a_c_tllist_tllist_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun_fun$ )
(declare-fun set2_tllist$ (A_b_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ A_b_bool_fun_fun$ )A_a_tllist_b_b_tllist_bool_fun_fun$ )
(declare-fun set2_tllist$a (B_llist_d_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun set2_tllist$b (B_llist_d_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$c (C_d_prod_b_llist_d_prod_tllist$ )B_llist_d_prod_set$ )
(declare-fun set2_tllist$d (C_d_prod_a_llist_c_prod_tllist$ )A_llist_c_prod_set$ )
(declare-fun set2_tllist$e (C_d_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun set2_tllist$f (C_d_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$g (A_b_prod_b_llist_d_prod_tllist$ )B_llist_d_prod_set$ )
(declare-fun set2_tllist$h (A_b_prod_a_llist_c_prod_tllist$ )A_llist_c_prod_set$ )
(declare-fun set2_tllist$i (A_b_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$j (B_d_tllist$ )D_set$ )
(declare-fun set2_tllist$k (A_c_tllist$ )C_set$ )
(declare-fun tllist_all2$a (C_d_bool_fun_fun$ A_b_bool_fun_fun$ )C_a_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (C_d_bool_fun_fun$ C_d_bool_fun_fun$ )C_c_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (A_b_bool_fun_fun$ )C_d_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$d (A_b_bool_fun_fun$ )B_llist_d_bool_fun_fun_a_b_llist_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$e (A_b_bool_fun_fun$ A_llist_c_bool_fun_fun$ )A_a_llist_tllist_b_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$f (C_d_bool_fun_fun$ B_llist_d_bool_fun_fun$ )C_b_llist_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$g (C_d_bool_fun_fun$ A_llist_c_bool_fun_fun$ )C_a_llist_tllist_d_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$h (B_llist_d_bool_fun_fun$ A_b_bool_fun_fun$ )B_llist_a_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$i (B_llist_d_bool_fun_fun$ C_d_bool_fun_fun$ )B_llist_c_tllist_d_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$j (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )A_c_tllist_a_c_tllist_tllist_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$k (A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_a_c_tllist_a_c_tllist_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$l (A_b_prod_a_b_prod_bool_fun_fun$ )C_d_prod_c_d_prod_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$m (A_a_b_prod_bool_fun_fun$ )C_c_d_prod_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$n (A_b_prod_b_bool_fun_fun$ )C_d_prod_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$o (A_c_tllist_b_d_tllist_bool_fun_fun$ A_c_tllist_b_d_tllist_bool_fun_fun$ )A_c_tllist_a_c_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$p (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist_b_d_tllist_b_d_tllist_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$q (A_b_prod_a_bool_fun_fun$ )C_d_prod_c_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_of_llist$ (D$ B_llist$ )B_d_tllist$ )
(declare-fun tllist_of_llist$a (C$ A_llist$ )A_c_tllist$ )
(declare-fun tllist_of_llist$b (C_d_prod$ A_b_prod_llist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tllist_of_llist$c (C_d_prod$ C_d_prod_llist$ )C_d_prod_c_d_prod_tllist$ )
(declare-fun tllist_of_llist$d (A_b_prod$ C_d_prod_llist$ )C_d_prod_a_b_prod_tllist$ )
(declare-fun tllist_of_llist$e (A_b_prod$ A_b_prod_llist$ )A_b_prod_a_b_prod_tllist$ )
(declare-fun tllist_of_llist$f (A$ A_llist$ )A_a_tllist$ )
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ ))(! (= (fun_app$ uu$ ?v0 )(and (less_eq$ (tset$ ?v0 )(collect$ (case_prod$ y$ )))(less_eq$a (set2_tllist$ ?v0 )(collect$a (case_prod$a ya$ ))))):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 B_llist_d_prod$ ))(! (= (fun_app$a uuo$ ?v0 )(snd$b ?v0 )):pattern ((fun_app$a uuo$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_c_prod$ ))(! (= (fun_app$b uur$ ?v0 )(snd$c ?v0 )):pattern ((fun_app$b uur$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$c uud$ ?v0 )(snd$a ?v0 )):pattern ((fun_app$c uud$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$d uuc$ ?v0 )(snd$ ?v0 )):pattern ((fun_app$d uuc$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 B_llist_d_prod$ ))(! (= (fun_app$e uun$ ?v0 )(fst$b ?v0 )):pattern ((fun_app$e uun$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_c_prod$ ))(! (= (fun_app$f uuq$ ?v0 )(fst$c ?v0 )):pattern ((fun_app$f uuq$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$g uub$ ?v0 )(fst$a ?v0 )):pattern ((fun_app$g uub$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$h uua$ ?v0 )(fst$ ?v0 )):pattern ((fun_app$h uua$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 D$ ))(! (= (fun_app$i (fun_app$j uve$ ?v0 )?v1 )(tllist_of_llist$ ?v1 ?v0 )):pattern ((fun_app$i (fun_app$j uve$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ ))(! (= (fun_app$k (fun_app$l uvb$ ?v0 )?v1 )(tllist_of_llist$a ?v1 ?v0 )):pattern ((fun_app$k (fun_app$l uvb$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ )(?v1 A_b_prod_c_d_prod_tllist$ ))(! (= (fun_app$ (uvh$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$ (uvh$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod$ ))(! (= (fun_app$m (uvj$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$m (uvj$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod$ ))(! (= (fun_app$n (uvi$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$n (uvi$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 D$ ))(! (= (fun_app$o (fun_app$p uvg$ ?v0 )?v1 )(case_prod$b (uvf$ ?v0 ?v1 ))):pattern ((fun_app$o (fun_app$p uvg$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ ))(! (= (fun_app$q (fun_app$r uvd$ ?v0 )?v1 )(case_prod$c (uvc$ ?v0 ?v1 ))):pattern ((fun_app$q (fun_app$r uvd$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 B_llist_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 B_llist_d_prod_c_d_prod_tllist$ ))(! (= (fun_app$s (uuv$ ?v0 ?v1 )?v2 )(and (less_eq$b (tset$a ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$a (set2_tllist$a ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$s (uuv$ ?v0 ?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 B_llist_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 B_llist_d_prod_a_b_prod_tllist$ ))(! (= (fun_app$t (uuu$ ?v0 ?v1 )?v2 )(and (less_eq$b (tset$b ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$ (set2_tllist$b ?v2 )(collect$ (case_prod$ ?v1 ))))):pattern ((fun_app$t (uuu$ ?v0 ?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 B_llist_d_bool_fun_fun$ )(?v2 C_d_prod_b_llist_d_prod_tllist$ ))(! (= (fun_app$u (uus$ ?v0 ?v1 )?v2 )(and (less_eq$a (tset$c ?v2 )(collect$a (case_prod$a ?v0 )))(less_eq$b (set2_tllist$c ?v2 )(collect$b (case_prod$b ?v1 ))))):pattern ((fun_app$u (uus$ ?v0 ?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_llist_c_bool_fun_fun$ )(?v2 C_d_prod_a_llist_c_prod_tllist$ ))(! (= (fun_app$v (uut$ ?v0 ?v1 )?v2 )(and (less_eq$a (tset$d ?v2 )(collect$a (case_prod$a ?v0 )))(less_eq$c (set2_tllist$d ?v2 )(collect$c (case_prod$c ?v1 ))))):pattern ((fun_app$v (uut$ ?v0 ?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_d_prod_c_d_prod_tllist$ ))(! (= (fun_app$w (uuk$ ?v0 ?v1 )?v2 )(and (less_eq$a (tset$e ?v2 )(collect$a (case_prod$a ?v0 )))(less_eq$a (set2_tllist$e ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$w (uuk$ ?v0 ?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_d_prod_a_b_prod_tllist$ ))(! (= (fun_app$x (uuj$ ?v0 ?v1 )?v2 )(and (less_eq$a (tset$f ?v2 )(collect$a (case_prod$a ?v0 )))(less_eq$ (set2_tllist$f ?v2 )(collect$ (case_prod$ ?v1 ))))):pattern ((fun_app$x (uuj$ ?v0 ?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_llist_d_bool_fun_fun$ )(?v2 A_b_prod_b_llist_d_prod_tllist$ ))(! (= (fun_app$y (uum$ ?v0 ?v1 )?v2 )(and (less_eq$ (tset$g ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$b (set2_tllist$g ?v2 )(collect$b (case_prod$b ?v1 ))))):pattern ((fun_app$y (uum$ ?v0 ?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_b_prod_a_llist_c_prod_tllist$ ))(! (= (fun_app$z (uup$ ?v0 ?v1 )?v2 )(and (less_eq$ (tset$h ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$c (set2_tllist$h ?v2 )(collect$c (case_prod$c ?v1 ))))):pattern ((fun_app$z (uup$ ?v0 ?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(! (= (fun_app$ (fun_app$aa (uul$ ?v0 )?v1 )?v2 )(and (less_eq$ (tset$ ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$a (set2_tllist$ ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$ (fun_app$aa (uul$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod_a_b_prod_tllist$ ))(! (= (fun_app$ab (uui$ ?v0 ?v1 )?v2 )(and (less_eq$ (tset$i ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$ (set2_tllist$i ?v2 )(collect$ (case_prod$ ?v1 ))))):pattern ((fun_app$ab (uui$ ?v0 ?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 D$ )(?v2 B_llist$ )(?v3 D$ ))(! (= (fun_app$ac (fun_app$ad (uvf$ ?v0 ?v1 )?v2 )?v3 )(and (= ?v0 ?v2 )(=> (lfinite$ ?v2 )(= ?v1 ?v3 )))):pattern ((fun_app$ac (fun_app$ad (uvf$ ?v0 ?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$ae (fun_app$af (uvc$ ?v0 ?v1 )?v2 )?v3 )(and (= ?v0 ?v2 )(=> (lfinite$a ?v2 )(= ?v1 ?v3 )))):pattern ((fun_app$ae (fun_app$af (uvc$ ?v0 ?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 Bool )(?v1 B_llist_d_bool_fun_fun$ )(?v2 B_llist$ )(?v3 D$ ))(! (= (fun_app$ac (fun_app$ad (uux$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$ac (fun_app$ad ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ad (uux$ ?v0 ?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist$ )(?v3 C$ ))(! (= (fun_app$ae (fun_app$af (uuy$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$ae (fun_app$af ?v1 ?v2 )?v3 ))):pattern ((fun_app$ae (fun_app$af (uuy$ ?v0 ?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 Bool )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$ac (fun_app$ag (uva$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$ac (fun_app$ag ?v1 ?v2 )?v3 ))):pattern ((fun_app$ac (fun_app$ag (uva$ ?v0 ?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$ah (fun_app$ai (uuz$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$ah (fun_app$ai ?v1 ?v2 )?v3 ))):pattern ((fun_app$ah (fun_app$ai (uuz$ ?v0 ?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$aj uuw$ ?v0 )?v0 ):pattern ((fun_app$aj uuw$ ?v0 )))):named a32 ))
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$ak uuf$ ?v0 )?v0 ):pattern ((fun_app$ak uuf$ ?v0 )))):named a33 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$al uuh$ ?v0 )?v0 ):pattern ((fun_app$al uuh$ ?v0 )))):named a34 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$am uue$ ?v0 )?v0 ):pattern ((fun_app$am uue$ ?v0 )))):named a35 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$an uug$ ?v0 )?v0 ):pattern ((fun_app$an uug$ ?v0 )))):named a36 ))
(assert (! (not (fun_app$ao (fun_app$ap (fun_app$aq (relcompp$ (conversep$ (fun_app$ar (grp$ (collect$d uu$ ))(fun_app$as (tmap$ uua$ )uub$ ))))(fun_app$at (grp$a (collect$d uu$ ))(fun_app$au (tmap$a uuc$ )uud$ )))(tllist_of_llist$a b$ (lmap$ uua$ bb$ )))(tllist_of_llist$ ba$ (lmap$a uuc$ bb$ )))):named a37 ))
(assert (! (less_eq$ (lset$ bb$ )(collect$ (case_prod$ y$ ))):named a38 ))
(assert (! (not (lfinite$b bb$ )):named a39 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 A_b_prod_llist$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (= (tllist_of_llist$b ?v0 ?v1 )(tllist_of_llist$b ?v2 ?v3 ))(and (= ?v1 ?v3 )(=> (lfinite$b ?v3 )(= ?v0 ?v2 ))))):named a40 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist$ )(?v2 C$ )(?v3 A_llist$ ))(= (= (tllist_of_llist$a ?v0 ?v1 )(tllist_of_llist$a ?v2 ?v3 ))(and (= ?v1 ?v3 )(=> (lfinite$a ?v3 )(= ?v0 ?v2 ))))):named a41 ))
(assert (! (forall ((?v0 D$ )(?v1 B_llist$ )(?v2 D$ )(?v3 B_llist$ ))(= (= (tllist_of_llist$ ?v0 ?v1 )(tllist_of_llist$ ?v2 ?v3 ))(and (= ?v1 ?v3 )(=> (lfinite$ ?v3 )(= ?v0 ?v2 ))))):named a42 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod_llist$ ))(= (tset$e (tllist_of_llist$c ?v0 ?v1 ))(lset$a ?v1 ))):named a43 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 C_d_prod_llist$ ))(= (tset$f (tllist_of_llist$d ?v0 ?v1 ))(lset$a ?v1 ))):named a44 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(= (tset$i (tllist_of_llist$e ?v0 ?v1 ))(lset$ ?v1 ))):named a45 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 A_b_prod_llist$ ))(= (tset$ (tllist_of_llist$b ?v0 ?v1 ))(lset$ ?v1 ))):named a46 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist$ ))(= (tset$j (tllist_of_llist$a ?v0 ?v1 ))(lset$b ?v1 ))):named a47 ))
(assert (! (forall ((?v0 D$ )(?v1 B_llist$ ))(= (tset$k (tllist_of_llist$ ?v0 ?v1 ))(lset$c ?v1 ))):named a48 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(= (fun_app$av (tmap$b ?v0 ?v1 )(tllist_of_llist$e ?v2 ?v3 ))(tllist_of_llist$f (fun_app$h ?v1 ?v2 )(lmap$ ?v0 ?v3 )))):named a49 ))
(assert (! (forall ((?v0 A_a_b_prod_fun$ )(?v1 C_c_d_prod_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$c ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$b (fun_app$aw ?v1 ?v2 )(lmap$b ?v0 ?v3 )))):named a50 ))
(assert (! (forall ((?v0 B_a_b_prod_fun$ )(?v1 D_c_d_prod_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$d ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$b (fun_app$ax ?v1 ?v2 )(lmap$c ?v0 ?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 C_d_prod_c_d_prod_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$e ?v0 ?v1 (tllist_of_llist$b ?v2 ?v3 ))(tllist_of_llist$b (fun_app$ay ?v1 ?v2 )(lmap$d ?v0 ?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 C_d_prod_c_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (fun_app$az (fun_app$as (tmap$ ?v0 )?v1 )(tllist_of_llist$b ?v2 ?v3 ))(tllist_of_llist$a (fun_app$g ?v1 ?v2 )(lmap$ ?v0 ?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_b_prod_b_fun$ )(?v1 C_d_prod_d_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (fun_app$ba (fun_app$au (tmap$a ?v0 )?v1 )(tllist_of_llist$b ?v2 ?v3 ))(tllist_of_llist$ (fun_app$c ?v1 ?v2 )(lmap$a ?v0 ?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$f ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$a (fun_app$al ?v1 ?v2 )(lmap$e ?v0 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 C_d_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$g ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$ (fun_app$bb ?v1 ?v2 )(lmap$f ?v0 ?v3 )))):named a56 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$h ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$a (fun_app$bc ?v1 ?v2 )(lmap$g ?v0 ?v3 )))):named a57 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$i ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$ (fun_app$ak ?v1 ?v2 )(lmap$h ?v0 ?v3 )))):named a58 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(= (tmap$i uue$ uuf$ ?v0 )?v0 )):named a59 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(= (tmap$f uug$ uuh$ ?v0 )?v0 )):named a60 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$c ?v6 (tset$k ?v0 ))(and (member$c ?v7 (tset$k ?v1 ))(= (fun_app$am ?v2 ?v6 )(fun_app$am ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$d ?v6 (set2_tllist$j ?v0 ))(and (member$d ?v7 (set2_tllist$j ?v1 ))(= (fun_app$ak ?v4 ?v6 )(fun_app$ak ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$i ?v2 ?v4 ?v0 )(tmap$i ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a61 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ )(?v5 D_c_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$c ?v6 (tset$k ?v0 ))(and (member$c ?v7 (tset$k ?v1 ))(= (fun_app$bd ?v2 ?v6 )(fun_app$bd ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$d ?v6 (set2_tllist$j ?v0 ))(and (member$d ?v7 (set2_tllist$j ?v1 ))(= (fun_app$bc ?v4 ?v6 )(fun_app$bc ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$h ?v2 ?v4 ?v0 )(tmap$h ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a62 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$e ?v6 (tset$j ?v0 ))(and (member$e ?v7 (tset$j ?v1 ))(= (fun_app$be ?v2 ?v6 )(fun_app$be ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$f ?v6 (set2_tllist$k ?v0 ))(and (member$f ?v7 (set2_tllist$k ?v1 ))(= (fun_app$bb ?v4 ?v6 )(fun_app$bb ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$g ?v2 ?v4 ?v0 )(tmap$g ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$e ?v6 (tset$j ?v0 ))(and (member$e ?v7 (tset$j ?v1 ))(= (fun_app$an ?v2 ?v6 )(fun_app$an ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$f ?v6 (set2_tllist$k ?v0 ))(and (member$f ?v7 (set2_tllist$k ?v1 ))(= (fun_app$al ?v4 ?v6 )(fun_app$al ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$f ?v2 ?v4 ?v0 )(tmap$f ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ )(?v5 A_b_prod_a_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$b ?v6 (tset$i ?v0 ))(and (member$b ?v7 (tset$i ?v1 ))(= (fun_app$h ?v2 ?v6 )(fun_app$h ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$b ?v6 (set2_tllist$i ?v0 ))(and (member$b ?v7 (set2_tllist$i ?v1 ))(= (fun_app$h ?v4 ?v6 )(fun_app$h ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$av (tmap$b ?v2 ?v4 )?v0 )(fun_app$av (tmap$b ?v3 ?v5 )?v1 ))))(= ?v0 ?v1 ))):named a65 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$b ?v6 (tset$ ?v0 ))(and (member$b ?v7 (tset$ ?v1 ))(= (fun_app$h ?v2 ?v6 )(fun_app$h ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$a ?v6 (set2_tllist$ ?v0 ))(and (member$a ?v7 (set2_tllist$ ?v1 ))(= (fun_app$g ?v4 ?v6 )(fun_app$g ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$az (fun_app$as (tmap$ ?v2 )?v4 )?v0 )(fun_app$az (fun_app$as (tmap$ ?v3 )?v5 )?v1 ))))(= ?v0 ?v1 ))):named a66 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 C_d_prod_d_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$b ?v6 (tset$ ?v0 ))(and (member$b ?v7 (tset$ ?v1 ))(= (fun_app$d ?v2 ?v6 )(fun_app$d ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$a ?v6 (set2_tllist$ ?v0 ))(and (member$a ?v7 (set2_tllist$ ?v1 ))(= (fun_app$c ?v4 ?v6 )(fun_app$c ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (fun_app$ba (fun_app$au (tmap$a ?v2 )?v4 )?v0 )(fun_app$ba (fun_app$au (tmap$a ?v3 )?v5 )?v1 ))))(= ?v0 ?v1 ))):named a67 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$c ?v5 (tset$k ?v0 ))(= (fun_app$am ?v1 ?v5 )(fun_app$am ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$d ?v5 (set2_tllist$j ?v0 ))(= (fun_app$ak ?v3 ?v5 )(fun_app$ak ?v4 ?v5 )))))(= (tmap$i ?v1 ?v3 ?v0 )(tmap$i ?v2 ?v4 ?v0 )))):named a68 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 D_c_fun$ )(?v4 D_c_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$c ?v5 (tset$k ?v0 ))(= (fun_app$bd ?v1 ?v5 )(fun_app$bd ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$d ?v5 (set2_tllist$j ?v0 ))(= (fun_app$bc ?v3 ?v5 )(fun_app$bc ?v4 ?v5 )))))(= (tmap$h ?v1 ?v3 ?v0 )(tmap$h ?v2 ?v4 ?v0 )))):named a69 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_b_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 C_d_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$e ?v5 (tset$j ?v0 ))(= (fun_app$be ?v1 ?v5 )(fun_app$be ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$f ?v5 (set2_tllist$k ?v0 ))(= (fun_app$bb ?v3 ?v5 )(fun_app$bb ?v4 ?v5 )))))(= (tmap$g ?v1 ?v3 ?v0 )(tmap$g ?v2 ?v4 ?v0 )))):named a70 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 C_c_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$e ?v5 (tset$j ?v0 ))(= (fun_app$an ?v1 ?v5 )(fun_app$an ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$f ?v5 (set2_tllist$k ?v0 ))(= (fun_app$al ?v3 ?v5 )(fun_app$al ?v4 ?v5 )))))(= (tmap$f ?v1 ?v3 ?v0 )(tmap$f ?v2 ?v4 ?v0 )))):named a71 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$b ?v5 (tset$i ?v0 ))(= (fun_app$h ?v1 ?v5 )(fun_app$h ?v2 ?v5 ))))(forall ((?v5 A_b_prod$ ))(=> (member$b ?v5 (set2_tllist$i ?v0 ))(= (fun_app$h ?v3 ?v5 )(fun_app$h ?v4 ?v5 )))))(= (fun_app$av (tmap$b ?v1 ?v3 )?v0 )(fun_app$av (tmap$b ?v2 ?v4 )?v0 )))):named a72 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 C_d_prod_c_fun$ )(?v4 C_d_prod_c_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$b ?v5 (tset$ ?v0 ))(= (fun_app$h ?v1 ?v5 )(fun_app$h ?v2 ?v5 ))))(forall ((?v5 C_d_prod$ ))(=> (member$a ?v5 (set2_tllist$ ?v0 ))(= (fun_app$g ?v3 ?v5 )(fun_app$g ?v4 ?v5 )))))(= (fun_app$az (fun_app$as (tmap$ ?v1 )?v3 )?v0 )(fun_app$az (fun_app$as (tmap$ ?v2 )?v4 )?v0 )))):named a73 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_b_fun$ )(?v2 A_b_prod_b_fun$ )(?v3 C_d_prod_d_fun$ )(?v4 C_d_prod_d_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$b ?v5 (tset$ ?v0 ))(= (fun_app$d ?v1 ?v5 )(fun_app$d ?v2 ?v5 ))))(forall ((?v5 C_d_prod$ ))(=> (member$a ?v5 (set2_tllist$ ?v0 ))(= (fun_app$c ?v3 ?v5 )(fun_app$c ?v4 ?v5 )))))(= (fun_app$ba (fun_app$au (tmap$a ?v1 )?v3 )?v0 )(fun_app$ba (fun_app$au (tmap$a ?v2 )?v4 )?v0 )))):named a74 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 C_d_prod$ )(?v3 C_d_prod$ ))(=> (and (= ?v0 ?v1 )(=> (lfinite$b ?v1 )(= ?v2 ?v3 )))(= (tllist_of_llist$b ?v2 ?v0 )(tllist_of_llist$b ?v3 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 C$ )(?v3 C$ ))(=> (and (= ?v0 ?v1 )(=> (lfinite$a ?v1 )(= ?v2 ?v3 )))(= (tllist_of_llist$a ?v2 ?v0 )(tllist_of_llist$a ?v3 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 D$ )(?v3 D$ ))(=> (and (= ?v0 ?v1 )(=> (lfinite$ ?v1 )(= ?v2 ?v3 )))(= (tllist_of_llist$ ?v2 ?v0 )(tllist_of_llist$ ?v3 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$c ?v6 (tset$k ?v1 ))(= (fun_app$am ?v2 ?v6 )(fun_app$am ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$d ?v6 (set2_tllist$j ?v1 ))(= (fun_app$ak ?v4 ?v6 )(fun_app$ak ?v5 ?v6 ))))))(= (tmap$i ?v2 ?v4 ?v0 )(tmap$i ?v3 ?v5 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ )(?v5 D_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$c ?v6 (tset$k ?v1 ))(= (fun_app$bd ?v2 ?v6 )(fun_app$bd ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$d ?v6 (set2_tllist$j ?v1 ))(= (fun_app$bc ?v4 ?v6 )(fun_app$bc ?v5 ?v6 ))))))(= (tmap$h ?v2 ?v4 ?v0 )(tmap$h ?v3 ?v5 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$e ?v6 (tset$j ?v1 ))(= (fun_app$be ?v2 ?v6 )(fun_app$be ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$f ?v6 (set2_tllist$k ?v1 ))(= (fun_app$bb ?v4 ?v6 )(fun_app$bb ?v5 ?v6 ))))))(= (tmap$g ?v2 ?v4 ?v0 )(tmap$g ?v3 ?v5 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$e ?v6 (tset$j ?v1 ))(= (fun_app$an ?v2 ?v6 )(fun_app$an ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$f ?v6 (set2_tllist$k ?v1 ))(= (fun_app$al ?v4 ?v6 )(fun_app$al ?v5 ?v6 ))))))(= (tmap$f ?v2 ?v4 ?v0 )(tmap$f ?v3 ?v5 ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ )(?v5 A_b_prod_a_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$b ?v6 (tset$i ?v1 ))(= (fun_app$h ?v2 ?v6 )(fun_app$h ?v3 ?v6 ))))(forall ((?v6 A_b_prod$ ))(=> (member$b ?v6 (set2_tllist$i ?v1 ))(= (fun_app$h ?v4 ?v6 )(fun_app$h ?v5 ?v6 ))))))(= (fun_app$av (tmap$b ?v2 ?v4 )?v0 )(fun_app$av (tmap$b ?v3 ?v5 )?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$b ?v6 (tset$ ?v1 ))(= (fun_app$h ?v2 ?v6 )(fun_app$h ?v3 ?v6 ))))(forall ((?v6 C_d_prod$ ))(=> (member$a ?v6 (set2_tllist$ ?v1 ))(= (fun_app$g ?v4 ?v6 )(fun_app$g ?v5 ?v6 ))))))(= (fun_app$az (fun_app$as (tmap$ ?v2 )?v4 )?v0 )(fun_app$az (fun_app$as (tmap$ ?v3 )?v5 )?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 C_d_prod_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$b ?v6 (tset$ ?v1 ))(= (fun_app$d ?v2 ?v6 )(fun_app$d ?v3 ?v6 ))))(forall ((?v6 C_d_prod$ ))(=> (member$a ?v6 (set2_tllist$ ?v1 ))(= (fun_app$c ?v4 ?v6 )(fun_app$c ?v5 ?v6 ))))))(= (fun_app$ba (fun_app$au (tmap$a ?v2 )?v4 )?v0 )(fun_app$ba (fun_app$au (tmap$a ?v3 )?v5 )?v1 )))):named a84 ))
(assert (! (forall ((?v0 B_a_b_prod_fun$ )(?v1 B_llist$ ))(= (lfinite$b (lmap$c ?v0 ?v1 ))(lfinite$ ?v1 ))):named a85 ))
(assert (! (forall ((?v0 A_a_b_prod_fun$ )(?v1 A_llist$ ))(= (lfinite$b (lmap$b ?v0 ?v1 ))(lfinite$a ?v1 ))):named a86 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_llist$ ))(= (lfinite$ (lmap$h ?v0 ?v1 ))(lfinite$ ?v1 ))):named a87 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_llist$ ))(= (lfinite$a (lmap$g ?v0 ?v1 ))(lfinite$ ?v1 ))):named a88 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_llist$ ))(= (lfinite$ (lmap$f ?v0 ?v1 ))(lfinite$a ?v1 ))):named a89 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (lfinite$a (lmap$e ?v0 ?v1 ))(lfinite$a ?v1 ))):named a90 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 A_b_prod_llist$ ))(= (lfinite$b (lmap$d ?v0 ?v1 ))(lfinite$b ?v1 ))):named a91 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 A_b_prod_llist$ ))(= (lfinite$a (lmap$ ?v0 ?v1 ))(lfinite$b ?v1 ))):named a92 ))
(assert (! (forall ((?v0 A_b_prod_b_fun$ )(?v1 A_b_prod_llist$ ))(= (lfinite$ (lmap$a ?v0 ?v1 ))(lfinite$b ?v1 ))):named a93 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ ))(= (tllist_all2$ ?v0 ?v1 )(relcompp$a (conversep$a (grp$b (collect$e (uui$ ?v0 ?v1 ))(tmap$b uua$ uua$ )))(grp$c (collect$e (uui$ ?v0 ?v1 ))(tmap$j uuc$ uuc$ ))))):named a94 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ ))(= (tllist_all2$a ?v0 ?v1 )(relcompp$b (conversep$b (grp$d (collect$f (uuj$ ?v0 ?v1 ))(tmap$k uub$ uua$ )))(grp$e (collect$f (uuj$ ?v0 ?v1 ))(tmap$l uud$ uuc$ ))))):named a95 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ ))(= (tllist_all2$b ?v0 ?v1 )(relcompp$c (conversep$c (grp$f (collect$g (uuk$ ?v0 ?v1 ))(tmap$m uub$ uub$ )))(grp$g (collect$g (uuk$ ?v0 ?v1 ))(tmap$n uud$ uud$ ))))):named a96 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ ))(= (fun_app$bf (tllist_all2$c ?v0 )?v1 )(fun_app$aq (relcompp$ (conversep$ (fun_app$ar (grp$ (collect$d (fun_app$aa (uul$ ?v0 )?v1 )))(fun_app$as (tmap$ uua$ )uub$ ))))(fun_app$at (grp$a (collect$d (fun_app$aa (uul$ ?v0 )?v1 )))(fun_app$au (tmap$a uuc$ )uud$ ))))):named a97 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_llist_d_bool_fun_fun$ ))(= (fun_app$bg (tllist_all2$d ?v0 )?v1 )(fun_app$bh (relcompp$d (conversep$d (grp$h (collect$h (uum$ ?v0 ?v1 ))(tmap$o uua$ uun$ ))))(fun_app$bi (grp$i (collect$h (uum$ ?v0 ?v1 )))(tmap$p uuc$ uuo$ ))))):named a98 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist_c_bool_fun_fun$ ))(= (tllist_all2$e ?v0 ?v1 )(relcompp$e (conversep$e (grp$j (collect$i (uup$ ?v0 ?v1 ))(tmap$q uua$ uuq$ )))(grp$k (collect$i (uup$ ?v0 ?v1 ))(tmap$r uuc$ uur$ ))))):named a99 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 B_llist_d_bool_fun_fun$ ))(= (tllist_all2$f ?v0 ?v1 )(relcompp$f (conversep$f (grp$l (collect$j (uus$ ?v0 ?v1 ))(tmap$s uub$ uun$ )))(grp$m (collect$j (uus$ ?v0 ?v1 ))(tmap$t uud$ uuo$ ))))):named a100 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_llist_c_bool_fun_fun$ ))(= (tllist_all2$g ?v0 ?v1 )(relcompp$g (conversep$g (grp$n (collect$k (uut$ ?v0 ?v1 ))(tmap$u uub$ uuq$ )))(grp$o (collect$k (uut$ ?v0 ?v1 ))(tmap$v uud$ uur$ ))))):named a101 ))
(assert (! (forall ((?v0 B_llist_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ ))(= (tllist_all2$h ?v0 ?v1 )(relcompp$h (conversep$h (grp$p (collect$l (uuu$ ?v0 ?v1 ))(tmap$w uun$ uua$ )))(grp$q (collect$l (uuu$ ?v0 ?v1 ))(tmap$x uuo$ uuc$ ))))):named a102 ))
(assert (! (forall ((?v0 B_llist_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ ))(= (tllist_all2$i ?v0 ?v1 )(relcompp$i (conversep$i (grp$r (collect$m (uuv$ ?v0 ?v1 ))(tmap$y uun$ uub$ )))(grp$s (collect$m (uuv$ ?v0 ?v1 ))(tmap$z uuo$ uud$ ))))):named a103 ))
(assert (! (forall ((?v0 B_llist$ ))(= (lmap$h uue$ ?v0 )?v0 )):named a104 ))
(assert (! (forall ((?v0 A_llist$ ))(= (lmap$e uug$ ?v0 )?v0 )):named a105 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(= (lmap$d uuw$ ?v0 )?v0 )):named a106 ))
(assert (! (forall ((?v0 Bool )(?v1 B_llist_d_bool_fun_fun$ )(?v2 B_llist_d_prod$ ))(= (fun_app$bj (case_prod$b (uux$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$bj (case_prod$b ?v1 )?v2 )))):named a107 ))
(assert (! (forall ((?v0 Bool )(?v1 A_llist_c_bool_fun_fun$ )(?v2 A_llist_c_prod$ ))(= (fun_app$bk (case_prod$c (uuy$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$bk (case_prod$c ?v1 )?v2 )))):named a108 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod$ ))(= (fun_app$n (case_prod$ (uuz$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$n (case_prod$ ?v1 )?v2 )))):named a109 ))
(assert (! (forall ((?v0 Bool )(?v1 C_d_bool_fun_fun$ )(?v2 C_d_prod$ ))(= (fun_app$m (case_prod$a (uva$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$m (case_prod$a ?v1 )?v2 )))):named a110 ))
(assert (! (forall ((?v0 B_llist_d_bool_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (fun_app$bj (case_prod$b ?v0 )?v1 )(fun_app$ac (fun_app$ad ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((fun_app$bj (case_prod$b ?v0 )?v1 )))):named a111 ))
(assert (! (forall ((?v0 B_llist_d_b_llist_d_prod_bool_fun_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (case_prod$d ?v0 ?v1 )(fun_app$o (fun_app$p ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((case_prod$d ?v0 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 A_llist_c_a_c_tllist_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$e ?v0 ?v1 )(fun_app$k (fun_app$l ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$e ?v0 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 A_llist_c_bool_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (fun_app$bk (case_prod$c ?v0 )?v1 )(fun_app$ae (fun_app$af ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((fun_app$bk (case_prod$c ?v0 )?v1 )))):named a114 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$f ?v0 ?v1 )(fun_app$q (fun_app$r ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$f ?v0 ?v1 )))):named a115 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$n (case_prod$ ?v0 )?v1 )(fun_app$ah (fun_app$ai ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$n (case_prod$ ?v0 )?v1 )))):named a116 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$m (case_prod$a ?v0 )?v1 )(fun_app$ac (fun_app$ag ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$m (case_prod$a ?v0 )?v1 )))):named a117 ))
(assert (! (forall ((?v0 B_llist_d_bool_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (fun_app$bj (case_prod$b ?v0 )?v1 )(fun_app$ac (fun_app$ad ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((fun_app$bj (case_prod$b ?v0 )?v1 )))):named a118 ))
(assert (! (forall ((?v0 B_llist_d_b_llist_d_prod_bool_fun_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (case_prod$d ?v0 ?v1 )(fun_app$o (fun_app$p ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((case_prod$d ?v0 ?v1 )))):named a119 ))
(assert (! (forall ((?v0 A_llist_c_a_c_tllist_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$e ?v0 ?v1 )(fun_app$k (fun_app$l ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$e ?v0 ?v1 )))):named a120 ))
(assert (! (forall ((?v0 A_llist_c_bool_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (fun_app$bk (case_prod$c ?v0 )?v1 )(fun_app$ae (fun_app$af ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((fun_app$bk (case_prod$c ?v0 )?v1 )))):named a121 ))
(assert (! (forall ((?v0 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$f ?v0 ?v1 )(fun_app$q (fun_app$r ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$f ?v0 ?v1 )))):named a122 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$n (case_prod$ ?v0 )?v1 )(fun_app$ah (fun_app$ai ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$n (case_prod$ ?v0 )?v1 )))):named a123 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$m (case_prod$a ?v0 )?v1 )(fun_app$ac (fun_app$ag ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$m (case_prod$a ?v0 )?v1 )))):named a124 ))
(assert (! (forall ((?v0 D_b_llist_bool_fun_fun$ )(?v1 B_llist_d_prod$ )(?v2 Bool_bool_fun$ )(?v3 B_llist_d_bool_fun_fun$ ))(=> (and (fun_app$bl (fun_app$bm ?v0 (snd$b ?v1 ))(fst$b ?v1 ))(forall ((?v4 B_llist$ )(?v5 D$ ))(=> (fun_app$bl (fun_app$bm ?v0 ?v5 )?v4 )(fun_app$bn ?v2 (fun_app$ac (fun_app$ad ?v3 ?v4 )?v5 )))))(fun_app$bn ?v2 (fun_app$bj (case_prod$b ?v3 )?v1 )))):named a125 ))
(assert (! (forall ((?v0 D_b_llist_bool_fun_fun$ )(?v1 B_llist_d_prod$ )(?v2 B_llist_d_prod_bool_fun_bool_fun$ )(?v3 B_llist_d_b_llist_d_prod_bool_fun_fun_fun$ ))(=> (and (fun_app$bl (fun_app$bm ?v0 (snd$b ?v1 ))(fst$b ?v1 ))(forall ((?v4 B_llist$ )(?v5 D$ ))(=> (fun_app$bl (fun_app$bm ?v0 ?v5 )?v4 )(fun_app$bo ?v2 (fun_app$o (fun_app$p ?v3 ?v4 )?v5 )))))(fun_app$bo ?v2 (case_prod$d ?v3 ?v1 )))):named a126 ))
(assert (! (forall ((?v0 C_a_llist_bool_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_c_tllist_bool_fun$ )(?v3 A_llist_c_a_c_tllist_fun_fun$ ))(=> (and (fun_app$bp (fun_app$bq ?v0 (snd$c ?v1 ))(fst$c ?v1 ))(forall ((?v4 A_llist$ )(?v5 C$ ))(=> (fun_app$bp (fun_app$bq ?v0 ?v5 )?v4 )(fun_app$br ?v2 (fun_app$k (fun_app$l ?v3 ?v4 )?v5 )))))(fun_app$br ?v2 (case_prod$e ?v3 ?v1 )))):named a127 ))
(assert (! (forall ((?v0 C_a_llist_bool_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 Bool_bool_fun$ )(?v3 A_llist_c_bool_fun_fun$ ))(=> (and (fun_app$bp (fun_app$bq ?v0 (snd$c ?v1 ))(fst$c ?v1 ))(forall ((?v4 A_llist$ )(?v5 C$ ))(=> (fun_app$bp (fun_app$bq ?v0 ?v5 )?v4 )(fun_app$bn ?v2 (fun_app$ae (fun_app$af ?v3 ?v4 )?v5 )))))(fun_app$bn ?v2 (fun_app$bk (case_prod$c ?v3 )?v1 )))):named a128 ))
(assert (! (forall ((?v0 C_a_llist_bool_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_prod_bool_fun_bool_fun$ )(?v3 A_llist_c_a_llist_c_prod_bool_fun_fun_fun$ ))(=> (and (fun_app$bp (fun_app$bq ?v0 (snd$c ?v1 ))(fst$c ?v1 ))(forall ((?v4 A_llist$ )(?v5 C$ ))(=> (fun_app$bp (fun_app$bq ?v0 ?v5 )?v4 )(fun_app$bs ?v2 (fun_app$q (fun_app$r ?v3 ?v4 )?v5 )))))(fun_app$bs ?v2 (case_prod$f ?v3 ?v1 )))):named a129 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_prod$ )(?v2 Bool_bool_fun$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$bt (fun_app$bu ?v0 (snd$ ?v1 ))(fst$ ?v1 ))(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$bt (fun_app$bu ?v0 ?v5 )?v4 )(fun_app$bn ?v2 (fun_app$ah (fun_app$ai ?v3 ?v4 )?v5 )))))(fun_app$bn ?v2 (fun_app$n (case_prod$ ?v3 )?v1 )))):named a130 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C_d_prod$ )(?v2 Bool_bool_fun$ )(?v3 C_d_bool_fun_fun$ ))(=> (and (fun_app$ae (fun_app$bv ?v0 (snd$a ?v1 ))(fst$a ?v1 ))(forall ((?v4 C$ )(?v5 D$ ))(=> (fun_app$ae (fun_app$bv ?v0 ?v5 )?v4 )(fun_app$bn ?v2 (fun_app$ac (fun_app$ag ?v3 ?v4 )?v5 )))))(fun_app$bn ?v2 (fun_app$m (case_prod$a ?v3 )?v1 )))):named a131 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ )(?v1 A_b_prod_c_d_prod_tllist_set$ )(?v2 A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ )(?v3 A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bw (relcompp$j (conversep$j (fun_app$at (grp$a ?v0 )?v2 )))(fun_app$ar (grp$ ?v0 )?v3 ))(fun_app$bw (relcompp$j (conversep$j (fun_app$at (grp$a ?v1 )?v2 )))(fun_app$ar (grp$ ?v1 )?v3 ))))):named a132 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ )(?v1 A_b_prod_c_d_prod_tllist_set$ )(?v2 A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ )(?v3 A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$bx (relcompp$k (conversep$j (fun_app$at (grp$a ?v0 )?v2 )))(fun_app$at (grp$a ?v0 )?v3 ))(fun_app$bx (relcompp$k (conversep$j (fun_app$at (grp$a ?v1 )?v2 )))(fun_app$at (grp$a ?v1 )?v3 ))))):named a133 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ )(?v1 A_b_prod_c_d_prod_tllist_set$ )(?v2 A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ )(?v3 A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$by (relcompp$l (conversep$ (fun_app$ar (grp$ ?v0 )?v2 )))(fun_app$ar (grp$ ?v0 )?v3 ))(fun_app$by (relcompp$l (conversep$ (fun_app$ar (grp$ ?v1 )?v2 )))(fun_app$ar (grp$ ?v1 )?v3 ))))):named a134 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ )(?v1 A_b_prod_c_d_prod_tllist_set$ )(?v2 A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ )(?v3 A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$aq (relcompp$ (conversep$ (fun_app$ar (grp$ ?v0 )?v2 )))(fun_app$at (grp$a ?v0 )?v3 ))(fun_app$aq (relcompp$ (conversep$ (fun_app$ar (grp$ ?v1 )?v2 )))(fun_app$at (grp$a ?v1 )?v3 ))))):named a135 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C_set$ )(?v2 C_d_fun$ )(?v3 C_d_fun$ ))(=> (= ?v0 ?v1 )(= (relcompp$m (conversep$k (grp$t ?v0 ?v2 ))(grp$t ?v0 ?v3 ))(relcompp$m (conversep$k (grp$t ?v1 ?v2 ))(grp$t ?v1 ?v3 ))))):named a136 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ ))(=> (= ?v0 ?v1 )(= (relcompp$n (conversep$l (grp$u ?v0 ?v2 ))(grp$u ?v0 ?v3 ))(relcompp$n (conversep$l (grp$u ?v1 ?v2 ))(grp$u ?v1 ?v3 ))))):named a137 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ ))(=> (= ?v0 ?v1 )(= (relcompp$o (conversep$m (grp$v ?v0 ?v2 ))(grp$v ?v0 ?v3 ))(relcompp$o (conversep$m (grp$v ?v1 ?v2 ))(grp$v ?v1 ?v3 ))))):named a138 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_a_fun$ ))(=> (= ?v0 ?v1 )(= (relcompp$p (conversep$m (grp$v ?v0 ?v2 ))(grp$w ?v0 ?v3 ))(relcompp$p (conversep$m (grp$v ?v1 ?v2 ))(grp$w ?v1 ?v3 ))))):named a139 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod_c_fun$ )(?v3 C_d_prod_c_fun$ ))(=> (= ?v0 ?v1 )(= (relcompp$q (conversep$n (grp$x ?v0 ?v2 ))(grp$x ?v0 ?v3 ))(relcompp$q (conversep$n (grp$x ?v1 ?v2 ))(grp$x ?v1 ?v3 ))))):named a140 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod_c_fun$ )(?v3 C_d_prod_d_fun$ ))(=> (= ?v0 ?v1 )(= (relcompp$r (conversep$n (grp$x ?v0 ?v2 ))(grp$y ?v0 ?v3 ))(relcompp$r (conversep$n (grp$x ?v1 ?v2 ))(grp$y ?v1 ?v3 ))))):named a141 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_set$ )(?v2 A_llist_c_fun$ ))(=> (member$g ?v0 (collect$c (case_prod$c (grp$z ?v1 ?v2 ))))(member$h (fst$c ?v0 )?v1 ))):named a142 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_prod$ )(?v1 A_b_prod_c_d_prod_tllist_set$ )(?v2 A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ ))(=> (member$i ?v0 (collect$n (case_prod$g (fun_app$ar (grp$ ?v1 )?v2 ))))(member$ (fst$d ?v0 )?v1 ))):named a143 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_b_d_tllist_prod$ )(?v1 A_b_prod_c_d_prod_tllist_set$ )(?v2 A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ ))(=> (member$j ?v0 (collect$o (case_prod$h (fun_app$at (grp$a ?v1 )?v2 ))))(member$ (fst$e ?v0 )?v1 ))):named a144 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_set$ )(?v2 A_b_fun$ ))(=> (member$b ?v0 (collect$ (case_prod$ (grp$u ?v1 ?v2 ))))(member$e (fst$ ?v0 )?v1 ))):named a145 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_set$ )(?v2 C_d_fun$ ))(=> (member$a ?v0 (collect$a (case_prod$a (grp$t ?v1 ?v2 ))))(member$f (fst$a ?v0 )?v1 ))):named a146 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_bool_fun_fun$ ))(=> (member$b ?v0 (collect$ (case_prod$ ?v1 )))(fun_app$ah (fun_app$ai ?v1 (fst$ ?v0 ))(snd$ ?v0 )))):named a147 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_bool_fun_fun$ ))(=> (member$a ?v0 (collect$a (case_prod$a ?v1 )))(fun_app$ac (fun_app$ag ?v1 (fst$a ?v0 ))(snd$a ?v0 )))):named a148 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ ))(= (conversep$o (conversep$ ?v0 ))?v0 )):named a149 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ ))(= (conversep$ (conversep$o ?v0 ))?v0 )):named a150 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_c_tllist$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(! (= (fun_app$ (fun_app$bz (conversep$ ?v0 )?v1 )?v2 )(fun_app$br (fun_app$ca ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$bz (conversep$ ?v0 )?v1 )?v2 )))):named a151 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ ))(= (= (conversep$ ?v0 )(conversep$ ?v1 ))(= ?v0 ?v1 ))):named a152 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_c_prod$ ))(= (= (case_prod$e uvb$ ?v0 )(case_prod$e uvb$ ?v1 ))(fun_app$bk (case_prod$f uvd$ ?v0 )?v1 ))):named a153 ))
(assert (! (forall ((?v0 B_llist_d_prod$ )(?v1 B_llist_d_prod$ ))(= (= (case_prod$i uve$ ?v0 )(case_prod$i uve$ ?v1 ))(fun_app$bj (case_prod$d uvg$ ?v0 )?v1 ))):named a154 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ ))(= (relcompp$s (conversep$p (grp$w (collect$ (case_prod$ ?v0 ))uua$ ))(grp$v (collect$ (case_prod$ ?v0 ))uuc$ ))?v0 )):named a155 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ ))(= (relcompp$r (conversep$n (grp$x (collect$a (case_prod$a ?v0 ))uub$ ))(grp$y (collect$a (case_prod$a ?v0 ))uud$ ))?v0 )):named a156 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v2 A_c_tllist_a_c_tllist_tllist$ )(?v3 A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_tllist$ ))(= (fun_app$cb (fun_app$cc (tllist_all2$j (conversep$ ?v0 )(conversep$ ?v1 ))?v2 )?v3 )(fun_app$cd (fun_app$ce (tllist_all2$k ?v0 ?v1 )?v3 )?v2 ))):named a157 ))
(assert (! (forall ((?v0 A_c_tllist_bool_fun$ )(?v1 A_c_tllist$ ))(=> (forall ((?v2 A_llist_c_prod$ ))(fun_app$br ?v0 (case_prod$e uvb$ ?v2 )))(fun_app$br ?v0 ?v1 ))):named a158 ))
(assert (! (forall ((?v0 B_d_tllist_bool_fun$ )(?v1 B_d_tllist$ ))(=> (forall ((?v2 B_llist_d_prod$ ))(fun_app$ao ?v0 (case_prod$i uve$ ?v2 )))(fun_app$ao ?v0 ?v1 ))):named a159 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_c_d_prod_tllist$ )(?v4 A_b_prod_a_b_prod_bool_fun_fun$ )(?v5 C_d_prod_c_d_prod_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$cf (fun_app$cg (tllist_all2$l ?v0 )?v1 )?v2 )?v3 )(and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$b ?v6 (tset$ ?v2 ))(and (member$b ?v7 (tset$ ?v3 ))(fun_app$n (fun_app$ch ?v0 ?v6 )?v7 )))(fun_app$n (fun_app$ch ?v4 ?v6 )?v7 )))(forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$a ?v6 (set2_tllist$ ?v2 ))(and (member$a ?v7 (set2_tllist$ ?v3 ))(fun_app$m (fun_app$ci ?v1 ?v6 )?v7 )))(fun_app$m (fun_app$ci ?v5 ?v6 )?v7 )))))(fun_app$ (fun_app$cf (fun_app$cg (tllist_all2$l ?v4 )?v5 )?v2 )?v3 ))):named a160 ))
(assert (! (forall ((?v0 A_a_b_prod_bool_fun_fun$ )(?v1 A_b_prod_b_bool_fun_fun$ )(?v2 C_c_d_prod_bool_fun_fun$ )(?v3 C_d_prod_d_bool_fun_fun$ ))(= (fun_app$bf (tllist_all2$c (relcompp$s ?v0 ?v1 ))(relcompp$r ?v2 ?v3 ))(fun_app$aq (relcompp$ (fun_app$cj (tllist_all2$m ?v0 )?v2 ))(fun_app$ck (tllist_all2$n ?v1 )?v3 )))):named a161 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )(?v2 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v3 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ ))(= (tllist_all2$o (fun_app$aq (relcompp$ ?v0 )?v1 )(fun_app$aq (relcompp$ ?v2 )?v3 ))(relcompp$t (tllist_all2$j ?v0 ?v2 )(tllist_all2$p ?v1 ?v3 )))):named a162 ))
(assert (! (forall ((?v0 A_b_prod_a_bool_fun_fun$ )(?v1 C_d_prod_c_bool_fun_fun$ ))(= (fun_app$cj (tllist_all2$m (conversep$p ?v0 ))(conversep$n ?v1 ))(conversep$ (fun_app$cl (tllist_all2$q ?v0 )?v1 )))):named a163 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ ))(= (tllist_all2$j (conversep$ ?v0 )(conversep$ ?v1 ))(conversep$q (tllist_all2$k ?v0 ?v1 )))):named a164 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod$ )(?v2 A_b_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$n (case_prod$ ?v2 )?v0 )(fun_app$n (case_prod$ ?v2 )?v1 )))):named a165 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod$ )(?v2 C_d_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$m (case_prod$a ?v2 )?v0 )(fun_app$m (case_prod$a ?v2 )?v1 )))):named a166 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_c_tllist$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )(?v4 B_d_tllist$ ))(=> (and (fun_app$ (fun_app$bz ?v0 ?v1 )?v2 )(fun_app$ao (fun_app$cm ?v3 ?v2 )?v4 ))(fun_app$ao (fun_app$ap (fun_app$aq (relcompp$ ?v0 )?v3 )?v1 )?v4 ))):named a167 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$ao (fun_app$ap (fun_app$aq (relcompp$ ?v0 )?v1 )?v2 )?v3 )(forall ((?v4 A_b_prod_c_d_prod_tllist$ ))(=> (and (fun_app$ (fun_app$bz ?v0 ?v2 )?v4 )(fun_app$ao (fun_app$cm ?v1 ?v4 )?v3 ))false )))false )):named a168 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$ao (fun_app$ap (fun_app$aq (relcompp$ ?v0 )?v1 )?v2 )?v3 )(forall ((?v4 A_c_tllist$ )(?v5 A_b_prod_c_d_prod_tllist$ )(?v6 B_d_tllist$ ))(=> (and (= ?v2 ?v4 )(and (= ?v3 ?v6 )(and (fun_app$ (fun_app$bz ?v0 ?v4 )?v5 )(fun_app$ao (fun_app$cm ?v1 ?v5 )?v6 ))))false )))false )):named a169 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(= (fun_app$ao (fun_app$ap (fun_app$aq (relcompp$ ?v0 )?v1 )?v2 )?v3 )(exists ((?v4 A_c_tllist$ )(?v5 A_b_prod_c_d_prod_tllist$ )(?v6 B_d_tllist$ ))(and (= ?v2 ?v4 )(and (= ?v3 ?v6 )(and (fun_app$ (fun_app$bz ?v0 ?v4 )?v5 )(fun_app$ao (fun_app$cm ?v1 ?v5 )?v6 ))))))):named a170 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(= (fun_app$ao (fun_app$ap (fun_app$aq (relcompp$ ?v0 )?v1 )?v2 )?v3 )(exists ((?v4 A_b_prod_c_d_prod_tllist$ ))(and (fun_app$ (fun_app$bz ?v0 ?v2 )?v4 )(fun_app$ao (fun_app$cm ?v1 ?v4 )?v3 ))))):named a171 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )(?v2 B_d_tllist_b_d_tllist_bool_fun_fun$ ))(= (fun_app$cn (relcompp$u (fun_app$aq (relcompp$ ?v0 )?v1 ))?v2 )(fun_app$aq (relcompp$ ?v0 )(fun_app$co (relcompp$v ?v1 )?v2 )))):named a172 ))
(assert (! (forall ((?v0 A_c_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ ))(= (fun_app$aq (relcompp$ (fun_app$cp (relcompp$w ?v0 )?v1 ))?v2 )(fun_app$cq (relcompp$x ?v0 )(fun_app$aq (relcompp$ ?v1 )?v2 )))):named a173 ))
(assert (! (forall ((?v0 A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ ))(= (fun_app$aq (relcompp$ (fun_app$cr (relcompp$y ?v0 )?v1 ))?v2 )(fun_app$aq (relcompp$ ?v0 )(fun_app$cs (relcompp$z ?v1 )?v2 )))):named a174 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_c_tllist$ ))(=> (fun_app$br (fun_app$ca ?v0 ?v1 )?v2 )(fun_app$ (fun_app$bz (conversep$ ?v0 )?v2 )?v1 ))):named a175 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_c_tllist$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(=> (fun_app$ (fun_app$bz (conversep$ ?v0 )?v1 )?v2 )(fun_app$br (fun_app$ca ?v0 ?v2 )?v1 ))):named a176 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_bool_fun$ )(?v1 A_b_prod_c_d_prod_tllist_bool_fun$ ))(=> (forall ((?v2 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$ ?v0 ?v2 )(fun_app$ ?v1 ?v2 )))(= (collect$d ?v0 )(collect$d ?v1 )))):named a177 ))
(assert (! (forall ((?v0 A_b_prod_bool_fun$ )(?v1 A_b_prod_bool_fun$ ))(=> (forall ((?v2 A_b_prod$ ))(= (fun_app$n ?v0 ?v2 )(fun_app$n ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a178 ))
(assert (! (forall ((?v0 C_d_prod_bool_fun$ )(?v1 C_d_prod_bool_fun$ ))(=> (forall ((?v2 C_d_prod$ ))(= (fun_app$m ?v0 ?v2 )(fun_app$m ?v1 ?v2 )))(= (collect$a ?v0 )(collect$a ?v1 )))):named a179 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ ))(= (collect$d (uvh$ ?v0 ))?v0 )):named a180 ))
(assert (! (forall ((?v0 A_b_prod_set$ ))(= (collect$ (uvi$ ?v0 ))?v0 )):named a181 ))
(assert (! (forall ((?v0 C_d_prod_set$ ))(= (collect$a (uvj$ ?v0 ))?v0 )):named a182 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist_bool_fun$ ))(= (member$ ?v0 (collect$d ?v1 ))(fun_app$ ?v1 ?v0 ))):named a183 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_bool_fun$ ))(= (member$b ?v0 (collect$ ?v1 ))(fun_app$n ?v1 ?v0 ))):named a184 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod_bool_fun$ ))(= (member$a ?v0 (collect$a ?v1 ))(fun_app$m ?v1 ?v0 ))):named a185 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_c_tllist$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(=> (and (fun_app$ (fun_app$bz (conversep$ ?v0 )?v1 )?v2 )(forall ((?v3 A_b_prod_c_d_prod_tllist$ )(?v4 A_c_tllist$ ))(=> (and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$br (fun_app$ca ?v0 ?v3 )?v4 )))false )))false )):named a186 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )(?v1 A_c_tllist$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$ (fun_app$bz (conversep$ ?v0 )?v1 )?v2 )(exists ((?v3 A_b_prod_c_d_prod_tllist$ )(?v4 A_c_tllist$ ))(and (= ?v1 ?v4 )(and (= ?v2 ?v3 )(fun_app$br (fun_app$ca ?v0 ?v3 )?v4 )))))):named a187 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_a_c_tllist_fun$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_c_tllist$ )(?v3 A_b_prod_c_d_prod_tllist_set$ ))(=> (and (= (fun_app$az ?v0 ?v1 )?v2 )(member$ ?v1 ?v3 ))(fun_app$br (fun_app$ca (fun_app$ar (grp$ ?v3 )?v0 )?v1 )?v2 ))):named a188 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_b_d_tllist_fun$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 B_d_tllist$ )(?v3 A_b_prod_c_d_prod_tllist_set$ ))(=> (and (= (fun_app$ba ?v0 ?v1 )?v2 )(member$ ?v1 ?v3 ))(fun_app$ao (fun_app$cm (fun_app$at (grp$a ?v3 )?v0 )?v1 )?v2 ))):named a189 ))
(check-sat )
;(get-unsat-core )
