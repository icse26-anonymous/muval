;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort E$ 0 )
(declare-sort F$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort A_e_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_e_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort C_f_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort D_f_fun$ 0 )
(declare-sort E_a_fun$ 0 )
(declare-sort E_b_fun$ 0 )
(declare-sort E_e_fun$ 0 )
(declare-sort F_c_fun$ 0 )
(declare-sort F_d_fun$ 0 )
(declare-sort F_f_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort E_bool_fun$ 0 )
(declare-sort F_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_e_bool_fun_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_e_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort C_f_bool_fun_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort D_f_bool_fun_fun$ 0 )
(declare-sort E_a_bool_fun_fun$ 0 )
(declare-sort E_b_bool_fun_fun$ 0 )
(declare-sort E_e_bool_fun_fun$ 0 )
(declare-sort F_c_bool_fun_fun$ 0 )
(declare-sort F_d_bool_fun_fun$ 0 )
(declare-sort F_f_bool_fun_fun$ 0 )
(declare-sort A_c_tllist$ 0)
(declare-sort B_d_tllist$ 0)
(declare-sort E_f_tllist$ 0)
(declare-fun terminal$ (A_c_tllist$)C$)
(declare-fun tNil$ (C$ )A_c_tllist$)
(declare-fun thd$ (A_c_tllist$)A$)
(declare-fun ttl$ (A_c_tllist$)A_c_tllist$)
(declare-fun tCons$ (A$ A_c_tllist$ )A_c_tllist$)
(declare-fun terminal$a (B_d_tllist$)D$)
(declare-fun tNil$a (D$ )B_d_tllist$)
(declare-fun thd$a (B_d_tllist$)B$)
(declare-fun ttl$a (B_d_tllist$)B_d_tllist$)
(declare-fun tCons$a (B$ B_d_tllist$ )B_d_tllist$)
(declare-fun terminal$b (E_f_tllist$)F$)
(declare-fun tNil$b (F$ )E_f_tllist$)
(declare-fun thd$b (E_f_tllist$)E$)
(declare-fun ttl$b (E_f_tllist$)E_f_tllist$)
(declare-fun tCons$b (E$ E_f_tllist$ )E_f_tllist$)
(declare-fun f$ ()E_b_fun$ )
(declare-fun g$ ()F_d_fun$ )
(declare-fun p$ ()A_b_bool_fun_fun$ )
(declare-fun q$ ()C_d_bool_fun_fun$ )
(declare-fun uu$ ()A_e_bool_fun_fun$ )
(declare-fun xs$ ()A_c_tllist$ )
(declare-fun ys$ ()E_f_tllist$ )
(declare-fun uua$ ()C_f_bool_fun_fun$ )
(declare-fun uub$ (B_a_bool_fun_fun$ E_b_fun$ )E_a_bool_fun_fun$ )
(declare-fun uuc$ (D_c_bool_fun_fun$ F_d_fun$ )F_c_bool_fun_fun$ )
(declare-fun uud$ (B_a_bool_fun_fun$ B_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun uue$ (D_c_bool_fun_fun$ D_d_fun$ )D_c_bool_fun_fun$ )
(declare-fun uuf$ (B_a_bool_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun uug$ (D_c_bool_fun_fun$ C_d_fun$ )C_c_bool_fun_fun$ )
(declare-fun uuh$ (A_a_bool_fun_fun$ E_a_fun$ )E_a_bool_fun_fun$ )
(declare-fun uui$ (C_c_bool_fun_fun$ F_c_fun$ )F_c_bool_fun_fun$ )
(declare-fun uuj$ (A_a_bool_fun_fun$ B_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uuk$ (C_c_bool_fun_fun$ D_c_fun$ )D_c_bool_fun_fun$ )
(declare-fun uul$ (A_a_bool_fun_fun$ A_a_fun$ )A_a_bool_fun_fun$ )
(declare-fun uum$ (C_c_bool_fun_fun$ C_c_fun$ )C_c_bool_fun_fun$ )
(declare-fun uun$ (A_b_bool_fun_fun$ A_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuo$ (C_d_bool_fun_fun$ C_c_fun$ )C_d_bool_fun_fun$ )
(declare-fun uup$ (A_e_bool_fun_fun$ A_a_fun$ )A_e_bool_fun_fun$ )
(declare-fun uuq$ (C_f_bool_fun_fun$ C_c_fun$ )C_f_bool_fun_fun$ )
(declare-fun uur$ (A_b_bool_fun_fun$ B_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uus$ (C_d_bool_fun_fun$ D_d_fun$ )C_d_bool_fun_fun$ )
(declare-fun uut$ (A_b_bool_fun_fun$ E_b_fun$ )A_e_bool_fun_fun$ )
(declare-fun uuu$ (C_d_bool_fun_fun$ F_d_fun$ )C_f_bool_fun_fun$ )
(declare-fun uuv$ (A_e_bool_fun_fun$ B_e_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuw$ (C_f_bool_fun_fun$ D_f_fun$ )C_d_bool_fun_fun$ )
(declare-fun uux$ (A_e_bool_fun_fun$ E_e_fun$ )A_e_bool_fun_fun$ )
(declare-fun uuy$ (C_f_bool_fun_fun$ F_f_fun$ )C_f_bool_fun_fun$ )
(declare-fun uuz$ ()A_a_fun$ )
(declare-fun uva$ ()C_c_fun$ )
(declare-fun uvb$ ()E_e_fun$ )
(declare-fun uvc$ ()F_f_fun$ )
(declare-fun uvd$ ()B_b_fun$ )
(declare-fun uve$ ()D_d_fun$ )
(declare-fun tmap$ (E_b_fun$ F_d_fun$ E_f_tllist$ )B_d_tllist$ )
(declare-fun tmap$a (B_b_fun$ D_d_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun tmap$b (A_b_fun$ C_d_fun$ A_c_tllist$ )B_d_tllist$ )
(declare-fun tmap$c (E_a_fun$ F_c_fun$ E_f_tllist$ )A_c_tllist$ )
(declare-fun tmap$d (B_a_fun$ D_c_fun$ B_d_tllist$ )A_c_tllist$ )
(declare-fun tmap$e (A_a_fun$ C_c_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tmap$f (B_e_fun$ D_f_fun$ B_d_tllist$ )E_f_tllist$ )
(declare-fun tmap$g (E_e_fun$ F_f_fun$ E_f_tllist$ )E_f_tllist$ )
(declare-fun tmap$h (A_e_fun$ C_f_fun$ A_c_tllist$ )E_f_tllist$ )
(declare-fun fun_app$ (F_bool_fun$ F$ )Bool )
(declare-fun is_TNil$ (A_c_tllist$ )Bool )
(declare-fun fun_app$a (C_f_bool_fun_fun$ C$ )F_bool_fun$ )
(declare-fun fun_app$b (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$c (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$d (F_d_fun$ F$ )D$ )
(declare-fun fun_app$e (E_bool_fun$ E$ )Bool )
(declare-fun fun_app$f (A_e_bool_fun_fun$ A$ )E_bool_fun$ )
(declare-fun fun_app$g (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$h (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$i (E_b_fun$ E$ )B$ )
(declare-fun fun_app$j (F_c_bool_fun_fun$ F$ )C_bool_fun$ )
(declare-fun fun_app$k (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$l (D_d_fun$ D$ )D$ )
(declare-fun fun_app$m (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$n (C_d_fun$ C$ )D$ )
(declare-fun fun_app$o (C_c_fun$ C$ )C$ )
(declare-fun fun_app$p (F_c_fun$ F$ )C$ )
(declare-fun fun_app$q (D_c_fun$ D$ )C$ )
(declare-fun fun_app$r (E_a_bool_fun_fun$ E$ )A_bool_fun$ )
(declare-fun fun_app$s (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$t (B_b_fun$ B$ )B$ )
(declare-fun fun_app$u (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$v (A_b_fun$ A$ )B$ )
(declare-fun fun_app$w (A_a_fun$ A$ )A$ )
(declare-fun fun_app$x (E_a_fun$ E$ )A$ )
(declare-fun fun_app$y (B_a_fun$ B$ )A$ )
(declare-fun fun_app$z (F_f_fun$ F$ )F$ )
(declare-fun is_TNil$a (B_d_tllist$ )Bool )
(declare-fun is_TNil$b (E_f_tllist$ )Bool )
(declare-fun fun_app$aa (D_f_fun$ D$ )F$ )
(declare-fun fun_app$ab (E_e_fun$ E$ )E$ )
(declare-fun fun_app$ac (B_e_fun$ B$ )E$ )
(declare-fun fun_app$ad (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$ae (E_e_bool_fun_fun$ E$ )E_bool_fun$ )
(declare-fun fun_app$af (E_b_bool_fun_fun$ E$ )B_bool_fun$ )
(declare-fun fun_app$ag (B_e_bool_fun_fun$ B$ )E_bool_fun$ )
(declare-fun fun_app$ah (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$ai (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$aj (F_f_bool_fun_fun$ F$ )F_bool_fun$ )
(declare-fun fun_app$ak (F_d_bool_fun_fun$ F$ )D_bool_fun$ )
(declare-fun fun_app$al (D_f_bool_fun_fun$ D$ )F_bool_fun$ )
(declare-fun fun_app$am (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$an (A_e_fun$ A$ )E$ )
(declare-fun fun_app$ao (C_f_fun$ C$ )F$ )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$a (A_e_bool_fun_fun$ C_f_bool_fun_fun$ A_c_tllist$ E_f_tllist$ )Bool )
(declare-fun tllist_all2$b (B_a_bool_fun_fun$ D_c_bool_fun_fun$ B_d_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$c (E_a_bool_fun_fun$ F_c_bool_fun_fun$ E_f_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$d (A_a_bool_fun_fun$ C_c_bool_fun_fun$ A_c_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$e (E_e_bool_fun_fun$ F_f_bool_fun_fun$ E_f_tllist$ E_f_tllist$ )Bool )
(declare-fun tllist_all2$f (E_b_bool_fun_fun$ F_d_bool_fun_fun$ E_f_tllist$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$g (B_e_bool_fun_fun$ D_f_bool_fun_fun$ B_d_tllist$ E_f_tllist$ )Bool )
(declare-fun tllist_all2$h (B_b_bool_fun_fun$ D_d_bool_fun_fun$ B_d_tllist$ B_d_tllist$ )Bool )
(assert (! (forall ((?v0 C$ )(?v1 F$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(fun_app$b (fun_app$c q$ ?v0 )(fun_app$d g$ ?v1 ))):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 E$ ))(! (= (fun_app$e (fun_app$f uu$ ?v0 )?v1 )(fun_app$g (fun_app$h p$ ?v0 )(fun_app$i f$ ?v1 ))):pattern ((fun_app$e (fun_app$f uu$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 F_d_fun$ )(?v2 F$ ))(! (= (fun_app$j (uuc$ ?v0 ?v1 )?v2 )(fun_app$k ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$j (uuc$ ?v0 ?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (fun_app$k (uue$ ?v0 ?v1 )?v2 )(fun_app$k ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$k (uue$ ?v0 ?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C_d_fun$ )(?v2 C$ ))(! (= (fun_app$m (uug$ ?v0 ?v1 )?v2 )(fun_app$k ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$m (uug$ ?v0 ?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 C_f_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$a (uuq$ ?v0 ?v1 )?v2 )(fun_app$a ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$a (uuq$ ?v0 ?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$c (uuo$ ?v0 ?v1 )?v2 )(fun_app$c ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$c (uuo$ ?v0 ?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 F_c_fun$ )(?v2 F$ ))(! (= (fun_app$j (uui$ ?v0 ?v1 )?v2 )(fun_app$m ?v0 (fun_app$p ?v1 ?v2 ))):pattern ((fun_app$j (uui$ ?v0 ?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_c_fun$ )(?v2 D$ ))(! (= (fun_app$k (uuk$ ?v0 ?v1 )?v2 )(fun_app$m ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$k (uuk$ ?v0 ?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$m (uum$ ?v0 ?v1 )?v2 )(fun_app$m ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$m (uum$ ?v0 ?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 E_b_fun$ )(?v2 E$ ))(! (= (fun_app$r (uub$ ?v0 ?v1 )?v2 )(fun_app$s ?v0 (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$r (uub$ ?v0 ?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$s (uud$ ?v0 ?v1 )?v2 )(fun_app$s ?v0 (fun_app$t ?v1 ?v2 ))):pattern ((fun_app$s (uud$ ?v0 ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$u (uuf$ ?v0 ?v1 )?v2 )(fun_app$s ?v0 (fun_app$v ?v1 ?v2 ))):pattern ((fun_app$u (uuf$ ?v0 ?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$f (uup$ ?v0 ?v1 )?v2 )(fun_app$f ?v0 (fun_app$w ?v1 ?v2 ))):pattern ((fun_app$f (uup$ ?v0 ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$h (uun$ ?v0 ?v1 )?v2 )(fun_app$h ?v0 (fun_app$w ?v1 ?v2 ))):pattern ((fun_app$h (uun$ ?v0 ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_a_fun$ )(?v2 E$ ))(! (= (fun_app$r (uuh$ ?v0 ?v1 )?v2 )(fun_app$u ?v0 (fun_app$x ?v1 ?v2 ))):pattern ((fun_app$r (uuh$ ?v0 ?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$s (uuj$ ?v0 ?v1 )?v2 )(fun_app$u ?v0 (fun_app$y ?v1 ?v2 ))):pattern ((fun_app$s (uuj$ ?v0 ?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$u (uul$ ?v0 ?v1 )?v2 )(fun_app$u ?v0 (fun_app$w ?v1 ?v2 ))):pattern ((fun_app$u (uul$ ?v0 ?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 C_f_bool_fun_fun$ )(?v1 F_f_fun$ )(?v2 C$ )(?v3 F$ ))(! (= (fun_app$ (fun_app$a (uuy$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$a ?v0 ?v2 )(fun_app$z ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uuy$ ?v0 ?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 C_f_bool_fun_fun$ )(?v1 D_f_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$b (fun_app$c (uuw$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$a ?v0 ?v2 )(fun_app$aa ?v1 ?v3 ))):pattern ((fun_app$b (fun_app$c (uuw$ ?v0 ?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 F_d_fun$ )(?v2 C$ )(?v3 F$ ))(! (= (fun_app$ (fun_app$a (uuu$ ?v0 ?v1 )?v2 )?v3 )(fun_app$b (fun_app$c ?v0 ?v2 )(fun_app$d ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uuu$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D_d_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$b (fun_app$c (uus$ ?v0 ?v1 )?v2 )?v3 )(fun_app$b (fun_app$c ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$b (fun_app$c (uus$ ?v0 ?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 E_e_fun$ )(?v2 A$ )(?v3 E$ ))(! (= (fun_app$e (fun_app$f (uux$ ?v0 ?v1 )?v2 )?v3 )(fun_app$e (fun_app$f ?v0 ?v2 )(fun_app$ab ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$f (uux$ ?v0 ?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 B_e_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$g (fun_app$h (uuv$ ?v0 ?v1 )?v2 )?v3 )(fun_app$e (fun_app$f ?v0 ?v2 )(fun_app$ac ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uuv$ ?v0 ?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_b_fun$ )(?v2 A$ )(?v3 E$ ))(! (= (fun_app$e (fun_app$f (uut$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$h ?v0 ?v2 )(fun_app$i ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$f (uut$ ?v0 ?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$g (fun_app$h (uur$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$h ?v0 ?v2 )(fun_app$t ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uur$ ?v0 ?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (forall ((?v0 F$ ))(! (= (fun_app$z uvc$ ?v0 )?v0 ):pattern ((fun_app$z uvc$ ?v0 )))):named a26 ))
(assert (! (forall ((?v0 E$ ))(! (= (fun_app$ab uvb$ ?v0 )?v0 ):pattern ((fun_app$ab uvb$ ?v0 )))):named a27 ))
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$l uve$ ?v0 )?v0 ):pattern ((fun_app$l uve$ ?v0 )))):named a28 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$o uva$ ?v0 )?v0 ):pattern ((fun_app$o uva$ ?v0 )))):named a29 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$t uvd$ ?v0 )?v0 ):pattern ((fun_app$t uvd$ ?v0 )))):named a30 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$w uuz$ ?v0 )?v0 ):pattern ((fun_app$w uuz$ ?v0 )))):named a31 ))
(assert (! (not (= (tllist_all2$ p$ q$ xs$ (tmap$ f$ g$ ys$ ))(tllist_all2$a uu$ uua$ xs$ ys$ ))):named a32 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 E_b_fun$ )(?v3 F_d_fun$ )(?v4 E_f_tllist$ )(?v5 A_c_tllist$ ))(= (tllist_all2$b ?v0 ?v1 (tmap$ ?v2 ?v3 ?v4 )?v5 )(tllist_all2$c (uub$ ?v0 ?v2 )(uuc$ ?v1 ?v3 )?v4 ?v5 ))):named a33 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 B_d_tllist$ )(?v5 A_c_tllist$ ))(= (tllist_all2$b ?v0 ?v1 (tmap$a ?v2 ?v3 ?v4 )?v5 )(tllist_all2$b (uud$ ?v0 ?v2 )(uue$ ?v1 ?v3 )?v4 ?v5 ))):named a34 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 A_c_tllist$ )(?v5 A_c_tllist$ ))(= (tllist_all2$b ?v0 ?v1 (tmap$b ?v2 ?v3 ?v4 )?v5 )(tllist_all2$d (uuf$ ?v0 ?v2 )(uug$ ?v1 ?v3 )?v4 ?v5 ))):named a35 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 E_a_fun$ )(?v3 F_c_fun$ )(?v4 E_f_tllist$ )(?v5 A_c_tllist$ ))(= (tllist_all2$d ?v0 ?v1 (tmap$c ?v2 ?v3 ?v4 )?v5 )(tllist_all2$c (uuh$ ?v0 ?v2 )(uui$ ?v1 ?v3 )?v4 ?v5 ))):named a36 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 B_a_fun$ )(?v3 D_c_fun$ )(?v4 B_d_tllist$ )(?v5 A_c_tllist$ ))(= (tllist_all2$d ?v0 ?v1 (tmap$d ?v2 ?v3 ?v4 )?v5 )(tllist_all2$b (uuj$ ?v0 ?v2 )(uuk$ ?v1 ?v3 )?v4 ?v5 ))):named a37 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A_c_tllist$ )(?v5 A_c_tllist$ ))(= (tllist_all2$d ?v0 ?v1 (tmap$e ?v2 ?v3 ?v4 )?v5 )(tllist_all2$d (uul$ ?v0 ?v2 )(uum$ ?v1 ?v3 )?v4 ?v5 ))):named a38 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A_c_tllist$ )(?v5 B_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tmap$e ?v2 ?v3 ?v4 )?v5 )(tllist_all2$ (uun$ ?v0 ?v2 )(uuo$ ?v1 ?v3 )?v4 ?v5 ))):named a39 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A_c_tllist$ )(?v5 E_f_tllist$ ))(= (tllist_all2$a ?v0 ?v1 (tmap$e ?v2 ?v3 ?v4 )?v5 )(tllist_all2$a (uup$ ?v0 ?v2 )(uuq$ ?v1 ?v3 )?v4 ?v5 ))):named a40 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A_c_tllist$ )(?v5 B_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tmap$e ?v2 ?v3 ?v4 )?v5 )(tllist_all2$ (uun$ ?v0 ?v2 )(uuo$ ?v1 ?v3 )?v4 ?v5 ))):named a41 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A_c_tllist$ )(?v5 E_f_tllist$ ))(= (tllist_all2$a ?v0 ?v1 (tmap$e ?v2 ?v3 ?v4 )?v5 )(tllist_all2$a (uup$ ?v0 ?v2 )(uuq$ ?v1 ?v3 )?v4 ?v5 ))):named a42 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 B_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tmap$a ?v3 ?v4 ?v5 ))(tllist_all2$ (uur$ ?v0 ?v3 )(uus$ ?v1 ?v4 )?v2 ?v5 ))):named a43 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 E_b_fun$ )(?v4 F_d_fun$ )(?v5 E_f_tllist$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tmap$ ?v3 ?v4 ?v5 ))(tllist_all2$a (uut$ ?v0 ?v3 )(uuu$ ?v1 ?v4 )?v2 ?v5 ))):named a44 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_e_fun$ )(?v4 D_f_fun$ )(?v5 B_d_tllist$ ))(= (tllist_all2$a ?v0 ?v1 ?v2 (tmap$f ?v3 ?v4 ?v5 ))(tllist_all2$ (uuv$ ?v0 ?v3 )(uuw$ ?v1 ?v4 )?v2 ?v5 ))):named a45 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 E_e_fun$ )(?v4 F_f_fun$ )(?v5 E_f_tllist$ ))(= (tllist_all2$a ?v0 ?v1 ?v2 (tmap$g ?v3 ?v4 ?v5 ))(tllist_all2$a (uux$ ?v0 ?v3 )(uuy$ ?v1 ?v4 )?v2 ?v5 ))):named a46 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(= (tmap$e uuz$ uva$ ?v0 )?v0 )):named a47 ))
(assert (! (forall ((?v0 E_f_tllist$ ))(= (tmap$g uvb$ uvc$ ?v0 )?v0 )):named a48 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(= (tmap$a uvd$ uve$ ?v0 )?v0 )):named a49 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 A_c_tllist$ ))(= (ttl$ (tmap$e ?v0 ?v1 ?v2 ))(tmap$e ?v0 ?v1 (ttl$ ?v2 )))):named a50 ))
(assert (! (forall ((?v0 E_e_fun$ )(?v1 F_f_fun$ )(?v2 E_f_tllist$ ))(= (ttl$b (tmap$g ?v0 ?v1 ?v2 ))(tmap$g ?v0 ?v1 (ttl$b ?v2 )))):named a51 ))
(assert (! (forall ((?v0 B_e_fun$ )(?v1 D_f_fun$ )(?v2 B_d_tllist$ ))(= (ttl$b (tmap$f ?v0 ?v1 ?v2 ))(tmap$f ?v0 ?v1 (ttl$a ?v2 )))):named a52 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 B_d_tllist$ ))(= (ttl$a (tmap$a ?v0 ?v1 ?v2 ))(tmap$a ?v0 ?v1 (ttl$a ?v2 )))):named a53 ))
(assert (! (forall ((?v0 E_b_fun$ )(?v1 F_d_fun$ )(?v2 E_f_tllist$ ))(= (ttl$a (tmap$ ?v0 ?v1 ?v2 ))(tmap$ ?v0 ?v1 (ttl$b ?v2 )))):named a54 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (tllist_all2$d ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$ ?v4 ?v5 ))(and (fun_app$ad (fun_app$u ?v0 ?v2 )?v4 )(tllist_all2$d ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$d ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$ ?v4 ?v5 ))))):named a55 ))
(assert (! (forall ((?v0 E_a_bool_fun_fun$ )(?v1 F_c_bool_fun_fun$ )(?v2 E$ )(?v3 E_f_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (tllist_all2$c ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$ ?v4 ?v5 ))(and (fun_app$ad (fun_app$r ?v0 ?v2 )?v4 )(tllist_all2$c ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$c ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$ ?v4 ?v5 ))))):named a56 ))
(assert (! (forall ((?v0 E_e_bool_fun_fun$ )(?v1 F_f_bool_fun_fun$ )(?v2 E$ )(?v3 E_f_tllist$ )(?v4 E$ )(?v5 E_f_tllist$ ))(! (= (tllist_all2$e ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$b ?v4 ?v5 ))(and (fun_app$e (fun_app$ae ?v0 ?v2 )?v4 )(tllist_all2$e ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$e ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$b ?v4 ?v5 ))))):named a57 ))
(assert (! (forall ((?v0 E_b_bool_fun_fun$ )(?v1 F_d_bool_fun_fun$ )(?v2 E$ )(?v3 E_f_tllist$ )(?v4 B$ )(?v5 B_d_tllist$ ))(! (= (tllist_all2$f ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$a ?v4 ?v5 ))(and (fun_app$g (fun_app$af ?v0 ?v2 )?v4 )(tllist_all2$f ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$f ?v0 ?v1 (tCons$b ?v2 ?v3 )(tCons$a ?v4 ?v5 ))))):named a58 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (tllist_all2$b ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))(and (fun_app$ad (fun_app$s ?v0 ?v2 )?v4 )(tllist_all2$b ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$b ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))))):named a59 ))
(assert (! (forall ((?v0 B_e_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 E$ )(?v5 E_f_tllist$ ))(! (= (tllist_all2$g ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$b ?v4 ?v5 ))(and (fun_app$e (fun_app$ag ?v0 ?v2 )?v4 )(tllist_all2$g ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$g ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$b ?v4 ?v5 ))))):named a60 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 B$ )(?v5 B_d_tllist$ ))(! (= (tllist_all2$h ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$a ?v4 ?v5 ))(and (fun_app$g (fun_app$ah ?v0 ?v2 )?v4 )(tllist_all2$h ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$h ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$a ?v4 ?v5 ))))):named a61 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 B$ )(?v5 B_d_tllist$ ))(! (= (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))(and (fun_app$g (fun_app$h ?v0 ?v2 )?v4 )(tllist_all2$ ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))))):named a62 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 E$ )(?v5 E_f_tllist$ ))(! (= (tllist_all2$a ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$b ?v4 ?v5 ))(and (fun_app$e (fun_app$f ?v0 ?v2 )?v4 )(tllist_all2$a ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$a ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$b ?v4 ?v5 ))))):named a63 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (tllist_all2$d ?v0 ?v1 (tNil$ ?v2 )(tNil$ ?v3 ))(fun_app$ai (fun_app$m ?v1 ?v2 )?v3 )):pattern ((tllist_all2$d ?v0 ?v1 (tNil$ ?v2 )(tNil$ ?v3 ))))):named a64 ))
(assert (! (forall ((?v0 E_a_bool_fun_fun$ )(?v1 F_c_bool_fun_fun$ )(?v2 F$ )(?v3 C$ ))(! (= (tllist_all2$c ?v0 ?v1 (tNil$b ?v2 )(tNil$ ?v3 ))(fun_app$ai (fun_app$j ?v1 ?v2 )?v3 )):pattern ((tllist_all2$c ?v0 ?v1 (tNil$b ?v2 )(tNil$ ?v3 ))))):named a65 ))
(assert (! (forall ((?v0 E_e_bool_fun_fun$ )(?v1 F_f_bool_fun_fun$ )(?v2 F$ )(?v3 F$ ))(! (= (tllist_all2$e ?v0 ?v1 (tNil$b ?v2 )(tNil$b ?v3 ))(fun_app$ (fun_app$aj ?v1 ?v2 )?v3 )):pattern ((tllist_all2$e ?v0 ?v1 (tNil$b ?v2 )(tNil$b ?v3 ))))):named a66 ))
(assert (! (forall ((?v0 E_b_bool_fun_fun$ )(?v1 F_d_bool_fun_fun$ )(?v2 F$ )(?v3 D$ ))(! (= (tllist_all2$f ?v0 ?v1 (tNil$b ?v2 )(tNil$a ?v3 ))(fun_app$b (fun_app$ak ?v1 ?v2 )?v3 )):pattern ((tllist_all2$f ?v0 ?v1 (tNil$b ?v2 )(tNil$a ?v3 ))))):named a67 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 C$ ))(! (= (tllist_all2$b ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))(fun_app$ai (fun_app$k ?v1 ?v2 )?v3 )):pattern ((tllist_all2$b ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))))):named a68 ))
(assert (! (forall ((?v0 B_e_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 D$ )(?v3 F$ ))(! (= (tllist_all2$g ?v0 ?v1 (tNil$a ?v2 )(tNil$b ?v3 ))(fun_app$ (fun_app$al ?v1 ?v2 )?v3 )):pattern ((tllist_all2$g ?v0 ?v1 (tNil$a ?v2 )(tNil$b ?v3 ))))):named a69 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (tllist_all2$h ?v0 ?v1 (tNil$a ?v2 )(tNil$a ?v3 ))(fun_app$b (fun_app$am ?v1 ?v2 )?v3 )):pattern ((tllist_all2$h ?v0 ?v1 (tNil$a ?v2 )(tNil$a ?v3 ))))):named a70 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))(fun_app$b (fun_app$c ?v1 ?v2 )?v3 )):pattern ((tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))))):named a71 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 C$ )(?v3 F$ ))(! (= (tllist_all2$a ?v0 ?v1 (tNil$ ?v2 )(tNil$b ?v3 ))(fun_app$ (fun_app$a ?v1 ?v2 )?v3 )):pattern ((tllist_all2$a ?v0 ?v1 (tNil$ ?v2 )(tNil$b ?v3 ))))):named a72 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 A_c_tllist$ ))(= (is_TNil$ (tmap$e ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a73 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 B_d_tllist$ ))(= (is_TNil$a (tmap$a ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a74 ))
(assert (! (forall ((?v0 B_e_fun$ )(?v1 D_f_fun$ )(?v2 B_d_tllist$ ))(= (is_TNil$b (tmap$f ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a75 ))
(assert (! (forall ((?v0 E_e_fun$ )(?v1 F_f_fun$ )(?v2 E_f_tllist$ ))(= (is_TNil$b (tmap$g ?v0 ?v1 ?v2 ))(is_TNil$b ?v2 ))):named a76 ))
(assert (! (forall ((?v0 E_b_fun$ )(?v1 F_d_fun$ )(?v2 E_f_tllist$ ))(= (is_TNil$a (tmap$ ?v0 ?v1 ?v2 ))(is_TNil$b ?v2 ))):named a77 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (tmap$e ?v0 ?v1 (tCons$ ?v2 ?v3 ))(tCons$ (fun_app$w ?v0 ?v2 )(tmap$e ?v0 ?v1 ?v3 ))):pattern ((tmap$e ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a78 ))
(assert (! (forall ((?v0 A_e_fun$ )(?v1 C_f_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (tmap$h ?v0 ?v1 (tCons$ ?v2 ?v3 ))(tCons$b (fun_app$an ?v0 ?v2 )(tmap$h ?v0 ?v1 ?v3 ))):pattern ((tmap$h ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a79 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 C_d_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (tmap$b ?v0 ?v1 (tCons$ ?v2 ?v3 ))(tCons$a (fun_app$v ?v0 ?v2 )(tmap$b ?v0 ?v1 ?v3 ))):pattern ((tmap$b ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a80 ))
(assert (! (forall ((?v0 E_a_fun$ )(?v1 F_c_fun$ )(?v2 E$ )(?v3 E_f_tllist$ ))(! (= (tmap$c ?v0 ?v1 (tCons$b ?v2 ?v3 ))(tCons$ (fun_app$x ?v0 ?v2 )(tmap$c ?v0 ?v1 ?v3 ))):pattern ((tmap$c ?v0 ?v1 (tCons$b ?v2 ?v3 ))))):named a81 ))
(assert (! (forall ((?v0 E_e_fun$ )(?v1 F_f_fun$ )(?v2 E$ )(?v3 E_f_tllist$ ))(! (= (tmap$g ?v0 ?v1 (tCons$b ?v2 ?v3 ))(tCons$b (fun_app$ab ?v0 ?v2 )(tmap$g ?v0 ?v1 ?v3 ))):pattern ((tmap$g ?v0 ?v1 (tCons$b ?v2 ?v3 ))))):named a82 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 B$ )(?v3 B_d_tllist$ ))(! (= (tmap$d ?v0 ?v1 (tCons$a ?v2 ?v3 ))(tCons$ (fun_app$y ?v0 ?v2 )(tmap$d ?v0 ?v1 ?v3 ))):pattern ((tmap$d ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a83 ))
(assert (! (forall ((?v0 B_e_fun$ )(?v1 D_f_fun$ )(?v2 B$ )(?v3 B_d_tllist$ ))(! (= (tmap$f ?v0 ?v1 (tCons$a ?v2 ?v3 ))(tCons$b (fun_app$ac ?v0 ?v2 )(tmap$f ?v0 ?v1 ?v3 ))):pattern ((tmap$f ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a84 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 B$ )(?v3 B_d_tllist$ ))(! (= (tmap$a ?v0 ?v1 (tCons$a ?v2 ?v3 ))(tCons$a (fun_app$t ?v0 ?v2 )(tmap$a ?v0 ?v1 ?v3 ))):pattern ((tmap$a ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a85 ))
(assert (! (forall ((?v0 E_b_fun$ )(?v1 F_d_fun$ )(?v2 E$ )(?v3 E_f_tllist$ ))(! (= (tmap$ ?v0 ?v1 (tCons$b ?v2 ?v3 ))(tCons$a (fun_app$i ?v0 ?v2 )(tmap$ ?v0 ?v1 ?v3 ))):pattern ((tmap$ ?v0 ?v1 (tCons$b ?v2 ?v3 ))))):named a86 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 A_c_tllist$ )(?v3 A$ )(?v4 A_c_tllist$ ))(= (= (tmap$e ?v0 ?v1 ?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (= (fun_app$w ?v0 ?v5 )?v3 )(= (tmap$e ?v0 ?v1 ?v6 )?v4 )))))):named a87 ))
(assert (! (forall ((?v0 E_a_fun$ )(?v1 F_c_fun$ )(?v2 E_f_tllist$ )(?v3 A$ )(?v4 A_c_tllist$ ))(= (= (tmap$c ?v0 ?v1 ?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v2 (tCons$b ?v5 ?v6 ))(and (= (fun_app$x ?v0 ?v5 )?v3 )(= (tmap$c ?v0 ?v1 ?v6 )?v4 )))))):named a88 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 B_d_tllist$ )(?v3 A$ )(?v4 A_c_tllist$ ))(= (= (tmap$d ?v0 ?v1 ?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (= (fun_app$y ?v0 ?v5 )?v3 )(= (tmap$d ?v0 ?v1 ?v6 )?v4 )))))):named a89 ))
(assert (! (forall ((?v0 A_e_fun$ )(?v1 C_f_fun$ )(?v2 A_c_tllist$ )(?v3 E$ )(?v4 E_f_tllist$ ))(= (= (tmap$h ?v0 ?v1 ?v2 )(tCons$b ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (= (fun_app$an ?v0 ?v5 )?v3 )(= (tmap$h ?v0 ?v1 ?v6 )?v4 )))))):named a90 ))
(assert (! (forall ((?v0 E_e_fun$ )(?v1 F_f_fun$ )(?v2 E_f_tllist$ )(?v3 E$ )(?v4 E_f_tllist$ ))(= (= (tmap$g ?v0 ?v1 ?v2 )(tCons$b ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v2 (tCons$b ?v5 ?v6 ))(and (= (fun_app$ab ?v0 ?v5 )?v3 )(= (tmap$g ?v0 ?v1 ?v6 )?v4 )))))):named a91 ))
(assert (! (forall ((?v0 B_e_fun$ )(?v1 D_f_fun$ )(?v2 B_d_tllist$ )(?v3 E$ )(?v4 E_f_tllist$ ))(= (= (tmap$f ?v0 ?v1 ?v2 )(tCons$b ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (= (fun_app$ac ?v0 ?v5 )?v3 )(= (tmap$f ?v0 ?v1 ?v6 )?v4 )))))):named a92 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 C_d_fun$ )(?v2 A_c_tllist$ )(?v3 B$ )(?v4 B_d_tllist$ ))(= (= (tmap$b ?v0 ?v1 ?v2 )(tCons$a ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (= (fun_app$v ?v0 ?v5 )?v3 )(= (tmap$b ?v0 ?v1 ?v6 )?v4 )))))):named a93 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 B_d_tllist$ )(?v3 B$ )(?v4 B_d_tllist$ ))(= (= (tmap$a ?v0 ?v1 ?v2 )(tCons$a ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (= (fun_app$t ?v0 ?v5 )?v3 )(= (tmap$a ?v0 ?v1 ?v6 )?v4 )))))):named a94 ))
(assert (! (forall ((?v0 E_b_fun$ )(?v1 F_d_fun$ )(?v2 E_f_tllist$ )(?v3 B$ )(?v4 B_d_tllist$ ))(= (= (tmap$ ?v0 ?v1 ?v2 )(tCons$a ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v2 (tCons$b ?v5 ?v6 ))(and (= (fun_app$i ?v0 ?v5 )?v3 )(= (tmap$ ?v0 ?v1 ?v6 )?v4 )))))):named a95 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A_c_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tmap$e ?v2 ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (= (fun_app$w ?v2 ?v5 )?v0 )(= (tmap$e ?v2 ?v3 ?v6 )?v1 )))))):named a96 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 E_a_fun$ )(?v3 F_c_fun$ )(?v4 E_f_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tmap$c ?v2 ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v4 (tCons$b ?v5 ?v6 ))(and (= (fun_app$x ?v2 ?v5 )?v0 )(= (tmap$c ?v2 ?v3 ?v6 )?v1 )))))):named a97 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 B_a_fun$ )(?v3 D_c_fun$ )(?v4 B_d_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tmap$d ?v2 ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (= (fun_app$y ?v2 ?v5 )?v0 )(= (tmap$d ?v2 ?v3 ?v6 )?v1 )))))):named a98 ))
(assert (! (forall ((?v0 E$ )(?v1 E_f_tllist$ )(?v2 A_e_fun$ )(?v3 C_f_fun$ )(?v4 A_c_tllist$ ))(= (= (tCons$b ?v0 ?v1 )(tmap$h ?v2 ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (= (fun_app$an ?v2 ?v5 )?v0 )(= (tmap$h ?v2 ?v3 ?v6 )?v1 )))))):named a99 ))
(assert (! (forall ((?v0 E$ )(?v1 E_f_tllist$ )(?v2 E_e_fun$ )(?v3 F_f_fun$ )(?v4 E_f_tllist$ ))(= (= (tCons$b ?v0 ?v1 )(tmap$g ?v2 ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v4 (tCons$b ?v5 ?v6 ))(and (= (fun_app$ab ?v2 ?v5 )?v0 )(= (tmap$g ?v2 ?v3 ?v6 )?v1 )))))):named a100 ))
(assert (! (forall ((?v0 E$ )(?v1 E_f_tllist$ )(?v2 B_e_fun$ )(?v3 D_f_fun$ )(?v4 B_d_tllist$ ))(= (= (tCons$b ?v0 ?v1 )(tmap$f ?v2 ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (= (fun_app$ac ?v2 ?v5 )?v0 )(= (tmap$f ?v2 ?v3 ?v6 )?v1 )))))):named a101 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 A_c_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tmap$b ?v2 ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (= (fun_app$v ?v2 ?v5 )?v0 )(= (tmap$b ?v2 ?v3 ?v6 )?v1 )))))):named a102 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 B_d_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tmap$a ?v2 ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (= (fun_app$t ?v2 ?v5 )?v0 )(= (tmap$a ?v2 ?v3 ?v6 )?v1 )))))):named a103 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 E_b_fun$ )(?v3 F_d_fun$ )(?v4 E_f_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tmap$ ?v2 ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v4 (tCons$b ?v5 ?v6 ))(and (= (fun_app$i ?v2 ?v5 )?v0 )(= (tmap$ ?v2 ?v3 ?v6 )?v1 )))))):named a104 ))
(assert (! (forall ((?v0 E_a_fun$ )(?v1 F_c_fun$ )(?v2 E_f_tllist$ )(?v3 C$ ))(= (= (tmap$c ?v0 ?v1 ?v2 )(tNil$ ?v3 ))(exists ((?v4 F$ ))(and (= ?v2 (tNil$b ?v4 ))(= (fun_app$p ?v1 ?v4 )?v3 ))))):named a105 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 B_d_tllist$ )(?v3 C$ ))(= (= (tmap$d ?v0 ?v1 ?v2 )(tNil$ ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(= (fun_app$q ?v1 ?v4 )?v3 ))))):named a106 ))
(assert (! (forall ((?v0 A_e_fun$ )(?v1 C_f_fun$ )(?v2 A_c_tllist$ )(?v3 F$ ))(= (= (tmap$h ?v0 ?v1 ?v2 )(tNil$b ?v3 ))(exists ((?v4 C$ ))(and (= ?v2 (tNil$ ?v4 ))(= (fun_app$ao ?v1 ?v4 )?v3 ))))):named a107 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 C_d_fun$ )(?v2 A_c_tllist$ )(?v3 D$ ))(= (= (tmap$b ?v0 ?v1 ?v2 )(tNil$a ?v3 ))(exists ((?v4 C$ ))(and (= ?v2 (tNil$ ?v4 ))(= (fun_app$n ?v1 ?v4 )?v3 ))))):named a108 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 A_c_tllist$ )(?v3 C$ ))(= (= (tmap$e ?v0 ?v1 ?v2 )(tNil$ ?v3 ))(exists ((?v4 C$ ))(and (= ?v2 (tNil$ ?v4 ))(= (fun_app$o ?v1 ?v4 )?v3 ))))):named a109 ))
(assert (! (forall ((?v0 E_e_fun$ )(?v1 F_f_fun$ )(?v2 E_f_tllist$ )(?v3 F$ ))(= (= (tmap$g ?v0 ?v1 ?v2 )(tNil$b ?v3 ))(exists ((?v4 F$ ))(and (= ?v2 (tNil$b ?v4 ))(= (fun_app$z ?v1 ?v4 )?v3 ))))):named a110 ))
(assert (! (forall ((?v0 B_e_fun$ )(?v1 D_f_fun$ )(?v2 B_d_tllist$ )(?v3 F$ ))(= (= (tmap$f ?v0 ?v1 ?v2 )(tNil$b ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(= (fun_app$aa ?v1 ?v4 )?v3 ))))):named a111 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 B_d_tllist$ )(?v3 D$ ))(= (= (tmap$a ?v0 ?v1 ?v2 )(tNil$a ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(= (fun_app$l ?v1 ?v4 )?v3 ))))):named a112 ))
(assert (! (forall ((?v0 E_b_fun$ )(?v1 F_d_fun$ )(?v2 E_f_tllist$ )(?v3 D$ ))(= (= (tmap$ ?v0 ?v1 ?v2 )(tNil$a ?v3 ))(exists ((?v4 F$ ))(and (= ?v2 (tNil$b ?v4 ))(= (fun_app$d ?v1 ?v4 )?v3 ))))):named a113 ))
(assert (! (forall ((?v0 C$ )(?v1 E_a_fun$ )(?v2 F_c_fun$ )(?v3 E_f_tllist$ ))(= (= (tNil$ ?v0 )(tmap$c ?v1 ?v2 ?v3 ))(exists ((?v4 F$ ))(and (= ?v3 (tNil$b ?v4 ))(= (fun_app$p ?v2 ?v4 )?v0 ))))):named a114 ))
(assert (! (forall ((?v0 C$ )(?v1 B_a_fun$ )(?v2 D_c_fun$ )(?v3 B_d_tllist$ ))(= (= (tNil$ ?v0 )(tmap$d ?v1 ?v2 ?v3 ))(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(= (fun_app$q ?v2 ?v4 )?v0 ))))):named a115 ))
(assert (! (forall ((?v0 F$ )(?v1 A_e_fun$ )(?v2 C_f_fun$ )(?v3 A_c_tllist$ ))(= (= (tNil$b ?v0 )(tmap$h ?v1 ?v2 ?v3 ))(exists ((?v4 C$ ))(and (= ?v3 (tNil$ ?v4 ))(= (fun_app$ao ?v2 ?v4 )?v0 ))))):named a116 ))
(assert (! (forall ((?v0 D$ )(?v1 A_b_fun$ )(?v2 C_d_fun$ )(?v3 A_c_tllist$ ))(= (= (tNil$a ?v0 )(tmap$b ?v1 ?v2 ?v3 ))(exists ((?v4 C$ ))(and (= ?v3 (tNil$ ?v4 ))(= (fun_app$n ?v2 ?v4 )?v0 ))))):named a117 ))
(assert (! (forall ((?v0 C$ )(?v1 A_a_fun$ )(?v2 C_c_fun$ )(?v3 A_c_tllist$ ))(= (= (tNil$ ?v0 )(tmap$e ?v1 ?v2 ?v3 ))(exists ((?v4 C$ ))(and (= ?v3 (tNil$ ?v4 ))(= (fun_app$o ?v2 ?v4 )?v0 ))))):named a118 ))
(assert (! (forall ((?v0 F$ )(?v1 E_e_fun$ )(?v2 F_f_fun$ )(?v3 E_f_tllist$ ))(= (= (tNil$b ?v0 )(tmap$g ?v1 ?v2 ?v3 ))(exists ((?v4 F$ ))(and (= ?v3 (tNil$b ?v4 ))(= (fun_app$z ?v2 ?v4 )?v0 ))))):named a119 ))
(assert (! (forall ((?v0 F$ )(?v1 B_e_fun$ )(?v2 D_f_fun$ )(?v3 B_d_tllist$ ))(= (= (tNil$b ?v0 )(tmap$f ?v1 ?v2 ?v3 ))(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(= (fun_app$aa ?v2 ?v4 )?v0 ))))):named a120 ))
(assert (! (forall ((?v0 D$ )(?v1 B_b_fun$ )(?v2 D_d_fun$ )(?v3 B_d_tllist$ ))(= (= (tNil$a ?v0 )(tmap$a ?v1 ?v2 ?v3 ))(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(= (fun_app$l ?v2 ?v4 )?v0 ))))):named a121 ))
(assert (! (forall ((?v0 D$ )(?v1 E_b_fun$ )(?v2 F_d_fun$ )(?v3 E_f_tllist$ ))(= (= (tNil$a ?v0 )(tmap$ ?v1 ?v2 ?v3 ))(exists ((?v4 F$ ))(and (= ?v3 (tNil$b ?v4 ))(= (fun_app$d ?v2 ?v4 )?v0 ))))):named a122 ))
(assert (! (forall ((?v0 A_e_fun$ )(?v1 C_f_fun$ )(?v2 C$ ))(! (= (tmap$h ?v0 ?v1 (tNil$ ?v2 ))(tNil$b (fun_app$ao ?v1 ?v2 ))):pattern ((tmap$h ?v0 ?v1 (tNil$ ?v2 ))))):named a123 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 C_d_fun$ )(?v2 C$ ))(! (= (tmap$b ?v0 ?v1 (tNil$ ?v2 ))(tNil$a (fun_app$n ?v1 ?v2 ))):pattern ((tmap$b ?v0 ?v1 (tNil$ ?v2 ))))):named a124 ))
(assert (! (forall ((?v0 E_a_fun$ )(?v1 F_c_fun$ )(?v2 F$ ))(! (= (tmap$c ?v0 ?v1 (tNil$b ?v2 ))(tNil$ (fun_app$p ?v1 ?v2 ))):pattern ((tmap$c ?v0 ?v1 (tNil$b ?v2 ))))):named a125 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 D$ ))(! (= (tmap$d ?v0 ?v1 (tNil$a ?v2 ))(tNil$ (fun_app$q ?v1 ?v2 ))):pattern ((tmap$d ?v0 ?v1 (tNil$a ?v2 ))))):named a126 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (tmap$e ?v0 ?v1 (tNil$ ?v2 ))(tNil$ (fun_app$o ?v1 ?v2 ))):pattern ((tmap$e ?v0 ?v1 (tNil$ ?v2 ))))):named a127 ))
(assert (! (forall ((?v0 E_e_fun$ )(?v1 F_f_fun$ )(?v2 F$ ))(! (= (tmap$g ?v0 ?v1 (tNil$b ?v2 ))(tNil$b (fun_app$z ?v1 ?v2 ))):pattern ((tmap$g ?v0 ?v1 (tNil$b ?v2 ))))):named a128 ))
(assert (! (forall ((?v0 B_e_fun$ )(?v1 D_f_fun$ )(?v2 D$ ))(! (= (tmap$f ?v0 ?v1 (tNil$a ?v2 ))(tNil$b (fun_app$aa ?v1 ?v2 ))):pattern ((tmap$f ?v0 ?v1 (tNil$a ?v2 ))))):named a129 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (tmap$a ?v0 ?v1 (tNil$a ?v2 ))(tNil$a (fun_app$l ?v1 ?v2 ))):pattern ((tmap$a ?v0 ?v1 (tNil$a ?v2 ))))):named a130 ))
(assert (! (forall ((?v0 E_b_fun$ )(?v1 F_d_fun$ )(?v2 F$ ))(! (= (tmap$ ?v0 ?v1 (tNil$b ?v2 ))(tNil$a (fun_app$d ?v1 ?v2 ))):pattern ((tmap$ ?v0 ?v1 (tNil$b ?v2 ))))):named a131 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 A_c_tllist$ ))(= (tllist_all2$d ?v0 ?v1 (tCons$ ?v2 ?v3 )?v4 )(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$ad (fun_app$u ?v0 ?v2 )?v5 )(tllist_all2$d ?v0 ?v1 ?v3 ?v6 )))))):named a132 ))
(assert (! (forall ((?v0 E_a_bool_fun_fun$ )(?v1 F_c_bool_fun_fun$ )(?v2 E$ )(?v3 E_f_tllist$ )(?v4 A_c_tllist$ ))(= (tllist_all2$c ?v0 ?v1 (tCons$b ?v2 ?v3 )?v4 )(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$ad (fun_app$r ?v0 ?v2 )?v5 )(tllist_all2$c ?v0 ?v1 ?v3 ?v6 )))))):named a133 ))
(assert (! (forall ((?v0 E_e_bool_fun_fun$ )(?v1 F_f_bool_fun_fun$ )(?v2 E$ )(?v3 E_f_tllist$ )(?v4 E_f_tllist$ ))(= (tllist_all2$e ?v0 ?v1 (tCons$b ?v2 ?v3 )?v4 )(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v4 (tCons$b ?v5 ?v6 ))(and (fun_app$e (fun_app$ae ?v0 ?v2 )?v5 )(tllist_all2$e ?v0 ?v1 ?v3 ?v6 )))))):named a134 ))
(assert (! (forall ((?v0 E_b_bool_fun_fun$ )(?v1 F_d_bool_fun_fun$ )(?v2 E$ )(?v3 E_f_tllist$ )(?v4 B_d_tllist$ ))(= (tllist_all2$f ?v0 ?v1 (tCons$b ?v2 ?v3 )?v4 )(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (fun_app$g (fun_app$af ?v0 ?v2 )?v5 )(tllist_all2$f ?v0 ?v1 ?v3 ?v6 )))))):named a135 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 A_c_tllist$ ))(= (tllist_all2$b ?v0 ?v1 (tCons$a ?v2 ?v3 )?v4 )(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$ad (fun_app$s ?v0 ?v2 )?v5 )(tllist_all2$b ?v0 ?v1 ?v3 ?v6 )))))):named a136 ))
(assert (! (forall ((?v0 B_e_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 E_f_tllist$ ))(= (tllist_all2$g ?v0 ?v1 (tCons$a ?v2 ?v3 )?v4 )(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v4 (tCons$b ?v5 ?v6 ))(and (fun_app$e (fun_app$ag ?v0 ?v2 )?v5 )(tllist_all2$g ?v0 ?v1 ?v3 ?v6 )))))):named a137 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 B_d_tllist$ ))(= (tllist_all2$h ?v0 ?v1 (tCons$a ?v2 ?v3 )?v4 )(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (fun_app$g (fun_app$ah ?v0 ?v2 )?v5 )(tllist_all2$h ?v0 ?v1 ?v3 ?v6 )))))):named a138 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 B_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )?v4 )(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (fun_app$g (fun_app$h ?v0 ?v2 )?v5 )(tllist_all2$ ?v0 ?v1 ?v3 ?v6 )))))):named a139 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 E_f_tllist$ ))(= (tllist_all2$a ?v0 ?v1 (tCons$ ?v2 ?v3 )?v4 )(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v4 (tCons$b ?v5 ?v6 ))(and (fun_app$e (fun_app$f ?v0 ?v2 )?v5 )(tllist_all2$a ?v0 ?v1 ?v3 ?v6 )))))):named a140 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A$ )(?v4 A_c_tllist$ ))(= (tllist_all2$d ?v0 ?v1 ?v2 (tCons$ ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$ad (fun_app$u ?v0 ?v5 )?v3 )(tllist_all2$d ?v0 ?v1 ?v6 ?v4 )))))):named a141 ))
(assert (! (forall ((?v0 E_a_bool_fun_fun$ )(?v1 F_c_bool_fun_fun$ )(?v2 E_f_tllist$ )(?v3 A$ )(?v4 A_c_tllist$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 (tCons$ ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v2 (tCons$b ?v5 ?v6 ))(and (fun_app$ad (fun_app$r ?v0 ?v5 )?v3 )(tllist_all2$c ?v0 ?v1 ?v6 ?v4 )))))):named a142 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A$ )(?v4 A_c_tllist$ ))(= (tllist_all2$b ?v0 ?v1 ?v2 (tCons$ ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (fun_app$ad (fun_app$s ?v0 ?v5 )?v3 )(tllist_all2$b ?v0 ?v1 ?v6 ?v4 )))))):named a143 ))
(assert (! (forall ((?v0 E_e_bool_fun_fun$ )(?v1 F_f_bool_fun_fun$ )(?v2 E_f_tllist$ )(?v3 E$ )(?v4 E_f_tllist$ ))(= (tllist_all2$e ?v0 ?v1 ?v2 (tCons$b ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v2 (tCons$b ?v5 ?v6 ))(and (fun_app$e (fun_app$ae ?v0 ?v5 )?v3 )(tllist_all2$e ?v0 ?v1 ?v6 ?v4 )))))):named a144 ))
(assert (! (forall ((?v0 B_e_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 E$ )(?v4 E_f_tllist$ ))(= (tllist_all2$g ?v0 ?v1 ?v2 (tCons$b ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (fun_app$e (fun_app$ag ?v0 ?v5 )?v3 )(tllist_all2$g ?v0 ?v1 ?v6 ?v4 )))))):named a145 ))
(assert (! (forall ((?v0 E_b_bool_fun_fun$ )(?v1 F_d_bool_fun_fun$ )(?v2 E_f_tllist$ )(?v3 B$ )(?v4 B_d_tllist$ ))(= (tllist_all2$f ?v0 ?v1 ?v2 (tCons$a ?v3 ?v4 ))(exists ((?v5 E$ )(?v6 E_f_tllist$ ))(and (= ?v2 (tCons$b ?v5 ?v6 ))(and (fun_app$g (fun_app$af ?v0 ?v5 )?v3 )(tllist_all2$f ?v0 ?v1 ?v6 ?v4 )))))):named a146 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B$ )(?v4 B_d_tllist$ ))(= (tllist_all2$h ?v0 ?v1 ?v2 (tCons$a ?v3 ?v4 ))(exists ((?v5 B$ )(?v6 B_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (fun_app$g (fun_app$ah ?v0 ?v5 )?v3 )(tllist_all2$h ?v0 ?v1 ?v6 ?v4 )))))):named a147 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B$ )(?v4 B_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tCons$a ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$g (fun_app$h ?v0 ?v5 )?v3 )(tllist_all2$ ?v0 ?v1 ?v6 ?v4 )))))):named a148 ))
(assert (! (forall ((?v0 A_e_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 E$ )(?v4 E_f_tllist$ ))(= (tllist_all2$a ?v0 ?v1 ?v2 (tCons$b ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_c_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$e (fun_app$f ?v0 ?v5 )?v3 )(tllist_all2$a ?v0 ?v1 ?v6 ?v4 )))))):named a149 ))
(check-sat )
;(get-unsat-core )
