;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_b_prod_set$ 0 )
(declare-sort C_d_prod_set$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_b_prod_fun$ 0 )
(declare-sort A_b_prod_a_fun$ 0 )
(declare-sort A_b_prod_b_fun$ 0 )
(declare-sort B_a_b_prod_fun$ 0 )
(declare-sort C_c_d_prod_fun$ 0 )
(declare-sort C_d_prod_c_fun$ 0 )
(declare-sort C_d_prod_d_fun$ 0 )
(declare-sort D_c_d_prod_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort C_a_c_tllist_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_b_prod_bool_fun$ 0 )
(declare-sort C_d_prod_bool_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort B_d_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_fun$ 0 )
(declare-sort C_a_llist_bool_fun_fun$ 0 )
(declare-sort D_b_llist_bool_fun_fun$ 0 )
(declare-sort A_a_b_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_bool_fun_fun$ 0 )
(declare-sort A_b_prod_b_bool_fun_fun$ 0 )
(declare-sort B_a_b_prod_bool_fun_fun$ 0 )
(declare-sort C_c_d_prod_bool_fun_fun$ 0 )
(declare-sort C_d_prod_c_bool_fun_fun$ 0 )
(declare-sort C_d_prod_d_bool_fun_fun$ 0 )
(declare-sort D_c_d_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_set$ 0 )
(declare-sort C_d_prod_c_d_prod_prod_set$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_set$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_set$ 0 )
(declare-sort A_llist_c_a_c_tllist_fun_fun$ 0 )
(declare-sort B_llist_d_b_d_tllist_fun_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_set$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_set$ 0 )
(declare-sort A_b_prod_a_b_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_bool_fun_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_bool_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_bool_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_prod_bool_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_a_b_prod_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_prod_c_d_prod_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_c_d_prod_tllist_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun_a_c_tllist_a_c_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun_b_d_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist_set$ 0 )
(declare-sort A_b_prod_llist_c_d_prod_a_b_prod_c_d_prod_tllist_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ 0 )
(declare-sort C_c_d_prod_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_c_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ 0 )
(declare-sort D_c_d_prod_bool_fun_fun_b_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_bool_fun_fun_c_d_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-datatypes ()((A_b_prod$ (pair$ (fst$ A$ )(snd$ B$ )))))
(declare-sort A_b_prod_llist$ 0)
(declare-fun lNil$a ()A_b_prod_llist$)
(declare-fun lhd$a (A_b_prod_llist$)A_b_prod$)
(declare-fun ltl$a (A_b_prod_llist$)A_b_prod_llist$)
(declare-fun lCons$a (A_b_prod$ A_b_prod_llist$ )A_b_prod_llist$)
(declare-datatypes ()((C_d_prod$ (pair$a (fst$a C$ )(snd$a D$ )))))
(declare-sort A_b_prod_c_d_prod_tllist$ 0)
(declare-sort B_d_tllist$ 0)
(declare-sort B_llist$ 0)
(declare-sort A_c_tllist$ 0)
(declare-sort A_a_tllist$ 0)
(declare-sort A_b_prod_a_b_prod_tllist$ 0)
(declare-fun terminal$ (A_b_prod_c_d_prod_tllist$)C_d_prod$)
(declare-fun tNil$ (C_d_prod$ )A_b_prod_c_d_prod_tllist$)
(declare-fun thd$ (A_b_prod_c_d_prod_tllist$)A_b_prod$)
(declare-fun ttl$ (A_b_prod_c_d_prod_tllist$)A_b_prod_c_d_prod_tllist$)
(declare-fun tCons$ (A_b_prod$ A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist$)
(declare-fun terminal$a (B_d_tllist$)D$)
(declare-fun tNil$a (D$ )B_d_tllist$)
(declare-fun thd$a (B_d_tllist$)B$)
(declare-fun ttl$a (B_d_tllist$)B_d_tllist$)
(declare-fun tCons$a (B$ B_d_tllist$ )B_d_tllist$)
(declare-fun lNil$b ()B_llist$)
(declare-fun lhd$b (B_llist$)B$)
(declare-fun ltl$b (B_llist$)B_llist$)
(declare-fun lCons$b (B$ B_llist$ )B_llist$)
(declare-fun terminal$b (A_c_tllist$)C$)
(declare-fun tNil$b (C$ )A_c_tllist$)
(declare-fun thd$b (A_c_tllist$)A$)
(declare-fun ttl$b (A_c_tllist$)A_c_tllist$)
(declare-fun tCons$b (A$ A_c_tllist$ )A_c_tllist$)
(declare-fun terminal$c (A_a_tllist$)A$)
(declare-fun tNil$c (A$ )A_a_tllist$)
(declare-fun thd$c (A_a_tllist$)A$)
(declare-fun ttl$c (A_a_tllist$)A_a_tllist$)
(declare-fun tCons$c (A$ A_a_tllist$ )A_a_tllist$)
(declare-fun terminal$d (A_b_prod_a_b_prod_tllist$)A_b_prod$)
(declare-fun tNil$d (A_b_prod$ )A_b_prod_a_b_prod_tllist$)
(declare-fun thd$d (A_b_prod_a_b_prod_tllist$)A_b_prod$)
(declare-fun ttl$d (A_b_prod_a_b_prod_tllist$)A_b_prod_a_b_prod_tllist$)
(declare-fun tCons$d (A_b_prod$ A_b_prod_a_b_prod_tllist$ )A_b_prod_a_b_prod_tllist$)
(declare-datatypes ()((A_llist_c_prod$ (pair$b (fst$b A_llist$ )(snd$b C$ )))(B_llist_d_prod$ (pair$c (fst$c B_llist$ )(snd$c D$ )))(A_b_prod_a_b_prod_prod$ (pair$d (fst$d A_b_prod$ )(snd$d A_b_prod$ )))(C_d_prod_c_d_prod_prod$ (pair$e (fst$e C_d_prod$ )(snd$e C_d_prod$ )))))
(declare-sort A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ 0)
(declare-sort B_b_tllist$ 0)
(declare-sort C_a_tllist$ 0)
(declare-sort D_b_tllist$ 0)
(declare-sort C_d_prod_a_b_prod_tllist$ 0)
(declare-sort C_c_tllist$ 0)
(declare-sort D_d_tllist$ 0)
(declare-sort C_d_prod_c_d_prod_tllist$ 0)
(declare-fun terminal$e (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$)C_d_prod_c_d_prod_prod$)
(declare-fun tNil$e (C_d_prod_c_d_prod_prod$ )A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$)
(declare-fun thd$e (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$)A_b_prod_a_b_prod_prod$)
(declare-fun ttl$e (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$)A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$)
(declare-fun tCons$e (A_b_prod_a_b_prod_prod$ A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ )A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$)
(declare-fun terminal$f (B_b_tllist$)B$)
(declare-fun tNil$f (B$ )B_b_tllist$)
(declare-fun thd$f (B_b_tllist$)B$)
(declare-fun ttl$f (B_b_tllist$)B_b_tllist$)
(declare-fun tCons$f (B$ B_b_tllist$ )B_b_tllist$)
(declare-fun terminal$g (C_a_tllist$)A$)
(declare-fun tNil$g (A$ )C_a_tllist$)
(declare-fun thd$g (C_a_tllist$)C$)
(declare-fun ttl$g (C_a_tllist$)C_a_tllist$)
(declare-fun tCons$g (C$ C_a_tllist$ )C_a_tllist$)
(declare-fun terminal$h (D_b_tllist$)B$)
(declare-fun tNil$h (B$ )D_b_tllist$)
(declare-fun thd$h (D_b_tllist$)D$)
(declare-fun ttl$h (D_b_tllist$)D_b_tllist$)
(declare-fun tCons$h (D$ D_b_tllist$ )D_b_tllist$)
(declare-fun terminal$i (C_d_prod_a_b_prod_tllist$)A_b_prod$)
(declare-fun tNil$i (A_b_prod$ )C_d_prod_a_b_prod_tllist$)
(declare-fun thd$i (C_d_prod_a_b_prod_tllist$)C_d_prod$)
(declare-fun ttl$i (C_d_prod_a_b_prod_tllist$)C_d_prod_a_b_prod_tllist$)
(declare-fun tCons$i (C_d_prod$ C_d_prod_a_b_prod_tllist$ )C_d_prod_a_b_prod_tllist$)
(declare-fun terminal$j (C_c_tllist$)C$)
(declare-fun tNil$j (C$ )C_c_tllist$)
(declare-fun thd$j (C_c_tllist$)C$)
(declare-fun ttl$j (C_c_tllist$)C_c_tllist$)
(declare-fun tCons$j (C$ C_c_tllist$ )C_c_tllist$)
(declare-fun terminal$k (D_d_tllist$)D$)
(declare-fun tNil$k (D$ )D_d_tllist$)
(declare-fun thd$k (D_d_tllist$)D$)
(declare-fun ttl$k (D_d_tllist$)D_d_tllist$)
(declare-fun tCons$k (D$ D_d_tllist$ )D_d_tllist$)
(declare-fun terminal$l (C_d_prod_c_d_prod_tllist$)C_d_prod$)
(declare-fun tNil$l (C_d_prod$ )C_d_prod_c_d_prod_tllist$)
(declare-fun thd$l (C_d_prod_c_d_prod_tllist$)C_d_prod$)
(declare-fun ttl$l (C_d_prod_c_d_prod_tllist$)C_d_prod_c_d_prod_tllist$)
(declare-fun tCons$l (C_d_prod$ C_d_prod_c_d_prod_tllist$ )C_d_prod_c_d_prod_tllist$)
(declare-datatypes ()((A_b_prod_llist_c_d_prod_prod$ (pair$f (fst$f A_b_prod_llist$ )(snd$f C_d_prod$ )))))
(declare-fun a$ ()A_llist$ )
(declare-fun b$ ()C$ )
(declare-fun y$ ()A_b_bool_fun_fun$ )
(declare-fun aa$ ()B_llist$ )
(declare-fun ba$ ()D$ )
(declare-fun bb$ ()A_b_prod_c_d_prod_tllist$ )
(declare-fun uu$ ()A_b_prod_a_fun$ )
(declare-fun ya$ ()C_d_bool_fun_fun$ )
(declare-fun uua$ ()A_b_prod_b_fun$ )
(declare-fun uub$ ()C_d_prod_d_fun$ )
(declare-fun uuc$ ()C_d_prod_c_fun$ )
(declare-fun uud$ ()B_b_fun$ )
(declare-fun uue$ ()D_d_fun$ )
(declare-fun uuf$ ()A_a_fun$ )
(declare-fun uug$ ()C_c_fun$ )
(declare-fun uuh$ (Bool A_b_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun uui$ (Bool C_d_bool_fun_fun$ )C_d_bool_fun_fun$ )
(declare-fun uuj$ (A_b_prod_a_b_prod_bool_fun_fun$ C_d_prod_c_d_prod_bool_fun_fun$ )A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist_bool_fun$ )
(declare-fun uuk$ ()A_b_prod_a_b_prod_prod_a_b_prod_fun$ )
(declare-fun uul$ ()C_d_prod_c_d_prod_prod_c_d_prod_fun$ )
(declare-fun uum$ ()A_b_prod_a_b_prod_prod_a_b_prod_fun$ )
(declare-fun uun$ ()C_d_prod_c_d_prod_prod_c_d_prod_fun$ )
(declare-fun uuo$ (A_b_bool_fun_fun$ A_b_bool_fun_fun$ )A_b_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uup$ (C_d_bool_fun_fun$ A_b_bool_fun_fun$ )C_d_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uuq$ (C_d_bool_fun_fun$ C_d_bool_fun_fun$ )C_d_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun uur$ (A_b_bool_fun_fun$ )C_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun uus$ ()A_b_prod_a_b_prod_bool_fun_fun$ )
(declare-fun uut$ ()C_d_prod_c_d_prod_bool_fun_fun$ )
(declare-fun uuu$ ()A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun uuv$ ()A_b_prod_llist_c_d_prod_a_b_prod_c_d_prod_tllist_fun_fun$ )
(declare-fun uuw$ ()B_llist_d_b_d_tllist_fun_fun$ )
(declare-fun uux$ ()A_llist_c_a_c_tllist_fun_fun$ )
(declare-fun uuy$ (A_a_bool_fun_fun$ B_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuz$ (C_c_bool_fun_fun$ D_c_fun$ )C_d_bool_fun_fun$ )
(declare-fun uva$ (A_b_prod_b_bool_fun_fun$ A_b_prod_b_fun$ )A_b_prod_a_b_prod_bool_fun_fun$ )
(declare-fun uvb$ (C_d_prod_d_bool_fun_fun$ C_d_prod_d_fun$ )C_d_prod_c_d_prod_bool_fun_fun$ )
(declare-fun uvc$ (A_b_prod_a_bool_fun_fun$ A_b_prod_a_fun$ )A_b_prod_a_b_prod_bool_fun_fun$ )
(declare-fun uvd$ (C_d_prod_c_bool_fun_fun$ C_d_prod_c_fun$ )C_d_prod_c_d_prod_bool_fun_fun$ )
(declare-fun uve$ (A_b_bool_fun_fun$ A_b_prod_b_fun$ )A_a_b_prod_bool_fun_fun$ )
(declare-fun uvf$ (C_d_bool_fun_fun$ C_d_prod_d_fun$ )C_c_d_prod_bool_fun_fun$ )
(declare-fun uvg$ (A_b_bool_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun uvh$ (C_d_bool_fun_fun$ C_d_fun$ )C_c_bool_fun_fun$ )
(declare-fun uvi$ (A_b_bool_fun_fun$ B_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uvj$ (C_d_bool_fun_fun$ D_d_fun$ )C_d_bool_fun_fun$ )
(declare-fun uvk$ (A_b_prod_a_b_prod_bool_fun_fun$ A_b_prod_a_b_prod_fun$ )A_b_prod_a_b_prod_bool_fun_fun$ )
(declare-fun uvl$ (C_d_prod_c_d_prod_bool_fun_fun$ C_d_prod_c_d_prod_fun$ )C_d_prod_c_d_prod_bool_fun_fun$ )
(declare-fun uvm$ (B_b_bool_fun_fun$ A_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uvn$ (D_d_bool_fun_fun$ C_d_fun$ )C_d_bool_fun_fun$ )
(declare-fun uvo$ (A_b_bool_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun uvp$ (C_d_bool_fun_fun$ D_c_fun$ )D_d_bool_fun_fun$ )
(declare-fun uvq$ (A_b_bool_fun_fun$ A_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uvr$ (C_d_bool_fun_fun$ C_c_fun$ )C_d_bool_fun_fun$ )
(declare-fun uvs$ (A_b_bool_fun_fun$ A_b_prod_a_fun$ )A_b_prod_b_bool_fun_fun$ )
(declare-fun uvt$ (C_d_bool_fun_fun$ C_d_prod_c_fun$ )C_d_prod_d_bool_fun_fun$ )
(declare-fun uvu$ (B_a_b_prod_bool_fun_fun$ A_b_prod_b_fun$ )A_b_prod_a_b_prod_bool_fun_fun$ )
(declare-fun uvv$ (D_c_d_prod_bool_fun_fun$ C_d_prod_d_fun$ )C_d_prod_c_d_prod_bool_fun_fun$ )
(declare-fun uvw$ (A_a_b_prod_bool_fun_fun$ A_b_prod_a_fun$ )A_b_prod_a_b_prod_bool_fun_fun$ )
(declare-fun uvx$ (C_c_d_prod_bool_fun_fun$ C_d_prod_c_fun$ )C_d_prod_c_d_prod_bool_fun_fun$ )
(declare-fun lmap$ (A_b_prod_a_fun$ A_b_prod_llist$ )A_llist$ )
(declare-fun tmap$ (A_b_prod_b_fun$ C_d_prod_d_fun$ A_b_prod_c_d_prod_tllist$ )B_d_tllist$ )
(declare-fun tset$ (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ )A_b_prod_a_b_prod_prod_set$ )
(declare-fun lmap$a (B_a_b_prod_fun$ B_llist$ )A_b_prod_llist$ )
(declare-fun lmap$b (A_a_b_prod_fun$ A_llist$ )A_b_prod_llist$ )
(declare-fun lmap$c (A_b_prod_a_b_prod_fun$ A_b_prod_llist$ )A_b_prod_llist$ )
(declare-fun lmap$d (A_b_prod_b_fun$ A_b_prod_llist$ )B_llist$ )
(declare-fun lmap$e (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$f (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun lmap$g (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$h (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun tmap$a (A_b_prod_a_fun$ C_d_prod_c_fun$ A_b_prod_c_d_prod_tllist$ )A_c_tllist$ )
(declare-fun tmap$b (A_b_prod_a_fun$ A_b_prod_a_fun$ A_b_prod_a_b_prod_tllist$ )A_a_tllist$ )
(declare-fun tmap$c (B_a_b_prod_fun$ D_c_d_prod_fun$ B_d_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$d (A_a_b_prod_fun$ C_c_d_prod_fun$ A_c_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$e (A_b_prod_a_b_prod_fun$ C_d_prod_c_d_prod_fun$ A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$f (B_b_fun$ D_d_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun tmap$g (B_a_fun$ D_c_fun$ B_d_tllist$ )A_c_tllist$ )
(declare-fun tmap$h (A_b_fun$ C_d_fun$ A_c_tllist$ )B_d_tllist$ )
(declare-fun tmap$i (A_a_fun$ C_c_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tmap$j (A_b_prod_a_b_prod_prod_a_b_prod_fun$ C_d_prod_c_d_prod_prod_c_d_prod_fun$ A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$k (A_b_prod_b_fun$ A_b_prod_b_fun$ A_b_prod_a_b_prod_tllist$ )B_b_tllist$ )
(declare-fun tmap$l (C_d_prod_c_fun$ A_b_prod_a_fun$ C_d_prod_a_b_prod_tllist$ )C_a_tllist$ )
(declare-fun tmap$m (C_d_prod_d_fun$ A_b_prod_b_fun$ C_d_prod_a_b_prod_tllist$ )D_b_tllist$ )
(declare-fun tmap$n (C_d_prod_c_fun$ C_d_prod_c_fun$ C_d_prod_c_d_prod_tllist$ )C_c_tllist$ )
(declare-fun tmap$o (C_d_prod_d_fun$ C_d_prod_d_fun$ C_d_prod_c_d_prod_tllist$ )D_d_tllist$ )
(declare-fun tmap$p (D_d_fun$ D_d_fun$ D_d_tllist$ )D_d_tllist$ )
(declare-fun tmap$q (D_d_fun$ B_b_fun$ D_b_tllist$ )D_b_tllist$ )
(declare-fun tmap$r (B_b_fun$ B_b_fun$ B_b_tllist$ )B_b_tllist$ )
(declare-fun tmap$s (C_c_fun$ C_c_fun$ C_c_tllist$ )C_c_tllist$ )
(declare-fun tmap$t (C_c_fun$ A_a_fun$ C_a_tllist$ )C_a_tllist$ )
(declare-fun tmap$u (A_a_fun$ A_a_fun$ A_a_tllist$ )A_a_tllist$ )
(declare-fun tset$a (C_d_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$b (C_d_prod_a_b_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$c (A_b_prod_c_d_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$d (A_b_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$e (B_d_tllist$ )B_set$ )
(declare-fun tset$f (A_c_tllist$ )A_set$ )
(declare-fun tset$g (C_c_tllist$ )C_set$ )
(declare-fun tset$h (D_d_tllist$ )D_set$ )
(declare-fun tset$i (C_a_tllist$ )C_set$ )
(declare-fun tset$j (D_b_tllist$ )D_set$ )
(declare-fun tset$k (A_a_tllist$ )A_set$ )
(declare-fun tset$l (B_b_tllist$ )B_set$ )
(declare-fun member$ (B$ B_set$ )Bool )
(declare-fun collect$ (A_b_prod_a_b_prod_prod_bool_fun$ )A_b_prod_a_b_prod_prod_set$ )
(declare-fun fun_app$ (C_d_prod_c_d_prod_prod_c_d_prod_fun$ C_d_prod_c_d_prod_prod$ )C_d_prod$ )
(declare-fun less_eq$ (A_b_prod_a_b_prod_prod_set$ A_b_prod_a_b_prod_prod_set$ )Bool )
(declare-fun member$a (D$ D_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (C$ C_set$ )Bool )
(declare-fun member$d (A_b_prod$ A_b_prod_set$ )Bool )
(declare-fun member$e (C_d_prod$ C_d_prod_set$ )Bool )
(declare-fun member$f (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist_set$ )Bool )
(declare-fun member$g (A_b_prod_a_b_prod_tllist$ A_b_prod_a_b_prod_tllist_set$ )Bool )
(declare-fun member$h (C_d_prod_a_b_prod_tllist$ C_d_prod_a_b_prod_tllist_set$ )Bool )
(declare-fun member$i (C_d_prod_c_d_prod_tllist$ C_d_prod_c_d_prod_tllist_set$ )Bool )
(declare-fun member$j (A_b_prod_c_d_prod_tllist$ A_b_prod_c_d_prod_tllist_set$ )Bool )
(declare-fun collect$a (C_d_prod_c_d_prod_prod_bool_fun$ )C_d_prod_c_d_prod_prod_set$ )
(declare-fun collect$b (C_d_prod_bool_fun$ )C_d_prod_set$ )
(declare-fun collect$c (A_b_prod_bool_fun$ )A_b_prod_set$ )
(declare-fun collect$d (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist_bool_fun$ )A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist_set$ )
(declare-fun collect$e (A_b_prod_a_b_prod_tllist_bool_fun$ )A_b_prod_a_b_prod_tllist_set$ )
(declare-fun collect$f (C_d_prod_a_b_prod_tllist_bool_fun$ )C_d_prod_a_b_prod_tllist_set$ )
(declare-fun collect$g (C_d_prod_c_d_prod_tllist_bool_fun$ )C_d_prod_c_d_prod_tllist_set$ )
(declare-fun collect$h (A_b_prod_c_d_prod_tllist_bool_fun$ )A_b_prod_c_d_prod_tllist_set$ )
(declare-fun fun_app$a (A_b_prod_a_b_prod_prod_a_b_prod_fun$ A_b_prod_a_b_prod_prod$ )A_b_prod$ )
(declare-fun fun_app$b (C_d_prod_d_fun$ C_d_prod$ )D$ )
(declare-fun fun_app$c (A_b_prod_b_fun$ A_b_prod$ )B$ )
(declare-fun fun_app$d (C_d_prod_c_fun$ C_d_prod$ )C$ )
(declare-fun fun_app$e (A_b_prod_a_fun$ A_b_prod$ )A$ )
(declare-fun fun_app$f (C_d_prod_a_b_prod_c_d_prod_tllist_fun$ C_d_prod$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun fun_app$g (A_b_prod_llist_c_d_prod_a_b_prod_c_d_prod_tllist_fun_fun$ A_b_prod_llist$ )C_d_prod_a_b_prod_c_d_prod_tllist_fun$ )
(declare-fun fun_app$h (D_b_d_tllist_fun$ D$ )B_d_tllist$ )
(declare-fun fun_app$i (B_llist_d_b_d_tllist_fun_fun$ B_llist$ )D_b_d_tllist_fun$ )
(declare-fun fun_app$j (C_a_c_tllist_fun$ C$ )A_c_tllist$ )
(declare-fun fun_app$k (A_llist_c_a_c_tllist_fun_fun$ A_llist$ )C_a_c_tllist_fun$ )
(declare-fun fun_app$l (A_b_prod_c_d_prod_tllist_bool_fun$ A_b_prod_c_d_prod_tllist$ )Bool )
(declare-fun fun_app$m (A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$n (C_d_prod_bool_fun$ C_d_prod$ )Bool )
(declare-fun fun_app$o (C_d_prod_c_d_prod_bool_fun_fun$ C_d_prod$ )C_d_prod_bool_fun$ )
(declare-fun fun_app$p (A_b_prod_bool_fun$ A_b_prod$ )Bool )
(declare-fun fun_app$q (A_b_prod_a_b_prod_bool_fun_fun$ A_b_prod$ )A_b_prod_bool_fun$ )
(declare-fun fun_app$r (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist_bool_fun$ A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ )Bool )
(declare-fun fun_app$s (C_d_prod_c_d_prod_tllist_bool_fun$ C_d_prod_c_d_prod_tllist$ )Bool )
(declare-fun fun_app$t (C_d_prod_a_b_prod_tllist_bool_fun$ C_d_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$u (C_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_bool_fun_fun$ C_d_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$v (A_b_prod_a_b_prod_tllist_bool_fun$ A_b_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$w (D_c_d_prod_bool_fun_fun$ D$ )C_d_prod_bool_fun$ )
(declare-fun fun_app$x (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$y (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$z (C_d_fun$ C$ )D$ )
(declare-fun less_eq$a (C_d_prod_c_d_prod_prod_set$ C_d_prod_c_d_prod_prod_set$ )Bool )
(declare-fun less_eq$b (C_d_prod_set$ C_d_prod_set$ )Bool )
(declare-fun less_eq$c (A_b_prod_set$ A_b_prod_set$ )Bool )
(declare-fun less_eq$d (C_d_prod_a_b_prod_tllist_set$ C_d_prod_a_b_prod_tllist_set$ )Bool )
(declare-fun less_eq$e (A_b_prod_c_d_prod_tllist_set$ A_b_prod_c_d_prod_tllist_set$ )Bool )
(declare-fun less_eq$f (A_b_prod_a_b_prod_tllist_set$ A_b_prod_a_b_prod_tllist_set$ )Bool )
(declare-fun case_prod$ (A_b_prod_a_b_prod_bool_fun_fun$ )A_b_prod_a_b_prod_prod_bool_fun$ )
(declare-fun fun_app$aa (C_c_d_prod_bool_fun_fun$ C$ )C_d_prod_bool_fun$ )
(declare-fun fun_app$ab (C_d_prod_d_bool_fun_fun$ C_d_prod$ )D_bool_fun$ )
(declare-fun fun_app$ac (D_c_fun$ D$ )C$ )
(declare-fun fun_app$ad (C_c_fun$ C$ )C$ )
(declare-fun fun_app$ae (B_a_b_prod_bool_fun_fun$ B$ )A_b_prod_bool_fun$ )
(declare-fun fun_app$af (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$ag (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$ah (A_b_fun$ A$ )B$ )
(declare-fun fun_app$ai (A_a_b_prod_bool_fun_fun$ A$ )A_b_prod_bool_fun$ )
(declare-fun fun_app$aj (A_b_prod_b_bool_fun_fun$ A_b_prod$ )B_bool_fun$ )
(declare-fun fun_app$ak (B_a_fun$ B$ )A$ )
(declare-fun fun_app$al (A_a_fun$ A$ )A$ )
(declare-fun fun_app$am (C_d_prod_c_d_prod_fun$ C_d_prod$ )C_d_prod$ )
(declare-fun fun_app$an (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$ao (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$ap (C_d_prod_c_bool_fun_fun$ C_d_prod$ )C_bool_fun$ )
(declare-fun fun_app$aq (A_b_prod_a_b_prod_fun$ A_b_prod$ )A_b_prod$ )
(declare-fun fun_app$ar (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$as (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$at (A_b_prod_a_bool_fun_fun$ A_b_prod$ )A_bool_fun$ )
(declare-fun fun_app$au (D_d_fun$ D$ )D$ )
(declare-fun fun_app$av (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$aw (B_b_fun$ B$ )B$ )
(declare-fun fun_app$ax (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$ay (D_c_d_prod_fun$ D$ )C_d_prod$ )
(declare-fun fun_app$az (C_c_d_prod_fun$ C$ )C_d_prod$ )
(declare-fun fun_app$ba (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$bb (C_a_llist_bool_fun_fun$ C$ )A_llist_bool_fun$ )
(declare-fun fun_app$bc (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$bd (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$be (D_b_llist_bool_fun_fun$ D$ )B_llist_bool_fun$ )
(declare-fun fun_app$bf (B_d_tllist_bool_fun$ B_d_tllist$ )Bool )
(declare-fun fun_app$bg (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$bh (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$bi (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$bj (C_d_prod_c_d_prod_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ C_d_prod_c_d_prod_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$bk (A_c_tllist_b_d_tllist_bool_fun_fun$ A_c_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$bl (C_d_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ C_d_bool_fun_fun$ )A_c_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$bm (A_c_tllist_a_c_tllist_bool_fun_fun$ A_c_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$bn (C_c_bool_fun_fun_a_c_tllist_a_c_tllist_bool_fun_fun_fun$ C_c_bool_fun_fun$ )A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun fun_app$bo (A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$bp (C_d_prod_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ C_d_prod_d_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$bq (A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$br (C_d_prod_c_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ C_d_prod_c_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun fun_app$bs (A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ A_c_tllist$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$bt (C_c_d_prod_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ C_c_d_prod_bool_fun_fun$ )A_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$bu (B_d_tllist_b_d_tllist_bool_fun_fun$ B_d_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$bv (D_d_bool_fun_fun_b_d_tllist_b_d_tllist_bool_fun_fun_fun$ D_d_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun fun_app$bw (B_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ B_d_tllist$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$bx (D_c_d_prod_bool_fun_fun_b_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ D_c_d_prod_bool_fun_fun$ )B_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun fun_app$by (A_b_prod_c_d_prod_bool_fun_fun$ A_b_prod$ )C_d_prod_bool_fun$ )
(declare-fun fun_app$bz (C_d_prod_a_b_prod_bool_fun_fun$ C_d_prod$ )A_b_prod_bool_fun$ )
(declare-fun fun_app$ca (C_d_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ C_d_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun fun_app$cb (C_d_prod_c_d_prod_bool_fun_fun_c_d_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ C_d_prod_c_d_prod_bool_fun_fun$ )C_d_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun$ )
(declare-fun case_prod$a (C_d_prod_c_d_prod_bool_fun_fun$ )C_d_prod_c_d_prod_prod_bool_fun$ )
(declare-fun case_prod$b (C_d_bool_fun_fun$ )C_d_prod_bool_fun$ )
(declare-fun case_prod$c (A_b_bool_fun_fun$ )A_b_prod_bool_fun$ )
(declare-fun case_prod$d (A_llist_c_a_c_tllist_fun_fun$ A_llist_c_prod$ )A_c_tllist$ )
(declare-fun case_prod$e (B_llist_d_b_d_tllist_fun_fun$ B_llist_d_prod$ )B_d_tllist$ )
(declare-fun case_prod$f (A_b_prod_llist_c_d_prod_a_b_prod_c_d_prod_tllist_fun_fun$ A_b_prod_llist_c_d_prod_prod$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun set2_tllist$ (A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ )C_d_prod_c_d_prod_prod_set$ )
(declare-fun tllist_all2$ (A_b_prod_a_b_prod_bool_fun_fun$ )C_d_prod_c_d_prod_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun set2_tllist$a (C_d_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun set2_tllist$b (C_d_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$c (A_b_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun set2_tllist$d (A_b_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$e (B_d_tllist$ )D_set$ )
(declare-fun set2_tllist$f (A_c_tllist$ )C_set$ )
(declare-fun set2_tllist$g (C_c_tllist$ )C_set$ )
(declare-fun set2_tllist$h (D_d_tllist$ )D_set$ )
(declare-fun set2_tllist$i (C_a_tllist$ )A_set$ )
(declare-fun set2_tllist$j (D_b_tllist$ )B_set$ )
(declare-fun set2_tllist$k (A_a_tllist$ )A_set$ )
(declare-fun set2_tllist$l (B_b_tllist$ )B_set$ )
(declare-fun tllist_all2$a (A_b_bool_fun_fun$ A_b_bool_fun_fun$ A_a_tllist$ B_b_tllist$ )Bool )
(declare-fun tllist_all2$b (C_d_bool_fun_fun$ A_b_bool_fun_fun$ C_a_tllist$ D_b_tllist$ )Bool )
(declare-fun tllist_all2$c (C_d_bool_fun_fun$ C_d_bool_fun_fun$ C_c_tllist$ D_d_tllist$ )Bool )
(declare-fun tllist_all2$d (A_b_bool_fun_fun$ )C_d_bool_fun_fun_a_c_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$e (A_a_bool_fun_fun$ )C_c_bool_fun_fun_a_c_tllist_a_c_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$f (A_b_prod_b_bool_fun_fun$ )C_d_prod_d_bool_fun_fun_a_b_prod_c_d_prod_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$g (A_b_prod_a_bool_fun_fun$ )C_d_prod_c_bool_fun_fun_a_b_prod_c_d_prod_tllist_a_c_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$h (A_a_b_prod_bool_fun_fun$ )C_c_d_prod_bool_fun_fun_a_c_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$i (B_b_bool_fun_fun$ )D_d_bool_fun_fun_b_d_tllist_b_d_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$j (A_b_prod_b_bool_fun_fun$ A_b_prod_b_bool_fun_fun$ A_b_prod_a_b_prod_tllist$ B_b_tllist$ )Bool )
(declare-fun tllist_all2$k (B_a_b_prod_bool_fun_fun$ )D_c_d_prod_bool_fun_fun_b_d_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$l (A_b_prod_c_d_prod_bool_fun_fun$ C_d_prod_c_d_prod_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ C_d_prod_c_d_prod_tllist$ )Bool )
(declare-fun tllist_all2$m (A_b_prod_c_d_prod_bool_fun_fun$ C_d_prod_a_b_prod_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ C_d_prod_a_b_prod_tllist$ )Bool )
(declare-fun tllist_all2$n (A_b_prod_a_b_prod_bool_fun_fun$ C_d_prod_a_b_prod_bool_fun_fun$ A_b_prod_c_d_prod_tllist$ A_b_prod_a_b_prod_tllist$ )Bool )
(declare-fun tllist_all2$o (C_d_prod_a_b_prod_bool_fun_fun$ )C_d_prod_c_d_prod_bool_fun_fun_c_d_prod_c_d_prod_tllist_a_b_prod_c_d_prod_tllist_bool_fun_fun_fun$ )
(declare-fun tllist_all2$p (C_d_prod_c_d_prod_bool_fun_fun$ C_d_prod_c_d_prod_bool_fun_fun$ C_d_prod_c_d_prod_tllist$ C_d_prod_c_d_prod_tllist$ )Bool )
(declare-fun llist_of_tllist$ (A_b_prod_c_d_prod_tllist$ )A_b_prod_llist$ )
(declare-fun tllist_of_llist$ (C_d_prod$ A_b_prod_llist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun llist_of_tllist$a (B_d_tllist$ )B_llist$ )
(declare-fun llist_of_tllist$b (A_c_tllist$ )A_llist$ )
(declare-fun tllist_of_llist$a (D$ B_llist$ )B_d_tllist$ )
(declare-fun tllist_of_llist$b (C$ A_llist$ )A_c_tllist$ )
(declare-fun tllist_of_llist$c (A_b_prod$ A_b_prod_llist$ )A_b_prod_a_b_prod_tllist$ )
(declare-fun tllist_of_llist$d (A$ A_llist$ )A_a_tllist$ )
(assert (! (forall ((?v0 C_d_prod_c_d_prod_prod$ ))(! (= (fun_app$ uun$ ?v0 )(snd$e ?v0 )):pattern ((fun_app$ uun$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ ))(! (= (fun_app$a uum$ ?v0 )(snd$d ?v0 )):pattern ((fun_app$a uum$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$b uub$ ?v0 )(snd$a ?v0 )):pattern ((fun_app$b uub$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$c uua$ ?v0 )(snd$ ?v0 )):pattern ((fun_app$c uua$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 C_d_prod_c_d_prod_prod$ ))(! (= (fun_app$ uul$ ?v0 )(fst$e ?v0 )):pattern ((fun_app$ uul$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_prod$ ))(! (= (fun_app$a uuk$ ?v0 )(fst$d ?v0 )):pattern ((fun_app$a uuk$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$d uuc$ ?v0 )(fst$a ?v0 )):pattern ((fun_app$d uuc$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$e uu$ ?v0 )(fst$ ?v0 )):pattern ((fun_app$e uu$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 C_d_prod$ ))(! (= (fun_app$f (fun_app$g uuv$ ?v0 )?v1 )(tllist_of_llist$ ?v1 ?v0 )):pattern ((fun_app$f (fun_app$g uuv$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 D$ ))(! (= (fun_app$h (fun_app$i uuw$ ?v0 )?v1 )(tllist_of_llist$a ?v1 ?v0 )):pattern ((fun_app$h (fun_app$i uuw$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ ))(! (= (fun_app$j (fun_app$k uux$ ?v0 )?v1 )(tllist_of_llist$b ?v1 ?v0 )):pattern ((fun_app$j (fun_app$k uux$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ ))(! (= (fun_app$l (fun_app$m uuu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uuu$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod$ ))(! (= (fun_app$n (fun_app$o uut$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uut$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod$ ))(! (= (fun_app$p (fun_app$q uus$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$p (fun_app$q uus$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ ))(! (= (fun_app$r (uuj$ ?v0 ?v1 )?v2 )(and (less_eq$ (tset$ ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$a (set2_tllist$ ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$r (uuj$ ?v0 ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_d_prod_c_d_prod_tllist$ ))(! (= (fun_app$s (uuq$ ?v0 ?v1 )?v2 )(and (less_eq$b (tset$a ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$b (set2_tllist$a ?v2 )(collect$b (case_prod$b ?v1 ))))):pattern ((fun_app$s (uuq$ ?v0 ?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_d_prod_a_b_prod_tllist$ ))(! (= (fun_app$t (uup$ ?v0 ?v1 )?v2 )(and (less_eq$b (tset$b ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$c (set2_tllist$b ?v2 )(collect$c (case_prod$c ?v1 ))))):pattern ((fun_app$t (uup$ ?v0 ?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(! (= (fun_app$l (fun_app$u (uur$ ?v0 )?v1 )?v2 )(and (less_eq$c (tset$c ?v2 )(collect$c (case_prod$c ?v0 )))(less_eq$b (set2_tllist$c ?v2 )(collect$b (case_prod$b ?v1 ))))):pattern ((fun_app$l (fun_app$u (uur$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod_a_b_prod_tllist$ ))(! (= (fun_app$v (uuo$ ?v0 ?v1 )?v2 )(and (less_eq$c (tset$d ?v2 )(collect$c (case_prod$c ?v0 )))(less_eq$c (set2_tllist$d ?v2 )(collect$c (case_prod$c ?v1 ))))):pattern ((fun_app$v (uuo$ ?v0 ?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 D_c_d_prod_bool_fun_fun$ )(?v1 C_d_prod_d_fun$ )(?v2 C_d_prod$ ))(! (= (fun_app$o (uvv$ ?v0 ?v1 )?v2 )(fun_app$w ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$o (uvv$ ?v0 ?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 C_d_fun$ )(?v2 C$ ))(! (= (fun_app$x (uvn$ ?v0 ?v1 )?v2 )(fun_app$y ?v0 (fun_app$z ?v1 ?v2 ))):pattern ((fun_app$x (uvn$ ?v0 ?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 C_c_d_prod_bool_fun_fun$ )(?v1 C_d_prod_c_fun$ )(?v2 C_d_prod$ ))(! (= (fun_app$o (uvx$ ?v0 ?v1 )?v2 )(fun_app$aa ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$o (uvx$ ?v0 ?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod_c_fun$ )(?v2 C_d_prod$ ))(! (= (fun_app$ab (uvt$ ?v0 ?v1 )?v2 )(fun_app$x ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$ab (uvt$ ?v0 ?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D_c_fun$ )(?v2 D$ ))(! (= (fun_app$y (uvp$ ?v0 ?v1 )?v2 )(fun_app$x ?v0 (fun_app$ac ?v1 ?v2 ))):pattern ((fun_app$y (uvp$ ?v0 ?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_c_fun$ )(?v2 C$ ))(! (= (fun_app$x (uvr$ ?v0 ?v1 )?v2 )(fun_app$x ?v0 (fun_app$ad ?v1 ?v2 ))):pattern ((fun_app$x (uvr$ ?v0 ?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 B_a_b_prod_bool_fun_fun$ )(?v1 A_b_prod_b_fun$ )(?v2 A_b_prod$ ))(! (= (fun_app$q (uvu$ ?v0 ?v1 )?v2 )(fun_app$ae ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$q (uvu$ ?v0 ?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$af (uvm$ ?v0 ?v1 )?v2 )(fun_app$ag ?v0 (fun_app$ah ?v1 ?v2 ))):pattern ((fun_app$af (uvm$ ?v0 ?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_a_b_prod_bool_fun_fun$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod$ ))(! (= (fun_app$q (uvw$ ?v0 ?v1 )?v2 )(fun_app$ai ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$q (uvw$ ?v0 ?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod$ ))(! (= (fun_app$aj (uvs$ ?v0 ?v1 )?v2 )(fun_app$af ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$aj (uvs$ ?v0 ?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$ag (uvo$ ?v0 ?v1 )?v2 )(fun_app$af ?v0 (fun_app$ak ?v1 ?v2 ))):pattern ((fun_app$ag (uvo$ ?v0 ?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$af (uvq$ ?v0 ?v1 )?v2 )(fun_app$af ?v0 (fun_app$al ?v1 ?v2 ))):pattern ((fun_app$af (uvq$ ?v0 ?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 C_d_prod_c_d_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_fun$ )(?v2 C_d_prod$ )(?v3 C_d_prod$ ))(! (= (fun_app$n (fun_app$o (uvl$ ?v0 ?v1 )?v2 )?v3 )(fun_app$n (fun_app$o ?v0 ?v2 )(fun_app$am ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$o (uvl$ ?v0 ?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 C_d_prod_d_bool_fun_fun$ )(?v1 C_d_prod_d_fun$ )(?v2 C_d_prod$ )(?v3 C_d_prod$ ))(! (= (fun_app$n (fun_app$o (uvb$ ?v0 ?v1 )?v2 )?v3 )(fun_app$an (fun_app$ab ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$o (uvb$ ?v0 ?v1 )?v2 )?v3 )))):named a32 ))
(assert (! (forall ((?v0 C_d_prod_c_bool_fun_fun$ )(?v1 C_d_prod_c_fun$ )(?v2 C_d_prod$ )(?v3 C_d_prod$ ))(! (= (fun_app$n (fun_app$o (uvd$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ao (fun_app$ap ?v0 ?v2 )(fun_app$d ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$o (uvd$ ?v0 ?v1 )?v2 )?v3 )))):named a33 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$ )(?v1 A_b_prod_a_b_prod_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod$ ))(! (= (fun_app$p (fun_app$q (uvk$ ?v0 ?v1 )?v2 )?v3 )(fun_app$p (fun_app$q ?v0 ?v2 )(fun_app$aq ?v1 ?v3 ))):pattern ((fun_app$p (fun_app$q (uvk$ ?v0 ?v1 )?v2 )?v3 )))):named a34 ))
(assert (! (forall ((?v0 A_b_prod_b_bool_fun_fun$ )(?v1 A_b_prod_b_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod$ ))(! (= (fun_app$p (fun_app$q (uva$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ar (fun_app$aj ?v0 ?v2 )(fun_app$c ?v1 ?v3 ))):pattern ((fun_app$p (fun_app$q (uva$ ?v0 ?v1 )?v2 )?v3 )))):named a35 ))
(assert (! (forall ((?v0 A_b_prod_a_bool_fun_fun$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod$ ))(! (= (fun_app$p (fun_app$q (uvc$ ?v0 ?v1 )?v2 )?v3 )(fun_app$as (fun_app$at ?v0 ?v2 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$p (fun_app$q (uvc$ ?v0 ?v1 )?v2 )?v3 )))):named a36 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod_d_fun$ )(?v2 C$ )(?v3 C_d_prod$ ))(! (= (fun_app$n (fun_app$aa (uvf$ ?v0 ?v1 )?v2 )?v3 )(fun_app$an (fun_app$x ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$aa (uvf$ ?v0 ?v1 )?v2 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D_d_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$an (fun_app$x (uvj$ ?v0 ?v1 )?v2 )?v3 )(fun_app$an (fun_app$x ?v0 ?v2 )(fun_app$au ?v1 ?v3 ))):pattern ((fun_app$an (fun_app$x (uvj$ ?v0 ?v1 )?v2 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (fun_app$ao (fun_app$av (uvh$ ?v0 ?v1 )?v2 )?v3 )(fun_app$an (fun_app$x ?v0 ?v2 )(fun_app$z ?v1 ?v3 ))):pattern ((fun_app$ao (fun_app$av (uvh$ ?v0 ?v1 )?v2 )?v3 )))):named a39 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_c_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$an (fun_app$x (uuz$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ao (fun_app$av ?v0 ?v2 )(fun_app$ac ?v1 ?v3 ))):pattern ((fun_app$an (fun_app$x (uuz$ ?v0 ?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod_b_fun$ )(?v2 A$ )(?v3 A_b_prod$ ))(! (= (fun_app$p (fun_app$ai (uve$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ar (fun_app$af ?v0 ?v2 )(fun_app$c ?v1 ?v3 ))):pattern ((fun_app$p (fun_app$ai (uve$ ?v0 ?v1 )?v2 )?v3 )))):named a41 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$ar (fun_app$af (uvi$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ar (fun_app$af ?v0 ?v2 )(fun_app$aw ?v1 ?v3 ))):pattern ((fun_app$ar (fun_app$af (uvi$ ?v0 ?v1 )?v2 )?v3 )))):named a42 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$as (fun_app$ax (uvg$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ar (fun_app$af ?v0 ?v2 )(fun_app$ah ?v1 ?v3 ))):pattern ((fun_app$as (fun_app$ax (uvg$ ?v0 ?v1 )?v2 )?v3 )))):named a43 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$ar (fun_app$af (uuy$ ?v0 ?v1 )?v2 )?v3 )(fun_app$as (fun_app$ax ?v0 ?v2 )(fun_app$ak ?v1 ?v3 ))):pattern ((fun_app$ar (fun_app$af (uuy$ ?v0 ?v1 )?v2 )?v3 )))):named a44 ))
(assert (! (forall ((?v0 Bool )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$an (fun_app$x (uui$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$an (fun_app$x ?v1 ?v2 )?v3 ))):pattern ((fun_app$an (fun_app$x (uui$ ?v0 ?v1 )?v2 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$ar (fun_app$af (uuh$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$ar (fun_app$af ?v1 ?v2 )?v3 ))):pattern ((fun_app$ar (fun_app$af (uuh$ ?v0 ?v1 )?v2 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$au uue$ ?v0 )?v0 ):pattern ((fun_app$au uue$ ?v0 )))):named a47 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$ad uug$ ?v0 )?v0 ):pattern ((fun_app$ad uug$ ?v0 )))):named a48 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$aw uud$ ?v0 )?v0 ):pattern ((fun_app$aw uud$ ?v0 )))):named a49 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$al uuf$ ?v0 )?v0 ):pattern ((fun_app$al uuf$ ?v0 )))):named a50 ))
(assert (! (not (= (lmap$ uu$ (llist_of_tllist$ bb$ ))a$ )):named a51 ))
(assert (! (= (tmap$ uua$ uub$ bb$ )(tllist_of_llist$a ba$ aa$ )):named a52 ))
(assert (! (= (tmap$a uu$ uuc$ bb$ )(tllist_of_llist$b b$ a$ )):named a53 ))
(assert (! (less_eq$c (tset$c bb$ )(collect$c (case_prod$c y$ ))):named a54 ))
(assert (! (less_eq$b (set2_tllist$c bb$ )(collect$b (case_prod$b ya$ ))):named a55 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 A_b_prod_llist$ ))(= (llist_of_tllist$ (tllist_of_llist$ ?v0 ?v1 ))?v1 )):named a56 ))
(assert (! (forall ((?v0 D$ )(?v1 B_llist$ ))(= (llist_of_tllist$a (tllist_of_llist$a ?v0 ?v1 ))?v1 )):named a57 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist$ ))(= (llist_of_tllist$b (tllist_of_llist$b ?v0 ?v1 ))?v1 )):named a58 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$b ?v0 ?v1 (tllist_of_llist$c ?v2 ?v3 ))(tllist_of_llist$d (fun_app$e ?v1 ?v2 )(lmap$ ?v0 ?v3 )))):named a59 ))
(assert (! (forall ((?v0 B_a_b_prod_fun$ )(?v1 D_c_d_prod_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$c ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$ (fun_app$ay ?v1 ?v2 )(lmap$a ?v0 ?v3 )))):named a60 ))
(assert (! (forall ((?v0 A_a_b_prod_fun$ )(?v1 C_c_d_prod_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$d ?v0 ?v1 (tllist_of_llist$b ?v2 ?v3 ))(tllist_of_llist$ (fun_app$az ?v1 ?v2 )(lmap$b ?v0 ?v3 )))):named a61 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 C_d_prod_c_d_prod_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$e ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$ (fun_app$am ?v1 ?v2 )(lmap$c ?v0 ?v3 )))):named a62 ))
(assert (! (forall ((?v0 A_b_prod_b_fun$ )(?v1 C_d_prod_d_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$ ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$a (fun_app$b ?v1 ?v2 )(lmap$d ?v0 ?v3 )))):named a63 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 C_d_prod_c_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$a ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$b (fun_app$d ?v1 ?v2 )(lmap$ ?v0 ?v3 )))):named a64 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$f ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$a (fun_app$au ?v1 ?v2 )(lmap$e ?v0 ?v3 )))):named a65 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$g ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$b (fun_app$ac ?v1 ?v2 )(lmap$f ?v0 ?v3 )))):named a66 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 C_d_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$h ?v0 ?v1 (tllist_of_llist$b ?v2 ?v3 ))(tllist_of_llist$a (fun_app$z ?v1 ?v2 )(lmap$g ?v0 ?v3 )))):named a67 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$i ?v0 ?v1 (tllist_of_llist$b ?v2 ?v3 ))(tllist_of_llist$b (fun_app$ad ?v1 ?v2 )(lmap$h ?v0 ?v3 )))):named a68 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(= (tmap$f uud$ uue$ ?v0 )?v0 )):named a69 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(= (tmap$i uuf$ uug$ ?v0 )?v0 )):named a70 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$ ?v6 (tset$e ?v0 ))(and (member$ ?v7 (tset$e ?v1 ))(= (fun_app$aw ?v2 ?v6 )(fun_app$aw ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$a ?v6 (set2_tllist$e ?v0 ))(and (member$a ?v7 (set2_tllist$e ?v1 ))(= (fun_app$au ?v4 ?v6 )(fun_app$au ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$f ?v2 ?v4 ?v0 )(tmap$f ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a71 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ )(?v5 D_c_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$ ?v6 (tset$e ?v0 ))(and (member$ ?v7 (tset$e ?v1 ))(= (fun_app$ak ?v2 ?v6 )(fun_app$ak ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$a ?v6 (set2_tllist$e ?v0 ))(and (member$a ?v7 (set2_tllist$e ?v1 ))(= (fun_app$ac ?v4 ?v6 )(fun_app$ac ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$g ?v2 ?v4 ?v0 )(tmap$g ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a72 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (tset$f ?v0 ))(and (member$b ?v7 (tset$f ?v1 ))(= (fun_app$ah ?v2 ?v6 )(fun_app$ah ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$c ?v6 (set2_tllist$f ?v0 ))(and (member$c ?v7 (set2_tllist$f ?v1 ))(= (fun_app$z ?v4 ?v6 )(fun_app$z ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$h ?v2 ?v4 ?v0 )(tmap$h ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a73 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (tset$f ?v0 ))(and (member$b ?v7 (tset$f ?v1 ))(= (fun_app$al ?v2 ?v6 )(fun_app$al ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$c ?v6 (set2_tllist$f ?v0 ))(and (member$c ?v7 (set2_tllist$f ?v1 ))(= (fun_app$ad ?v4 ?v6 )(fun_app$ad ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$i ?v2 ?v4 ?v0 )(tmap$i ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a74 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ )(?v5 A_b_prod_a_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$d ?v6 (tset$d ?v0 ))(and (member$d ?v7 (tset$d ?v1 ))(= (fun_app$e ?v2 ?v6 )(fun_app$e ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$d ?v6 (set2_tllist$d ?v0 ))(and (member$d ?v7 (set2_tllist$d ?v1 ))(= (fun_app$e ?v4 ?v6 )(fun_app$e ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$b ?v2 ?v4 ?v0 )(tmap$b ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 C_d_prod_d_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$d ?v6 (tset$c ?v0 ))(and (member$d ?v7 (tset$c ?v1 ))(= (fun_app$c ?v2 ?v6 )(fun_app$c ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$e ?v6 (set2_tllist$c ?v0 ))(and (member$e ?v7 (set2_tllist$c ?v1 ))(= (fun_app$b ?v4 ?v6 )(fun_app$b ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$ ?v2 ?v4 ?v0 )(tmap$ ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$d ?v6 (tset$c ?v0 ))(and (member$d ?v7 (tset$c ?v1 ))(= (fun_app$e ?v2 ?v6 )(fun_app$e ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$e ?v6 (set2_tllist$c ?v0 ))(and (member$e ?v7 (set2_tllist$c ?v1 ))(= (fun_app$d ?v4 ?v6 )(fun_app$d ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$a ?v2 ?v4 ?v0 )(tmap$a ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$ ?v5 (tset$e ?v0 ))(= (fun_app$aw ?v1 ?v5 )(fun_app$aw ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$a ?v5 (set2_tllist$e ?v0 ))(= (fun_app$au ?v3 ?v5 )(fun_app$au ?v4 ?v5 )))))(= (tmap$f ?v1 ?v3 ?v0 )(tmap$f ?v2 ?v4 ?v0 )))):named a78 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 D_c_fun$ )(?v4 D_c_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$ ?v5 (tset$e ?v0 ))(= (fun_app$ak ?v1 ?v5 )(fun_app$ak ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$a ?v5 (set2_tllist$e ?v0 ))(= (fun_app$ac ?v3 ?v5 )(fun_app$ac ?v4 ?v5 )))))(= (tmap$g ?v1 ?v3 ?v0 )(tmap$g ?v2 ?v4 ?v0 )))):named a79 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_b_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 C_d_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$b ?v5 (tset$f ?v0 ))(= (fun_app$ah ?v1 ?v5 )(fun_app$ah ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$c ?v5 (set2_tllist$f ?v0 ))(= (fun_app$z ?v3 ?v5 )(fun_app$z ?v4 ?v5 )))))(= (tmap$h ?v1 ?v3 ?v0 )(tmap$h ?v2 ?v4 ?v0 )))):named a80 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 C_c_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$b ?v5 (tset$f ?v0 ))(= (fun_app$al ?v1 ?v5 )(fun_app$al ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$c ?v5 (set2_tllist$f ?v0 ))(= (fun_app$ad ?v3 ?v5 )(fun_app$ad ?v4 ?v5 )))))(= (tmap$i ?v1 ?v3 ?v0 )(tmap$i ?v2 ?v4 ?v0 )))):named a81 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$d ?v5 (tset$d ?v0 ))(= (fun_app$e ?v1 ?v5 )(fun_app$e ?v2 ?v5 ))))(forall ((?v5 A_b_prod$ ))(=> (member$d ?v5 (set2_tllist$d ?v0 ))(= (fun_app$e ?v3 ?v5 )(fun_app$e ?v4 ?v5 )))))(= (tmap$b ?v1 ?v3 ?v0 )(tmap$b ?v2 ?v4 ?v0 )))):named a82 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_b_fun$ )(?v2 A_b_prod_b_fun$ )(?v3 C_d_prod_d_fun$ )(?v4 C_d_prod_d_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$d ?v5 (tset$c ?v0 ))(= (fun_app$c ?v1 ?v5 )(fun_app$c ?v2 ?v5 ))))(forall ((?v5 C_d_prod$ ))(=> (member$e ?v5 (set2_tllist$c ?v0 ))(= (fun_app$b ?v3 ?v5 )(fun_app$b ?v4 ?v5 )))))(= (tmap$ ?v1 ?v3 ?v0 )(tmap$ ?v2 ?v4 ?v0 )))):named a83 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 C_d_prod_c_fun$ )(?v4 C_d_prod_c_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$d ?v5 (tset$c ?v0 ))(= (fun_app$e ?v1 ?v5 )(fun_app$e ?v2 ?v5 ))))(forall ((?v5 C_d_prod$ ))(=> (member$e ?v5 (set2_tllist$c ?v0 ))(= (fun_app$d ?v3 ?v5 )(fun_app$d ?v4 ?v5 )))))(= (tmap$a ?v1 ?v3 ?v0 )(tmap$a ?v2 ?v4 ?v0 )))):named a84 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$ ?v6 (tset$e ?v1 ))(= (fun_app$aw ?v2 ?v6 )(fun_app$aw ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$a ?v6 (set2_tllist$e ?v1 ))(= (fun_app$au ?v4 ?v6 )(fun_app$au ?v5 ?v6 ))))))(= (tmap$f ?v2 ?v4 ?v0 )(tmap$f ?v3 ?v5 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ )(?v5 D_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$ ?v6 (tset$e ?v1 ))(= (fun_app$ak ?v2 ?v6 )(fun_app$ak ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$a ?v6 (set2_tllist$e ?v1 ))(= (fun_app$ac ?v4 ?v6 )(fun_app$ac ?v5 ?v6 ))))))(= (tmap$g ?v2 ?v4 ?v0 )(tmap$g ?v3 ?v5 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$b ?v6 (tset$f ?v1 ))(= (fun_app$ah ?v2 ?v6 )(fun_app$ah ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$c ?v6 (set2_tllist$f ?v1 ))(= (fun_app$z ?v4 ?v6 )(fun_app$z ?v5 ?v6 ))))))(= (tmap$h ?v2 ?v4 ?v0 )(tmap$h ?v3 ?v5 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$b ?v6 (tset$f ?v1 ))(= (fun_app$al ?v2 ?v6 )(fun_app$al ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$c ?v6 (set2_tllist$f ?v1 ))(= (fun_app$ad ?v4 ?v6 )(fun_app$ad ?v5 ?v6 ))))))(= (tmap$i ?v2 ?v4 ?v0 )(tmap$i ?v3 ?v5 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ )(?v5 A_b_prod_a_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$d ?v6 (tset$d ?v1 ))(= (fun_app$e ?v2 ?v6 )(fun_app$e ?v3 ?v6 ))))(forall ((?v6 A_b_prod$ ))(=> (member$d ?v6 (set2_tllist$d ?v1 ))(= (fun_app$e ?v4 ?v6 )(fun_app$e ?v5 ?v6 ))))))(= (tmap$b ?v2 ?v4 ?v0 )(tmap$b ?v3 ?v5 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 C_d_prod_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$d ?v6 (tset$c ?v1 ))(= (fun_app$c ?v2 ?v6 )(fun_app$c ?v3 ?v6 ))))(forall ((?v6 C_d_prod$ ))(=> (member$e ?v6 (set2_tllist$c ?v1 ))(= (fun_app$b ?v4 ?v6 )(fun_app$b ?v5 ?v6 ))))))(= (tmap$ ?v2 ?v4 ?v0 )(tmap$ ?v3 ?v5 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$d ?v6 (tset$c ?v1 ))(= (fun_app$e ?v2 ?v6 )(fun_app$e ?v3 ?v6 ))))(forall ((?v6 C_d_prod$ ))(=> (member$e ?v6 (set2_tllist$c ?v1 ))(= (fun_app$d ?v4 ?v6 )(fun_app$d ?v5 ?v6 ))))))(= (tmap$a ?v2 ?v4 ?v0 )(tmap$a ?v3 ?v5 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A_llist$ ))(= (lmap$h uuf$ ?v0 )?v0 )):named a92 ))
(assert (! (forall ((?v0 B_llist$ ))(= (lmap$e uud$ ?v0 )?v0 )):named a93 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod$ ))(= (fun_app$p (case_prod$c (uuh$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$p (case_prod$c ?v1 )?v2 )))):named a94 ))
(assert (! (forall ((?v0 Bool )(?v1 C_d_bool_fun_fun$ )(?v2 C_d_prod$ ))(= (fun_app$n (case_prod$b (uui$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$n (case_prod$b ?v1 )?v2 )))):named a95 ))
(assert (! (forall ((?v0 A_llist_c_a_c_tllist_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$d ?v0 ?v1 )(fun_app$j (fun_app$k ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((case_prod$d ?v0 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 B_llist_d_b_d_tllist_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (case_prod$e ?v0 ?v1 )(fun_app$h (fun_app$i ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$e ?v0 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$p (case_prod$c ?v0 )?v1 )(fun_app$ar (fun_app$af ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$p (case_prod$c ?v0 )?v1 )))):named a98 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$n (case_prod$b ?v0 )?v1 )(fun_app$an (fun_app$x ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$n (case_prod$b ?v0 )?v1 )))):named a99 ))
(assert (! (forall ((?v0 A_llist_c_a_c_tllist_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$d ?v0 ?v1 )(fun_app$j (fun_app$k ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((case_prod$d ?v0 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 B_llist_d_b_d_tllist_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (case_prod$e ?v0 ?v1 )(fun_app$h (fun_app$i ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$e ?v0 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$p (case_prod$c ?v0 )?v1 )(fun_app$ar (fun_app$af ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$p (case_prod$c ?v0 )?v1 )))):named a102 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$n (case_prod$b ?v0 )?v1 )(fun_app$an (fun_app$x ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$n (case_prod$b ?v0 )?v1 )))):named a103 ))
(assert (! (forall ((?v0 C_a_llist_bool_fun_fun$ )(?v1 A_llist_c_prod$ )(?v2 A_c_tllist_bool_fun$ )(?v3 A_llist_c_a_c_tllist_fun_fun$ ))(=> (and (fun_app$ba (fun_app$bb ?v0 (snd$b ?v1 ))(fst$b ?v1 ))(forall ((?v4 A_llist$ )(?v5 C$ ))(=> (fun_app$ba (fun_app$bb ?v0 ?v5 )?v4 )(fun_app$bc ?v2 (fun_app$j (fun_app$k ?v3 ?v4 )?v5 )))))(fun_app$bc ?v2 (case_prod$d ?v3 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 D_b_llist_bool_fun_fun$ )(?v1 B_llist_d_prod$ )(?v2 B_d_tllist_bool_fun$ )(?v3 B_llist_d_b_d_tllist_fun_fun$ ))(=> (and (fun_app$bd (fun_app$be ?v0 (snd$c ?v1 ))(fst$c ?v1 ))(forall ((?v4 B_llist$ )(?v5 D$ ))(=> (fun_app$bd (fun_app$be ?v0 ?v5 )?v4 )(fun_app$bf ?v2 (fun_app$h (fun_app$i ?v3 ?v4 )?v5 )))))(fun_app$bf ?v2 (case_prod$e ?v3 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_prod$ )(?v2 Bool_bool_fun$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$as (fun_app$bg ?v0 (snd$ ?v1 ))(fst$ ?v1 ))(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$as (fun_app$bg ?v0 ?v5 )?v4 )(fun_app$bh ?v2 (fun_app$ar (fun_app$af ?v3 ?v4 )?v5 )))))(fun_app$bh ?v2 (fun_app$p (case_prod$c ?v3 )?v1 )))):named a106 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C_d_prod$ )(?v2 Bool_bool_fun$ )(?v3 C_d_bool_fun_fun$ ))(=> (and (fun_app$ao (fun_app$bi ?v0 (snd$a ?v1 ))(fst$a ?v1 ))(forall ((?v4 C$ )(?v5 D$ ))(=> (fun_app$ao (fun_app$bi ?v0 ?v5 )?v4 )(fun_app$bh ?v2 (fun_app$an (fun_app$x ?v3 ?v4 )?v5 )))))(fun_app$bh ?v2 (fun_app$n (case_prod$b ?v3 )?v1 )))):named a107 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_bool_fun_fun$ ))(=> (member$d ?v0 (collect$c (case_prod$c ?v1 )))(fun_app$ar (fun_app$af ?v1 (fst$ ?v0 ))(snd$ ?v0 )))):named a108 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_bool_fun_fun$ ))(=> (member$e ?v0 (collect$b (case_prod$b ?v1 )))(fun_app$an (fun_app$x ?v1 (fst$a ?v0 ))(snd$a ?v0 )))):named a109 ))
(assert (! (forall ((?v0 A_llist_c_a_c_tllist_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$d ?v0 ?v1 )(fun_app$j (fun_app$k ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((case_prod$d ?v0 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 B_llist_d_b_d_tllist_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (case_prod$e ?v0 ?v1 )(fun_app$h (fun_app$i ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$e ?v0 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$p (case_prod$c ?v0 )?v1 )(fun_app$ar (fun_app$af ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$p (case_prod$c ?v0 )?v1 )))):named a112 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$n (case_prod$b ?v0 )?v1 )(fun_app$an (fun_app$x ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$n (case_prod$b ?v0 )?v1 )))):named a113 ))
(assert (! (forall ((?v0 A_llist_c_a_c_tllist_fun_fun$ )(?v1 A_llist_c_prod$ ))(! (= (case_prod$d ?v0 ?v1 )(fun_app$j (fun_app$k ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((case_prod$d ?v0 ?v1 )))):named a114 ))
(assert (! (forall ((?v0 B_llist_d_b_d_tllist_fun_fun$ )(?v1 B_llist_d_prod$ ))(! (= (case_prod$e ?v0 ?v1 )(fun_app$h (fun_app$i ?v0 (fst$c ?v1 ))(snd$c ?v1 ))):pattern ((case_prod$e ?v0 ?v1 )))):named a115 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$p (case_prod$c ?v0 )?v1 )(fun_app$ar (fun_app$af ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$p (case_prod$c ?v0 )?v1 )))):named a116 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$n (case_prod$b ?v0 )?v1 )(fun_app$an (fun_app$x ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$n (case_prod$b ?v0 )?v1 )))):named a117 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ ?v0 )?v1 )?v2 )?v3 )(exists ((?v4 A_b_prod_a_b_prod_prod_c_d_prod_c_d_prod_prod_tllist$ ))(and (member$f ?v4 (collect$d (uuj$ ?v0 ?v1 )))(and (= (tmap$j uuk$ uul$ ?v4 )?v2 )(= (tmap$j uum$ uun$ ?v4 )?v3 )))))):named a118 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_b_tllist$ ))(= (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 A_b_prod_a_b_prod_tllist$ ))(and (member$g ?v4 (collect$e (uuo$ ?v0 ?v1 )))(and (= (tmap$b uu$ uu$ ?v4 )?v2 )(= (tmap$k uua$ uua$ ?v4 )?v3 )))))):named a119 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 D_b_tllist$ ))(= (tllist_all2$b ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 C_d_prod_a_b_prod_tllist$ ))(and (member$h ?v4 (collect$f (uup$ ?v0 ?v1 )))(and (= (tmap$l uuc$ uu$ ?v4 )?v2 )(= (tmap$m uub$ uua$ ?v4 )?v3 )))))):named a120 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_c_tllist$ )(?v3 D_d_tllist$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 C_d_prod_c_d_prod_tllist$ ))(and (member$i ?v4 (collect$g (uuq$ ?v0 ?v1 )))(and (= (tmap$n uuc$ uuc$ ?v4 )?v2 )(= (tmap$o uub$ uub$ ?v4 )?v3 )))))):named a121 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(= (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )?v2 )?v3 )(exists ((?v4 A_b_prod_c_d_prod_tllist$ ))(and (member$j ?v4 (collect$h (fun_app$u (uur$ ?v0 )?v1 )))(and (= (tmap$a uu$ uuc$ ?v4 )?v2 )(= (tmap$ uua$ uub$ ?v4 )?v3 )))))):named a122 ))
(assert (! (forall ((?v0 C_d_prod_a_b_prod_tllist_set$ )(?v1 C_d_prod_a_b_prod_tllist_set$ ))(=> (forall ((?v2 C_d_prod_a_b_prod_tllist$ ))(=> (member$h ?v2 ?v0 )(member$h ?v2 ?v1 )))(less_eq$d ?v0 ?v1 ))):named a123 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ )(?v1 A_b_prod_c_d_prod_tllist_set$ ))(=> (forall ((?v2 A_b_prod_c_d_prod_tllist$ ))(=> (member$j ?v2 ?v0 )(member$j ?v2 ?v1 )))(less_eq$e ?v0 ?v1 ))):named a124 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist_set$ )(?v1 A_b_prod_a_b_prod_tllist_set$ ))(=> (forall ((?v2 A_b_prod_a_b_prod_tllist$ ))(=> (member$g ?v2 ?v0 )(member$g ?v2 ?v1 )))(less_eq$f ?v0 ?v1 ))):named a125 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ ))(=> (forall ((?v2 A_b_prod$ ))(=> (member$d ?v2 ?v0 )(member$d ?v2 ?v1 )))(less_eq$c ?v0 ?v1 ))):named a126 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ ))(=> (forall ((?v2 C_d_prod$ ))(=> (member$e ?v2 ?v0 )(member$e ?v2 ?v1 )))(less_eq$b ?v0 ?v1 ))):named a127 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 ))(= ?v0 ?v1 ))):named a128 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a129 ))
(assert (! (= (fun_app$bj (tllist_all2$ uus$ )uut$ )uuu$ ):named a130 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_bool_fun$ )(?v1 A_b_prod_c_d_prod_tllist$ ))(=> (forall ((?v2 A_b_prod_llist_c_d_prod_prod$ ))(fun_app$l ?v0 (case_prod$f uuv$ ?v2 )))(fun_app$l ?v0 ?v1 ))):named a131 ))
(assert (! (forall ((?v0 B_d_tllist_bool_fun$ )(?v1 B_d_tllist$ ))(=> (forall ((?v2 B_llist_d_prod$ ))(fun_app$bf ?v0 (case_prod$e uuw$ ?v2 )))(fun_app$bf ?v0 ?v1 ))):named a132 ))
(assert (! (forall ((?v0 A_c_tllist_bool_fun$ )(?v1 A_c_tllist$ ))(=> (forall ((?v2 A_llist_c_prod$ ))(fun_app$bc ?v0 (case_prod$d uux$ ?v2 )))(fun_app$bc ?v0 ?v1 ))):named a133 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ )(?v5 B_d_tllist$ ))(= (fun_app$bc (fun_app$bm (fun_app$bn (tllist_all2$e ?v0 )?v1 )?v2 )(tmap$g ?v3 ?v4 ?v5 ))(fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d (uuy$ ?v0 ?v3 ))(uuz$ ?v1 ?v4 ))?v2 )?v5 ))):named a134 ))
(assert (! (forall ((?v0 A_b_prod_b_bool_fun_fun$ )(?v1 C_d_prod_d_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$bf (fun_app$bo (fun_app$bp (tllist_all2$f ?v0 )?v1 )?v2 )(tmap$ ?v3 ?v4 ?v5 ))(fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ (uva$ ?v0 ?v3 ))(uvb$ ?v1 ?v4 ))?v2 )?v5 ))):named a135 ))
(assert (! (forall ((?v0 A_b_prod_a_bool_fun_fun$ )(?v1 C_d_prod_c_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$bc (fun_app$bq (fun_app$br (tllist_all2$g ?v0 )?v1 )?v2 )(tmap$a ?v3 ?v4 ?v5 ))(fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ (uvc$ ?v0 ?v3 ))(uvd$ ?v1 ?v4 ))?v2 )?v5 ))):named a136 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )?v2 )(tmap$ ?v3 ?v4 ?v5 ))(fun_app$l (fun_app$bs (fun_app$bt (tllist_all2$h (uve$ ?v0 ?v3 ))(uvf$ ?v1 ?v4 ))?v2 )?v5 ))):named a137 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ )(?v5 A_c_tllist$ ))(= (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )?v2 )(tmap$h ?v3 ?v4 ?v5 ))(fun_app$bc (fun_app$bm (fun_app$bn (tllist_all2$e (uvg$ ?v0 ?v3 ))(uvh$ ?v1 ?v4 ))?v2 )?v5 ))):named a138 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 B_d_tllist$ ))(= (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )?v2 )(tmap$f ?v3 ?v4 ?v5 ))(fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d (uvi$ ?v0 ?v3 ))(uvj$ ?v1 ?v4 ))?v2 )?v5 ))):named a139 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_c_tllist$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ )(?v5 D_d_tllist$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 (tmap$p ?v3 ?v4 ?v5 ))(tllist_all2$c (uvj$ ?v0 ?v3 )(uvj$ ?v1 ?v4 )?v2 ?v5 ))):named a140 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 D_d_fun$ )(?v4 B_b_fun$ )(?v5 D_b_tllist$ ))(= (tllist_all2$b ?v0 ?v1 ?v2 (tmap$q ?v3 ?v4 ?v5 ))(tllist_all2$b (uvj$ ?v0 ?v3 )(uvi$ ?v1 ?v4 )?v2 ?v5 ))):named a141 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_b_tllist$ ))(= (tllist_all2$a ?v0 ?v1 ?v2 (tmap$r ?v3 ?v4 ?v5 ))(tllist_all2$a (uvi$ ?v0 ?v3 )(uvi$ ?v1 ?v4 )?v2 ?v5 ))):named a142 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_a_b_prod_fun$ )(?v4 C_d_prod_c_d_prod_fun$ )(?v5 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ ?v0 )?v1 )?v2 )(tmap$e ?v3 ?v4 ?v5 ))(fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ (uvk$ ?v0 ?v3 ))(uvl$ ?v1 ?v4 ))?v2 )?v5 ))):named a143 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 A_c_tllist$ )(?v5 B_d_tllist$ ))(= (fun_app$bf (fun_app$bu (fun_app$bv (tllist_all2$i ?v0 )?v1 )(tmap$h ?v2 ?v3 ?v4 ))?v5 )(fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d (uvm$ ?v0 ?v2 ))(uvn$ ?v1 ?v3 ))?v4 )?v5 ))):named a144 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 B_a_fun$ )(?v3 D_c_fun$ )(?v4 B_d_tllist$ )(?v5 B_d_tllist$ ))(= (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )(tmap$g ?v2 ?v3 ?v4 ))?v5 )(fun_app$bf (fun_app$bu (fun_app$bv (tllist_all2$i (uvo$ ?v0 ?v2 ))(uvp$ ?v1 ?v3 ))?v4 )?v5 ))):named a145 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 A_c_tllist$ )(?v5 B_d_tllist$ ))(= (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )(tmap$i ?v2 ?v3 ?v4 ))?v5 )(fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d (uvq$ ?v0 ?v2 ))(uvr$ ?v1 ?v3 ))?v4 )?v5 ))):named a146 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_c_fun$ )(?v3 C_c_fun$ )(?v4 C_c_tllist$ )(?v5 D_d_tllist$ ))(= (tllist_all2$c ?v0 ?v1 (tmap$s ?v2 ?v3 ?v4 )?v5 )(tllist_all2$c (uvr$ ?v0 ?v2 )(uvr$ ?v1 ?v3 )?v4 ?v5 ))):named a147 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_c_fun$ )(?v3 A_a_fun$ )(?v4 C_a_tllist$ )(?v5 D_b_tllist$ ))(= (tllist_all2$b ?v0 ?v1 (tmap$t ?v2 ?v3 ?v4 )?v5 )(tllist_all2$b (uvr$ ?v0 ?v2 )(uvq$ ?v1 ?v3 )?v4 ?v5 ))):named a148 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 A_a_tllist$ )(?v5 B_b_tllist$ ))(= (tllist_all2$a ?v0 ?v1 (tmap$u ?v2 ?v3 ?v4 )?v5 )(tllist_all2$a (uvq$ ?v0 ?v2 )(uvq$ ?v1 ?v3 )?v4 ?v5 ))):named a149 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 C_d_prod_c_fun$ )(?v4 A_b_prod_c_d_prod_tllist$ )(?v5 B_d_tllist$ ))(= (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )(tmap$a ?v2 ?v3 ?v4 ))?v5 )(fun_app$bf (fun_app$bo (fun_app$bp (tllist_all2$f (uvs$ ?v0 ?v2 ))(uvt$ ?v1 ?v3 ))?v4 )?v5 ))):named a150 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_b_prod_tllist$ )(?v5 B_b_tllist$ ))(= (tllist_all2$a ?v0 ?v1 (tmap$b ?v2 ?v3 ?v4 )?v5 )(tllist_all2$j (uvs$ ?v0 ?v2 )(uvs$ ?v1 ?v3 )?v4 ?v5 ))):named a151 ))
(assert (! (forall ((?v0 B_a_b_prod_bool_fun_fun$ )(?v1 D_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_b_fun$ )(?v3 C_d_prod_d_fun$ )(?v4 A_b_prod_c_d_prod_tllist$ )(?v5 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$l (fun_app$bw (fun_app$bx (tllist_all2$k ?v0 )?v1 )(tmap$ ?v2 ?v3 ?v4 ))?v5 )(fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ (uvu$ ?v0 ?v2 ))(uvv$ ?v1 ?v3 ))?v4 )?v5 ))):named a152 ))
(assert (! (forall ((?v0 A_a_b_prod_bool_fun_fun$ )(?v1 C_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 C_d_prod_c_fun$ )(?v4 A_b_prod_c_d_prod_tllist$ )(?v5 A_b_prod_c_d_prod_tllist$ ))(= (fun_app$l (fun_app$bs (fun_app$bt (tllist_all2$h ?v0 )?v1 )(tmap$a ?v2 ?v3 ?v4 ))?v5 )(fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ (uvw$ ?v0 ?v2 ))(uvx$ ?v1 ?v3 ))?v4 )?v5 ))):named a153 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_c_d_prod_tllist$ )(?v4 A_b_prod_a_b_prod_bool_fun_fun$ )(?v5 C_d_prod_c_d_prod_bool_fun_fun$ ))(=> (and (fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ ?v0 )?v1 )?v2 )?v3 )(and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$d ?v6 (tset$c ?v2 ))(and (member$d ?v7 (tset$c ?v3 ))(fun_app$p (fun_app$q ?v0 ?v6 )?v7 )))(fun_app$p (fun_app$q ?v4 ?v6 )?v7 )))(forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$e ?v6 (set2_tllist$c ?v2 ))(and (member$e ?v7 (set2_tllist$c ?v3 ))(fun_app$n (fun_app$o ?v1 ?v6 )?v7 )))(fun_app$n (fun_app$o ?v5 ?v6 )?v7 )))))(fun_app$l (fun_app$m (fun_app$bj (tllist_all2$ ?v4 )?v5 )?v2 )?v3 ))):named a154 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v0 )?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (tset$f ?v2 ))(and (member$ ?v7 (tset$e ?v3 ))(fun_app$ar (fun_app$af ?v0 ?v6 )?v7 )))(fun_app$ar (fun_app$af ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (and (member$c ?v6 (set2_tllist$f ?v2 ))(and (member$a ?v7 (set2_tllist$e ?v3 ))(fun_app$an (fun_app$x ?v1 ?v6 )?v7 )))(fun_app$an (fun_app$x ?v5 ?v6 )?v7 )))))(fun_app$bf (fun_app$bk (fun_app$bl (tllist_all2$d ?v4 )?v5 )?v2 )?v3 ))):named a155 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_c_tllist$ )(?v3 D_d_tllist$ )(?v4 C_d_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 C$ )(?v7 D$ ))(=> (and (member$c ?v6 (tset$g ?v2 ))(and (member$a ?v7 (tset$h ?v3 ))(fun_app$an (fun_app$x ?v0 ?v6 )?v7 )))(fun_app$an (fun_app$x ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (and (member$c ?v6 (set2_tllist$g ?v2 ))(and (member$a ?v7 (set2_tllist$h ?v3 ))(fun_app$an (fun_app$x ?v1 ?v6 )?v7 )))(fun_app$an (fun_app$x ?v5 ?v6 )?v7 )))))(tllist_all2$c ?v4 ?v5 ?v2 ?v3 ))):named a156 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 D_b_tllist$ )(?v4 C_d_bool_fun_fun$ )(?v5 A_b_bool_fun_fun$ ))(=> (and (tllist_all2$b ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 C$ )(?v7 D$ ))(=> (and (member$c ?v6 (tset$i ?v2 ))(and (member$a ?v7 (tset$j ?v3 ))(fun_app$an (fun_app$x ?v0 ?v6 )?v7 )))(fun_app$an (fun_app$x ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (set2_tllist$i ?v2 ))(and (member$ ?v7 (set2_tllist$j ?v3 ))(fun_app$ar (fun_app$af ?v1 ?v6 )?v7 )))(fun_app$ar (fun_app$af ?v5 ?v6 )?v7 )))))(tllist_all2$b ?v4 ?v5 ?v2 ?v3 ))):named a157 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_b_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 A_b_bool_fun_fun$ ))(=> (and (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (tset$k ?v2 ))(and (member$ ?v7 (tset$l ?v3 ))(fun_app$ar (fun_app$af ?v0 ?v6 )?v7 )))(fun_app$ar (fun_app$af ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 B$ ))(=> (and (member$b ?v6 (set2_tllist$k ?v2 ))(and (member$ ?v7 (set2_tllist$l ?v3 ))(fun_app$ar (fun_app$af ?v1 ?v6 )?v7 )))(fun_app$ar (fun_app$af ?v5 ?v6 )?v7 )))))(tllist_all2$a ?v4 ?v5 ?v2 ?v3 ))):named a158 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 C_d_prod_c_d_prod_tllist$ )(?v4 A_b_prod_c_d_prod_bool_fun_fun$ )(?v5 C_d_prod_c_d_prod_bool_fun_fun$ ))(=> (and (tllist_all2$l ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A_b_prod$ )(?v7 C_d_prod$ ))(=> (and (member$d ?v6 (tset$c ?v2 ))(and (member$e ?v7 (tset$a ?v3 ))(fun_app$n (fun_app$by ?v0 ?v6 )?v7 )))(fun_app$n (fun_app$by ?v4 ?v6 )?v7 )))(forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$e ?v6 (set2_tllist$c ?v2 ))(and (member$e ?v7 (set2_tllist$a ?v3 ))(fun_app$n (fun_app$o ?v1 ?v6 )?v7 )))(fun_app$n (fun_app$o ?v5 ?v6 )?v7 )))))(tllist_all2$l ?v4 ?v5 ?v2 ?v3 ))):named a159 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_bool_fun_fun$ )(?v1 C_d_prod_a_b_prod_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 C_d_prod_a_b_prod_tllist$ )(?v4 A_b_prod_c_d_prod_bool_fun_fun$ )(?v5 C_d_prod_a_b_prod_bool_fun_fun$ ))(=> (and (tllist_all2$m ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A_b_prod$ )(?v7 C_d_prod$ ))(=> (and (member$d ?v6 (tset$c ?v2 ))(and (member$e ?v7 (tset$b ?v3 ))(fun_app$n (fun_app$by ?v0 ?v6 )?v7 )))(fun_app$n (fun_app$by ?v4 ?v6 )?v7 )))(forall ((?v6 C_d_prod$ )(?v7 A_b_prod$ ))(=> (and (member$e ?v6 (set2_tllist$c ?v2 ))(and (member$d ?v7 (set2_tllist$b ?v3 ))(fun_app$p (fun_app$bz ?v1 ?v6 )?v7 )))(fun_app$p (fun_app$bz ?v5 ?v6 )?v7 )))))(tllist_all2$m ?v4 ?v5 ?v2 ?v3 ))):named a160 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_bool_fun_fun$ )(?v1 C_d_prod_a_b_prod_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ )(?v3 A_b_prod_a_b_prod_tllist$ )(?v4 A_b_prod_a_b_prod_bool_fun_fun$ )(?v5 C_d_prod_a_b_prod_bool_fun_fun$ ))(=> (and (tllist_all2$n ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$d ?v6 (tset$c ?v2 ))(and (member$d ?v7 (tset$d ?v3 ))(fun_app$p (fun_app$q ?v0 ?v6 )?v7 )))(fun_app$p (fun_app$q ?v4 ?v6 )?v7 )))(forall ((?v6 C_d_prod$ )(?v7 A_b_prod$ ))(=> (and (member$e ?v6 (set2_tllist$c ?v2 ))(and (member$d ?v7 (set2_tllist$d ?v3 ))(fun_app$p (fun_app$bz ?v1 ?v6 )?v7 )))(fun_app$p (fun_app$bz ?v5 ?v6 )?v7 )))))(tllist_all2$n ?v4 ?v5 ?v2 ?v3 ))):named a161 ))
(assert (! (forall ((?v0 C_d_prod_a_b_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 C_d_prod_c_d_prod_tllist$ )(?v3 A_b_prod_c_d_prod_tllist$ )(?v4 C_d_prod_a_b_prod_bool_fun_fun$ )(?v5 C_d_prod_c_d_prod_bool_fun_fun$ ))(=> (and (fun_app$l (fun_app$ca (fun_app$cb (tllist_all2$o ?v0 )?v1 )?v2 )?v3 )(and (forall ((?v6 C_d_prod$ )(?v7 A_b_prod$ ))(=> (and (member$e ?v6 (tset$a ?v2 ))(and (member$d ?v7 (tset$c ?v3 ))(fun_app$p (fun_app$bz ?v0 ?v6 )?v7 )))(fun_app$p (fun_app$bz ?v4 ?v6 )?v7 )))(forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$e ?v6 (set2_tllist$a ?v2 ))(and (member$e ?v7 (set2_tllist$c ?v3 ))(fun_app$n (fun_app$o ?v1 ?v6 )?v7 )))(fun_app$n (fun_app$o ?v5 ?v6 )?v7 )))))(fun_app$l (fun_app$ca (fun_app$cb (tllist_all2$o ?v4 )?v5 )?v2 )?v3 ))):named a162 ))
(assert (! (forall ((?v0 C_d_prod_c_d_prod_bool_fun_fun$ )(?v1 C_d_prod_c_d_prod_bool_fun_fun$ )(?v2 C_d_prod_c_d_prod_tllist$ )(?v3 C_d_prod_c_d_prod_tllist$ )(?v4 C_d_prod_c_d_prod_bool_fun_fun$ )(?v5 C_d_prod_c_d_prod_bool_fun_fun$ ))(=> (and (tllist_all2$p ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$e ?v6 (tset$a ?v2 ))(and (member$e ?v7 (tset$a ?v3 ))(fun_app$n (fun_app$o ?v0 ?v6 )?v7 )))(fun_app$n (fun_app$o ?v4 ?v6 )?v7 )))(forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$e ?v6 (set2_tllist$a ?v2 ))(and (member$e ?v7 (set2_tllist$a ?v3 ))(fun_app$n (fun_app$o ?v1 ?v6 )?v7 )))(fun_app$n (fun_app$o ?v5 ?v6 )?v7 )))))(tllist_all2$p ?v4 ?v5 ?v2 ?v3 ))):named a163 ))
(assert (! (forall ((?v0 A_llist_c_prod$ )(?v1 A_llist_c_prod$ )(?v2 A_llist_c_a_c_tllist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$d ?v2 ?v0 )(case_prod$d ?v2 ?v1 )))):named a164 ))
(assert (! (forall ((?v0 B_llist_d_prod$ )(?v1 B_llist_d_prod$ )(?v2 B_llist_d_b_d_tllist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$e ?v2 ?v0 )(case_prod$e ?v2 ?v1 )))):named a165 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod$ )(?v2 A_b_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$p (case_prod$c ?v2 )?v0 )(fun_app$p (case_prod$c ?v2 )?v1 )))):named a166 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod$ )(?v2 C_d_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$n (case_prod$b ?v2 )?v0 )(fun_app$n (case_prod$b ?v2 )?v1 )))):named a167 ))
(assert (! (forall ((?v0 A_b_prod_set$ ))(less_eq$c ?v0 ?v0 )):named a168 ))
(assert (! (forall ((?v0 C_d_prod_set$ ))(less_eq$b ?v0 ?v0 )):named a169 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist_set$ )(?v1 A_b_prod_c_d_prod_tllist_set$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(=> (and (less_eq$e ?v0 ?v1 )(member$j ?v2 ?v0 ))(member$j ?v2 ?v1 ))):named a170 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist_set$ )(?v1 A_b_prod_a_b_prod_tllist_set$ )(?v2 A_b_prod_a_b_prod_tllist$ ))(=> (and (less_eq$f ?v0 ?v1 )(member$g ?v2 ?v0 ))(member$g ?v2 ?v1 ))):named a171 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod$ ))(=> (and (less_eq$c ?v0 ?v1 )(member$d ?v2 ?v0 ))(member$d ?v2 ?v1 ))):named a172 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod$ ))(=> (and (less_eq$b ?v0 ?v1 )(member$e ?v2 ?v0 ))(member$e ?v2 ?v1 ))):named a173 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod$ ))(=> (and (less_eq$c ?v0 ?v1 )(not (member$d ?v2 ?v1 )))(not (member$d ?v2 ?v0 )))):named a174 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod$ ))(=> (and (less_eq$b ?v0 ?v1 )(not (member$e ?v2 ?v1 )))(not (member$e ?v2 ?v0 )))):named a175 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v2 ))(less_eq$c ?v0 ?v2 ))):named a176 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v2 ))(less_eq$b ?v0 ?v2 ))):named a177 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod$ ))(=> (and (less_eq$c ?v0 ?v1 )(member$d ?v2 ?v0 ))(member$d ?v2 ?v1 ))):named a178 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod$ ))(=> (and (less_eq$b ?v0 ?v1 )(member$e ?v2 ?v0 ))(member$e ?v2 ?v1 ))):named a179 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod$ ))(=> (and (less_eq$c ?v0 ?v1 )(member$d ?v2 ?v0 ))(member$d ?v2 ?v1 ))):named a180 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod$ ))(=> (and (less_eq$b ?v0 ?v1 )(member$e ?v2 ?v0 ))(member$e ?v2 ?v1 ))):named a181 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod$ ))(=> (and (less_eq$c ?v0 ?v1 )(and (=> (not (member$d ?v2 ?v0 ))false )(=> (member$d ?v2 ?v1 )false )))false )):named a182 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod$ ))(=> (and (less_eq$b ?v0 ?v1 )(and (=> (not (member$e ?v2 ?v0 ))false )(=> (member$e ?v2 ?v1 )false )))false )):named a183 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_set$ ))(=> (and (member$d ?v0 ?v1 )(less_eq$c ?v1 ?v2 ))(member$d ?v0 ?v2 ))):named a184 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod_set$ ))(=> (and (member$e ?v0 ?v1 )(less_eq$b ?v1 ?v2 ))(member$e ?v0 ?v2 ))):named a185 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_set$ )(?v2 A_b_prod_set$ ))(=> (and (member$d ?v0 ?v1 )(less_eq$c ?v1 ?v2 ))(member$d ?v0 ?v2 ))):named a186 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod_set$ )(?v2 C_d_prod_set$ ))(=> (and (member$e ?v0 ?v1 )(less_eq$b ?v1 ?v2 ))(member$e ?v0 ?v2 ))):named a187 ))
(assert (! (forall ((?v0 A_b_prod_set$ )(?v1 A_b_prod_set$ ))(=> (= ?v0 ?v1 )(less_eq$c ?v0 ?v1 ))):named a188 ))
(assert (! (forall ((?v0 C_d_prod_set$ )(?v1 C_d_prod_set$ ))(=> (= ?v0 ?v1 )(less_eq$b ?v0 ?v1 ))):named a189 ))
(check-sat )
;(get-unsat-core )
