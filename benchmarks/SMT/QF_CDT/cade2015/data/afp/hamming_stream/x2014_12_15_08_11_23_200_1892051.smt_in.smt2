;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Enat_enat_fun$ 0 )
(declare-datatypes ()((Nat_option$ (none$ )(some$ (the$ Nat$ )))(Enat$ (abs_enat$ (rep_enat$ Nat_option$ )))))
(declare-fun m$ ()Enat$ )
(declare-fun n$ ()Enat$ )
(declare-fun inf$ (Enat$ )Enat_enat_fun$ )
(declare-fun eSuc$ (Enat$ )Enat$ )
(declare-fun fun_app$ (Enat_enat_fun$ Enat$ )Enat$ )
(assert (! (not (= (fun_app$ (inf$ (eSuc$ n$ ))(eSuc$ m$ ))(eSuc$ (fun_app$ (inf$ n$ )m$ )))):named a0 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (= (eSuc$ ?v0 )(eSuc$ ?v1 ))(= ?v0 ?v1 ))):named a1 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (= (eSuc$ ?v0 )(eSuc$ ?v1 ))(= ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ (fun_app$ (inf$ ?v0 )?v1 ))?v1 )(fun_app$ (inf$ ?v0 )?v1 ))):named a3 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ (fun_app$ (inf$ ?v0 )?v1 ))?v1 )(fun_app$ (inf$ ?v0 )?v1 ))):named a4 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v0 )?v1 ))(fun_app$ (inf$ ?v0 )?v1 ))):named a5 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v0 )?v1 ))(fun_app$ (inf$ ?v0 )?v1 ))):named a6 ))
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$ (inf$ ?v0 )?v0 )?v0 ):pattern ((inf$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$ (inf$ ?v0 )?v0 )?v0 ):pattern ((inf$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ )(?v2 Enat$ ))(= (fun_app$ (inf$ (fun_app$ (inf$ ?v0 )?v1 ))?v2 )(fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ )(?v2 Enat$ ))(= (fun_app$ (inf$ (fun_app$ (inf$ ?v0 )?v1 ))?v2 )(fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ )(?v2 Enat$ ))(= (fun_app$ (inf$ (fun_app$ (inf$ ?v0 )?v1 ))?v2 )(fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ ?v0 )?v1 )(fun_app$ (inf$ ?v1 )?v0 ))):named a12 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ ?v0 )?v1 )(fun_app$ (inf$ ?v1 )?v0 ))):named a13 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ ?v0 )?v1 )(fun_app$ (inf$ ?v1 )?v0 ))):named a14 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (fun_app$ (inf$ ?v0 )(fun_app$ (inf$ ?v0 )?v1 ))(fun_app$ (inf$ ?v0 )?v1 ))):named a15 ))
(check-sat )
;(get-unsat-core )
