;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort Nat_a_option_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort Nat_a_llist_option_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-datatypes ()((A_option$ (none$ )(some$ (the$ A$ )))))
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-datatypes ()((A_llist_llist_option$ (none$a )(some$a (the$a A_llist_llist$ )))(A_llist_option$ (none$b )(some$b (the$b A_llist$ )))))
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun ran$ (Nat_a_llist_option_fun$ )A_llist_set$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun ll2f$ (A_llist$ )Nat_a_option_fun$ )
(declare-fun lrev$ (A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lset$ (A_llist_llist$ )A_llist_set$ )
(declare-fun ran$a (Nat_a_option_fun$ )A_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun ll2f$a (A_llist_llist_llist$ Nat$ )A_llist_llist_option$ )
(declare-fun ll2f$b (A_llist_llist$ )Nat_a_llist_option_fun$ )
(declare-fun lrev$a (A_llist_llist$ )A_llist_llist$ )
(declare-fun lrev$b (A_llist$ )A_llist$ )
(declare-fun lset$a (A_llist$ )A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (Nat_a_option_fun$ Nat$ )A_option$ )
(declare-fun is_none$ (A_llist_option$ )Bool )
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun llength$ (A_llist$ )Nat$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun alllsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$b (A_set$ )A_llist_set$ )
(declare-fun alllsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fun_app$a (Nat_a_llist_option_fun$ Nat$ )A_llist_option$ )
(declare-fun is_none$a (A_option$ )Bool )
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(declare-fun lappend$b (A_llist$ A_llist$ )A_llist$ )
(declare-fun llength$a (A_llist_llist_llist$ )Nat$ )
(declare-fun llength$b (A_llist_llist$ )Nat$ )
(assert (! (not (= (fun_app$ (ll2f$ r$ )(llength$ r$ ))none$ )):named a0 ))
(assert (! (member$ r$ (finlsts$ a$ )):named a1 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 Nat$ ))(=> (= (ll2f$a ?v0 ?v1 )none$a )(member$a ?v0 (finlsts$a top$ )))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 Nat$ ))(=> (= (fun_app$a (ll2f$b ?v0 )?v1 )none$b )(member$b ?v0 (finlsts$b top$a )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat$ ))(=> (= (fun_app$ (ll2f$ ?v0 )?v1 )none$ )(member$ ?v0 (finlsts$ top$b )))):named a4 ))
(assert (! (forall ((?v0 A_llist_option$ ))(=> (and (=> (= ?v0 none$b )false )(=> (not (= ?v0 none$b ))false ))false )):named a5 ))
(assert (! (forall ((?v0 A_option$ ))(=> (and (=> (= ?v0 none$ )false )(=> (not (= ?v0 none$ ))false ))false )):named a6 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (ll2f$b lNil$a )?v0 )none$b ):pattern ((fun_app$a (ll2f$b lNil$a )?v0 )))):named a7 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$ (ll2f$ lNil$ )?v0 )none$ ):pattern ((fun_app$ (ll2f$ lNil$ )?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a (lrev$ ?v0 )(finlsts$a ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b (lrev$a ?v0 )(finlsts$b ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ (lrev$b ?v0 )(finlsts$ ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (lset$ ?v0 )(ran$ (ll2f$b ?v0 ))):pattern ((lset$ ?v0 )))):named a12 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (lset$a ?v0 )(ran$a (ll2f$ ?v0 ))):pattern ((lset$a ?v0 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$ ?v2 )))(member$a ?v0 (finlsts$a ?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$a ?v2 )))(member$b ?v0 (finlsts$b ?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v2 )))(member$ ?v0 (finlsts$ ?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$ ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$a ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(= (llength$a (lCons$b ?v2 ?v0 ))(suc$ (llength$a ?v0 ))))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(= (llength$b (lCons$a ?v2 ?v0 ))(suc$ (llength$b ?v0 ))))):named a21 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (llength$ (lCons$ ?v2 ?v0 ))(suc$ (llength$ ?v0 ))))):named a22 ))
(assert (! (forall ((?v0 A_llist_option$ ))(! (= (is_none$ ?v0 )(= ?v0 none$b )):pattern ((is_none$ ?v0 )))):named a23 ))
(assert (! (forall ((?v0 A_option$ ))(! (= (is_none$a ?v0 )(= ?v0 none$ )):pattern ((is_none$a ?v0 )))):named a24 ))
(assert (! (= (is_none$ none$b )true ):named a25 ))
(assert (! (= (is_none$a none$ )true ):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lappend$ ?v0 ?v1 )(finlsts$a ?v2 ))(and (member$a ?v0 (finlsts$a ?v2 ))(member$a ?v1 (finlsts$a ?v2 ))))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lappend$a ?v0 ?v1 )(finlsts$b ?v2 ))(and (member$b ?v0 (finlsts$b ?v2 ))(member$b ?v1 (finlsts$b ?v2 ))))):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lappend$b ?v0 ?v1 )(finlsts$ ?v2 ))(and (member$ ?v0 (finlsts$ ?v2 ))(member$ ?v1 (finlsts$ ?v2 ))))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(= (= (lappend$ ?v0 ?v2 )(lappend$ ?v0 ?v3 ))(= ?v2 ?v3 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(= (= (lappend$a ?v0 ?v2 )(lappend$a ?v0 ?v3 ))(= ?v2 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (= (lappend$b ?v0 ?v2 )(lappend$b ?v0 ?v3 ))(= ?v2 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= lNil$a (lappend$a ?v0 ?v1 ))(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a33 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= lNil$ (lappend$b ?v0 ?v1 ))(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= (lappend$a ?v0 ?v1 )lNil$a )(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a35 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= (lappend$b ?v0 ?v1 )lNil$ )(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$a ?v0 (alllsts$ top$ ))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 (alllsts$a top$a ))):named a38 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$b top$b ))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$c (lCons$c ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$a ?v0 ?v2 )(member$c ?v1 (alllsts$c ?v2 ))))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lCons$b ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (alllsts$ ?v2 ))))):named a41 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lCons$a ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$ ?v0 ?v2 )(member$b ?v1 (alllsts$a ?v2 ))))):named a42 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$d ?v0 ?v2 )(member$ ?v1 (alllsts$b ?v2 ))))):named a43 ))
(assert (! (= (lrev$a lNil$a )lNil$a ):named a44 ))
(assert (! (= (lrev$b lNil$ )lNil$ ):named a45 ))
(check-sat )
;(get-unsat-core )
