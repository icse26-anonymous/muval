;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun xs$ ()A_llist$ )
(declare-fun top$ ()A_set$ )
(declare-fun lrev$ (A_llist$ )A_llist$ )
(declare-fun top$a ()A_llist_llist_set$ )
(declare-fun top$b ()A_llist_set$ )
(declare-fun lrev$a (A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lrev$b (A_llist_llist$ )A_llist_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(declare-fun lappend$b (A_llist$ A_llist$ )A_llist$ )
(assert (! (not (= (lrev$ (lrev$ xs$ ))xs$ )):named a0 ))
(assert (! (member$ xs$ (finlsts$ top$ )):named a1 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a (lrev$a ?v0 )(finlsts$a ?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b (lrev$b ?v0 )(finlsts$b ?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ (lrev$ ?v0 )(finlsts$ ?v1 )))):named a4 ))
(assert (! (= (lrev$a lNil$b )lNil$b ):named a5 ))
(assert (! (= (lrev$b lNil$a )lNil$a ):named a6 ))
(assert (! (= (lrev$ lNil$ )lNil$ ):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a top$a ))(member$a ?v1 (finlsts$a top$a )))(= (lrev$a (lappend$ ?v0 ?v1 ))(lappend$ (lrev$a ?v1 )(lrev$a ?v0 ))))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$b top$b ))(member$b ?v1 (finlsts$b top$b )))(= (lrev$b (lappend$a ?v0 ?v1 ))(lappend$a (lrev$b ?v1 )(lrev$b ?v0 ))))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ top$ ))(member$ ?v1 (finlsts$ top$ )))(= (lrev$ (lappend$b ?v0 ?v1 ))(lappend$b (lrev$ ?v1 )(lrev$ ?v0 ))))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(not (member$a ?v0 (finlsts$a top$a ))))false )):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(not (member$b ?v0 (finlsts$b top$b ))))false )):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$ ))))false )):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (finlsts$a top$a )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (finlsts$b top$b )))):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (finlsts$ top$ )))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(= (lrev$a (lCons$b ?v2 ?v0 ))(lappend$ (lrev$a ?v0 )(lCons$b ?v2 lNil$b ))))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(= (lrev$b (lCons$a ?v2 ?v0 ))(lappend$a (lrev$b ?v0 )(lCons$a ?v2 lNil$a ))))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (lrev$ (lCons$ ?v2 ?v0 ))(lappend$b (lrev$ ?v0 )(lCons$ ?v2 lNil$ ))))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= lNil$b (lappend$ ?v0 ?v1 ))(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= lNil$ (lappend$b ?v0 ?v1 ))(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= lNil$a (lappend$a ?v0 ?v1 ))(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= (lappend$ ?v0 ?v1 )lNil$b )(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a23 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= (lappend$b ?v0 ?v1 )lNil$ )(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= (lappend$a ?v0 ?v1 )lNil$a )(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lappend$ ?v0 ?v1 )(finlsts$a ?v2 ))(and (member$a ?v0 (finlsts$a ?v2 ))(member$a ?v1 (finlsts$a ?v2 ))))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lappend$a ?v0 ?v1 )(finlsts$b ?v2 ))(and (member$b ?v0 (finlsts$b ?v2 ))(member$b ?v1 (finlsts$b ?v2 ))))):named a27 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lappend$b ?v0 ?v1 )(finlsts$ ?v2 ))(and (member$ ?v0 (finlsts$ ?v2 ))(member$ ?v1 (finlsts$ ?v2 ))))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(= (= (lappend$ ?v0 ?v2 )(lappend$ ?v0 ?v3 ))(= ?v2 ?v3 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(= (= (lappend$a ?v0 ?v2 )(lappend$a ?v0 ?v3 ))(= ?v2 ?v3 )))):named a30 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (= (lappend$b ?v0 ?v2 )(lappend$b ?v0 ?v3 ))(= ?v2 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$c ?v0 (finlsts$c ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (finlsts$c ?v1 ))(member$a ?v3 ?v1 ))))))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (finlsts$a ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (finlsts$a ?v1 ))(member$b ?v3 ?v1 ))))))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (finlsts$b ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (finlsts$b ?v1 ))(member$ ?v3 ?v1 ))))))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (finlsts$ ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$d ?v3 ?v1 ))))))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (= ?v0 lNil$b )false )(forall ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (= ?v0 (lCons$b ?v1 ?v2 ))false )))false )):named a36 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a37 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (= ?v0 lNil$a )false )(forall ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))false )))false )):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (member$a (lappend$ ?v0 ?v1 )(finlsts$a ?v2 ))(member$a ?v0 (finlsts$a ?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (member$b (lappend$a ?v0 ?v1 )(finlsts$b ?v2 ))(member$b ?v0 (finlsts$b ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (member$ (lappend$b ?v0 ?v1 )(finlsts$ ?v2 ))(member$ ?v0 (finlsts$ ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (finlsts$c ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a42 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (finlsts$a ?v1 ))(member$b ?v3 ?v1 )))false ))))false )):named a43 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (finlsts$b ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a44 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a45 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist_llist_bool_fun$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(and (forall ((?v3 A_llist_llist_llist_llist$ ))(=> (= ?v3 lNil$c )(fun_app$ ?v2 ?v3 )))(forall ((?v3 A_llist_llist_llist$ )(?v4 A_llist_llist_llist_llist$ ))(=> (and (member$c ?v4 (finlsts$c ?v1 ))(and (fun_app$ ?v2 ?v4 )(member$a ?v3 ?v1 )))(fun_app$ ?v2 (lCons$c ?v3 ?v4 ))))))(fun_app$ ?v2 ?v0 ))):named a46 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist_bool_fun$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(and (forall ((?v3 A_llist_llist_llist$ ))(=> (= ?v3 lNil$b )(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_llist_llist$ )(?v4 A_llist_llist_llist$ ))(=> (and (member$a ?v4 (finlsts$a ?v1 ))(and (fun_app$a ?v2 ?v4 )(member$b ?v3 ?v1 )))(fun_app$a ?v2 (lCons$b ?v3 ?v4 ))))))(fun_app$a ?v2 ?v0 ))):named a47 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist_bool_fun$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(and (forall ((?v3 A_llist_llist$ ))(=> (= ?v3 lNil$a )(fun_app$b ?v2 ?v3 )))(forall ((?v3 A_llist$ )(?v4 A_llist_llist$ ))(=> (and (member$b ?v4 (finlsts$b ?v1 ))(and (fun_app$b ?v2 ?v4 )(member$ ?v3 ?v1 )))(fun_app$b ?v2 (lCons$a ?v3 ?v4 ))))))(fun_app$b ?v2 ?v0 ))):named a48 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist_bool_fun$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (forall ((?v3 A_llist$ ))(=> (= ?v3 lNil$ )(fun_app$c ?v2 ?v3 )))(forall ((?v3 A$ )(?v4 A_llist$ ))(=> (and (member$ ?v4 (finlsts$ ?v1 ))(and (fun_app$c ?v2 ?v4 )(member$d ?v3 ?v1 )))(fun_app$c ?v2 (lCons$ ?v3 ?v4 ))))))(fun_app$c ?v2 ?v0 ))):named a49 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v2 (finlsts$a ?v1 )))(member$a (lappend$ ?v0 ?v2 )(finlsts$a ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v2 (finlsts$b ?v1 )))(member$b (lappend$a ?v0 ?v2 )(finlsts$b ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v2 (finlsts$ ?v1 )))(member$ (lappend$b ?v0 ?v2 )(finlsts$ ?v1 )))):named a52 ))
(check-sat )
;(get-unsat-core )
