;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun a$ ()A$ )
(declare-fun l$ ()A_llist$ )
(declare-fun a$a ()A_set$ )
(declare-fun top$ ()A_set$ )
(declare-fun lrev$ (A_llist_llist$ )A_llist_llist$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_llist_llist_set$ )
(declare-fun ldrop$ (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun lrev$a (A_llist$ )A_llist$ )
(declare-fun ltake$ (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun lconst$ (A$ )A_llist$ )
(declare-fun ldrop$a (A_llist$ Nat$ )A_llist$ )
(declare-fun ltake$a (A_llist$ Nat$ )A_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun inflsts$ (A_llist_set$ )A_llist_llist_set$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun finlsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun inflsts$a (A_set$ )A_llist_set$ )
(assert (! (not (not (= (lconst$ a$ )l$ ))):named a0 ))
(assert (! (member$ l$ (finlsts$ top$ )):named a1 ))
(assert (! (member$a a$ a$a ):named a2 ))
(assert (! (member$ (lconst$ a$ )(finlsts$ top$ )):named a3 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(not (member$b ?v0 (finlsts$a top$a ))))false )):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$ ))))false )):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$a ?v1 ))(member$b ?v0 (finlsts$a top$a )))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (finlsts$ top$ )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (member$b ?v0 top$b )true )):named a8 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$ ?v0 top$a )true )):named a9 ))
(assert (! (forall ((?v0 A$ ))(= (member$a ?v0 top$ )true )):named a10 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 top$b )):named a11 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 top$a )):named a12 ))
(assert (! (forall ((?v0 A$ ))(member$a ?v0 top$ )):named a13 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$a top$a ))(member$b ?v1 (finlsts$a top$a )))(= (= (lrev$ ?v0 )(lrev$ ?v1 ))(= ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ top$ ))(member$ ?v1 (finlsts$ top$ )))(= (= (lrev$a ?v0 )(lrev$a ?v1 ))(= ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (member$b ?v0 (finlsts$a top$a ))(= (lrev$ (lrev$ ?v0 ))?v0 ))):named a16 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (member$ ?v0 (finlsts$ top$ ))(= (lrev$a (lrev$a ?v0 ))?v0 ))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 Nat$ ))(member$b (ltake$ ?v0 ?v1 )(finlsts$a top$a ))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat$ ))(member$ (ltake$a ?v0 ?v1 )(finlsts$ top$ ))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 Nat$ ))(= (member$b (ldrop$ ?v0 ?v1 )(finlsts$a top$a ))(member$b ?v0 (finlsts$a top$a )))):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat$ ))(= (member$ (ldrop$a ?v0 ?v1 )(finlsts$ top$ ))(member$ ?v0 (finlsts$ top$ )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist$ ))(member$b ?v1 ?v0 ))(= top$b ?v0 ))):named a22 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(member$ ?v1 ?v0 ))(= top$a ?v0 ))):named a23 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(member$a ?v1 ?v0 ))(= top$ ?v0 ))):named a24 ))
(assert (! (exists ((?v0 A_llist_llist$ ))(member$b ?v0 top$b )):named a25 ))
(assert (! (exists ((?v0 A_llist$ ))(member$ ?v0 top$a )):named a26 ))
(assert (! (exists ((?v0 A$ ))(member$a ?v0 top$ )):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (not (member$b ?v0 (finlsts$a top$a )))(member$b ?v0 (inflsts$ top$a )))):named a28 ))
(assert (! (forall ((?v0 A_llist$ ))(= (not (member$ ?v0 (finlsts$ top$ )))(member$ ?v0 (inflsts$a top$ )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (not (member$b ?v0 (inflsts$ top$a )))(member$b ?v0 (finlsts$a top$a )))):named a30 ))
(assert (! (forall ((?v0 A_llist$ ))(= (not (member$ ?v0 (inflsts$a top$ )))(member$ ?v0 (finlsts$ top$ )))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$a ?v1 ))(member$b (lrev$ ?v0 )(finlsts$a ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ (lrev$a ?v0 )(finlsts$ ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 Nat$ ))(= (member$b (ldrop$ ?v0 ?v1 )(inflsts$ top$a ))(member$b ?v0 (inflsts$ top$a )))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat$ ))(= (member$ (ldrop$a ?v0 ?v1 )(inflsts$a top$ ))(member$ ?v0 (inflsts$a top$ )))):named a35 ))
(check-sat )
;(get-unsat-core )
