;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A$ )
(declare-fun a$a ()A_set$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun ldrop$ (A_llist_llist_llist$ Nat$ )A_llist_llist_llist$ )
(declare-fun lconst$ (A$ )A_llist$ )
(declare-fun ldrop$a (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun ldrop$b (A_llist$ Nat$ )A_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun inflsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun lconst$a (A_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lconst$b (A_llist$ )A_llist_llist$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun alllsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllstsp$ (A_llist_llist_bool_fun$ )A_llist_llist_llist_bool_fun$ )
(declare-fun finlstsp$ (A_llist_llist_bool_fun$ )A_llist_llist_llist_bool_fun$ )
(declare-fun fun_app$a (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$d (A_bool_fun$ A$ )Bool )
(declare-fun inflsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun inflsts$b (A_set$ )A_llist_set$ )
(declare-fun inflsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun alllstsp$a (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun alllstsp$b (A_bool_fun$ )A_llist_bool_fun$ )
(declare-fun finlstsp$a (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun finlstsp$b (A_bool_fun$ )A_llist_bool_fun$ )
(assert (! (not (exists ((?v0 A_llist$ )(?v1 A$ ))(and (= (lconst$ a$ )(lCons$ ?v1 ?v0 ))(and (or (= ?v0 (lconst$ a$ ))(member$ ?v0 (alllsts$ a$a )))(member$a ?v1 a$a ))))):named a0 ))
(assert (! (member$a a$ a$a ):named a1 ))
(assert (! (= (lconst$ a$ )(lCons$ a$ (lconst$ a$ ))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$b (lCons$c ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$c ?v0 ?v2 )(member$b ?v1 (alllsts$a ?v2 ))))):named a3 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$c (lCons$b ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$d ?v0 ?v2 )(member$c ?v1 (alllsts$b ?v2 ))))):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$d (lCons$a ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$ ?v0 ?v2 )(member$d ?v1 (alllsts$c ?v2 ))))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$a ?v0 ?v2 )(member$ ?v1 (alllsts$ ?v2 ))))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (lconst$a ?v0 )(lCons$b ?v0 (lconst$a ?v0 ))):pattern ((lconst$a ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (lconst$b ?v0 )(lCons$a ?v0 (lconst$b ?v0 ))):pattern ((lconst$b ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A$ ))(! (= (lconst$ ?v0 )(lCons$ ?v0 (lconst$ ?v0 ))):pattern ((lconst$ ?v0 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$c ?v2 ?v0 )(alllsts$a ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (alllsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$c (lCons$b ?v2 ?v0 )(alllsts$b ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$d ?v0 (alllsts$c ?v1 ))(member$ ?v2 ?v1 ))(member$d (lCons$a ?v2 ?v0 )(alllsts$c ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(alllsts$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a14 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a15 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$b ?v0 (alllsts$a ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$b ?v2 (alllsts$a ?v1 ))(member$c ?v3 ?v1 ))))))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$c ?v0 (alllsts$b ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$c ?v2 (alllsts$b ?v1 ))(member$d ?v3 ?v1 ))))))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$d ?v0 (alllsts$c ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$d ?v2 (alllsts$c ?v1 ))(member$ ?v3 ?v1 ))))))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (alllsts$ ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$ ?v1 ))(member$a ?v3 ?v1 ))))))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$b ?v2 (alllsts$a ?v1 ))(member$c ?v3 ?v1 )))false ))))false )):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (alllsts$b ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$c ?v2 (alllsts$b ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a22 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (alllsts$c ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$d ?v2 (alllsts$c ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a23 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$ ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(=> (and (fun_app$ ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist_llist$ ))(=> (fun_app$ ?v0 ?v3 )(or (= ?v3 lNil$c )(exists ((?v4 A_llist_llist_llist_llist$ )(?v5 A_llist_llist_llist$ ))(and (= ?v3 (lCons$c ?v5 ?v4 ))(and (or (fun_app$ ?v0 ?v4 )(member$b ?v4 (alllsts$a ?v2 )))(member$c ?v5 ?v2 ))))))))(member$b ?v1 (alllsts$a ?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist$ ))(=> (fun_app$a ?v0 ?v3 )(or (= ?v3 lNil$b )(exists ((?v4 A_llist_llist_llist$ )(?v5 A_llist_llist$ ))(and (= ?v3 (lCons$b ?v5 ?v4 ))(and (or (fun_app$a ?v0 ?v4 )(member$c ?v4 (alllsts$b ?v2 )))(member$d ?v5 ?v2 ))))))))(member$c ?v1 (alllsts$b ?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_llist_llist$ ))(=> (fun_app$b ?v0 ?v3 )(or (= ?v3 lNil$a )(exists ((?v4 A_llist_llist$ )(?v5 A_llist$ ))(and (= ?v3 (lCons$a ?v5 ?v4 ))(and (or (fun_app$b ?v0 ?v4 )(member$d ?v4 (alllsts$c ?v2 )))(member$ ?v5 ?v2 ))))))))(member$d ?v1 (alllsts$c ?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (and (fun_app$c ?v0 ?v1 )(forall ((?v3 A_llist$ ))(=> (fun_app$c ?v0 ?v3 )(or (= ?v3 lNil$ )(exists ((?v4 A_llist$ )(?v5 A$ ))(and (= ?v3 (lCons$ ?v5 ?v4 ))(and (or (fun_app$c ?v0 ?v4 )(member$ ?v4 (alllsts$ ?v2 )))(member$a ?v5 ?v2 ))))))))(member$ ?v1 (alllsts$ ?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (fun_app$a (finlstsp$ ?v0 )?v1 )(fun_app$b ?v0 ?v2 ))(fun_app$a (finlstsp$ ?v0 )(lCons$b ?v2 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$b (finlstsp$a ?v0 )?v1 )(fun_app$c ?v0 ?v2 ))(fun_app$b (finlstsp$a ?v0 )(lCons$a ?v2 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 A$ ))(=> (and (fun_app$c (finlstsp$b ?v0 )?v1 )(fun_app$d ?v0 ?v2 ))(fun_app$c (finlstsp$b ?v0 )(lCons$ ?v2 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (fun_app$a (alllstsp$ ?v0 )?v1 )(fun_app$b ?v0 ?v2 ))(fun_app$a (alllstsp$ ?v0 )(lCons$b ?v2 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$b (alllstsp$a ?v0 )?v1 )(fun_app$c ?v0 ?v2 ))(fun_app$b (alllstsp$a ?v0 )(lCons$a ?v2 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 A$ ))(=> (and (fun_app$c (alllstsp$b ?v0 )?v1 )(fun_app$d ?v0 ?v2 ))(fun_app$c (alllstsp$b ?v0 )(lCons$ ?v2 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 Nat$ ))(=> (member$c ?v0 (alllsts$b ?v1 ))(member$c (ldrop$ ?v0 ?v2 )(alllsts$b ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 Nat$ ))(=> (member$d ?v0 (alllsts$c ?v1 ))(member$d (ldrop$a ?v0 ?v2 )(alllsts$c ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 Nat$ ))(=> (member$ ?v0 (alllsts$ ?v1 ))(member$ (ldrop$b ?v0 ?v2 )(alllsts$ ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(not (= (lconst$a ?v0 )lNil$b ))):named a38 ))
(assert (! (forall ((?v0 A_llist$ ))(not (= (lconst$b ?v0 )lNil$a ))):named a39 ))
(assert (! (forall ((?v0 A$ ))(not (= (lconst$ ?v0 )lNil$ ))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$c ?v0 (alllsts$b top$ ))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$d ?v0 (alllsts$c top$a ))):named a42 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$ top$b ))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$c ?v0 (inflsts$ ?v1 ))(member$c ?v0 (alllsts$b ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$d ?v0 (inflsts$a ?v1 ))(member$d ?v0 (alllsts$c ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (inflsts$b ?v1 ))(member$ ?v0 (alllsts$ ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$b ?v0 (inflsts$c ?v1 ))(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist_llist$ ))(=> (and (member$b ?v3 (inflsts$c ?v1 ))(and (member$c ?v2 ?v1 )(= ?v0 (lCons$c ?v2 ?v3 ))))false )))false )):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (inflsts$ ?v1 ))(forall ((?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (member$c ?v3 (inflsts$ ?v1 ))(and (member$d ?v2 ?v1 )(= ?v0 (lCons$b ?v2 ?v3 ))))false )))false )):named a48 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (inflsts$a ?v1 ))(forall ((?v2 A_llist$ )(?v3 A_llist_llist$ ))(=> (and (member$d ?v3 (inflsts$a ?v1 ))(and (member$ ?v2 ?v1 )(= ?v0 (lCons$a ?v2 ?v3 ))))false )))false )):named a49 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (inflsts$b ?v1 ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (member$ ?v3 (inflsts$b ?v1 ))(and (member$a ?v2 ?v1 )(= ?v0 (lCons$ ?v2 ?v3 ))))false )))false )):named a50 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist_llist$ ))(=> (and (member$c ?v0 ?v1 )(member$b ?v2 (inflsts$c ?v1 )))(member$b (lCons$c ?v0 ?v2 )(inflsts$c ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$d ?v0 ?v1 )(member$c ?v2 (inflsts$ ?v1 )))(member$c (lCons$b ?v0 ?v2 )(inflsts$ ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$ ?v0 ?v1 )(member$d ?v2 (inflsts$a ?v1 )))(member$d (lCons$a ?v0 ?v2 )(inflsts$a ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$a ?v0 ?v1 )(member$ ?v2 (inflsts$b ?v1 )))(member$ (lCons$ ?v0 ?v2 )(inflsts$b ?v1 )))):named a54 ))
(check-sat )
;(get-unsat-core )
