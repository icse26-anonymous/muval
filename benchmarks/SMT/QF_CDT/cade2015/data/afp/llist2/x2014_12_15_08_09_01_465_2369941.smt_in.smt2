;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort Nat_a_option_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-datatypes ()((A_option$ (none$ )(some$ (the$ A$ )))))
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun i$ ()Nat$ )
(declare-fun t$ ()A_llist$ )
(declare-fun ran$ (Nat_a_option_fun$ )A_set$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun ll2f$ (A_llist$ )Nat_a_option_fun$ )
(declare-fun lset$ (A_llist$ )A_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fun_app$ (Nat_a_option_fun$ Nat$ )A_option$ )
(declare-fun inflsts$ (A_set$ )A_llist_set$ )
(declare-fun is_none$ (A_option$ )Bool )
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun alllsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$b (A_set$ )A_llist_set$ )
(declare-fun alllsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fun_app$a (A_bool_fun$ A$ )Bool )
(declare-fun inflsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun inflsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(declare-fun lappend$b (A_llist$ A_llist$ )A_llist$ )
(declare-fun pred_option$ (A_bool_fun$ A_option$ )Bool )
(assert (! (not (exists ((?v0 A$ ))(= (fun_app$ (ll2f$ t$ )i$ )(some$ ?v0 )))):named a0 ))
(assert (! (member$ t$ (inflsts$ a$ )):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (some$ ?v0 )(some$ ?v1 ))(= ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (lset$ ?v0 )(ran$ (ll2f$ ?v0 ))):pattern ((lset$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ ))(! (= (pred_option$ ?v0 (some$ ?v1 ))(fun_app$a ?v0 ?v1 )):pattern ((pred_option$ ?v0 (some$ ?v1 ))))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (inflsts$a ?v1 ))(member$a ?v0 (alllsts$ ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (inflsts$b ?v1 ))(member$b ?v0 (alllsts$a ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A$ ))(! (= (is_none$ (some$ ?v0 ))false ):pattern ((some$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (member$a ?v0 (inflsts$a ?v1 ))(= (lappend$ ?v0 ?v2 )?v0 ))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$b ?v0 (inflsts$b ?v1 ))(= (lappend$a ?v0 ?v2 )?v0 ))):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(= (lappend$b ?v0 ?v2 )?v0 ))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (inflsts$a ?v1 ))(member$a ?v0 (inflsts$a top$ )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (inflsts$b ?v1 ))(member$b ?v0 (inflsts$b top$a )))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(member$ ?v0 (inflsts$ top$b )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$c ?v0 (inflsts$c ?v1 ))(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist_llist$ ))(=> (and (member$c ?v3 (inflsts$c ?v1 ))(and (member$a ?v2 ?v1 )(= ?v0 (lCons$c ?v2 ?v3 ))))false )))false )):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (inflsts$a ?v1 ))(forall ((?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (member$a ?v3 (inflsts$a ?v1 ))(and (member$b ?v2 ?v1 )(= ?v0 (lCons$b ?v2 ?v3 ))))false )))false )):named a16 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (inflsts$b ?v1 ))(forall ((?v2 A_llist$ )(?v3 A_llist_llist$ ))(=> (and (member$b ?v3 (inflsts$b ?v1 ))(and (member$ ?v2 ?v1 )(= ?v0 (lCons$a ?v2 ?v3 ))))false )))false )):named a17 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (inflsts$ ?v1 ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (member$ ?v3 (inflsts$ ?v1 ))(and (member$d ?v2 ?v1 )(= ?v0 (lCons$ ?v2 ?v3 ))))false )))false )):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist_llist$ ))(=> (and (member$a ?v0 ?v1 )(member$c ?v2 (inflsts$c ?v1 )))(member$c (lCons$c ?v0 ?v2 )(inflsts$c ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 ?v1 )(member$a ?v2 (inflsts$a ?v1 )))(member$a (lCons$b ?v0 ?v2 )(inflsts$a ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$ ?v0 ?v1 )(member$b ?v2 (inflsts$b ?v1 )))(member$b (lCons$a ?v0 ?v2 )(inflsts$b ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$d ?v0 ?v1 )(member$ ?v2 (inflsts$ ?v1 )))(member$ (lCons$ ?v0 ?v2 )(inflsts$ ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$a ?v0 (alllsts$ top$ ))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 (alllsts$a top$a ))):named a24 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$b top$b ))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$c (lCons$c ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$a ?v0 ?v2 )(member$c ?v1 (alllsts$c ?v2 ))))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lCons$b ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (alllsts$ ?v2 ))))):named a27 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lCons$a ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$ ?v0 ?v2 )(member$b ?v1 (alllsts$a ?v2 ))))):named a28 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$d ?v0 ?v2 )(member$ ?v1 (alllsts$b ?v2 ))))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (member$a (lappend$ ?v0 ?v1 )(alllsts$ ?v2 ))(member$a ?v0 (alllsts$ ?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (member$b (lappend$a ?v0 ?v1 )(alllsts$a ?v2 ))(member$b ?v0 (alllsts$a ?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (member$ (lappend$b ?v0 ?v1 )(alllsts$b ?v2 ))(member$ ?v0 (alllsts$b ?v2 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$ ?v1 ))(member$a ?v2 (alllsts$ ?v1 )))(member$a (lappend$ ?v0 ?v2 )(alllsts$ ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$b ?v2 (alllsts$a ?v1 )))(member$b (lappend$a ?v0 ?v2 )(alllsts$a ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (alllsts$b ?v1 ))(member$ ?v2 (alllsts$b ?v1 )))(member$ (lappend$b ?v0 ?v2 )(alllsts$b ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$c ?v0 (alllsts$c ?v1 ))(member$a ?v2 ?v1 ))(member$c (lCons$c ?v2 ?v0 )(alllsts$c ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$ ?v1 ))(member$b ?v2 ?v1 ))(member$a (lCons$b ?v2 ?v0 )(alllsts$ ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$ ?v2 ?v1 ))(member$b (lCons$a ?v2 ?v0 )(alllsts$a ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (alllsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(alllsts$b ?v1 )))):named a39 ))
(check-sat )
;(get-unsat-core )
