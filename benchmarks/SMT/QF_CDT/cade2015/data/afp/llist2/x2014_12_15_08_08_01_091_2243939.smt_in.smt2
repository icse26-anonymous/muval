;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun s$ ()A_llist$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_set$ )A_llist_set$ )
(declare-fun finlsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$ (A_set$ )A_llist_set$ )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun less_eq$ (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun poslsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$b (A_set$ )A_llist_set$ )
(declare-fun inflsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun lappend$a (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lappend$b (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(declare-fun less_eq$a (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$b (A_llist_set$ A_llist_set$ )Bool )
(declare-fun less_eq$c (A_set$ A_set$ )Bool )
(declare-fun poslsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun poslsts$b (A_set$ )A_llist_set$ )
(assert (! (not (member$ r$ (alllsts$ a$ ))):named a0 ))
(assert (! (member$ (lappend$ r$ s$ )(alllsts$ a$ )):named a1 ))
(assert (! (not (member$ r$ (inflsts$ a$ ))):named a2 ))
(assert (! (member$ (lappend$ r$ s$ )(inflsts$ a$ )):named a3 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (member$a (lappend$a ?v0 ?v1 )(alllsts$a ?v2 ))(member$a ?v0 (alllsts$a ?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (member$b (lappend$b ?v0 ?v1 )(alllsts$b ?v2 ))(member$b ?v0 (alllsts$b ?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (member$ (lappend$ ?v0 ?v1 )(alllsts$ ?v2 ))(member$ ?v0 (alllsts$ ?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$a ?v1 ))(member$a ?v2 (alllsts$a ?v1 )))(member$a (lappend$a ?v0 ?v2 )(alllsts$a ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (alllsts$b ?v1 ))(member$b ?v2 (alllsts$b ?v1 )))(member$b (lappend$b ?v0 ?v2 )(alllsts$b ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(member$ ?v2 (alllsts$ ?v1 )))(member$ (lappend$ ?v0 ?v2 )(alllsts$ ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (inflsts$a ?v1 ))(member$a ?v0 (alllsts$a ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (inflsts$b ?v1 ))(member$b ?v0 (alllsts$b ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(member$ ?v0 (alllsts$ ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$a ?v0 (alllsts$a top$ ))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 (alllsts$b top$a ))):named a14 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$ top$b ))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$c (lCons$c ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$a ?v0 ?v2 )(member$c ?v1 (alllsts$c ?v2 ))))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lCons$b ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (alllsts$a ?v2 ))))):named a17 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lCons$a ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$ ?v0 ?v2 )(member$b ?v1 (alllsts$b ?v2 ))))):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$d ?v0 ?v2 )(member$ ?v1 (alllsts$ ?v2 ))))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$ ?v1 ))(member$a ?v0 (alllsts$a ?v2 )))(member$a ?v0 (finlsts$ ?v2 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$b ?v0 (alllsts$b ?v2 )))(member$b ?v0 (finlsts$a ?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$ ?v0 (finlsts$b ?v1 ))(member$ ?v0 (alllsts$ ?v2 )))(member$ ?v0 (finlsts$b ?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$ ?v1 ))(member$a ?v0 (alllsts$a ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$a ?v1 ))(member$b ?v0 (alllsts$b ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$b ?v1 ))(member$ ?v0 (alllsts$ ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$a lNil$b (alllsts$a ?v0 ))):named a26 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$b lNil$a (alllsts$b ?v0 ))):named a27 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (alllsts$ ?v0 ))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$c ?v0 (alllsts$c ?v1 ))(member$a ?v2 ?v1 ))(member$c (lCons$c ?v2 ?v0 )(alllsts$c ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$a ?v1 ))(member$b ?v2 ?v1 ))(member$a (lCons$b ?v2 ?v0 )(alllsts$a ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$b ?v0 (alllsts$b ?v1 ))(member$ ?v2 ?v1 ))(member$b (lCons$a ?v2 ?v0 )(alllsts$b ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(member$d ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(alllsts$ ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (poslsts$ ?v1 ))(and (member$a ?v0 (alllsts$a ?v1 ))(not (= ?v0 lNil$b ))))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (poslsts$a ?v1 ))(and (member$b ?v0 (alllsts$b ?v1 ))(not (= ?v0 lNil$a ))))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (poslsts$b ?v1 ))(and (member$ ?v0 (alllsts$ ?v1 ))(not (= ?v0 lNil$ ))))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (alllsts$a ?v1 ))(and (=> (member$a ?v0 (finlsts$ ?v1 ))false )(=> (member$a ?v0 (inflsts$a ?v1 ))false )))false )):named a36 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (alllsts$b ?v1 ))(and (=> (member$b ?v0 (finlsts$a ?v1 ))false )(=> (member$b ?v0 (inflsts$b ?v1 ))false )))false )):named a37 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(and (=> (member$ ?v0 (finlsts$b ?v1 ))false )(=> (member$ ?v0 (inflsts$ ?v1 ))false )))false )):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$a (alllsts$a ?v0 )(alllsts$a ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$ (alllsts$b ?v0 )(alllsts$b ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$b (alllsts$ ?v0 )(alllsts$ ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= lNil$a (lappend$b ?v0 ?v1 ))(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a42 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= lNil$ (lappend$ ?v0 ?v1 ))(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= (lappend$b ?v0 ?v1 )lNil$a )(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a44 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= (lappend$ ?v0 ?v1 )lNil$ )(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a45 ))
(check-sat )
;(get-unsat-core )
