;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_a_llist_llist_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_fun$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun s$ ()A_llist$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fpslsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fun_app$ (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun lappend$ (A_llist$ )A_llist_a_llist_fun$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun alllsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$b (A_set$ )A_llist_set$ )
(declare-fun alllsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fpslsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$b (A_set$ )A_llist_set$ )
(declare-fun fpslsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_a_llist_llist_llist_fun$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun fun_app$b (A_llist_llist_a_llist_llist_fun$ A_llist_llist$ )A_llist_llist$ )
(declare-fun fun_app$c (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun fun_app$d (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$e (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$f (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun lappend$a (A_llist_llist_llist$ )A_llist_llist_llist_a_llist_llist_llist_fun$ )
(declare-fun lappend$b (A_llist_llist$ )A_llist_llist_a_llist_llist_fun$ )
(assert (! (not (member$ r$ (finlsts$ a$ ))):named a0 ))
(assert (! (member$ (fun_app$ (lappend$ r$ )s$ )(finlsts$ a$ )):named a1 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(= (= (fun_app$a (lappend$a ?v0 )?v2 )(fun_app$a (lappend$a ?v0 )?v3 ))(= ?v2 ?v3 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(= (= (fun_app$b (lappend$b ?v0 )?v2 )(fun_app$b (lappend$b ?v0 )?v3 ))(= ?v2 ?v3 )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (= (fun_app$ (lappend$ ?v0 )?v2 )(fun_app$ (lappend$ ?v0 )?v3 ))(= ?v2 ?v3 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v2 (finlsts$a ?v1 )))(member$a (fun_app$a (lappend$a ?v0 )?v2 )(finlsts$a ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v2 (finlsts$b ?v1 )))(member$b (fun_app$b (lappend$b ?v0 )?v2 )(finlsts$b ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v2 (finlsts$ ?v1 )))(member$ (fun_app$ (lappend$ ?v0 )?v2 )(finlsts$ ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$ ?v2 )))(member$a ?v0 (finlsts$a ?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$a ?v2 )))(member$b ?v0 (finlsts$b ?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v2 )))(member$ ?v0 (finlsts$ ?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$ ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$a ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(not (member$a ?v0 (finlsts$a top$ ))))false )):named a14 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(not (member$b ?v0 (finlsts$b top$a ))))false )):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$b ))))false )):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (finlsts$a top$ )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (finlsts$b top$a )))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (finlsts$ top$b )))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$a lNil$b (finlsts$a ?v0 ))):named a20 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$b lNil$a (finlsts$b ?v0 ))):named a21 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (finlsts$ ?v0 ))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(member$a ?v2 ?v1 ))(member$c (lCons$c ?v2 ?v0 )(finlsts$c ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$b ?v2 ?v1 ))(member$a (lCons$b ?v2 ?v0 )(finlsts$a ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$ ?v2 ?v1 ))(member$b (lCons$a ?v2 ?v0 )(finlsts$b ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$d ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(finlsts$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (fpslsts$ ?v1 ))(and (member$a ?v0 (finlsts$a ?v1 ))(not (= ?v0 lNil$b ))))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (fpslsts$a ?v1 ))(and (member$b ?v0 (finlsts$b ?v1 ))(not (= ?v0 lNil$a ))))):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (fpslsts$b ?v1 ))(and (member$ ?v0 (finlsts$ ?v1 ))(not (= ?v0 lNil$ ))))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$c ?v0 (fpslsts$c ?v1 ))(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$c ?v3 (finlsts$c ?v1 ))))false )))false )):named a30 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (fpslsts$ ?v1 ))(forall ((?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (finlsts$a ?v1 ))))false )))false )):named a31 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (fpslsts$a ?v1 ))(forall ((?v2 A_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$a ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$b ?v3 (finlsts$b ?v1 ))))false )))false )):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (fpslsts$b ?v1 ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$ ?v2 ?v3 ))(and (member$d ?v2 ?v1 )(member$ ?v3 (finlsts$ ?v1 ))))false )))false )):named a33 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= lNil$b (fun_app$a (lappend$a ?v0 )?v1 ))(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= lNil$a (fun_app$b (lappend$b ?v0 )?v1 ))(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a35 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= lNil$ (fun_app$ (lappend$ ?v0 )?v1 ))(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= (fun_app$a (lappend$a ?v0 )?v1 )lNil$b )(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= (fun_app$b (lappend$b ?v0 )?v1 )lNil$a )(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a38 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= (fun_app$ (lappend$ ?v0 )?v1 )lNil$ )(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$a ?v0 (alllsts$ top$ ))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 (alllsts$a top$a ))):named a41 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$b top$b ))):named a42 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$c (lCons$c ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$a ?v0 ?v2 )(member$c ?v1 (alllsts$c ?v2 ))))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lCons$b ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (alllsts$ ?v2 ))))):named a44 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lCons$a ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$ ?v0 ?v2 )(member$b ?v1 (alllsts$a ?v2 ))))):named a45 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$d ?v0 ?v2 )(member$ ?v1 (alllsts$b ?v2 ))))):named a46 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$c ?v0 (alllsts$c ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (alllsts$c ?v1 ))(member$a ?v3 ?v1 ))))))):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (alllsts$ ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (alllsts$ ?v1 ))(member$b ?v3 ?v1 ))))))):named a48 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (alllsts$a ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (alllsts$a ?v1 ))(member$ ?v3 ?v1 ))))))):named a49 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (alllsts$b ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$b ?v1 ))(member$d ?v3 ?v1 ))))))):named a50 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (= ?v0 lNil$b )false )(forall ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (= ?v0 (lCons$b ?v1 ?v2 ))false )))false )):named a51 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a52 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (= ?v0 lNil$a )false )(forall ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))false )))false )):named a53 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$c ?v0 (alllsts$c ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (alllsts$c ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a54 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (alllsts$ ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (alllsts$ ?v1 ))(member$b ?v3 ?v1 )))false ))))false )):named a55 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (alllsts$a ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a56 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (alllsts$b ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$b ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a57 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$ ?v1 ))(member$a ?v2 (alllsts$ ?v1 )))(member$a (fun_app$a (lappend$a ?v0 )?v2 )(alllsts$ ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$b ?v2 (alllsts$a ?v1 )))(member$b (fun_app$b (lappend$b ?v0 )?v2 )(alllsts$a ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (alllsts$b ?v1 ))(member$ ?v2 (alllsts$b ?v1 )))(member$ (fun_app$ (lappend$ ?v0 )?v2 )(alllsts$b ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$c ?v0 (alllsts$c ?v1 ))(member$a ?v2 ?v1 ))(member$c (lCons$c ?v2 ?v0 )(alllsts$c ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$ ?v1 ))(member$b ?v2 ?v1 ))(member$a (lCons$b ?v2 ?v0 )(alllsts$ ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$ ?v2 ?v1 ))(member$b (lCons$a ?v2 ?v0 )(alllsts$a ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (alllsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(alllsts$b ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(=> (and (fun_app$c ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist_llist$ ))(=> (fun_app$c ?v0 ?v3 )(or (= ?v3 lNil$c )(exists ((?v4 A_llist_llist_llist_llist$ )(?v5 A_llist_llist_llist$ ))(and (= ?v3 (lCons$c ?v5 ?v4 ))(and (or (fun_app$c ?v0 ?v4 )(member$c ?v4 (alllsts$c ?v2 )))(member$a ?v5 ?v2 ))))))))(member$c ?v1 (alllsts$c ?v2 )))):named a65 ))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (and (fun_app$d ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist$ ))(=> (fun_app$d ?v0 ?v3 )(or (= ?v3 lNil$b )(exists ((?v4 A_llist_llist_llist$ )(?v5 A_llist_llist$ ))(and (= ?v3 (lCons$b ?v5 ?v4 ))(and (or (fun_app$d ?v0 ?v4 )(member$a ?v4 (alllsts$ ?v2 )))(member$b ?v5 ?v2 ))))))))(member$a ?v1 (alllsts$ ?v2 )))):named a66 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (and (fun_app$e ?v0 ?v1 )(forall ((?v3 A_llist_llist$ ))(=> (fun_app$e ?v0 ?v3 )(or (= ?v3 lNil$a )(exists ((?v4 A_llist_llist$ )(?v5 A_llist$ ))(and (= ?v3 (lCons$a ?v5 ?v4 ))(and (or (fun_app$e ?v0 ?v4 )(member$b ?v4 (alllsts$a ?v2 )))(member$ ?v5 ?v2 ))))))))(member$b ?v1 (alllsts$a ?v2 )))):named a67 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (and (fun_app$f ?v0 ?v1 )(forall ((?v3 A_llist$ ))(=> (fun_app$f ?v0 ?v3 )(or (= ?v3 lNil$ )(exists ((?v4 A_llist$ )(?v5 A$ ))(and (= ?v3 (lCons$ ?v5 ?v4 ))(and (or (fun_app$f ?v0 ?v4 )(member$ ?v4 (alllsts$b ?v2 )))(member$d ?v5 ?v2 ))))))))(member$ ?v1 (alllsts$b ?v2 )))):named a68 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$a lNil$b (alllsts$ ?v0 ))):named a69 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$b lNil$a (alllsts$a ?v0 ))):named a70 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (alllsts$b ?v0 ))):named a71 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist_llist_bool_fun$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(and (forall ((?v3 A_llist_llist_llist_llist$ ))(=> (= ?v3 lNil$c )(fun_app$c ?v2 ?v3 )))(forall ((?v3 A_llist_llist_llist$ )(?v4 A_llist_llist_llist_llist$ ))(=> (and (member$c ?v4 (finlsts$c ?v1 ))(and (fun_app$c ?v2 ?v4 )(member$a ?v3 ?v1 )))(fun_app$c ?v2 (lCons$c ?v3 ?v4 ))))))(fun_app$c ?v2 ?v0 ))):named a72 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist_bool_fun$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(and (forall ((?v3 A_llist_llist_llist$ ))(=> (= ?v3 lNil$b )(fun_app$d ?v2 ?v3 )))(forall ((?v3 A_llist_llist$ )(?v4 A_llist_llist_llist$ ))(=> (and (member$a ?v4 (finlsts$a ?v1 ))(and (fun_app$d ?v2 ?v4 )(member$b ?v3 ?v1 )))(fun_app$d ?v2 (lCons$b ?v3 ?v4 ))))))(fun_app$d ?v2 ?v0 ))):named a73 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist_bool_fun$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(and (forall ((?v3 A_llist_llist$ ))(=> (= ?v3 lNil$a )(fun_app$e ?v2 ?v3 )))(forall ((?v3 A_llist$ )(?v4 A_llist_llist$ ))(=> (and (member$b ?v4 (finlsts$b ?v1 ))(and (fun_app$e ?v2 ?v4 )(member$ ?v3 ?v1 )))(fun_app$e ?v2 (lCons$a ?v3 ?v4 ))))))(fun_app$e ?v2 ?v0 ))):named a74 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist_bool_fun$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (forall ((?v3 A_llist$ ))(=> (= ?v3 lNil$ )(fun_app$f ?v2 ?v3 )))(forall ((?v3 A$ )(?v4 A_llist$ ))(=> (and (member$ ?v4 (finlsts$ ?v1 ))(and (fun_app$f ?v2 ?v4 )(member$d ?v3 ?v1 )))(fun_app$f ?v2 (lCons$ ?v3 ?v4 ))))))(fun_app$f ?v2 ?v0 ))):named a75 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (finlsts$c ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a76 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (finlsts$a ?v1 ))(member$b ?v3 ?v1 )))false ))))false )):named a77 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (finlsts$b ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a78 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a79 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$c ?v0 (finlsts$c ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (finlsts$c ?v1 ))(member$a ?v3 ?v1 ))))))):named a80 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (finlsts$a ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (finlsts$a ?v1 ))(member$b ?v3 ?v1 ))))))):named a81 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (finlsts$b ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (finlsts$b ?v1 ))(member$ ?v3 ?v1 ))))))):named a82 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (finlsts$ ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$d ?v3 ?v1 ))))))):named a83 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= lNil$b (fun_app$a (lappend$a ?v0 )?v1 ))(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a84 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= lNil$a (fun_app$b (lappend$b ?v0 )?v1 ))(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a85 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= lNil$ (fun_app$ (lappend$ ?v0 )?v1 ))(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a86 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ ))(= (= (fun_app$a (lappend$a ?v0 )?v1 )lNil$b )(and (= ?v0 lNil$b )(= ?v1 lNil$b )))):named a87 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= (fun_app$b (lappend$b ?v0 )?v1 )lNil$a )(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a88 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= (fun_app$ (lappend$ ?v0 )?v1 )lNil$ )(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a89 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(! (= (fun_app$a (lappend$a ?v0 )lNil$b )?v0 ):pattern ((lappend$a ?v0 )))):named a90 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$b (lappend$b ?v0 )lNil$a )?v0 ):pattern ((lappend$b ?v0 )))):named a91 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$ (lappend$ ?v0 )lNil$ )?v0 ):pattern ((lappend$ ?v0 )))):named a92 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(! (= (fun_app$a (lappend$a lNil$b )?v0 )?v0 ):pattern ((fun_app$a (lappend$a lNil$b )?v0 )))):named a93 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$b (lappend$b lNil$a )?v0 )?v0 ):pattern ((fun_app$b (lappend$b lNil$a )?v0 )))):named a94 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$ (lappend$ lNil$ )?v0 )?v0 ):pattern ((fun_app$ (lappend$ lNil$ )?v0 )))):named a95 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_llist$ ))(! (= (fun_app$a (lappend$a (lCons$b ?v0 ?v1 ))?v2 )(lCons$b ?v0 (fun_app$a (lappend$a ?v1 )?v2 ))):pattern ((fun_app$a (lappend$a (lCons$b ?v0 ?v1 ))?v2 )))):named a96 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(! (= (fun_app$b (lappend$b (lCons$a ?v0 ?v1 ))?v2 )(lCons$a ?v0 (fun_app$b (lappend$b ?v1 )?v2 ))):pattern ((fun_app$b (lappend$b (lCons$a ?v0 ?v1 ))?v2 )))):named a97 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$ (lappend$ (lCons$ ?v0 ?v1 ))?v2 )(lCons$ ?v0 (fun_app$ (lappend$ ?v1 )?v2 ))):pattern ((fun_app$ (lappend$ (lCons$ ?v0 ?v1 ))?v2 )))):named a98 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(= (fun_app$a (lappend$a (fun_app$a (lappend$a ?v0 )(lCons$b ?v1 lNil$b )))?v2 )(fun_app$a (lappend$a ?v0 )(lCons$b ?v1 ?v2 )))):named a99 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist$ )(?v2 A_llist_llist$ ))(= (fun_app$b (lappend$b (fun_app$b (lappend$b ?v0 )(lCons$a ?v1 lNil$a )))?v2 )(fun_app$b (lappend$b ?v0 )(lCons$a ?v1 ?v2 )))):named a100 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A$ )(?v2 A_llist$ ))(= (fun_app$ (lappend$ (fun_app$ (lappend$ ?v0 )(lCons$ ?v1 lNil$ )))?v2 )(fun_app$ (lappend$ ?v0 )(lCons$ ?v1 ?v2 )))):named a101 ))
(check-sat )
;(get-unsat-core )
