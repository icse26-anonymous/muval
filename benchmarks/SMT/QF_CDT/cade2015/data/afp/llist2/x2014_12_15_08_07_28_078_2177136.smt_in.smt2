;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist$ 0)
(declare-sort A_llist_llist$ 0)
(declare-sort A_llist_llist_llist$ 0)
(declare-sort A_llist_llist_llist_llist$ 0)
(declare-fun lNil$ ()A_llist$)
(declare-fun lhd$ (A_llist$)A$)
(declare-fun ltl$ (A_llist$)A_llist$)
(declare-fun lCons$ (A$ A_llist$ )A_llist$)
(declare-fun lNil$a ()A_llist_llist$)
(declare-fun lhd$a (A_llist_llist$)A_llist$)
(declare-fun ltl$a (A_llist_llist$)A_llist_llist$)
(declare-fun lCons$a (A_llist$ A_llist_llist$ )A_llist_llist$)
(declare-fun lNil$b ()A_llist_llist_llist$)
(declare-fun lhd$b (A_llist_llist_llist$)A_llist_llist$)
(declare-fun ltl$b (A_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun lCons$b (A_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$)
(declare-fun lNil$c ()A_llist_llist_llist_llist$)
(declare-fun lhd$c (A_llist_llist_llist_llist$)A_llist_llist_llist$)
(declare-fun ltl$c (A_llist_llist_llist_llist$)A_llist_llist_llist_llist$)
(declare-fun lCons$c (A_llist_llist_llist$ A_llist_llist_llist_llist$ )A_llist_llist_llist_llist$)
(declare-fun a$ ()A_set$ )
(declare-fun l$ ()A_llist$ )
(declare-fun r$ ()A_llist$ )
(declare-fun s$ ()A_llist$ )
(declare-fun x$ ()A$ )
(declare-fun a$a ()A$ )
(declare-fun ra$ ()A_llist$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fpslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun alllsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$b (A_set$ )A_llist_set$ )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fpslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fpslsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$c (A_set$ )A_llist_set$ )
(declare-fun lappend$a (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lappend$b (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(assert (! (not (member$ ra$ (finlsts$ a$ ))):named a0 ))
(assert (! (member$a a$a a$ ):named a1 ))
(assert (! (= ra$ (lCons$ x$ xs$ )):named a2 ))
(assert (! (member$ l$ (finlsts$ a$ )):named a3 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (= l$ (lappend$ ?v0 s$ ))(member$ ?v0 (finlsts$ a$ )))):named a4 ))
(assert (! (= (lCons$ a$a l$ )(lappend$ ra$ s$ )):named a5 ))
(assert (! (member$ (lappend$ r$ s$ )(finlsts$ a$ )):named a6 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (member$b ?v0 (finlsts$a ?v1 ))(= (= (lappend$a ?v0 ?v2 )(lappend$a ?v0 ?v3 ))(= ?v2 ?v3 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (member$c ?v0 (finlsts$b ?v1 ))(= (= (lappend$b ?v0 ?v2 )(lappend$b ?v0 ?v3 ))(= ?v2 ?v3 )))):named a8 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (= (lappend$ ?v0 ?v2 )(lappend$ ?v0 ?v3 ))(= ?v2 ?v3 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(member$b ?v2 ?v1 ))(member$d (lCons$c ?v2 ?v0 )(finlsts$c ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$b ?v2 ?v0 )(finlsts$a ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$ ?v2 ?v1 ))(member$c (lCons$a ?v2 ?v0 )(finlsts$b ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(finlsts$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$b ?v2 (finlsts$a ?v1 )))(member$b (lappend$a ?v0 ?v2 )(finlsts$a ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$c ?v2 (finlsts$b ?v1 )))(member$c (lappend$b ?v0 ?v2 )(finlsts$b ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v2 (finlsts$ ?v1 )))(member$ (lappend$ ?v0 ?v2 )(finlsts$ ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$d ?v0 (fpslsts$ ?v1 ))(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$d ?v3 (finlsts$c ?v1 ))))false )))false )):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$b ?v0 (fpslsts$a ?v1 ))(forall ((?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$b ?v3 (finlsts$a ?v1 ))))false )))false )):named a18 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$c ?v0 (fpslsts$b ?v1 ))(forall ((?v2 A_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$a ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$c ?v3 (finlsts$b ?v1 ))))false )))false )):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (fpslsts$c ?v1 ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$ ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (finlsts$ ?v1 ))))false )))false )):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_set$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$b ?v0 (alllsts$ ?v2 )))(member$b ?v0 (finlsts$a ?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$c ?v0 (alllsts$a ?v2 )))(member$c ?v0 (finlsts$b ?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v2 )))(member$ ?v0 (finlsts$ ?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$b ?v0 (finlsts$a ?v1 ))(member$b ?v0 (alllsts$ ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$c ?v0 (finlsts$b ?v1 ))(member$c ?v0 (alllsts$a ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(not (member$b ?v0 (finlsts$a top$ ))))false )):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(not (member$c ?v0 (finlsts$b top$a ))))false )):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$b ))))false )):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$b ?v0 (finlsts$a ?v1 ))(member$b ?v0 (finlsts$a top$ )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$c ?v0 (finlsts$b ?v1 ))(member$c ?v0 (finlsts$b top$a )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (finlsts$ top$b )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$b lNil$b (finlsts$a ?v0 ))):named a33 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$c lNil$a (finlsts$b ?v0 ))):named a34 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (finlsts$ ?v0 ))):named a35 ))
(check-sat )
;(get-unsat-core )
