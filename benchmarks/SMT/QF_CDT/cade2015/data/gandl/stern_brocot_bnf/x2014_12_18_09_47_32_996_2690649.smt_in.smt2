;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_a_fun_b_fun$ 0 )
(declare-sort A_b_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_fun$ 0 )
(declare-sort A_b_fun_b_fun$ 0 )
(declare-sort B_a_a_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun$ 0 )
(declare-sort B_a_fun_b_fun$ 0 )
(declare-sort B_b_a_fun_fun$ 0 )
(declare-sort A_a_fun_bool_fun$ 0 )
(declare-sort A_b_fun_bool_fun$ 0 )
(declare-sort B_a_fun_bool_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort B_stream_bool_fun$ 0 )
(declare-sort A_a_b_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_bool_fun$ 0 )
(declare-sort A_a_fun_stream_bool_fun$ 0 )
(declare-sort A_b_fun_stream_bool_fun$ 0 )
(declare-sort B_a_fun_stream_bool_fun$ 0 )
(declare-sort A_b_a_fun_fun_stream_bool_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun_a_a_b_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_b_fun_a_a_fun_b_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_fun_a_b_fun_a_fun_fun$ 0 )
(declare-sort A_b_fun_b_fun_a_b_fun_b_fun_fun$ 0 )
(declare-sort B_a_a_fun_fun_b_a_a_fun_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun_b_a_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_fun_b_a_fun_b_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun_b_b_a_fun_fun_fun$ 0 )
(declare-sort A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun_b_b_fun_b_b_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun_a_a_b_fun_fun_fun_a_a_b_fun_fun_a_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_a_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort B_a_fun_stream$ 0)
(declare-sort B_stream$ 0)
(declare-sort A_a_fun_stream$ 0)
(declare-sort A_b_fun_stream$ 0)
(declare-sort A_b_a_fun_fun_stream$ 0)
(declare-sort B_b_fun_stream$ 0)
(declare-sort B_a_fun_b_fun_stream$ 0)
(declare-sort B_a_fun_a_fun_stream$ 0)
(declare-sort B_b_a_fun_fun_stream$ 0)
(declare-sort B_a_fun_b_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_b_fun_stream$ 0)
(declare-sort A_b_fun_b_fun_stream$ 0)
(declare-sort A_b_fun_a_fun_stream$ 0)
(declare-sort A_a_fun_a_fun_stream$ 0)
(declare-sort B_a_b_fun_fun_stream$ 0)
(declare-sort B_a_a_fun_fun_stream$ 0)
(declare-sort B_b_fun_b_b_fun_fun_stream$ 0)
(declare-sort A_a_b_a_fun_fun_fun_stream$ 0)
(declare-sort A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$ 0)
(declare-sort A_a_b_fun_fun_stream$ 0)
(declare-sort A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ 0)
(declare-sort A_b_fun_a_b_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_fun_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun select$ (B_a_fun_stream$)B_a_fun$)
(declare-fun selecta$ (B_a_fun_stream$)B_a_fun_stream$)
(declare-fun sCons$a (B_a_fun$ B_a_fun_stream$ )B_a_fun_stream$)
(declare-fun shd$a (B_stream$)B$)
(declare-fun stl$a (B_stream$)B_stream$)
(declare-fun sCons$b (B$ B_stream$ )B_stream$)
(declare-fun selectb$ (A_a_fun_stream$)A_a_fun$)
(declare-fun selectc$ (A_a_fun_stream$)A_a_fun_stream$)
(declare-fun sCons$c (A_a_fun$ A_a_fun_stream$ )A_a_fun_stream$)
(declare-fun selectd$ (A_b_fun_stream$)A_b_fun$)
(declare-fun selecte$ (A_b_fun_stream$)A_b_fun_stream$)
(declare-fun sCons$d (A_b_fun$ A_b_fun_stream$ )A_b_fun_stream$)
(declare-fun selectf$ (A_b_a_fun_fun_stream$)A_b_a_fun_fun$)
(declare-fun selectg$ (A_b_a_fun_fun_stream$)A_b_a_fun_fun_stream$)
(declare-fun sCons$e (A_b_a_fun_fun$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$)
(declare-fun selecth$ (B_b_fun_stream$)B_b_fun$)
(declare-fun selecti$ (B_b_fun_stream$)B_b_fun_stream$)
(declare-fun sCons$f (B_b_fun$ B_b_fun_stream$ )B_b_fun_stream$)
(declare-fun selectj$ (B_a_fun_b_fun_stream$)B_a_fun_b_fun$)
(declare-fun selectk$ (B_a_fun_b_fun_stream$)B_a_fun_b_fun_stream$)
(declare-fun sCons$g (B_a_fun_b_fun$ B_a_fun_b_fun_stream$ )B_a_fun_b_fun_stream$)
(declare-fun selectl$ (B_a_fun_a_fun_stream$)B_a_fun_a_fun$)
(declare-fun selectm$ (B_a_fun_a_fun_stream$)B_a_fun_a_fun_stream$)
(declare-fun sCons$h (B_a_fun_a_fun$ B_a_fun_a_fun_stream$ )B_a_fun_a_fun_stream$)
(declare-fun selectn$ (B_b_a_fun_fun_stream$)B_b_a_fun_fun$)
(declare-fun selecto$ (B_b_a_fun_fun_stream$)B_b_a_fun_fun_stream$)
(declare-fun sCons$i (B_b_a_fun_fun$ B_b_a_fun_fun_stream$ )B_b_a_fun_fun_stream$)
(declare-fun selectp$ (B_a_fun_b_a_fun_fun_stream$)B_a_fun_b_a_fun_fun$)
(declare-fun selectq$ (B_a_fun_b_a_fun_fun_stream$)B_a_fun_b_a_fun_fun_stream$)
(declare-fun sCons$j (B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$)
(declare-fun selectr$ (A_a_fun_b_fun_stream$)A_a_fun_b_fun$)
(declare-fun selects$ (A_a_fun_b_fun_stream$)A_a_fun_b_fun_stream$)
(declare-fun sCons$k (A_a_fun_b_fun$ A_a_fun_b_fun_stream$ )A_a_fun_b_fun_stream$)
(declare-fun selectt$ (A_b_fun_b_fun_stream$)A_b_fun_b_fun$)
(declare-fun selectu$ (A_b_fun_b_fun_stream$)A_b_fun_b_fun_stream$)
(declare-fun sCons$l (A_b_fun_b_fun$ A_b_fun_b_fun_stream$ )A_b_fun_b_fun_stream$)
(declare-fun selectv$ (A_b_fun_a_fun_stream$)A_b_fun_a_fun$)
(declare-fun selectw$ (A_b_fun_a_fun_stream$)A_b_fun_a_fun_stream$)
(declare-fun sCons$m (A_b_fun_a_fun$ A_b_fun_a_fun_stream$ )A_b_fun_a_fun_stream$)
(declare-fun selectx$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun$)
(declare-fun selecty$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun_stream$)
(declare-fun sCons$n (A_a_fun_a_fun$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$)
(declare-fun selectz$ (B_a_b_fun_fun_stream$)B_a_b_fun_fun$)
(declare-fun selecua$ (B_a_b_fun_fun_stream$)B_a_b_fun_fun_stream$)
(declare-fun sCons$o (B_a_b_fun_fun$ B_a_b_fun_fun_stream$ )B_a_b_fun_fun_stream$)
(declare-fun selecub$ (B_a_a_fun_fun_stream$)B_a_a_fun_fun$)
(declare-fun selecuc$ (B_a_a_fun_fun_stream$)B_a_a_fun_fun_stream$)
(declare-fun sCons$p (B_a_a_fun_fun$ B_a_a_fun_fun_stream$ )B_a_a_fun_fun_stream$)
(declare-fun selecud$ (B_b_fun_b_b_fun_fun_stream$)B_b_fun_b_b_fun_fun$)
(declare-fun selecue$ (B_b_fun_b_b_fun_fun_stream$)B_b_fun_b_b_fun_fun_stream$)
(declare-fun sCons$q (B_b_fun_b_b_fun_fun$ B_b_fun_b_b_fun_fun_stream$ )B_b_fun_b_b_fun_fun_stream$)
(declare-fun selecuf$ (A_a_b_a_fun_fun_fun_stream$)A_a_b_a_fun_fun_fun$)
(declare-fun selecug$ (A_a_b_a_fun_fun_fun_stream$)A_a_b_a_fun_fun_fun_stream$)
(declare-fun sCons$r (A_a_b_a_fun_fun_fun$ A_a_b_a_fun_fun_fun_stream$ )A_a_b_a_fun_fun_fun_stream$)
(declare-fun selecuh$ (A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$)A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$)
(declare-fun selecui$ (A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$)A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$)
(declare-fun sCons$s (A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$ A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$ )A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$)
(declare-fun selecuj$ (A_a_b_fun_fun_stream$)A_a_b_fun_fun$)
(declare-fun selecuk$ (A_a_b_fun_fun_stream$)A_a_b_fun_fun_stream$)
(declare-fun sCons$t (A_a_b_fun_fun$ A_a_b_fun_fun_stream$ )A_a_b_fun_fun_stream$)
(declare-fun selecul$ (A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$)A_a_b_fun_fun_a_a_b_fun_fun_fun$)
(declare-fun selecum$ (A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$)A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$)
(declare-fun sCons$u (A_a_b_fun_fun_a_a_b_fun_fun_fun$ A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$ )A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$)
(declare-fun selecun$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun$)
(declare-fun selecuo$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun_stream$)
(declare-fun sCons$v (A_a_a_fun_fun$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$)
(declare-fun selecup$ (A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$)A_a_a_fun_fun_a_a_a_fun_fun_fun$)
(declare-fun selecuq$ (A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$)A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$)
(declare-fun sCons$w (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$)
(declare-fun selecur$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun selecus$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)
(declare-fun sCons$x (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)
(declare-fun selecut$ (A_b_fun_a_b_fun_fun_stream$)A_b_fun_a_b_fun_fun$)
(declare-fun selecuu$ (A_b_fun_a_b_fun_fun_stream$)A_b_fun_a_b_fun_fun_stream$)
(declare-fun sCons$y (A_b_fun_a_b_fun_fun$ A_b_fun_a_b_fun_fun_stream$ )A_b_fun_a_b_fun_fun_stream$)
(declare-fun selecuv$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun$)
(declare-fun selecuw$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun_stream$)
(declare-fun sCons$z (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$)
(declare-fun f$ ()B_a_fun$ )
(declare-fun x$ ()B$ )
(declare-fun fs$ ()B_a_fun_stream$ )
(declare-fun id$ ()B_b_fun_b_b_fun_fun$ )
(declare-fun xs$ ()B_stream$ )
(declare-fun id$a ()A_b_fun_a_b_fun_fun$ )
(declare-fun id$b ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$c ()B_a_fun_b_a_fun_fun$ )
(declare-fun id$d ()B_a_fun_b_fun_b_a_fun_b_fun_fun$ )
(declare-fun id$e ()B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun id$f ()B_b_a_fun_fun_b_b_a_fun_fun_fun$ )
(declare-fun id$g ()A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun id$h ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun id$i ()A_a_fun_b_fun_a_a_fun_b_fun_fun$ )
(declare-fun id$j ()B_b_fun$ )
(declare-fun id$k ()A_a_fun$ )
(declare-fun id$l ()A_b_fun_b_fun_a_b_fun_b_fun_fun$ )
(declare-fun id$m ()A_b_fun_a_fun_a_b_fun_a_fun_fun$ )
(declare-fun id$n ()A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun id$o ()B_a_b_fun_fun_b_a_b_fun_fun_fun$ )
(declare-fun id$p ()B_a_a_fun_fun_b_a_a_fun_fun_fun$ )
(declare-fun id$q ()B_b_fun_b_b_fun_fun_b_b_fun_b_b_fun_fun_fun$ )
(declare-fun id$r ()A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_a_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_fun$ )
(declare-fun id$s ()A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$ )
(declare-fun id$t ()A_a_b_fun_fun_a_a_b_fun_fun_fun_a_a_b_fun_fun_a_a_b_fun_fun_fun_fun$ )
(declare-fun id$u ()A_a_b_fun_fun_a_a_b_fun_fun_fun$ )
(declare-fun id$v ()A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )
(declare-fun id$w ()A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun id$x ()A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun id$y ()A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun id$z ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun st_ap$ (B_a_fun_stream$ B_stream$ )A_stream$ )
(declare-fun st_ap$a (B_b_fun_stream$ B_stream$ )B_stream$ )
(declare-fun st_ap$b (A_b_fun_stream$ A_stream$ )B_stream$ )
(declare-fun st_ap$c (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun st_ap$d (B_a_fun_b_fun_stream$ B_a_fun_stream$ )B_stream$ )
(declare-fun st_ap$e (B_a_fun_a_fun_stream$ B_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$f (B_b_a_fun_fun_stream$ B_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$g (A_b_a_fun_fun_stream$ A_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$h (B_a_fun_b_a_fun_fun_stream$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$i (A_a_fun_b_fun_stream$ A_a_fun_stream$ )B_stream$ )
(declare-fun st_ap$j (A_b_fun_b_fun_stream$ A_b_fun_stream$ )B_stream$ )
(declare-fun st_ap$k (A_b_fun_a_fun_stream$ A_b_fun_stream$ )A_stream$ )
(declare-fun st_ap$l (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$m (B_a_b_fun_fun_stream$ B_stream$ )A_b_fun_stream$ )
(declare-fun st_ap$n (B_a_a_fun_fun_stream$ B_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$o (B_b_fun_b_b_fun_fun_stream$ B_b_fun_stream$ )B_b_fun_stream$ )
(declare-fun st_ap$p (A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$ A_a_b_a_fun_fun_fun_stream$ )A_a_b_a_fun_fun_fun_stream$ )
(declare-fun st_ap$q (A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$ A_a_b_fun_fun_stream$ )A_a_b_fun_fun_stream$ )
(declare-fun st_ap$r (A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun st_ap$s (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun st_ap$t (A_b_fun_a_b_fun_fun_stream$ A_b_fun_stream$ )A_b_fun_stream$ )
(declare-fun st_ap$u (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun fun_app$ (B_a_fun$ B$ )A$ )
(declare-fun sfilter$ (A_a_fun_bool_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smember$ (A_a_fun$ )A_a_fun_stream_bool_fun$ )
(declare-fun fun_app$a (A_a_fun_stream_bool_fun$ A_a_fun_stream$ )Bool )
(declare-fun fun_app$b (A_b_fun_stream_bool_fun$ A_b_fun_stream$ )Bool )
(declare-fun fun_app$c (A_b_a_fun_fun_stream_bool_fun$ A_b_a_fun_fun_stream$ )Bool )
(declare-fun fun_app$d (B_a_fun_stream_bool_fun$ B_a_fun_stream$ )Bool )
(declare-fun fun_app$e (B_stream_bool_fun$ B_stream$ )Bool )
(declare-fun fun_app$f (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$g (A_a_fun_bool_fun$ A_a_fun$ )Bool )
(declare-fun fun_app$h (A_b_fun_bool_fun$ A_b_fun$ )Bool )
(declare-fun fun_app$i (A_b_a_fun_fun_bool_fun$ A_b_a_fun_fun$ )Bool )
(declare-fun fun_app$j (B_a_fun_bool_fun$ B_a_fun$ )Bool )
(declare-fun fun_app$k (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$l (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$m (B_b_fun$ B$ )B$ )
(declare-fun fun_app$n (A_b_fun$ A$ )B$ )
(declare-fun fun_app$o (A_a_fun$ A$ )A$ )
(declare-fun fun_app$p (B_a_fun_b_fun$ B_a_fun$ )B$ )
(declare-fun fun_app$q (B_a_fun_a_fun$ B_a_fun$ )A$ )
(declare-fun fun_app$r (B_b_a_fun_fun$ B$ )B_a_fun$ )
(declare-fun fun_app$s (A_b_a_fun_fun$ A$ )B_a_fun$ )
(declare-fun fun_app$t (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun fun_app$u (A_a_fun_b_fun$ A_a_fun$ )B$ )
(declare-fun fun_app$v (A_b_fun_b_fun$ A_b_fun$ )B$ )
(declare-fun fun_app$w (A_b_fun_a_fun$ A_b_fun$ )A$ )
(declare-fun fun_app$x (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$y (B_a_b_fun_fun$ B$ )A_b_fun$ )
(declare-fun fun_app$z (B_a_a_fun_fun$ B$ )A_a_fun$ )
(declare-fun sfilter$a (A_b_fun_bool_fun$ A_b_fun_stream$ )A_b_fun_stream$ )
(declare-fun sfilter$b (A_b_a_fun_fun_bool_fun$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun sfilter$c (B_a_fun_bool_fun$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun sfilter$d (B_bool_fun$ B_stream$ )B_stream$ )
(declare-fun sfilter$e (A_bool_fun$ A_stream$ )A_stream$ )
(declare-fun siterate$ (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun_stream$ )
(declare-fun smember$a (A_b_fun$ )A_b_fun_stream_bool_fun$ )
(declare-fun smember$b (A_b_a_fun_fun$ )A_b_a_fun_fun_stream_bool_fun$ )
(declare-fun smember$c (B_a_fun$ )B_a_fun_stream_bool_fun$ )
(declare-fun smember$d (B$ )B_stream_bool_fun$ )
(declare-fun smember$e (A$ )A_stream_bool_fun$ )
(declare-fun streamsp$ (A_a_fun_bool_fun$ )A_a_fun_stream_bool_fun$ )
(declare-fun fun_app$aa (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun$ )
(declare-fun fun_app$ab (A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$ A_a_b_a_fun_fun_fun$ )A_a_b_a_fun_fun_fun$ )
(declare-fun fun_app$ac (A_a_b_fun_fun_a_a_b_fun_fun_fun$ A_a_b_fun_fun$ )A_a_b_fun_fun$ )
(declare-fun fun_app$ad (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$ae (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun$ )
(declare-fun fun_app$af (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun$ )
(declare-fun fun_app$ag (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun siterate$a (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun_stream$ )
(declare-fun siterate$b (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$c (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun_stream$ )
(declare-fun siterate$d (B_a_fun_b_fun_b_a_fun_b_fun_fun$ B_a_fun_b_fun$ )B_a_fun_b_fun_stream$ )
(declare-fun siterate$e (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ )B_a_fun_a_fun_stream$ )
(declare-fun siterate$f (B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun$ )B_b_a_fun_fun_stream$ )
(declare-fun siterate$g (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun_stream$ )
(declare-fun siterate$h (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$i (A_a_fun_b_fun_a_a_fun_b_fun_fun$ A_a_fun_b_fun$ )A_a_fun_b_fun_stream$ )
(declare-fun siterate$j (B_b_fun$ B$ )B_stream$ )
(declare-fun siterate$k (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$l (A_b_fun_b_fun_a_b_fun_b_fun_fun$ A_b_fun_b_fun$ )A_b_fun_b_fun_stream$ )
(declare-fun siterate$m (A_b_fun_a_fun_a_b_fun_a_fun_fun$ A_b_fun_a_fun$ )A_b_fun_a_fun_stream$ )
(declare-fun siterate$n (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun_stream$ )
(declare-fun siterate$o (B_a_b_fun_fun_b_a_b_fun_fun_fun$ B_a_b_fun_fun$ )B_a_b_fun_fun_stream$ )
(declare-fun siterate$p (B_a_a_fun_fun_b_a_a_fun_fun_fun$ B_a_a_fun_fun$ )B_a_a_fun_fun_stream$ )
(declare-fun siterate$q (B_b_fun_b_b_fun_fun_b_b_fun_b_b_fun_fun_fun$ B_b_fun_b_b_fun_fun$ )B_b_fun_b_b_fun_fun_stream$ )
(declare-fun siterate$r (A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_a_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_fun$ A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$ )A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun_stream$ )
(declare-fun siterate$s (A_a_b_fun_fun_a_a_b_fun_fun_fun_a_a_b_fun_fun_a_a_b_fun_fun_fun_fun$ A_a_b_fun_fun_a_a_b_fun_fun_fun$ )A_a_b_fun_fun_a_a_b_fun_fun_fun_stream$ )
(declare-fun siterate$t (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$u (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$v (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ A_b_fun_a_b_fun_fun$ )A_b_fun_a_b_fun_fun_stream$ )
(declare-fun siterate$w (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$x (A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$ A_a_b_a_fun_fun_fun$ )A_a_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$y (A_a_b_fun_fun_a_a_b_fun_fun_fun$ A_a_b_fun_fun$ )A_a_b_fun_fun_stream$ )
(declare-fun siterate$z (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun_stream$ )
(declare-fun streamsp$a (A_b_fun_bool_fun$ )A_b_fun_stream_bool_fun$ )
(declare-fun streamsp$b (A_b_a_fun_fun_bool_fun$ )A_b_a_fun_fun_stream_bool_fun$ )
(declare-fun streamsp$c (B_a_fun_bool_fun$ )B_a_fun_stream_bool_fun$ )
(declare-fun streamsp$d (B_bool_fun$ )B_stream_bool_fun$ )
(declare-fun streamsp$e (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun stream_all$ (A_a_fun_bool_fun$ )A_a_fun_stream_bool_fun$ )
(declare-fun pred_stream$ (A_a_fun_bool_fun$ )A_a_fun_stream_bool_fun$ )
(declare-fun sinterleave$ (A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun stream_all$a (A_b_fun_bool_fun$ )A_b_fun_stream_bool_fun$ )
(declare-fun stream_all$b (A_b_a_fun_fun_bool_fun$ )A_b_a_fun_fun_stream_bool_fun$ )
(declare-fun stream_all$c (B_a_fun_bool_fun$ )B_a_fun_stream_bool_fun$ )
(declare-fun stream_all$d (B_bool_fun$ )B_stream_bool_fun$ )
(declare-fun stream_all$e (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun pred_stream$a (A_b_fun_bool_fun$ )A_b_fun_stream_bool_fun$ )
(declare-fun pred_stream$b (A_b_a_fun_fun_bool_fun$ )A_b_a_fun_fun_stream_bool_fun$ )
(declare-fun pred_stream$c (B_a_fun_bool_fun$ )B_a_fun_stream_bool_fun$ )
(declare-fun pred_stream$d (B_bool_fun$ )B_stream_bool_fun$ )
(declare-fun pred_stream$e (A_bool_fun$ )A_stream_bool_fun$ )
(declare-fun sinterleave$a (A_b_fun_stream$ A_b_fun_stream$ )A_b_fun_stream$ )
(declare-fun sinterleave$b (A_b_a_fun_fun_stream$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun sinterleave$c (B_a_fun_stream$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun sinterleave$d (B_stream$ B_stream$ )B_stream$ )
(declare-fun sinterleave$e (A_stream$ A_stream$ )A_stream$ )
(assert (! (not (= (st_ap$ (sCons$a f$ fs$ )(sCons$b x$ xs$ ))(sCons$ (fun_app$ f$ x$ )(st_ap$ fs$ xs$ )))):named a0 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun$ )(?v3 A_a_fun_stream$ ))(= (= (sCons$c ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a1 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_stream$ )(?v2 A_b_fun$ )(?v3 A_b_fun_stream$ ))(= (= (sCons$d ?v0 ?v1 )(sCons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a2 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_a_fun_fun_stream$ )(?v2 A_b_a_fun_fun$ )(?v3 A_b_a_fun_fun_stream$ ))(= (= (sCons$e ?v0 ?v1 )(sCons$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a3 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_stream$ )(?v2 B_a_fun$ )(?v3 B_a_fun_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a4 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B$ )(?v3 B_stream$ ))(= (= (sCons$b ?v0 ?v1 )(sCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a6 ))
(assert (! (forall ((?v0 A_a_fun_stream$ ))(=> (forall ((?v1 A_a_fun$ )(?v2 A_a_fun_stream$ ))(=> (= ?v0 (sCons$c ?v1 ?v2 ))false ))false )):named a7 ))
(assert (! (forall ((?v0 A_b_fun_stream$ ))(=> (forall ((?v1 A_b_fun$ )(?v2 A_b_fun_stream$ ))(=> (= ?v0 (sCons$d ?v1 ?v2 ))false ))false )):named a8 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream$ ))(=> (forall ((?v1 A_b_a_fun_fun$ )(?v2 A_b_a_fun_fun_stream$ ))(=> (= ?v0 (sCons$e ?v1 ?v2 ))false ))false )):named a9 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(=> (forall ((?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(=> (= ?v0 (sCons$a ?v1 ?v2 ))false ))false )):named a10 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (forall ((?v1 B$ )(?v2 B_stream$ ))(=> (= ?v0 (sCons$b ?v1 ?v2 ))false ))false )):named a11 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (forall ((?v1 A$ )(?v2 A_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a12 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_stream$ ))(! (= (fun_app$a (smember$ ?v0 )(sCons$c ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$a (smember$ ?v0 )?v2 ))):pattern ((fun_app$a (smember$ ?v0 )(sCons$c ?v1 ?v2 ))))):named a13 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_stream$ ))(! (= (fun_app$b (smember$a ?v0 )(sCons$d ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$b (smember$a ?v0 )?v2 ))):pattern ((fun_app$b (smember$a ?v0 )(sCons$d ?v1 ?v2 ))))):named a14 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_a_fun_fun$ )(?v2 A_b_a_fun_fun_stream$ ))(! (= (fun_app$c (smember$b ?v0 )(sCons$e ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$c (smember$b ?v0 )?v2 ))):pattern ((fun_app$c (smember$b ?v0 )(sCons$e ?v1 ?v2 ))))):named a15 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(! (= (fun_app$d (smember$c ?v0 )(sCons$a ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$d (smember$c ?v0 )?v2 ))):pattern ((fun_app$d (smember$c ?v0 )(sCons$a ?v1 ?v2 ))))):named a16 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (fun_app$e (smember$d ?v0 )(sCons$b ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$e (smember$d ?v0 )?v2 ))):pattern ((fun_app$e (smember$d ?v0 )(sCons$b ?v1 ?v2 ))))):named a17 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$f (smember$e ?v0 )(sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (fun_app$f (smember$e ?v0 )?v2 ))):pattern ((fun_app$f (smember$e ?v0 )(sCons$ ?v1 ?v2 ))))):named a18 ))
(assert (! (forall ((?v0 A_a_fun_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_stream$ ))(! (= (fun_app$a (pred_stream$ ?v0 )(sCons$c ?v1 ?v2 ))(and (fun_app$g ?v0 ?v1 )(fun_app$a (pred_stream$ ?v0 )?v2 ))):pattern ((fun_app$a (pred_stream$ ?v0 )(sCons$c ?v1 ?v2 ))))):named a19 ))
(assert (! (forall ((?v0 A_b_fun_bool_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_stream$ ))(! (= (fun_app$b (pred_stream$a ?v0 )(sCons$d ?v1 ?v2 ))(and (fun_app$h ?v0 ?v1 )(fun_app$b (pred_stream$a ?v0 )?v2 ))):pattern ((fun_app$b (pred_stream$a ?v0 )(sCons$d ?v1 ?v2 ))))):named a20 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_bool_fun$ )(?v1 A_b_a_fun_fun$ )(?v2 A_b_a_fun_fun_stream$ ))(! (= (fun_app$c (pred_stream$b ?v0 )(sCons$e ?v1 ?v2 ))(and (fun_app$i ?v0 ?v1 )(fun_app$c (pred_stream$b ?v0 )?v2 ))):pattern ((fun_app$c (pred_stream$b ?v0 )(sCons$e ?v1 ?v2 ))))):named a21 ))
(assert (! (forall ((?v0 B_a_fun_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(! (= (fun_app$d (pred_stream$c ?v0 )(sCons$a ?v1 ?v2 ))(and (fun_app$j ?v0 ?v1 )(fun_app$d (pred_stream$c ?v0 )?v2 ))):pattern ((fun_app$d (pred_stream$c ?v0 )(sCons$a ?v1 ?v2 ))))):named a22 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (fun_app$e (pred_stream$d ?v0 )(sCons$b ?v1 ?v2 ))(and (fun_app$k ?v0 ?v1 )(fun_app$e (pred_stream$d ?v0 )?v2 ))):pattern ((fun_app$e (pred_stream$d ?v0 )(sCons$b ?v1 ?v2 ))))):named a23 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$f (pred_stream$e ?v0 )(sCons$ ?v1 ?v2 ))(and (fun_app$l ?v0 ?v1 )(fun_app$f (pred_stream$e ?v0 )?v2 ))):pattern ((fun_app$f (pred_stream$e ?v0 )(sCons$ ?v1 ?v2 ))))):named a24 ))
(assert (! (forall ((?v0 A_a_fun_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_stream$ ))(! (= (fun_app$a (stream_all$ ?v0 )(sCons$c ?v1 ?v2 ))(and (fun_app$g ?v0 ?v1 )(fun_app$a (stream_all$ ?v0 )?v2 ))):pattern ((fun_app$a (stream_all$ ?v0 )(sCons$c ?v1 ?v2 ))))):named a25 ))
(assert (! (forall ((?v0 A_b_fun_bool_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_stream$ ))(! (= (fun_app$b (stream_all$a ?v0 )(sCons$d ?v1 ?v2 ))(and (fun_app$h ?v0 ?v1 )(fun_app$b (stream_all$a ?v0 )?v2 ))):pattern ((fun_app$b (stream_all$a ?v0 )(sCons$d ?v1 ?v2 ))))):named a26 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_bool_fun$ )(?v1 A_b_a_fun_fun$ )(?v2 A_b_a_fun_fun_stream$ ))(! (= (fun_app$c (stream_all$b ?v0 )(sCons$e ?v1 ?v2 ))(and (fun_app$i ?v0 ?v1 )(fun_app$c (stream_all$b ?v0 )?v2 ))):pattern ((fun_app$c (stream_all$b ?v0 )(sCons$e ?v1 ?v2 ))))):named a27 ))
(assert (! (forall ((?v0 B_a_fun_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(! (= (fun_app$d (stream_all$c ?v0 )(sCons$a ?v1 ?v2 ))(and (fun_app$j ?v0 ?v1 )(fun_app$d (stream_all$c ?v0 )?v2 ))):pattern ((fun_app$d (stream_all$c ?v0 )(sCons$a ?v1 ?v2 ))))):named a28 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (fun_app$e (stream_all$d ?v0 )(sCons$b ?v1 ?v2 ))(and (fun_app$k ?v0 ?v1 )(fun_app$e (stream_all$d ?v0 )?v2 ))):pattern ((fun_app$e (stream_all$d ?v0 )(sCons$b ?v1 ?v2 ))))):named a29 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (fun_app$f (stream_all$e ?v0 )(sCons$ ?v1 ?v2 ))(and (fun_app$l ?v0 ?v1 )(fun_app$f (stream_all$e ?v0 )?v2 ))):pattern ((fun_app$f (stream_all$e ?v0 )(sCons$ ?v1 ?v2 ))))):named a30 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 B_stream$ ))(= (st_ap$a (siterate$ id$ ?v0 )(sCons$b ?v1 ?v2 ))(sCons$b (fun_app$m ?v0 ?v1 )(st_ap$a (siterate$ id$ ?v0 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (st_ap$b (siterate$a id$a ?v0 )(sCons$ ?v1 ?v2 ))(sCons$b (fun_app$n ?v0 ?v1 )(st_ap$b (siterate$a id$a ?v0 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (st_ap$c (siterate$b id$b ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ (fun_app$o ?v0 ?v1 )(st_ap$c (siterate$b id$b ?v0 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ )(?v2 B_stream$ ))(= (st_ap$ (siterate$c id$c ?v0 )(sCons$b ?v1 ?v2 ))(sCons$ (fun_app$ ?v0 ?v1 )(st_ap$ (siterate$c id$c ?v0 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 B_a_fun_b_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(= (st_ap$d (siterate$d id$d ?v0 )(sCons$a ?v1 ?v2 ))(sCons$b (fun_app$p ?v0 ?v1 )(st_ap$d (siterate$d id$d ?v0 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(= (st_ap$e (siterate$e id$e ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ (fun_app$q ?v0 ?v1 )(st_ap$e (siterate$e id$e ?v0 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ )(?v2 B_stream$ ))(= (st_ap$f (siterate$f id$f ?v0 )(sCons$b ?v1 ?v2 ))(sCons$a (fun_app$r ?v0 ?v1 )(st_ap$f (siterate$f id$f ?v0 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (st_ap$g (siterate$g id$g ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a (fun_app$s ?v0 ?v1 )(st_ap$g (siterate$g id$g ?v0 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(= (st_ap$h (siterate$h id$h ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a (fun_app$t ?v0 ?v1 )(st_ap$h (siterate$h id$h ?v0 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_a_fun_b_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_stream$ ))(= (st_ap$i (siterate$i id$i ?v0 )(sCons$c ?v1 ?v2 ))(sCons$b (fun_app$u ?v0 ?v1 )(st_ap$i (siterate$i id$i ?v0 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_a_fun_bool_fun$ )(?v1 A_a_fun_stream$ ))(= (fun_app$a (streamsp$ ?v0 )?v1 )(exists ((?v2 A_a_fun$ )(?v3 A_a_fun_stream$ ))(and (= ?v1 (sCons$c ?v2 ?v3 ))(and (fun_app$g ?v0 ?v2 )(fun_app$a (streamsp$ ?v0 )?v3 )))))):named a41 ))
(assert (! (forall ((?v0 A_b_fun_bool_fun$ )(?v1 A_b_fun_stream$ ))(= (fun_app$b (streamsp$a ?v0 )?v1 )(exists ((?v2 A_b_fun$ )(?v3 A_b_fun_stream$ ))(and (= ?v1 (sCons$d ?v2 ?v3 ))(and (fun_app$h ?v0 ?v2 )(fun_app$b (streamsp$a ?v0 )?v3 )))))):named a42 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_bool_fun$ )(?v1 A_b_a_fun_fun_stream$ ))(= (fun_app$c (streamsp$b ?v0 )?v1 )(exists ((?v2 A_b_a_fun_fun$ )(?v3 A_b_a_fun_fun_stream$ ))(and (= ?v1 (sCons$e ?v2 ?v3 ))(and (fun_app$i ?v0 ?v2 )(fun_app$c (streamsp$b ?v0 )?v3 )))))):named a43 ))
(assert (! (forall ((?v0 B_a_fun_bool_fun$ )(?v1 B_a_fun_stream$ ))(= (fun_app$d (streamsp$c ?v0 )?v1 )(exists ((?v2 B_a_fun$ )(?v3 B_a_fun_stream$ ))(and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$j ?v0 ?v2 )(fun_app$d (streamsp$c ?v0 )?v3 )))))):named a44 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(= (fun_app$e (streamsp$d ?v0 )?v1 )(exists ((?v2 B$ )(?v3 B_stream$ ))(and (= ?v1 (sCons$b ?v2 ?v3 ))(and (fun_app$k ?v0 ?v2 )(fun_app$e (streamsp$d ?v0 )?v3 )))))):named a45 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(= (fun_app$f (streamsp$e ?v0 )?v1 )(exists ((?v2 A$ )(?v3 A_stream$ ))(and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$l ?v0 ?v2 )(fun_app$f (streamsp$e ?v0 )?v3 )))))):named a46 ))
(assert (! (forall ((?v0 A_a_fun_bool_fun$ )(?v1 A_a_fun_stream$ ))(=> (and (fun_app$a (streamsp$ ?v0 )?v1 )(forall ((?v2 A_a_fun$ )(?v3 A_a_fun_stream$ ))(=> (and (= ?v1 (sCons$c ?v2 ?v3 ))(and (fun_app$g ?v0 ?v2 )(fun_app$a (streamsp$ ?v0 )?v3 )))false )))false )):named a47 ))
(assert (! (forall ((?v0 A_b_fun_bool_fun$ )(?v1 A_b_fun_stream$ ))(=> (and (fun_app$b (streamsp$a ?v0 )?v1 )(forall ((?v2 A_b_fun$ )(?v3 A_b_fun_stream$ ))(=> (and (= ?v1 (sCons$d ?v2 ?v3 ))(and (fun_app$h ?v0 ?v2 )(fun_app$b (streamsp$a ?v0 )?v3 )))false )))false )):named a48 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_bool_fun$ )(?v1 A_b_a_fun_fun_stream$ ))(=> (and (fun_app$c (streamsp$b ?v0 )?v1 )(forall ((?v2 A_b_a_fun_fun$ )(?v3 A_b_a_fun_fun_stream$ ))(=> (and (= ?v1 (sCons$e ?v2 ?v3 ))(and (fun_app$i ?v0 ?v2 )(fun_app$c (streamsp$b ?v0 )?v3 )))false )))false )):named a49 ))
(assert (! (forall ((?v0 B_a_fun_bool_fun$ )(?v1 B_a_fun_stream$ ))(=> (and (fun_app$d (streamsp$c ?v0 )?v1 )(forall ((?v2 B_a_fun$ )(?v3 B_a_fun_stream$ ))(=> (and (= ?v1 (sCons$a ?v2 ?v3 ))(and (fun_app$j ?v0 ?v2 )(fun_app$d (streamsp$c ?v0 )?v3 )))false )))false )):named a50 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(=> (and (fun_app$e (streamsp$d ?v0 )?v1 )(forall ((?v2 B$ )(?v3 B_stream$ ))(=> (and (= ?v1 (sCons$b ?v2 ?v3 ))(and (fun_app$k ?v0 ?v2 )(fun_app$e (streamsp$d ?v0 )?v3 )))false )))false )):named a51 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_stream$ ))(=> (and (fun_app$f (streamsp$e ?v0 )?v1 )(forall ((?v2 A$ )(?v3 A_stream$ ))(=> (and (= ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$l ?v0 ?v2 )(fun_app$f (streamsp$e ?v0 )?v3 )))false )))false )):named a52 ))
(assert (! (forall ((?v0 A_a_fun_stream_bool_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_bool_fun$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 A_a_fun_stream$ ))(=> (fun_app$a ?v0 ?v3 )(exists ((?v4 A_a_fun$ )(?v5 A_a_fun_stream$ ))(and (= ?v3 (sCons$c ?v4 ?v5 ))(and (fun_app$g ?v2 ?v4 )(or (fun_app$a ?v0 ?v5 )(fun_app$a (streamsp$ ?v2 )?v5 ))))))))(fun_app$a (streamsp$ ?v2 )?v1 ))):named a53 ))
(assert (! (forall ((?v0 A_b_fun_stream_bool_fun$ )(?v1 A_b_fun_stream$ )(?v2 A_b_fun_bool_fun$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_b_fun_stream$ ))(=> (fun_app$b ?v0 ?v3 )(exists ((?v4 A_b_fun$ )(?v5 A_b_fun_stream$ ))(and (= ?v3 (sCons$d ?v4 ?v5 ))(and (fun_app$h ?v2 ?v4 )(or (fun_app$b ?v0 ?v5 )(fun_app$b (streamsp$a ?v2 )?v5 ))))))))(fun_app$b (streamsp$a ?v2 )?v1 ))):named a54 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream_bool_fun$ )(?v1 A_b_a_fun_fun_stream$ )(?v2 A_b_a_fun_fun_bool_fun$ ))(=> (and (fun_app$c ?v0 ?v1 )(forall ((?v3 A_b_a_fun_fun_stream$ ))(=> (fun_app$c ?v0 ?v3 )(exists ((?v4 A_b_a_fun_fun$ )(?v5 A_b_a_fun_fun_stream$ ))(and (= ?v3 (sCons$e ?v4 ?v5 ))(and (fun_app$i ?v2 ?v4 )(or (fun_app$c ?v0 ?v5 )(fun_app$c (streamsp$b ?v2 )?v5 ))))))))(fun_app$c (streamsp$b ?v2 )?v1 ))):named a55 ))
(assert (! (forall ((?v0 B_a_fun_stream_bool_fun$ )(?v1 B_a_fun_stream$ )(?v2 B_a_fun_bool_fun$ ))(=> (and (fun_app$d ?v0 ?v1 )(forall ((?v3 B_a_fun_stream$ ))(=> (fun_app$d ?v0 ?v3 )(exists ((?v4 B_a_fun$ )(?v5 B_a_fun_stream$ ))(and (= ?v3 (sCons$a ?v4 ?v5 ))(and (fun_app$j ?v2 ?v4 )(or (fun_app$d ?v0 ?v5 )(fun_app$d (streamsp$c ?v2 )?v5 ))))))))(fun_app$d (streamsp$c ?v2 )?v1 ))):named a56 ))
(assert (! (forall ((?v0 B_stream_bool_fun$ )(?v1 B_stream$ )(?v2 B_bool_fun$ ))(=> (and (fun_app$e ?v0 ?v1 )(forall ((?v3 B_stream$ ))(=> (fun_app$e ?v0 ?v3 )(exists ((?v4 B$ )(?v5 B_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (fun_app$k ?v2 ?v4 )(or (fun_app$e ?v0 ?v5 )(fun_app$e (streamsp$d ?v2 )?v5 ))))))))(fun_app$e (streamsp$d ?v2 )?v1 ))):named a57 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_bool_fun$ ))(=> (and (fun_app$f ?v0 ?v1 )(forall ((?v3 A_stream$ ))(=> (fun_app$f ?v0 ?v3 )(exists ((?v4 A$ )(?v5 A_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (fun_app$l ?v2 ?v4 )(or (fun_app$f ?v0 ?v5 )(fun_app$f (streamsp$e ?v2 )?v5 ))))))))(fun_app$f (streamsp$e ?v2 )?v1 ))):named a58 ))
(assert (! (forall ((?v0 A_a_fun_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_stream$ ))(! (= (sfilter$ ?v0 (sCons$c ?v1 ?v2 ))(ite (fun_app$g ?v0 ?v1 )(sCons$c ?v1 (sfilter$ ?v0 ?v2 ))(sfilter$ ?v0 ?v2 ))):pattern ((sfilter$ ?v0 (sCons$c ?v1 ?v2 ))))):named a59 ))
(assert (! (forall ((?v0 A_b_fun_bool_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_stream$ ))(! (= (sfilter$a ?v0 (sCons$d ?v1 ?v2 ))(ite (fun_app$h ?v0 ?v1 )(sCons$d ?v1 (sfilter$a ?v0 ?v2 ))(sfilter$a ?v0 ?v2 ))):pattern ((sfilter$a ?v0 (sCons$d ?v1 ?v2 ))))):named a60 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_bool_fun$ )(?v1 A_b_a_fun_fun$ )(?v2 A_b_a_fun_fun_stream$ ))(! (= (sfilter$b ?v0 (sCons$e ?v1 ?v2 ))(ite (fun_app$i ?v0 ?v1 )(sCons$e ?v1 (sfilter$b ?v0 ?v2 ))(sfilter$b ?v0 ?v2 ))):pattern ((sfilter$b ?v0 (sCons$e ?v1 ?v2 ))))):named a61 ))
(assert (! (forall ((?v0 B_a_fun_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(! (= (sfilter$c ?v0 (sCons$a ?v1 ?v2 ))(ite (fun_app$j ?v0 ?v1 )(sCons$a ?v1 (sfilter$c ?v0 ?v2 ))(sfilter$c ?v0 ?v2 ))):pattern ((sfilter$c ?v0 (sCons$a ?v1 ?v2 ))))):named a62 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (sfilter$d ?v0 (sCons$b ?v1 ?v2 ))(ite (fun_app$k ?v0 ?v1 )(sCons$b ?v1 (sfilter$d ?v0 ?v2 ))(sfilter$d ?v0 ?v2 ))):pattern ((sfilter$d ?v0 (sCons$b ?v1 ?v2 ))))):named a63 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (sfilter$e ?v0 (sCons$ ?v1 ?v2 ))(ite (fun_app$l ?v0 ?v1 )(sCons$ ?v1 (sfilter$e ?v0 ?v2 ))(sfilter$e ?v0 ?v2 ))):pattern ((sfilter$e ?v0 (sCons$ ?v1 ?v2 ))))):named a64 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(! (= (sinterleave$ (sCons$c ?v0 ?v1 )?v2 )(sCons$c ?v0 (sinterleave$ ?v2 ?v1 ))):pattern ((sinterleave$ (sCons$c ?v0 ?v1 )?v2 )))):named a65 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_stream$ )(?v2 A_b_fun_stream$ ))(! (= (sinterleave$a (sCons$d ?v0 ?v1 )?v2 )(sCons$d ?v0 (sinterleave$a ?v2 ?v1 ))):pattern ((sinterleave$a (sCons$d ?v0 ?v1 )?v2 )))):named a66 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_a_fun_fun_stream$ )(?v2 A_b_a_fun_fun_stream$ ))(! (= (sinterleave$b (sCons$e ?v0 ?v1 )?v2 )(sCons$e ?v0 (sinterleave$b ?v2 ?v1 ))):pattern ((sinterleave$b (sCons$e ?v0 ?v1 )?v2 )))):named a67 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_stream$ )(?v2 B_a_fun_stream$ ))(! (= (sinterleave$c (sCons$a ?v0 ?v1 )?v2 )(sCons$a ?v0 (sinterleave$c ?v2 ?v1 ))):pattern ((sinterleave$c (sCons$a ?v0 ?v1 )?v2 )))):named a68 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B_stream$ ))(! (= (sinterleave$d (sCons$b ?v0 ?v1 )?v2 )(sCons$b ?v0 (sinterleave$d ?v2 ?v1 ))):pattern ((sinterleave$d (sCons$b ?v0 ?v1 )?v2 )))):named a69 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A_stream$ ))(! (= (sinterleave$e (sCons$ ?v0 ?v1 )?v2 )(sCons$ ?v0 (sinterleave$e ?v2 ?v1 ))):pattern ((sinterleave$e (sCons$ ?v0 ?v1 )?v2 )))):named a70 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (st_ap$ (siterate$c id$c ?v0 )(siterate$j id$j ?v1 ))(siterate$k id$k (fun_app$ ?v0 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (st_ap$a (siterate$ id$ ?v0 )(siterate$j id$j ?v1 ))(siterate$j id$j (fun_app$m ?v0 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (st_ap$b (siterate$a id$a ?v0 )(siterate$k id$k ?v1 ))(siterate$j id$j (fun_app$n ?v0 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (st_ap$c (siterate$b id$b ?v0 )(siterate$k id$k ?v1 ))(siterate$k id$k (fun_app$o ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_b_fun_b_fun$ )(?v1 A_b_fun$ ))(= (st_ap$j (siterate$l id$l ?v0 )(siterate$a id$a ?v1 ))(siterate$j id$j (fun_app$v ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_b_fun_a_fun$ )(?v1 A_b_fun$ ))(= (st_ap$k (siterate$m id$m ?v0 )(siterate$a id$a ?v1 ))(siterate$k id$k (fun_app$w ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_a_fun_b_fun$ )(?v1 A_a_fun$ ))(= (st_ap$i (siterate$i id$i ?v0 )(siterate$b id$b ?v1 ))(siterate$j id$j (fun_app$u ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (st_ap$l (siterate$n id$n ?v0 )(siterate$b id$b ?v1 ))(siterate$k id$k (fun_app$x ?v0 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 B_a_b_fun_fun$ )(?v1 B$ ))(= (st_ap$m (siterate$o id$o ?v0 )(siterate$j id$j ?v1 ))(siterate$a id$a (fun_app$y ?v0 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 B_a_a_fun_fun$ )(?v1 B$ ))(= (st_ap$n (siterate$p id$p ?v0 )(siterate$j id$j ?v1 ))(siterate$b id$b (fun_app$z ?v0 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 B_b_fun_stream$ ))(= (st_ap$o (siterate$q id$q id$ )?v0 )?v0 )):named a81 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(= (st_ap$h (siterate$h id$h id$c )?v0 )?v0 )):named a82 ))
(assert (! (forall ((?v0 A_a_b_a_fun_fun_fun_stream$ ))(= (st_ap$p (siterate$r id$r id$s )?v0 )?v0 )):named a83 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_stream$ ))(= (st_ap$q (siterate$s id$t id$u )?v0 )?v0 )):named a84 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ ))(= (st_ap$r (siterate$t id$v id$w )?v0 )?v0 )):named a85 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream$ ))(= (st_ap$s (siterate$u id$x id$g )?v0 )?v0 )):named a86 ))
(assert (! (forall ((?v0 A_b_fun_stream$ ))(= (st_ap$t (siterate$v id$y id$a )?v0 )?v0 )):named a87 ))
(assert (! (forall ((?v0 A_a_fun_stream$ ))(= (st_ap$u (siterate$w id$z id$b )?v0 )?v0 )):named a88 ))
(assert (! (forall ((?v0 B_stream$ ))(= (st_ap$a (siterate$ id$ id$j )?v0 )?v0 )):named a89 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$c (siterate$b id$b id$k )?v0 )?v0 )):named a90 ))
(assert (! (forall ((?v0 B_b_fun_b_b_fun_fun$ )(?v1 B_b_fun$ ))(= (siterate$ ?v0 ?v1 )(sCons$f ?v1 (siterate$ ?v0 (fun_app$aa ?v0 ?v1 ))))):named a91 ))
(assert (! (forall ((?v0 A_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_fun$ )(?v1 A_a_b_a_fun_fun_fun$ ))(= (siterate$x ?v0 ?v1 )(sCons$r ?v1 (siterate$x ?v0 (fun_app$ab ?v0 ?v1 ))))):named a92 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_a_a_b_fun_fun_fun$ )(?v1 A_a_b_fun_fun$ ))(= (siterate$y ?v0 ?v1 )(sCons$t ?v1 (siterate$y ?v0 (fun_app$ac ?v0 ?v1 ))))):named a93 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (siterate$z ?v0 ?v1 )(sCons$v ?v1 (siterate$z ?v0 (fun_app$ad ?v0 ?v1 ))))):named a94 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(?v1 A_b_a_fun_fun$ ))(= (siterate$g ?v0 ?v1 )(sCons$e ?v1 (siterate$g ?v0 (fun_app$ae ?v0 ?v1 ))))):named a95 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun$ ))(= (siterate$a ?v0 ?v1 )(sCons$d ?v1 (siterate$a ?v0 (fun_app$af ?v0 ?v1 ))))):named a96 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (siterate$b ?v0 ?v1 )(sCons$c ?v1 (siterate$b ?v0 (fun_app$ag ?v0 ?v1 ))))):named a97 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (siterate$c ?v0 ?v1 )(sCons$a ?v1 (siterate$c ?v0 (fun_app$t ?v0 ?v1 ))))):named a98 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (siterate$j ?v0 ?v1 )(sCons$b ?v1 (siterate$j ?v0 (fun_app$m ?v0 ?v1 ))))):named a99 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (siterate$k ?v0 ?v1 )(sCons$ ?v1 (siterate$k ?v0 (fun_app$o ?v0 ?v1 ))))):named a100 ))
(assert (! (forall ((?v0 B_b_fun$ ))(! (= (fun_app$aa id$ ?v0 )?v0 ):pattern ((fun_app$aa id$ ?v0 )))):named a101 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$t id$c ?v0 )?v0 ):pattern ((fun_app$t id$c ?v0 )))):named a102 ))
(assert (! (forall ((?v0 A_a_b_a_fun_fun_fun$ ))(! (= (fun_app$ab id$s ?v0 )?v0 ):pattern ((fun_app$ab id$s ?v0 )))):named a103 ))
(assert (! (forall ((?v0 A_a_b_fun_fun$ ))(! (= (fun_app$ac id$u ?v0 )?v0 ):pattern ((fun_app$ac id$u ?v0 )))):named a104 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$ad id$w ?v0 )?v0 ):pattern ((fun_app$ad id$w ?v0 )))):named a105 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ ))(! (= (fun_app$ae id$g ?v0 )?v0 ):pattern ((fun_app$ae id$g ?v0 )))):named a106 ))
(assert (! (forall ((?v0 A_b_fun$ ))(! (= (fun_app$af id$a ?v0 )?v0 ):pattern ((fun_app$af id$a ?v0 )))):named a107 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$ag id$b ?v0 )?v0 ):pattern ((fun_app$ag id$b ?v0 )))):named a108 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$m id$j ?v0 )?v0 ):pattern ((fun_app$m id$j ?v0 )))):named a109 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$o id$k ?v0 )?v0 ):pattern ((fun_app$o id$k ?v0 )))):named a110 ))
(assert (! (forall ((?v0 A_a_b_fun_fun$ ))(! (= (fun_app$ac id$u ?v0 )?v0 ):pattern ((fun_app$ac id$u ?v0 )))):named a111 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$ad id$w ?v0 )?v0 ):pattern ((fun_app$ad id$w ?v0 )))):named a112 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ ))(! (= (fun_app$ae id$g ?v0 )?v0 ):pattern ((fun_app$ae id$g ?v0 )))):named a113 ))
(assert (! (forall ((?v0 A_b_fun$ ))(! (= (fun_app$af id$a ?v0 )?v0 ):pattern ((fun_app$af id$a ?v0 )))):named a114 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$ag id$b ?v0 )?v0 ):pattern ((fun_app$ag id$b ?v0 )))):named a115 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$m id$j ?v0 )?v0 ):pattern ((fun_app$m id$j ?v0 )))):named a116 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$o id$k ?v0 )?v0 ):pattern ((fun_app$o id$k ?v0 )))):named a117 ))
(check-sat )
;(get-unsat-core )
