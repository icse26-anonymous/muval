;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun$ 0 )
(declare-sort B_a_fun_b_fun$ 0 )
(declare-sort B_b_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_b_a_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort A_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_fun_b_a_fun_b_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun_b_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_b_b_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_a_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort B_a_fun_stream$ 0)
(declare-sort B_stream$ 0)
(declare-sort B_a_fun_b_a_fun_fun_stream$ 0)
(declare-sort B_b_fun_stream$ 0)
(declare-sort A_b_fun_stream$ 0)
(declare-sort A_a_fun_stream$ 0)
(declare-sort B_a_fun_b_fun_stream$ 0)
(declare-sort B_a_fun_a_fun_stream$ 0)
(declare-sort A_b_a_fun_fun_stream$ 0)
(declare-sort B_b_a_fun_fun_stream$ 0)
(declare-sort B_b_b_a_fun_fun_fun_stream$ 0)
(declare-sort A_b_a_fun_b_a_fun_fun_fun_stream$ 0)
(declare-sort A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ 0)
(declare-sort A_b_b_a_fun_fun_fun_stream$ 0)
(declare-sort A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$ 0)
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ 0)
(declare-sort A_b_fun_a_b_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_fun_stream$ 0)
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ 0)
(declare-sort B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$ 0)
(declare-sort B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun select$ (B_a_fun_stream$)B_a_fun$)
(declare-fun selecta$ (B_a_fun_stream$)B_a_fun_stream$)
(declare-fun sCons$a (B_a_fun$ B_a_fun_stream$ )B_a_fun_stream$)
(declare-fun shd$a (B_stream$)B$)
(declare-fun stl$a (B_stream$)B_stream$)
(declare-fun sCons$b (B$ B_stream$ )B_stream$)
(declare-fun selectb$ (B_a_fun_b_a_fun_fun_stream$)B_a_fun_b_a_fun_fun$)
(declare-fun selectc$ (B_a_fun_b_a_fun_fun_stream$)B_a_fun_b_a_fun_fun_stream$)
(declare-fun sCons$c (B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$)
(declare-fun selectd$ (B_b_fun_stream$)B_b_fun$)
(declare-fun selecte$ (B_b_fun_stream$)B_b_fun_stream$)
(declare-fun sCons$d (B_b_fun$ B_b_fun_stream$ )B_b_fun_stream$)
(declare-fun selectf$ (A_b_fun_stream$)A_b_fun$)
(declare-fun selectg$ (A_b_fun_stream$)A_b_fun_stream$)
(declare-fun sCons$e (A_b_fun$ A_b_fun_stream$ )A_b_fun_stream$)
(declare-fun selecth$ (A_a_fun_stream$)A_a_fun$)
(declare-fun selecti$ (A_a_fun_stream$)A_a_fun_stream$)
(declare-fun sCons$f (A_a_fun$ A_a_fun_stream$ )A_a_fun_stream$)
(declare-fun selectj$ (B_a_fun_b_fun_stream$)B_a_fun_b_fun$)
(declare-fun selectk$ (B_a_fun_b_fun_stream$)B_a_fun_b_fun_stream$)
(declare-fun sCons$g (B_a_fun_b_fun$ B_a_fun_b_fun_stream$ )B_a_fun_b_fun_stream$)
(declare-fun selectl$ (B_a_fun_a_fun_stream$)B_a_fun_a_fun$)
(declare-fun selectm$ (B_a_fun_a_fun_stream$)B_a_fun_a_fun_stream$)
(declare-fun sCons$h (B_a_fun_a_fun$ B_a_fun_a_fun_stream$ )B_a_fun_a_fun_stream$)
(declare-fun selectn$ (A_b_a_fun_fun_stream$)A_b_a_fun_fun$)
(declare-fun selecto$ (A_b_a_fun_fun_stream$)A_b_a_fun_fun_stream$)
(declare-fun sCons$i (A_b_a_fun_fun$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$)
(declare-fun selectp$ (B_b_a_fun_fun_stream$)B_b_a_fun_fun$)
(declare-fun selectq$ (B_b_a_fun_fun_stream$)B_b_a_fun_fun_stream$)
(declare-fun sCons$j (B_b_a_fun_fun$ B_b_a_fun_fun_stream$ )B_b_a_fun_fun_stream$)
(declare-fun selectr$ (B_b_b_a_fun_fun_fun_stream$)B_b_b_a_fun_fun_fun$)
(declare-fun selects$ (B_b_b_a_fun_fun_fun_stream$)B_b_b_a_fun_fun_fun_stream$)
(declare-fun sCons$k (B_b_b_a_fun_fun_fun$ B_b_b_a_fun_fun_fun_stream$ )B_b_b_a_fun_fun_fun_stream$)
(declare-fun selectt$ (A_b_a_fun_b_a_fun_fun_fun_stream$)A_b_a_fun_b_a_fun_fun_fun$)
(declare-fun selectu$ (A_b_a_fun_b_a_fun_fun_fun_stream$)A_b_a_fun_b_a_fun_fun_fun_stream$)
(declare-fun sCons$l (A_b_a_fun_b_a_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_stream$ )A_b_a_fun_b_a_fun_fun_fun_stream$)
(declare-fun selectv$ (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$)A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$)
(declare-fun selectw$ (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$)A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$)
(declare-fun sCons$m (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ )A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$)
(declare-fun selectx$ (A_b_b_a_fun_fun_fun_stream$)A_b_b_a_fun_fun_fun$)
(declare-fun selecty$ (A_b_b_a_fun_fun_fun_stream$)A_b_b_a_fun_fun_fun_stream$)
(declare-fun sCons$n (A_b_b_a_fun_fun_fun$ A_b_b_a_fun_fun_fun_stream$ )A_b_b_a_fun_fun_fun_stream$)
(declare-fun selectz$ (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$)A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$)
(declare-fun selecua$ (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$)A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$)
(declare-fun sCons$o (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$ )A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$)
(declare-fun selecub$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)A_b_a_fun_fun_a_b_a_fun_fun_fun$)
(declare-fun selecuc$ (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)
(declare-fun sCons$p (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$)
(declare-fun selecud$ (A_b_fun_a_b_fun_fun_stream$)A_b_fun_a_b_fun_fun$)
(declare-fun selecue$ (A_b_fun_a_b_fun_fun_stream$)A_b_fun_a_b_fun_fun_stream$)
(declare-fun sCons$q (A_b_fun_a_b_fun_fun$ A_b_fun_a_b_fun_fun_stream$ )A_b_fun_a_b_fun_fun_stream$)
(declare-fun selecuf$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun$)
(declare-fun selecug$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun_stream$)
(declare-fun sCons$r (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$)
(declare-fun selecuh$ (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$)B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$)
(declare-fun selecui$ (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$)B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$)
(declare-fun sCons$s (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$)
(declare-fun selecuj$ (B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$)B_b_a_fun_fun_b_b_a_fun_fun_fun$)
(declare-fun selecuk$ (B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$)B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$)
(declare-fun sCons$t (B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$ )B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$)
(declare-fun selecul$ (B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$)B_a_fun_b_a_fun_b_a_fun_fun_fun$)
(declare-fun selecum$ (B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$)B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$)
(declare-fun sCons$u (B_a_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$ )B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$)
(declare-fun f$ ()B_a_fun$ )
(declare-fun x$ ()B$ )
(declare-fun id$ ()B_a_fun_b_a_fun_fun$ )
(declare-fun uu$ (B_a_fun_b_a_fun_fun$ )A_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun xs$ ()B_stream$ )
(declare-fun id$a ()B_b_fun$ )
(declare-fun id$b ()A_a_fun$ )
(declare-fun id$c ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun id$d ()B_b_fun_b_b_fun_fun$ )
(declare-fun id$e ()A_b_fun_a_b_fun_fun$ )
(declare-fun id$f ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$g ()B_a_fun_b_fun_b_a_fun_b_fun_fun$ )
(declare-fun id$h ()B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun id$i ()A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun id$j ()B_b_a_fun_fun_b_b_a_fun_fun_fun$ )
(declare-fun id$k ()B_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_fun$ )
(declare-fun id$l ()A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_fun$ )
(declare-fun id$m ()A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun id$n ()A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_a_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_fun$ )
(declare-fun id$o ()A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ )
(declare-fun id$p ()A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun id$q ()A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun id$r ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun id$s ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun id$t ()B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ )
(declare-fun id$u ()B_a_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun uua$ (B_b_a_fun_fun$ )A_b_b_a_fun_fun_fun$ )
(declare-fun uub$ (B_a_fun$ )A_b_a_fun_fun$ )
(declare-fun uuc$ (B$ )A_b_fun$ )
(declare-fun uud$ (A$ )A_a_fun$ )
(declare-fun uue$ (B_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun uuf$ (B_a_fun$ )B_b_a_fun_fun$ )
(declare-fun uug$ (A$ )B_a_fun$ )
(declare-fun uuh$ (B_a_fun_b_a_fun_b_a_fun_fun_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun uui$ (B_b_b_a_fun_fun_fun$ )B_b_a_fun_fun$ )
(declare-fun uuj$ (B_b_a_fun_fun$ )B_a_fun$ )
(declare-fun uuk$ (B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun smap$ (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_stream$ )A_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun smap$a (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun_stream$ )A_b_b_a_fun_fun_fun_stream$ )
(declare-fun smap$b (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun smap$c (A_b_fun_a_b_fun_fun$ A_b_fun_stream$ )A_b_fun_stream$ )
(declare-fun smap$d (A_a_fun_a_a_fun_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap$e (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun smap$f (B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun_stream$ )B_b_a_fun_fun_stream$ )
(declare-fun smap$g (B_a_fun_b_a_fun_fun$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun smap$h (B_b_fun$ B_stream$ )B_stream$ )
(declare-fun smap$i (A_a_fun$ A_stream$ )A_stream$ )
(declare-fun st_ap$ (B_a_fun_stream$ B_stream$ )A_stream$ )
(declare-fun st_ap$a (B_a_fun_b_a_fun_fun_stream$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$b (B_b_fun_stream$ B_stream$ )B_stream$ )
(declare-fun st_ap$c (A_b_fun_stream$ A_stream$ )B_stream$ )
(declare-fun st_ap$d (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun st_ap$e (B_a_fun_b_fun_stream$ B_a_fun_stream$ )B_stream$ )
(declare-fun st_ap$f (B_a_fun_a_fun_stream$ B_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$g (A_b_a_fun_fun_stream$ A_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$h (B_b_a_fun_fun_stream$ B_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$i (B_b_b_a_fun_fun_fun_stream$ B_stream$ )B_b_a_fun_fun_stream$ )
(declare-fun st_ap$j (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ A_b_a_fun_b_a_fun_fun_fun_stream$ )A_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun st_ap$k (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$ A_b_b_a_fun_fun_fun_stream$ )A_b_b_a_fun_fun_fun_stream$ )
(declare-fun st_ap$l (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun st_ap$m (A_b_fun_a_b_fun_fun_stream$ A_b_fun_stream$ )A_b_fun_stream$ )
(declare-fun st_ap$n (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$o (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun st_ap$p (B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$ B_b_a_fun_fun_stream$ )B_b_a_fun_fun_stream$ )
(declare-fun st_ap$q (A_b_a_fun_b_a_fun_fun_fun_stream$ A_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun st_ap$r (A_b_b_a_fun_fun_fun_stream$ A_stream$ )B_b_a_fun_fun_stream$ )
(declare-fun st_ap$s (B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$ B_a_fun_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun fun_app$ (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun map_fun$ (B_b_fun$ )A_a_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun smember$ (B_b_a_fun_fun$ B_b_a_fun_fun_stream$ )Bool )
(declare-fun fun_app$a (B_a_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$b (B_b_a_fun_fun$ B$ )B_a_fun$ )
(declare-fun fun_app$c (B_b_b_a_fun_fun_fun$ B$ )B_b_a_fun_fun$ )
(declare-fun fun_app$d (B_a_fun$ B$ )A$ )
(declare-fun fun_app$e (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun fun_app$f (A_b_a_fun_b_a_fun_fun_fun$ A$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$g (A_b_b_a_fun_fun_fun$ A$ )B_b_a_fun_fun$ )
(declare-fun fun_app$h (A_b_a_fun_fun$ A$ )B_a_fun$ )
(declare-fun fun_app$i (A_b_fun$ A$ )B$ )
(declare-fun fun_app$j (A_a_fun$ A$ )A$ )
(declare-fun fun_app$k (B_b_fun$ B$ )B$ )
(declare-fun fun_app$l (B_a_fun_b_fun$ B_a_fun$ )B$ )
(declare-fun fun_app$m (B_a_fun_a_fun$ B_a_fun$ )A$ )
(declare-fun fun_app$n (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun$ )A_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun fun_app$o (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun$ )A_b_b_a_fun_fun_fun$ )
(declare-fun fun_app$p (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun$ )
(declare-fun fun_app$q (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun$ )
(declare-fun fun_app$r (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$s (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$t (B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun$ )B_b_a_fun_fun$ )
(declare-fun fun_app$u (A_a_fun_b_a_fun_b_a_fun_fun_fun$ A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$v (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun fun_app$w (B_b_fun_b_b_fun_b_b_fun_fun_fun$ B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun fun_app$x (B_b_fun_a_b_fun_a_b_fun_fun_fun$ B_b_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun fun_app$y (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$z (B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ B_b_fun$ )B_a_fun_b_fun_b_a_fun_b_fun_fun$ )
(declare-fun map_fun$a (B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$b (B_b_fun$ )B_b_fun_b_b_fun_b_b_fun_fun_fun$ )
(declare-fun map_fun$c (A_a_fun$ )B_b_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun map_fun$d (A_a_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun map_fun$e (B_a_fun_b_a_fun_fun$ )B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ )
(declare-fun map_fun$f (B_a_fun_b_a_fun_fun$ )A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ )
(declare-fun map_fun$g (B_b_fun$ )B_a_fun_b_a_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$h (A_a_fun$ )B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$i (B_b_fun$ )B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_fun_fun$ )
(declare-fun siterate$ (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun_stream$ )
(declare-fun smember$a (B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_stream$ )Bool )
(declare-fun smember$b (B_a_fun$ B_a_fun_stream$ )Bool )
(declare-fun smember$c (B$ B_stream$ )Bool )
(declare-fun smember$d (A$ A_stream$ )Bool )
(declare-fun fun_app$aa (A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ A_a_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun fun_app$ab (B_a_fun_b_a_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_b_a_fun_fun_b_b_a_fun_fun_fun$ )
(declare-fun fun_app$ac (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun fun_app$ad (B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_fun_fun$ B_b_a_fun_fun_b_b_a_fun_fun_fun$ )B_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_fun$ )
(declare-fun siterate$a (B_b_fun$ B$ )B_stream$ )
(declare-fun siterate$b (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$c (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$d (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun_stream$ )
(declare-fun siterate$e (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun_stream$ )
(declare-fun siterate$f (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$g (B_a_fun_b_fun_b_a_fun_b_fun_fun$ B_a_fun_b_fun$ )B_a_fun_b_fun_stream$ )
(declare-fun siterate$h (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ )B_a_fun_a_fun_stream$ )
(declare-fun siterate$i (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun_stream$ )
(declare-fun siterate$j (B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun$ )B_b_a_fun_fun_stream$ )
(declare-fun siterate$k (B_b_b_a_fun_fun_fun_b_b_b_a_fun_fun_fun_fun$ B_b_b_a_fun_fun_fun$ )B_b_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$l (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ )
(declare-fun siterate$m (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_a_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ )A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_stream$ )
(declare-fun siterate$n (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$o (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ A_b_fun_a_b_fun_fun$ )A_b_fun_a_b_fun_fun_stream$ )
(declare-fun siterate$p (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$q (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$r (B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ B_b_a_fun_fun_b_b_a_fun_fun_fun$ )B_b_a_fun_fun_b_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$s (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun$ )A_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$t (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun$ )A_b_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$u (B_a_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_b_a_fun_fun_fun$ )B_a_fun_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun iso_tuple_update_accessor_eq_assist$ (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$a (A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_a_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun$ A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ A_b_b_a_fun_fun_fun$ A_b_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$b (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ A_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$c (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ A_b_fun_a_b_fun_fun$ A_b_fun$ A_b_fun_a_b_fun_fun$ A_b_fun$ A_b_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$d (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ A_a_fun$ A_a_fun_a_a_fun_fun$ A_a_fun$ A_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$e (B_b_fun_b_b_fun_fun$ B_b_fun$ B$ B_b_fun$ B$ B$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$f (A_a_fun_a_a_fun_fun$ A_a_fun$ A$ A_a_fun$ A$ A$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$g (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$h (B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun$ B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun$ B_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$i (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$ (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ A_b_fun_a_b_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$a (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$b (B_b_fun_b_b_fun_fun$ B_b_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$c (A_a_fun_a_a_fun_fun$ A_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$d (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$e (B_b_a_fun_fun_b_b_a_fun_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ B_b_a_fun_fun_b_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$f (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )Bool )
(assert (! (forall ((?v0 B_a_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun$ ))(! (= (fun_app$ (uuh$ ?v0 )?v1 )(fun_app$ (fun_app$a ?v0 ?v1 )?v1 )):pattern ((fun_app$ (uuh$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 B_b_b_a_fun_fun_fun$ )(?v1 B$ ))(! (= (fun_app$b (uui$ ?v0 )?v1 )(fun_app$b (fun_app$c ?v0 ?v1 )?v1 )):pattern ((fun_app$b (uui$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ ))(! (= (fun_app$d (uuj$ ?v0 )?v1 )(fun_app$d (fun_app$b ?v0 ?v1 )?v1 )):pattern ((fun_app$d (uuj$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ ))(! (= (fun_app$ (fun_app$a (fun_app$e (uuk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ ?v1 (fun_app$ ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$a (fun_app$e (uuk$ ?v0 )?v1 )?v2 )?v3 )))):named a3 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 A$ ))(! (= (fun_app$f (uu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$f (uu$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 A$ ))(! (= (fun_app$g (uua$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (uua$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ ))(! (= (fun_app$ (uue$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uue$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(! (= (fun_app$b (uuf$ ?v0 )?v1 )?v0 ):pattern ((fun_app$b (uuf$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A$ ))(! (= (fun_app$h (uub$ ?v0 )?v1 )?v0 ):pattern ((fun_app$h (uub$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$i (uuc$ ?v0 )?v1 )?v0 ):pattern ((fun_app$i (uuc$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$d (uug$ ?v0 )?v1 )?v0 ):pattern ((fun_app$d (uug$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$j (uud$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (uud$ ?v0 )?v1 )))):named a11 ))
(assert (! (not (= (st_ap$ (siterate$ id$ f$ )(sCons$b x$ xs$ ))(sCons$ (fun_app$d f$ x$ )(st_ap$ (siterate$ id$ f$ )xs$ )))):named a12 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (st_ap$ (siterate$ id$ ?v0 )(siterate$a id$a ?v1 ))(siterate$b id$b (fun_app$d ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (st_ap$a (siterate$c id$c ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$ ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (st_ap$b (siterate$d id$d ?v0 )(siterate$a id$a ?v1 ))(siterate$a id$a (fun_app$k ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (st_ap$c (siterate$e id$e ?v0 )(siterate$b id$b ?v1 ))(siterate$a id$a (fun_app$i ?v0 ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (st_ap$d (siterate$f id$f ?v0 )(siterate$b id$b ?v1 ))(siterate$b id$b (fun_app$j ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 B_a_fun_b_fun$ )(?v1 B_a_fun$ ))(= (st_ap$e (siterate$g id$g ?v0 )(siterate$ id$ ?v1 ))(siterate$a id$a (fun_app$l ?v0 ?v1 )))):named a18 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun$ ))(= (st_ap$f (siterate$h id$h ?v0 )(siterate$ id$ ?v1 ))(siterate$b id$b (fun_app$m ?v0 ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A$ ))(= (st_ap$g (siterate$i id$i ?v0 )(siterate$b id$b ?v1 ))(siterate$ id$ (fun_app$h ?v0 ?v1 )))):named a20 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ ))(= (st_ap$h (siterate$j id$j ?v0 )(siterate$a id$a ?v1 ))(siterate$ id$ (fun_app$b ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 B_b_b_a_fun_fun_fun$ )(?v1 B$ ))(= (st_ap$i (siterate$k id$k ?v0 )(siterate$a id$a ?v1 ))(siterate$j id$j (fun_app$c ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun_stream$ ))(= (st_ap$j (siterate$l id$l id$m )?v0 )?v0 )):named a23 ))
(assert (! (forall ((?v0 A_b_b_a_fun_fun_fun_stream$ ))(= (st_ap$k (siterate$m id$n id$o )?v0 )?v0 )):named a24 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream$ ))(= (st_ap$l (siterate$n id$p id$i )?v0 )?v0 )):named a25 ))
(assert (! (forall ((?v0 A_b_fun_stream$ ))(= (st_ap$m (siterate$o id$q id$e )?v0 )?v0 )):named a26 ))
(assert (! (forall ((?v0 A_a_fun_stream$ ))(= (st_ap$n (siterate$p id$r id$f )?v0 )?v0 )):named a27 ))
(assert (! (forall ((?v0 B_stream$ ))(= (st_ap$b (siterate$d id$d id$a )?v0 )?v0 )):named a28 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$d (siterate$f id$f id$b )?v0 )?v0 )):named a29 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ ))(= (st_ap$o (siterate$q id$s id$c )?v0 )?v0 )):named a30 ))
(assert (! (forall ((?v0 B_b_a_fun_fun_stream$ ))(= (st_ap$p (siterate$r id$t id$j )?v0 )?v0 )):named a31 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(= (st_ap$a (siterate$c id$c id$ )?v0 )?v0 )):named a32 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B_b_a_fun_fun_stream$ )(?v2 B_b_a_fun_fun$ )(?v3 B_b_a_fun_fun_stream$ ))(= (= (sCons$j ?v0 ?v1 )(sCons$j ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a33 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun_stream$ )(?v2 B_a_fun_b_a_fun_fun$ )(?v3 B_a_fun_b_a_fun_fun_stream$ ))(= (= (sCons$c ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a34 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_stream$ )(?v2 B_a_fun$ )(?v3 B_a_fun_stream$ ))(= (= (sCons$a ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a35 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B$ )(?v3 B_stream$ ))(= (= (sCons$b ?v0 ?v1 )(sCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a36 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a37 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun$ ))(! (= (fun_app$n id$m ?v0 )?v0 ):pattern ((fun_app$n id$m ?v0 )))):named a38 ))
(assert (! (forall ((?v0 A_b_b_a_fun_fun_fun$ ))(! (= (fun_app$o id$o ?v0 )?v0 ):pattern ((fun_app$o id$o ?v0 )))):named a39 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ ))(! (= (fun_app$p id$i ?v0 )?v0 ):pattern ((fun_app$p id$i ?v0 )))):named a40 ))
(assert (! (forall ((?v0 A_b_fun$ ))(! (= (fun_app$q id$e ?v0 )?v0 ):pattern ((fun_app$q id$e ?v0 )))):named a41 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$r id$f ?v0 )?v0 ):pattern ((fun_app$r id$f ?v0 )))):named a42 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$k id$a ?v0 )?v0 ):pattern ((fun_app$k id$a ?v0 )))):named a43 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$j id$b ?v0 )?v0 ):pattern ((fun_app$j id$b ?v0 )))):named a44 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ ))(! (= (fun_app$s id$c ?v0 )?v0 ):pattern ((fun_app$s id$c ?v0 )))):named a45 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ ))(! (= (fun_app$t id$j ?v0 )?v0 ):pattern ((fun_app$t id$j ?v0 )))):named a46 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$ id$ ?v0 )?v0 ):pattern ((fun_app$ id$ ?v0 )))):named a47 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )(?v1 A_b_a_fun_b_a_fun_fun_fun$ ))(= (siterate$s ?v0 ?v1 )(sCons$l ?v1 (siterate$s ?v0 (fun_app$n ?v0 ?v1 ))))):named a48 ))
(assert (! (forall ((?v0 A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ )(?v1 A_b_b_a_fun_fun_fun$ ))(= (siterate$t ?v0 ?v1 )(sCons$n ?v1 (siterate$t ?v0 (fun_app$o ?v0 ?v1 ))))):named a49 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(?v1 A_b_a_fun_fun$ ))(= (siterate$i ?v0 ?v1 )(sCons$i ?v1 (siterate$i ?v0 (fun_app$p ?v0 ?v1 ))))):named a50 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun$ ))(= (siterate$e ?v0 ?v1 )(sCons$e ?v1 (siterate$e ?v0 (fun_app$q ?v0 ?v1 ))))):named a51 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (siterate$f ?v0 ?v1 )(sCons$f ?v1 (siterate$f ?v0 (fun_app$r ?v0 ?v1 ))))):named a52 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ ))(= (siterate$c ?v0 ?v1 )(sCons$c ?v1 (siterate$c ?v0 (fun_app$s ?v0 ?v1 ))))):named a53 ))
(assert (! (forall ((?v0 B_b_a_fun_fun_b_b_a_fun_fun_fun$ )(?v1 B_b_a_fun_fun$ ))(= (siterate$j ?v0 ?v1 )(sCons$j ?v1 (siterate$j ?v0 (fun_app$t ?v0 ?v1 ))))):named a54 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (siterate$ ?v0 ?v1 )(sCons$a ?v1 (siterate$ ?v0 (fun_app$ ?v0 ?v1 ))))):named a55 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (siterate$a ?v0 ?v1 )(sCons$b ?v1 (siterate$a ?v0 (fun_app$k ?v0 ?v1 ))))):named a56 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (siterate$b ?v0 ?v1 )(sCons$ ?v1 (siterate$b ?v0 (fun_app$j ?v0 ?v1 ))))):named a57 ))
(assert (! (forall ((?v0 B_b_a_fun_fun_stream$ ))(=> (forall ((?v1 B_b_a_fun_fun$ )(?v2 B_b_a_fun_fun_stream$ ))(=> (= ?v0 (sCons$j ?v1 ?v2 ))false ))false )):named a58 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ ))(=> (forall ((?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun_stream$ ))(=> (= ?v0 (sCons$c ?v1 ?v2 ))false ))false )):named a59 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(=> (forall ((?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(=> (= ?v0 (sCons$a ?v1 ?v2 ))false ))false )):named a60 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (forall ((?v1 B$ )(?v2 B_stream$ ))(=> (= ?v0 (sCons$b ?v1 ?v2 ))false ))false )):named a61 ))
(assert (! (forall ((?v0 A_stream$ ))(=> (forall ((?v1 A$ )(?v2 A_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a62 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun$ ))(! (= (fun_app$n id$m ?v0 )?v0 ):pattern ((fun_app$n id$m ?v0 )))):named a63 ))
(assert (! (forall ((?v0 A_b_b_a_fun_fun_fun$ ))(! (= (fun_app$o id$o ?v0 )?v0 ):pattern ((fun_app$o id$o ?v0 )))):named a64 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ ))(! (= (fun_app$p id$i ?v0 )?v0 ):pattern ((fun_app$p id$i ?v0 )))):named a65 ))
(assert (! (forall ((?v0 A_b_fun$ ))(! (= (fun_app$q id$e ?v0 )?v0 ):pattern ((fun_app$q id$e ?v0 )))):named a66 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$r id$f ?v0 )?v0 ):pattern ((fun_app$r id$f ?v0 )))):named a67 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$k id$a ?v0 )?v0 ):pattern ((fun_app$k id$a ?v0 )))):named a68 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$j id$b ?v0 )?v0 ):pattern ((fun_app$j id$b ?v0 )))):named a69 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ ))(! (= (fun_app$s id$c ?v0 )?v0 ):pattern ((fun_app$s id$c ?v0 )))):named a70 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ ))(! (= (fun_app$t id$j ?v0 )?v0 ):pattern ((fun_app$t id$j ?v0 )))):named a71 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$ id$ ?v0 )?v0 ):pattern ((fun_app$ id$ ?v0 )))):named a72 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 A_stream$ ))(= (st_ap$q (siterate$s id$m (uu$ ?v0 ))?v1 )(siterate$c id$c ?v0 ))):named a73 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 A_stream$ ))(= (st_ap$r (siterate$t id$o (uua$ ?v0 ))?v1 )(siterate$j id$j ?v0 ))):named a74 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_stream$ ))(= (st_ap$g (siterate$i id$i (uub$ ?v0 ))?v1 )(siterate$ id$ ?v0 ))):named a75 ))
(assert (! (forall ((?v0 B$ )(?v1 A_stream$ ))(= (st_ap$c (siterate$e id$e (uuc$ ?v0 ))?v1 )(siterate$a id$a ?v0 ))):named a76 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(= (st_ap$d (siterate$f id$f (uud$ ?v0 ))?v1 )(siterate$b id$b ?v0 ))):named a77 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_stream$ ))(= (st_ap$a (siterate$c id$c (uue$ ?v0 ))?v1 )(siterate$ id$ ?v0 ))):named a78 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_stream$ ))(= (st_ap$h (siterate$j id$j (uuf$ ?v0 ))?v1 )(siterate$ id$ ?v0 ))):named a79 ))
(assert (! (forall ((?v0 A$ )(?v1 B_stream$ ))(= (st_ap$ (siterate$ id$ (uug$ ?v0 ))?v1 )(siterate$b id$b ?v0 ))):named a80 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun_stream$ )(?v1 A_b_a_fun_b_a_fun_fun_fun$ )(?v2 A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ ))(=> (= ?v0 (sCons$l ?v1 (smap$ ?v2 ?v0 )))(= ?v0 (siterate$s ?v2 ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_b_b_a_fun_fun_fun_stream$ )(?v1 A_b_b_a_fun_fun_fun$ )(?v2 A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ ))(=> (= ?v0 (sCons$n ?v1 (smap$a ?v2 ?v0 )))(= ?v0 (siterate$t ?v2 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream$ )(?v1 A_b_a_fun_fun$ )(?v2 A_b_a_fun_fun_a_b_a_fun_fun_fun$ ))(=> (= ?v0 (sCons$i ?v1 (smap$b ?v2 ?v0 )))(= ?v0 (siterate$i ?v2 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_b_fun_stream$ )(?v1 A_b_fun$ )(?v2 A_b_fun_a_b_fun_fun$ ))(=> (= ?v0 (sCons$e ?v1 (smap$c ?v2 ?v0 )))(= ?v0 (siterate$e ?v2 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun$ )(?v2 A_a_fun_a_a_fun_fun$ ))(=> (= ?v0 (sCons$f ?v1 (smap$d ?v2 ?v0 )))(= ?v0 (siterate$f ?v2 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ ))(=> (= ?v0 (sCons$c ?v1 (smap$e ?v2 ?v0 )))(= ?v0 (siterate$c ?v2 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 B_b_a_fun_fun_stream$ )(?v1 B_b_a_fun_fun$ )(?v2 B_b_a_fun_fun_b_b_a_fun_fun_fun$ ))(=> (= ?v0 (sCons$j ?v1 (smap$f ?v2 ?v0 )))(= ?v0 (siterate$j ?v2 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 B_a_fun_stream$ )(?v1 B_a_fun$ )(?v2 B_a_fun_b_a_fun_fun$ ))(=> (= ?v0 (sCons$a ?v1 (smap$g ?v2 ?v0 )))(= ?v0 (siterate$ ?v2 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B$ )(?v2 B_b_fun$ ))(=> (= ?v0 (sCons$b ?v1 (smap$h ?v2 ?v0 )))(= ?v0 (siterate$a ?v2 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A$ )(?v2 A_a_fun$ ))(=> (= ?v0 (sCons$ ?v1 (smap$i ?v2 ?v0 )))(= ?v0 (siterate$b ?v2 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B_b_a_fun_fun$ )(?v2 B_b_a_fun_fun_stream$ ))(! (= (smember$ ?v0 (sCons$j ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$ ?v0 ?v2 ))):pattern ((smember$ ?v0 (sCons$j ?v1 ?v2 ))))):named a91 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun_stream$ ))(! (= (smember$a ?v0 (sCons$c ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$a ?v0 ?v2 ))):pattern ((smember$a ?v0 (sCons$c ?v1 ?v2 ))))):named a92 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(! (= (smember$b ?v0 (sCons$a ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$b ?v0 ?v2 ))):pattern ((smember$b ?v0 (sCons$a ?v1 ?v2 ))))):named a93 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (smember$c ?v0 (sCons$b ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$c ?v0 ?v2 ))):pattern ((smember$c ?v0 (sCons$b ?v1 ?v2 ))))):named a94 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_stream$ ))(! (= (smember$d ?v0 (sCons$ ?v1 ?v2 ))(ite (= ?v0 ?v1 )true (smember$d ?v0 ?v2 ))):pattern ((smember$d ?v0 (sCons$ ?v1 ?v2 ))))):named a95 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun$ )(?v1 A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )(?v2 A_b_a_fun_b_a_fun_fun_fun$ ))(=> (= ?v0 (fun_app$n ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$ id$l id$m ?v2 ?v1 ?v0 ?v2 ))):named a96 ))
(assert (! (forall ((?v0 A_b_b_a_fun_fun_fun$ )(?v1 A_b_b_a_fun_fun_fun_a_b_b_a_fun_fun_fun_fun$ )(?v2 A_b_b_a_fun_fun_fun$ ))(=> (= ?v0 (fun_app$o ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$a id$n id$o ?v2 ?v1 ?v0 ?v2 ))):named a97 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(?v2 A_b_a_fun_fun$ ))(=> (= ?v0 (fun_app$p ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$b id$p id$i ?v2 ?v1 ?v0 ?v2 ))):named a98 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_a_b_fun_fun$ )(?v2 A_b_fun$ ))(=> (= ?v0 (fun_app$q ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$c id$q id$e ?v2 ?v1 ?v0 ?v2 ))):named a99 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_a_a_fun_fun$ )(?v2 A_a_fun$ ))(=> (= ?v0 (fun_app$r ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$d id$r id$f ?v2 ?v1 ?v0 ?v2 ))):named a100 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ )(?v2 B$ ))(=> (= ?v0 (fun_app$k ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$e id$d id$a ?v2 ?v1 ?v0 ?v2 ))):named a101 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ ))(=> (= ?v0 (fun_app$j ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$f id$f id$b ?v2 ?v1 ?v0 ?v2 ))):named a102 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun$ ))(=> (= ?v0 (fun_app$s ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$g id$s id$c ?v2 ?v1 ?v0 ?v2 ))):named a103 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B_b_a_fun_fun_b_b_a_fun_fun_fun$ )(?v2 B_b_a_fun_fun$ ))(=> (= ?v0 (fun_app$t ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$h id$t id$j ?v2 ?v1 ?v0 ?v2 ))):named a104 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun$ ))(=> (= ?v0 (fun_app$ ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$i id$c id$ ?v2 ?v1 ?v0 ?v2 ))):named a105 ))
(assert (! (iso_tuple_update_accessor_cong_assist$ id$q id$e ):named a106 ))
(assert (! (iso_tuple_update_accessor_cong_assist$a id$r id$f ):named a107 ))
(assert (! (iso_tuple_update_accessor_cong_assist$b id$d id$a ):named a108 ))
(assert (! (iso_tuple_update_accessor_cong_assist$c id$f id$b ):named a109 ))
(assert (! (iso_tuple_update_accessor_cong_assist$d id$s id$c ):named a110 ))
(assert (! (iso_tuple_update_accessor_cong_assist$e id$t id$j ):named a111 ))
(assert (! (iso_tuple_update_accessor_cong_assist$f id$c id$ ):named a112 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun_stream$ ))(= (st_ap$a (st_ap$s (siterate$u id$u ?v0 )?v1 )?v1 )(st_ap$a (siterate$c id$c (uuh$ ?v0 ))?v1 ))):named a113 ))
(assert (! (forall ((?v0 B_b_b_a_fun_fun_fun$ )(?v1 B_stream$ ))(= (st_ap$h (st_ap$i (siterate$k id$k ?v0 )?v1 )?v1 )(st_ap$h (siterate$j id$j (uui$ ?v0 ))?v1 ))):named a114 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B_stream$ ))(= (st_ap$ (st_ap$h (siterate$j id$j ?v0 )?v1 )?v1 )(st_ap$ (siterate$ id$ (uuj$ ?v0 ))?v1 ))):named a115 ))
(assert (! (= (fun_app$u (map_fun$ id$a )id$b )id$ ):named a116 ))
(assert (! (= (fun_app$v (map_fun$a id$ )id$ )id$c ):named a117 ))
(assert (! (= (fun_app$w (map_fun$b id$a )id$a )id$d ):named a118 ))
(assert (! (= (fun_app$x (map_fun$c id$b )id$a )id$e ):named a119 ))
(assert (! (= (fun_app$y (map_fun$d id$b )id$b )id$f ):named a120 ))
(assert (! (= (fun_app$z (map_fun$e id$ )id$a )id$g ):named a121 ))
(assert (! (= (fun_app$aa (map_fun$f id$ )id$b )id$h ):named a122 ))
(assert (! (= (fun_app$ab (map_fun$g id$a )id$ )id$j ):named a123 ))
(assert (! (= (fun_app$ac (map_fun$h id$b )id$ )id$i ):named a124 ))
(assert (! (= (fun_app$ad (map_fun$i id$a )id$j )id$k ):named a125 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun$ )(?v3 B_a_fun$ ))(! (= (fun_app$ (fun_app$s (fun_app$v (map_fun$a ?v0 )?v1 )?v2 )?v3 )(fun_app$ ?v1 (fun_app$ ?v2 (fun_app$ ?v0 ?v3 )))):pattern ((fun_app$ (fun_app$s (fun_app$v (map_fun$a ?v0 )?v1 )?v2 )?v3 )))):named a126 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_a_fun$ )(?v2 B_a_fun$ )(?v3 B$ ))(! (= (fun_app$d (fun_app$ (fun_app$u (map_fun$ ?v0 )?v1 )?v2 )?v3 )(fun_app$j ?v1 (fun_app$d ?v2 (fun_app$k ?v0 ?v3 )))):pattern ((fun_app$d (fun_app$ (fun_app$u (map_fun$ ?v0 )?v1 )?v2 )?v3 )))):named a127 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun$ )(?v3 B_a_fun_b_a_fun_fun$ )(?v4 B_a_fun$ )(?v5 B_a_fun$ ))(! (= (iso_tuple_update_accessor_eq_assist$i ?v0 ?v1 ?v2 ?v3 ?v4 ?v5 )(and (= (fun_app$ (fun_app$s ?v0 ?v3 )?v2 )?v4 )(and (= (fun_app$ ?v1 ?v2 )?v5 )(iso_tuple_update_accessor_cong_assist$f ?v0 ?v1 )))):pattern ((iso_tuple_update_accessor_eq_assist$i ?v0 ?v1 ?v2 ?v3 ?v4 ?v5 )))):named a128 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ ))(= (iso_tuple_update_accessor_cong_assist$f ?v0 ?v1 )(and (forall ((?v2 B_a_fun_b_a_fun_fun$ )(?v3 B_a_fun$ ))(= (fun_app$ (fun_app$s ?v0 (fun_app$a (fun_app$e (uuk$ ?v1 )?v2 )?v3 ))?v3 )(fun_app$ (fun_app$s ?v0 ?v2 )?v3 )))(forall ((?v2 B_a_fun$ ))(= (fun_app$ (fun_app$s ?v0 id$ )?v2 )?v2 ))))):named a129 ))
(check-sat )
;(get-unsat-core )
