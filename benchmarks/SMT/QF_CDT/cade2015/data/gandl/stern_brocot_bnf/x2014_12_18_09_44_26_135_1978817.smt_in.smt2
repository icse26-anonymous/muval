;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_a_fun_set$ 0 )
(declare-sort A_a_tree_fun$ 0 )
(declare-sort A_tree_a_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_tree_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_a_fun_bool_fun$ 0 )
(declare-sort A_a_a_fun_fun_set$ 0 )
(declare-sort A_a_fun_a_fun_set$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_a_fun_a_tree_fun$ 0 )
(declare-sort A_tree_a_a_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_fun$ 0 )
(declare-sort A_a_tree_bool_fun_fun$ 0 )
(declare-sort A_tree_a_bool_fun_fun$ 0 )
(declare-sort A_tree_a_tree_fun_set$ 0 )
(declare-sort A_a_a_fun_bool_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_bool_fun$ 0 )
(declare-sort A_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_bool_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_set$ 0 )
(declare-sort A_a_tree_a_tree_fun_fun$ 0 )
(declare-sort A_tree_a_tree_fun_a_fun$ 0 )
(declare-sort A_tree_a_tree_bool_fun_fun$ 0 )
(declare-sort A_tree_a_tree_fun_bool_fun$ 0 )
(declare-sort A_a_fun_a_tree_bool_fun_fun$ 0 )
(declare-sort A_tree_a_a_fun_bool_fun_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_bool_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_bool_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun$ 0 )
(declare-sort A_tree_a_tree_fun_a_tree_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_tree_a_tree_fun_bool_fun_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun_set$ 0 )
(declare-sort A_tree_a_tree_fun_a_bool_fun_fun$ 0 )
(declare-sort A_a_tree_a_tree_a_tree_fun_fun_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun_a_fun$ 0 )
(declare-sort A_tree_tree_tree_a_tree_tree_tree_fun$ 0 )
(declare-sort A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ 0 )
(declare-sort A_tree$ 0)
(declare-sort A_a_fun_a_a_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_tree$ 0)
(declare-sort A_tree_tree$ 0)
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ 0)
(declare-sort A_tree_a_tree_fun_tree$ 0)
(declare-sort A_a_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_tree$ 0)
(declare-sort A_tree_a_tree_a_tree_fun_fun_tree$ 0)
(declare-sort A_tree_tree_a_tree_tree_fun_tree$ 0)
(declare-sort A_tree_tree_tree$ 0)
(declare-sort A_tree_a_tree_fun_a_fun_tree$ 0)
(declare-sort A_a_fun_a_fun_a_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_a_fun_tree$ 0)
(declare-sort A_tree_tree_tree_tree$ 0)
(declare-sort A_tree_tree_tree_a_tree_tree_tree_fun_tree$ 0)
(declare-sort A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ 0)
(declare-sort A_a_tree_fun_tree$ 0)
(declare-sort A_tree_a_fun_tree$ 0)
(declare-sort A_a_fun_a_tree_fun_tree$ 0)
(declare-sort A_tree_a_a_fun_fun_tree$ 0)
(declare-sort A_tree_a_tree_fun_a_tree_fun_tree$ 0)
(declare-sort A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$ 0)
(declare-fun root$ (A_tree$)A$)
(declare-fun left$ (A_tree$)A_tree$)
(declare-fun right$ (A_tree$)A_tree$)
(declare-fun node$ (A$ A_tree$ A_tree$ )A_tree$)
(declare-fun select$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun$)
(declare-fun selecta$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun_tree$)
(declare-fun selectb$ (A_a_fun_a_a_fun_fun_tree$)A_a_fun_a_a_fun_fun_tree$)
(declare-fun node$a (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$)
(declare-fun selectc$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun$)
(declare-fun selectd$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun_tree$)
(declare-fun selecte$ (A_a_fun_a_fun_tree$)A_a_fun_a_fun_tree$)
(declare-fun node$b (A_a_fun_a_fun$ A_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$)
(declare-fun root$a (A_tree_tree$)A_tree$)
(declare-fun left$a (A_tree_tree$)A_tree_tree$)
(declare-fun right$a (A_tree_tree$)A_tree_tree$)
(declare-fun node$c (A_tree$ A_tree_tree$ A_tree_tree$ )A_tree_tree$)
(declare-fun selectf$ (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$)
(declare-fun selectg$ (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)
(declare-fun selecth$ (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)
(declare-fun node$d (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ )A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$)
(declare-fun selecti$ (A_tree_a_tree_fun_tree$)A_tree_a_tree_fun$)
(declare-fun selectj$ (A_tree_a_tree_fun_tree$)A_tree_a_tree_fun_tree$)
(declare-fun selectk$ (A_tree_a_tree_fun_tree$)A_tree_a_tree_fun_tree$)
(declare-fun node$e (A_tree_a_tree_fun$ A_tree_a_tree_fun_tree$ A_tree_a_tree_fun_tree$ )A_tree_a_tree_fun_tree$)
(declare-fun selectl$ (A_a_fun_tree$)A_a_fun$)
(declare-fun selectm$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun selectn$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun node$f (A_a_fun$ A_a_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$)
(declare-fun selecto$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun$)
(declare-fun selectp$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun selectq$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun node$g (A_a_a_fun_fun$ A_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$)
(declare-fun selectr$ (A_tree_a_tree_a_tree_fun_fun_tree$)A_tree_a_tree_a_tree_fun_fun$)
(declare-fun selects$ (A_tree_a_tree_a_tree_fun_fun_tree$)A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun selectt$ (A_tree_a_tree_a_tree_fun_fun_tree$)A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun node$h (A_tree_a_tree_a_tree_fun_fun$ A_tree_a_tree_a_tree_fun_fun_tree$ A_tree_a_tree_a_tree_fun_fun_tree$ )A_tree_a_tree_a_tree_fun_fun_tree$)
(declare-fun selectu$ (A_tree_tree_a_tree_tree_fun_tree$)A_tree_tree_a_tree_tree_fun$)
(declare-fun selectv$ (A_tree_tree_a_tree_tree_fun_tree$)A_tree_tree_a_tree_tree_fun_tree$)
(declare-fun selectw$ (A_tree_tree_a_tree_tree_fun_tree$)A_tree_tree_a_tree_tree_fun_tree$)
(declare-fun node$i (A_tree_tree_a_tree_tree_fun$ A_tree_tree_a_tree_tree_fun_tree$ A_tree_tree_a_tree_tree_fun_tree$ )A_tree_tree_a_tree_tree_fun_tree$)
(declare-fun root$b (A_tree_tree_tree$)A_tree_tree$)
(declare-fun left$b (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun right$b (A_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun node$j (A_tree_tree$ A_tree_tree_tree$ A_tree_tree_tree$ )A_tree_tree_tree$)
(declare-fun selectx$ (A_tree_a_tree_fun_a_fun_tree$)A_tree_a_tree_fun_a_fun$)
(declare-fun selecty$ (A_tree_a_tree_fun_a_fun_tree$)A_tree_a_tree_fun_a_fun_tree$)
(declare-fun selectz$ (A_tree_a_tree_fun_a_fun_tree$)A_tree_a_tree_fun_a_fun_tree$)
(declare-fun node$k (A_tree_a_tree_fun_a_fun$ A_tree_a_tree_fun_a_fun_tree$ A_tree_a_tree_fun_a_fun_tree$ )A_tree_a_tree_fun_a_fun_tree$)
(declare-fun selecua$ (A_a_fun_a_fun_a_fun_tree$)A_a_fun_a_fun_a_fun$)
(declare-fun selecub$ (A_a_fun_a_fun_a_fun_tree$)A_a_fun_a_fun_a_fun_tree$)
(declare-fun selecuc$ (A_a_fun_a_fun_a_fun_tree$)A_a_fun_a_fun_a_fun_tree$)
(declare-fun node$l (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun_a_fun_tree$ A_a_fun_a_fun_a_fun_tree$ )A_a_fun_a_fun_a_fun_tree$)
(declare-fun selecud$ (A_a_a_fun_fun_a_fun_tree$)A_a_a_fun_fun_a_fun$)
(declare-fun selecue$ (A_a_a_fun_fun_a_fun_tree$)A_a_a_fun_fun_a_fun_tree$)
(declare-fun selecuf$ (A_a_a_fun_fun_a_fun_tree$)A_a_a_fun_fun_a_fun_tree$)
(declare-fun node$m (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_a_fun_tree$ )A_a_a_fun_fun_a_fun_tree$)
(declare-fun root$c (A_tree_tree_tree_tree$)A_tree_tree_tree$)
(declare-fun left$c (A_tree_tree_tree_tree$)A_tree_tree_tree_tree$)
(declare-fun right$c (A_tree_tree_tree_tree$)A_tree_tree_tree_tree$)
(declare-fun node$n (A_tree_tree_tree$ A_tree_tree_tree_tree$ A_tree_tree_tree_tree$ )A_tree_tree_tree_tree$)
(declare-fun selecug$ (A_tree_tree_tree_a_tree_tree_tree_fun_tree$)A_tree_tree_tree_a_tree_tree_tree_fun$)
(declare-fun selecuh$ (A_tree_tree_tree_a_tree_tree_tree_fun_tree$)A_tree_tree_tree_a_tree_tree_tree_fun_tree$)
(declare-fun selecui$ (A_tree_tree_tree_a_tree_tree_tree_fun_tree$)A_tree_tree_tree_a_tree_tree_tree_fun_tree$)
(declare-fun node$o (A_tree_tree_tree_a_tree_tree_tree_fun$ A_tree_tree_tree_a_tree_tree_tree_fun_tree$ A_tree_tree_tree_a_tree_tree_tree_fun_tree$ )A_tree_tree_tree_a_tree_tree_tree_fun_tree$)
(declare-fun selecuj$ (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$)
(declare-fun selecuk$ (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)
(declare-fun selecul$ (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)
(declare-fun node$p (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ )A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$)
(declare-fun selecum$ (A_a_tree_fun_tree$)A_a_tree_fun$)
(declare-fun selecun$ (A_a_tree_fun_tree$)A_a_tree_fun_tree$)
(declare-fun selecuo$ (A_a_tree_fun_tree$)A_a_tree_fun_tree$)
(declare-fun node$q (A_a_tree_fun$ A_a_tree_fun_tree$ A_a_tree_fun_tree$ )A_a_tree_fun_tree$)
(declare-fun selecup$ (A_tree_a_fun_tree$)A_tree_a_fun$)
(declare-fun selecuq$ (A_tree_a_fun_tree$)A_tree_a_fun_tree$)
(declare-fun selecur$ (A_tree_a_fun_tree$)A_tree_a_fun_tree$)
(declare-fun node$r (A_tree_a_fun$ A_tree_a_fun_tree$ A_tree_a_fun_tree$ )A_tree_a_fun_tree$)
(declare-fun selecus$ (A_a_fun_a_tree_fun_tree$)A_a_fun_a_tree_fun$)
(declare-fun selecut$ (A_a_fun_a_tree_fun_tree$)A_a_fun_a_tree_fun_tree$)
(declare-fun selecuu$ (A_a_fun_a_tree_fun_tree$)A_a_fun_a_tree_fun_tree$)
(declare-fun node$s (A_a_fun_a_tree_fun$ A_a_fun_a_tree_fun_tree$ A_a_fun_a_tree_fun_tree$ )A_a_fun_a_tree_fun_tree$)
(declare-fun selecuv$ (A_tree_a_a_fun_fun_tree$)A_tree_a_a_fun_fun$)
(declare-fun selecuw$ (A_tree_a_a_fun_fun_tree$)A_tree_a_a_fun_fun_tree$)
(declare-fun selecux$ (A_tree_a_a_fun_fun_tree$)A_tree_a_a_fun_fun_tree$)
(declare-fun node$t (A_tree_a_a_fun_fun$ A_tree_a_a_fun_fun_tree$ A_tree_a_a_fun_fun_tree$ )A_tree_a_a_fun_fun_tree$)
(declare-fun selecuy$ (A_tree_a_tree_fun_a_tree_fun_tree$)A_tree_a_tree_fun_a_tree_fun$)
(declare-fun selecuz$ (A_tree_a_tree_fun_a_tree_fun_tree$)A_tree_a_tree_fun_a_tree_fun_tree$)
(declare-fun selecva$ (A_tree_a_tree_fun_a_tree_fun_tree$)A_tree_a_tree_fun_a_tree_fun_tree$)
(declare-fun node$u (A_tree_a_tree_fun_a_tree_fun$ A_tree_a_tree_fun_a_tree_fun_tree$ A_tree_a_tree_fun_a_tree_fun_tree$ )A_tree_a_tree_fun_a_tree_fun_tree$)
(declare-fun selecvb$ (A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$)A_tree_a_tree_fun_a_tree_a_tree_fun_fun$)
(declare-fun selecvc$ (A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$)A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$)
(declare-fun selecvd$ (A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$)A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$)
(declare-fun node$v (A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$ A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$ )A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$)
(declare-fun t$ ()A_tree$ )
(declare-fun t$a ()A_tree$ )
(declare-fun mod$ ()A_tree_a_tree_a_tree_fun_fun$ )
(declare-fun mod$a ()A_a_a_fun_fun$ )
(declare-fun mod$b (A_tree_tree_tree_tree$ A_tree_tree_tree_tree$ )A_tree_tree_tree_tree$ )
(declare-fun mod$c ()A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ )
(declare-fun mod$d ()A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )
(declare-fun root$d (A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun$ )
(declare-fun root$e (A_a_fun_a_fun_tree$ )A_a_fun_a_fun$ )
(declare-fun root$f (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ )A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )
(declare-fun root$g (A_tree_a_tree_fun_tree$ )A_tree_a_tree_fun$ )
(declare-fun root$h (A_a_fun_tree$ )A_a_fun$ )
(declare-fun root$i (A_a_a_fun_fun_tree$ )A_a_a_fun_fun$ )
(declare-fun root$j (A_tree_a_tree_a_tree_fun_fun_tree$ )A_tree_a_tree_a_tree_fun_fun$ )
(declare-fun root$k (A_tree_tree_a_tree_tree_fun_tree$ )A_tree_tree_a_tree_tree_fun$ )
(declare-fun root$l (A_tree_a_tree_fun_a_fun_tree$ )A_tree_a_tree_fun_a_fun$ )
(declare-fun root$m (A_a_fun_a_fun_a_fun_tree$ )A_a_fun_a_fun_a_fun$ )
(declare-fun root$n (A_a_a_fun_fun_a_fun_tree$ )A_a_a_fun_fun_a_fun$ )
(declare-fun member$ (A_tree_a_tree_fun$ A_tree_a_tree_fun_set$ )Bool )
(declare-fun fun_app$ (A_tree_a_tree_fun$ A_tree$ )A_tree$ )
(declare-fun member$a (A_tree_a_tree_a_tree_fun_fun$ A_tree_a_tree_a_tree_fun_fun_set$ )Bool )
(declare-fun member$b (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_set$ )Bool )
(declare-fun member$c (A_a_fun_a_fun$ A_a_fun_a_fun_set$ )Bool )
(declare-fun member$d (A_a_a_fun_fun$ A_a_a_fun_fun_set$ )Bool )
(declare-fun member$e (A_a_fun$ A_a_fun_set$ )Bool )
(declare-fun member$f (A$ A_set$ )Bool )
(declare-fun tree_ap$ (A_a_fun_tree$ )A_tree_a_tree_fun$ )
(declare-fun fun_app$a (A_tree_a_tree_a_tree_fun_fun$ A_tree$ )A_tree_a_tree_fun$ )
(declare-fun fun_app$b (A_a_fun$ A$ )A$ )
(declare-fun fun_app$c (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$d (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$e (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$f (A_tree_a_tree_fun_a_fun$ A_tree_a_tree_fun$ )A$ )
(declare-fun fun_app$g (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun$ )A$ )
(declare-fun fun_app$h (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun$ )A$ )
(declare-fun fun_app$i (A_a_tree_a_tree_fun_fun$ A$ )A_tree_a_tree_fun$ )
(declare-fun fun_app$j (A_a_a_fun_a_fun_fun$ A$ )A_a_fun_a_fun$ )
(declare-fun fun_app$k (A_a_a_a_fun_fun_fun$ A$ )A_a_a_fun_fun$ )
(declare-fun fun_app$l (A_tree_tree_a_tree_tree_fun$ A_tree_tree$ )A_tree_tree$ )
(declare-fun fun_app$m (A_tree_tree_tree_a_tree_tree_tree_fun$ A_tree_tree_tree$ )A_tree_tree_tree$ )
(declare-fun fun_app$n (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ A_tree_tree_tree$ )A_tree_tree_tree_a_tree_tree_tree_fun$ )
(declare-fun fun_app$o (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ A_tree_tree$ )A_tree_tree_a_tree_tree_fun$ )
(declare-fun fun_app$p (A_tree_bool_fun$ A_tree$ )Bool )
(declare-fun fun_app$q (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$r (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$s (A_a_fun_bool_fun$ A_a_fun$ )Bool )
(declare-fun fun_app$t (A_a_a_fun_bool_fun_fun$ A$ )A_a_fun_bool_fun$ )
(declare-fun fun_app$u (A_a_fun_a_bool_fun_fun$ A_a_fun$ )A_bool_fun$ )
(declare-fun fun_app$v (A_a_fun_a_a_fun_bool_fun_fun$ A_a_fun$ )A_a_fun_bool_fun$ )
(declare-fun fun_app$w (A_tree_a_tree_fun_bool_fun$ A_tree_a_tree_fun$ )Bool )
(declare-fun fun_app$x (A_a_tree_a_tree_fun_bool_fun_fun$ A$ )A_tree_a_tree_fun_bool_fun$ )
(declare-fun fun_app$y (A_a_fun_a_fun_bool_fun$ A_a_fun_a_fun$ )Bool )
(declare-fun fun_app$z (A_a_a_fun_a_fun_bool_fun_fun$ A$ )A_a_fun_a_fun_bool_fun$ )
(declare-fun map_tree$ (A_a_fun$ )A_tree_a_tree_fun$ )
(declare-fun rel_tree$ (A_a_bool_fun_fun$ A_tree$ )A_tree_bool_fun$ )
(declare-fun set_tree$ (A_tree_a_tree_fun_tree$ )A_tree_a_tree_fun_set$ )
(declare-fun tree_ap$a (A_tree_a_tree_fun_tree$ )A_tree_tree_a_tree_tree_fun$ )
(declare-fun tree_ap$b (A_a_fun_a_fun_tree$ A_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$c (A_a_a_fun_fun_tree$ A_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$d (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$e (A_tree_a_tree_a_tree_fun_fun_tree$ A_tree_tree$ )A_tree_a_tree_fun_tree$ )
(declare-fun tree_ap$f (A_tree_tree_a_tree_tree_fun_tree$ A_tree_tree_tree$ )A_tree_tree_tree$ )
(declare-fun tree_ap$g (A_tree_a_tree_fun_a_fun_tree$ A_tree_a_tree_fun_tree$ )A_tree$ )
(declare-fun tree_ap$h (A_a_fun_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$i (A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_tree$ )A_tree$ )
(declare-fun tree_ap$j (A_tree_tree_tree_a_tree_tree_tree_fun_tree$ A_tree_tree_tree_tree$ )A_tree_tree_tree_tree$ )
(declare-fun tree_ap$k (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ A_tree_tree_tree_tree$ )A_tree_tree_tree_a_tree_tree_tree_fun_tree$ )
(declare-fun tree_ap$l (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ A_tree_tree_tree$ )A_tree_tree_a_tree_tree_fun_tree$ )
(declare-fun tree_ap$m (A_a_tree_fun_tree$ A_tree$ )A_tree_tree$ )
(declare-fun tree_ap$n (A_tree_a_fun_tree$ A_tree_tree$ )A_tree$ )
(declare-fun tree_ap$o (A_a_fun_a_tree_fun_tree$ A_a_fun_tree$ )A_tree_tree$ )
(declare-fun tree_ap$p (A_tree_a_a_fun_fun_tree$ A_tree_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$q (A_tree_a_tree_fun_a_tree_fun_tree$ A_tree_a_tree_fun_tree$ )A_tree_tree$ )
(declare-fun tree_ap$r (A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$ A_tree_a_tree_fun_tree$ )A_tree_a_tree_fun_tree$ )
(declare-fun fun_app$aa (A_a_a_fun_fun_bool_fun$ A_a_a_fun_fun$ )Bool )
(declare-fun fun_app$ab (A_a_a_a_fun_fun_bool_fun_fun$ A$ )A_a_a_fun_fun_bool_fun$ )
(declare-fun fun_app$ac (A_tree_a_tree_fun_a_bool_fun_fun$ A_tree_a_tree_fun$ )A_bool_fun$ )
(declare-fun fun_app$ad (A_a_fun_a_fun_a_bool_fun_fun$ A_a_fun_a_fun$ )A_bool_fun$ )
(declare-fun fun_app$ae (A_a_a_fun_fun_a_bool_fun_fun$ A_a_a_fun_fun$ )A_bool_fun$ )
(declare-fun fun_app$af (A_a_tree_bool_fun_fun$ A$ )A_tree_bool_fun$ )
(declare-fun fun_app$ag (A_tree_a_bool_fun_fun$ A_tree$ )A_bool_fun$ )
(declare-fun fun_app$ah (A_tree_a_tree_bool_fun_fun$ A_tree$ )A_tree_bool_fun$ )
(declare-fun fun_app$ai (A_a_fun_a_tree_bool_fun_fun$ A_a_fun$ )A_tree_bool_fun$ )
(declare-fun fun_app$aj (A_tree_a_a_fun_bool_fun_fun$ A_tree$ )A_a_fun_bool_fun$ )
(declare-fun fun_app$ak (A_a_tree_fun$ A$ )A_tree$ )
(declare-fun fun_app$al (A_tree_a_fun$ A_tree$ )A$ )
(declare-fun fun_app$am (A_a_fun_a_tree_fun$ A_a_fun$ )A_tree$ )
(declare-fun fun_app$an (A_tree_a_a_fun_fun$ A_tree$ )A_a_fun$ )
(declare-fun fun_app$ao (A_a_tree_a_tree_a_tree_fun_fun_fun$ A$ )A_tree_a_tree_a_tree_fun_fun$ )
(declare-fun fun_app$ap (A_tree_a_tree_a_tree_fun_fun_a_fun$ A_tree_a_tree_a_tree_fun_fun$ )A$ )
(declare-fun fun_app$aq (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$ar (A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ A_a_a_fun_fun$ )A_tree_a_tree_a_tree_fun_fun$ )
(declare-fun fun_app$as (A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$ A_tree_a_tree_a_tree_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$at (A_tree_a_tree_a_tree_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ A_tree_a_tree_a_tree_fun_fun$ )A_tree_a_tree_a_tree_fun_fun$ )
(declare-fun fun_app$au (A_tree_a_tree_fun_a_tree_fun$ A_tree_a_tree_fun$ )A_tree$ )
(declare-fun fun_app$av (A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ A_tree_a_tree_fun$ )A_tree_a_tree_fun$ )
(declare-fun map_tree$a (A_a_fun_a_fun$ A_a_fun_tree$ )A_tree$ )
(declare-fun map_tree$b (A_a_a_fun_fun$ A_tree$ )A_a_fun_tree$ )
(declare-fun map_tree$c (A_a_fun_a_a_fun_fun$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun map_tree$d (A_tree_a_tree_fun_a_fun$ A_tree_a_tree_fun_tree$ )A_tree$ )
(declare-fun map_tree$e (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun_tree$ )A_tree$ )
(declare-fun map_tree$f (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun_tree$ )A_tree$ )
(declare-fun map_tree$g (A_a_tree_a_tree_fun_fun$ A_tree$ )A_tree_a_tree_fun_tree$ )
(declare-fun map_tree$h (A_a_a_fun_a_fun_fun$ A_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun map_tree$i (A_a_a_a_fun_fun_fun$ A_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun map_tree$j (A_a_tree_a_tree_a_tree_fun_fun_fun$ A_tree$ )A_tree_a_tree_a_tree_fun_fun_tree$ )
(declare-fun map_tree$k (A_tree_a_tree_a_tree_fun_fun_a_fun$ A_tree_a_tree_a_tree_fun_fun_tree$ )A_tree$ )
(declare-fun map_tree$l (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun map_tree$m (A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ A_a_a_fun_fun_tree$ )A_tree_a_tree_a_tree_fun_fun_tree$ )
(declare-fun map_tree$n (A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$ A_tree_a_tree_a_tree_fun_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun map_tree$o (A_tree_a_tree_a_tree_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ A_tree_a_tree_a_tree_fun_fun_tree$ )A_tree_a_tree_a_tree_fun_fun_tree$ )
(declare-fun rel_tree$a (A_a_a_fun_bool_fun_fun$ A_tree$ A_a_fun_tree$ )Bool )
(declare-fun rel_tree$b (A_a_fun_a_bool_fun_fun$ A_a_fun_tree$ A_tree$ )Bool )
(declare-fun rel_tree$c (A_a_fun_a_a_fun_bool_fun_fun$ A_a_fun_tree$ A_a_fun_tree$ )Bool )
(declare-fun rel_tree$d (A_a_tree_a_tree_fun_bool_fun_fun$ A_tree$ A_tree_a_tree_fun_tree$ )Bool )
(declare-fun rel_tree$e (A_a_a_fun_a_fun_bool_fun_fun$ A_tree$ A_a_fun_a_fun_tree$ )Bool )
(declare-fun rel_tree$f (A_a_a_a_fun_fun_bool_fun_fun$ A_tree$ A_a_a_fun_fun_tree$ )Bool )
(declare-fun rel_tree$g (A_tree_a_tree_fun_a_bool_fun_fun$ A_tree_a_tree_fun_tree$ A_tree$ )Bool )
(declare-fun rel_tree$h (A_a_fun_a_fun_a_bool_fun_fun$ A_a_fun_a_fun_tree$ A_tree$ )Bool )
(declare-fun rel_tree$i (A_a_a_fun_fun_a_bool_fun_fun$ A_a_a_fun_fun_tree$ A_tree$ )Bool )
(declare-fun rel_tree$j (A_a_tree_bool_fun_fun$ A_tree$ A_tree_tree$ )Bool )
(declare-fun rel_tree$k (A_tree_a_bool_fun_fun$ A_tree_tree$ A_tree$ )Bool )
(declare-fun rel_tree$l (A_tree_a_tree_bool_fun_fun$ A_tree_tree$ A_tree_tree$ )Bool )
(declare-fun rel_tree$m (A_a_fun_a_tree_bool_fun_fun$ A_a_fun_tree$ A_tree_tree$ )Bool )
(declare-fun rel_tree$n (A_tree_a_a_fun_bool_fun_fun$ A_tree_tree$ A_a_fun_tree$ )Bool )
(declare-fun set_tree$a (A_tree_a_tree_a_tree_fun_fun_tree$ )A_tree_a_tree_a_tree_fun_fun_set$ )
(declare-fun set_tree$b (A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_set$ )
(declare-fun set_tree$c (A_a_fun_a_fun_tree$ )A_a_fun_a_fun_set$ )
(declare-fun set_tree$d (A_a_a_fun_fun_tree$ )A_a_a_fun_fun_set$ )
(declare-fun set_tree$e (A_a_fun_tree$ )A_a_fun_set$ )
(declare-fun set_tree$f (A_tree$ )A_set$ )
(declare-fun tree_pure$ (A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_pure$a (A_a_fun_a_fun$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_pure$b (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ )
(declare-fun tree_pure$c (A_tree_a_tree_fun$ )A_tree_a_tree_fun_tree$ )
(declare-fun tree_pure$d (A_a_fun$ )A_a_fun_tree$ )
(declare-fun tree_pure$e (A_a_a_fun_fun$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_pure$f (A_tree_a_tree_a_tree_fun_fun$ )A_tree_a_tree_a_tree_fun_fun_tree$ )
(declare-fun tree_pure$g (A$ )A_tree$ )
(declare-fun tree_pure$h (A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun$ )A_tree_tree_tree_a_tree_tree_tree_a_tree_tree_tree_fun_fun_tree$ )
(declare-fun tree_pure$i (A_tree_a_tree_fun_a_tree_fun$ )A_tree_a_tree_fun_a_tree_fun_tree$ )
(declare-fun tree_pure$j (A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ )A_tree_a_tree_fun_a_tree_a_tree_fun_fun_tree$ )
(assert (! (not (= (root$ (fun_app$ (fun_app$a mod$ t$ )t$a ))(fun_app$b (fun_app$c mod$a (root$ t$ ))(root$ t$a )))):named a0 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(= (root$d (tree_pure$ ?v0 ))?v0 )):named a1 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ ))(= (root$e (tree_pure$a ?v0 ))?v0 )):named a2 ))
(assert (! (forall ((?v0 A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ ))(= (root$f (tree_pure$b ?v0 ))?v0 )):named a3 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ ))(= (root$g (tree_pure$c ?v0 ))?v0 )):named a4 ))
(assert (! (forall ((?v0 A_a_fun$ ))(= (root$h (tree_pure$d ?v0 ))?v0 )):named a5 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(= (root$i (tree_pure$e ?v0 ))?v0 )):named a6 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$ ))(= (root$j (tree_pure$f ?v0 ))?v0 )):named a7 ))
(assert (! (forall ((?v0 A$ ))(= (root$ (tree_pure$g ?v0 ))?v0 )):named a8 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_tree$ ))(= (root$ (fun_app$ (map_tree$ ?v0 )?v1 ))(fun_app$b ?v0 (root$ ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_tree$ ))(= (root$ (map_tree$a ?v0 ?v1 ))(fun_app$d ?v0 (root$h ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_tree$ ))(= (root$h (map_tree$b ?v0 ?v1 ))(fun_app$c ?v0 (root$ ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_tree$ ))(= (root$h (map_tree$c ?v0 ?v1 ))(fun_app$e ?v0 (root$h ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_a_fun$ )(?v1 A_tree_a_tree_fun_tree$ ))(= (root$ (map_tree$d ?v0 ?v1 ))(fun_app$f ?v0 (root$g ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_tree$ ))(= (root$ (map_tree$e ?v0 ?v1 ))(fun_app$g ?v0 (root$e ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun_tree$ ))(= (root$ (map_tree$f ?v0 ?v1 ))(fun_app$h ?v0 (root$i ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_a_tree_a_tree_fun_fun$ )(?v1 A_tree$ ))(= (root$g (map_tree$g ?v0 ?v1 ))(fun_app$i ?v0 (root$ ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_tree$ ))(= (root$e (map_tree$h ?v0 ?v1 ))(fun_app$j ?v0 (root$ ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_tree$ ))(= (root$i (map_tree$i ?v0 ?v1 ))(fun_app$k ?v0 (root$ ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_tree$ ))(= (root$ (fun_app$ (map_tree$ ?v0 )?v1 ))(fun_app$b ?v0 (root$ ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_tree$ ))(= (root$ (map_tree$a ?v0 ?v1 ))(fun_app$d ?v0 (root$h ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_tree$ ))(= (root$h (map_tree$b ?v0 ?v1 ))(fun_app$c ?v0 (root$ ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_tree$ ))(= (root$h (map_tree$c ?v0 ?v1 ))(fun_app$e ?v0 (root$h ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_a_fun$ )(?v1 A_tree_a_tree_fun_tree$ ))(= (root$ (map_tree$d ?v0 ?v1 ))(fun_app$f ?v0 (root$g ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_tree$ ))(= (root$ (map_tree$e ?v0 ?v1 ))(fun_app$g ?v0 (root$e ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun_tree$ ))(= (root$ (map_tree$f ?v0 ?v1 ))(fun_app$h ?v0 (root$i ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_a_tree_a_tree_fun_fun$ )(?v1 A_tree$ ))(= (root$g (map_tree$g ?v0 ?v1 ))(fun_app$i ?v0 (root$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_tree$ ))(= (root$e (map_tree$h ?v0 ?v1 ))(fun_app$j ?v0 (root$ ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_tree$ ))(= (root$i (map_tree$i ?v0 ?v1 ))(fun_app$k ?v0 (root$ ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$ ))(member$ (root$g ?v0 )(set_tree$ ?v0 ))):named a29 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_tree$ ))(member$a (root$j ?v0 )(set_tree$a ?v0 ))):named a30 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ ))(member$b (root$d ?v0 )(set_tree$b ?v0 ))):named a31 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ ))(member$c (root$e ?v0 )(set_tree$c ?v0 ))):named a32 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ ))(member$d (root$i ?v0 )(set_tree$d ?v0 ))):named a33 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(member$e (root$h ?v0 )(set_tree$e ?v0 ))):named a34 ))
(assert (! (forall ((?v0 A_tree$ ))(member$f (root$ ?v0 )(set_tree$f ?v0 ))):named a35 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$ ))(member$ (root$g ?v0 )(set_tree$ ?v0 ))):named a36 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_tree$ ))(member$a (root$j ?v0 )(set_tree$a ?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ ))(member$b (root$d ?v0 )(set_tree$b ?v0 ))):named a38 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ ))(member$c (root$e ?v0 )(set_tree$c ?v0 ))):named a39 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ ))(member$d (root$i ?v0 )(set_tree$d ?v0 ))):named a40 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(member$e (root$h ?v0 )(set_tree$e ?v0 ))):named a41 ))
(assert (! (forall ((?v0 A_tree$ ))(member$f (root$ ?v0 )(set_tree$f ?v0 ))):named a42 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree_tree$ )(?v2 A_tree_tree$ ))(! (= (root$a (node$c ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$c ?v0 ?v1 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree_a_tree_fun_tree$ )(?v2 A_tree_a_tree_fun_tree$ ))(! (= (root$g (node$e ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$e ?v0 ?v1 ?v2 )))):named a44 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$ )(?v1 A_tree_a_tree_a_tree_fun_fun_tree$ )(?v2 A_tree_a_tree_a_tree_fun_fun_tree$ ))(! (= (root$j (node$h ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$h ?v0 ?v1 ?v2 )))):named a45 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun_tree$ )(?v2 A_a_fun_a_a_fun_fun_tree$ ))(! (= (root$d (node$a ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$a ?v0 ?v1 ?v2 )))):named a46 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_tree$ )(?v2 A_a_fun_a_fun_tree$ ))(! (= (root$e (node$b ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$b ?v0 ?v1 ?v2 )))):named a47 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun_tree$ )(?v2 A_a_a_fun_fun_tree$ ))(! (= (root$i (node$g ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$g ?v0 ?v1 ?v2 )))):named a48 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_tree$ )(?v2 A_a_fun_tree$ ))(! (= (root$h (node$f ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$f ?v0 ?v1 ?v2 )))):named a49 ))
(assert (! (forall ((?v0 A$ )(?v1 A_tree$ )(?v2 A_tree$ ))(! (= (root$ (node$ ?v0 ?v1 ?v2 ))?v0 ):pattern ((node$ ?v0 ?v1 ?v2 )))):named a50 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (root$ (fun_app$ (tree_ap$ ?v0 )?v1 ))(fun_app$b (root$h ?v0 )(root$ ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$ )(?v1 A_tree_tree$ ))(= (root$a (fun_app$l (tree_ap$a ?v0 )?v1 ))(fun_app$ (root$g ?v0 )(root$a ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (root$ (tree_ap$b ?v0 ?v1 ))(fun_app$d (root$e ?v0 )(root$h ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (root$h (tree_ap$c ?v0 ?v1 ))(fun_app$c (root$i ?v0 )(root$ ?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (root$h (tree_ap$d ?v0 ?v1 ))(fun_app$e (root$d ?v0 )(root$h ?v1 )))):named a55 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_tree$ )(?v1 A_tree_tree$ ))(= (root$g (tree_ap$e ?v0 ?v1 ))(fun_app$a (root$j ?v0 )(root$a ?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_tree_tree_a_tree_tree_fun_tree$ )(?v1 A_tree_tree_tree$ ))(= (root$b (tree_ap$f ?v0 ?v1 ))(fun_app$l (root$k ?v0 )(root$b ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_a_fun_tree$ )(?v1 A_tree_a_tree_fun_tree$ ))(= (root$ (tree_ap$g ?v0 ?v1 ))(fun_app$f (root$l ?v0 )(root$g ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun_tree$ )(?v1 A_a_fun_a_fun_tree$ ))(= (root$ (tree_ap$h ?v0 ?v1 ))(fun_app$g (root$m ?v0 )(root$e ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun_tree$ )(?v1 A_a_a_fun_fun_tree$ ))(= (root$ (tree_ap$i ?v0 ?v1 ))(fun_app$h (root$n ?v0 )(root$i ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_tree_tree_tree_tree$ )(?v1 A_tree_tree_tree_tree$ ))(! (= (mod$b ?v0 ?v1 )(tree_ap$j (tree_ap$k (tree_pure$h mod$c )?v0 )?v1 )):pattern ((mod$b ?v0 ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_tree_tree_tree$ )(?v1 A_tree_tree_tree$ ))(! (= (fun_app$m (fun_app$n mod$c ?v0 )?v1 )(tree_ap$f (tree_ap$l (tree_pure$b mod$d )?v0 )?v1 )):pattern ((fun_app$m (fun_app$n mod$c ?v0 )?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_tree_tree$ )(?v1 A_tree_tree$ ))(! (= (fun_app$l (fun_app$o mod$d ?v0 )?v1 )(fun_app$l (tree_ap$a (tree_ap$e (tree_pure$f mod$ )?v0 ))?v1 )):pattern ((fun_app$l (fun_app$o mod$d ?v0 )?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(! (= (fun_app$ (fun_app$a mod$ ?v0 )?v1 )(fun_app$ (tree_ap$ (tree_ap$c (tree_pure$e mod$a )?v0 ))?v1 )):pattern ((fun_app$ (fun_app$a mod$ ?v0 )?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_tree$ ))(=> (fun_app$p (rel_tree$ ?v0 ?v1 )?v2 )(fun_app$q (fun_app$r ?v0 (root$ ?v1 ))(root$ ?v2 )))):named a65 ))
(assert (! (forall ((?v0 A_a_a_fun_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_a_fun_tree$ ))(=> (rel_tree$a ?v0 ?v1 ?v2 )(fun_app$s (fun_app$t ?v0 (root$ ?v1 ))(root$h ?v2 )))):named a66 ))
(assert (! (forall ((?v0 A_a_fun_a_bool_fun_fun$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(=> (rel_tree$b ?v0 ?v1 ?v2 )(fun_app$q (fun_app$u ?v0 (root$h ?v1 ))(root$ ?v2 )))):named a67 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_bool_fun_fun$ )(?v1 A_a_fun_tree$ )(?v2 A_a_fun_tree$ ))(=> (rel_tree$c ?v0 ?v1 ?v2 )(fun_app$s (fun_app$v ?v0 (root$h ?v1 ))(root$h ?v2 )))):named a68 ))
(assert (! (forall ((?v0 A_a_tree_a_tree_fun_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_tree_a_tree_fun_tree$ ))(=> (rel_tree$d ?v0 ?v1 ?v2 )(fun_app$w (fun_app$x ?v0 (root$ ?v1 ))(root$g ?v2 )))):named a69 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_a_fun_a_fun_tree$ ))(=> (rel_tree$e ?v0 ?v1 ?v2 )(fun_app$y (fun_app$z ?v0 (root$ ?v1 ))(root$e ?v2 )))):named a70 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_a_a_fun_fun_tree$ ))(=> (rel_tree$f ?v0 ?v1 ?v2 )(fun_app$aa (fun_app$ab ?v0 (root$ ?v1 ))(root$i ?v2 )))):named a71 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_a_bool_fun_fun$ )(?v1 A_tree_a_tree_fun_tree$ )(?v2 A_tree$ ))(=> (rel_tree$g ?v0 ?v1 ?v2 )(fun_app$q (fun_app$ac ?v0 (root$g ?v1 ))(root$ ?v2 )))):named a72 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_bool_fun_fun$ )(?v1 A_a_fun_a_fun_tree$ )(?v2 A_tree$ ))(=> (rel_tree$h ?v0 ?v1 ?v2 )(fun_app$q (fun_app$ad ?v0 (root$e ?v1 ))(root$ ?v2 )))):named a73 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_bool_fun_fun$ )(?v1 A_a_a_fun_fun_tree$ )(?v2 A_tree$ ))(=> (rel_tree$i ?v0 ?v1 ?v2 )(fun_app$q (fun_app$ae ?v0 (root$i ?v1 ))(root$ ?v2 )))):named a74 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_tree$ )(?v2 A_a_fun_tree$ )(?v3 A_a_fun$ )(?v4 A_a_fun_tree$ )(?v5 A_a_fun_tree$ ))(= (= (node$f ?v0 ?v1 ?v2 )(node$f ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a75 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun_tree$ )(?v2 A_a_a_fun_fun_tree$ )(?v3 A_a_a_fun_fun$ )(?v4 A_a_a_fun_fun_tree$ )(?v5 A_a_a_fun_fun_tree$ ))(= (= (node$g ?v0 ?v1 ?v2 )(node$g ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a76 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$ )(?v1 A_tree_a_tree_a_tree_fun_fun_tree$ )(?v2 A_tree_a_tree_a_tree_fun_fun_tree$ )(?v3 A_tree_a_tree_a_tree_fun_fun$ )(?v4 A_tree_a_tree_a_tree_fun_fun_tree$ )(?v5 A_tree_a_tree_a_tree_fun_fun_tree$ ))(= (= (node$h ?v0 ?v1 ?v2 )(node$h ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a77 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree_tree$ )(?v2 A_tree_tree$ )(?v3 A_tree$ )(?v4 A_tree_tree$ )(?v5 A_tree_tree$ ))(= (= (node$c ?v0 ?v1 ?v2 )(node$c ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a78 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree_a_tree_fun_tree$ )(?v2 A_tree_a_tree_fun_tree$ )(?v3 A_tree_a_tree_fun$ )(?v4 A_tree_a_tree_fun_tree$ )(?v5 A_tree_a_tree_fun_tree$ ))(= (= (node$e ?v0 ?v1 ?v2 )(node$e ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a79 ))
(assert (! (forall ((?v0 A$ )(?v1 A_tree$ )(?v2 A_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(= (= (node$ ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a80 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ )(?v4 A$ )(?v5 A_tree$ )(?v6 A_tree$ ))(! (= (fun_app$p (rel_tree$ ?v0 (node$ ?v1 ?v2 ?v3 ))(node$ ?v4 ?v5 ?v6 ))(and (fun_app$q (fun_app$r ?v0 ?v1 )?v4 )(and (fun_app$p (rel_tree$ ?v0 ?v2 )?v5 )(fun_app$p (rel_tree$ ?v0 ?v3 )?v6 )))):pattern ((fun_app$p (rel_tree$ ?v0 (node$ ?v1 ?v2 ?v3 ))(node$ ?v4 ?v5 ?v6 ))))):named a81 ))
(assert (! (forall ((?v0 A_a_tree_bool_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ )(?v4 A_tree$ )(?v5 A_tree_tree$ )(?v6 A_tree_tree$ ))(! (= (rel_tree$j ?v0 (node$ ?v1 ?v2 ?v3 )(node$c ?v4 ?v5 ?v6 ))(and (fun_app$p (fun_app$af ?v0 ?v1 )?v4 )(and (rel_tree$j ?v0 ?v2 ?v5 )(rel_tree$j ?v0 ?v3 ?v6 )))):pattern ((rel_tree$j ?v0 (node$ ?v1 ?v2 ?v3 )(node$c ?v4 ?v5 ?v6 ))))):named a82 ))
(assert (! (forall ((?v0 A_tree_a_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_tree_tree$ )(?v3 A_tree_tree$ )(?v4 A$ )(?v5 A_tree$ )(?v6 A_tree$ ))(! (= (rel_tree$k ?v0 (node$c ?v1 ?v2 ?v3 )(node$ ?v4 ?v5 ?v6 ))(and (fun_app$q (fun_app$ag ?v0 ?v1 )?v4 )(and (rel_tree$k ?v0 ?v2 ?v5 )(rel_tree$k ?v0 ?v3 ?v6 )))):pattern ((rel_tree$k ?v0 (node$c ?v1 ?v2 ?v3 )(node$ ?v4 ?v5 ?v6 ))))):named a83 ))
(assert (! (forall ((?v0 A_tree_a_tree_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_tree_tree$ )(?v3 A_tree_tree$ )(?v4 A_tree$ )(?v5 A_tree_tree$ )(?v6 A_tree_tree$ ))(! (= (rel_tree$l ?v0 (node$c ?v1 ?v2 ?v3 )(node$c ?v4 ?v5 ?v6 ))(and (fun_app$p (fun_app$ah ?v0 ?v1 )?v4 )(and (rel_tree$l ?v0 ?v2 ?v5 )(rel_tree$l ?v0 ?v3 ?v6 )))):pattern ((rel_tree$l ?v0 (node$c ?v1 ?v2 ?v3 )(node$c ?v4 ?v5 ?v6 ))))):named a84 ))
(assert (! (forall ((?v0 A_a_fun_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_tree$ )(?v3 A_a_fun_tree$ )(?v4 A$ )(?v5 A_tree$ )(?v6 A_tree$ ))(! (= (rel_tree$b ?v0 (node$f ?v1 ?v2 ?v3 )(node$ ?v4 ?v5 ?v6 ))(and (fun_app$q (fun_app$u ?v0 ?v1 )?v4 )(and (rel_tree$b ?v0 ?v2 ?v5 )(rel_tree$b ?v0 ?v3 ?v6 )))):pattern ((rel_tree$b ?v0 (node$f ?v1 ?v2 ?v3 )(node$ ?v4 ?v5 ?v6 ))))):named a85 ))
(assert (! (forall ((?v0 A_a_a_fun_bool_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ )(?v4 A_a_fun$ )(?v5 A_a_fun_tree$ )(?v6 A_a_fun_tree$ ))(! (= (rel_tree$a ?v0 (node$ ?v1 ?v2 ?v3 )(node$f ?v4 ?v5 ?v6 ))(and (fun_app$s (fun_app$t ?v0 ?v1 )?v4 )(and (rel_tree$a ?v0 ?v2 ?v5 )(rel_tree$a ?v0 ?v3 ?v6 )))):pattern ((rel_tree$a ?v0 (node$ ?v1 ?v2 ?v3 )(node$f ?v4 ?v5 ?v6 ))))):named a86 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_tree$ )(?v3 A_a_fun_tree$ )(?v4 A_tree$ )(?v5 A_tree_tree$ )(?v6 A_tree_tree$ ))(! (= (rel_tree$m ?v0 (node$f ?v1 ?v2 ?v3 )(node$c ?v4 ?v5 ?v6 ))(and (fun_app$p (fun_app$ai ?v0 ?v1 )?v4 )(and (rel_tree$m ?v0 ?v2 ?v5 )(rel_tree$m ?v0 ?v3 ?v6 )))):pattern ((rel_tree$m ?v0 (node$f ?v1 ?v2 ?v3 )(node$c ?v4 ?v5 ?v6 ))))):named a87 ))
(assert (! (forall ((?v0 A_tree_a_a_fun_bool_fun_fun$ )(?v1 A_tree$ )(?v2 A_tree_tree$ )(?v3 A_tree_tree$ )(?v4 A_a_fun$ )(?v5 A_a_fun_tree$ )(?v6 A_a_fun_tree$ ))(! (= (rel_tree$n ?v0 (node$c ?v1 ?v2 ?v3 )(node$f ?v4 ?v5 ?v6 ))(and (fun_app$s (fun_app$aj ?v0 ?v1 )?v4 )(and (rel_tree$n ?v0 ?v2 ?v5 )(rel_tree$n ?v0 ?v3 ?v6 )))):pattern ((rel_tree$n ?v0 (node$c ?v1 ?v2 ?v3 )(node$f ?v4 ?v5 ?v6 ))))):named a88 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_bool_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ )(?v4 A_a_a_fun_fun$ )(?v5 A_a_a_fun_fun_tree$ )(?v6 A_a_a_fun_fun_tree$ ))(! (= (rel_tree$f ?v0 (node$ ?v1 ?v2 ?v3 )(node$g ?v4 ?v5 ?v6 ))(and (fun_app$aa (fun_app$ab ?v0 ?v1 )?v4 )(and (rel_tree$f ?v0 ?v2 ?v5 )(rel_tree$f ?v0 ?v3 ?v6 )))):pattern ((rel_tree$f ?v0 (node$ ?v1 ?v2 ?v3 )(node$g ?v4 ?v5 ?v6 ))))):named a89 ))
(assert (! (forall ((?v0 A_a_tree_a_tree_fun_bool_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ )(?v4 A_tree_a_tree_fun$ )(?v5 A_tree_a_tree_fun_tree$ )(?v6 A_tree_a_tree_fun_tree$ ))(! (= (rel_tree$d ?v0 (node$ ?v1 ?v2 ?v3 )(node$e ?v4 ?v5 ?v6 ))(and (fun_app$w (fun_app$x ?v0 ?v1 )?v4 )(and (rel_tree$d ?v0 ?v2 ?v5 )(rel_tree$d ?v0 ?v3 ?v6 )))):pattern ((rel_tree$d ?v0 (node$ ?v1 ?v2 ?v3 )(node$e ?v4 ?v5 ?v6 ))))):named a90 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_tree$ )(?v2 A_a_fun_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(! (= (fun_app$ (tree_ap$ (node$f ?v0 ?v1 ?v2 ))(node$ ?v3 ?v4 ?v5 ))(node$ (fun_app$b ?v0 ?v3 )(fun_app$ (tree_ap$ ?v1 )?v4 )(fun_app$ (tree_ap$ ?v2 )?v5 ))):pattern ((fun_app$ (tree_ap$ (node$f ?v0 ?v1 ?v2 ))(node$ ?v3 ?v4 ?v5 ))))):named a91 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree_a_tree_fun_tree$ )(?v2 A_tree_a_tree_fun_tree$ )(?v3 A_tree$ )(?v4 A_tree_tree$ )(?v5 A_tree_tree$ ))(! (= (fun_app$l (tree_ap$a (node$e ?v0 ?v1 ?v2 ))(node$c ?v3 ?v4 ?v5 ))(node$c (fun_app$ ?v0 ?v3 )(fun_app$l (tree_ap$a ?v1 )?v4 )(fun_app$l (tree_ap$a ?v2 )?v5 ))):pattern ((fun_app$l (tree_ap$a (node$e ?v0 ?v1 ?v2 ))(node$c ?v3 ?v4 ?v5 ))))):named a92 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun_tree$ )(?v2 A_a_a_fun_fun_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(! (= (tree_ap$c (node$g ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(node$f (fun_app$c ?v0 ?v3 )(tree_ap$c ?v1 ?v4 )(tree_ap$c ?v2 ?v5 ))):pattern ((tree_ap$c (node$g ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))))):named a93 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$ )(?v1 A_tree_a_tree_a_tree_fun_fun_tree$ )(?v2 A_tree_a_tree_a_tree_fun_fun_tree$ )(?v3 A_tree$ )(?v4 A_tree_tree$ )(?v5 A_tree_tree$ ))(! (= (tree_ap$e (node$h ?v0 ?v1 ?v2 )(node$c ?v3 ?v4 ?v5 ))(node$e (fun_app$a ?v0 ?v3 )(tree_ap$e ?v1 ?v4 )(tree_ap$e ?v2 ?v5 ))):pattern ((tree_ap$e (node$h ?v0 ?v1 ?v2 )(node$c ?v3 ?v4 ?v5 ))))):named a94 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A_a_tree_fun_tree$ )(?v2 A_a_tree_fun_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(! (= (tree_ap$m (node$q ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(node$c (fun_app$ak ?v0 ?v3 )(tree_ap$m ?v1 ?v4 )(tree_ap$m ?v2 ?v5 ))):pattern ((tree_ap$m (node$q ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))))):named a95 ))
(assert (! (forall ((?v0 A_tree_a_fun$ )(?v1 A_tree_a_fun_tree$ )(?v2 A_tree_a_fun_tree$ )(?v3 A_tree$ )(?v4 A_tree_tree$ )(?v5 A_tree_tree$ ))(! (= (tree_ap$n (node$r ?v0 ?v1 ?v2 )(node$c ?v3 ?v4 ?v5 ))(node$ (fun_app$al ?v0 ?v3 )(tree_ap$n ?v1 ?v4 )(tree_ap$n ?v2 ?v5 ))):pattern ((tree_ap$n (node$r ?v0 ?v1 ?v2 )(node$c ?v3 ?v4 ?v5 ))))):named a96 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_tree$ )(?v2 A_a_fun_a_fun_tree$ )(?v3 A_a_fun$ )(?v4 A_a_fun_tree$ )(?v5 A_a_fun_tree$ ))(! (= (tree_ap$b (node$b ?v0 ?v1 ?v2 )(node$f ?v3 ?v4 ?v5 ))(node$ (fun_app$d ?v0 ?v3 )(tree_ap$b ?v1 ?v4 )(tree_ap$b ?v2 ?v5 ))):pattern ((tree_ap$b (node$b ?v0 ?v1 ?v2 )(node$f ?v3 ?v4 ?v5 ))))):named a97 ))
(assert (! (forall ((?v0 A_a_fun_a_tree_fun$ )(?v1 A_a_fun_a_tree_fun_tree$ )(?v2 A_a_fun_a_tree_fun_tree$ )(?v3 A_a_fun$ )(?v4 A_a_fun_tree$ )(?v5 A_a_fun_tree$ ))(! (= (tree_ap$o (node$s ?v0 ?v1 ?v2 )(node$f ?v3 ?v4 ?v5 ))(node$c (fun_app$am ?v0 ?v3 )(tree_ap$o ?v1 ?v4 )(tree_ap$o ?v2 ?v5 ))):pattern ((tree_ap$o (node$s ?v0 ?v1 ?v2 )(node$f ?v3 ?v4 ?v5 ))))):named a98 ))
(assert (! (forall ((?v0 A_tree_a_a_fun_fun$ )(?v1 A_tree_a_a_fun_fun_tree$ )(?v2 A_tree_a_a_fun_fun_tree$ )(?v3 A_tree$ )(?v4 A_tree_tree$ )(?v5 A_tree_tree$ ))(! (= (tree_ap$p (node$t ?v0 ?v1 ?v2 )(node$c ?v3 ?v4 ?v5 ))(node$f (fun_app$an ?v0 ?v3 )(tree_ap$p ?v1 ?v4 )(tree_ap$p ?v2 ?v5 ))):pattern ((tree_ap$p (node$t ?v0 ?v1 ?v2 )(node$c ?v3 ?v4 ?v5 ))))):named a99 ))
(assert (! (forall ((?v0 A_tree_tree_a_tree_tree_fun$ )(?v1 A_tree_tree_a_tree_tree_fun_tree$ )(?v2 A_tree_tree_a_tree_tree_fun_tree$ )(?v3 A_tree_tree$ )(?v4 A_tree_tree_tree$ )(?v5 A_tree_tree_tree$ ))(! (= (tree_ap$f (node$i ?v0 ?v1 ?v2 )(node$j ?v3 ?v4 ?v5 ))(node$j (fun_app$l ?v0 ?v3 )(tree_ap$f ?v1 ?v4 )(tree_ap$f ?v2 ?v5 ))):pattern ((tree_ap$f (node$i ?v0 ?v1 ?v2 )(node$j ?v3 ?v4 ?v5 ))))):named a100 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$ (map_tree$ ?v0 )(tree_pure$g ?v1 ))(tree_pure$g (fun_app$b ?v0 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A$ ))(= (map_tree$i ?v0 (tree_pure$g ?v1 ))(tree_pure$e (fun_app$k ?v0 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun$ ))(= (map_tree$f ?v0 (tree_pure$e ?v1 ))(tree_pure$g (fun_app$h ?v0 ?v1 )))):named a103 ))
(assert (! (forall ((?v0 A_a_tree_a_tree_a_tree_fun_fun_fun$ )(?v1 A$ ))(= (map_tree$j ?v0 (tree_pure$g ?v1 ))(tree_pure$f (fun_app$ao ?v0 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_a_fun$ )(?v1 A_tree_a_tree_a_tree_fun_fun$ ))(= (map_tree$k ?v0 (tree_pure$f ?v1 ))(tree_pure$g (fun_app$ap ?v0 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (map_tree$l ?v0 (tree_pure$e ?v1 ))(tree_pure$e (fun_app$aq ?v0 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (map_tree$m ?v0 (tree_pure$e ?v1 ))(tree_pure$f (fun_app$ar ?v0 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_tree_a_tree_a_tree_fun_fun$ ))(= (map_tree$n ?v0 (tree_pure$f ?v1 ))(tree_pure$e (fun_app$as ?v0 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ )(?v1 A_tree_a_tree_a_tree_fun_fun$ ))(= (map_tree$o ?v0 (tree_pure$f ?v1 ))(tree_pure$f (fun_app$at ?v0 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (map_tree$a ?v0 (tree_pure$d ?v1 ))(tree_pure$g (fun_app$d ?v0 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_a_tree_fun$ )(?v1 A_tree_a_tree_fun$ )(?v2 A_tree_a_tree_fun_tree$ )(?v3 A_tree_a_tree_fun_tree$ ))(= (tree_ap$q (tree_pure$i ?v0 )(node$e ?v1 ?v2 ?v3 ))(node$c (fun_app$au ?v0 ?v1 )(tree_ap$q (tree_pure$i ?v0 )?v2 )(tree_ap$q (tree_pure$i ?v0 )?v3 )))):named a111 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ )(?v1 A_tree_a_tree_fun$ )(?v2 A_tree_a_tree_fun_tree$ )(?v3 A_tree_a_tree_fun_tree$ ))(= (tree_ap$r (tree_pure$j ?v0 )(node$e ?v1 ?v2 ?v3 ))(node$e (fun_app$av ?v0 ?v1 )(tree_ap$r (tree_pure$j ?v0 )?v2 )(tree_ap$r (tree_pure$j ?v0 )?v3 )))):named a112 ))
(assert (! (forall ((?v0 A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )(?v1 A_tree_tree$ )(?v2 A_tree_tree_tree$ )(?v3 A_tree_tree_tree$ ))(= (tree_ap$l (tree_pure$b ?v0 )(node$j ?v1 ?v2 ?v3 ))(node$i (fun_app$o ?v0 ?v1 )(tree_ap$l (tree_pure$b ?v0 )?v2 )(tree_ap$l (tree_pure$b ?v0 )?v3 )))):named a113 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree$ )(?v2 A_tree_tree$ )(?v3 A_tree_tree$ ))(= (fun_app$l (tree_ap$a (tree_pure$c ?v0 ))(node$c ?v1 ?v2 ?v3 ))(node$c (fun_app$ ?v0 ?v1 )(fun_app$l (tree_ap$a (tree_pure$c ?v0 ))?v2 )(fun_app$l (tree_ap$a (tree_pure$c ?v0 ))?v3 )))):named a114 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (fun_app$ (tree_ap$ (tree_pure$d ?v0 ))(node$ ?v1 ?v2 ?v3 ))(node$ (fun_app$b ?v0 ?v1 )(fun_app$ (tree_ap$ (tree_pure$d ?v0 ))?v2 )(fun_app$ (tree_ap$ (tree_pure$d ?v0 ))?v3 )))):named a115 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$c (tree_pure$e ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$f (fun_app$c ?v0 ?v1 )(tree_ap$c (tree_pure$e ?v0 )?v2 )(tree_ap$c (tree_pure$e ?v0 )?v3 )))):named a116 ))
(assert (! (forall ((?v0 A_tree_a_tree_a_tree_fun_fun$ )(?v1 A_tree$ )(?v2 A_tree_tree$ )(?v3 A_tree_tree$ ))(= (tree_ap$e (tree_pure$f ?v0 )(node$c ?v1 ?v2 ?v3 ))(node$e (fun_app$a ?v0 ?v1 )(tree_ap$e (tree_pure$f ?v0 )?v2 )(tree_ap$e (tree_pure$f ?v0 )?v3 )))):named a117 ))
(check-sat )
;(get-unsat-core )
