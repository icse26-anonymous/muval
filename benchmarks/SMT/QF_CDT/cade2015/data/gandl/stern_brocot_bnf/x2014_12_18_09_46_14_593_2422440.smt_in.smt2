;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_bool_fun$ 0 )
(declare-sort Nat_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ 0 )
(declare-datatypes ()((Nat_nat_prod$ (pair$ (fst$ Nat$ )(snd$ Nat$ )))))
(declare-fun uu$ ()Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uua$ ()Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uub$ ()Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uuc$ (Nat_nat_bool_fun_fun$ Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun uud$ (Nat_nat_nat_nat_prod_fun_fun$ Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uue$ ()Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uuf$ (Nat_nat_prod_bool_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun uug$ (Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun comp$ (Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ )
(declare-fun plus$ (Nat$ Nat$ )Nat$ )
(declare-fun fun_app$ (Nat_nat_nat_prod_fun$ Nat$ )Nat_nat_prod$ )
(declare-fun fun_app$a (Nat_nat_nat_nat_prod_fun_fun$ Nat$ )Nat_nat_nat_prod_fun$ )
(declare-fun fun_app$b (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod$ )
(declare-fun fun_app$c (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$d (Nat_nat_bool_fun_fun$ Nat$ )Nat_bool_fun$ )
(declare-fun fun_app$e (Nat_nat_prod_bool_fun$ Nat_nat_prod$ )Bool )
(declare-fun fun_app$f (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_nat_nat_prod_fun_fun$ Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$ (Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$a (Nat_nat_bool_fun_fun$ )Nat_nat_prod_bool_fun$ )
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(pair$ (plus$ ?v0 ?v1 )?v1 )):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uub$ ?v0 )?v1 )(pair$ ?v0 (plus$ ?v0 ?v1 ))):pattern ((fun_app$ (fun_app$a uub$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uue$ ?v0 )?v1 )(pair$ ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uue$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uu$ ?v0 )?v1 )(pair$ ?v1 ?v0 )):pattern ((fun_app$ (fun_app$a uu$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$ (fun_app$a (uug$ ?v0 )?v1 )?v2 )(fun_app$b ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (uug$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 Nat_nat_prod_bool_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$d (uuf$ ?v0 )?v1 )?v2 )(fun_app$e ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$d (uuf$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$ (fun_app$a (uud$ ?v0 ?v1 )?v2 )?v3 )(fun_app$b (case_prod$ ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (uud$ ?v0 ?v1 )?v2 )?v3 )))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$c (fun_app$d (uuc$ ?v0 ?v1 )?v2 )?v3 )(fun_app$e (case_prod$a ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$c (fun_app$d (uuc$ ?v0 ?v1 )?v2 )?v3 )))):named a7 ))
(assert (! (not (= (fun_app$f (comp$ (fun_app$f (comp$ (case_prod$ uu$ ))(case_prod$ uua$ )))(case_prod$ uu$ ))(case_prod$ uub$ ))):named a8 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$e (case_prod$a ?v0 )(fun_app$b (case_prod$ ?v1 )?v2 ))(fun_app$e (case_prod$a (uuc$ ?v0 ?v1 ))?v2 ))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$b (case_prod$ ?v0 )(fun_app$b (case_prod$ ?v1 )?v2 ))(fun_app$b (case_prod$ (uud$ ?v0 ?v1 ))?v2 ))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ )(?v2 Nat_nat_prod$ ))(! (= (fun_app$b (fun_app$f (comp$ ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$f (comp$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(! (= (fun_app$b (case_prod$ uue$ )?v0 )?v0 ):pattern ((fun_app$b (case_prod$ uue$ )?v0 )))):named a12 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v2 ?v1 ))(= ?v0 ?v2 ))):named a13 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a14 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a16 ))
(assert (! (forall ((?v0 Nat_nat_prod_bool_fun$ ))(= (case_prod$a (uuf$ ?v0 ))?v0 )):named a17 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ ))(= (case_prod$ (uug$ ?v0 ))?v0 )):named a18 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat_nat_prod_bool_fun$ ))(=> (forall ((?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$c (fun_app$d ?v0 ?v2 )?v3 )(fun_app$e ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$a ?v0 )?v1 ))):named a19 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(=> (forall ((?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$ (fun_app$a ?v0 ?v2 )?v3 )(fun_app$b ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$ ?v0 )?v1 ))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$e (case_prod$a ?v0 )(pair$ ?v1 ?v2 ))(fun_app$c (fun_app$d ?v0 ?v1 )?v2 )):pattern ((fun_app$e (case_prod$a ?v0 )(pair$ ?v1 ?v2 ))))):named a21 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$b (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))(fun_app$ (fun_app$a ?v0 ?v1 )?v2 )):pattern ((fun_app$b (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))))):named a22 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$e (case_prod$a ?v0 )(pair$ ?v1 ?v2 ))(fun_app$c (fun_app$d ?v0 ?v1 )?v2 )):pattern ((fun_app$e (case_prod$a ?v0 )(pair$ ?v1 ?v2 ))))):named a23 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$b (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))(fun_app$ (fun_app$a ?v0 ?v1 )?v2 )):pattern ((fun_app$b (case_prod$ ?v0 )(pair$ ?v1 ?v2 ))))):named a24 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_bool_fun_fun$ )(?v2 Nat_nat_bool_fun_fun$ )(?v3 Nat_nat_prod$ ))(=> (and (forall ((?v4 Nat$ )(?v5 Nat$ ))(=> (= (pair$ ?v4 ?v5 )?v0 )(= (fun_app$c (fun_app$d ?v1 ?v4 )?v5 )(fun_app$c (fun_app$d ?v2 ?v4 )?v5 ))))(= ?v3 ?v0 ))(= (fun_app$e (case_prod$a ?v1 )?v3 )(fun_app$e (case_prod$a ?v2 )?v0 )))):named a25 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat_nat_nat_nat_prod_fun_fun$ )(?v3 Nat_nat_prod$ ))(=> (and (forall ((?v4 Nat$ )(?v5 Nat$ ))(=> (= (pair$ ?v4 ?v5 )?v0 )(= (fun_app$ (fun_app$a ?v1 ?v4 )?v5 )(fun_app$ (fun_app$a ?v2 ?v4 )?v5 ))))(= ?v3 ?v0 ))(= (fun_app$b (case_prod$ ?v1 )?v3 )(fun_app$b (case_prod$ ?v2 )?v0 )))):named a26 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(fun_app$e (case_prod$a ?v0 )(pair$ ?v1 ?v2 )))):named a27 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(=> (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(fun_app$e (case_prod$a ?v0 )(pair$ ?v1 ?v2 )))):named a28 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_bool_fun_fun$ ))(=> (forall ((?v2 Nat$ )(?v3 Nat$ ))(=> (= ?v0 (pair$ ?v2 ?v3 ))(fun_app$c (fun_app$d ?v1 ?v2 )?v3 )))(fun_app$e (case_prod$a ?v1 )?v0 ))):named a29 ))
(check-sat )
;(get-unsat-core )
