;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_nat_fun$ 0 )
(declare-sort Nat_a_fun$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_a_fun_nat_fun$ 0 )
(declare-sort A_a_nat_fun_fun$ 0 )
(declare-sort Nat_a_a_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_nat_fun_fun$ 0 )
(declare-sort A_a_fun_a_nat_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_nat_fun_a_nat_fun_fun$ 0 )
(declare-sort Nat_a_fun_nat_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_nat_fun_a_a_fun_nat_fun_fun$ 0 )
(declare-sort A_a_nat_fun_fun_a_a_nat_fun_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_fun$ 0 )
(declare-sort Nat_a_a_fun_fun_nat_a_a_fun_fun_fun$ 0 )
(declare-sort Nat_stream_stream_nat_stream_stream_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_nat_fun_fun_a_a_a_fun_nat_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_nat_fun_fun_a_a_fun_a_nat_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_nat_fun_fun_a_a_fun_a_a_fun_nat_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_stream$ 0)
(declare-sort A_a_fun_nat_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_fun_stream$ 0)
(declare-sort A_nat_fun_stream$ 0)
(declare-sort A_a_a_fun_fun_stream$ 0)
(declare-sort Nat_stream$ 0)
(declare-sort A_a_fun_stream$ 0)
(declare-sort A_stream_stream$ 0)
(declare-sort A_stream_stream_stream$ 0)
(declare-sort Nat_stream_stream$ 0)
(declare-sort Nat_stream_stream_stream$ 0)
(declare-sort Nat_a_fun_stream$ 0)
(declare-sort Nat_nat_fun_stream$ 0)
(declare-sort Nat_a_a_fun_fun_stream$ 0)
(declare-sort A_a_nat_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_nat_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_a_fun_a_fun_fun_stream$ 0)
(declare-sort A_a_a_a_fun_fun_fun_stream$ 0)
(declare-sort A_a_a_fun_nat_fun_fun_stream$ 0)
(declare-sort A_a_a_fun_a_fun_fun_stream$ 0)
(declare-sort A_a_fun_a_nat_fun_fun_stream$ 0)
(declare-sort A_a_a_fun_a_a_fun_fun_fun_stream$ 0)
(declare-fun shd$ (A_stream$)A$)
(declare-fun stl$ (A_stream$)A_stream$)
(declare-fun sCons$ (A$ A_stream$ )A_stream$)
(declare-fun select$ (A_a_fun_nat_fun_stream$)A_a_fun_nat_fun$)
(declare-fun selecta$ (A_a_fun_nat_fun_stream$)A_a_fun_nat_fun_stream$)
(declare-fun sCons$a (A_a_fun_nat_fun$ A_a_fun_nat_fun_stream$ )A_a_fun_nat_fun_stream$)
(declare-fun selectb$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun$)
(declare-fun selectc$ (A_a_fun_a_a_fun_fun_stream$)A_a_fun_a_a_fun_fun_stream$)
(declare-fun sCons$b (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$)
(declare-fun selectd$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun$)
(declare-fun selecte$ (A_a_fun_a_fun_stream$)A_a_fun_a_fun_stream$)
(declare-fun sCons$c (A_a_fun_a_fun$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$)
(declare-fun selectf$ (A_nat_fun_stream$)A_nat_fun$)
(declare-fun selectg$ (A_nat_fun_stream$)A_nat_fun_stream$)
(declare-fun sCons$d (A_nat_fun$ A_nat_fun_stream$ )A_nat_fun_stream$)
(declare-fun selecth$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun$)
(declare-fun selecti$ (A_a_a_fun_fun_stream$)A_a_a_fun_fun_stream$)
(declare-fun sCons$e (A_a_a_fun_fun$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$)
(declare-fun shd$a (Nat_stream$)Nat$)
(declare-fun stl$a (Nat_stream$)Nat_stream$)
(declare-fun sCons$f (Nat$ Nat_stream$ )Nat_stream$)
(declare-fun selectj$ (A_a_fun_stream$)A_a_fun$)
(declare-fun selectk$ (A_a_fun_stream$)A_a_fun_stream$)
(declare-fun sCons$g (A_a_fun$ A_a_fun_stream$ )A_a_fun_stream$)
(declare-fun shd$b (A_stream_stream$)A_stream$)
(declare-fun stl$b (A_stream_stream$)A_stream_stream$)
(declare-fun sCons$h (A_stream$ A_stream_stream$ )A_stream_stream$)
(declare-fun shd$c (A_stream_stream_stream$)A_stream_stream$)
(declare-fun stl$c (A_stream_stream_stream$)A_stream_stream_stream$)
(declare-fun sCons$i (A_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$)
(declare-fun shd$d (Nat_stream_stream$)Nat_stream$)
(declare-fun stl$d (Nat_stream_stream$)Nat_stream_stream$)
(declare-fun sCons$j (Nat_stream$ Nat_stream_stream$ )Nat_stream_stream$)
(declare-fun shd$e (Nat_stream_stream_stream$)Nat_stream_stream$)
(declare-fun stl$e (Nat_stream_stream_stream$)Nat_stream_stream_stream$)
(declare-fun sCons$k (Nat_stream_stream$ Nat_stream_stream_stream$ )Nat_stream_stream_stream$)
(declare-fun selectl$ (Nat_a_fun_stream$)Nat_a_fun$)
(declare-fun selectm$ (Nat_a_fun_stream$)Nat_a_fun_stream$)
(declare-fun sCons$l (Nat_a_fun$ Nat_a_fun_stream$ )Nat_a_fun_stream$)
(declare-fun selectn$ (Nat_nat_fun_stream$)Nat_nat_fun$)
(declare-fun selecto$ (Nat_nat_fun_stream$)Nat_nat_fun_stream$)
(declare-fun sCons$m (Nat_nat_fun$ Nat_nat_fun_stream$ )Nat_nat_fun_stream$)
(declare-fun selectp$ (Nat_a_a_fun_fun_stream$)Nat_a_a_fun_fun$)
(declare-fun selectq$ (Nat_a_a_fun_fun_stream$)Nat_a_a_fun_fun_stream$)
(declare-fun sCons$n (Nat_a_a_fun_fun$ Nat_a_a_fun_fun_stream$ )Nat_a_a_fun_fun_stream$)
(declare-fun selectr$ (A_a_nat_fun_fun_stream$)A_a_nat_fun_fun$)
(declare-fun selects$ (A_a_nat_fun_fun_stream$)A_a_nat_fun_fun_stream$)
(declare-fun sCons$o (A_a_nat_fun_fun$ A_a_nat_fun_fun_stream$ )A_a_nat_fun_fun_stream$)
(declare-fun selectt$ (A_a_fun_a_a_fun_nat_fun_fun_stream$)A_a_fun_a_a_fun_nat_fun_fun$)
(declare-fun selectu$ (A_a_fun_a_a_fun_nat_fun_fun_stream$)A_a_fun_a_a_fun_nat_fun_fun_stream$)
(declare-fun sCons$p (A_a_fun_a_a_fun_nat_fun_fun$ A_a_fun_a_a_fun_nat_fun_fun_stream$ )A_a_fun_a_a_fun_nat_fun_fun_stream$)
(declare-fun selectv$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$)A_a_fun_a_a_fun_a_a_fun_fun_fun$)
(declare-fun selectw$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$)A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$)
(declare-fun sCons$q (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$)
(declare-fun selectx$ (A_a_fun_a_a_fun_a_fun_fun_stream$)A_a_fun_a_a_fun_a_fun_fun$)
(declare-fun selecty$ (A_a_fun_a_a_fun_a_fun_fun_stream$)A_a_fun_a_a_fun_a_fun_fun_stream$)
(declare-fun sCons$r (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_a_fun_a_fun_fun_stream$ )A_a_fun_a_a_fun_a_fun_fun_stream$)
(declare-fun selectz$ (A_a_a_a_fun_fun_fun_stream$)A_a_a_a_fun_fun_fun$)
(declare-fun selecua$ (A_a_a_a_fun_fun_fun_stream$)A_a_a_a_fun_fun_fun_stream$)
(declare-fun sCons$s (A_a_a_a_fun_fun_fun$ A_a_a_a_fun_fun_fun_stream$ )A_a_a_a_fun_fun_fun_stream$)
(declare-fun selecub$ (A_a_a_fun_nat_fun_fun_stream$)A_a_a_fun_nat_fun_fun$)
(declare-fun selecuc$ (A_a_a_fun_nat_fun_fun_stream$)A_a_a_fun_nat_fun_fun_stream$)
(declare-fun sCons$t (A_a_a_fun_nat_fun_fun$ A_a_a_fun_nat_fun_fun_stream$ )A_a_a_fun_nat_fun_fun_stream$)
(declare-fun selecud$ (A_a_a_fun_a_fun_fun_stream$)A_a_a_fun_a_fun_fun$)
(declare-fun selecue$ (A_a_a_fun_a_fun_fun_stream$)A_a_a_fun_a_fun_fun_stream$)
(declare-fun sCons$u (A_a_a_fun_a_fun_fun$ A_a_a_fun_a_fun_fun_stream$ )A_a_a_fun_a_fun_fun_stream$)
(declare-fun selecuf$ (A_a_fun_a_nat_fun_fun_stream$)A_a_fun_a_nat_fun_fun$)
(declare-fun selecug$ (A_a_fun_a_nat_fun_fun_stream$)A_a_fun_a_nat_fun_fun_stream$)
(declare-fun sCons$v (A_a_fun_a_nat_fun_fun$ A_a_fun_a_nat_fun_fun_stream$ )A_a_fun_a_nat_fun_fun_stream$)
(declare-fun selecuh$ (A_a_a_fun_a_a_fun_fun_fun_stream$)A_a_a_fun_a_a_fun_fun_fun$)
(declare-fun selecui$ (A_a_a_fun_a_a_fun_fun_fun_stream$)A_a_a_fun_a_a_fun_fun_fun_stream$)
(declare-fun sCons$w (A_a_a_fun_a_a_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun_stream$ )A_a_a_fun_a_a_fun_fun_fun_stream$)
(declare-fun id$ ()A_a_fun$ )
(declare-fun uu$ (Nat$ )A_a_fun_nat_fun$ )
(declare-fun id$a ()A_a_fun_nat_fun_a_a_fun_nat_fun_fun$ )
(declare-fun id$b ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun id$c ()A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun id$d ()A_nat_fun_a_nat_fun_fun$ )
(declare-fun id$e ()A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun id$f ()Nat_nat_fun$ )
(declare-fun id$g ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$h ()A_stream_stream_a_stream_stream_fun$ )
(declare-fun id$i ()Nat_stream_stream_nat_stream_stream_fun$ )
(declare-fun id$j ()Nat_stream_nat_stream_fun$ )
(declare-fun id$k ()A_stream_a_stream_fun$ )
(declare-fun id$l ()Nat_a_fun_nat_a_fun_fun$ )
(declare-fun id$m ()Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun id$n ()Nat_a_a_fun_fun_nat_a_a_fun_fun_fun$ )
(declare-fun id$o ()A_a_nat_fun_fun_a_a_nat_fun_fun_fun$ )
(declare-fun id$p ()A_a_fun_a_a_fun_nat_fun_fun_a_a_fun_a_a_fun_nat_fun_fun_fun$ )
(declare-fun id$q ()A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun id$r ()A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$ )
(declare-fun id$s ()A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ )
(declare-fun id$t ()A_a_a_fun_nat_fun_fun_a_a_a_fun_nat_fun_fun_fun$ )
(declare-fun id$u ()A_a_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_fun$ )
(declare-fun id$v ()A_a_fun_a_nat_fun_fun_a_a_fun_a_nat_fun_fun_fun$ )
(declare-fun id$w ()A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun uua$ (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun uub$ (A$ )A_a_fun_a_fun$ )
(declare-fun uuc$ (Nat$ )A_nat_fun$ )
(declare-fun uud$ (A_a_fun$ )A_a_a_fun_fun$ )
(declare-fun uue$ (A$ )A_a_fun$ )
(declare-fun uuf$ (A_a_fun_a_a_fun_nat_fun_fun$ )A_a_fun_nat_fun$ )
(declare-fun uug$ (A_a_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun uuh$ (A_a_fun_a_a_fun_a_fun_fun$ )A_a_fun_a_fun$ )
(declare-fun uui$ (A_a_nat_fun_fun$ )A_nat_fun$ )
(declare-fun uuj$ (A_a_a_a_fun_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun uuk$ (A_a_a_fun_fun$ )A_a_fun$ )
(declare-fun uul$ ()A_a_fun_a_a_fun_fun$ )
(declare-fun uum$ ()A_a_fun$ )
(declare-fun uun$ (A_a_fun$ )A_a_a_fun_fun$ )
(declare-fun uuo$ (A_nat_fun$ )A_a_nat_fun_fun$ )
(declare-fun uup$ (A_a_fun_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun uuq$ (A_nat_fun$ )A_a_a_fun_nat_fun_fun$ )
(declare-fun uur$ (A_a_fun$ )A_a_a_fun_a_fun_fun$ )
(declare-fun uus$ (A_a_fun_nat_fun$ )A_a_fun_a_nat_fun_fun$ )
(declare-fun uut$ (A_a_a_fun_fun$ )A_a_a_a_fun_fun_fun$ )
(declare-fun uuu$ (A_a_fun_nat_fun$ )A_a_fun_a_a_fun_nat_fun_fun$ )
(declare-fun uuv$ (A_a_a_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun uuw$ (A_a_fun_a_fun$ )A_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun zero$ ()Nat$ )
(declare-fun st_ap$ (A_a_fun_nat_fun_stream$ A_a_fun_stream$ )Nat_stream$ )
(declare-fun zero$a ()A_stream_stream_stream$ )
(declare-fun zero$b ()A_stream_stream$ )
(declare-fun zero$c ()Nat_stream_stream_stream$ )
(declare-fun zero$d ()Nat_stream_stream$ )
(declare-fun zero$e ()Nat_stream$ )
(declare-fun zero$f ()A_stream$ )
(declare-fun zero$g ()A$ )
(declare-fun of_nat$ (Nat$ )A_stream$ )
(declare-fun st_ap$a (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$b (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$c (A_nat_fun_stream$ A_stream$ )Nat_stream$ )
(declare-fun st_ap$d (A_a_a_fun_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$e (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun st_ap$f (Nat_a_fun_stream$ Nat_stream$ )A_stream$ )
(declare-fun st_ap$g (Nat_nat_fun_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun st_ap$h (Nat_a_a_fun_fun_stream$ Nat_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$i (A_a_nat_fun_fun_stream$ A_stream$ )A_nat_fun_stream$ )
(declare-fun st_ap$j (A_a_fun_a_a_fun_nat_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_nat_fun_stream$ )
(declare-fun st_ap$k (A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun st_ap$l (A_a_fun_a_a_fun_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun st_ap$m (A_a_a_a_fun_fun_fun_stream$ A_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun st_ap$n (A_a_a_fun_nat_fun_fun_stream$ A_stream$ )A_a_fun_nat_fun_stream$ )
(declare-fun st_ap$o (A_a_a_fun_a_fun_fun_stream$ A_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun st_ap$p (A_a_fun_a_nat_fun_fun_stream$ A_a_fun_stream$ )A_nat_fun_stream$ )
(declare-fun st_ap$q (A_a_a_fun_a_a_fun_fun_fun_stream$ A_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun fun_app$ (A_a_fun_nat_fun$ A_a_fun$ )Nat$ )
(declare-fun of_nat$a (Nat$ )A$ )
(declare-fun of_nat$b (Nat$ )Nat$ )
(declare-fun of_nat$c (Nat$ )A_stream_stream$ )
(declare-fun of_nat$d (Nat$ )Nat_stream_stream$ )
(declare-fun of_nat$e (Nat$ )Nat_stream$ )
(declare-fun fun_app$a (A_a_fun_a_a_fun_nat_fun_fun$ A_a_fun$ )A_a_fun_nat_fun$ )
(declare-fun fun_app$b (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$c (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$d (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$e (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun$ )A_a_fun_a_fun$ )
(declare-fun fun_app$f (A_nat_fun$ A$ )Nat$ )
(declare-fun fun_app$g (A_a_nat_fun_fun$ A$ )A_nat_fun$ )
(declare-fun fun_app$h (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$i (A_a_a_a_fun_fun_fun$ A$ )A_a_a_fun_fun$ )
(declare-fun fun_app$j (A_a_fun$ A$ )A$ )
(declare-fun fun_app$k (A_a_fun_a_nat_fun_fun$ A_a_fun$ )A_nat_fun$ )
(declare-fun fun_app$l (A_a_a_fun_nat_fun_fun$ A$ )A_a_fun_nat_fun$ )
(declare-fun fun_app$m (A_a_a_fun_a_a_fun_fun_fun$ A$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$n (A_a_a_fun_a_fun_fun$ A$ )A_a_fun_a_fun$ )
(declare-fun fun_app$o (A_a_fun_nat_fun_a_a_fun_nat_fun_fun$ A_a_fun_nat_fun$ )A_a_fun_nat_fun$ )
(declare-fun fun_app$p (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$q (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun$ )
(declare-fun fun_app$r (A_nat_fun_a_nat_fun_fun$ A_nat_fun$ )A_nat_fun$ )
(declare-fun fun_app$s (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$t (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$u (Nat_a_fun$ Nat$ )A$ )
(declare-fun fun_app$v (Nat_a_a_fun_fun$ Nat$ )A_a_fun$ )
(declare-fun siterate$ (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$a (A_a_fun_nat_fun_a_a_fun_nat_fun_fun$ A_a_fun_nat_fun$ )A_a_fun_nat_fun_stream$ )
(declare-fun siterate$b (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$c (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun_stream$ )
(declare-fun siterate$d (A_nat_fun_a_nat_fun_fun$ A_nat_fun$ )A_nat_fun_stream$ )
(declare-fun siterate$e (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun_stream$ )
(declare-fun siterate$f (Nat_nat_fun$ Nat$ )Nat_stream$ )
(declare-fun siterate$g (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$h (A_stream_stream_a_stream_stream_fun$ A_stream_stream$ )A_stream_stream_stream$ )
(declare-fun siterate$i (Nat_stream_stream_nat_stream_stream_fun$ Nat_stream_stream$ )Nat_stream_stream_stream$ )
(declare-fun siterate$j (Nat_stream_nat_stream_fun$ Nat_stream$ )Nat_stream_stream$ )
(declare-fun siterate$k (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun siterate$l (Nat_a_fun_nat_a_fun_fun$ Nat_a_fun$ )Nat_a_fun_stream$ )
(declare-fun siterate$m (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun_stream$ )
(declare-fun siterate$n (Nat_a_a_fun_fun_nat_a_a_fun_fun_fun$ Nat_a_a_fun_fun$ )Nat_a_a_fun_fun_stream$ )
(declare-fun siterate$o (A_a_nat_fun_fun_a_a_nat_fun_fun_fun$ A_a_nat_fun_fun$ )A_a_nat_fun_fun_stream$ )
(declare-fun siterate$p (A_a_fun_a_a_fun_nat_fun_fun_a_a_fun_a_a_fun_nat_fun_fun_fun$ A_a_fun_a_a_fun_nat_fun_fun$ )A_a_fun_a_a_fun_nat_fun_fun_stream$ )
(declare-fun siterate$q (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$r (A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$ A_a_fun_a_a_fun_a_fun_fun$ )A_a_fun_a_a_fun_a_fun_fun_stream$ )
(declare-fun siterate$s (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ A_a_a_a_fun_fun_fun$ )A_a_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$t (A_a_a_fun_nat_fun_fun_a_a_a_fun_nat_fun_fun_fun$ A_a_a_fun_nat_fun_fun$ )A_a_a_fun_nat_fun_fun_stream$ )
(declare-fun siterate$u (A_a_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_fun$ A_a_a_fun_a_fun_fun$ )A_a_a_fun_a_fun_fun_stream$ )
(declare-fun siterate$v (A_a_fun_a_nat_fun_fun_a_a_fun_a_nat_fun_fun_fun$ A_a_fun_a_nat_fun_fun$ )A_a_fun_a_nat_fun_fun_stream$ )
(declare-fun siterate$w (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun_stream$ )
(assert (! (forall ((?v0 A_a_fun_a_a_fun_nat_fun_fun$ )(?v1 A_a_fun$ ))(! (= (fun_app$ (uuf$ ?v0 )?v1 )(fun_app$ (fun_app$a ?v0 ?v1 )?v1 )):pattern ((fun_app$ (uuf$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun$ ))(! (= (fun_app$b (uug$ ?v0 )?v1 )(fun_app$b (fun_app$c ?v0 ?v1 )?v1 )):pattern ((fun_app$b (uug$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$ )(?v1 A_a_fun$ ))(! (= (fun_app$d (uuh$ ?v0 )?v1 )(fun_app$d (fun_app$e ?v0 ?v1 )?v1 )):pattern ((fun_app$d (uuh$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_a_nat_fun_fun$ )(?v1 A$ ))(! (= (fun_app$f (uui$ ?v0 )?v1 )(fun_app$f (fun_app$g ?v0 ?v1 )?v1 )):pattern ((fun_app$f (uui$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A$ ))(! (= (fun_app$h (uuj$ ?v0 )?v1 )(fun_app$h (fun_app$i ?v0 ?v1 )?v1 )):pattern ((fun_app$h (uuj$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(! (= (fun_app$j (uuk$ ?v0 )?v1 )(fun_app$j (fun_app$h ?v0 ?v1 )?v1 )):pattern ((fun_app$j (uuk$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(! (= (fun_app$ (fun_app$a (uuu$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a (uuu$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$k (uus$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 ?v1 )):pattern ((fun_app$f (fun_app$k (uus$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(! (= (fun_app$d (fun_app$e (uuw$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e (uuw$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$b (uup$ ?v0 )?v1 )?v2 )(fun_app$d ?v0 ?v1 )):pattern ((fun_app$j (fun_app$b (uup$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ )(?v2 A_a_fun$ ))(! (= (fun_app$ (fun_app$l (uuq$ ?v0 )?v1 )?v2 )(fun_app$f ?v0 ?v1 )):pattern ((fun_app$ (fun_app$l (uuq$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$g (uuo$ ?v0 )?v1 )?v2 )(fun_app$f ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g (uuo$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ )(?v2 A_a_fun$ ))(! (= (fun_app$b (fun_app$m (uuv$ ?v0 )?v1 )?v2 )(fun_app$h ?v0 ?v1 )):pattern ((fun_app$b (fun_app$m (uuv$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$h (fun_app$i (uut$ ?v0 )?v1 )?v2 )(fun_app$h ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i (uut$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_a_fun$ ))(! (= (fun_app$d (fun_app$n (uur$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 ?v1 )):pattern ((fun_app$d (fun_app$n (uur$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$h (uun$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 ?v1 )):pattern ((fun_app$j (fun_app$h (uun$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_fun$ ))(! (= (fun_app$ (uu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uu$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ ))(! (= (fun_app$f (uuc$ ?v0 )?v1 )?v0 ):pattern ((fun_app$f (uuc$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(! (= (fun_app$b (uua$ ?v0 )?v1 )?v0 ):pattern ((fun_app$b (uua$ ?v0 )?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(! (= (fun_app$h (uud$ ?v0 )?v1 )?v0 ):pattern ((fun_app$h (uud$ ?v0 )?v1 )))):named a19 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ ))(! (= (fun_app$d (uub$ ?v0 )?v1 )?v0 ):pattern ((fun_app$d (uub$ ?v0 )?v1 )))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$j (uue$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (uue$ ?v0 )?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$b uul$ ?v0 )?v0 ):pattern ((fun_app$b uul$ ?v0 )))):named a22 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$j uum$ ?v0 )?v0 ):pattern ((fun_app$j uum$ ?v0 )))):named a23 ))
(assert (! (not (= (of_nat$ zero$ )(siterate$ id$ (of_nat$a zero$ )))):named a24 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ )(?v1 A_a_fun_nat_fun$ ))(= (= (siterate$a id$a ?v0 )(siterate$a id$a ?v1 ))(= ?v0 ?v1 ))):named a25 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun$ ))(= (= (siterate$b id$b ?v0 )(siterate$b id$b ?v1 ))(= ?v0 ?v1 ))):named a26 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun$ ))(= (= (siterate$c id$c ?v0 )(siterate$c id$c ?v1 ))(= ?v0 ?v1 ))):named a27 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_nat_fun$ ))(= (= (siterate$d id$d ?v0 )(siterate$d id$d ?v1 ))(= ?v0 ?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (= (siterate$e id$e ?v0 )(siterate$e id$e ?v1 ))(= ?v0 ?v1 ))):named a29 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (siterate$f id$f ?v0 )(siterate$f id$f ?v1 ))(= ?v0 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(= (= (siterate$g id$g ?v0 )(siterate$g id$g ?v1 ))(= ?v0 ?v1 ))):named a31 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (siterate$ id$ ?v0 )(siterate$ id$ ?v1 ))(= ?v0 ?v1 ))):named a32 ))
(assert (! (= zero$a (siterate$h id$h zero$b )):named a33 ))
(assert (! (= zero$c (siterate$i id$i zero$d )):named a34 ))
(assert (! (= zero$d (siterate$j id$j zero$e )):named a35 ))
(assert (! (= zero$b (siterate$k id$k zero$f )):named a36 ))
(assert (! (= zero$f (siterate$ id$ zero$g )):named a37 ))
(assert (! (= zero$e (siterate$f id$f zero$ )):named a38 ))
(assert (! (forall ((?v0 Nat$ ))(= (= (of_nat$b ?v0 )zero$ )(= ?v0 zero$ ))):named a39 ))
(assert (! (forall ((?v0 Nat$ ))(= (= zero$ (of_nat$b ?v0 ))(= zero$ ?v0 ))):named a40 ))
(assert (! (= (of_nat$c zero$ )zero$b ):named a41 ))
(assert (! (= (of_nat$d zero$ )zero$d ):named a42 ))
(assert (! (= (of_nat$e zero$ )zero$e ):named a43 ))
(assert (! (= (of_nat$b zero$ )zero$ ):named a44 ))
(assert (! (= (of_nat$ zero$ )zero$f ):named a45 ))
(assert (! (= (of_nat$a zero$ )zero$g ):named a46 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ ))(! (= (fun_app$o id$a ?v0 )?v0 ):pattern ((fun_app$o id$a ?v0 )))):named a47 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(! (= (fun_app$p id$b ?v0 )?v0 ):pattern ((fun_app$p id$b ?v0 )))):named a48 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ ))(! (= (fun_app$q id$c ?v0 )?v0 ):pattern ((fun_app$q id$c ?v0 )))):named a49 ))
(assert (! (forall ((?v0 A_nat_fun$ ))(! (= (fun_app$r id$d ?v0 )?v0 ):pattern ((fun_app$r id$d ?v0 )))):named a50 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$s id$e ?v0 )?v0 ):pattern ((fun_app$s id$e ?v0 )))):named a51 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$t id$f ?v0 )?v0 ):pattern ((fun_app$t id$f ?v0 )))):named a52 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$b id$g ?v0 )?v0 ):pattern ((fun_app$b id$g ?v0 )))):named a53 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$j id$ ?v0 )?v0 ):pattern ((fun_app$j id$ ?v0 )))):named a54 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$b ?v0 )(of_nat$b ?v1 ))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_fun_stream$ ))(= (st_ap$ (siterate$a id$a (uu$ ?v0 ))?v1 )(siterate$f id$f ?v0 ))):named a56 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_stream$ ))(= (st_ap$a (siterate$b id$b (uua$ ?v0 ))?v1 )(siterate$g id$g ?v0 ))):named a57 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun_stream$ ))(= (st_ap$b (siterate$c id$c (uub$ ?v0 ))?v1 )(siterate$ id$ ?v0 ))):named a58 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (st_ap$c (siterate$d id$d (uuc$ ?v0 ))?v1 )(siterate$f id$f ?v0 ))):named a59 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (st_ap$d (siterate$e id$e (uud$ ?v0 ))?v1 )(siterate$g id$g ?v0 ))):named a60 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(= (st_ap$e (siterate$g id$g (uue$ ?v0 ))?v1 )(siterate$ id$ ?v0 ))):named a61 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (st_ap$e (siterate$g id$g ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$j ?v0 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ ))(= (st_ap$c (siterate$d id$d ?v0 )(siterate$ id$ ?v1 ))(siterate$f id$f (fun_app$f ?v0 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat$ ))(= (st_ap$f (siterate$l id$l ?v0 )(siterate$f id$f ?v1 ))(siterate$ id$ (fun_app$u ?v0 ?v1 )))):named a64 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ ))(= (st_ap$g (siterate$m id$m ?v0 )(siterate$f id$f ?v1 ))(siterate$f id$f (fun_app$t ?v0 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (st_ap$d (siterate$e id$e ?v0 )(siterate$ id$ ?v1 ))(siterate$g id$g (fun_app$h ?v0 ?v1 )))):named a66 ))
(assert (! (forall ((?v0 Nat_a_a_fun_fun$ )(?v1 Nat$ ))(= (st_ap$h (siterate$n id$n ?v0 )(siterate$f id$f ?v1 ))(siterate$g id$g (fun_app$v ?v0 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (st_ap$b (siterate$c id$c ?v0 )(siterate$g id$g ?v1 ))(siterate$ id$ (fun_app$d ?v0 ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ )(?v1 A_a_fun$ ))(= (st_ap$ (siterate$a id$a ?v0 )(siterate$g id$g ?v1 ))(siterate$f id$f (fun_app$ ?v0 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (st_ap$a (siterate$b id$b ?v0 )(siterate$g id$g ?v1 ))(siterate$g id$g (fun_app$b ?v0 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_a_nat_fun_fun$ )(?v1 A$ ))(= (st_ap$i (siterate$o id$o ?v0 )(siterate$ id$ ?v1 ))(siterate$d id$d (fun_app$g ?v0 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ ))(! (= (fun_app$o id$a ?v0 )?v0 ):pattern ((fun_app$o id$a ?v0 )))):named a72 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(! (= (fun_app$p id$b ?v0 )?v0 ):pattern ((fun_app$p id$b ?v0 )))):named a73 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ ))(! (= (fun_app$q id$c ?v0 )?v0 ):pattern ((fun_app$q id$c ?v0 )))):named a74 ))
(assert (! (forall ((?v0 A_nat_fun$ ))(! (= (fun_app$r id$d ?v0 )?v0 ):pattern ((fun_app$r id$d ?v0 )))):named a75 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$s id$e ?v0 )?v0 ):pattern ((fun_app$s id$e ?v0 )))):named a76 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$t id$f ?v0 )?v0 ):pattern ((fun_app$t id$f ?v0 )))):named a77 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$b id$g ?v0 )?v0 ):pattern ((fun_app$b id$g ?v0 )))):named a78 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$j id$ ?v0 )?v0 ):pattern ((fun_app$j id$ ?v0 )))):named a79 ))
(assert (! (= zero$ zero$ ):named a80 ))
(assert (! (forall ((?v0 Nat$ ))(=> (and (=> (= ?v0 zero$ )false )(=> (not (= ?v0 zero$ ))false ))false )):named a81 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_nat_fun_fun$ )(?v1 A_a_fun_stream$ ))(= (st_ap$ (st_ap$j (siterate$p id$p ?v0 )?v1 )?v1 )(st_ap$ (siterate$a id$a (uuf$ ?v0 ))?v1 ))):named a82 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ ))(= (st_ap$a (st_ap$k (siterate$q id$q ?v0 )?v1 )?v1 )(st_ap$a (siterate$b id$b (uug$ ?v0 ))?v1 ))):named a83 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$ )(?v1 A_a_fun_stream$ ))(= (st_ap$b (st_ap$l (siterate$r id$r ?v0 )?v1 )?v1 )(st_ap$b (siterate$c id$c (uuh$ ?v0 ))?v1 ))):named a84 ))
(assert (! (forall ((?v0 A_a_nat_fun_fun$ )(?v1 A_stream$ ))(= (st_ap$c (st_ap$i (siterate$o id$o ?v0 )?v1 )?v1 )(st_ap$c (siterate$d id$d (uui$ ?v0 ))?v1 ))):named a85 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_stream$ ))(= (st_ap$d (st_ap$m (siterate$s id$s ?v0 )?v1 )?v1 )(st_ap$d (siterate$e id$e (uuj$ ?v0 ))?v1 ))):named a86 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ ))(= (st_ap$e (st_ap$d (siterate$e id$e ?v0 )?v1 )?v1 )(st_ap$e (siterate$g id$g (uuk$ ?v0 ))?v1 ))):named a87 ))
(assert (! (forall ((?v0 A_a_fun_stream$ ))(= (st_ap$a (siterate$b id$b uul$ )?v0 )?v0 )):named a88 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$e (siterate$g id$g uum$ )?v0 )?v0 )):named a89 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (st_ap$e (st_ap$d (siterate$e id$e (uun$ ?v0 ))?v1 )?v2 )(st_ap$e (siterate$g id$g ?v0 )?v1 ))):named a90 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (st_ap$c (st_ap$i (siterate$o id$o (uuo$ ?v0 ))?v1 )?v2 )(st_ap$c (siterate$d id$d ?v0 )?v1 ))):named a91 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (st_ap$e (st_ap$a (siterate$b id$b (uup$ ?v0 ))?v1 )?v2 )(st_ap$b (siterate$c id$c ?v0 )?v1 ))):named a92 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (st_ap$ (st_ap$n (siterate$t id$t (uuq$ ?v0 ))?v1 )?v2 )(st_ap$c (siterate$d id$d ?v0 )?v1 ))):named a93 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (st_ap$b (st_ap$o (siterate$u id$u (uur$ ?v0 ))?v1 )?v2 )(st_ap$e (siterate$g id$g ?v0 )?v1 ))):named a94 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (st_ap$c (st_ap$p (siterate$v id$v (uus$ ?v0 ))?v1 )?v2 )(st_ap$ (siterate$a id$a ?v0 )?v1 ))):named a95 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (st_ap$d (st_ap$m (siterate$s id$s (uut$ ?v0 ))?v1 )?v2 )(st_ap$d (siterate$e id$e ?v0 )?v1 ))):named a96 ))
(assert (! (forall ((?v0 A_a_fun_nat_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (st_ap$ (st_ap$j (siterate$p id$p (uuu$ ?v0 ))?v1 )?v2 )(st_ap$ (siterate$a id$a ?v0 )?v1 ))):named a97 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (st_ap$a (st_ap$q (siterate$w id$w (uuv$ ?v0 ))?v1 )?v2 )(st_ap$d (siterate$e id$e ?v0 )?v1 ))):named a98 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (st_ap$b (st_ap$l (siterate$r id$r (uuw$ ?v0 ))?v1 )?v2 )(st_ap$b (siterate$c id$c ?v0 )?v1 ))):named a99 ))
(check-sat )
;(get-unsat-core )
