;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort Bool_tree$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort Bool_a_fun$ 0 )
(declare-sort Bool_b_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_fun$ 0 )
(declare-sort A_b_fun_b_fun$ 0 )
(declare-sort B_a_b_fun_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_b_fun_bool_fun$ 0 )
(declare-sort A_bool_b_fun_fun$ 0 )
(declare-sort A_bool_fun_a_fun$ 0 )
(declare-sort A_bool_fun_b_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort A_bool_bool_fun_fun$ 0 )
(declare-sort Bool_a_bool_fun_fun$ 0 )
(declare-sort A_a_b_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_b_fun_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_b_fun_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun_a_a_b_fun_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun_b_a_b_fun_fun_fun$ 0 )
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun_a_b_b_fun_fun_fun$ 0 )
(declare-sort B_bool_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_fun_a_b_fun_bool_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort B_a_bool_fun_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ 0 )
(declare-sort A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun$ 0 )
(declare-sort Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort B_tree$ 0)
(declare-sort A_b_fun_tree$ 0)
(declare-sort A_tree$ 0)
(declare-sort A_b_bool_fun_fun_tree$ 0)
(declare-sort B_bool_fun_tree$ 0)
(declare-sort A_b_b_fun_fun_tree$ 0)
(declare-sort B_b_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_tree$ 0)
(declare-sort A_bool_fun_tree$ 0)
(declare-sort A_a_b_fun_fun_tree$ 0)
(declare-sort A_a_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_bool_fun_tree$ 0)
(declare-sort A_a_b_fun_bool_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ 0)
(declare-sort B_a_bool_fun_fun_tree$ 0)
(declare-sort B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ 0)
(declare-sort B_a_b_fun_fun_tree$ 0)
(declare-sort B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ 0)
(declare-sort A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ 0)
(declare-sort A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ 0)
(declare-sort Bool_bool_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ 0)
(declare-sort Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort Bool_b_fun_tree$ 0)
(declare-sort Bool_a_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_fun_tree$ 0)
(declare-sort A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ 0)
(declare-sort A_bool_b_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_b_fun_fun_tree$ 0)
(declare-sort A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_b_fun_fun_tree$ 0)
(declare-sort A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_a_fun_a_bool_fun_fun_tree$ 0)
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_fun_tree$ 0)
(declare-sort A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ 0)
(declare-sort B_bool_fun_a_b_bool_fun_fun_fun_tree$ 0)
(declare-sort B_b_fun_a_b_b_fun_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_a_b_fun_fun_fun_tree$ 0)
(declare-sort A_a_a_fun_fun_tree$ 0)
(declare-sort Bool_a_bool_fun_fun_tree$ 0)
(declare-sort A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ 0)
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ 0)
(declare-sort B_a_fun_tree$ 0)
(declare-sort A_bool_fun_b_fun_tree$ 0)
(declare-sort A_bool_fun_a_fun_tree$ 0)
(declare-sort A_b_fun_b_fun_tree$ 0)
(declare-fun root$ (B_tree$)B$)
(declare-fun left$ (B_tree$)B_tree$)
(declare-fun right$ (B_tree$)B_tree$)
(declare-fun node$ (B$ B_tree$ B_tree$ )B_tree$)
(declare-fun select$ (A_b_fun_tree$)A_b_fun$)
(declare-fun selecta$ (A_b_fun_tree$)A_b_fun_tree$)
(declare-fun selectb$ (A_b_fun_tree$)A_b_fun_tree$)
(declare-fun node$a (A_b_fun$ A_b_fun_tree$ A_b_fun_tree$ )A_b_fun_tree$)
(declare-fun root$a (A_tree$)A$)
(declare-fun left$a (A_tree$)A_tree$)
(declare-fun right$a (A_tree$)A_tree$)
(declare-fun node$b (A$ A_tree$ A_tree$ )A_tree$)
(declare-fun selectc$ (A_b_bool_fun_fun_tree$)A_b_bool_fun_fun$)
(declare-fun selectd$ (A_b_bool_fun_fun_tree$)A_b_bool_fun_fun_tree$)
(declare-fun selecte$ (A_b_bool_fun_fun_tree$)A_b_bool_fun_fun_tree$)
(declare-fun node$c (A_b_bool_fun_fun$ A_b_bool_fun_fun_tree$ A_b_bool_fun_fun_tree$ )A_b_bool_fun_fun_tree$)
(declare-fun selectf$ (B_bool_fun_tree$)B_bool_fun$)
(declare-fun selectg$ (B_bool_fun_tree$)B_bool_fun_tree$)
(declare-fun selecth$ (B_bool_fun_tree$)B_bool_fun_tree$)
(declare-fun node$d (B_bool_fun$ B_bool_fun_tree$ B_bool_fun_tree$ )B_bool_fun_tree$)
(declare-fun selecti$ (A_b_b_fun_fun_tree$)A_b_b_fun_fun$)
(declare-fun selectj$ (A_b_b_fun_fun_tree$)A_b_b_fun_fun_tree$)
(declare-fun selectk$ (A_b_b_fun_fun_tree$)A_b_b_fun_fun_tree$)
(declare-fun node$e (A_b_b_fun_fun$ A_b_b_fun_fun_tree$ A_b_b_fun_fun_tree$ )A_b_b_fun_fun_tree$)
(declare-fun selectl$ (B_b_fun_tree$)B_b_fun$)
(declare-fun selectm$ (B_b_fun_tree$)B_b_fun_tree$)
(declare-fun selectn$ (B_b_fun_tree$)B_b_fun_tree$)
(declare-fun node$f (B_b_fun$ B_b_fun_tree$ B_b_fun_tree$ )B_b_fun_tree$)
(declare-fun selecto$ (A_a_bool_fun_fun_tree$)A_a_bool_fun_fun$)
(declare-fun selectp$ (A_a_bool_fun_fun_tree$)A_a_bool_fun_fun_tree$)
(declare-fun selectq$ (A_a_bool_fun_fun_tree$)A_a_bool_fun_fun_tree$)
(declare-fun node$g (A_a_bool_fun_fun$ A_a_bool_fun_fun_tree$ A_a_bool_fun_fun_tree$ )A_a_bool_fun_fun_tree$)
(declare-fun selectr$ (A_bool_fun_tree$)A_bool_fun$)
(declare-fun selects$ (A_bool_fun_tree$)A_bool_fun_tree$)
(declare-fun selectt$ (A_bool_fun_tree$)A_bool_fun_tree$)
(declare-fun node$h (A_bool_fun$ A_bool_fun_tree$ A_bool_fun_tree$ )A_bool_fun_tree$)
(declare-fun selectu$ (A_a_b_fun_fun_tree$)A_a_b_fun_fun$)
(declare-fun selectv$ (A_a_b_fun_fun_tree$)A_a_b_fun_fun_tree$)
(declare-fun selectw$ (A_a_b_fun_fun_tree$)A_a_b_fun_fun_tree$)
(declare-fun node$i (A_a_b_fun_fun$ A_a_b_fun_fun_tree$ A_a_b_fun_fun_tree$ )A_a_b_fun_fun_tree$)
(declare-fun selectx$ (A_a_fun_tree$)A_a_fun$)
(declare-fun selecty$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun selectz$ (A_a_fun_tree$)A_a_fun_tree$)
(declare-fun node$j (A_a_fun$ A_a_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$)
(declare-fun selecua$ (A_b_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun$)
(declare-fun selecub$ (A_b_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_tree$)
(declare-fun selecuc$ (A_b_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_tree$)
(declare-fun node$k (A_b_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$)
(declare-fun selecud$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selecue$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecuf$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$l (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecug$ (A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$)A_a_b_fun_fun_a_a_b_fun_fun_fun$)
(declare-fun selecuh$ (A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$)A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$)
(declare-fun selecui$ (A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$)A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$)
(declare-fun node$m (A_a_b_fun_fun_a_a_b_fun_fun_fun$ A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ )A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$)
(declare-fun selecuj$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)A_a_bool_fun_fun_a_a_bool_fun_fun_fun$)
(declare-fun selecuk$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecul$ (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$n (A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ )A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun selecum$ (A_b_fun_bool_fun_tree$)A_b_fun_bool_fun$)
(declare-fun selecun$ (A_b_fun_bool_fun_tree$)A_b_fun_bool_fun_tree$)
(declare-fun selecuo$ (A_b_fun_bool_fun_tree$)A_b_fun_bool_fun_tree$)
(declare-fun node$o (A_b_fun_bool_fun$ A_b_fun_bool_fun_tree$ A_b_fun_bool_fun_tree$ )A_b_fun_bool_fun_tree$)
(declare-fun selecup$ (A_a_b_fun_bool_fun_fun_tree$)A_a_b_fun_bool_fun_fun$)
(declare-fun selecuq$ (A_a_b_fun_bool_fun_fun_tree$)A_a_b_fun_bool_fun_fun_tree$)
(declare-fun selecur$ (A_a_b_fun_bool_fun_fun_tree$)A_a_b_fun_bool_fun_fun_tree$)
(declare-fun node$p (A_a_b_fun_bool_fun_fun$ A_a_b_fun_bool_fun_fun_tree$ A_a_b_fun_bool_fun_fun_tree$ )A_a_b_fun_bool_fun_fun_tree$)
(declare-fun selecus$ (A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun$)
(declare-fun selecut$ (A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$)
(declare-fun selecuu$ (A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$)
(declare-fun node$q (A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun$ A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$)
(declare-fun selecuv$ (A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selecuw$ (A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecux$ (A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$r (A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecuy$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selecuz$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecva$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$s (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecvb$ (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selecvc$ (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecvd$ (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$t (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecve$ (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$)
(declare-fun selecvf$ (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun selecvg$ (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun node$u (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$)
(declare-fun selecvh$ (B_a_bool_fun_fun_tree$)B_a_bool_fun_fun$)
(declare-fun selecvi$ (B_a_bool_fun_fun_tree$)B_a_bool_fun_fun_tree$)
(declare-fun selecvj$ (B_a_bool_fun_fun_tree$)B_a_bool_fun_fun_tree$)
(declare-fun node$v (B_a_bool_fun_fun$ B_a_bool_fun_fun_tree$ B_a_bool_fun_fun_tree$ )B_a_bool_fun_fun_tree$)
(declare-fun selecvk$ (B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$)B_a_bool_fun_fun_a_b_bool_fun_fun_fun$)
(declare-fun selecvl$ (B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$)B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$)
(declare-fun selecvm$ (B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$)B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$)
(declare-fun node$w (B_a_bool_fun_fun_a_b_bool_fun_fun_fun$ B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ )B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$)
(declare-fun selecvn$ (B_a_b_fun_fun_tree$)B_a_b_fun_fun$)
(declare-fun selecvo$ (B_a_b_fun_fun_tree$)B_a_b_fun_fun_tree$)
(declare-fun selecvp$ (B_a_b_fun_fun_tree$)B_a_b_fun_fun_tree$)
(declare-fun node$x (B_a_b_fun_fun$ B_a_b_fun_fun_tree$ B_a_b_fun_fun_tree$ )B_a_b_fun_fun_tree$)
(declare-fun selecvq$ (B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$)B_a_b_fun_fun_a_b_b_fun_fun_fun$)
(declare-fun selecvr$ (B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$)B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$)
(declare-fun selecvs$ (B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$)B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$)
(declare-fun node$y (B_a_b_fun_fun_a_b_b_fun_fun_fun$ B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ )B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$)
(declare-fun selecvt$ (A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$)A_b_b_fun_fun_b_a_b_fun_fun_fun$)
(declare-fun selecvu$ (A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$)A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$)
(declare-fun selecvv$ (A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$)A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$)
(declare-fun node$z (A_b_b_fun_fun_b_a_b_fun_fun_fun$ A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ )A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$)
(declare-fun selecvw$ (A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$)A_b_bool_fun_fun_b_a_bool_fun_fun_fun$)
(declare-fun selecvx$ (A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$)A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$)
(declare-fun selecvy$ (A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$)A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$)
(declare-fun node$aa (A_b_bool_fun_fun_b_a_bool_fun_fun_fun$ A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ )A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$)
(declare-fun selecvz$ (Bool_bool_fun_tree$)Bool_bool_fun$)
(declare-fun selecwa$ (Bool_bool_fun_tree$)Bool_bool_fun_tree$)
(declare-fun selecwb$ (Bool_bool_fun_tree$)Bool_bool_fun_tree$)
(declare-fun node$ab (Bool_bool_fun$ Bool_bool_fun_tree$ Bool_bool_fun_tree$ )Bool_bool_fun_tree$)
(declare-fun selecwc$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$)
(declare-fun selecwd$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)
(declare-fun selecwe$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)
(declare-fun node$ac (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$)
(declare-fun selecwf$ (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selecwg$ (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecwh$ (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$ad (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecwi$ (Bool_b_fun_tree$)Bool_b_fun$)
(declare-fun selecwj$ (Bool_b_fun_tree$)Bool_b_fun_tree$)
(declare-fun selecwk$ (Bool_b_fun_tree$)Bool_b_fun_tree$)
(declare-fun node$ae (Bool_b_fun$ Bool_b_fun_tree$ Bool_b_fun_tree$ )Bool_b_fun_tree$)
(declare-fun selecwl$ (Bool_a_fun_tree$)Bool_a_fun$)
(declare-fun selecwm$ (Bool_a_fun_tree$)Bool_a_fun_tree$)
(declare-fun selecwn$ (Bool_a_fun_tree$)Bool_a_fun_tree$)
(declare-fun node$af (Bool_a_fun$ Bool_a_fun_tree$ Bool_a_fun_tree$ )Bool_a_fun_tree$)
(declare-fun selecwo$ (A_b_fun_a_b_fun_fun_tree$)A_b_fun_a_b_fun_fun$)
(declare-fun selecwp$ (A_b_fun_a_b_fun_fun_tree$)A_b_fun_a_b_fun_fun_tree$)
(declare-fun selecwq$ (A_b_fun_a_b_fun_fun_tree$)A_b_fun_a_b_fun_fun_tree$)
(declare-fun node$ag (A_b_fun_a_b_fun_fun$ A_b_fun_a_b_fun_fun_tree$ A_b_fun_a_b_fun_fun_tree$ )A_b_fun_a_b_fun_fun_tree$)
(declare-fun selecwr$ (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun$)
(declare-fun selecws$ (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)
(declare-fun selecwt$ (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)
(declare-fun node$ah (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ )A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$)
(declare-fun selecwu$ (A_bool_b_fun_fun_tree$)A_bool_b_fun_fun$)
(declare-fun selecwv$ (A_bool_b_fun_fun_tree$)A_bool_b_fun_fun_tree$)
(declare-fun selecww$ (A_bool_b_fun_fun_tree$)A_bool_b_fun_fun_tree$)
(declare-fun node$ai (A_bool_b_fun_fun$ A_bool_b_fun_fun_tree$ A_bool_b_fun_fun_tree$ )A_bool_b_fun_fun_tree$)
(declare-fun selecwx$ (A_bool_fun_a_b_fun_fun_tree$)A_bool_fun_a_b_fun_fun$)
(declare-fun selecwy$ (A_bool_fun_a_b_fun_fun_tree$)A_bool_fun_a_b_fun_fun_tree$)
(declare-fun selecwz$ (A_bool_fun_a_b_fun_fun_tree$)A_bool_fun_a_b_fun_fun_tree$)
(declare-fun node$aj (A_bool_fun_a_b_fun_fun$ A_bool_fun_a_b_fun_fun_tree$ A_bool_fun_a_b_fun_fun_tree$ )A_bool_fun_a_b_fun_fun_tree$)
(declare-fun selecxa$ (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun$)
(declare-fun selecxb$ (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)
(declare-fun selecxc$ (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)
(declare-fun node$ak (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ )A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$)
(declare-fun selecxd$ (A_a_fun_a_b_fun_fun_tree$)A_a_fun_a_b_fun_fun$)
(declare-fun selecxe$ (A_a_fun_a_b_fun_fun_tree$)A_a_fun_a_b_fun_fun_tree$)
(declare-fun selecxf$ (A_a_fun_a_b_fun_fun_tree$)A_a_fun_a_b_fun_fun_tree$)
(declare-fun node$al (A_a_fun_a_b_fun_fun$ A_a_fun_a_b_fun_fun_tree$ A_a_fun_a_b_fun_fun_tree$ )A_a_fun_a_b_fun_fun_tree$)
(declare-fun selecxg$ (A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$)A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun$)
(declare-fun selecxh$ (A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$)A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$)
(declare-fun selecxi$ (A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$)A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$)
(declare-fun node$am (A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun$ A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ )A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$)
(declare-fun selecxj$ (A_bool_bool_fun_fun_tree$)A_bool_bool_fun_fun$)
(declare-fun selecxk$ (A_bool_bool_fun_fun_tree$)A_bool_bool_fun_fun_tree$)
(declare-fun selecxl$ (A_bool_bool_fun_fun_tree$)A_bool_bool_fun_fun_tree$)
(declare-fun node$an (A_bool_bool_fun_fun$ A_bool_bool_fun_fun_tree$ A_bool_bool_fun_fun_tree$ )A_bool_bool_fun_fun_tree$)
(declare-fun selecxm$ (A_bool_fun_a_bool_fun_fun_tree$)A_bool_fun_a_bool_fun_fun$)
(declare-fun selecxn$ (A_bool_fun_a_bool_fun_fun_tree$)A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun selecxo$ (A_bool_fun_a_bool_fun_fun_tree$)A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun node$ao (A_bool_fun_a_bool_fun_fun$ A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_a_bool_fun_fun_tree$ )A_bool_fun_a_bool_fun_fun_tree$)
(declare-fun selecxp$ (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun selecxq$ (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecxr$ (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ap (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecxs$ (A_a_fun_a_bool_fun_fun_tree$)A_a_fun_a_bool_fun_fun$)
(declare-fun selecxt$ (A_a_fun_a_bool_fun_fun_tree$)A_a_fun_a_bool_fun_fun_tree$)
(declare-fun selecxu$ (A_a_fun_a_bool_fun_fun_tree$)A_a_fun_a_bool_fun_fun_tree$)
(declare-fun node$aq (A_a_fun_a_bool_fun_fun$ A_a_fun_a_bool_fun_fun_tree$ A_a_fun_a_bool_fun_fun_tree$ )A_a_fun_a_bool_fun_fun_tree$)
(declare-fun selecxv$ (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$)
(declare-fun selecxw$ (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecxx$ (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ar (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ )A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecxy$ (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selecxz$ (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecya$ (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$as (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecyb$ (A_b_fun_a_fun_tree$)A_b_fun_a_fun$)
(declare-fun selecyc$ (A_b_fun_a_fun_tree$)A_b_fun_a_fun_tree$)
(declare-fun selecyd$ (A_b_fun_a_fun_tree$)A_b_fun_a_fun_tree$)
(declare-fun node$at (A_b_fun_a_fun$ A_b_fun_a_fun_tree$ A_b_fun_a_fun_tree$ )A_b_fun_a_fun_tree$)
(declare-fun selecye$ (A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)A_b_fun_a_fun_a_b_fun_bool_fun_fun$)
(declare-fun selecyf$ (A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)
(declare-fun selecyg$ (A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)
(declare-fun node$au (A_b_fun_a_fun_a_b_fun_bool_fun_fun$ A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ )A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$)
(declare-fun selecyh$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun$)
(declare-fun selecyi$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)
(declare-fun selecyj$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)
(declare-fun node$av (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$)
(declare-fun selecyk$ (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_a_bool_fun_fun_fun$)
(declare-fun selecyl$ (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecym$ (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$aw (A_b_fun_a_bool_fun_a_bool_fun_fun_fun$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecyn$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selecyo$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecyp$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$ax (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecyq$ (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selecyr$ (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecys$ (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$ay (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecyt$ (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun selecyu$ (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecyv$ (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$az (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecyw$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun selecyx$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecyy$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$ba (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun selecyz$ (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun$)
(declare-fun selecza$ (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczb$ (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bb (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczc$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun seleczd$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun selecze$ (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bc (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seleczf$ (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun seleczg$ (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seleczh$ (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$bd (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seleczi$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun$)
(declare-fun seleczj$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun seleczk$ (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun node$be (A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$)
(declare-fun seleczl$ (B_bool_fun_a_b_bool_fun_fun_fun_tree$)B_bool_fun_a_b_bool_fun_fun_fun$)
(declare-fun seleczm$ (B_bool_fun_a_b_bool_fun_fun_fun_tree$)B_bool_fun_a_b_bool_fun_fun_fun_tree$)
(declare-fun seleczn$ (B_bool_fun_a_b_bool_fun_fun_fun_tree$)B_bool_fun_a_b_bool_fun_fun_fun_tree$)
(declare-fun node$bf (B_bool_fun_a_b_bool_fun_fun_fun$ B_bool_fun_a_b_bool_fun_fun_fun_tree$ B_bool_fun_a_b_bool_fun_fun_fun_tree$ )B_bool_fun_a_b_bool_fun_fun_fun_tree$)
(declare-fun seleczo$ (B_b_fun_a_b_b_fun_fun_fun_tree$)B_b_fun_a_b_b_fun_fun_fun$)
(declare-fun seleczp$ (B_b_fun_a_b_b_fun_fun_fun_tree$)B_b_fun_a_b_b_fun_fun_fun_tree$)
(declare-fun seleczq$ (B_b_fun_a_b_b_fun_fun_fun_tree$)B_b_fun_a_b_b_fun_fun_fun_tree$)
(declare-fun node$bg (B_b_fun_a_b_b_fun_fun_fun$ B_b_fun_a_b_b_fun_fun_fun_tree$ B_b_fun_a_b_b_fun_fun_fun_tree$ )B_b_fun_a_b_b_fun_fun_fun_tree$)
(declare-fun seleczr$ (A_bool_fun_a_a_bool_fun_fun_fun_tree$)A_bool_fun_a_a_bool_fun_fun_fun$)
(declare-fun seleczs$ (A_bool_fun_a_a_bool_fun_fun_fun_tree$)A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seleczt$ (A_bool_fun_a_a_bool_fun_fun_fun_tree$)A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun node$bh (A_bool_fun_a_a_bool_fun_fun_fun$ A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_a_a_bool_fun_fun_fun_tree$ )A_bool_fun_a_a_bool_fun_fun_fun_tree$)
(declare-fun seleczu$ (A_b_fun_a_a_b_fun_fun_fun_tree$)A_b_fun_a_a_b_fun_fun_fun$)
(declare-fun seleczv$ (A_b_fun_a_a_b_fun_fun_fun_tree$)A_b_fun_a_a_b_fun_fun_fun_tree$)
(declare-fun seleczw$ (A_b_fun_a_a_b_fun_fun_fun_tree$)A_b_fun_a_a_b_fun_fun_fun_tree$)
(declare-fun node$bi (A_b_fun_a_a_b_fun_fun_fun$ A_b_fun_a_a_b_fun_fun_fun_tree$ A_b_fun_a_a_b_fun_fun_fun_tree$ )A_b_fun_a_a_b_fun_fun_fun_tree$)
(declare-fun seleczx$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun$)
(declare-fun seleczy$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun seleczz$ (A_a_a_fun_fun_tree$)A_a_a_fun_fun_tree$)
(declare-fun node$bj (A_a_a_fun_fun$ A_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$)
(declare-fun seledaa$ (Bool_a_bool_fun_fun_tree$)Bool_a_bool_fun_fun$)
(declare-fun seledab$ (Bool_a_bool_fun_fun_tree$)Bool_a_bool_fun_fun_tree$)
(declare-fun seledac$ (Bool_a_bool_fun_fun_tree$)Bool_a_bool_fun_fun_tree$)
(declare-fun node$bk (Bool_a_bool_fun_fun$ Bool_a_bool_fun_fun_tree$ Bool_a_bool_fun_fun_tree$ )Bool_a_bool_fun_fun_tree$)
(declare-fun seledad$ (A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_bool_fun_a_b_fun_a_bool_fun_fun_fun$)
(declare-fun seledae$ (A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledaf$ (A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun node$bl (A_bool_fun_a_b_fun_a_bool_fun_fun_fun$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$)
(declare-fun seledag$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$)
(declare-fun seledah$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seledai$ (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun node$bm (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$)
(declare-fun seledaj$ (B_a_fun_tree$)B_a_fun$)
(declare-fun seledak$ (B_a_fun_tree$)B_a_fun_tree$)
(declare-fun seledal$ (B_a_fun_tree$)B_a_fun_tree$)
(declare-fun node$bn (B_a_fun$ B_a_fun_tree$ B_a_fun_tree$ )B_a_fun_tree$)
(declare-fun seledam$ (A_bool_fun_b_fun_tree$)A_bool_fun_b_fun$)
(declare-fun seledan$ (A_bool_fun_b_fun_tree$)A_bool_fun_b_fun_tree$)
(declare-fun seledao$ (A_bool_fun_b_fun_tree$)A_bool_fun_b_fun_tree$)
(declare-fun node$bo (A_bool_fun_b_fun$ A_bool_fun_b_fun_tree$ A_bool_fun_b_fun_tree$ )A_bool_fun_b_fun_tree$)
(declare-fun seledap$ (A_bool_fun_a_fun_tree$)A_bool_fun_a_fun$)
(declare-fun seledaq$ (A_bool_fun_a_fun_tree$)A_bool_fun_a_fun_tree$)
(declare-fun seledar$ (A_bool_fun_a_fun_tree$)A_bool_fun_a_fun_tree$)
(declare-fun node$bp (A_bool_fun_a_fun$ A_bool_fun_a_fun_tree$ A_bool_fun_a_fun_tree$ )A_bool_fun_a_fun_tree$)
(declare-fun seledas$ (A_b_fun_b_fun_tree$)A_b_fun_b_fun$)
(declare-fun seledat$ (A_b_fun_b_fun_tree$)A_b_fun_b_fun_tree$)
(declare-fun seledau$ (A_b_fun_b_fun_tree$)A_b_fun_b_fun_tree$)
(declare-fun node$bq (A_b_fun_b_fun$ A_b_fun_b_fun_tree$ A_b_fun_b_fun_tree$ )A_b_fun_b_fun_tree$)
(declare-datatypes ()((Dir$ (l$ )(r$ ))(Dir_list$ (nil$ )(cons$ (hd$ Dir$ )(tl$ Dir_list$ )))))
(declare-fun f$ ()A_b_fun_tree$ )
(declare-fun g$ ()A_b_fun_tree$ )
(declare-fun x$ ()A_tree$ )
(declare-fun y$ ()A_tree$ )
(declare-fun id$ ()A_a_fun$ )
(declare-fun uu$ ()A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun node$br (Bool Bool_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun tree_C$ ()A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ )
(declare-fun tree_K$ ()B_bool_fun_a_b_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$ ()A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun tree_C$a ()A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$b ()A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$c ()A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$d ()A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$e ()A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$f ()B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$g ()B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ )
(declare-fun tree_C$h ()A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ )
(declare-fun tree_C$i ()A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_K$a ()B_b_fun_a_b_b_fun_fun_fun_tree$ )
(declare-fun tree_K$b ()A_bool_fun_a_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_K$c ()A_b_fun_a_a_b_fun_fun_fun_tree$ )
(declare-fun tree_K$d ()A_a_a_fun_fun_tree$ )
(declare-fun tree_K$e ()B_a_b_fun_fun_tree$ )
(declare-fun tree_K$f ()Bool_a_bool_fun_fun_tree$ )
(declare-fun tree_K$g ()A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_K$h ()A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$a ()A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_S$b ()A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_S$c ()A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$d ()A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$e ()A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$f ()A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$g ()A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$h ()A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$i ()A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$ (A_b_fun_tree$ A_tree$ )B_tree$ )
(declare-fun fun_app$a (A_b_fun_a_bool_fun_fun$ A_b_fun$ )A_bool_fun$ )
(declare-fun fun_app$b (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun fun_app$c (A_b_fun$ A$ )B$ )
(declare-fun fun_app$d (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$e (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )Bool )
(declare-fun fun_app$f (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun fun_app$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun fun_app$h (Bool_b_fun$ Bool )B$ )
(declare-fun fun_app$i (Bool_a_fun$ Bool )A$ )
(declare-fun fun_app$j (B_b_fun$ B$ )B$ )
(declare-fun fun_app$k (B_a_fun$ B$ )A$ )
(declare-fun fun_app$l (A_a_fun$ A$ )A$ )
(declare-fun fun_app$m (A_bool_fun_b_fun$ A_bool_fun$ )B$ )
(declare-fun fun_app$n (A_bool_fun_a_fun$ A_bool_fun$ )A$ )
(declare-fun fun_app$o (A_b_fun_b_fun$ A_b_fun$ )B$ )
(declare-fun map_tree$ (A_b_bool_fun_fun$ A_tree$ )B_bool_fun_tree$ )
(declare-fun tree_ap$a (A_b_bool_fun_fun_tree$ A_tree$ )B_bool_fun_tree$ )
(declare-fun tree_ap$b (A_b_b_fun_fun_tree$ A_tree$ )B_b_fun_tree$ )
(declare-fun tree_ap$c (A_a_bool_fun_fun_tree$ A_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$d (A_a_b_fun_fun_tree$ A_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$e (A_a_fun_tree$ A_tree$ )A_tree$ )
(declare-fun tree_ap$f (A_bool_fun_tree$ A_tree$ )Bool_tree$ )
(declare-fun tree_ap$g (A_b_fun_a_bool_fun_fun_tree$ A_b_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$h (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$i (A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ A_a_b_fun_fun_tree$ )A_a_b_fun_fun_tree$ )
(declare-fun tree_ap$j (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$ )A_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$k (A_b_fun_bool_fun_tree$ A_b_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$l (A_a_b_fun_bool_fun_fun_tree$ A_tree$ )A_b_fun_bool_fun_tree$ )
(declare-fun tree_ap$m (A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_a_b_fun_bool_fun_fun_tree$ )
(declare-fun tree_ap$n (A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_a_b_fun_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$o (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$p (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$q (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$r (B_bool_fun_tree$ B_tree$ )Bool_tree$ )
(declare-fun tree_ap$s (B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ B_a_bool_fun_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_ap$t (B_a_bool_fun_fun_tree$ B_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$u (B_b_fun_tree$ B_tree$ )B_tree$ )
(declare-fun tree_ap$v (B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ B_a_b_fun_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_ap$w (B_a_b_fun_fun_tree$ B_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$x (A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ A_b_b_fun_fun_tree$ )B_a_b_fun_fun_tree$ )
(declare-fun tree_ap$y (A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ A_b_bool_fun_fun_tree$ )B_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$z (Bool_bool_fun_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun map_tree$a (A_b_b_fun_fun$ A_tree$ )B_b_fun_tree$ )
(declare-fun map_tree$b (A_a_bool_fun_fun$ A_tree$ )A_bool_fun_tree$ )
(declare-fun map_tree$c (A_a_b_fun_fun$ A_tree$ )A_b_fun_tree$ )
(declare-fun map_tree$d (A_a_fun$ A_tree$ )A_tree$ )
(declare-fun map_tree$e (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun map_tree$f (A_b_fun$ A_tree$ )B_tree$ )
(declare-fun map_tree$g (A_bool_fun$ A_tree$ )Bool_tree$ )
(declare-fun map_tree$h (A_b_fun_a_bool_fun_fun$ A_b_fun_tree$ )A_bool_fun_tree$ )
(declare-fun map_tree$i (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun map_tree$j (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )Bool_tree$ )
(declare-fun map_tree$k (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun map_tree$l (Bool_bool_fun$ Bool_tree$ )Bool_tree$ )
(declare-fun tree_ap$aa (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$ab (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ Bool_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$ac (Bool_b_fun_tree$ Bool_tree$ )B_tree$ )
(declare-fun tree_ap$ad (Bool_a_fun_tree$ Bool_tree$ )A_tree$ )
(declare-fun tree_ap$ae (A_b_fun_a_b_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$af (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ A_b_b_fun_fun_tree$ )A_b_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$ag (A_bool_fun_a_b_fun_fun_tree$ A_bool_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$ah (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ A_bool_b_fun_fun_tree$ )A_bool_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$ai (A_bool_b_fun_fun_tree$ A_tree$ )Bool_b_fun_tree$ )
(declare-fun tree_ap$aj (A_a_fun_a_b_fun_fun_tree$ A_a_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$ak (A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ A_a_b_fun_fun_tree$ )A_a_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$al (A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$am (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$ )A_bool_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$an (A_bool_bool_fun_fun_tree$ A_tree$ )Bool_bool_fun_tree$ )
(declare-fun tree_ap$ao (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$ap (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$ )A_a_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$aq (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ar (A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ A_b_fun_a_fun_tree$ )A_b_fun_bool_fun_tree$ )
(declare-fun tree_ap$as (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ )
(declare-fun tree_ap$at (A_b_fun_a_fun_tree$ A_b_fun_tree$ )A_tree$ )
(declare-fun tree_ap$au (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$av (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$aw (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$ )A_bool_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ax (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ay (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$az (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ba (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$bb (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$bc (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$bd (B_bool_fun_a_b_bool_fun_fun_fun_tree$ B_bool_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_ap$be (B_b_fun_a_b_b_fun_fun_fun_tree$ B_b_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_ap$bf (A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$ )A_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$bg (A_b_fun_a_a_b_fun_fun_fun_tree$ A_b_fun_tree$ )A_a_b_fun_fun_tree$ )
(declare-fun tree_ap$bh (A_a_a_fun_fun_tree$ A_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$bi (Bool_a_bool_fun_fun_tree$ Bool_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$bj (A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$bk (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$bl (B_a_fun_tree$ B_tree$ )A_tree$ )
(declare-fun tree_ap$bm (A_bool_fun_b_fun_tree$ A_bool_fun_tree$ )B_tree$ )
(declare-fun tree_ap$bn (A_bool_fun_a_fun_tree$ A_bool_fun_tree$ )A_tree$ )
(declare-fun tree_ap$bo (A_b_fun_b_fun_tree$ A_b_fun_tree$ )B_tree$ )
(declare-fun tree_chop$ (B_tree$ )B_tree$ )
(declare-fun tree_pure$ (A$ )A_tree$ )
(declare-fun tree_chop$a (A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_chop$b (A_tree$ )A_tree$ )
(declare-fun tree_chop$c (Bool_tree$ )Bool_tree$ )
(declare-fun tree_chop$d (A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_chop$e (A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_chop$f (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_chop$g (B_b_fun_tree$ )B_b_fun_tree$ )
(declare-fun tree_chop$h (B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun tree_chop$i (A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_chop$j (B_bool_fun_tree$ )B_bool_fun_tree$ )
(declare-fun tree_chop$k (A_b_bool_fun_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_chop$l (A_b_b_fun_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_chop$m (B_a_bool_fun_fun_tree$ )B_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$a (A_b_fun$ )A_b_fun_tree$ )
(declare-fun tree_pure$b (B$ )B_tree$ )
(declare-fun tree_pure$c (A_bool_fun$ )A_bool_fun_tree$ )
(declare-fun tree_pure$d (Bool )Bool_tree$ )
(declare-fun tree_pure$e (Bool_bool_fun$ )Bool_bool_fun_tree$ )
(declare-fun tree_pure$f (A_b_fun_a_bool_fun_fun$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$h (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ )
(declare-fun tree_pure$i (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$j (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$k (Bool_b_fun$ )Bool_b_fun_tree$ )
(declare-fun tree_pure$l (Bool_a_fun$ )Bool_a_fun_tree$ )
(declare-fun tree_pure$m (B_b_fun$ )B_b_fun_tree$ )
(declare-fun tree_pure$n (B_a_fun$ )B_a_fun_tree$ )
(declare-fun tree_pure$o (A_a_fun$ )A_a_fun_tree$ )
(declare-fun tree_pure$p (A_bool_fun_b_fun$ )A_bool_fun_b_fun_tree$ )
(declare-fun tree_pure$q (A_bool_fun_a_fun$ )A_bool_fun_a_fun_tree$ )
(declare-fun tree_pure$r (A_b_fun_b_fun$ )A_b_fun_b_fun_tree$ )
(declare-fun tree_pure$s (A_b_bool_fun_fun$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_pure$t (A_b_b_fun_fun$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_pure$u (A_a_bool_fun_fun$ )A_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$v (A_a_b_fun_fun$ )A_a_b_fun_fun_tree$ )
(declare-fun traverse_tree$ (Dir_list$ B_tree$ )B_tree$ )
(declare-fun traverse_tree$a (Dir_list$ A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun traverse_tree$b (Dir_list$ A_tree$ )A_tree$ )
(declare-fun traverse_tree$c (Dir_list$ Bool_tree$ )Bool_tree$ )
(declare-fun traverse_tree$d (Dir_list$ A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun traverse_tree$e (Dir_list$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun traverse_tree$f (Dir_list$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun traverse_tree$g (Dir_list$ B_b_fun_tree$ )B_b_fun_tree$ )
(declare-fun traverse_tree$h (Dir_list$ B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun traverse_tree$i (Dir_list$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun traverse_tree$j (Dir_list$ B_bool_fun_tree$ )B_bool_fun_tree$ )
(declare-fun traverse_tree$k (Dir_list$ A_b_bool_fun_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun traverse_tree$l (Dir_list$ A_b_b_fun_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun traverse_tree$m (Dir_list$ B_a_bool_fun_fun_tree$ )B_a_bool_fun_fun_tree$ )
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$a (fun_app$b uu$ ?v0 )?v1 )?v2 )(= (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (fun_app$b uu$ ?v0 )?v1 )?v2 )))):named a0 ))
(assert (! (not (= (tree_ap$ f$ y$ )(tree_ap$ g$ y$ ))):named a1 ))
(assert (! (= x$ y$ ):named a2 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_b_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$a ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))(= ?v0 ?v1 ))):named a3 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_b_b_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$b ?v0 ?v2 )(tree_ap$b ?v1 ?v2 )))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$c ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_a_b_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$d ?v0 ?v2 )(tree_ap$d ?v1 ?v2 )))(= ?v0 ?v1 ))):named a6 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$e ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))(= ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$ ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))(= ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$f ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_tree$ ))(= (tree_ap$g ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_tree$ ))(= (tree_ap$h ?v0 ?v2 )(tree_ap$h ?v1 ?v2 )))(= ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_b_bool_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$a ?v0 (tree_pure$ ?v2 ))(tree_ap$a ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_b_b_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$b ?v0 (tree_pure$ ?v2 ))(tree_ap$b ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$c ?v0 (tree_pure$ ?v2 ))(tree_ap$c ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_a_b_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$d ?v0 (tree_pure$ ?v2 ))(tree_ap$d ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$e ?v0 (tree_pure$ ?v2 ))(tree_ap$e ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$ ?v0 (tree_pure$ ?v2 ))(tree_ap$ ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$f ?v0 (tree_pure$ ?v2 ))(tree_ap$f ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun$ ))(= (tree_ap$g ?v0 (tree_pure$a ?v2 ))(tree_ap$g ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun$ ))(= (tree_ap$h ?v0 (tree_pure$a ?v2 ))(tree_ap$h ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$d (tree_ap$i tree_C$ ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$d ?v0 ?v2 )?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$c (tree_ap$j tree_C$a ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$c ?v0 ?v2 )?v1 ))):named a22 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$k (tree_ap$l (tree_ap$m tree_C$b ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$g ?v0 ?v2 )?v1 ))):named a23 ))
(assert (! (forall ((?v0 A_a_b_fun_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$g (tree_ap$n tree_C$c ?v0 )?v1 )?v2 )(tree_ap$k (tree_ap$l ?v0 ?v2 )?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$h (tree_ap$o tree_C$d ?v0 )?v1 )?v2 )(tree_ap$g (tree_ap$h ?v0 ?v2 )?v1 ))):named a25 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$h (tree_ap$p (tree_ap$q tree_C$e ?v0 )?v1 )?v2 )(tree_ap$h (tree_ap$p ?v0 ?v2 )?v1 ))):named a26 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun_tree$ )(?v1 A_tree$ )(?v2 B_tree$ ))(= (tree_ap$r (tree_ap$a (tree_ap$s tree_C$f ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$t ?v0 ?v2 )?v1 ))):named a27 ))
(assert (! (forall ((?v0 B_a_b_fun_fun_tree$ )(?v1 A_tree$ )(?v2 B_tree$ ))(= (tree_ap$u (tree_ap$b (tree_ap$v tree_C$g ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$w ?v0 ?v2 )?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 B_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$w (tree_ap$x tree_C$h ?v0 )?v1 )?v2 )(tree_ap$u (tree_ap$b ?v0 ?v2 )?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 B_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$t (tree_ap$y tree_C$i ?v0 )?v1 )?v2 )(tree_ap$r (tree_ap$a ?v0 ?v2 )?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (tree_ap$ (tree_pure$a ?v0 )(tree_pure$ ?v1 ))(tree_pure$b (fun_app$c ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ ))(= (tree_ap$f (tree_pure$c ?v0 )(tree_pure$ ?v1 ))(tree_pure$d (fun_app$ ?v0 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool ))(= (tree_ap$z (tree_pure$e ?v0 )(tree_pure$d ?v1 ))(tree_pure$d (fun_app$d ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$g (tree_pure$f ?v0 )(tree_pure$a ?v1 ))(tree_pure$c (fun_app$a ?v0 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$h (tree_pure$g ?v0 )(tree_pure$a ?v1 ))(tree_pure$f (fun_app$b ?v0 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$aa (tree_pure$h ?v0 )(tree_pure$g ?v1 ))(tree_pure$d (fun_app$e ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 Bool ))(= (tree_ap$ab (tree_pure$i ?v0 )(tree_pure$d ?v1 ))(tree_pure$g (fun_app$f ?v0 ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$o (tree_pure$j ?v0 )(tree_pure$g ?v1 ))(tree_pure$g (fun_app$g ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 Bool ))(= (tree_ap$ac (tree_pure$k ?v0 )(tree_pure$d ?v1 ))(tree_pure$b (fun_app$h ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool ))(= (tree_ap$ad (tree_pure$l ?v0 )(tree_pure$d ?v1 ))(tree_pure$ (fun_app$i ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$ae (tree_ap$af tree_S$ ?v0 )?v1 )?v2 )(tree_ap$u (tree_ap$b ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_bool_b_fun_fun_tree$ )(?v1 A_bool_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$ag (tree_ap$ah tree_S$a ?v0 )?v1 )?v2 )(tree_ap$ac (tree_ap$ai ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$aj (tree_ap$ak tree_S$b ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$d ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$ )(?v1 A_bool_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$al (tree_ap$am tree_S$c ?v0 )?v1 )?v2 )(tree_ap$z (tree_ap$an ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))):named a44 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$ao (tree_ap$ap tree_S$d ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$c ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))):named a45 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$g (tree_ap$aq tree_S$e ?v0 )?v1 )?v2 )(tree_ap$r (tree_ap$a ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a46 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$k (tree_ap$ar (tree_ap$as tree_S$f ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$g ?v0 ?v2 )(tree_ap$at ?v1 ?v2 )))):named a47 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$au (tree_ap$av tree_S$g ?v0 )?v1 )?v2 )(tree_ap$al (tree_ap$aw ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))):named a48 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$ax (tree_ap$ay tree_S$h ?v0 )?v1 )?v2 )(tree_ap$g (tree_ap$h ?v0 ?v2 )(tree_ap$ae ?v1 ?v2 )))):named a49 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$az (tree_ap$ba tree_S$i ?v0 )?v1 )?v2 )(tree_ap$bb (tree_ap$bc ?v0 ?v2 )(tree_ap$h ?v1 ?v2 )))):named a50 ))
(assert (! (forall ((?v0 B_bool_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$a (tree_ap$bd tree_K$ ?v0 )?v1 )?v0 )):named a51 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$b (tree_ap$be tree_K$a ?v0 )?v1 )?v0 )):named a52 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$c (tree_ap$bf tree_K$b ?v0 )?v1 )?v0 )):named a53 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$d (tree_ap$bg tree_K$c ?v0 )?v1 )?v0 )):named a54 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(= (tree_ap$e (tree_ap$bh tree_K$d ?v0 )?v1 )?v0 )):named a55 ))
(assert (! (forall ((?v0 B_tree$ )(?v1 A_tree$ ))(= (tree_ap$ (tree_ap$w tree_K$e ?v0 )?v1 )?v0 )):named a56 ))
(assert (! (forall ((?v0 Bool_tree$ )(?v1 A_tree$ ))(= (tree_ap$f (tree_ap$bi tree_K$f ?v0 )?v1 )?v0 )):named a57 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$bj tree_K$g ?v0 )?v1 )?v0 )):named a58 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$h (tree_ap$bk tree_K$h ?v0 )?v1 )?v0 )):named a59 ))
(assert (! (= (tree_ap$f (tree_ap$g (tree_ap$h (tree_pure$g uu$ )f$ )g$ )y$ )(tree_pure$d true )):named a60 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_a_bool_fun_fun$ ))(= (= (tree_pure$f ?v0 )(tree_pure$f ?v1 ))(= ?v0 ?v1 ))):named a61 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (= (tree_pure$c ?v0 )(tree_pure$c ?v1 ))(= ?v0 ?v1 ))):named a62 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a65 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (= (tree_pure$g ?v0 )(tree_pure$g ?v1 ))(= ?v0 ?v1 ))):named a66 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (tree_pure$d ?v0 )(tree_pure$d ?v1 ))(= ?v0 ?v1 ))):named a67 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$ (tree_pure$a ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$ (fun_app$c ?v0 ?v1 )(tree_ap$ (tree_pure$a ?v0 )?v2 )(tree_ap$ (tree_pure$a ?v0 )?v3 )))):named a68 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$f (tree_pure$c ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$br (fun_app$ ?v0 ?v1 )(tree_ap$f (tree_pure$c ?v0 )?v2 )(tree_ap$f (tree_pure$c ?v0 )?v3 )))):named a69 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_tree$ )(?v3 A_b_fun_tree$ ))(= (tree_ap$g (tree_pure$f ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$h (fun_app$a ?v0 ?v1 )(tree_ap$g (tree_pure$f ?v0 )?v2 )(tree_ap$g (tree_pure$f ?v0 )?v3 )))):named a70 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_tree$ )(?v3 A_b_fun_tree$ ))(= (tree_ap$h (tree_pure$g ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$k (fun_app$b ?v0 ?v1 )(tree_ap$h (tree_pure$g ?v0 )?v2 )(tree_ap$h (tree_pure$g ?v0 )?v3 )))):named a71 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 B_tree$ )(?v3 B_tree$ ))(= (tree_ap$u (tree_pure$m ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$ (fun_app$j ?v0 ?v1 )(tree_ap$u (tree_pure$m ?v0 )?v2 )(tree_ap$u (tree_pure$m ?v0 )?v3 )))):named a72 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ )(?v2 B_tree$ )(?v3 B_tree$ ))(= (tree_ap$bl (tree_pure$n ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$b (fun_app$k ?v0 ?v1 )(tree_ap$bl (tree_pure$n ?v0 )?v2 )(tree_ap$bl (tree_pure$n ?v0 )?v3 )))):named a73 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$e (tree_pure$o ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$b (fun_app$l ?v0 ?v1 )(tree_ap$e (tree_pure$o ?v0 )?v2 )(tree_ap$e (tree_pure$o ?v0 )?v3 )))):named a74 ))
(assert (! (forall ((?v0 A_bool_fun_b_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun_tree$ )(?v3 A_bool_fun_tree$ ))(= (tree_ap$bm (tree_pure$p ?v0 )(node$h ?v1 ?v2 ?v3 ))(node$ (fun_app$m ?v0 ?v1 )(tree_ap$bm (tree_pure$p ?v0 )?v2 )(tree_ap$bm (tree_pure$p ?v0 )?v3 )))):named a75 ))
(assert (! (forall ((?v0 A_bool_fun_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun_tree$ )(?v3 A_bool_fun_tree$ ))(= (tree_ap$bn (tree_pure$q ?v0 )(node$h ?v1 ?v2 ?v3 ))(node$b (fun_app$n ?v0 ?v1 )(tree_ap$bn (tree_pure$q ?v0 )?v2 )(tree_ap$bn (tree_pure$q ?v0 )?v3 )))):named a76 ))
(assert (! (forall ((?v0 A_b_fun_b_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_tree$ )(?v3 A_b_fun_tree$ ))(= (tree_ap$bo (tree_pure$r ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$ (fun_app$o ?v0 ?v1 )(tree_ap$bo (tree_pure$r ?v0 )?v2 )(tree_ap$bo (tree_pure$r ?v0 )?v3 )))):named a77 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$ ?v1 ?v2 ))(tree_ap$ (traverse_tree$a ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a78 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_bool_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$c ?v0 (tree_ap$f ?v1 ?v2 ))(tree_ap$f (traverse_tree$d ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a79 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (traverse_tree$d ?v0 (tree_ap$g ?v1 ?v2 ))(tree_ap$g (traverse_tree$e ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a80 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (traverse_tree$e ?v0 (tree_ap$h ?v1 ?v2 ))(tree_ap$h (traverse_tree$f ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a81 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 B_b_fun_tree$ )(?v2 B_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$u ?v1 ?v2 ))(tree_ap$u (traverse_tree$g ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a82 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 B_a_fun_tree$ )(?v2 B_tree$ ))(= (traverse_tree$b ?v0 (tree_ap$bl ?v1 ?v2 ))(tree_ap$bl (traverse_tree$h ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a83 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$b ?v0 (tree_ap$e ?v1 ?v2 ))(tree_ap$e (traverse_tree$i ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a84 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_bool_fun_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$j ?v0 (tree_ap$a ?v1 ?v2 ))(tree_ap$a (traverse_tree$k ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a85 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_b_fun_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$g ?v0 (tree_ap$b ?v1 ?v2 ))(tree_ap$b (traverse_tree$l ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a86 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 B_a_bool_fun_fun_tree$ )(?v2 B_tree$ ))(= (traverse_tree$d ?v0 (tree_ap$t ?v1 ?v2 ))(tree_ap$t (traverse_tree$m ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a87 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$ (tree_ap$ ?v0 ?v1 ))(tree_ap$ (tree_chop$a ?v0 )(tree_chop$b ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$c (tree_ap$f ?v0 ?v1 ))(tree_ap$f (tree_chop$d ?v0 )(tree_chop$b ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_chop$d (tree_ap$g ?v0 ?v1 ))(tree_ap$g (tree_chop$e ?v0 )(tree_chop$a ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_chop$e (tree_ap$h ?v0 ?v1 ))(tree_ap$h (tree_chop$f ?v0 )(tree_chop$a ?v1 )))):named a91 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B_tree$ ))(= (tree_chop$ (tree_ap$u ?v0 ?v1 ))(tree_ap$u (tree_chop$g ?v0 )(tree_chop$ ?v1 )))):named a92 ))
(assert (! (forall ((?v0 B_a_fun_tree$ )(?v1 B_tree$ ))(= (tree_chop$b (tree_ap$bl ?v0 ?v1 ))(tree_ap$bl (tree_chop$h ?v0 )(tree_chop$ ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$b (tree_ap$e ?v0 ?v1 ))(tree_ap$e (tree_chop$i ?v0 )(tree_chop$b ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$j (tree_ap$a ?v0 ?v1 ))(tree_ap$a (tree_chop$k ?v0 )(tree_chop$b ?v1 )))):named a95 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$g (tree_ap$b ?v0 ?v1 ))(tree_ap$b (tree_chop$l ?v0 )(tree_chop$b ?v1 )))):named a96 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun_tree$ )(?v1 B_tree$ ))(= (tree_chop$d (tree_ap$t ?v0 ?v1 ))(tree_ap$t (tree_chop$m ?v0 )(tree_chop$ ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$a (tree_pure$s ?v0 )?v1 )(map_tree$ ?v0 ?v1 ))):named a98 ))
(assert (! (forall ((?v0 A_b_b_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$b (tree_pure$t ?v0 )?v1 )(map_tree$a ?v0 ?v1 ))):named a99 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$c (tree_pure$u ?v0 )?v1 )(map_tree$b ?v0 ?v1 ))):named a100 ))
(assert (! (forall ((?v0 A_a_b_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$d (tree_pure$v ?v0 )?v1 )(map_tree$c ?v0 ?v1 ))):named a101 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_tree$ ))(= (tree_ap$e (tree_pure$o ?v0 )?v1 )(map_tree$d ?v0 ?v1 ))):named a102 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(= (tree_ap$o (tree_pure$j ?v0 )?v1 )(map_tree$e ?v0 ?v1 ))):named a103 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_tree$ ))(= (tree_ap$ (tree_pure$a ?v0 )?v1 )(map_tree$f ?v0 ?v1 ))):named a104 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_tree$ ))(= (tree_ap$f (tree_pure$c ?v0 )?v1 )(map_tree$g ?v0 ?v1 ))):named a105 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$g (tree_pure$f ?v0 )?v1 )(map_tree$h ?v0 ?v1 ))):named a106 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$h (tree_pure$g ?v0 )?v1 )(map_tree$i ?v0 ?v1 ))):named a107 ))
(assert (! (forall ((?v0 A_tree$ ))(= (tree_ap$e (tree_pure$o id$ )?v0 )?v0 )):named a108 ))
(assert (! (forall ((?v0 B$ )(?v1 B_tree$ )(?v2 B_tree$ )(?v3 B$ )(?v4 B_tree$ )(?v5 B_tree$ ))(= (= (node$ ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a109 ))
(assert (! (forall ((?v0 A$ )(?v1 A_tree$ )(?v2 A_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(= (= (node$b ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a110 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (map_tree$e ?v0 (tree_pure$g ?v1 ))(tree_pure$g (fun_app$g ?v0 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (map_tree$j ?v0 (tree_pure$g ?v1 ))(tree_pure$d (fun_app$e ?v0 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 Bool ))(= (map_tree$k ?v0 (tree_pure$d ?v1 ))(tree_pure$g (fun_app$f ?v0 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool ))(= (map_tree$l ?v0 (tree_pure$d ?v1 ))(tree_pure$d (fun_app$d ?v0 ?v1 )))):named a114 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_tree$ )(?v2 A_b_fun_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(! (= (tree_ap$ (node$a ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))(node$ (fun_app$c ?v0 ?v3 )(tree_ap$ ?v1 ?v4 )(tree_ap$ ?v2 ?v5 ))):pattern ((tree_ap$ (node$a ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))))):named a115 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun_tree$ )(?v2 A_bool_fun_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(! (= (tree_ap$f (node$h ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))(node$br (fun_app$ ?v0 ?v3 )(tree_ap$f ?v1 ?v4 )(tree_ap$f ?v2 ?v5 ))):pattern ((tree_ap$f (node$h ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))))):named a116 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ )(?v2 A_b_fun_a_bool_fun_fun_tree$ )(?v3 A_b_fun$ )(?v4 A_b_fun_tree$ )(?v5 A_b_fun_tree$ ))(! (= (tree_ap$g (node$k ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))(node$h (fun_app$a ?v0 ?v3 )(tree_ap$g ?v1 ?v4 )(tree_ap$g ?v2 ?v5 ))):pattern ((tree_ap$g (node$k ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))))):named a117 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v2 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v3 A_b_fun$ )(?v4 A_b_fun_tree$ )(?v5 A_b_fun_tree$ ))(! (= (tree_ap$h (node$l ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))(node$k (fun_app$b ?v0 ?v3 )(tree_ap$h ?v1 ?v4 )(tree_ap$h ?v2 ?v5 ))):pattern ((tree_ap$h (node$l ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))))):named a118 ))
(check-sat )
;(get-unsat-core )
