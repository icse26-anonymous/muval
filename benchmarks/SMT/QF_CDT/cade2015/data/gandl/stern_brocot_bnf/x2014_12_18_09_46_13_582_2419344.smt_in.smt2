;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-datatypes ()((Nat_nat_prod$ (pair$ (fst$ Nat$ )(snd$ Nat$ )))(Nat_nat_prod_nat_nat_prod_prod$ (pair$a (fst$a Nat_nat_prod$ )(snd$a Nat_nat_prod$ )))))
(declare-fun m$ ()Nat_nat_prod_nat_nat_prod_prod$ )
(declare-fun imat$ ()Nat_nat_prod_nat_nat_prod_prod$ )
(declare-fun less$ (Nat$ )Nat_bool_fun$ )
(declare-fun zero$ ()Nat$ )
(declare-fun lLmat$ ()Nat_nat_prod_nat_nat_prod_prod$ )
(declare-fun mulmat$ (Nat_nat_prod_nat_nat_prod_prod$ Nat_nat_prod_nat_nat_prod_prod$ )Nat_nat_prod_nat_nat_prod_prod$ )
(declare-fun fun_app$ (Nat_bool_fun$ Nat$ )Bool )
(declare-fun mediant$ (Nat_nat_prod_nat_nat_prod_prod$ )Nat_nat_prod$ )
(assert (! (not (fun_app$ (less$ zero$ )(snd$ (mediant$ (mulmat$ m$ lLmat$ ))))):named a0 ))
(assert (! (fun_app$ (less$ zero$ )(snd$ (mediant$ m$ ))):named a1 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_prod$ )(?v1 Nat_nat_prod_nat_nat_prod_prod$ )(?v2 Nat_nat_prod_nat_nat_prod_prod$ ))(= (mulmat$ (mulmat$ ?v0 ?v1 )?v2 )(mulmat$ ?v0 (mulmat$ ?v1 ?v2 )))):named a2 ))
(assert (! (forall ((?v0 Nat$ ))(= (not (= ?v0 zero$ ))(fun_app$ (less$ zero$ )?v0 ))):named a3 ))
(assert (! (forall ((?v0 Nat$ ))(= (not (fun_app$ (less$ zero$ )?v0 ))(= ?v0 zero$ ))):named a4 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$ (less$ ?v0 )zero$ )false ):pattern ((less$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 Nat$ ))(=> (=> (= ?v0 zero$ )false )(fun_app$ (less$ zero$ )?v0 ))):named a6 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (fun_app$ (less$ ?v0 )?v1 )(not (= ?v1 zero$ )))):named a7 ))
(assert (! (forall ((?v0 Nat$ ))(=> (fun_app$ (less$ ?v0 )zero$ )false )):named a8 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat$ ))(=> (and (fun_app$ ?v0 zero$ )(forall ((?v2 Nat$ ))(=> (and (fun_app$ (less$ zero$ )?v2 )(not (fun_app$ ?v0 ?v2 )))(exists ((?v3 Nat$ ))(and (fun_app$ (less$ ?v3 )?v2 )(not (fun_app$ ?v0 ?v3 )))))))(fun_app$ ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 Nat$ ))(not (fun_app$ (less$ ?v0 )zero$ ))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_prod$ ))(= (mulmat$ ?v0 imat$ )?v0 )):named a11 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_prod$ ))(= (mulmat$ imat$ ?v0 )?v0 )):named a12 ))
(assert (! (forall ((?v0 Nat$ ))(= (= zero$ ?v0 )(= ?v0 zero$ ))):named a13 ))
(assert (! (forall ((?v0 Nat$ ))(=> (and (=> (= ?v0 zero$ )false )(=> (not (= ?v0 zero$ ))false ))false )):named a14 ))
(assert (! (forall ((?v0 Nat$ ))(not (fun_app$ (less$ ?v0 )?v0 ))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (and (not (= ?v0 ?v1 ))(and (=> (fun_app$ (less$ ?v0 )?v1 )false )(=> (fun_app$ (less$ ?v1 )?v0 )false )))false )):named a16 ))
(check-sat )
;(get-unsat-core )
