;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun i$ ()Nat$ )
(declare-fun t$ ()A_llist$ )
(declare-fun top$ ()A_set$ )
(declare-fun less$ (A_llist$ )A_llist_bool_fun$ )
(declare-fun top$a ()A_llist_llist_set$ )
(declare-fun top$b ()A_llist_set$ )
(declare-fun top$c ()A_llist_llist_llist_set$ )
(declare-fun top$d ()A_llist_bool_fun$ )
(declare-fun top$e ()Bool )
(declare-fun top$f ()A_bool_fun$ )
(declare-fun top$g ()A_llist_llist_bool_fun$ )
(declare-fun ldrop$ (A_llist_llist_llist$ Nat$ )A_llist_llist_llist$ )
(declare-fun less$a (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun less$b (Bool Bool )Bool )
(declare-fun less$c (A_llist_bool_fun$ A_llist_bool_fun$ )Bool )
(declare-fun less$d (A_llist_set$ A_llist_set$ )Bool )
(declare-fun less$e (A_bool_fun$ A_bool_fun$ )Bool )
(declare-fun less$f (A_set$ A_set$ )Bool )
(declare-fun ltake$ (A_llist$ Nat$ )A_llist$ )
(declare-fun lconst$ (A_llist_llist_llist$ )A_llist_llist_llist_llist$ )
(declare-fun ldrop$a (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun ldrop$b (A_llist$ Nat$ )A_llist$ )
(declare-fun ltake$a (A_llist_llist_llist$ Nat$ )A_llist_llist_llist$ )
(declare-fun ltake$b (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun collect$ (A_llist_llist_bool_fun$ )A_llist_llist_set$ )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun inflsts$ (A_set$ )A_llist_set$ )
(declare-fun lconst$a (A_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lconst$b (A_llist$ )A_llist_llist$ )
(declare-fun lconst$c (A$ )A_llist$ )
(declare-fun llength$ (A_llist_llist_llist$ )Nat$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun member$d (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun collect$a (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun collect$b (A_bool_fun$ )A_set$ )
(declare-fun fun_app$a (A_bool_fun$ A$ )Bool )
(declare-fun inflsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun inflsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun llength$a (A_llist_llist$ )Nat$ )
(declare-fun llength$b (A_llist$ )Nat$ )
(assert (! (not (fun_app$ (less$ (ltake$ t$ i$ ))t$ )):named a0 ))
(assert (! (member$ t$ (inflsts$ top$ )):named a1 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (inflsts$a ?v1 ))(member$a ?v0 (inflsts$a top$a )))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (inflsts$b ?v1 ))(member$b ?v0 (inflsts$b top$b )))):named a3 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(member$ ?v0 (inflsts$ top$ )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(= (member$a ?v0 top$c )true )):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (member$b ?v0 top$a )true )):named a6 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$ ?v0 top$b )true )):named a7 ))
(assert (! (forall ((?v0 A$ ))(= (member$c ?v0 top$ )true )):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$a ?v0 top$c )):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 top$a )):named a10 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 top$b )):named a11 ))
(assert (! (forall ((?v0 A$ ))(member$c ?v0 top$ )):named a12 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$ top$d ?v0 )top$e ):pattern ((fun_app$ top$d ?v0 )))):named a13 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$a top$f ?v0 )top$e ):pattern ((fun_app$a top$f ?v0 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (not (= ?v0 top$a ))(less$a ?v0 top$a ))):named a15 ))
(assert (! (forall ((?v0 Bool ))(= (not (= ?v0 top$e ))(less$b ?v0 top$e ))):named a16 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (not (= ?v0 top$d ))(less$c ?v0 top$d ))):named a17 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (not (= ?v0 top$b ))(less$d ?v0 top$b ))):named a18 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (not (= ?v0 top$f ))(less$e ?v0 top$f ))):named a19 ))
(assert (! (forall ((?v0 A_set$ ))(= (not (= ?v0 top$ ))(less$f ?v0 top$ ))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(not (less$a top$a ?v0 ))):named a21 ))
(assert (! (forall ((?v0 Bool ))(not (less$b top$e ?v0 ))):named a22 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(not (less$c top$d ?v0 ))):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ ))(not (less$d top$b ?v0 ))):named a24 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(not (less$e top$f ?v0 ))):named a25 ))
(assert (! (forall ((?v0 A_set$ ))(not (less$f top$ ?v0 ))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 Nat$ ))(=> (member$a ?v0 (inflsts$a ?v1 ))(= (llength$ (ltake$a ?v0 ?v2 ))?v2 ))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 Nat$ ))(=> (member$b ?v0 (inflsts$b ?v1 ))(= (llength$a (ltake$b ?v0 ?v2 ))?v2 ))):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 Nat$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(= (llength$b (ltake$ ?v0 ?v2 ))?v2 ))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 Nat$ ))(= (member$a (ldrop$ ?v0 ?v1 )(inflsts$a top$a ))(member$a ?v0 (inflsts$a top$a )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 Nat$ ))(= (member$b (ldrop$a ?v0 ?v1 )(inflsts$b top$b ))(member$b ?v0 (inflsts$b top$b )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat$ ))(= (member$ (ldrop$b ?v0 ?v1 )(inflsts$ top$ ))(member$ ?v0 (inflsts$ top$ )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (member$a ?v0 ?v1 )(member$d (lconst$ ?v0 )(inflsts$c ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$b ?v0 ?v1 )(member$a (lconst$a ?v0 )(inflsts$a ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ ))(=> (member$ ?v0 ?v1 )(member$b (lconst$b ?v0 )(inflsts$b ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ ))(=> (member$c ?v0 ?v1 )(member$ (lconst$c ?v0 )(inflsts$ ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist_llist$ ))(member$a ?v1 ?v0 ))(= top$c ?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist$ ))(member$b ?v1 ?v0 ))(= top$a ?v0 ))):named a38 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(member$ ?v1 ?v0 ))(= top$b ?v0 ))):named a39 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(member$c ?v1 ?v0 ))(= top$ ?v0 ))):named a40 ))
(assert (! (exists ((?v0 A_llist_llist_llist$ ))(member$a ?v0 top$c )):named a41 ))
(assert (! (exists ((?v0 A_llist_llist$ ))(member$b ?v0 top$a )):named a42 ))
(assert (! (exists ((?v0 A_llist$ ))(member$ ?v0 top$b )):named a43 ))
(assert (! (exists ((?v0 A$ ))(member$c ?v0 top$ )):named a44 ))
(assert (! (= top$a (collect$ top$g )):named a45 ))
(assert (! (= top$b (collect$a top$d )):named a46 ))
(assert (! (= top$ (collect$b top$f )):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 Nat$ ))(=> (member$a ?v0 (inflsts$a ?v1 ))(member$a (ldrop$ ?v0 ?v2 )(inflsts$a ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 Nat$ ))(=> (member$b ?v0 (inflsts$b ?v1 ))(member$b (ldrop$a ?v0 ?v2 )(inflsts$b ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 Nat$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(member$ (ldrop$b ?v0 ?v2 )(inflsts$ ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(not (less$e ?v0 ?v0 ))):named a51 ))
(assert (! (forall ((?v0 A_llist_set$ ))(not (less$d ?v0 ?v0 ))):named a52 ))
(assert (! (forall ((?v0 A_set$ ))(not (less$f ?v0 ?v0 ))):named a53 ))
(assert (! (forall ((?v0 A_llist$ ))(not (fun_app$ (less$ ?v0 )?v0 ))):named a54 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(not (less$e ?v0 ?v0 ))):named a55 ))
(assert (! (forall ((?v0 A_llist_set$ ))(not (less$d ?v0 ?v0 ))):named a56 ))
(assert (! (forall ((?v0 A_set$ ))(not (less$f ?v0 ?v0 ))):named a57 ))
(assert (! (forall ((?v0 A_llist$ ))(not (fun_app$ (less$ ?v0 )?v0 ))):named a58 ))
(check-sat )
;(get-unsat-core )
