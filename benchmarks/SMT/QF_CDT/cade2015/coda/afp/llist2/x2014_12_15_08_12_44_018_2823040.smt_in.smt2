;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun l$ ()A_llist$ )
(declare-fun r$ ()A_llist$ )
(declare-fun s$ ()A_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun less_eq$ (A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$a (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(assert (! (not (forall ((?v0 A_llist$ ))(=> (fun_app$ (less_eq$ ?v0 )l$ )(member$ ?v0 (finlsts$ a$ ))))):named a0 ))
(assert (! (= l$ lNil$ ):named a1 ))
(assert (! (fun_app$ (less_eq$ r$ )s$ ):named a2 ))
(assert (! (member$ s$ (finlsts$ a$ )):named a3 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$ (less_eq$ ?v0 )?v0 )):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$ (less_eq$ ?v0 )?v1 )(fun_app$ (less_eq$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (less_eq$ ?v0 )?v1 )(fun_app$ (less_eq$ ?v1 )?v2 ))(fun_app$ (less_eq$ ?v0 )?v2 ))):named a6 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$ (less_eq$ ?v0 )lNil$ )(= ?v0 lNil$ )):pattern ((less_eq$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$ (less_eq$ lNil$ )?v0 )):named a8 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$ (less_eq$ ?v0 )?v0 )):named a9 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (finlsts$ ?v0 ))):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= ?v0 ?v1 )(and (fun_app$ (less_eq$ ?v0 )?v1 )(fun_app$ (less_eq$ ?v1 )?v0 )))):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (fun_app$a ?v1 ?v2 ))(and (fun_app$ (less_eq$ ?v2 )?v3 )(forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (fun_app$ (less_eq$ ?v4 )?v5 )(fun_app$ (less_eq$ (fun_app$a ?v1 ?v4 ))(fun_app$a ?v1 ?v5 ))))))(fun_app$ (less_eq$ ?v0 )(fun_app$a ?v1 ?v3 )))):named a12 ))
(check-sat )
;(get-unsat-core )
