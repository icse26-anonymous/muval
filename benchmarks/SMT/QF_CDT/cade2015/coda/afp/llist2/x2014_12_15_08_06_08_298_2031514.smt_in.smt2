;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun b$ ()A_set$ )
(declare-fun member$ (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun alllsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun collect$ (A_llist_llist_llist_bool_fun$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fpslsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun less_eq$ (A_llist_set$ A_llist_set$ )Bool )
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist$ A_llist_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun poslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun alllsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$c (A_set$ )A_llist_set$ )
(declare-fun collect$a (A_llist_llist_bool_fun$ )A_llist_llist_set$ )
(declare-fun collect$b (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun collect$c (A_bool_fun$ )A_set$ )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_set$ )A_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$c (A_bool_fun$ A$ )Bool )
(declare-fun less_eq$a (A_set$ A_set$ )Bool )
(declare-fun less_eq$b (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$c (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun less_eq$d (A_llist_llist_llist_llist_set$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun poslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun poslsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun poslsts$c (A_set$ )A_llist_set$ )
(assert (! (not (less_eq$ (fpslsts$ a$ )(fpslsts$ b$ ))):named a0 ))
(assert (! (less_eq$a a$ b$ ):named a1 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$b ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$c ?v0 ?v1 ))):named a3 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (forall ((?v2 A_llist$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 )))(less_eq$a ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 ))(= ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$b ?v0 ?v0 )):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$c ?v0 ?v0 )):named a11 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 ?v0 )):named a12 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$d (poslsts$ ?v0 )(poslsts$ ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$b (poslsts$a ?v0 )(poslsts$a ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$c (poslsts$b ?v0 )(poslsts$b ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (poslsts$c ?v0 )(poslsts$c ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$d (alllsts$ ?v0 )(alllsts$ ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$b (alllsts$a ?v0 )(alllsts$a ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$c (alllsts$b ?v0 )(alllsts$b ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (alllsts$c ?v0 )(alllsts$c ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$d (finlsts$ ?v0 )(finlsts$ ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$b (finlsts$a ?v0 )(finlsts$a ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$c (finlsts$b ?v0 )(finlsts$b ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (finlsts$c ?v0 )(finlsts$c ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(= (= ?v0 ?v1 )(and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(= (= ?v0 ?v1 )(and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (= ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (= ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(= (less_eq$b ?v0 ?v1 )(forall ((?v2 A_llist_llist_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(= (less_eq$c ?v0 ?v1 )(forall ((?v2 A_llist_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 ))))):named a31 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 A_llist$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 ))))):named a32 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (less_eq$a ?v0 ?v1 )(forall ((?v2 A$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 ))))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(= (less_eq$b ?v0 ?v1 )(forall ((?v2 A_llist_llist_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(= (less_eq$c ?v0 ?v1 )(forall ((?v2 A_llist_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 ))))):named a35 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 A_llist$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 ))))):named a36 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (less_eq$a ?v0 ?v1 )(forall ((?v2 A$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 ))))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist_bool_fun$ ))(=> (forall ((?v2 A_llist_llist_llist$ ))(=> (fun_app$ ?v0 ?v2 )(fun_app$ ?v1 ?v2 )))(less_eq$b (collect$ ?v0 )(collect$ ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_bool_fun$ ))(=> (forall ((?v2 A_llist_llist$ ))(=> (fun_app$a ?v0 ?v2 )(fun_app$a ?v1 ?v2 )))(less_eq$c (collect$a ?v0 )(collect$a ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_bool_fun$ ))(=> (forall ((?v2 A_llist$ ))(=> (fun_app$b ?v0 ?v2 )(fun_app$b ?v1 ?v2 )))(less_eq$ (collect$b ?v0 )(collect$b ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(=> (forall ((?v2 A$ ))(=> (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 )))(less_eq$a (collect$c ?v0 )(collect$c ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (= ?v0 ?v1 )(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))false ))false )):named a42 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (and (= ?v0 ?v1 )(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 ))false ))false )):named a43 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (and (= ?v0 ?v1 )(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))false ))false )):named a44 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (= ?v0 ?v1 )(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))false ))false )):named a45 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (= ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))):named a46 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (= ?v0 ?v1 )(less_eq$c ?v1 ?v0 ))):named a47 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (= ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))):named a48 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (= ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))):named a49 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_set$ ))(=> (and (member$ ?v0 (finlsts$a ?v1 ))(member$ ?v0 (alllsts$a ?v2 )))(member$ ?v0 (finlsts$a ?v2 )))):named a50 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$b ?v0 (finlsts$c ?v1 ))(member$b ?v0 (alllsts$c ?v2 )))(member$b ?v0 (finlsts$c ?v2 )))):named a51 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$a ?v0 (finlsts$b ?v1 ))(member$a ?v0 (alllsts$b ?v2 )))(member$a ?v0 (finlsts$b ?v2 )))):named a52 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$ ?v0 (finlsts$a ?v1 ))(member$ ?v0 (alllsts$a ?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$b ?v0 (finlsts$c ?v1 ))(member$b ?v0 (alllsts$c ?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$a ?v0 (finlsts$b ?v1 ))(member$a ?v0 (alllsts$b ?v1 )))):named a55 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$b ?v0 ?v0 )):named a56 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$c ?v0 ?v0 )):named a57 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 ?v0 )):named a58 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a59 ))
(check-sat )
;(get-unsat-core )
