;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun s$ ()A_llist$ )
(declare-fun t$ ()A_llist$ )
(declare-fun suff$ (A_llist_llist_set$ A_llist_llist_llist$ )A_llist_llist_llist_set$ )
(declare-fun suff$a (A_llist_set$ A_llist_llist$ )A_llist_llist_set$ )
(declare-fun suff$b (A_set$ A_llist$ )A_llist_set$ )
(declare-fun member$ (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun finpref$ (A_llist_llist_set$ A_llist_llist_llist$ )A_llist_llist_llist_set$ )
(declare-fun fpslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun infsuff$ (A_set$ A_llist$ )A_llist_set$ )
(declare-fun less_eq$ (A_llist_set$ A_llist_set$ )Bool )
(declare-fun member$a (A_llist$ A_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun poslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finpref$a (A_llist_set$ A_llist_llist$ )A_llist_llist_set$ )
(declare-fun finpref$b (A_set$ A_llist$ )A_llist_set$ )
(declare-fun fpslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fpslsts$b (A_set$ )A_llist_set$ )
(declare-fun fpslsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun less_eq$a (A_llist$ A_llist$ )Bool )
(declare-fun less_eq$b (A_llist_llist$ A_llist_llist$ )Bool )
(declare-fun less_eq$c (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$d (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun less_eq$e (A_set$ A_set$ )Bool )
(declare-fun less_eq$f (A_llist_llist_llist_llist_set$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$g (A_llist_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun poslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun poslsts$b (A_set$ )A_llist_set$ )
(declare-fun poslsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun prefix_closed$ (A_llist_llist_set$ )Bool )
(declare-fun suffix_closed$ (A_llist_llist_set$ )Bool )
(declare-fun prefix_closed$a (A_llist_set$ )Bool )
(declare-fun suffix_closed$a (A_llist_set$ )Bool )
(assert (! (not (less_eq$ (infsuff$ a$ t$ )(infsuff$ a$ s$ ))):named a0 ))
(assert (! (less_eq$a s$ t$ ):named a1 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(less_eq$b ?v0 ?v0 )):named a2 ))
(assert (! (forall ((?v0 A_llist$ ))(less_eq$a ?v0 ?v0 )):named a3 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v2 ))(less_eq$b ?v0 ?v2 ))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (prefix_closed$ ?v0 )(forall ((?v1 A_llist_llist$ ))(=> (member$ ?v1 ?v0 )(forall ((?v2 A_llist_llist$ ))(=> (less_eq$b ?v2 ?v1 )(member$ ?v2 ?v0 ))))))):named a8 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (prefix_closed$a ?v0 )(forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(forall ((?v2 A_llist$ ))(=> (less_eq$a ?v2 ?v1 )(member$a ?v2 ?v0 ))))))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (suffix_closed$ ?v0 )(forall ((?v1 A_llist_llist$ ))(=> (member$ ?v1 ?v0 )(forall ((?v2 A_llist_llist$ ))(=> (less_eq$b ?v1 ?v2 )(member$ ?v2 ?v0 ))))))):named a10 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (suffix_closed$a ?v0 )(forall ((?v1 A_llist$ ))(=> (member$a ?v1 ?v0 )(forall ((?v2 A_llist$ ))(=> (less_eq$a ?v1 ?v2 )(member$a ?v2 ?v0 ))))))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist_llist$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 )))(less_eq$c ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$d ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 )))(less_eq$e ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (forall ((?v2 A_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 ))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (and (less_eq$d ?v0 ?v1 )(less_eq$d ?v1 ?v0 ))(= ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v0 ))(= ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$c ?v0 ?v0 )):named a20 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(less_eq$b ?v0 ?v0 )):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$d ?v0 ?v0 )):named a22 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$e ?v0 ?v0 )):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 ?v0 )):named a24 ))
(assert (! (forall ((?v0 A_llist$ ))(less_eq$a ?v0 ?v0 )):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$f (poslsts$ ?v0 )(poslsts$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$c (poslsts$a ?v0 )(poslsts$a ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$e ?v0 ?v1 )(less_eq$ (poslsts$b ?v0 )(poslsts$b ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$d (poslsts$c ?v0 )(poslsts$c ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (less_eq$g ?v0 ?v1 )(less_eq$c (finpref$ ?v2 ?v0 )(finpref$ ?v2 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$d (finpref$a ?v2 ?v0 )(finpref$a ?v2 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (finpref$b ?v2 ?v0 )(finpref$b ?v2 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (less_eq$g ?v0 ?v1 )(less_eq$c (suff$ ?v2 ?v1 )(suff$ ?v2 ?v0 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (less_eq$b ?v0 ?v1 )(less_eq$d (suff$a ?v2 ?v1 )(suff$a ?v2 ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$ (suff$b ?v2 ?v1 )(suff$b ?v2 ?v0 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$f (fpslsts$ ?v0 )(fpslsts$ ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$c (fpslsts$a ?v0 )(fpslsts$a ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$e ?v0 ?v1 )(less_eq$ (fpslsts$b ?v0 )(fpslsts$b ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$d (fpslsts$c ?v0 )(fpslsts$c ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(= (= ?v0 ?v1 )(and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 )))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(= (= ?v0 ?v1 )(and (less_eq$d ?v0 ?v1 )(less_eq$d ?v1 ?v0 )))):named a41 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (= ?v0 ?v1 )(and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v0 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (= ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 )))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(= (less_eq$c ?v0 ?v1 )(forall ((?v2 A_llist_llist_llist$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 ))))):named a44 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(= (less_eq$d ?v0 ?v1 )(forall ((?v2 A_llist_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a45 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (less_eq$e ?v0 ?v1 )(forall ((?v2 A$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 ))))):named a46 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 A_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 ))))):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(= (less_eq$c ?v0 ?v1 )(forall ((?v2 A_llist_llist_llist$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 ))))):named a48 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(= (less_eq$d ?v0 ?v1 )(forall ((?v2 A_llist_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a49 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (less_eq$e ?v0 ?v1 )(forall ((?v2 A$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 ))))):named a50 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 A_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 ))))):named a51 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$c ?v0 ?v0 )):named a52 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(less_eq$b ?v0 ?v0 )):named a53 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$d ?v0 ?v0 )):named a54 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$e ?v0 ?v0 )):named a55 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 ?v0 )):named a56 ))
(assert (! (forall ((?v0 A_llist$ ))(less_eq$a ?v0 ?v0 )):named a57 ))
(check-sat )
;(get-unsat-core )
