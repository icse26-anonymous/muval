;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))))
(declare-fun a$ ()A_llist$ )
(declare-fun b$ ()A_llist$ )
(declare-fun x$ ()A_llist$ )
(declare-fun y$ ()A_llist$ )
(declare-fun a$a ()A_set$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finpref$ (A_set$ A_llist$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun inflsts$ (A_set$ )A_llist_set$ )
(declare-fun less_eq$ (A_llist_set$ A_llist_set$ )Bool )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun poslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$b (A_bool_fun$ A$ )Bool )
(declare-fun inflsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun inflsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun less_eq$a (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$b (A_llist_llist_llist_llist_set$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun less_eq$c (A_llist_llist_set$ A_llist_llist_set$ )Bool )
(declare-fun less_eq$d (A_set$ A_set$ )Bool )
(declare-fun poslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun poslsts$b (A_set$ )A_llist_set$ )
(declare-fun poslsts$c (A_llist_set$ )A_llist_llist_set$ )
(assert (! (not (and (= (lnull$ a$ )(lnull$ b$ ))(=> (and (not (lnull$ a$ ))(not (lnull$ b$ )))(and (= (lhd$ a$ )(lhd$ b$ ))(or (and (member$ (ltl$ a$ )(inflsts$ a$a ))(and (member$ (ltl$ b$ )(inflsts$ a$a ))(less_eq$ (finpref$ a$a (ltl$ a$ ))(finpref$ a$a (ltl$ b$ )))))(= (ltl$ a$ )(ltl$ b$ ))))))):named a0 ))
(assert (! (member$ a$ (inflsts$ a$a )):named a1 ))
(assert (! (member$ x$ (inflsts$ a$a )):named a2 ))
(assert (! (member$ y$ (inflsts$ a$a )):named a3 ))
(assert (! (member$ b$ (inflsts$ a$a )):named a4 ))
(assert (! (and (member$ a$ (inflsts$ a$a ))(and (member$ b$ (inflsts$ a$a ))(less_eq$ (finpref$ a$a a$ )(finpref$ a$a b$ )))):named a5 ))
(assert (! (less_eq$ (finpref$ a$a a$ )(finpref$ a$a b$ )):named a6 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$b (inflsts$a ?v0 )(inflsts$a ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$a (inflsts$b ?v0 )(inflsts$b ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$c (inflsts$c ?v0 )(inflsts$c ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$ (inflsts$ ?v0 )(inflsts$ ?v1 )))):named a10 ))
(assert (! (and (member$ x$ (inflsts$ a$a ))(and (member$ y$ (inflsts$ a$a ))(less_eq$ (finpref$ a$a x$ )(finpref$ a$a y$ )))):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (= (lnull$ ?v0 )(lnull$ ?v1 ))(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))(and (= (lhd$ ?v0 )(lhd$ ?v1 ))(= (ltl$ ?v0 )(ltl$ ?v1 )))))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ )(?v4 A_llist$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (lnull$ ?v3 )(lnull$ ?v4 ))(=> (and (not (lnull$ ?v3 ))(not (lnull$ ?v4 )))(and (= (lhd$ ?v3 )(lhd$ ?v4 ))(or (fun_app$ (fun_app$a ?v0 (ltl$ ?v3 ))(ltl$ ?v4 ))(= (ltl$ ?v3 )(ltl$ ?v4 )))))))))(= ?v1 ?v2 ))):named a13 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ )(?v4 A_llist$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (lnull$ ?v3 )(lnull$ ?v4 ))(=> (and (not (lnull$ ?v3 ))(not (lnull$ ?v4 )))(and (= (lhd$ ?v3 )(lhd$ ?v4 ))(fun_app$ (fun_app$a ?v0 (ltl$ ?v3 ))(ltl$ ?v4 ))))))))(= ?v1 ?v2 ))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist_llist$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$a ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 )))(less_eq$d ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (forall ((?v2 A_llist_llist$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 )))(less_eq$c ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (forall ((?v2 A_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$d ?v0 ?v1 )(less_eq$d ?v1 ?v0 ))(= ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (and (less_eq$c ?v0 ?v1 )(less_eq$c ?v1 ?v0 ))(= ?v0 ?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(less_eq$a ?v0 ?v0 )):named a23 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$d ?v0 ?v0 )):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(less_eq$c ?v0 ?v0 )):named a25 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$ ?v0 ?v0 )):named a26 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (and (=> (or (lnull$ ?v0 )(not (fun_app$b ?v1 (lhd$ ?v0 ))))false )(=> (and (not (lnull$ ?v0 ))(fun_app$b ?v1 (lhd$ ?v0 )))false ))false )):named a27 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (lnull$ ?v0 )(lnull$ (ltl$ ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$b (poslsts$ ?v0 )(poslsts$ ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_set$ ))(=> (less_eq$c ?v0 ?v1 )(less_eq$a (poslsts$a ?v0 )(poslsts$a ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (less_eq$d ?v0 ?v1 )(less_eq$ (poslsts$b ?v0 )(poslsts$b ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (less_eq$ ?v0 ?v1 )(less_eq$c (poslsts$c ?v0 )(poslsts$c ?v1 )))):named a32 ))
(check-sat )
;(get-unsat-core )
