;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()Bool )
(declare-fun s$ ()A_llist$ )
(declare-fun top$ ()A_set$ )
(declare-fun top$a ()A_llist_llist_set$ )
(declare-fun top$b ()A_llist_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun thesis$ ()Bool )
(declare-fun alllsts$ (A_set$ )A_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fpslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun inflsts$ (A_set$ )A_llist_set$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun alllsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllstsp$ (A_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun finlsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlstsp$ (A_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fpslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fpslsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$c (A_set$ )A_llist_set$ )
(declare-fun fun_app$a (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$b (A_bool_fun$ A$ )Bool )
(declare-fun inflsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllstsp$a (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun alllstsp$b (A_bool_fun$ )A_llist_bool_fun$ )
(declare-fun finlstsp$a (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun finlstsp$b (A_bool_fun$ )A_llist_bool_fun$ )
(assert (! (not thesis$ ):named a0 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A$ ))(=> (and (member$ ?v0 (inflsts$ a$ ))(and (member$a ?v1 a$ )(= s$ (lCons$ ?v1 ?v0 ))))thesis$ )):named a1 ))
(assert (! (not (member$ s$ (finlsts$ top$ ))):named a2 ))
(assert (! (member$ s$ (alllsts$ a$ )):named a3 ))
(assert (! (member$ s$ (inflsts$ a$ )):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A$ ))(=> (and (member$ ?v0 (inflsts$ a$ ))(and (member$a ?v1 a$ )(= s$ (lCons$ ?v1 ?v0 ))))r$ )):named a5 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$b (lCons$c ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$c ?v0 ?v2 )(member$b ?v1 (alllsts$a ?v2 ))))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$c (lCons$b ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$d ?v0 ?v2 )(member$c ?v1 (alllsts$b ?v2 ))))):named a7 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$d (lCons$a ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$ ?v0 ?v2 )(member$d ?v1 (alllsts$c ?v2 ))))):named a8 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$a ?v0 ?v2 )(member$ ?v1 (alllsts$ ?v2 ))))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$c ?v0 (inflsts$a ?v1 ))(member$c ?v0 (alllsts$b ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$d ?v0 (inflsts$b ?v1 ))(member$d ?v0 (alllsts$c ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (inflsts$ ?v1 ))(member$ ?v0 (alllsts$ ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$c ?v2 ?v0 )(alllsts$a ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (alllsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$c (lCons$b ?v2 ?v0 )(alllsts$b ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$d ?v0 (alllsts$c ?v1 ))(member$ ?v2 ?v1 ))(member$d (lCons$a ?v2 ?v0 )(alllsts$c ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(alllsts$ ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$c ?v2 ?v0 )(finlsts$a ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$c (lCons$b ?v2 ?v0 )(finlsts$b ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(member$ ?v2 ?v1 ))(member$d (lCons$a ?v2 ?v0 )(finlsts$c ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(finlsts$ ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (alllsts$b ?v1 ))(=> (member$c ?v0 (finlsts$b top$a ))false ))(member$c ?v0 (inflsts$a ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (alllsts$c ?v1 ))(=> (member$d ?v0 (finlsts$c top$b ))false ))(member$d ?v0 (inflsts$b ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(=> (member$ ?v0 (finlsts$ top$ ))false ))(member$ ?v0 (inflsts$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (inflsts$a ?v1 ))(=> (and (member$c ?v0 (alllsts$b ?v1 ))(not (member$c ?v0 (finlsts$b top$a ))))false ))false )):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (inflsts$b ?v1 ))(=> (and (member$d ?v0 (alllsts$c ?v1 ))(not (member$d ?v0 (finlsts$c top$b ))))false ))false )):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (inflsts$ ?v1 ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$ ))))false ))false )):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (finlstsp$ ?v0 ?v1 )(fun_app$ ?v0 ?v2 ))(finlstsp$ ?v0 (lCons$b ?v2 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (finlstsp$a ?v0 )?v1 )(fun_app$a ?v0 ?v2 ))(fun_app$ (finlstsp$a ?v0 )(lCons$a ?v2 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 A$ ))(=> (and (fun_app$a (finlstsp$b ?v0 )?v1 )(fun_app$b ?v0 ?v2 ))(fun_app$a (finlstsp$b ?v0 )(lCons$ ?v2 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (alllstsp$ ?v0 ?v1 )(fun_app$ ?v0 ?v2 ))(alllstsp$ ?v0 (lCons$b ?v2 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$ (alllstsp$a ?v0 )?v1 )(fun_app$a ?v0 ?v2 ))(fun_app$ (alllstsp$a ?v0 )(lCons$a ?v2 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ )(?v2 A$ ))(=> (and (fun_app$a (alllstsp$b ?v0 )?v1 )(fun_app$b ?v0 ?v2 ))(fun_app$a (alllstsp$b ?v0 )(lCons$ ?v2 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$b ?v0 (fpslsts$ ?v1 ))(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$b ?v3 (finlsts$a ?v1 ))))false )))false )):named a36 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (fpslsts$a ?v1 ))(forall ((?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v2 ?v3 ))(and (member$d ?v2 ?v1 )(member$c ?v3 (finlsts$b ?v1 ))))false )))false )):named a37 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (fpslsts$b ?v1 ))(forall ((?v2 A_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$a ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$d ?v3 (finlsts$c ?v1 ))))false )))false )):named a38 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (fpslsts$c ?v1 ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$ ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (finlsts$ ?v1 ))))false )))false )):named a39 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$c ?v0 (alllsts$b top$a ))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$d ?v0 (alllsts$c top$b ))):named a41 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$ top$ ))):named a42 ))
(check-sat )
;(get-unsat-core )
