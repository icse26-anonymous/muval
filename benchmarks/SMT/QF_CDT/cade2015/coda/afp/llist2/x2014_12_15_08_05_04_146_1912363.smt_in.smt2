;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_a_set_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_a_llist_set_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_set_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun s$ ()A_llist$ )
(declare-fun bot$ ()A_llist_llist_llist_set$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun bot$a ()A_llist_llist_set$ )
(declare-fun bot$b ()A_llist_set$ )
(declare-fun bot$c ()A_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun minus$ (A_llist_llist_llist_set$ A_llist_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun insert$ (A_llist_llist_llist$ A_llist_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun minus$a (A_llist_llist_set$ A_llist_llist_set$ )A_llist_llist_set$ )
(declare-fun minus$b (A_llist_set$ A_llist_set$ )A_llist_set$ )
(declare-fun alllsts$ (A_set$ )A_llist_set$ )
(declare-fun finlsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun insert$a (A_llist_llist$ A_llist_llist_set$ )A_llist_llist_set$ )
(declare-fun insert$b (A_llist$ A_llist_set$ )A_llist_set$ )
(declare-fun insert$c (A$ A_set$ )A_set$ )
(declare-fun lmember$ (A_llist_llist$ )A_llist_llist_llist_bool_fun$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun poslsts$ (A_set$ )A_llist_set$ )
(declare-fun alllsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun alllstsp$ (A_llist_llist_bool_fun$ )A_llist_llist_llist_bool_fun$ )
(declare-fun finlsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$b (A_set$ )A_llist_set$ )
(declare-fun finlstsp$ (A_llist_llist_bool_fun$ )A_llist_llist_llist_bool_fun$ )
(declare-fun fun_app$a (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$d (A_llist_llist_llist_a_llist_llist_set_fun$ A_llist_llist_llist$ )A_llist_llist_set$ )
(declare-fun fun_app$e (A_llist_llist_a_llist_set_fun$ A_llist_llist$ )A_llist_set$ )
(declare-fun fun_app$f (A_llist_a_set_fun$ A_llist$ )A_set$ )
(declare-fun gen_lset$ (A_llist_llist_set$ )A_llist_llist_llist_a_llist_llist_set_fun$ )
(declare-fun lmember$a (A_llist$ )A_llist_llist_bool_fun$ )
(declare-fun lmember$b (A$ )A_llist_bool_fun$ )
(declare-fun poslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun poslsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllstsp$a (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun alllstsp$b (A_bool_fun$ )A_llist_bool_fun$ )
(declare-fun finlstsp$a (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun finlstsp$b (A_bool_fun$ )A_llist_bool_fun$ )
(declare-fun gen_lset$a (A_llist_set$ )A_llist_llist_a_llist_set_fun$ )
(declare-fun gen_lset$b (A_set$ )A_llist_a_set_fun$ )
(assert (! (not (= (member$ s$ (poslsts$ a$ ))(and (member$ s$ (alllsts$ a$ ))(not (= s$ lNil$ ))))):named a0 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$a lNil$b (alllsts$a ?v0 ))):named a1 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$b lNil$a (alllsts$b ?v0 ))):named a2 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (alllsts$ ?v0 ))):named a3 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$c ?v0 (alllsts$c ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (alllsts$c ?v1 ))(member$a ?v3 ?v1 ))))))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (alllsts$a ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (alllsts$a ?v1 ))(member$b ?v3 ?v1 ))))))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (alllsts$b ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (alllsts$b ?v1 ))(member$ ?v3 ?v1 ))))))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (alllsts$ ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$ ?v1 ))(member$d ?v3 ?v1 ))))))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$c ?v0 (alllsts$c ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (alllsts$c ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (alllsts$a ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (alllsts$a ?v1 ))(member$b ?v3 ?v1 )))false ))))false )):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (alllsts$b ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (alllsts$b ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (alllsts$ ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(=> (and (fun_app$ ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist_llist$ ))(=> (fun_app$ ?v0 ?v3 )(or (= ?v3 lNil$c )(exists ((?v4 A_llist_llist_llist_llist$ )(?v5 A_llist_llist_llist$ ))(and (= ?v3 (lCons$c ?v5 ?v4 ))(and (or (fun_app$ ?v0 ?v4 )(member$c ?v4 (alllsts$c ?v2 )))(member$a ?v5 ?v2 ))))))))(member$c ?v1 (alllsts$c ?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 A_llist_llist_llist$ ))(=> (fun_app$a ?v0 ?v3 )(or (= ?v3 lNil$b )(exists ((?v4 A_llist_llist_llist$ )(?v5 A_llist_llist$ ))(and (= ?v3 (lCons$b ?v5 ?v4 ))(and (or (fun_app$a ?v0 ?v4 )(member$a ?v4 (alllsts$a ?v2 )))(member$b ?v5 ?v2 ))))))))(member$a ?v1 (alllsts$a ?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (and (fun_app$b ?v0 ?v1 )(forall ((?v3 A_llist_llist$ ))(=> (fun_app$b ?v0 ?v3 )(or (= ?v3 lNil$a )(exists ((?v4 A_llist_llist$ )(?v5 A_llist$ ))(and (= ?v3 (lCons$a ?v5 ?v4 ))(and (or (fun_app$b ?v0 ?v4 )(member$b ?v4 (alllsts$b ?v2 )))(member$ ?v5 ?v2 ))))))))(member$b ?v1 (alllsts$b ?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (and (fun_app$c ?v0 ?v1 )(forall ((?v3 A_llist$ ))(=> (fun_app$c ?v0 ?v3 )(or (= ?v3 lNil$ )(exists ((?v4 A_llist$ )(?v5 A$ ))(and (= ?v3 (lCons$ ?v5 ?v4 ))(and (or (fun_app$c ?v0 ?v4 )(member$ ?v4 (alllsts$ ?v2 )))(member$d ?v5 ?v2 ))))))))(member$ ?v1 (alllsts$ ?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ ))(fun_app$a (finlstsp$ ?v0 )lNil$b )):named a16 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(fun_app$b (finlstsp$a ?v0 )lNil$a )):named a17 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(fun_app$c (finlstsp$b ?v0 )lNil$ )):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$a lNil$b (finlsts$ ?v0 ))):named a19 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$b lNil$a (finlsts$a ?v0 ))):named a20 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (finlsts$b ?v0 ))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ ))(fun_app$a (alllstsp$ ?v0 )lNil$b )):named a22 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(fun_app$b (alllstsp$a ?v0 )lNil$a )):named a23 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(fun_app$c (alllstsp$b ?v0 )lNil$ )):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$a ?v0 (alllsts$a top$ ))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 (alllsts$b top$a ))):named a26 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$ top$b ))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$c (lCons$c ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$a ?v0 ?v2 )(member$c ?v1 (alllsts$c ?v2 ))))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lCons$b ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (alllsts$a ?v2 ))))):named a29 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lCons$a ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$ ?v0 ?v2 )(member$b ?v1 (alllsts$b ?v2 ))))):named a30 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$d ?v0 ?v2 )(member$ ?v1 (alllsts$ ?v2 ))))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(! (= (poslsts$a ?v0 )(minus$ (alllsts$a ?v0 )(insert$ lNil$b bot$ ))):pattern ((poslsts$a ?v0 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_set$ ))(! (= (poslsts$b ?v0 )(minus$a (alllsts$b ?v0 )(insert$a lNil$a bot$a ))):pattern ((poslsts$b ?v0 )))):named a33 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (poslsts$ ?v0 )(minus$b (alllsts$ ?v0 )(insert$b lNil$ bot$b ))):pattern ((poslsts$ ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$c ?v0 (alllsts$c ?v1 ))(member$a ?v2 ?v1 ))(member$c (lCons$c ?v2 ?v0 )(alllsts$c ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$a ?v1 ))(member$b ?v2 ?v1 ))(member$a (lCons$b ?v2 ?v0 )(alllsts$a ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$b ?v0 (alllsts$b ?v1 ))(member$ ?v2 ?v1 ))(member$b (lCons$a ?v2 ?v0 )(alllsts$b ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(member$d ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(alllsts$ ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$a (lmember$ ?v0 )lNil$b )false ):pattern ((lmember$ ?v0 )))):named a39 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$b (lmember$a ?v0 )lNil$a )false ):pattern ((lmember$a ?v0 )))):named a40 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$c (lmember$b ?v0 )lNil$ )false ):pattern ((lmember$b ?v0 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(! (= (fun_app$d (gen_lset$ ?v0 )lNil$b )?v0 ):pattern ((gen_lset$ ?v0 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_set$ ))(! (= (fun_app$e (gen_lset$a ?v0 )lNil$a )?v0 ):pattern ((gen_lset$a ?v0 )))):named a43 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (fun_app$f (gen_lset$b ?v0 )lNil$ )?v0 ):pattern ((gen_lset$b ?v0 )))):named a44 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a45 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a47 ))
(assert (! (= (alllsts$a bot$a )(insert$ lNil$b bot$ )):named a48 ))
(assert (! (= (alllsts$b bot$b )(insert$a lNil$a bot$a )):named a49 ))
(assert (! (= (alllsts$ bot$c )(insert$b lNil$ bot$b )):named a50 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(! (= (fun_app$a (lmember$ ?v0 )(lCons$b ?v1 ?v2 ))(or (= ?v0 ?v1 )(fun_app$a (lmember$ ?v0 )?v2 ))):pattern ((fun_app$a (lmember$ ?v0 )(lCons$b ?v1 ?v2 ))))):named a51 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A_llist$ ))(! (= (fun_app$c (lmember$b ?v0 )(lCons$ ?v1 ?v2 ))(or (= ?v0 ?v1 )(fun_app$c (lmember$b ?v0 )?v2 ))):pattern ((fun_app$c (lmember$b ?v0 )(lCons$ ?v1 ?v2 ))))):named a52 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist_llist$ ))(! (= (fun_app$b (lmember$a ?v0 )(lCons$a ?v1 ?v2 ))(or (= ?v0 ?v1 )(fun_app$b (lmember$a ?v0 )?v2 ))):pattern ((fun_app$b (lmember$a ?v0 )(lCons$a ?v1 ?v2 ))))):named a53 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(! (= (fun_app$d (gen_lset$ ?v0 )(lCons$b ?v1 ?v2 ))(fun_app$d (gen_lset$ (insert$a ?v1 ?v0 ))?v2 )):pattern ((fun_app$d (gen_lset$ ?v0 )(lCons$b ?v1 ?v2 ))))):named a54 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ )(?v2 A_llist$ ))(! (= (fun_app$f (gen_lset$b ?v0 )(lCons$ ?v1 ?v2 ))(fun_app$f (gen_lset$b (insert$c ?v1 ?v0 ))?v2 )):pattern ((fun_app$f (gen_lset$b ?v0 )(lCons$ ?v1 ?v2 ))))):named a55 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist$ )(?v2 A_llist_llist$ ))(! (= (fun_app$e (gen_lset$a ?v0 )(lCons$a ?v1 ?v2 ))(fun_app$e (gen_lset$a (insert$b ?v1 ?v0 ))?v2 )):pattern ((fun_app$e (gen_lset$a ?v0 )(lCons$a ?v1 ?v2 ))))):named a56 ))
(check-sat )
;(get-unsat-core )
