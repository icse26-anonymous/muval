;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()Bool )
(declare-fun r$a ()A_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fpslsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlstsp$ (A_llist_llist_bool_fun$ )A_llist_llist_llist_bool_fun$ )
(declare-fun fpslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fpslsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$d (A_bool_fun$ A$ )Bool )
(declare-fun finlstsp$a (A_llist_bool_fun$ )A_llist_llist_bool_fun$ )
(declare-fun finlstsp$b (A_bool_fun$ )A_llist_bool_fun$ )
(assert (! (not r$ ):named a0 ))
(assert (! (member$ r$a (fpslsts$ a$ )):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(=> (and (= r$a (lCons$ ?v0 ?v1 ))(and (member$a ?v0 a$ )(member$ ?v1 (finlsts$ a$ ))))r$ )):named a2 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$b lNil$b (finlsts$a ?v0 ))):named a3 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$c lNil$a (finlsts$b ?v0 ))):named a4 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (finlsts$ ?v0 ))):named a5 ))
(assert (! (not (= r$a lNil$ )):named a6 ))
(assert (! (member$ r$a (finlsts$ a$ )):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$b ?v0 (fpslsts$a ?v1 ))(and (member$b ?v0 (finlsts$a ?v1 ))(not (= ?v0 lNil$b ))))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$c ?v0 (fpslsts$b ?v1 ))(and (member$c ?v0 (finlsts$b ?v1 ))(not (= ?v0 lNil$a ))))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (fpslsts$ ?v1 ))(and (member$ ?v0 (finlsts$ ?v1 ))(not (= ?v0 lNil$ ))))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$d ?v0 (finlsts$c ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$d ?v2 (finlsts$c ?v1 ))(member$b ?v3 ?v1 ))))))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$b ?v0 (finlsts$a ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$b ?v2 (finlsts$a ?v1 ))(member$c ?v3 ?v1 ))))))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$c ?v0 (finlsts$b ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$c ?v2 (finlsts$b ?v1 ))(member$ ?v3 ?v1 ))))))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (finlsts$ ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$a ?v3 ?v1 ))))))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (= ?v0 lNil$b )false )(forall ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (= ?v0 (lCons$b ?v1 ?v2 ))false )))false )):named a15 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (= ?v0 lNil$a )false )(forall ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))false )))false )):named a16 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$d ?v2 (finlsts$c ?v1 ))(member$b ?v3 ?v1 )))false ))))false )):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$b ?v2 (finlsts$a ?v1 ))(member$c ?v3 ?v1 )))false ))))false )):named a19 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$c ?v2 (finlsts$b ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a21 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist_llist_bool_fun$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(and (forall ((?v3 A_llist_llist_llist_llist$ ))(=> (= ?v3 lNil$c )(fun_app$ ?v2 ?v3 )))(forall ((?v3 A_llist_llist_llist$ )(?v4 A_llist_llist_llist_llist$ ))(=> (and (member$d ?v4 (finlsts$c ?v1 ))(and (fun_app$ ?v2 ?v4 )(member$b ?v3 ?v1 )))(fun_app$ ?v2 (lCons$c ?v3 ?v4 ))))))(fun_app$ ?v2 ?v0 ))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist_bool_fun$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(and (forall ((?v3 A_llist_llist_llist$ ))(=> (= ?v3 lNil$b )(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_llist_llist$ )(?v4 A_llist_llist_llist$ ))(=> (and (member$b ?v4 (finlsts$a ?v1 ))(and (fun_app$a ?v2 ?v4 )(member$c ?v3 ?v1 )))(fun_app$a ?v2 (lCons$b ?v3 ?v4 ))))))(fun_app$a ?v2 ?v0 ))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist_bool_fun$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(and (forall ((?v3 A_llist_llist$ ))(=> (= ?v3 lNil$a )(fun_app$b ?v2 ?v3 )))(forall ((?v3 A_llist$ )(?v4 A_llist_llist$ ))(=> (and (member$c ?v4 (finlsts$b ?v1 ))(and (fun_app$b ?v2 ?v4 )(member$ ?v3 ?v1 )))(fun_app$b ?v2 (lCons$a ?v3 ?v4 ))))))(fun_app$b ?v2 ?v0 ))):named a24 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist_bool_fun$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (forall ((?v3 A_llist$ ))(=> (= ?v3 lNil$ )(fun_app$c ?v2 ?v3 )))(forall ((?v3 A$ )(?v4 A_llist$ ))(=> (and (member$ ?v4 (finlsts$ ?v1 ))(and (fun_app$c ?v2 ?v4 )(member$a ?v3 ?v1 )))(fun_app$c ?v2 (lCons$ ?v3 ?v4 ))))))(fun_app$c ?v2 ?v0 ))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(member$b ?v2 ?v1 ))(member$d (lCons$c ?v2 ?v0 )(finlsts$c ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$b ?v2 ?v0 )(finlsts$a ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$ ?v2 ?v1 ))(member$c (lCons$a ?v2 ?v0 )(finlsts$b ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(finlsts$ ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a30 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a31 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(= (not (= ?v0 lNil$b ))(exists ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(= ?v0 (lCons$b ?v1 ?v2 ))))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (not (= ?v0 lNil$a ))(exists ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(= ?v0 (lCons$a ?v1 ?v2 ))))):named a34 ))
(assert (! (forall ((?v0 A_llist$ ))(= (not (= ?v0 lNil$ ))(exists ((?v1 A$ )(?v2 A_llist$ ))(= ?v0 (lCons$ ?v1 ?v2 ))))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ ))(not (= lNil$b (lCons$b ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ ))(not (= lNil$a (lCons$a ?v0 ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(not (= lNil$ (lCons$ ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 A_llist_llist_llist$ ))(= (fun_app$a (finlstsp$ ?v0 )?v1 )(or (= ?v1 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v1 (lCons$b ?v3 ?v2 ))(and (fun_app$a (finlstsp$ ?v0 )?v2 )(fun_app$b ?v0 ?v3 ))))))):named a39 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 A_llist_llist$ ))(= (fun_app$b (finlstsp$a ?v0 )?v1 )(or (= ?v1 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v1 (lCons$a ?v3 ?v2 ))(and (fun_app$b (finlstsp$a ?v0 )?v2 )(fun_app$c ?v0 ?v3 ))))))):named a40 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(= (fun_app$c (finlstsp$b ?v0 )?v1 )(or (= ?v1 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v1 (lCons$ ?v3 ?v2 ))(and (fun_app$c (finlstsp$b ?v0 )?v2 )(fun_app$d ?v0 ?v3 ))))))):named a41 ))
(check-sat )
;(get-unsat-core )
