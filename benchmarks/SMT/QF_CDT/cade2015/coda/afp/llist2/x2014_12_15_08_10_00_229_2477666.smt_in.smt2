;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun j$ ()Nat$ )
(declare-fun ta$ ()A_llist$ )
(declare-fun suc$ (Nat$ )Nat$ )
(declare-fun ltake$ (A_llist$ Nat$ )A_llist$ )
(declare-fun ltake$a (A_llist_llist_llist$ Nat$ )A_llist_llist_llist$ )
(declare-fun ltake$b (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$ (A_set$ )A_llist_set$ )
(declare-fun llength$ (A_llist$ )Nat$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun finlsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$b (A_set$ )A_llist_set$ )
(declare-fun finlsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun llength$a (A_llist_llist_llist$ )Nat$ )
(declare-fun llength$b (A_llist_llist$ )Nat$ )
(assert (! (not (= (llength$ (ltake$ ta$ (suc$ j$ )))(suc$ j$ ))):named a0 ))
(assert (! (member$ ta$ (inflsts$ a$ )):named a1 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (member$ ?v0 (inflsts$ a$ ))(= (llength$ (ltake$ ?v0 j$ ))j$ ))):named a2 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a3 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (= (suc$ ?v0 )(suc$ ?v1 ))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 Nat$ ))(not (= ?v0 (suc$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 Nat$ ))(! (= (ltake$a (lCons$b ?v0 ?v1 )(suc$ ?v2 ))(lCons$b ?v0 (ltake$a ?v1 ?v2 ))):pattern ((ltake$a (lCons$b ?v0 ?v1 )(suc$ ?v2 ))))):named a7 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 Nat$ ))(! (= (ltake$b (lCons$a ?v0 ?v1 )(suc$ ?v2 ))(lCons$a ?v0 (ltake$b ?v1 ?v2 ))):pattern ((ltake$b (lCons$a ?v0 ?v1 )(suc$ ?v2 ))))):named a8 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 Nat$ ))(! (= (ltake$ (lCons$ ?v0 ?v1 )(suc$ ?v2 ))(lCons$ ?v0 (ltake$ ?v1 ?v2 ))):pattern ((ltake$ (lCons$ ?v0 ?v1 )(suc$ ?v2 ))))):named a9 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (ltake$a lNil$b ?v0 )lNil$b ):pattern ((ltake$a lNil$b ?v0 )))):named a10 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (ltake$b lNil$a ?v0 )lNil$a ):pattern ((ltake$b lNil$a ?v0 )))):named a11 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (ltake$ lNil$ ?v0 )lNil$ ):pattern ((ltake$ lNil$ ?v0 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$a ?v0 (finlsts$ ?v1 ))(= (llength$a (lCons$b ?v2 ?v0 ))(suc$ (llength$a ?v0 ))))):named a13 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (member$b ?v0 (finlsts$a ?v1 ))(= (llength$b (lCons$a ?v2 ?v0 ))(suc$ (llength$b ?v0 ))))):named a14 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (member$ ?v0 (finlsts$b ?v1 ))(= (llength$ (lCons$ ?v2 ?v0 ))(suc$ (llength$ ?v0 ))))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$c ?v0 (finlsts$c ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (finlsts$c ?v1 ))(member$a ?v3 ?v1 ))))))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (finlsts$ ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (finlsts$ ?v1 ))(member$b ?v3 ?v1 ))))))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (finlsts$a ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (finlsts$a ?v1 ))(member$ ?v3 ?v1 ))))))):named a18 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (finlsts$b ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$b ?v1 ))(member$d ?v3 ?v1 ))))))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (= ?v0 lNil$b )false )(forall ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (= ?v0 (lCons$b ?v1 ?v2 ))false )))false )):named a20 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (= ?v0 lNil$a )false )(forall ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))false )))false )):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$c ?v2 (finlsts$c ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$ ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$a ?v2 (finlsts$ ?v1 ))(member$b ?v3 ?v1 )))false ))))false )):named a24 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$b ?v2 (finlsts$a ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a25 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$b ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$b ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a26 ))
(check-sat )
;(get-unsat-core )
