;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))))
(declare-fun bot$ ()A_set$ )
(declare-fun bot$a ()A_llist_set$ )
(declare-fun bot$b ()A_llist_llist_llist_set$ )
(declare-fun bot$c ()A_llist_llist_set$ )
(declare-fun bot$d ()A_llist_llist_bool_fun$ )
(declare-fun bot$e ()Bool )
(declare-fun bot$f ()A_llist_bool_fun$ )
(declare-fun bot$g ()A_bool_fun$ )
(declare-fun bot$h ()A_llist_llist_llist_llist_set$ )
(declare-fun bot$i ()A_llist_llist_llist_bool_fun$ )
(declare-fun member$ (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun collect$ (A_llist_llist_llist_bool_fun$ )A_llist_llist_llist_set$ )
(declare-fun fpslsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun member$a (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (A_llist$ A_llist_set$ )Bool )
(declare-fun poslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun collect$a (A_llist_llist_bool_fun$ )A_llist_llist_set$ )
(declare-fun collect$b (A_bool_fun$ )A_set$ )
(declare-fun collect$c (A_llist_bool_fun$ )A_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$b (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun is_empty$ (A_llist_llist_llist_set$ )Bool )
(declare-fun poslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun poslsts$b (A_set$ )A_llist_set$ )
(declare-fun poslsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun is_empty$a (A_llist_llist_set$ )Bool )
(declare-fun is_empty$b (A_set$ )Bool )
(declare-fun is_empty$c (A_llist_set$ )Bool )
(assert (! (not (= (fpslsts$ bot$ )bot$a )):named a0 ))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$ ))(= (= (collect$ ?v0 )bot$b )(forall ((?v1 A_llist_llist_llist$ ))(not (fun_app$ ?v0 ?v1 ))))):named a1 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ ))(= (= (collect$a ?v0 )bot$c )(forall ((?v1 A_llist_llist$ ))(not (fun_app$a ?v0 ?v1 ))))):named a2 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (= (collect$b ?v0 )bot$ )(forall ((?v1 A$ ))(not (fun_app$b ?v0 ?v1 ))))):named a3 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (= (collect$c ?v0 )bot$a )(forall ((?v1 A_llist$ ))(not (fun_app$c ?v0 ?v1 ))))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (forall ((?v1 A_llist_llist_llist$ ))(not (member$ ?v1 ?v0 )))(= ?v0 bot$b ))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (forall ((?v1 A_llist_llist$ ))(not (member$a ?v1 ?v0 )))(= ?v0 bot$c ))):named a6 ))
(assert (! (forall ((?v0 A_set$ ))(= (forall ((?v1 A$ ))(not (member$b ?v1 ?v0 )))(= ?v0 bot$ ))):named a7 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (forall ((?v1 A_llist$ ))(not (member$c ?v1 ?v0 )))(= ?v0 bot$a ))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist_bool_fun$ ))(= (= bot$b (collect$ ?v0 ))(forall ((?v1 A_llist_llist_llist$ ))(not (fun_app$ ?v0 ?v1 ))))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ ))(= (= bot$c (collect$a ?v0 ))(forall ((?v1 A_llist_llist$ ))(not (fun_app$a ?v0 ?v1 ))))):named a10 ))
(assert (! (forall ((?v0 A_bool_fun$ ))(= (= bot$ (collect$b ?v0 ))(forall ((?v1 A$ ))(not (fun_app$b ?v0 ?v1 ))))):named a11 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ ))(= (= bot$a (collect$c ?v0 ))(forall ((?v1 A_llist$ ))(not (fun_app$c ?v0 ?v1 ))))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(= (member$ ?v0 bot$b )false )):named a13 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (member$a ?v0 bot$c )false )):named a14 ))
(assert (! (forall ((?v0 A$ ))(= (member$b ?v0 bot$ )false )):named a15 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$c ?v0 bot$a )false )):named a16 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$a bot$d ?v0 )bot$e ):pattern ((fun_app$a bot$d ?v0 )))):named a17 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$c bot$f ?v0 )bot$e ):pattern ((fun_app$c bot$f ?v0 )))):named a18 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$b bot$g ?v0 )bot$e ):pattern ((fun_app$b bot$g ?v0 )))):named a19 ))
(assert (! (= (poslsts$ bot$b )bot$h ):named a20 ))
(assert (! (= (poslsts$a bot$c )bot$b ):named a21 ))
(assert (! (= (poslsts$b bot$ )bot$a ):named a22 ))
(assert (! (= (poslsts$c bot$a )bot$c ):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(= (exists ((?v1 A_llist_llist_llist$ ))(member$ ?v1 ?v0 ))(not (= ?v0 bot$b )))):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(= (exists ((?v1 A_llist_llist$ ))(member$a ?v1 ?v0 ))(not (= ?v0 bot$c )))):named a25 ))
(assert (! (forall ((?v0 A_set$ ))(= (exists ((?v1 A$ ))(member$b ?v1 ?v0 ))(not (= ?v0 bot$ )))):named a26 ))
(assert (! (forall ((?v0 A_llist_set$ ))(= (exists ((?v1 A_llist$ ))(member$c ?v1 ?v0 ))(not (= ?v0 bot$a )))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist_llist$ ))(=> (member$ ?v1 ?v0 )false ))(= ?v0 bot$b ))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(=> (forall ((?v1 A_llist_llist$ ))(=> (member$a ?v1 ?v0 )false ))(= ?v0 bot$c ))):named a29 ))
(assert (! (forall ((?v0 A_set$ ))(=> (forall ((?v1 A$ ))(=> (member$b ?v1 ?v0 )false ))(= ?v0 bot$ ))):named a30 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (forall ((?v1 A_llist$ ))(=> (member$c ?v1 ?v0 )false ))(= ?v0 bot$a ))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ )(?v1 A_llist_llist_llist$ ))(=> (= ?v0 bot$b )(not (member$ ?v1 ?v0 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist$ ))(=> (= ?v0 bot$c )(not (member$a ?v1 ?v0 )))):named a33 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(=> (= ?v0 bot$ )(not (member$b ?v1 ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist$ ))(=> (= ?v0 bot$a )(not (member$c ?v1 ?v0 )))):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (member$ ?v0 bot$b )false )):named a36 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (member$a ?v0 bot$c )false )):named a37 ))
(assert (! (forall ((?v0 A$ ))(=> (member$b ?v0 bot$ )false )):named a38 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (member$c ?v0 bot$a )false )):named a39 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(! (= (fun_app$a bot$d ?v0 )bot$e ):pattern ((fun_app$a bot$d ?v0 )))):named a40 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$c bot$f ?v0 )bot$e ):pattern ((fun_app$c bot$f ?v0 )))):named a41 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$b bot$g ?v0 )bot$e ):pattern ((fun_app$b bot$g ?v0 )))):named a42 ))
(assert (! (= bot$b (collect$ bot$i )):named a43 ))
(assert (! (= bot$c (collect$a bot$d )):named a44 ))
(assert (! (= bot$ (collect$b bot$g )):named a45 ))
(assert (! (= bot$a (collect$c bot$f )):named a46 ))
(assert (! (forall ((?v0 A_llist_llist_llist_set$ ))(! (= (is_empty$ ?v0 )(= ?v0 bot$b )):pattern ((is_empty$ ?v0 )))):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(! (= (is_empty$a ?v0 )(= ?v0 bot$c )):pattern ((is_empty$a ?v0 )))):named a48 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (is_empty$b ?v0 )(= ?v0 bot$ )):pattern ((is_empty$b ?v0 )))):named a49 ))
(assert (! (forall ((?v0 A_llist_set$ ))(! (= (is_empty$c ?v0 )(= ?v0 bot$a )):pattern ((is_empty$c ?v0 )))):named a50 ))
(check-sat )
;(get-unsat-core )
