;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_bool_fun$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_bool_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A$ )
(declare-fun l$ ()A_llist$ )
(declare-fun x$ ()A$ )
(declare-fun a$a ()A_set$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun top$ ()A_set$ )
(declare-fun top$a ()A_llist_llist_set$ )
(declare-fun top$b ()A_llist_set$ )
(declare-fun top$c ()A_llist_llist_llist_set$ )
(declare-fun llast$ (A_llist_llist_llist$ )A_llist_llist$ )
(declare-fun llast$a (A_llist_llist$ )A_llist$ )
(declare-fun llast$b (A_llist$ )A$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_llist_llist_llist_bool_fun$ A_llist_llist_llist_llist$ )Bool )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun finlsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_bool_fun$ A_llist_llist_llist$ )Bool )
(declare-fun fun_app$b (A_llist_llist_bool_fun$ A_llist_llist$ )Bool )
(declare-fun fun_app$c (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun lbutlast$ (A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lbutlast$a (A_llist_llist$ )A_llist_llist$ )
(declare-fun lbutlast$b (A_llist$ )A_llist$ )
(assert (! (not (member$ (lCons$ x$ lNil$ )(finlsts$ top$ ))):named a0 ))
(assert (! (member$a a$ a$a ):named a1 ))
(assert (! (member$ xs$ (finlsts$ a$a )):named a2 ))
(assert (! (member$ l$ (finlsts$ a$a )):named a3 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(= (member$b ?v0 (finlsts$a ?v1 ))(or (= ?v0 lNil$c )(exists ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$b ?v2 (finlsts$a ?v1 ))(member$c ?v3 ?v1 ))))))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$c ?v0 (finlsts$b ?v1 ))(or (= ?v0 lNil$b )(exists ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$c ?v2 (finlsts$b ?v1 ))(member$d ?v3 ?v1 ))))))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$d ?v0 (finlsts$c ?v1 ))(or (= ?v0 lNil$a )(exists ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$d ?v2 (finlsts$c ?v1 ))(member$ ?v3 ?v1 ))))))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (finlsts$ ?v1 ))(or (= ?v0 lNil$ )(exists ((?v2 A_llist$ )(?v3 A$ ))(and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$a ?v3 ?v1 ))))))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(=> (and (=> (= ?v0 lNil$b )false )(forall ((?v1 A_llist_llist$ )(?v2 A_llist_llist_llist$ ))(=> (= ?v0 (lCons$b ?v1 ?v2 ))false )))false )):named a8 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(=> (and (=> (= ?v0 lNil$a )false )(forall ((?v1 A_llist$ )(?v2 A_llist_llist$ ))(=> (= ?v0 (lCons$a ?v1 ?v2 ))false )))false )):named a9 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (= ?v0 lNil$ )false )(forall ((?v1 A$ )(?v2 A_llist$ ))(=> (= ?v0 (lCons$ ?v1 ?v2 ))false )))false )):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(and (=> (= ?v0 lNil$c )false )(forall ((?v2 A_llist_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v3 ?v2 ))(and (member$b ?v2 (finlsts$a ?v1 ))(member$c ?v3 ?v1 )))false ))))false )):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(and (=> (= ?v0 lNil$b )false )(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v3 ?v2 ))(and (member$c ?v2 (finlsts$b ?v1 ))(member$d ?v3 ?v1 )))false ))))false )):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(and (=> (= ?v0 lNil$a )false )(forall ((?v2 A_llist_llist$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$a ?v3 ?v2 ))(and (member$d ?v2 (finlsts$c ?v1 ))(member$ ?v3 ?v1 )))false ))))false )):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (=> (= ?v0 lNil$ )false )(forall ((?v2 A_llist$ )(?v3 A$ ))(=> (and (= ?v0 (lCons$ ?v3 ?v2 ))(and (member$ ?v2 (finlsts$ ?v1 ))(member$a ?v3 ?v1 )))false ))))false )):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist_llist_bool_fun$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(and (forall ((?v3 A_llist_llist_llist_llist$ ))(=> (= ?v3 lNil$c )(fun_app$ ?v2 ?v3 )))(forall ((?v3 A_llist_llist_llist$ )(?v4 A_llist_llist_llist_llist$ ))(=> (and (member$b ?v4 (finlsts$a ?v1 ))(and (fun_app$ ?v2 ?v4 )(member$c ?v3 ?v1 )))(fun_app$ ?v2 (lCons$c ?v3 ?v4 ))))))(fun_app$ ?v2 ?v0 ))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist_bool_fun$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(and (forall ((?v3 A_llist_llist_llist$ ))(=> (= ?v3 lNil$b )(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_llist_llist$ )(?v4 A_llist_llist_llist$ ))(=> (and (member$c ?v4 (finlsts$b ?v1 ))(and (fun_app$a ?v2 ?v4 )(member$d ?v3 ?v1 )))(fun_app$a ?v2 (lCons$b ?v3 ?v4 ))))))(fun_app$a ?v2 ?v0 ))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist_bool_fun$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(and (forall ((?v3 A_llist_llist$ ))(=> (= ?v3 lNil$a )(fun_app$b ?v2 ?v3 )))(forall ((?v3 A_llist$ )(?v4 A_llist_llist$ ))(=> (and (member$d ?v4 (finlsts$c ?v1 ))(and (fun_app$b ?v2 ?v4 )(member$ ?v3 ?v1 )))(fun_app$b ?v2 (lCons$a ?v3 ?v4 ))))))(fun_app$b ?v2 ?v0 ))):named a17 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist_bool_fun$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (forall ((?v3 A_llist$ ))(=> (= ?v3 lNil$ )(fun_app$c ?v2 ?v3 )))(forall ((?v3 A$ )(?v4 A_llist$ ))(=> (and (member$ ?v4 (finlsts$ ?v1 ))(and (fun_app$c ?v2 ?v4 )(member$a ?v3 ?v1 )))(fun_app$c ?v2 (lCons$ ?v3 ?v4 ))))))(fun_app$c ?v2 ?v0 ))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$c ?v2 ?v0 )(finlsts$a ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$c (lCons$b ?v2 ?v0 )(finlsts$b ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(member$ ?v2 ?v1 ))(member$d (lCons$a ?v2 ?v0 )(finlsts$c ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(finlsts$ ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(not (member$c ?v0 (finlsts$b top$a ))))false )):named a23 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(not (member$d ?v0 (finlsts$c top$b ))))false )):named a24 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$ ))))false )):named a25 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$c ?v0 (finlsts$b ?v1 ))(member$c ?v0 (finlsts$b top$a )))):named a26 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$d ?v0 (finlsts$c ?v1 ))(member$d ?v0 (finlsts$c top$b )))):named a27 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (finlsts$ top$ )))):named a28 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$c lNil$b (finlsts$b ?v0 ))):named a29 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$d lNil$a (finlsts$c ?v0 ))):named a30 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (finlsts$ ?v0 ))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$c ?v0 (finlsts$b ?v1 ))(= (lbutlast$ (lCons$b ?v2 ?v0 ))(ite (= ?v0 lNil$b )lNil$b (lCons$b ?v2 (lbutlast$ ?v0 )))))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (member$d ?v0 (finlsts$c ?v1 ))(= (lbutlast$a (lCons$a ?v2 ?v0 ))(ite (= ?v0 lNil$a )lNil$a (lCons$a ?v2 (lbutlast$a ?v0 )))))):named a33 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (lbutlast$b (lCons$ ?v2 ?v0 ))(ite (= ?v0 lNil$ )lNil$ (lCons$ ?v2 (lbutlast$b ?v0 )))))):named a34 ))
(assert (! (= (lbutlast$b (lappend$ l$ (lCons$ x$ lNil$ )))l$ ):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$c ?v0 (finlsts$b ?v1 ))(= (llast$ (lCons$b ?v2 ?v0 ))(ite (= ?v0 lNil$b )?v2 (llast$ ?v0 ))))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (member$d ?v0 (finlsts$c ?v1 ))(= (llast$a (lCons$a ?v2 ?v0 ))(ite (= ?v0 lNil$a )?v2 (llast$a ?v0 ))))):named a37 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (llast$b (lCons$ ?v2 ?v0 ))(ite (= ?v0 lNil$ )?v2 (llast$b ?v0 ))))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a40 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(= (member$c ?v0 top$c )true )):named a42 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(= (member$d ?v0 top$a )true )):named a43 ))
(assert (! (forall ((?v0 A_llist$ ))(= (member$ ?v0 top$b )true )):named a44 ))
(assert (! (forall ((?v0 A$ ))(= (member$a ?v0 top$ )true )):named a45 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$c ?v0 top$c )):named a46 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$d ?v0 top$a )):named a47 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 top$b )):named a48 ))
(assert (! (forall ((?v0 A$ ))(member$a ?v0 top$ )):named a49 ))
(check-sat )
;(get-unsat-core )
