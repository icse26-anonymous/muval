;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun s$ ()A_llist$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fpslsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun inflsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun alllsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$b (A_set$ )A_llist_set$ )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun fpslsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$b (A_set$ )A_llist_set$ )
(declare-fun inflsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun inflsts$b (A_set$ )A_llist_set$ )
(declare-fun lappend$a (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun lappend$b (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(assert (! (not (= (member$ (lappend$ r$ s$ )(finlsts$ a$ ))(and (member$ r$ (finlsts$ a$ ))(member$ s$ (finlsts$ a$ ))))):named a0 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(= (= (lappend$a ?v0 ?v2 )(lappend$a ?v0 ?v3 ))(= ?v2 ?v3 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(= (= (lappend$b ?v0 ?v2 )(lappend$b ?v0 ?v3 ))(= ?v2 ?v3 )))):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(= (= (lappend$ ?v0 ?v2 )(lappend$ ?v0 ?v3 ))(= ?v2 ?v3 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (member$a (lappend$a ?v0 ?v1 )(finlsts$a ?v2 ))(member$a ?v0 (finlsts$a ?v2 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (member$b (lappend$b ?v0 ?v1 )(finlsts$b ?v2 ))(member$b ?v0 (finlsts$b ?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (member$ (lappend$ ?v0 ?v1 )(finlsts$ ?v2 ))(member$ ?v0 (finlsts$ ?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v2 (finlsts$a ?v1 )))(member$a (lappend$a ?v0 ?v2 )(finlsts$a ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v2 (finlsts$b ?v1 )))(member$b (lappend$b ?v0 ?v2 )(finlsts$b ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v2 (finlsts$ ?v1 )))(member$ (lappend$ ?v0 ?v2 )(finlsts$ ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(= (lappend$b (lappend$b ?v0 ?v1 )?v2 )(lappend$b ?v0 (lappend$b ?v1 ?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (lappend$ (lappend$ ?v0 ?v1 )?v2 )(lappend$ ?v0 (lappend$ ?v1 ?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (member$a ?v0 (inflsts$ ?v1 ))(= (lappend$a ?v0 ?v2 )?v0 ))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$b ?v0 (inflsts$a ?v1 ))(= (lappend$b ?v0 ?v2 )?v0 ))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (member$ ?v0 (inflsts$b ?v1 ))(= (lappend$ ?v0 ?v2 )?v0 ))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$ ?v2 )))(member$a ?v0 (finlsts$a ?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$a ?v2 )))(member$b ?v0 (finlsts$b ?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v2 )))(member$ ?v0 (finlsts$ ?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$ ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$a ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$b ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (alllsts$ ?v1 ))(member$a ?v2 (alllsts$ ?v1 )))(member$a (lappend$a ?v0 ?v2 )(alllsts$ ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (alllsts$a ?v1 ))(member$b ?v2 (alllsts$a ?v1 )))(member$b (lappend$b ?v0 ?v2 )(alllsts$a ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (alllsts$b ?v1 ))(member$ ?v2 (alllsts$b ?v1 )))(member$ (lappend$ ?v0 ?v2 )(alllsts$b ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= lNil$a (lappend$b ?v0 ?v1 ))(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a24 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= lNil$ (lappend$ ?v0 ?v1 ))(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a25 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= (lappend$b ?v0 ?v1 )lNil$a )(and (= ?v0 lNil$a )(= ?v1 lNil$a )))):named a26 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= (lappend$ ?v0 ?v1 )lNil$ )(and (= ?v0 lNil$ )(= ?v1 lNil$ )))):named a27 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(not (member$a ?v0 (finlsts$a top$ ))))false )):named a28 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(not (member$b ?v0 (finlsts$b top$a ))))false )):named a29 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(not (member$ ?v0 (finlsts$ top$b ))))false )):named a30 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (finlsts$a top$ )))):named a31 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (finlsts$b top$a )))):named a32 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (finlsts$ top$b )))):named a33 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(member$a lNil$b (finlsts$a ?v0 ))):named a34 ))
(assert (! (forall ((?v0 A_llist_set$ ))(member$b lNil$a (finlsts$b ?v0 ))):named a35 ))
(assert (! (forall ((?v0 A_set$ ))(member$ lNil$ (finlsts$ ?v0 ))):named a36 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$c ?v0 (finlsts$c ?v1 ))(member$a ?v2 ?v1 ))(member$c (lCons$c ?v2 ?v0 )(finlsts$c ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$b ?v2 ?v1 ))(member$a (lCons$b ?v2 ?v0 )(finlsts$a ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$ ?v2 ?v1 ))(member$b (lCons$a ?v2 ?v0 )(finlsts$b ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$d ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(finlsts$ ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(= (member$a ?v0 (fpslsts$ ?v1 ))(and (member$a ?v0 (finlsts$a ?v1 ))(not (= ?v0 lNil$b ))))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(= (member$b ?v0 (fpslsts$a ?v1 ))(and (member$b ?v0 (finlsts$b ?v1 ))(not (= ?v0 lNil$a ))))):named a42 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(= (member$ ?v0 (fpslsts$b ?v1 ))(and (member$ ?v0 (finlsts$ ?v1 ))(not (= ?v0 lNil$ ))))):named a43 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a44 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a45 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_llist$ ))(! (= (lappend$a (lCons$b ?v0 ?v1 )?v2 )(lCons$b ?v0 (lappend$a ?v1 ?v2 ))):pattern ((lappend$a (lCons$b ?v0 ?v1 )?v2 )))):named a47 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(! (= (lappend$b (lCons$a ?v0 ?v1 )?v2 )(lCons$a ?v0 (lappend$b ?v1 ?v2 ))):pattern ((lappend$b (lCons$a ?v0 ?v1 )?v2 )))):named a48 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (lappend$ (lCons$ ?v0 ?v1 )?v2 )(lCons$ ?v0 (lappend$ ?v1 ?v2 ))):pattern ((lappend$ (lCons$ ?v0 ?v1 )?v2 )))):named a49 ))
(check-sat )
;(get-unsat-core )
