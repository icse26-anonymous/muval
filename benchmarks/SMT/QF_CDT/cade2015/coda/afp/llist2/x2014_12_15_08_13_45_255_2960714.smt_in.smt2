;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_a_llist_set_fun$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_a_llist_llist_set_fun$ 0 )
(declare-sort A_llist_llist_llist_a_llist_llist_llist_set_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A_set$ )
(declare-fun r$ ()A_llist$ )
(declare-fun t$ ()A_llist$ )
(declare-fun top$ ()A_llist_llist_set$ )
(declare-fun less$ (A_llist_llist_llist$ A_llist_llist_llist$ )Bool )
(declare-fun lrev$ (A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun suff$ (A_set$ )A_llist_a_llist_set_fun$ )
(declare-fun top$a ()A_llist_set$ )
(declare-fun top$b ()A_set$ )
(declare-fun ldrop$ (A_llist_llist_llist$ Nat$ )A_llist_llist_llist$ )
(declare-fun less$a (A_llist_llist$ A_llist_llist$ )Bool )
(declare-fun less$b (A_llist$ A_llist$ )Bool )
(declare-fun lrev$a (A_llist_llist$ )A_llist_llist$ )
(declare-fun lrev$b (A_llist$ )A_llist$ )
(declare-fun ltake$ (A_llist_llist_llist$ Nat$ )A_llist_llist_llist$ )
(declare-fun suff$a (A_llist_llist_set$ )A_llist_llist_llist_a_llist_llist_llist_set_fun$ )
(declare-fun suff$b (A_llist_set$ )A_llist_llist_a_llist_llist_set_fun$ )
(declare-fun ldrop$a (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun ldrop$b (A_llist$ Nat$ )A_llist$ )
(declare-fun ltake$a (A_llist_llist$ Nat$ )A_llist_llist$ )
(declare-fun ltake$b (A_llist$ Nat$ )A_llist$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun alllsts$ (A_set$ )A_llist_set$ )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun finpref$ (A_set$ A_llist$ )A_llist_set$ )
(declare-fun fun_app$ (A_llist_a_llist_set_fun$ A_llist$ )A_llist_set$ )
(declare-fun inflsts$ (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun lappend$ (A_llist_llist_llist$ A_llist_llist_llist$ )A_llist_llist_llist$ )
(declare-fun member$a (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$b (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A$ A_set$ )Bool )
(declare-fun alllsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun alllsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun alllsts$c (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun finpref$a (A_llist_llist_set$ A_llist_llist_llist$ )A_llist_llist_llist_set$ )
(declare-fun finpref$b (A_llist_set$ A_llist_llist$ )A_llist_llist_set$ )
(declare-fun fun_app$a (A_llist_llist_llist_a_llist_llist_llist_set_fun$ A_llist_llist_llist$ )A_llist_llist_llist_set$ )
(declare-fun fun_app$b (A_llist_llist_a_llist_llist_set_fun$ A_llist_llist$ )A_llist_llist_set$ )
(declare-fun inflsts$a (A_llist_set$ )A_llist_llist_set$ )
(declare-fun inflsts$b (A_set$ )A_llist_set$ )
(declare-fun lappend$a (A_llist_llist$ A_llist_llist$ )A_llist_llist$ )
(declare-fun lappend$b (A_llist$ A_llist$ )A_llist$ )
(assert (! (not (= (member$ r$ (finpref$ a$ t$ ))(member$ t$ (fun_app$ (suff$ a$ )r$ )))):named a0 ))
(assert (! (member$ r$ (finlsts$ a$ )):named a1 ))
(assert (! (member$ t$ (alllsts$ a$ )):named a2 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (fun_app$a (suff$a ?v1 )?v2 ))(member$a ?v2 (finlsts$a ?v1 )))(member$a ?v2 (finpref$a ?v1 ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (fun_app$b (suff$b ?v1 )?v2 ))(member$b ?v2 (finlsts$b ?v1 )))(member$b ?v2 (finpref$b ?v1 ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (fun_app$ (suff$ ?v1 )?v2 ))(member$ ?v2 (finlsts$ ?v1 )))(member$ ?v2 (finpref$ ?v1 ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (member$a ?v0 (fun_app$a (suff$a ?v1 )?v2 ))(member$a ?v0 (alllsts$a ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$b ?v0 (fun_app$b (suff$b ?v1 )?v2 ))(member$b ?v0 (alllsts$b ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (member$ ?v0 (fun_app$ (suff$ ?v1 )?v2 ))(member$ ?v0 (alllsts$ ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (finpref$a ?v1 ?v2 ))(member$a ?v2 (alllsts$a ?v1 )))(member$a ?v2 (fun_app$a (suff$a ?v1 )?v0 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (finpref$b ?v1 ?v2 ))(member$b ?v2 (alllsts$b ?v1 )))(member$b ?v2 (fun_app$b (suff$b ?v1 )?v0 )))):named a10 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (finpref$ ?v1 ?v2 ))(member$ ?v2 (alllsts$ ?v1 )))(member$ ?v2 (fun_app$ (suff$ ?v1 )?v0 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (member$a ?v0 (finpref$a ?v1 ?v2 ))(member$a ?v0 (finlsts$a ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (member$b ?v0 (finpref$b ?v1 ?v2 ))(member$b ?v0 (finlsts$b ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (member$ ?v0 (finpref$ ?v1 ?v2 ))(member$ ?v0 (finlsts$ ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_set$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$a ?v2 )))(member$a ?v0 (finlsts$a ?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_set$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$b ?v2 )))(member$b ?v0 (finlsts$b ?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$ ?v2 )))(member$ ?v0 (finlsts$ ?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a ?v0 (alllsts$a ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b ?v0 (alllsts$b ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ ?v0 (alllsts$ ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 Nat$ ))(=> (member$a ?v0 (alllsts$a ?v1 ))(member$a (ltake$ ?v0 ?v2 )(finlsts$a ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 Nat$ ))(=> (member$b ?v0 (alllsts$b ?v1 ))(member$b (ltake$a ?v0 ?v2 )(finlsts$b ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 Nat$ ))(=> (member$ ?v0 (alllsts$ ?v1 ))(member$ (ltake$b ?v0 ?v2 )(finlsts$ ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$a ?v0 (finlsts$a ?v1 ))(and (member$a ?v2 (fun_app$a (suff$a ?v1 )?v0 ))(forall ((?v3 A_llist_llist_llist$ ))(=> (and (member$a ?v3 (alllsts$a ?v1 ))(= ?v2 (lappend$ ?v0 ?v3 )))false ))))false )):named a24 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$b ?v1 ))(and (member$b ?v2 (fun_app$b (suff$b ?v1 )?v0 ))(forall ((?v3 A_llist_llist$ ))(=> (and (member$b ?v3 (alllsts$b ?v1 ))(= ?v2 (lappend$a ?v0 ?v3 )))false ))))false )):named a25 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_llist$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(and (member$ ?v2 (fun_app$ (suff$ ?v1 )?v0 ))(forall ((?v3 A_llist$ ))(=> (and (member$ ?v3 (alllsts$ ?v1 ))(= ?v2 (lappend$b ?v0 ?v3 )))false ))))false )):named a26 ))
(assert (! (forall ((?v0 A_llist_llist_set$ ))(! (= (fun_app$a (suff$a ?v0 )lNil$b )(alllsts$a ?v0 )):pattern ((suff$a ?v0 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_set$ ))(! (= (fun_app$b (suff$b ?v0 )lNil$a )(alllsts$b ?v0 )):pattern ((suff$b ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_set$ ))(! (= (fun_app$ (suff$ ?v0 )lNil$ )(alllsts$ ?v0 )):pattern ((suff$ ?v0 )))):named a29 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a (lrev$ ?v0 )(finlsts$a ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b (lrev$a ?v0 )(finlsts$b ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ (lrev$b ?v0 )(finlsts$ ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$a ?v0 (alllsts$a ?v1 ))(and (=> (member$a ?v0 (finlsts$a ?v1 ))false )(=> (member$a ?v0 (inflsts$ ?v1 ))false )))false )):named a33 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$b ?v0 (alllsts$b ?v1 ))(and (=> (member$b ?v0 (finlsts$b ?v1 ))false )(=> (member$b ?v0 (inflsts$a ?v1 ))false )))false )):named a34 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (alllsts$ ?v1 ))(and (=> (member$ ?v0 (finlsts$ ?v1 ))false )(=> (member$ ?v0 (inflsts$b ?v1 ))false )))false )):named a35 ))
(assert (! (forall ((?v0 A_llist_llist_set$ )(?v1 A_llist_llist_llist$ ))(= (member$a lNil$b (fun_app$a (suff$a ?v0 )?v1 ))(= ?v1 lNil$b ))):named a36 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_llist$ ))(= (member$b lNil$a (fun_app$b (suff$b ?v0 )?v1 ))(= ?v1 lNil$a ))):named a37 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_llist$ ))(= (member$ lNil$ (fun_app$ (suff$ ?v0 )?v1 ))(= ?v1 lNil$ ))):named a38 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 Nat$ ))(=> (member$a ?v0 (alllsts$a ?v1 ))(member$a (ldrop$ ?v0 ?v2 )(alllsts$a ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 Nat$ ))(=> (member$b ?v0 (alllsts$b ?v1 ))(member$b (ldrop$a ?v0 ?v2 )(alllsts$b ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 Nat$ ))(=> (member$ ?v0 (alllsts$ ?v1 ))(member$ (ldrop$b ?v0 ?v2 )(alllsts$ ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 Nat$ ))(=> (member$a ?v0 (finlsts$a ?v1 ))(member$a (ldrop$ ?v0 ?v2 )(finlsts$a ?v1 )))):named a42 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 Nat$ ))(=> (member$b ?v0 (finlsts$b ?v1 ))(member$b (ldrop$a ?v0 ?v2 )(finlsts$b ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 Nat$ ))(=> (member$ ?v0 (finlsts$ ?v1 ))(member$ (ldrop$b ?v0 ?v2 )(finlsts$ ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ ))(member$a ?v0 (alllsts$a top$ ))):named a45 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(member$b ?v0 (alllsts$b top$a ))):named a46 ))
(assert (! (forall ((?v0 A_llist$ ))(member$ ?v0 (alllsts$ top$b ))):named a47 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(=> (and (less$ ?v0 ?v1 )(member$a ?v1 (finlsts$a ?v2 )))(member$a ?v0 (finlsts$a ?v2 )))):named a48 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(=> (and (less$a ?v0 ?v1 )(member$b ?v1 (finlsts$b ?v2 )))(member$b ?v0 (finlsts$b ?v2 )))):named a49 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_set$ ))(=> (and (less$b ?v0 ?v1 )(member$ ?v1 (finlsts$ ?v2 )))(member$ ?v0 (finlsts$ ?v2 )))):named a50 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_llist_llist$ )(?v2 A_llist_llist_llist_set$ ))(= (member$c (lCons$c ?v0 ?v1 )(alllsts$c ?v2 ))(and (member$a ?v0 ?v2 )(member$c ?v1 (alllsts$c ?v2 ))))):named a51 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist_set$ ))(= (member$a (lCons$b ?v0 ?v1 )(alllsts$a ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (alllsts$a ?v2 ))))):named a52 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_set$ ))(= (member$b (lCons$a ?v0 ?v1 )(alllsts$b ?v2 ))(and (member$ ?v0 ?v2 )(member$b ?v1 (alllsts$b ?v2 ))))):named a53 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A_set$ ))(= (member$ (lCons$ ?v0 ?v1 )(alllsts$ ?v2 ))(and (member$d ?v0 ?v2 )(member$ ?v1 (alllsts$ ?v2 ))))):named a54 ))
(check-sat )
;(get-unsat-core )
