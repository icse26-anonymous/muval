;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_set$ 0 )
(declare-sort A_llist_llist_llist_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_llist$ (lNil$b )(lCons$b (lhd$b A_llist_llist$ )(ltl$b A_llist_llist_llist$ )))(A_llist_llist_llist_llist$ (lNil$c )(lCons$c (lhd$c A_llist_llist_llist$ )(ltl$c A_llist_llist_llist_llist$ )))))
(declare-fun a$ ()A$ )
(declare-fun l$ ()A_llist$ )
(declare-fun r$ ()A_llist$ )
(declare-fun s$ ()A_llist$ )
(declare-fun a$a ()A_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun finlsts$ (A_set$ )A_llist_set$ )
(declare-fun fpslsts$ (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun less_eq$ (A_llist$ A_llist$ )Bool )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun member$b (A_llist_llist_llist_llist$ A_llist_llist_llist_llist_set$ )Bool )
(declare-fun member$c (A_llist_llist_llist$ A_llist_llist_llist_set$ )Bool )
(declare-fun member$d (A_llist_llist$ A_llist_llist_set$ )Bool )
(declare-fun finlsts$a (A_llist_llist_llist_set$ )A_llist_llist_llist_llist_set$ )
(declare-fun finlsts$b (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun finlsts$c (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$a (A_llist_llist_set$ )A_llist_llist_llist_set$ )
(declare-fun fpslsts$b (A_llist_set$ )A_llist_llist_set$ )
(declare-fun fpslsts$c (A_set$ )A_llist_set$ )
(declare-fun less_eq$a (A_llist_llist$ A_llist_llist$ )Bool )
(declare-fun less_eq$b (A_llist_llist_llist$ A_llist_llist_llist$ )Bool )
(assert (! (not (forall ((?v0 A_llist$ ))(=> (less_eq$ ?v0 (lCons$ a$ l$ ))(member$ ?v0 (finlsts$ a$a ))))):named a0 ))
(assert (! (less_eq$ r$ s$ ):named a1 ))
(assert (! (member$ s$ (finlsts$ a$a )):named a2 ))
(assert (! (member$a a$ a$a ):named a3 ))
(assert (! (member$ l$ (finlsts$ a$a )):named a4 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (less_eq$ ?v0 l$ )(member$ ?v0 (finlsts$ a$a )))):named a5 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(less_eq$a ?v0 ?v0 )):named a6 ))
(assert (! (forall ((?v0 A_llist$ ))(less_eq$ ?v0 ?v0 )):named a7 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(! (= (less_eq$b (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(less_eq$b ?v1 ?v3 ))):pattern ((less_eq$b (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))))):named a8 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(! (= (less_eq$a (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(less_eq$a ?v1 ?v3 ))):pattern ((less_eq$a (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(! (= (less_eq$ (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(less_eq$ ?v1 ?v3 ))):pattern ((less_eq$ (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))))):named a10 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ )(?v2 A_llist_llist_llist$ ))(=> (and (member$b ?v0 (finlsts$a ?v1 ))(member$c ?v2 ?v1 ))(member$b (lCons$c ?v2 ?v0 )(finlsts$a ?v1 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ )(?v2 A_llist_llist$ ))(=> (and (member$c ?v0 (finlsts$b ?v1 ))(member$d ?v2 ?v1 ))(member$c (lCons$b ?v2 ?v0 )(finlsts$b ?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (member$d ?v0 (finlsts$c ?v1 ))(member$ ?v2 ?v1 ))(member$d (lCons$a ?v2 ?v0 )(finlsts$c ?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (member$ ?v0 (finlsts$ ?v1 ))(member$a ?v2 ?v1 ))(member$ (lCons$ ?v2 ?v0 )(finlsts$ ?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist_llist$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a17 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less_eq$ ?v0 ?v2 ))):named a18 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist_llist$ )(?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_llist$ )(?v2 A_llist$ )(?v3 A_llist_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_llist$ ))(less_eq$a ?v0 ?v0 )):named a22 ))
(assert (! (forall ((?v0 A_llist$ ))(less_eq$ ?v0 ?v0 )):named a23 ))
(assert (! (forall ((?v0 A_llist_llist_llist_llist$ )(?v1 A_llist_llist_llist_set$ ))(=> (and (member$b ?v0 (fpslsts$ ?v1 ))(forall ((?v2 A_llist_llist_llist$ )(?v3 A_llist_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$c ?v2 ?v3 ))(and (member$c ?v2 ?v1 )(member$b ?v3 (finlsts$a ?v1 ))))false )))false )):named a24 ))
(assert (! (forall ((?v0 A_llist_llist_llist$ )(?v1 A_llist_llist_set$ ))(=> (and (member$c ?v0 (fpslsts$a ?v1 ))(forall ((?v2 A_llist_llist$ )(?v3 A_llist_llist_llist$ ))(=> (and (= ?v0 (lCons$b ?v2 ?v3 ))(and (member$d ?v2 ?v1 )(member$c ?v3 (finlsts$b ?v1 ))))false )))false )):named a25 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_set$ ))(=> (and (member$d ?v0 (fpslsts$b ?v1 ))(forall ((?v2 A_llist$ )(?v3 A_llist_llist$ ))(=> (and (= ?v0 (lCons$a ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$d ?v3 (finlsts$c ?v1 ))))false )))false )):named a26 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ ))(=> (and (member$ ?v0 (fpslsts$c ?v1 ))(forall ((?v2 A$ )(?v3 A_llist$ ))(=> (and (= ?v0 (lCons$ ?v2 ?v3 ))(and (member$a ?v2 ?v1 )(member$ ?v3 (finlsts$ ?v1 ))))false )))false )):named a27 ))
(assert (! (forall ((?v0 A_llist_llist$ )(?v1 A_llist_llist$ ))(= (= ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (= ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 )))):named a29 ))
(check-sat )
;(get-unsat-core )
