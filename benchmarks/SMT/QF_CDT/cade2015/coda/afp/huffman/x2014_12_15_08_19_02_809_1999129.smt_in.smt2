;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_tree$ 0)
(declare-fun select$ (A_tree$)Nat$)
(declare-fun selecta$ (A_tree$)A$)
(declare-fun leaf$ (Nat$ A$ )A_tree$)
(declare-fun selectb$ (A_tree$)Nat$)
(declare-fun selectc$ (A_tree$)A_tree$)
(declare-fun selectd$ (A_tree$)A_tree$)
(declare-fun innerNode$ (Nat$ A_tree$ A_tree$ )A_tree$)
(declare-fun a$ ()A$ )
(declare-fun p$ (A_tree$ A$ )Bool )
(declare-fun t$ ()A_tree$ )
(declare-fun bot$ ()A_set$ )
(declare-fun inf$ (A_set$ A_set$ )A_set$ )
(declare-fun less$ (Nat$ Nat$ )Bool )
(declare-fun zero$ ()Nat$ )
(declare-fun height$ (A_tree$ )Nat$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun sibling$ (A_tree$ A$ )A$ )
(declare-fun alphabet$ (A_tree$ )A_set$ )
(declare-fun consistent$ (A_tree$ )Bool )
(assert (! (not (p$ t$ a$ )):named a0 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ )(?v2 A$ ))(p$ (leaf$ ?v0 ?v1 )?v2 )):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 Nat$ )(?v3 Nat$ )(?v4 Nat$ )(?v5 A$ ))(=> (not (= ?v0 ?v1 ))(p$ (innerNode$ ?v2 (leaf$ ?v3 ?v0 )(leaf$ ?v4 ?v1 ))?v5 ))):named a2 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ )(?v2 A$ )(?v3 Nat$ ))(=> (and (consistent$ ?v0 )(and (consistent$ ?v1 )(and (= (inf$ (alphabet$ ?v0 )(alphabet$ ?v1 ))bot$ )(and (or (less$ zero$ (height$ ?v0 ))(less$ zero$ (height$ ?v1 )))(and (member$ ?v2 (alphabet$ ?v0 ))(and (member$ (sibling$ ?v0 ?v2 )(alphabet$ ?v0 ))(and (not (member$ ?v2 (alphabet$ ?v1 )))(and (not (member$ (sibling$ ?v0 ?v2 )(alphabet$ ?v1 )))(p$ ?v0 ?v2 )))))))))(p$ (innerNode$ ?v3 ?v0 ?v1 )?v2 ))):named a3 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ )(?v2 A$ )(?v3 Nat$ ))(=> (and (consistent$ ?v0 )(and (consistent$ ?v1 )(and (= (inf$ (alphabet$ ?v0 )(alphabet$ ?v1 ))bot$ )(and (or (less$ zero$ (height$ ?v0 ))(less$ zero$ (height$ ?v1 )))(and (not (member$ ?v2 (alphabet$ ?v0 )))(and (not (member$ (sibling$ ?v1 ?v2 )(alphabet$ ?v0 )))(and (member$ ?v2 (alphabet$ ?v1 ))(and (member$ (sibling$ ?v1 ?v2 )(alphabet$ ?v1 ))(p$ ?v1 ?v2 )))))))))(p$ (innerNode$ ?v3 ?v0 ?v1 )?v2 ))):named a4 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ )(?v2 A$ )(?v3 Nat$ ))(=> (and (consistent$ ?v0 )(and (consistent$ ?v1 )(and (= (inf$ (alphabet$ ?v0 )(alphabet$ ?v1 ))bot$ )(and (or (less$ zero$ (height$ ?v0 ))(less$ zero$ (height$ ?v1 )))(and (not (member$ ?v2 (alphabet$ ?v0 )))(not (member$ ?v2 (alphabet$ ?v1 ))))))))(p$ (innerNode$ ?v3 ?v0 ?v1 )?v2 ))):named a5 ))
(assert (! (consistent$ t$ ):named a6 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_tree$ )(?v2 A_tree$ )(?v3 Nat$ )(?v4 A_tree$ )(?v5 A_tree$ ))(= (= (innerNode$ ?v0 ?v1 ?v2 )(innerNode$ ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a7 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ )(?v2 Nat$ )(?v3 A$ ))(= (= (leaf$ ?v0 ?v1 )(leaf$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a8 ))
(assert (! (forall ((?v0 A$ )(?v1 A_tree$ ))(! (=> (not (member$ ?v0 (alphabet$ ?v1 )))(= (sibling$ ?v1 ?v0 )?v0 )):pattern ((sibling$ ?v1 ?v0 )))):named a9 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A$ ))(! (=> (= (height$ ?v0 )zero$ )(= (sibling$ ?v0 ?v1 )?v1 )):pattern ((sibling$ ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ )(?v2 Nat$ )(?v3 A$ ))(! (=> (or (less$ zero$ (height$ ?v0 ))(less$ zero$ (height$ ?v1 )))(= (sibling$ (innerNode$ ?v2 ?v0 ?v1 )?v3 )(ite (member$ ?v3 (alphabet$ ?v0 ))(sibling$ ?v0 ?v3 )(sibling$ ?v1 ?v3 )))):pattern ((sibling$ (innerNode$ ?v2 ?v0 ?v1 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A$ )(?v2 A_tree$ )(?v3 Nat$ ))(! (=> (and (less$ zero$ (height$ ?v0 ))(member$ ?v1 (alphabet$ ?v2 )))(= (sibling$ (innerNode$ ?v3 ?v2 ?v0 )?v1 )(sibling$ ?v2 ?v1 ))):pattern ((sibling$ (innerNode$ ?v3 ?v2 ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A$ )(?v2 Nat$ )(?v3 A_tree$ ))(! (=> (and (less$ zero$ (height$ ?v0 ))(member$ ?v1 (alphabet$ ?v0 )))(= (sibling$ (innerNode$ ?v2 ?v0 ?v3 )?v1 )(sibling$ ?v0 ?v1 ))):pattern ((sibling$ (innerNode$ ?v2 ?v0 ?v3 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A$ )(?v2 A_tree$ )(?v3 Nat$ ))(! (=> (and (less$ zero$ (height$ ?v0 ))(not (member$ ?v1 (alphabet$ ?v2 ))))(= (sibling$ (innerNode$ ?v3 ?v2 ?v0 )?v1 )(sibling$ ?v0 ?v1 ))):pattern ((sibling$ (innerNode$ ?v3 ?v2 ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A$ )(?v2 Nat$ )(?v3 A_tree$ ))(! (=> (and (less$ zero$ (height$ ?v0 ))(not (member$ ?v1 (alphabet$ ?v0 ))))(= (sibling$ (innerNode$ ?v2 ?v0 ?v3 )?v1 )(sibling$ ?v3 ?v1 ))):pattern ((sibling$ (innerNode$ ?v2 ?v0 ?v3 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 A_tree$ )(?v3 A_tree$ )(?v4 A_tree$ )(?v5 A$ ))(! (= (sibling$ (innerNode$ ?v0 (innerNode$ ?v1 ?v2 ?v3 )?v4 )?v5 )(ite (member$ ?v5 (alphabet$ (innerNode$ ?v1 ?v2 ?v3 )))(sibling$ (innerNode$ ?v1 ?v2 ?v3 )?v5 )(ite (member$ ?v5 (alphabet$ ?v4 ))(sibling$ ?v4 ?v5 )?v5 ))):pattern ((sibling$ (innerNode$ ?v0 (innerNode$ ?v1 ?v2 ?v3 )?v4 )?v5 )))):named a16 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 A$ )(?v3 Nat$ )(?v4 A$ )(?v5 A$ ))(! (= (sibling$ (innerNode$ ?v0 (leaf$ ?v1 ?v2 )(leaf$ ?v3 ?v4 ))?v5 )(ite (= ?v5 ?v2 )?v4 (ite (= ?v5 ?v4 )?v2 ?v5 ))):pattern ((sibling$ (innerNode$ ?v0 (leaf$ ?v1 ?v2 )(leaf$ ?v3 ?v4 ))?v5 )))):named a17 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_tree$ )(?v2 Nat$ )(?v3 A_tree$ )(?v4 A_tree$ )(?v5 A$ ))(! (= (sibling$ (innerNode$ ?v0 ?v1 (innerNode$ ?v2 ?v3 ?v4 ))?v5 )(ite (member$ ?v5 (alphabet$ ?v1 ))(sibling$ ?v1 ?v5 )(ite (member$ ?v5 (alphabet$ (innerNode$ ?v2 ?v3 ?v4 )))(sibling$ (innerNode$ ?v2 ?v3 ?v4 )?v5 )?v5 ))):pattern ((sibling$ (innerNode$ ?v0 ?v1 (innerNode$ ?v2 ?v3 ?v4 ))?v5 )))):named a18 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_tree$ )(?v2 A_tree$ ))(! (= (consistent$ (innerNode$ ?v0 ?v1 ?v2 ))(and (consistent$ ?v1 )(and (consistent$ ?v2 )(= (inf$ (alphabet$ ?v1 )(alphabet$ ?v2 ))bot$ )))):pattern ((innerNode$ ?v0 ?v1 ?v2 )))):named a19 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ )(?v2 A$ ))(! (= (sibling$ (leaf$ ?v0 ?v1 )?v2 )?v2 ):pattern ((sibling$ (leaf$ ?v0 ?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ ))(! (= (consistent$ (leaf$ ?v0 ?v1 ))true ):pattern ((leaf$ ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ ))(! (= (height$ (leaf$ ?v0 ?v1 ))zero$ ):pattern ((leaf$ ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_tree$ ))(=> (and (forall ((?v1 Nat$ )(?v2 A$ ))(=> (= ?v0 (leaf$ ?v1 ?v2 ))false ))(forall ((?v1 Nat$ )(?v2 A_tree$ )(?v3 A_tree$ ))(=> (= ?v0 (innerNode$ ?v1 ?v2 ?v3 ))false )))false )):named a23 ))
(check-sat )
;(get-unsat-core )
