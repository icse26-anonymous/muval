;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_b_tllist_bool_fun$ 0 )
(declare-sort A_b_tllist_a_b_tllist_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_b_tllist$ (tNil$ (terminal$ B$ ))(tCons$ (thd$ A$ )(ttl$ A_b_tllist$ )))))
(declare-fun p$ (A$ A_b_tllist$ )Bool )
(declare-fun x$ ()A$ )
(declare-fun xs$ ()A_b_tllist$ )
(declare-fun tmap$ (A_a_fun$ B_b_fun$ A_b_tllist$ )A_b_tllist$ )
(declare-fun tset$ (A_b_tllist$ )A_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (A_b_tllist_bool_fun$ A_b_tllist$ )Bool )
(declare-fun is_TNil$ (A_b_tllist$ )Bool )
(declare-fun less_eq$ (A_set$ A_set$ )Bool )
(declare-fun member$a (B$ B_set$ )Bool )
(declare-fun fun_app$a (A_b_tllist_a_b_tllist_bool_fun_fun$ A_b_tllist$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$b (A_a_fun$ A$ )A$ )
(declare-fun set2_tllist$ (A_b_tllist$ )B_set$ )
(assert (! (not (p$ x$ xs$ )):named a0 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (not (is_TNil$ ?v0 ))(p$ (thd$ ?v0 )?v0 ))):named a1 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A$ ))(=> (and (not (is_TNil$ ?v0 ))(and (member$ ?v1 (tset$ (ttl$ ?v0 )))(p$ ?v1 (ttl$ ?v0 ))))(p$ ?v1 ?v0 ))):named a2 ))
(assert (! (member$ x$ (tset$ xs$ )):named a3 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (=> (is_TNil$ ?v0 )false )(=> (not (is_TNil$ ?v0 ))false ))false )):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(=> (member$ ?v0 (tset$ (ttl$ ?v1 )))(member$ ?v0 (tset$ ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (is_TNil$ ?v0 )(is_TNil$ (ttl$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (not (is_TNil$ ?v0 ))(member$ (thd$ ?v0 )(tset$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A$ ))(=> (and (not (is_TNil$ ?v0 ))(member$ ?v1 (tset$ (ttl$ ?v0 ))))(member$ ?v1 (tset$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (not (is_TNil$ ?v0 ))(= (tCons$ (thd$ ?v0 )(ttl$ ?v0 ))?v0 ))):named a9 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ ))(=> (and (= (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(and (=> (and (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(= (terminal$ ?v0 )(terminal$ ?v1 )))(=> (and (not (is_TNil$ ?v0 ))(not (is_TNil$ ?v1 )))(and (= (thd$ ?v0 )(thd$ ?v1 ))(= (ttl$ ?v0 )(ttl$ ?v1 ))))))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 A_b_tllist_a_b_tllist_bool_fun_fun$ )(?v1 A_b_tllist$ )(?v2 A_b_tllist$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_b_tllist$ )(?v4 A_b_tllist$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(and (=> (and (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(= (terminal$ ?v3 )(terminal$ ?v4 )))(=> (and (not (is_TNil$ ?v3 ))(not (is_TNil$ ?v4 )))(and (= (thd$ ?v3 )(thd$ ?v4 ))(or (fun_app$ (fun_app$a ?v0 (ttl$ ?v3 ))(ttl$ ?v4 ))(= (ttl$ ?v3 )(ttl$ ?v4 ))))))))))(= ?v1 ?v2 ))):named a11 ))
(assert (! (forall ((?v0 A_b_tllist_a_b_tllist_bool_fun_fun$ )(?v1 A_b_tllist$ )(?v2 A_b_tllist$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v1 )?v2 )(forall ((?v3 A_b_tllist$ )(?v4 A_b_tllist$ ))(=> (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(and (= (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(and (=> (and (is_TNil$ ?v3 )(is_TNil$ ?v4 ))(= (terminal$ ?v3 )(terminal$ ?v4 )))(=> (and (not (is_TNil$ ?v3 ))(not (is_TNil$ ?v4 )))(and (= (thd$ ?v3 )(thd$ ?v4 ))(fun_app$ (fun_app$a ?v0 (ttl$ ?v3 ))(ttl$ ?v4 )))))))))(= ?v1 ?v2 ))):named a12 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (thd$ (tmap$ ?v1 ?v2 ?v0 ))(fun_app$b ?v1 (thd$ ?v0 ))))):named a13 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 B$ ))(=> (and (not (is_TNil$ ?v0 ))(member$a ?v1 (set2_tllist$ (ttl$ ?v0 ))))(member$a ?v1 (set2_tllist$ ?v0 )))):named a14 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (ttl$ (tmap$ ?v1 ?v2 ?v0 ))(tmap$ ?v1 ?v2 (ttl$ ?v0 ))))):named a15 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(less_eq$ (tset$ (ttl$ ?v0 ))(tset$ ?v0 ))):named a16 ))
(check-sat )
;(get-unsat-core )
