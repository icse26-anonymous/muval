;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort C_a_tllist_bool_fun$ 0 )
(declare-sort D_b_tllist_bool_fun$ 0 )
(declare-sort C_a_tllist_c_a_tllist_bool_fun_fun$ 0 )
(declare-sort D_b_tllist_d_b_tllist_bool_fun_fun$ 0 )
(declare-codatatypes ()((C_a_tllist$ (tNil$ (terminal$ A$ ))(tCons$ (thd$ C$ )(ttl$ C_a_tllist$ )))(D_b_tllist$ (tNil$a (terminal$a B$ ))(tCons$a (thd$a D$ )(ttl$a D_b_tllist$ )))))
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun a$ ()C_d_bool_fun_fun$ )
(declare-fun b$ ()A_b_bool_fun_fun$ )
(declare-fun uu$ ()D_d_bool_fun_fun$ )
(declare-fun uua$ ()B_b_bool_fun_fun$ )
(declare-fun uub$ ()D_b_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun uuc$ ()C_c_bool_fun_fun$ )
(declare-fun uud$ ()A_a_bool_fun_fun$ )
(declare-fun uue$ ()C_a_tllist_c_a_tllist_bool_fun_fun$ )
(declare-fun transp$ (D_d_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (D_b_tllist_bool_fun$ D_b_tllist$ )Bool )
(declare-fun tfilter$ (A$ C_bool_fun$ C_a_tllist$ )C_a_tllist$ )
(declare-fun tlength$ (C_a_tllist$ )Enat$ )
(declare-fun transp$a (B_b_bool_fun_fun$ )Bool )
(declare-fun transp$b (C_c_bool_fun_fun$ )Bool )
(declare-fun transp$c (A_a_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (D_b_tllist_d_b_tllist_bool_fun_fun$ D_b_tllist$ )D_b_tllist_bool_fun$ )
(declare-fun fun_app$b (C_a_tllist_bool_fun$ C_a_tllist$ )Bool )
(declare-fun fun_app$c (C_a_tllist_c_a_tllist_bool_fun_fun$ C_a_tllist$ )C_a_tllist_bool_fun$ )
(declare-fun fun_app$d (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$e (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$f (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$g (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$h (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$i (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$j (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$k (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$l (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$m (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$n (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$o (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun tfilter$a (B$ D_bool_fun$ D_b_tllist$ )D_b_tllist$ )
(declare-fun tlength$a (D_b_tllist$ )Enat$ )
(declare-fun tllist_all2$ (C_d_bool_fun_fun$ A_b_bool_fun_fun$ C_a_tllist$ D_b_tllist$ )Bool )
(declare-fun tllist_all2$a (D_d_bool_fun_fun$ B_b_bool_fun_fun$ )D_b_tllist_d_b_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (C_c_bool_fun_fun$ A_a_bool_fun_fun$ )C_a_tllist_c_a_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (D_c_bool_fun_fun$ B_a_bool_fun_fun$ D_b_tllist$ C_a_tllist$ )Bool )
(assert (! (forall ((?v0 D_b_tllist$ )(?v1 D_b_tllist$ ))(! (= (fun_app$ (fun_app$a uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 C_a_tllist$ )(?v1 C_a_tllist$ ))(! (= (fun_app$b (fun_app$c uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uue$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$d (fun_app$e uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uu$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$f (fun_app$g uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uuc$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$h (fun_app$i uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uua$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$j (fun_app$k uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uud$ ?v0 )?v1 )))):named a5 ))
(assert (! (not (forall ((?v0 A$ )(?v1 B$ ))(=> (fun_app$h (fun_app$l b$ ?v0 )?v1 )(forall ((?v2 C_bool_fun$ )(?v3 D_bool_fun$ ))(=> (forall ((?v4 C$ )(?v5 D$ ))(=> (fun_app$d (fun_app$m a$ ?v4 )?v5 )(= (fun_app$f ?v2 ?v4 )(fun_app$d ?v3 ?v5 ))))(forall ((?v4 C_a_tllist$ )(?v5 D_b_tllist$ ))(=> (tllist_all2$ a$ b$ ?v4 ?v5 )(tllist_all2$ a$ b$ (tfilter$ ?v0 ?v2 ?v4 )(tfilter$a ?v1 ?v3 ?v5 ))))))))):named a6 ))
(assert (! (= (tllist_all2$a uu$ uua$ )uub$ ):named a7 ))
(assert (! (= (tllist_all2$b uuc$ uud$ )uue$ ):named a8 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 D_b_tllist$ )(?v4 D_d_bool_fun_fun$ )(?v5 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 D$ )(?v7 D$ ))(=> (fun_app$d (fun_app$e ?v0 ?v6 )?v7 )(fun_app$d (fun_app$e ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 B$ ))(=> (fun_app$h (fun_app$i ?v1 ?v6 )?v7 )(fun_app$h (fun_app$i ?v5 ?v6 )?v7 )))))(fun_app$ (fun_app$a (tllist_all2$a ?v4 ?v5 )?v2 )?v3 ))):named a9 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 C_a_tllist$ )(?v4 D_c_bool_fun_fun$ )(?v5 B_a_bool_fun_fun$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 D$ )(?v7 C$ ))(=> (fun_app$f (fun_app$n ?v0 ?v6 )?v7 )(fun_app$f (fun_app$n ?v4 ?v6 )?v7 )))(forall ((?v6 B$ )(?v7 A$ ))(=> (fun_app$j (fun_app$o ?v1 ?v6 )?v7 )(fun_app$j (fun_app$o ?v5 ?v6 )?v7 )))))(tllist_all2$c ?v4 ?v5 ?v2 ?v3 ))):named a10 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 C_a_tllist$ )(?v4 C_c_bool_fun_fun$ )(?v5 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 C$ )(?v7 C$ ))(=> (fun_app$f (fun_app$g ?v0 ?v6 )?v7 )(fun_app$f (fun_app$g ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$j (fun_app$k ?v1 ?v6 )?v7 )(fun_app$j (fun_app$k ?v5 ?v6 )?v7 )))))(fun_app$b (fun_app$c (tllist_all2$b ?v4 ?v5 )?v2 )?v3 ))):named a11 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 D_b_tllist$ )(?v4 C_d_bool_fun_fun$ )(?v5 A_b_bool_fun_fun$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 C$ )(?v7 D$ ))(=> (fun_app$d (fun_app$m ?v0 ?v6 )?v7 )(fun_app$d (fun_app$m ?v4 ?v6 )?v7 )))(forall ((?v6 A$ )(?v7 B$ ))(=> (fun_app$h (fun_app$l ?v1 ?v6 )?v7 )(fun_app$h (fun_app$l ?v5 ?v6 )?v7 )))))(tllist_all2$ ?v4 ?v5 ?v2 ?v3 ))):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 C_bool_fun$ )(?v2 A$ ))(! (= (tfilter$ ?v0 ?v1 (tNil$ ?v2 ))(tNil$ ?v2 )):pattern ((tfilter$ ?v0 ?v1 (tNil$ ?v2 ))))):named a13 ))
(assert (! (forall ((?v0 B$ )(?v1 D_bool_fun$ )(?v2 B$ ))(! (= (tfilter$a ?v0 ?v1 (tNil$a ?v2 ))(tNil$a ?v2 )):pattern ((tfilter$a ?v0 ?v1 (tNil$a ?v2 ))))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 C_bool_fun$ )(?v2 C$ )(?v3 C_a_tllist$ ))(! (= (tfilter$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))(ite (fun_app$f ?v1 ?v2 )(tCons$ ?v2 (tfilter$ ?v0 ?v1 ?v3 ))(tfilter$ ?v0 ?v1 ?v3 ))):pattern ((tfilter$ ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a15 ))
(assert (! (forall ((?v0 B$ )(?v1 D_bool_fun$ )(?v2 D$ )(?v3 D_b_tllist$ ))(! (= (tfilter$a ?v0 ?v1 (tCons$a ?v2 ?v3 ))(ite (fun_app$d ?v1 ?v2 )(tCons$a ?v2 (tfilter$a ?v0 ?v1 ?v3 ))(tfilter$a ?v0 ?v1 ?v3 ))):pattern ((tfilter$a ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a16 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 C_a_tllist$ ))(=> (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(= (tlength$ ?v2 )(tlength$ ?v3 )))):named a17 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 C_a_tllist$ ))(=> (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(= (tlength$a ?v2 )(tlength$ ?v3 )))):named a18 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 D_b_tllist$ ))(=> (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(= (tlength$a ?v2 )(tlength$a ?v3 )))):named a19 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 D_b_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(= (tlength$ ?v2 )(tlength$a ?v3 )))):named a20 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 D_b_tllist$ )(?v4 D_b_tllist$ ))(=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v4 )(and (transp$ ?v0 )(transp$a ?v1 ))))(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v4 ))):named a21 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 C_a_tllist$ )(?v4 C_a_tllist$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v4 )(and (transp$b ?v0 )(transp$c ?v1 ))))(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v4 ))):named a22 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))(fun_app$h (fun_app$i ?v1 ?v2 )?v3 )):pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))))):named a23 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))(fun_app$j (fun_app$o ?v1 ?v2 )?v3 )):pattern ((tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))))):named a24 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$j (fun_app$k ?v1 ?v2 )?v3 )):pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a25 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))(fun_app$h (fun_app$l ?v1 ?v2 )?v3 )):pattern ((tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))))):named a26 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 D$ )(?v3 D_b_tllist$ )(?v4 D$ )(?v5 D_b_tllist$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$d (fun_app$e ?v0 ?v2 )?v4 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a27 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 D$ )(?v3 D_b_tllist$ )(?v4 C$ )(?v5 C_a_tllist$ ))(! (= (tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))(and (fun_app$f (fun_app$n ?v0 ?v2 )?v4 )(tllist_all2$c ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))))):named a28 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 C$ )(?v3 C_a_tllist$ )(?v4 C$ )(?v5 C_a_tllist$ ))(! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$f (fun_app$g ?v0 ?v2 )?v4 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a29 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C$ )(?v3 C_a_tllist$ )(?v4 D$ )(?v5 D_b_tllist$ ))(! (= (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))(and (fun_app$d (fun_app$m ?v0 ?v2 )?v4 )(tllist_all2$ ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))))):named a30 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 D_b_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))?v3 )(exists ((?v4 B$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$h (fun_app$i ?v1 ?v2 )?v4 ))))):named a31 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 B$ )(?v3 C_a_tllist$ ))(= (tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )?v3 )(exists ((?v4 A$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$j (fun_app$o ?v1 ?v2 )?v4 ))))):named a32 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 C_a_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))?v3 )(exists ((?v4 A$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$j (fun_app$k ?v1 ?v2 )?v4 ))))):named a33 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 D_b_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )?v3 )(exists ((?v4 B$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$h (fun_app$l ?v1 ?v2 )?v4 ))))):named a34 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 B$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )(tNil$a ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$h (fun_app$i ?v1 ?v4 )?v3 ))))):named a35 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 A$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 (tNil$ ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$j (fun_app$o ?v1 ?v4 )?v3 ))))):named a36 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 A$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )(tNil$ ?v3 ))(exists ((?v4 A$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$j (fun_app$k ?v1 ?v4 )?v3 ))))):named a37 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 B$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tNil$a ?v3 ))(exists ((?v4 A$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$h (fun_app$l ?v1 ?v4 )?v3 ))))):named a38 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B$ )(?v3 D_d_bool_fun_fun$ ))(=> (fun_app$h (fun_app$i ?v0 ?v1 )?v2 )(fun_app$ (fun_app$a (tllist_all2$a ?v3 ?v0 )(tNil$a ?v1 ))(tNil$a ?v2 )))):named a39 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 A$ )(?v3 D_c_bool_fun_fun$ ))(=> (fun_app$j (fun_app$o ?v0 ?v1 )?v2 )(tllist_all2$c ?v3 ?v0 (tNil$a ?v1 )(tNil$ ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 C_c_bool_fun_fun$ ))(=> (fun_app$j (fun_app$k ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c (tllist_all2$b ?v3 ?v0 )(tNil$ ?v1 ))(tNil$ ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 B$ )(?v3 C_d_bool_fun_fun$ ))(=> (fun_app$h (fun_app$l ?v0 ?v1 )?v2 )(tllist_all2$ ?v3 ?v0 (tNil$ ?v1 )(tNil$a ?v2 )))):named a42 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 D$ )(?v3 D_b_tllist$ )(?v4 D_b_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))?v4 )(exists ((?v5 D$ )(?v6 D_b_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (fun_app$d (fun_app$e ?v0 ?v2 )?v5 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v6 )))))):named a43 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 D$ )(?v3 D_b_tllist$ )(?v4 C_a_tllist$ ))(= (tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )?v4 )(exists ((?v5 C$ )(?v6 C_a_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$f (fun_app$n ?v0 ?v2 )?v5 )(tllist_all2$c ?v0 ?v1 ?v3 ?v6 )))))):named a44 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 C$ )(?v3 C_a_tllist$ )(?v4 C_a_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))?v4 )(exists ((?v5 C$ )(?v6 C_a_tllist$ ))(and (= ?v4 (tCons$ ?v5 ?v6 ))(and (fun_app$f (fun_app$g ?v0 ?v2 )?v5 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v6 )))))):named a45 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C$ )(?v3 C_a_tllist$ )(?v4 D_b_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )?v4 )(exists ((?v5 D$ )(?v6 D_b_tllist$ ))(and (= ?v4 (tCons$a ?v5 ?v6 ))(and (fun_app$d (fun_app$m ?v0 ?v2 )?v5 )(tllist_all2$ ?v0 ?v1 ?v3 ?v6 )))))):named a46 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 D$ )(?v4 D_b_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )(tCons$a ?v3 ?v4 ))(exists ((?v5 D$ )(?v6 D_b_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (fun_app$d (fun_app$e ?v0 ?v5 )?v3 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v6 )?v4 )))))):named a47 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 B_a_bool_fun_fun$ )(?v2 D_b_tllist$ )(?v3 C$ )(?v4 C_a_tllist$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 (tCons$ ?v3 ?v4 ))(exists ((?v5 D$ )(?v6 D_b_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (fun_app$f (fun_app$n ?v0 ?v5 )?v3 )(tllist_all2$c ?v0 ?v1 ?v6 ?v4 )))))):named a48 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 C$ )(?v4 C_a_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 C$ )(?v6 C_a_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$f (fun_app$g ?v0 ?v5 )?v3 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v6 )?v4 )))))):named a49 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 D$ )(?v4 D_b_tllist$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tCons$a ?v3 ?v4 ))(exists ((?v5 C$ )(?v6 C_a_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (fun_app$d (fun_app$m ?v0 ?v5 )?v3 )(tllist_all2$ ?v0 ?v1 ?v6 ?v4 )))))):named a50 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D$ )(?v2 D$ )(?v3 B_b_bool_fun_fun$ )(?v4 D_b_tllist$ )(?v5 D_b_tllist$ ))(=> (and (fun_app$d (fun_app$e ?v0 ?v1 )?v2 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v3 )?v4 )?v5 ))(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v3 )(tCons$a ?v1 ?v4 ))(tCons$a ?v2 ?v5 )))):named a51 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D$ )(?v2 C$ )(?v3 B_a_bool_fun_fun$ )(?v4 D_b_tllist$ )(?v5 C_a_tllist$ ))(=> (and (fun_app$f (fun_app$n ?v0 ?v1 )?v2 )(tllist_all2$c ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$c ?v0 ?v3 (tCons$a ?v1 ?v4 )(tCons$ ?v2 ?v5 )))):named a52 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C$ )(?v2 C$ )(?v3 A_a_bool_fun_fun$ )(?v4 C_a_tllist$ )(?v5 C_a_tllist$ ))(=> (and (fun_app$f (fun_app$g ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v3 )?v4 )?v5 ))(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v3 )(tCons$ ?v1 ?v4 ))(tCons$ ?v2 ?v5 )))):named a53 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C$ )(?v2 D$ )(?v3 A_b_bool_fun_fun$ )(?v4 C_a_tllist$ )(?v5 D_b_tllist$ ))(=> (and (fun_app$d (fun_app$m ?v0 ?v1 )?v2 )(tllist_all2$ ?v0 ?v3 ?v4 ?v5 ))(tllist_all2$ ?v0 ?v3 (tCons$ ?v1 ?v4 )(tCons$a ?v2 ?v5 )))):named a54 ))
(assert (! (forall ((?v0 D$ )(?v1 D_b_tllist$ )(?v2 D$ )(?v3 D_b_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a55 ))
(assert (! (forall ((?v0 C$ )(?v1 C_a_tllist$ )(?v2 C$ )(?v3 C_a_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a56 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a57 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 D_b_tllist$ ))(=> (and (forall ((?v1 B$ ))(=> (= ?v0 (tNil$a ?v1 ))false ))(forall ((?v1 D$ )(?v2 D_b_tllist$ ))(=> (= ?v0 (tCons$a ?v1 ?v2 ))false )))false )):named a59 ))
(assert (! (forall ((?v0 C_a_tllist$ ))(=> (and (forall ((?v1 A$ ))(=> (= ?v0 (tNil$ ?v1 ))false ))(forall ((?v1 C$ )(?v2 C_a_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))false )))false )):named a60 ))
(check-sat )
;(get-unsat-core )
