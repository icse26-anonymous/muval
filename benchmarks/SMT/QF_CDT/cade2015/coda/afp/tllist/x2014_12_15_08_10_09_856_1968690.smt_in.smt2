;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort B_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_d_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort D_b_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_c_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_d_bool_fun_fun$ 0 )
(declare-sort C_a_bool_fun_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort D_b_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_b_tllist$ (tNil$ (terminal$ B$ ))(tCons$ (thd$ A$ )(ttl$ A_b_tllist$ )))(C_d_tllist$ (tNil$a (terminal$a D$ ))(tCons$a (thd$a C$ )(ttl$a C_d_tllist$ )))))
(declare-fun f$ ()C_a_fun$ )
(declare-fun g$ ()D_b_fun$ )
(declare-fun y$ ()B$ )
(declare-fun xs$ ()C_d_tllist$ )
(declare-fun tmap$ (C_a_fun$ D_b_fun$ C_d_tllist$ )A_b_tllist$ )
(declare-fun tmap$a (A_a_fun$ B_b_fun$ A_b_tllist$ )A_b_tllist$ )
(declare-fun tmap$b (A_c_fun$ B_d_fun$ A_b_tllist$ )C_d_tllist$ )
(declare-fun tmap$c (C_c_fun$ D_d_fun$ C_d_tllist$ )C_d_tllist$ )
(declare-fun member$ (B$ B_set$ )Bool )
(declare-fun fun_app$ (D_b_fun$ D$ )B$ )
(declare-fun is_TNil$ (A_b_tllist$ )Bool )
(declare-fun member$a (D$ D_set$ )Bool )
(declare-fun fun_app$a (B_b_fun$ B$ )B$ )
(declare-fun fun_app$b (B_d_fun$ B$ )D$ )
(declare-fun fun_app$c (D_d_fun$ D$ )D$ )
(declare-fun fun_app$d (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$e (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$f (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$g (B_d_bool_fun_fun$ B$ )D_bool_fun$ )
(declare-fun fun_app$h (D_b_bool_fun_fun$ D$ )B_bool_fun$ )
(declare-fun fun_app$i (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun is_TNil$a (C_d_tllist$ )Bool )
(declare-fun pred_tllist$ (A_bool_fun$ B_bool_fun$ A_b_tllist$ )Bool )
(declare-fun set2_tllist$ (A_b_tllist$ )B_set$ )
(declare-fun tllist_all2$ (A_a_bool_fun_fun$ B_b_bool_fun_fun$ A_b_tllist$ A_b_tllist$ )Bool )
(declare-fun pred_tllist$a (C_bool_fun$ D_bool_fun$ C_d_tllist$ )Bool )
(declare-fun set2_tllist$a (C_d_tllist$ )D_set$ )
(declare-fun tllist_all2$a (A_c_bool_fun_fun$ B_d_bool_fun_fun$ A_b_tllist$ C_d_tllist$ )Bool )
(declare-fun tllist_all2$b (C_a_bool_fun_fun$ D_b_bool_fun_fun$ C_d_tllist$ A_b_tllist$ )Bool )
(declare-fun tllist_all2$c (C_c_bool_fun_fun$ D_d_bool_fun_fun$ C_d_tllist$ C_d_tllist$ )Bool )
(assert (! (not (= (= (tmap$ f$ g$ xs$ )(tNil$ y$ ))(exists ((?v0 D$ ))(and (= xs$ (tNil$a ?v0 ))(= (fun_app$ g$ ?v0 )y$ ))))):named a0 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a1 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (tmap$a ?v0 ?v1 (tNil$ ?v2 ))(tNil$ (fun_app$a ?v1 ?v2 ))):pattern ((tmap$a ?v0 ?v1 (tNil$ ?v2 ))))):named a3 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 B$ ))(! (= (tmap$b ?v0 ?v1 (tNil$ ?v2 ))(tNil$a (fun_app$b ?v1 ?v2 ))):pattern ((tmap$b ?v0 ?v1 (tNil$ ?v2 ))))):named a4 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (tmap$c ?v0 ?v1 (tNil$a ?v2 ))(tNil$a (fun_app$c ?v1 ?v2 ))):pattern ((tmap$c ?v0 ?v1 (tNil$a ?v2 ))))):named a5 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 D$ ))(! (= (tmap$ ?v0 ?v1 (tNil$a ?v2 ))(tNil$ (fun_app$ ?v1 ?v2 ))):pattern ((tmap$ ?v0 ?v1 (tNil$a ?v2 ))))):named a6 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B$ ))(! (= (pred_tllist$ ?v0 ?v1 (tNil$ ?v2 ))(fun_app$d ?v1 ?v2 )):pattern ((pred_tllist$ ?v0 ?v1 (tNil$ ?v2 ))))):named a7 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 D_bool_fun$ )(?v2 D$ ))(! (= (pred_tllist$a ?v0 ?v1 (tNil$a ?v2 ))(fun_app$e ?v1 ?v2 )):pattern ((pred_tllist$a ?v0 ?v1 (tNil$a ?v2 ))))):named a8 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 C_d_tllist$ ))(= (ttl$a (tmap$c ?v0 ?v1 ?v2 ))(tmap$c ?v0 ?v1 (ttl$a ?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 A_b_tllist$ ))(= (ttl$a (tmap$b ?v0 ?v1 ?v2 ))(tmap$b ?v0 ?v1 (ttl$ ?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ ))(= (ttl$ (tmap$a ?v0 ?v1 ?v2 ))(tmap$a ?v0 ?v1 (ttl$ ?v2 )))):named a11 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 C_d_tllist$ ))(= (ttl$ (tmap$ ?v0 ?v1 ?v2 ))(tmap$ ?v0 ?v1 (ttl$a ?v2 )))):named a12 ))
(assert (! (forall ((?v0 B$ ))(member$ ?v0 (set2_tllist$ (tNil$ ?v0 )))):named a13 ))
(assert (! (forall ((?v0 D$ ))(member$a ?v0 (set2_tllist$a (tNil$a ?v0 )))):named a14 ))
(assert (! (forall ((?v0 B$ ))(! (= (terminal$ (tNil$ ?v0 ))?v0 ):pattern ((tNil$ ?v0 )))):named a15 ))
(assert (! (forall ((?v0 D$ ))(! (= (terminal$a (tNil$a ?v0 ))?v0 ):pattern ((tNil$a ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ ))(= (is_TNil$ (tmap$a ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a17 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 A_b_tllist$ ))(= (is_TNil$a (tmap$b ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a18 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 C_d_tllist$ ))(= (is_TNil$a (tmap$c ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a19 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 C_d_tllist$ ))(= (is_TNil$ (tmap$ ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a20 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$ ?v3 ))(fun_app$d (fun_app$f ?v1 ?v2 )?v3 )):pattern ((tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$ ?v3 ))))):named a21 ))
(assert (! (forall ((?v0 A_c_bool_fun_fun$ )(?v1 B_d_bool_fun_fun$ )(?v2 B$ )(?v3 D$ ))(! (= (tllist_all2$a ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))(fun_app$e (fun_app$g ?v1 ?v2 )?v3 )):pattern ((tllist_all2$a ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))))):named a22 ))
(assert (! (forall ((?v0 C_a_bool_fun_fun$ )(?v1 D_b_bool_fun_fun$ )(?v2 D$ )(?v3 B$ ))(! (= (tllist_all2$b ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))(fun_app$d (fun_app$h ?v1 ?v2 )?v3 )):pattern ((tllist_all2$b ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))))):named a23 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$a ?v3 ))(fun_app$e (fun_app$i ?v1 ?v2 )?v3 )):pattern ((tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$a ?v3 ))))):named a24 ))
(assert (! (forall ((?v0 B$ ))(! (= (ttl$ (tNil$ ?v0 ))(tNil$ ?v0 )):pattern ((tNil$ ?v0 )))):named a25 ))
(assert (! (forall ((?v0 D$ ))(! (= (ttl$a (tNil$a ?v0 ))(tNil$a ?v0 )):pattern ((tNil$a ?v0 )))):named a26 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(= (terminal$a (ttl$a ?v0 ))(terminal$a ?v0 ))):named a27 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(= (terminal$ (ttl$ ?v0 ))(terminal$ ?v0 ))):named a28 ))
(check-sat )
;(get-unsat-core )
