;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_b_prod_set$ 0 )
(declare-sort C_d_prod_set$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_b_prod_fun$ 0 )
(declare-sort A_b_prod_a_fun$ 0 )
(declare-sort A_b_prod_b_fun$ 0 )
(declare-sort B_a_b_prod_fun$ 0 )
(declare-sort C_c_d_prod_fun$ 0 )
(declare-sort C_d_prod_c_fun$ 0 )
(declare-sort C_d_prod_d_fun$ 0 )
(declare-sort D_c_d_prod_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort A_b_prod_bool_fun$ 0 )
(declare-sort C_d_prod_bool_fun$ 0 )
(declare-sort A_b_prod_llist_set$ 0 )
(declare-sort A_b_prod_a_b_prod_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_fun$ 0 )
(declare-sort A_b_prod_llist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_set$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_set$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_set$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_set$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_set$ 0 )
(declare-sort A_b_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_llist_a_llist_prod_tllist_set$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_b_prod_tllist_set$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_c_d_prod_tllist_set$ 0 )
(declare-sort C_d_prod_a_b_prod_llist_a_llist_prod_tllist_set$ 0 )
(declare-sort A_b_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_b_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_c_d_prod_tllist_bool_fun$ 0 )
(declare-sort C_d_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist_set$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ 0 )
(declare-sort A_b_prod$ 0)
(declare-fun fst$ (A_b_prod$)A$)
(declare-fun snd$ (A_b_prod$)B$)
(declare-fun pair$ (A$ B$ )A_b_prod$)
(declare-codatatypes ()((A_b_prod_llist$ (lNil$ )(lCons$ (lhd$ A_b_prod$ )(ltl$ A_b_prod_llist$ )))(A_llist$ (lNil$a )(lCons$a (lhd$a A$ )(ltl$a A_llist$ )))))
(declare-sort C_d_prod$ 0)
(declare-fun fst$a (C_d_prod$)C$)
(declare-fun snd$a (C_d_prod$)D$)
(declare-fun pair$a (C$ D$ )C_d_prod$)
(declare-codatatypes ()((A_b_prod_c_d_prod_tllist$ (tNil$ (terminal$ C_d_prod$ ))(tCons$ (thd$ A_b_prod$ )(ttl$ A_b_prod_c_d_prod_tllist$ )))(B_d_tllist$ (tNil$a (terminal$a D$ ))(tCons$a (thd$a B$ )(ttl$a B_d_tllist$ )))(B_llist$ (lNil$b )(lCons$b (lhd$b B$ )(ltl$b B_llist$ )))(A_c_tllist$ (tNil$b (terminal$b C$ ))(tCons$b (thd$b A$ )(ttl$b A_c_tllist$ )))(A_b_prod_a_b_prod_tllist$ (tNil$c (terminal$c A_b_prod$ ))(tCons$c (thd$c A_b_prod$ )(ttl$c A_b_prod_a_b_prod_tllist$ )))(C_d_prod_llist$ (lNil$c )(lCons$c (lhd$c C_d_prod$ )(ltl$c C_d_prod_llist$ )))(C_d_prod_a_b_prod_tllist$ (tNil$d (terminal$d A_b_prod$ ))(tCons$d (thd$d C_d_prod$ )(ttl$d C_d_prod_a_b_prod_tllist$ )))(C_d_prod_c_d_prod_tllist$ (tNil$e (terminal$e C_d_prod$ ))(tCons$e (thd$e C_d_prod$ )(ttl$e C_d_prod_c_d_prod_tllist$ )))(A_a_tllist$ (tNil$f (terminal$f A$ ))(tCons$f (thd$f A$ )(ttl$f A_a_tllist$ )))))
(declare-sort A_b_prod_llist_a_llist_prod$ 0)
(declare-fun fst$b (A_b_prod_llist_a_llist_prod$)A_b_prod_llist$)
(declare-fun snd$b (A_b_prod_llist_a_llist_prod$)A_llist$)
(declare-fun pair$b (A_b_prod_llist$ A_llist$ )A_b_prod_llist_a_llist_prod$)
(declare-codatatypes ()((A_b_prod_llist_a_llist_prod_llist$ (lNil$d )(lCons$d (lhd$d A_b_prod_llist_a_llist_prod$ )(ltl$d A_b_prod_llist_a_llist_prod_llist$ )))(A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ (tNil$g (terminal$g C_d_prod$ ))(tCons$g (thd$g A_b_prod_llist_a_llist_prod$ )(ttl$g A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )))(A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ (tNil$h (terminal$h A_b_prod$ ))(tCons$h (thd$h A_b_prod_llist_a_llist_prod$ )(ttl$h A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )))(C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ (tNil$i (terminal$i A_b_prod_llist_a_llist_prod$ ))(tCons$i (thd$i C_d_prod$ )(ttl$i C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )))(A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ (tNil$j (terminal$j A_b_prod_llist_a_llist_prod$ ))(tCons$j (thd$j A_b_prod$ )(ttl$j A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ )))(B_b_tllist$ (tNil$k (terminal$k B$ ))(tCons$k (thd$k B$ )(ttl$k B_b_tllist$ )))(A_a_b_prod_llist_tllist$ (tNil$l (terminal$l A_b_prod_llist$ ))(tCons$l (thd$l A$ )(ttl$l A_a_b_prod_llist_tllist$ )))(B_a_llist_tllist$ (tNil$m (terminal$m A_llist$ ))(tCons$m (thd$m B$ )(ttl$m B_a_llist_tllist$ )))(C_a_b_prod_llist_tllist$ (tNil$n (terminal$n A_b_prod_llist$ ))(tCons$n (thd$n C$ )(ttl$n C_a_b_prod_llist_tllist$ )))(D_a_llist_tllist$ (tNil$o (terminal$o A_llist$ ))(tCons$o (thd$o D$ )(ttl$o D_a_llist_tllist$ )))(A_b_prod_llist_a_tllist$ (tNil$p (terminal$p A$ ))(tCons$p (thd$p A_b_prod_llist$ )(ttl$p A_b_prod_llist_a_tllist$ )))(A_llist_b_tllist$ (tNil$q (terminal$q B$ ))(tCons$q (thd$q A_llist$ )(ttl$q A_llist_b_tllist$ )))(A_b_prod_llist_c_tllist$ (tNil$r (terminal$r C$ ))(tCons$r (thd$r A_b_prod_llist$ )(ttl$r A_b_prod_llist_c_tllist$ )))(A_llist_d_tllist$ (tNil$s (terminal$s D$ ))(tCons$s (thd$s A_llist$ )(ttl$s A_llist_d_tllist$ )))(A_b_prod_llist_a_b_prod_llist_tllist$ (tNil$t (terminal$t A_b_prod_llist$ ))(tCons$t (thd$t A_b_prod_llist$ )(ttl$t A_b_prod_llist_a_b_prod_llist_tllist$ )))(A_llist_a_llist_tllist$ (tNil$u (terminal$u A_llist$ ))(tCons$u (thd$u A_llist$ )(ttl$u A_llist_a_llist_tllist$ )))(A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ (tNil$v (terminal$v A_b_prod_llist_a_llist_prod$ ))(tCons$v (thd$v A_b_prod_llist_a_llist_prod$ )(ttl$v A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ )))(C_a_tllist$ (tNil$w (terminal$w A$ ))(tCons$w (thd$w C$ )(ttl$w C_a_tllist$ )))(D_b_tllist$ (tNil$x (terminal$x B$ ))(tCons$x (thd$x D$ )(ttl$x D_b_tllist$ )))(C_c_tllist$ (tNil$y (terminal$y C$ ))(tCons$y (thd$y C$ )(ttl$y C_c_tllist$ )))(D_d_tllist$ (tNil$z (terminal$z D$ ))(tCons$z (thd$z D$ )(ttl$z D_d_tllist$ )))))
(declare-fun a$ ()A_llist$ )
(declare-fun b$ ()C$ )
(declare-fun y$ ()A_b_bool_fun_fun$ )
(declare-fun aa$ ()B_llist$ )
(declare-fun ba$ ()D$ )
(declare-fun bb$ ()A_b_prod_c_d_prod_tllist$ )
(declare-fun uu$ ()A_b_prod_llist_bool_fun$ )
(declare-fun ya$ ()C_d_bool_fun_fun$ )
(declare-fun grp$ (A_b_prod_llist_set$ A_b_prod_llist_a_llist_fun$ )A_b_prod_llist_a_llist_bool_fun_fun$ )
(declare-fun uua$ ()A_b_prod_a_fun$ )
(declare-fun uub$ ()A_b_prod_b_fun$ )
(declare-fun uuc$ ()C_d_prod_d_fun$ )
(declare-fun uud$ ()C_d_prod_c_fun$ )
(declare-fun uue$ ()B_b_fun$ )
(declare-fun uuf$ ()D_d_fun$ )
(declare-fun uug$ ()A_a_fun$ )
(declare-fun uuh$ ()C_c_fun$ )
(declare-fun uui$ ()A_b_prod_a_b_prod_fun$ )
(declare-fun uuj$ (Bool A_b_prod_llist_a_llist_bool_fun_fun$ )A_b_prod_llist_a_llist_bool_fun_fun$ )
(declare-fun uuk$ (Bool A_b_bool_fun_fun$ )A_b_bool_fun_fun$ )
(declare-fun uul$ (Bool C_d_bool_fun_fun$ )C_d_bool_fun_fun$ )
(declare-fun uum$ (A_b_bool_fun_fun$ A_b_prod_llist_a_llist_bool_fun_fun$ )A_b_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ )
(declare-fun uun$ ()A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ )
(declare-fun uuo$ ()A_b_prod_llist_a_llist_prod_a_llist_fun$ )
(declare-fun uup$ (C_d_bool_fun_fun$ A_b_prod_llist_a_llist_bool_fun_fun$ )C_d_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ )
(declare-fun uuq$ (A_b_prod_llist_a_llist_bool_fun_fun$ A_b_bool_fun_fun$ )A_b_prod_llist_a_llist_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uur$ (A_b_prod_llist_a_llist_bool_fun_fun$ C_d_bool_fun_fun$ )A_b_prod_llist_a_llist_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun uus$ (A_b_prod_llist_a_llist_bool_fun_fun$ A_b_prod_llist_a_llist_bool_fun_fun$ )A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ )
(declare-fun uut$ (A_b_bool_fun_fun$ A_b_bool_fun_fun$ )A_b_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uuu$ (C_d_bool_fun_fun$ A_b_bool_fun_fun$ )C_d_prod_a_b_prod_tllist_bool_fun$ )
(declare-fun uuv$ (C_d_bool_fun_fun$ C_d_bool_fun_fun$ )C_d_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun uuw$ (A_b_bool_fun_fun$ C_d_bool_fun_fun$ )A_b_prod_c_d_prod_tllist_bool_fun$ )
(declare-fun grp$a (A_set$ A_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun grp$b (C_set$ C_d_fun$ )C_d_bool_fun_fun$ )
(declare-fun lmap$ (A_b_prod_a_fun$ )A_b_prod_llist_a_llist_fun$ )
(declare-fun lset$ (A_b_prod_llist$ )A_b_prod_set$ )
(declare-fun tmap$ (A_b_prod_b_fun$ C_d_prod_d_fun$ A_b_prod_c_d_prod_tllist$ )B_d_tllist$ )
(declare-fun tset$ (A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun lmap$a (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$b (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun lmap$c (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$d (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$e (A_b_prod_b_fun$ A_b_prod_llist$ )B_llist$ )
(declare-fun lmap$f (B_a_b_prod_fun$ B_llist$ )A_b_prod_llist$ )
(declare-fun lmap$g (A_a_b_prod_fun$ A_llist$ )A_b_prod_llist$ )
(declare-fun lmap$h (A_b_prod_a_b_prod_fun$ A_b_prod_llist$ )A_b_prod_llist$ )
(declare-fun lset$a (B_llist$ )B_set$ )
(declare-fun lset$b (A_llist$ )A_set$ )
(declare-fun lset$c (C_d_prod_llist$ )C_d_prod_set$ )
(declare-fun lset$d (A_b_prod_llist_a_llist_prod_llist$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun tmap$a (A_b_prod_a_fun$ C_d_prod_c_fun$ A_b_prod_c_d_prod_tllist$ )A_c_tllist$ )
(declare-fun tmap$b (B_b_fun$ D_d_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun tmap$c (B_a_fun$ D_c_fun$ B_d_tllist$ )A_c_tllist$ )
(declare-fun tmap$d (A_b_fun$ C_d_fun$ A_c_tllist$ )B_d_tllist$ )
(declare-fun tmap$e (A_a_fun$ C_c_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tmap$f (A_b_prod_a_fun$ A_b_prod_a_fun$ A_b_prod_a_b_prod_tllist$ )A_a_tllist$ )
(declare-fun tmap$g (B_a_b_prod_fun$ D_c_d_prod_fun$ B_d_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$h (A_a_b_prod_fun$ C_c_d_prod_fun$ A_c_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$i (A_b_prod_a_b_prod_fun$ C_d_prod_c_d_prod_fun$ A_b_prod_c_d_prod_tllist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tmap$j (A_b_prod_b_fun$ A_b_prod_b_fun$ A_b_prod_a_b_prod_tllist$ )B_b_tllist$ )
(declare-fun tmap$k (A_b_prod_a_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_a_b_prod_llist_tllist$ )
(declare-fun tmap$l (A_b_prod_b_fun$ A_b_prod_llist_a_llist_prod_a_llist_fun$ A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ )B_a_llist_tllist$ )
(declare-fun tmap$m (C_d_prod_c_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )C_a_b_prod_llist_tllist$ )
(declare-fun tmap$n (C_d_prod_d_fun$ A_b_prod_llist_a_llist_prod_a_llist_fun$ C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )D_a_llist_tllist$ )
(declare-fun tmap$o (A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ A_b_prod_a_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )A_b_prod_llist_a_tllist$ )
(declare-fun tmap$p (A_b_prod_llist_a_llist_prod_a_llist_fun$ A_b_prod_b_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )A_llist_b_tllist$ )
(declare-fun tmap$q (A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ C_d_prod_c_fun$ A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )A_b_prod_llist_c_tllist$ )
(declare-fun tmap$r (A_b_prod_llist_a_llist_prod_a_llist_fun$ C_d_prod_d_fun$ A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )A_llist_d_tllist$ )
(declare-fun tmap$s (A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_b_prod_llist_a_b_prod_llist_tllist$ )
(declare-fun tmap$t (A_b_prod_llist_a_llist_prod_a_llist_fun$ A_b_prod_llist_a_llist_prod_a_llist_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_llist_a_llist_tllist$ )
(declare-fun tmap$u (C_d_prod_c_fun$ A_b_prod_a_fun$ C_d_prod_a_b_prod_tllist$ )C_a_tllist$ )
(declare-fun tmap$v (C_d_prod_d_fun$ A_b_prod_b_fun$ C_d_prod_a_b_prod_tllist$ )D_b_tllist$ )
(declare-fun tmap$w (C_d_prod_c_fun$ C_d_prod_c_fun$ C_d_prod_c_d_prod_tllist$ )C_c_tllist$ )
(declare-fun tmap$x (C_d_prod_d_fun$ C_d_prod_d_fun$ C_d_prod_c_d_prod_tllist$ )D_d_tllist$ )
(declare-fun tset$a (A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun tset$b (A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun tset$c (C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$d (C_d_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$e (C_d_prod_a_b_prod_tllist$ )C_d_prod_set$ )
(declare-fun tset$f (A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$g (A_b_prod_c_d_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$h (A_b_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun tset$i (B_d_tllist$ )B_set$ )
(declare-fun tset$j (A_c_tllist$ )A_set$ )
(declare-fun tset$k (A_a_tllist$ )A_set$ )
(declare-fun member$ (A_b_prod$ A_b_prod_set$ )Bool )
(declare-fun collect$ (A_b_prod_bool_fun$ )A_b_prod_set$ )
(declare-fun fun_app$ (A_b_prod_llist_bool_fun$ A_b_prod_llist$ )Bool )
(declare-fun less_eq$ (A_b_prod_set$ A_b_prod_set$ )Bool )
(declare-fun member$a (C_d_prod$ C_d_prod_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (C$ C_set$ )Bool )
(declare-fun member$d (B$ B_set$ )Bool )
(declare-fun member$e (D$ D_set$ )Bool )
(declare-fun member$f (A_b_prod_llist_a_llist_prod$ A_b_prod_llist_a_llist_prod_set$ )Bool )
(declare-fun member$g (A_b_prod_llist$ A_b_prod_llist_set$ )Bool )
(declare-fun member$h (A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ A_b_prod_a_b_prod_llist_a_llist_prod_tllist_set$ )Bool )
(declare-fun member$i (C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ C_d_prod_a_b_prod_llist_a_llist_prod_tllist_set$ )Bool )
(declare-fun member$j (A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ A_b_prod_llist_a_llist_prod_a_b_prod_tllist_set$ )Bool )
(declare-fun member$k (A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ A_b_prod_llist_a_llist_prod_c_d_prod_tllist_set$ )Bool )
(declare-fun member$l (A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist_set$ )Bool )
(declare-fun member$m (A_b_prod_a_b_prod_tllist$ A_b_prod_a_b_prod_tllist_set$ )Bool )
(declare-fun member$n (C_d_prod_a_b_prod_tllist$ C_d_prod_a_b_prod_tllist_set$ )Bool )
(declare-fun member$o (C_d_prod_c_d_prod_tllist$ C_d_prod_c_d_prod_tllist_set$ )Bool )
(declare-fun member$p (A_b_prod_c_d_prod_tllist$ A_b_prod_c_d_prod_tllist_set$ )Bool )
(declare-fun collect$a (A_b_prod_llist_a_llist_prod_bool_fun$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun collect$b (C_d_prod_bool_fun$ )C_d_prod_set$ )
(declare-fun collect$c (A_b_prod_llist_bool_fun$ )A_b_prod_llist_set$ )
(declare-fun collect$d (A_b_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ )A_b_prod_a_b_prod_llist_a_llist_prod_tllist_set$ )
(declare-fun collect$e (C_d_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ )C_d_prod_a_b_prod_llist_a_llist_prod_tllist_set$ )
(declare-fun collect$f (A_b_prod_llist_a_llist_prod_a_b_prod_tllist_bool_fun$ )A_b_prod_llist_a_llist_prod_a_b_prod_tllist_set$ )
(declare-fun collect$g (A_b_prod_llist_a_llist_prod_c_d_prod_tllist_bool_fun$ )A_b_prod_llist_a_llist_prod_c_d_prod_tllist_set$ )
(declare-fun collect$h (A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ )A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist_set$ )
(declare-fun collect$i (A_b_prod_a_b_prod_tllist_bool_fun$ )A_b_prod_a_b_prod_tllist_set$ )
(declare-fun collect$j (C_d_prod_a_b_prod_tllist_bool_fun$ )C_d_prod_a_b_prod_tllist_set$ )
(declare-fun collect$k (C_d_prod_c_d_prod_tllist_bool_fun$ )C_d_prod_c_d_prod_tllist_set$ )
(declare-fun collect$l (A_b_prod_c_d_prod_tllist_bool_fun$ )A_b_prod_c_d_prod_tllist_set$ )
(declare-fun fun_app$a (A_b_prod_llist_a_llist_prod_a_llist_fun$ A_b_prod_llist_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$b (C_d_prod_d_fun$ C_d_prod$ )D$ )
(declare-fun fun_app$c (A_b_prod_b_fun$ A_b_prod$ )B$ )
(declare-fun fun_app$d (A_b_prod_llist_a_llist_prod_a_b_prod_llist_fun$ A_b_prod_llist_a_llist_prod$ )A_b_prod_llist$ )
(declare-fun fun_app$e (C_d_prod_c_fun$ C_d_prod$ )C$ )
(declare-fun fun_app$f (A_b_prod_a_fun$ A_b_prod$ )A$ )
(declare-fun fun_app$g (A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ )Bool )
(declare-fun fun_app$h (A_b_prod_llist_a_llist_prod_c_d_prod_tllist_bool_fun$ A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )Bool )
(declare-fun fun_app$i (A_b_prod_llist_a_llist_prod_a_b_prod_tllist_bool_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$j (C_d_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )Bool )
(declare-fun fun_app$k (C_d_prod_c_d_prod_tllist_bool_fun$ C_d_prod_c_d_prod_tllist$ )Bool )
(declare-fun fun_app$l (C_d_prod_a_b_prod_tllist_bool_fun$ C_d_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$m (A_b_prod_a_b_prod_llist_a_llist_prod_tllist_bool_fun$ A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ )Bool )
(declare-fun fun_app$n (A_b_prod_c_d_prod_tllist_bool_fun$ A_b_prod_c_d_prod_tllist$ )Bool )
(declare-fun fun_app$o (A_b_prod_a_b_prod_tllist_bool_fun$ A_b_prod_a_b_prod_tllist$ )Bool )
(declare-fun fun_app$p (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$q (A_b_prod_llist_a_llist_bool_fun_fun$ A_b_prod_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$r (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$s (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$t (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$u (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$v (A_b_prod_a_b_prod_fun$ A_b_prod$ )A_b_prod$ )
(declare-fun fun_app$w (D_d_fun$ D$ )D$ )
(declare-fun fun_app$x (C_c_fun$ C$ )C$ )
(declare-fun fun_app$y (B_b_fun$ B$ )B$ )
(declare-fun fun_app$z (A_a_fun$ A$ )A$ )
(declare-fun less_eq$a (A_b_prod_llist_a_llist_prod_set$ A_b_prod_llist_a_llist_prod_set$ )Bool )
(declare-fun less_eq$b (C_d_prod_set$ C_d_prod_set$ )Bool )
(declare-fun case_prod$ (A_b_bool_fun_fun$ )A_b_prod_bool_fun$ )
(declare-fun conversep$ (A_b_prod_llist_a_llist_bool_fun_fun$ )A_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun fun_app$aa (A_llist_a_b_prod_llist_bool_fun_fun$ A_llist$ )A_b_prod_llist_bool_fun$ )
(declare-fun fun_app$ab (D_c_fun$ D$ )C$ )
(declare-fun fun_app$ac (C_d_fun$ C$ )D$ )
(declare-fun fun_app$ad (A_b_prod_llist_a_llist_fun$ A_b_prod_llist$ )A_llist$ )
(declare-fun fun_app$ae (D_c_d_prod_fun$ D$ )C_d_prod$ )
(declare-fun fun_app$af (C_c_d_prod_fun$ C$ )C_d_prod$ )
(declare-fun fun_app$ag (C_d_prod_c_d_prod_fun$ C_d_prod$ )C_d_prod$ )
(declare-fun fun_app$ah (A_b_fun$ A$ )B$ )
(declare-fun fun_app$ai (B_a_fun$ B$ )A$ )
(declare-fun fun_app$aj (B_a_b_prod_fun$ B$ )A_b_prod$ )
(declare-fun fun_app$ak (A_a_b_prod_fun$ A$ )A_b_prod$ )
(declare-fun fun_app$al (A_b_prod_llist_a_llist_prod_bool_fun$ A_b_prod_llist_a_llist_prod$ )Bool )
(declare-fun fun_app$am (A_b_prod_bool_fun$ A_b_prod$ )Bool )
(declare-fun fun_app$an (C_d_prod_bool_fun$ C_d_prod$ )Bool )
(declare-fun fun_app$ao (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$ap (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$aq (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$ar (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$as (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun case_prod$a (A_b_prod_llist_a_llist_bool_fun_fun$ )A_b_prod_llist_a_llist_prod_bool_fun$ )
(declare-fun case_prod$b (C_d_bool_fun_fun$ )C_d_prod_bool_fun$ )
(declare-fun conversep$a (A_llist_a_b_prod_llist_bool_fun_fun$ )A_b_prod_llist_a_llist_bool_fun_fun$ )
(declare-fun set2_tllist$ (A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ A_b_prod_llist_a_llist_bool_fun_fun$ A_a_b_prod_llist_tllist$ B_a_llist_tllist$ )Bool )
(declare-fun set2_tllist$a (A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun set2_tllist$b (A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$c (C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun set2_tllist$d (C_d_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun set2_tllist$e (C_d_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$f (A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_b_prod_llist_a_llist_prod_set$ )
(declare-fun set2_tllist$g (A_b_prod_c_d_prod_tllist$ )C_d_prod_set$ )
(declare-fun set2_tllist$h (A_b_prod_a_b_prod_tllist$ )A_b_prod_set$ )
(declare-fun set2_tllist$i (A_c_tllist$ )C_set$ )
(declare-fun set2_tllist$j (B_d_tllist$ )D_set$ )
(declare-fun tllist_all2$a (C_d_bool_fun_fun$ A_b_prod_llist_a_llist_bool_fun_fun$ C_a_b_prod_llist_tllist$ D_a_llist_tllist$ )Bool )
(declare-fun tllist_all2$b (A_b_prod_llist_a_llist_bool_fun_fun$ A_b_bool_fun_fun$ A_b_prod_llist_a_tllist$ A_llist_b_tllist$ )Bool )
(declare-fun tllist_all2$c (A_b_prod_llist_a_llist_bool_fun_fun$ C_d_bool_fun_fun$ A_b_prod_llist_c_tllist$ A_llist_d_tllist$ )Bool )
(declare-fun tllist_all2$d (A_b_prod_llist_a_llist_bool_fun_fun$ A_b_prod_llist_a_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_tllist$ A_llist_a_llist_tllist$ )Bool )
(declare-fun tllist_all2$e (A_b_bool_fun_fun$ A_b_bool_fun_fun$ A_a_tllist$ B_b_tllist$ )Bool )
(declare-fun tllist_all2$f (C_d_bool_fun_fun$ A_b_bool_fun_fun$ C_a_tllist$ D_b_tllist$ )Bool )
(declare-fun tllist_all2$g (C_d_bool_fun_fun$ C_d_bool_fun_fun$ C_c_tllist$ D_d_tllist$ )Bool )
(declare-fun tllist_all2$h (A_b_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_d_tllist$ )Bool )
(declare-fun llist_of_tllist$ (A_b_prod_c_d_prod_tllist$ )A_b_prod_llist$ )
(declare-fun tllist_of_llist$ (D$ B_llist$ )B_d_tllist$ )
(declare-fun llist_of_tllist$a (A_b_prod_a_b_prod_tllist$ )A_b_prod_llist$ )
(declare-fun llist_of_tllist$b (C_d_prod_a_b_prod_tllist$ )C_d_prod_llist$ )
(declare-fun llist_of_tllist$c (C_d_prod_c_d_prod_tllist$ )C_d_prod_llist$ )
(declare-fun llist_of_tllist$d (A_a_tllist$ )A_llist$ )
(declare-fun llist_of_tllist$e (B_d_tllist$ )B_llist$ )
(declare-fun llist_of_tllist$f (A_c_tllist$ )A_llist$ )
(declare-fun llist_of_tllist$g (A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )A_b_prod_llist_a_llist_prod_llist$ )
(declare-fun llist_of_tllist$h (A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )A_b_prod_llist_a_llist_prod_llist$ )
(declare-fun llist_of_tllist$i (C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )C_d_prod_llist$ )
(declare-fun llist_of_tllist$j (A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ )A_b_prod_llist$ )
(declare-fun tllist_of_llist$a (C$ A_llist$ )A_c_tllist$ )
(declare-fun tllist_of_llist$b (A_b_prod$ A_b_prod_llist$ )A_b_prod_a_b_prod_tllist$ )
(declare-fun tllist_of_llist$c (A_b_prod$ C_d_prod_llist$ )C_d_prod_a_b_prod_tllist$ )
(declare-fun tllist_of_llist$d (C_d_prod$ C_d_prod_llist$ )C_d_prod_c_d_prod_tllist$ )
(declare-fun tllist_of_llist$e (A$ A_llist$ )A_a_tllist$ )
(declare-fun tllist_of_llist$f (C_d_prod$ A_b_prod_llist$ )A_b_prod_c_d_prod_tllist$ )
(declare-fun tllist_of_llist$g (C_d_prod$ A_b_prod_llist_a_llist_prod_llist$ )A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ )
(declare-fun tllist_of_llist$h (A_b_prod$ A_b_prod_llist_a_llist_prod_llist$ )A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ )
(declare-fun tllist_of_llist$i (A_b_prod_llist_a_llist_prod$ C_d_prod_llist$ )C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ )
(assert (! (forall ((?v0 A_b_prod_llist$ ))(! (= (fun_app$ uu$ ?v0 )(less_eq$ (lset$ ?v0 )(collect$ (case_prod$ y$ )))):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_prod$ ))(! (= (fun_app$a uuo$ ?v0 )(snd$b ?v0 )):pattern ((fun_app$a uuo$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$b uuc$ ?v0 )(snd$a ?v0 )):pattern ((fun_app$b uuc$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$c uub$ ?v0 )(snd$ ?v0 )):pattern ((fun_app$c uub$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_prod$ ))(! (= (fun_app$d uun$ ?v0 )(fst$b ?v0 )):pattern ((fun_app$d uun$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 C_d_prod$ ))(! (= (fun_app$e uud$ ?v0 )(fst$a ?v0 )):pattern ((fun_app$e uud$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$f uua$ ?v0 )(fst$ ?v0 )):pattern ((fun_app$f uua$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(! (= (fun_app$g (uus$ ?v0 ?v1 )?v2 )(and (less_eq$a (tset$ ?v2 )(collect$a (case_prod$a ?v0 )))(less_eq$a (set2_tllist$ ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$g (uus$ ?v0 ?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ ))(! (= (fun_app$h (uur$ ?v0 ?v1 )?v2 )(and (less_eq$a (tset$a ?v2 )(collect$a (case_prod$a ?v0 )))(less_eq$b (set2_tllist$a ?v2 )(collect$b (case_prod$b ?v1 ))))):pattern ((fun_app$h (uur$ ?v0 ?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ ))(! (= (fun_app$i (uuq$ ?v0 ?v1 )?v2 )(and (less_eq$a (tset$b ?v2 )(collect$a (case_prod$a ?v0 )))(less_eq$ (set2_tllist$b ?v2 )(collect$ (case_prod$ ?v1 ))))):pattern ((fun_app$i (uuq$ ?v0 ?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(! (= (fun_app$j (uup$ ?v0 ?v1 )?v2 )(and (less_eq$b (tset$c ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$a (set2_tllist$c ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$j (uup$ ?v0 ?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_d_prod_c_d_prod_tllist$ ))(! (= (fun_app$k (uuv$ ?v0 ?v1 )?v2 )(and (less_eq$b (tset$d ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$b (set2_tllist$d ?v2 )(collect$b (case_prod$b ?v1 ))))):pattern ((fun_app$k (uuv$ ?v0 ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_d_prod_a_b_prod_tllist$ ))(! (= (fun_app$l (uuu$ ?v0 ?v1 )?v2 )(and (less_eq$b (tset$e ?v2 )(collect$b (case_prod$b ?v0 )))(less_eq$ (set2_tllist$e ?v2 )(collect$ (case_prod$ ?v1 ))))):pattern ((fun_app$l (uuu$ ?v0 ?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(! (= (fun_app$m (uum$ ?v0 ?v1 )?v2 )(and (less_eq$ (tset$f ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$a (set2_tllist$f ?v2 )(collect$a (case_prod$a ?v1 ))))):pattern ((fun_app$m (uum$ ?v0 ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_b_prod_c_d_prod_tllist$ ))(! (= (fun_app$n (uuw$ ?v0 ?v1 )?v2 )(and (less_eq$ (tset$g ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$b (set2_tllist$g ?v2 )(collect$b (case_prod$b ?v1 ))))):pattern ((fun_app$n (uuw$ ?v0 ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod_a_b_prod_tllist$ ))(! (= (fun_app$o (uut$ ?v0 ?v1 )?v2 )(and (less_eq$ (tset$h ?v2 )(collect$ (case_prod$ ?v0 )))(less_eq$ (set2_tllist$h ?v2 )(collect$ (case_prod$ ?v1 ))))):pattern ((fun_app$o (uut$ ?v0 ?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist$ )(?v3 A_llist$ ))(! (= (fun_app$p (fun_app$q (uuj$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$p (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$p (fun_app$q (uuj$ ?v0 ?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 Bool )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (fun_app$r (fun_app$s (uul$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$r (fun_app$s ?v1 ?v2 )?v3 ))):pattern ((fun_app$r (fun_app$s (uul$ ?v0 ?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_bool_fun_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$t (fun_app$u (uuk$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$t (fun_app$u ?v1 ?v2 )?v3 ))):pattern ((fun_app$t (fun_app$u (uuk$ ?v0 ?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_b_prod$ ))(! (= (fun_app$v uui$ ?v0 )?v0 ):pattern ((fun_app$v uui$ ?v0 )))):named a19 ))
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$w uuf$ ?v0 )?v0 ):pattern ((fun_app$w uuf$ ?v0 )))):named a20 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$x uuh$ ?v0 )?v0 ):pattern ((fun_app$x uuh$ ?v0 )))):named a21 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$y uue$ ?v0 )?v0 ):pattern ((fun_app$y uue$ ?v0 )))):named a22 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$z uug$ ?v0 )?v0 ):pattern ((fun_app$z uug$ ?v0 )))):named a23 ))
(assert (! (not (fun_app$ (fun_app$aa (conversep$ (grp$ (collect$c uu$ )(lmap$ uua$ )))a$ )(llist_of_tllist$ bb$ ))):named a24 ))
(assert (! (= (tmap$ uub$ uuc$ bb$ )(tllist_of_llist$ ba$ aa$ )):named a25 ))
(assert (! (= (tmap$a uua$ uud$ bb$ )(tllist_of_llist$a b$ a$ )):named a26 ))
(assert (! (less_eq$ (tset$g bb$ )(collect$ (case_prod$ y$ ))):named a27 ))
(assert (! (less_eq$b (set2_tllist$g bb$ )(collect$b (case_prod$b ya$ ))):named a28 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(= (llist_of_tllist$a (tllist_of_llist$b ?v0 ?v1 ))?v1 )):named a29 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 C_d_prod_llist$ ))(= (llist_of_tllist$b (tllist_of_llist$c ?v0 ?v1 ))?v1 )):named a30 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod_llist$ ))(= (llist_of_tllist$c (tllist_of_llist$d ?v0 ?v1 ))?v1 )):named a31 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(= (llist_of_tllist$d (tllist_of_llist$e ?v0 ?v1 ))?v1 )):named a32 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 A_b_prod_llist$ ))(= (llist_of_tllist$ (tllist_of_llist$f ?v0 ?v1 ))?v1 )):named a33 ))
(assert (! (forall ((?v0 D$ )(?v1 B_llist$ ))(= (llist_of_tllist$e (tllist_of_llist$ ?v0 ?v1 ))?v1 )):named a34 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist$ ))(= (llist_of_tllist$f (tllist_of_llist$a ?v0 ?v1 ))?v1 )):named a35 ))
(assert (! (forall ((?v0 D$ )(?v1 B_llist$ ))(= (tset$i (tllist_of_llist$ ?v0 ?v1 ))(lset$a ?v1 ))):named a36 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist$ ))(= (tset$j (tllist_of_llist$a ?v0 ?v1 ))(lset$b ?v1 ))):named a37 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 A_b_prod_llist$ ))(= (tset$g (tllist_of_llist$f ?v0 ?v1 ))(lset$ ?v1 ))):named a38 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_prod_llist$ ))(= (tset$d (tllist_of_llist$d ?v0 ?v1 ))(lset$c ?v1 ))):named a39 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 C_d_prod_llist$ ))(= (tset$e (tllist_of_llist$c ?v0 ?v1 ))(lset$c ?v1 ))):named a40 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist$ ))(= (tset$h (tllist_of_llist$b ?v0 ?v1 ))(lset$ ?v1 ))):named a41 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(= (tset$k (tllist_of_llist$e ?v0 ?v1 ))(lset$b ?v1 ))):named a42 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 A_b_prod_llist_a_llist_prod_llist$ ))(= (tset$a (tllist_of_llist$g ?v0 ?v1 ))(lset$d ?v1 ))):named a43 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_prod_llist_a_llist_prod_llist$ ))(= (tset$b (tllist_of_llist$h ?v0 ?v1 ))(lset$d ?v1 ))):named a44 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_prod$ )(?v1 C_d_prod_llist$ ))(= (tset$c (tllist_of_llist$i ?v0 ?v1 ))(lset$c ?v1 ))):named a45 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ ))(= (lset$ (llist_of_tllist$ ?v0 ))(tset$g ?v0 ))):named a46 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(= (lset$b (llist_of_tllist$f ?v0 ))(tset$j ?v0 ))):named a47 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(= (lset$a (llist_of_tllist$e ?v0 ))(tset$i ?v0 ))):named a48 ))
(assert (! (forall ((?v0 C_d_prod_c_d_prod_tllist$ ))(= (lset$c (llist_of_tllist$c ?v0 ))(tset$d ?v0 ))):named a49 ))
(assert (! (forall ((?v0 C_d_prod_a_b_prod_tllist$ ))(= (lset$c (llist_of_tllist$b ?v0 ))(tset$e ?v0 ))):named a50 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ ))(= (lset$ (llist_of_tllist$a ?v0 ))(tset$h ?v0 ))):named a51 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ ))(= (lset$d (llist_of_tllist$g ?v0 ))(tset$a ?v0 ))):named a52 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ ))(= (lset$d (llist_of_tllist$h ?v0 ))(tset$b ?v0 ))):named a53 ))
(assert (! (forall ((?v0 C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(= (lset$c (llist_of_tllist$i ?v0 ))(tset$c ?v0 ))):named a54 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(= (lset$ (llist_of_tllist$j ?v0 ))(tset$f ?v0 ))):named a55 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 D_d_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$b ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$ (fun_app$w ?v1 ?v2 )(lmap$a ?v0 ?v3 )))):named a56 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 D_c_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$c ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$a (fun_app$ab ?v1 ?v2 )(lmap$b ?v0 ?v3 )))):named a57 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 C_d_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$d ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$ (fun_app$ac ?v1 ?v2 )(lmap$c ?v0 ?v3 )))):named a58 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 C_c_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$e ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$a (fun_app$x ?v1 ?v2 )(lmap$d ?v0 ?v3 )))):named a59 ))
(assert (! (forall ((?v0 A_b_prod_b_fun$ )(?v1 C_d_prod_d_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$ ?v0 ?v1 (tllist_of_llist$f ?v2 ?v3 ))(tllist_of_llist$ (fun_app$b ?v1 ?v2 )(lmap$e ?v0 ?v3 )))):named a60 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 C_d_prod_c_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$a ?v0 ?v1 (tllist_of_llist$f ?v2 ?v3 ))(tllist_of_llist$a (fun_app$e ?v1 ?v2 )(fun_app$ad (lmap$ ?v0 )?v3 )))):named a61 ))
(assert (! (forall ((?v0 A_b_prod_a_fun$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$f ?v0 ?v1 (tllist_of_llist$b ?v2 ?v3 ))(tllist_of_llist$e (fun_app$f ?v1 ?v2 )(fun_app$ad (lmap$ ?v0 )?v3 )))):named a62 ))
(assert (! (forall ((?v0 B_a_b_prod_fun$ )(?v1 D_c_d_prod_fun$ )(?v2 D$ )(?v3 B_llist$ ))(= (tmap$g ?v0 ?v1 (tllist_of_llist$ ?v2 ?v3 ))(tllist_of_llist$f (fun_app$ae ?v1 ?v2 )(lmap$f ?v0 ?v3 )))):named a63 ))
(assert (! (forall ((?v0 A_a_b_prod_fun$ )(?v1 C_c_d_prod_fun$ )(?v2 C$ )(?v3 A_llist$ ))(= (tmap$h ?v0 ?v1 (tllist_of_llist$a ?v2 ?v3 ))(tllist_of_llist$f (fun_app$af ?v1 ?v2 )(lmap$g ?v0 ?v3 )))):named a64 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_fun$ )(?v1 C_d_prod_c_d_prod_fun$ )(?v2 C_d_prod$ )(?v3 A_b_prod_llist$ ))(= (tmap$i ?v0 ?v1 (tllist_of_llist$f ?v2 ?v3 ))(tllist_of_llist$f (fun_app$ag ?v1 ?v2 )(lmap$h ?v0 ?v3 )))):named a65 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(= (tmap$b uue$ uuf$ ?v0 )?v0 )):named a66 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(= (tmap$e uug$ uuh$ ?v0 )?v0 )):named a67 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 C_d_prod_d_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$ ?v6 (tset$g ?v0 ))(and (member$ ?v7 (tset$g ?v1 ))(= (fun_app$c ?v2 ?v6 )(fun_app$c ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$a ?v6 (set2_tllist$g ?v0 ))(and (member$a ?v7 (set2_tllist$g ?v1 ))(= (fun_app$b ?v4 ?v6 )(fun_app$b ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$ ?v2 ?v4 ?v0 )(tmap$ ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a68 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$ ?v6 (tset$g ?v0 ))(and (member$ ?v7 (tset$g ?v1 ))(= (fun_app$f ?v2 ?v6 )(fun_app$f ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C_d_prod$ )(?v7 C_d_prod$ ))(=> (and (member$a ?v6 (set2_tllist$g ?v0 ))(and (member$a ?v7 (set2_tllist$g ?v1 ))(= (fun_app$e ?v4 ?v6 )(fun_app$e ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$a ?v2 ?v4 ?v0 )(tmap$a ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a69 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (tset$j ?v0 ))(and (member$b ?v7 (tset$j ?v1 ))(= (fun_app$ah ?v2 ?v6 )(fun_app$ah ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$c ?v6 (set2_tllist$i ?v0 ))(and (member$c ?v7 (set2_tllist$i ?v1 ))(= (fun_app$ac ?v4 ?v6 )(fun_app$ac ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$d ?v2 ?v4 ?v0 )(tmap$d ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a70 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (tset$j ?v0 ))(and (member$b ?v7 (tset$j ?v1 ))(= (fun_app$z ?v2 ?v6 )(fun_app$z ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$c ?v6 (set2_tllist$i ?v0 ))(and (member$c ?v7 (set2_tllist$i ?v1 ))(= (fun_app$x ?v4 ?v6 )(fun_app$x ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$e ?v2 ?v4 ?v0 )(tmap$e ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a71 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$d ?v6 (tset$i ?v0 ))(and (member$d ?v7 (tset$i ?v1 ))(= (fun_app$y ?v2 ?v6 )(fun_app$y ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$e ?v6 (set2_tllist$j ?v0 ))(and (member$e ?v7 (set2_tllist$j ?v1 ))(= (fun_app$w ?v4 ?v6 )(fun_app$w ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$b ?v2 ?v4 ?v0 )(tmap$b ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a72 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ )(?v5 D_c_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$d ?v6 (tset$i ?v0 ))(and (member$d ?v7 (tset$i ?v1 ))(= (fun_app$ai ?v2 ?v6 )(fun_app$ai ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$e ?v6 (set2_tllist$j ?v0 ))(and (member$e ?v7 (set2_tllist$j ?v1 ))(= (fun_app$ab ?v4 ?v6 )(fun_app$ab ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$c ?v2 ?v4 ?v0 )(tmap$c ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a73 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ )(?v5 A_b_prod_a_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$ ?v6 (tset$h ?v0 ))(and (member$ ?v7 (tset$h ?v1 ))(= (fun_app$f ?v2 ?v6 )(fun_app$f ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$ ?v6 (set2_tllist$h ?v0 ))(and (member$ ?v7 (set2_tllist$h ?v1 ))(= (fun_app$f ?v4 ?v6 )(fun_app$f ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$f ?v2 ?v4 ?v0 )(tmap$f ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a74 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 A_b_prod_b_fun$ )(?v5 A_b_prod_b_fun$ ))(=> (and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$ ?v6 (tset$h ?v0 ))(and (member$ ?v7 (tset$h ?v1 ))(= (fun_app$c ?v2 ?v6 )(fun_app$c ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 A_b_prod$ )(?v7 A_b_prod$ ))(=> (and (member$ ?v6 (set2_tllist$h ?v0 ))(and (member$ ?v7 (set2_tllist$h ?v1 ))(= (fun_app$c ?v4 ?v6 )(fun_app$c ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$j ?v2 ?v4 ?v0 )(tmap$j ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_b_prod_fun$ )(?v3 B_a_b_prod_fun$ )(?v4 D_c_d_prod_fun$ )(?v5 D_c_d_prod_fun$ ))(=> (and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$d ?v6 (tset$i ?v0 ))(and (member$d ?v7 (tset$i ?v1 ))(= (fun_app$aj ?v2 ?v6 )(fun_app$aj ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$e ?v6 (set2_tllist$j ?v0 ))(and (member$e ?v7 (set2_tllist$j ?v1 ))(= (fun_app$ae ?v4 ?v6 )(fun_app$ae ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$g ?v2 ?v4 ?v0 )(tmap$g ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_b_prod_fun$ )(?v3 A_a_b_prod_fun$ )(?v4 C_c_d_prod_fun$ )(?v5 C_c_d_prod_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$b ?v6 (tset$j ?v0 ))(and (member$b ?v7 (tset$j ?v1 ))(= (fun_app$ak ?v2 ?v6 )(fun_app$ak ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$c ?v6 (set2_tllist$i ?v0 ))(and (member$c ?v7 (set2_tllist$i ?v1 ))(= (fun_app$af ?v4 ?v6 )(fun_app$af ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$h ?v2 ?v4 ?v0 )(tmap$h ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_b_fun$ )(?v2 A_b_prod_b_fun$ )(?v3 C_d_prod_d_fun$ )(?v4 C_d_prod_d_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$ ?v5 (tset$g ?v0 ))(= (fun_app$c ?v1 ?v5 )(fun_app$c ?v2 ?v5 ))))(forall ((?v5 C_d_prod$ ))(=> (member$a ?v5 (set2_tllist$g ?v0 ))(= (fun_app$b ?v3 ?v5 )(fun_app$b ?v4 ?v5 )))))(= (tmap$ ?v1 ?v3 ?v0 )(tmap$ ?v2 ?v4 ?v0 )))):named a78 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 C_d_prod_c_fun$ )(?v4 C_d_prod_c_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$ ?v5 (tset$g ?v0 ))(= (fun_app$f ?v1 ?v5 )(fun_app$f ?v2 ?v5 ))))(forall ((?v5 C_d_prod$ ))(=> (member$a ?v5 (set2_tllist$g ?v0 ))(= (fun_app$e ?v3 ?v5 )(fun_app$e ?v4 ?v5 )))))(= (tmap$a ?v1 ?v3 ?v0 )(tmap$a ?v2 ?v4 ?v0 )))):named a79 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_b_fun$ )(?v2 A_b_fun$ )(?v3 C_d_fun$ )(?v4 C_d_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$b ?v5 (tset$j ?v0 ))(= (fun_app$ah ?v1 ?v5 )(fun_app$ah ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$c ?v5 (set2_tllist$i ?v0 ))(= (fun_app$ac ?v3 ?v5 )(fun_app$ac ?v4 ?v5 )))))(= (tmap$d ?v1 ?v3 ?v0 )(tmap$d ?v2 ?v4 ?v0 )))):named a80 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 C_c_fun$ )(?v4 C_c_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$b ?v5 (tset$j ?v0 ))(= (fun_app$z ?v1 ?v5 )(fun_app$z ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$c ?v5 (set2_tllist$i ?v0 ))(= (fun_app$x ?v3 ?v5 )(fun_app$x ?v4 ?v5 )))))(= (tmap$e ?v1 ?v3 ?v0 )(tmap$e ?v2 ?v4 ?v0 )))):named a81 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$d ?v5 (tset$i ?v0 ))(= (fun_app$y ?v1 ?v5 )(fun_app$y ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$e ?v5 (set2_tllist$j ?v0 ))(= (fun_app$w ?v3 ?v5 )(fun_app$w ?v4 ?v5 )))))(= (tmap$b ?v1 ?v3 ?v0 )(tmap$b ?v2 ?v4 ?v0 )))):named a82 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 D_c_fun$ )(?v4 D_c_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$d ?v5 (tset$i ?v0 ))(= (fun_app$ai ?v1 ?v5 )(fun_app$ai ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$e ?v5 (set2_tllist$j ?v0 ))(= (fun_app$ab ?v3 ?v5 )(fun_app$ab ?v4 ?v5 )))))(= (tmap$c ?v1 ?v3 ?v0 )(tmap$c ?v2 ?v4 ?v0 )))):named a83 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_fun$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$ ?v5 (tset$h ?v0 ))(= (fun_app$f ?v1 ?v5 )(fun_app$f ?v2 ?v5 ))))(forall ((?v5 A_b_prod$ ))(=> (member$ ?v5 (set2_tllist$h ?v0 ))(= (fun_app$f ?v3 ?v5 )(fun_app$f ?v4 ?v5 )))))(= (tmap$f ?v1 ?v3 ?v0 )(tmap$f ?v2 ?v4 ?v0 )))):named a84 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_b_fun$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 A_b_prod_b_fun$ ))(=> (and (forall ((?v5 A_b_prod$ ))(=> (member$ ?v5 (tset$h ?v0 ))(= (fun_app$c ?v1 ?v5 )(fun_app$c ?v2 ?v5 ))))(forall ((?v5 A_b_prod$ ))(=> (member$ ?v5 (set2_tllist$h ?v0 ))(= (fun_app$c ?v3 ?v5 )(fun_app$c ?v4 ?v5 )))))(= (tmap$j ?v1 ?v3 ?v0 )(tmap$j ?v2 ?v4 ?v0 )))):named a85 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_a_b_prod_fun$ )(?v2 B_a_b_prod_fun$ )(?v3 D_c_d_prod_fun$ )(?v4 D_c_d_prod_fun$ ))(=> (and (forall ((?v5 B$ ))(=> (member$d ?v5 (tset$i ?v0 ))(= (fun_app$aj ?v1 ?v5 )(fun_app$aj ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$e ?v5 (set2_tllist$j ?v0 ))(= (fun_app$ae ?v3 ?v5 )(fun_app$ae ?v4 ?v5 )))))(= (tmap$g ?v1 ?v3 ?v0 )(tmap$g ?v2 ?v4 ?v0 )))):named a86 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_b_prod_fun$ )(?v2 A_a_b_prod_fun$ )(?v3 C_c_d_prod_fun$ )(?v4 C_c_d_prod_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$b ?v5 (tset$j ?v0 ))(= (fun_app$ak ?v1 ?v5 )(fun_app$ak ?v2 ?v5 ))))(forall ((?v5 C$ ))(=> (member$c ?v5 (set2_tllist$i ?v0 ))(= (fun_app$af ?v3 ?v5 )(fun_app$af ?v4 ?v5 )))))(= (tmap$h ?v1 ?v3 ?v0 )(tmap$h ?v2 ?v4 ?v0 )))):named a87 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 C_d_prod_d_fun$ )(?v5 C_d_prod_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$ ?v6 (tset$g ?v1 ))(= (fun_app$c ?v2 ?v6 )(fun_app$c ?v3 ?v6 ))))(forall ((?v6 C_d_prod$ ))(=> (member$a ?v6 (set2_tllist$g ?v1 ))(= (fun_app$b ?v4 ?v6 )(fun_app$b ?v5 ?v6 ))))))(= (tmap$ ?v2 ?v4 ?v0 )(tmap$ ?v3 ?v5 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_b_prod_c_d_prod_tllist$ )(?v1 A_b_prod_c_d_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 C_d_prod_c_fun$ )(?v5 C_d_prod_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$ ?v6 (tset$g ?v1 ))(= (fun_app$f ?v2 ?v6 )(fun_app$f ?v3 ?v6 ))))(forall ((?v6 C_d_prod$ ))(=> (member$a ?v6 (set2_tllist$g ?v1 ))(= (fun_app$e ?v4 ?v6 )(fun_app$e ?v5 ?v6 ))))))(= (tmap$a ?v2 ?v4 ?v0 )(tmap$a ?v3 ?v5 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_b_fun$ )(?v3 A_b_fun$ )(?v4 C_d_fun$ )(?v5 C_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$b ?v6 (tset$j ?v1 ))(= (fun_app$ah ?v2 ?v6 )(fun_app$ah ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$c ?v6 (set2_tllist$i ?v1 ))(= (fun_app$ac ?v4 ?v6 )(fun_app$ac ?v5 ?v6 ))))))(= (tmap$d ?v2 ?v4 ?v0 )(tmap$d ?v3 ?v5 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 C_c_fun$ )(?v5 C_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$b ?v6 (tset$j ?v1 ))(= (fun_app$z ?v2 ?v6 )(fun_app$z ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$c ?v6 (set2_tllist$i ?v1 ))(= (fun_app$x ?v4 ?v6 )(fun_app$x ?v5 ?v6 ))))))(= (tmap$e ?v2 ?v4 ?v0 )(tmap$e ?v3 ?v5 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_b_fun$ )(?v3 B_b_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$d ?v6 (tset$i ?v1 ))(= (fun_app$y ?v2 ?v6 )(fun_app$y ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$e ?v6 (set2_tllist$j ?v1 ))(= (fun_app$w ?v4 ?v6 )(fun_app$w ?v5 ?v6 ))))))(= (tmap$b ?v2 ?v4 ?v0 )(tmap$b ?v3 ?v5 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_fun$ )(?v3 B_a_fun$ )(?v4 D_c_fun$ )(?v5 D_c_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$d ?v6 (tset$i ?v1 ))(= (fun_app$ai ?v2 ?v6 )(fun_app$ai ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$e ?v6 (set2_tllist$j ?v1 ))(= (fun_app$ab ?v4 ?v6 )(fun_app$ab ?v5 ?v6 ))))))(= (tmap$c ?v2 ?v4 ?v0 )(tmap$c ?v3 ?v5 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_a_fun$ )(?v3 A_b_prod_a_fun$ )(?v4 A_b_prod_a_fun$ )(?v5 A_b_prod_a_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$ ?v6 (tset$h ?v1 ))(= (fun_app$f ?v2 ?v6 )(fun_app$f ?v3 ?v6 ))))(forall ((?v6 A_b_prod$ ))(=> (member$ ?v6 (set2_tllist$h ?v1 ))(= (fun_app$f ?v4 ?v6 )(fun_app$f ?v5 ?v6 ))))))(= (tmap$f ?v2 ?v4 ?v0 )(tmap$f ?v3 ?v5 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_b_prod_a_b_prod_tllist$ )(?v1 A_b_prod_a_b_prod_tllist$ )(?v2 A_b_prod_b_fun$ )(?v3 A_b_prod_b_fun$ )(?v4 A_b_prod_b_fun$ )(?v5 A_b_prod_b_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A_b_prod$ ))(=> (member$ ?v6 (tset$h ?v1 ))(= (fun_app$c ?v2 ?v6 )(fun_app$c ?v3 ?v6 ))))(forall ((?v6 A_b_prod$ ))(=> (member$ ?v6 (set2_tllist$h ?v1 ))(= (fun_app$c ?v4 ?v6 )(fun_app$c ?v5 ?v6 ))))))(= (tmap$j ?v2 ?v4 ?v0 )(tmap$j ?v3 ?v5 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ )(?v2 B_a_b_prod_fun$ )(?v3 B_a_b_prod_fun$ )(?v4 D_c_d_prod_fun$ )(?v5 D_c_d_prod_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 B$ ))(=> (member$d ?v6 (tset$i ?v1 ))(= (fun_app$aj ?v2 ?v6 )(fun_app$aj ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$e ?v6 (set2_tllist$j ?v1 ))(= (fun_app$ae ?v4 ?v6 )(fun_app$ae ?v5 ?v6 ))))))(= (tmap$g ?v2 ?v4 ?v0 )(tmap$g ?v3 ?v5 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ )(?v2 A_a_b_prod_fun$ )(?v3 A_a_b_prod_fun$ )(?v4 C_c_d_prod_fun$ )(?v5 C_c_d_prod_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$b ?v6 (tset$j ?v1 ))(= (fun_app$ak ?v2 ?v6 )(fun_app$ak ?v3 ?v6 ))))(forall ((?v6 C$ ))(=> (member$c ?v6 (set2_tllist$i ?v1 ))(= (fun_app$af ?v4 ?v6 )(fun_app$af ?v5 ?v6 ))))))(= (tmap$h ?v2 ?v4 ?v0 )(tmap$h ?v3 ?v5 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(= (lmap$h uui$ ?v0 )?v0 )):named a98 ))
(assert (! (forall ((?v0 A_llist$ ))(= (lmap$d uug$ ?v0 )?v0 )):named a99 ))
(assert (! (forall ((?v0 B_llist$ ))(= (lmap$a uue$ ?v0 )?v0 )):named a100 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_llist_prod$ ))(= (fun_app$al (case_prod$a (uuj$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$al (case_prod$a ?v1 )?v2 )))):named a101 ))
(assert (! (forall ((?v0 Bool )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod$ ))(= (fun_app$am (case_prod$ (uuk$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$am (case_prod$ ?v1 )?v2 )))):named a102 ))
(assert (! (forall ((?v0 Bool )(?v1 C_d_bool_fun_fun$ )(?v2 C_d_prod$ ))(= (fun_app$an (case_prod$b (uul$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$an (case_prod$b ?v1 )?v2 )))):named a103 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_prod$ ))(! (= (fun_app$al (case_prod$a ?v0 )?v1 )(fun_app$p (fun_app$q ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((fun_app$al (case_prod$a ?v0 )?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$am (case_prod$ ?v0 )?v1 )(fun_app$t (fun_app$u ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$am (case_prod$ ?v0 )?v1 )))):named a105 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$an (case_prod$b ?v0 )?v1 )(fun_app$r (fun_app$s ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$an (case_prod$b ?v0 )?v1 )))):named a106 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_prod$ ))(! (= (fun_app$al (case_prod$a ?v0 )?v1 )(fun_app$p (fun_app$q ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((fun_app$al (case_prod$a ?v0 )?v1 )))):named a107 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$am (case_prod$ ?v0 )?v1 )(fun_app$t (fun_app$u ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$am (case_prod$ ?v0 )?v1 )))):named a108 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$an (case_prod$b ?v0 )?v1 )(fun_app$r (fun_app$s ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$an (case_prod$b ?v0 )?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_prod$ )(?v2 Bool_bool_fun$ )(?v3 A_b_prod_llist_a_llist_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$aa ?v0 (snd$b ?v1 ))(fst$b ?v1 ))(forall ((?v4 A_b_prod_llist$ )(?v5 A_llist$ ))(=> (fun_app$ (fun_app$aa ?v0 ?v5 )?v4 )(fun_app$ao ?v2 (fun_app$p (fun_app$q ?v3 ?v4 )?v5 )))))(fun_app$ao ?v2 (fun_app$al (case_prod$a ?v3 )?v1 )))):named a110 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_prod$ )(?v2 Bool_bool_fun$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$ap (fun_app$aq ?v0 (snd$ ?v1 ))(fst$ ?v1 ))(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$ap (fun_app$aq ?v0 ?v5 )?v4 )(fun_app$ao ?v2 (fun_app$t (fun_app$u ?v3 ?v4 )?v5 )))))(fun_app$ao ?v2 (fun_app$am (case_prod$ ?v3 )?v1 )))):named a111 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C_d_prod$ )(?v2 Bool_bool_fun$ )(?v3 C_d_bool_fun_fun$ ))(=> (and (fun_app$ar (fun_app$as ?v0 (snd$a ?v1 ))(fst$a ?v1 ))(forall ((?v4 C$ )(?v5 D$ ))(=> (fun_app$ar (fun_app$as ?v0 ?v5 )?v4 )(fun_app$ao ?v2 (fun_app$r (fun_app$s ?v3 ?v4 )?v5 )))))(fun_app$ao ?v2 (fun_app$an (case_prod$b ?v3 )?v1 )))):named a112 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_prod$ )(?v1 A_b_prod_llist_set$ )(?v2 A_b_prod_llist_a_llist_fun$ ))(=> (member$f ?v0 (collect$a (case_prod$a (grp$ ?v1 ?v2 ))))(member$g (fst$b ?v0 )?v1 ))):named a113 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_set$ )(?v2 A_b_fun$ ))(=> (member$ ?v0 (collect$ (case_prod$ (grp$a ?v1 ?v2 ))))(member$b (fst$ ?v0 )?v1 ))):named a114 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_set$ )(?v2 C_d_fun$ ))(=> (member$a ?v0 (collect$b (case_prod$b (grp$b ?v1 ?v2 ))))(member$c (fst$a ?v0 )?v1 ))):named a115 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_prod$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ ))(=> (member$f ?v0 (collect$a (case_prod$a ?v1 )))(fun_app$p (fun_app$q ?v1 (fst$b ?v0 ))(snd$b ?v0 )))):named a116 ))
(assert (! (forall ((?v0 A_b_prod$ )(?v1 A_b_bool_fun_fun$ ))(=> (member$ ?v0 (collect$ (case_prod$ ?v1 )))(fun_app$t (fun_app$u ?v1 (fst$ ?v0 ))(snd$ ?v0 )))):named a117 ))
(assert (! (forall ((?v0 C_d_prod$ )(?v1 C_d_bool_fun_fun$ ))(=> (member$a ?v0 (collect$b (case_prod$b ?v1 )))(fun_app$r (fun_app$s ?v1 (fst$a ?v0 ))(snd$a ?v0 )))):named a118 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_prod$ ))(! (= (fun_app$al (case_prod$a ?v0 )?v1 )(fun_app$p (fun_app$q ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((fun_app$al (case_prod$a ?v0 )?v1 )))):named a119 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$am (case_prod$ ?v0 )?v1 )(fun_app$t (fun_app$u ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$am (case_prod$ ?v0 )?v1 )))):named a120 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$an (case_prod$b ?v0 )?v1 )(fun_app$r (fun_app$s ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$an (case_prod$b ?v0 )?v1 )))):named a121 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_prod$ ))(! (= (fun_app$al (case_prod$a ?v0 )?v1 )(fun_app$p (fun_app$q ?v0 (fst$b ?v1 ))(snd$b ?v1 ))):pattern ((fun_app$al (case_prod$a ?v0 )?v1 )))):named a122 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod$ ))(! (= (fun_app$am (case_prod$ ?v0 )?v1 )(fun_app$t (fun_app$u ?v0 (fst$ ?v1 ))(snd$ ?v1 ))):pattern ((fun_app$am (case_prod$ ?v0 )?v1 )))):named a123 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_prod$ ))(! (= (fun_app$an (case_prod$b ?v0 )?v1 )(fun_app$r (fun_app$s ?v0 (fst$a ?v1 ))(snd$a ?v1 ))):pattern ((fun_app$an (case_prod$b ?v0 )?v1 )))):named a124 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 A_a_b_prod_llist_tllist$ )(?v3 B_a_llist_tllist$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 A_b_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(and (member$h ?v4 (collect$d (uum$ ?v0 ?v1 )))(and (= (tmap$k uua$ uun$ ?v4 )?v2 )(= (tmap$l uub$ uuo$ ?v4 )?v3 )))))):named a125 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 C_a_b_prod_llist_tllist$ )(?v3 D_a_llist_tllist$ ))(= (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 C_d_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(and (member$i ?v4 (collect$e (uup$ ?v0 ?v1 )))(and (= (tmap$m uud$ uun$ ?v4 )?v2 )(= (tmap$n uuc$ uuo$ ?v4 )?v3 )))))):named a126 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_b_prod_llist_a_tllist$ )(?v3 A_llist_b_tllist$ ))(= (tllist_all2$b ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 A_b_prod_llist_a_llist_prod_a_b_prod_tllist$ ))(and (member$j ?v4 (collect$f (uuq$ ?v0 ?v1 )))(and (= (tmap$o uun$ uua$ ?v4 )?v2 )(= (tmap$p uuo$ uub$ ?v4 )?v3 )))))):named a127 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_b_prod_llist_c_tllist$ )(?v3 A_llist_d_tllist$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 A_b_prod_llist_a_llist_prod_c_d_prod_tllist$ ))(and (member$k ?v4 (collect$g (uur$ ?v0 ?v1 )))(and (= (tmap$q uun$ uud$ ?v4 )?v2 )(= (tmap$r uuo$ uuc$ ?v4 )?v3 )))))):named a128 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v2 A_b_prod_llist_a_b_prod_llist_tllist$ )(?v3 A_llist_a_llist_tllist$ ))(= (tllist_all2$d ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_tllist$ ))(and (member$l ?v4 (collect$h (uus$ ?v0 ?v1 )))(and (= (tmap$s uun$ uun$ ?v4 )?v2 )(= (tmap$t uuo$ uuo$ ?v4 )?v3 )))))):named a129 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 A_a_tllist$ )(?v3 B_b_tllist$ ))(= (tllist_all2$e ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 A_b_prod_a_b_prod_tllist$ ))(and (member$m ?v4 (collect$i (uut$ ?v0 ?v1 )))(and (= (tmap$f uua$ uua$ ?v4 )?v2 )(= (tmap$j uub$ uub$ ?v4 )?v3 )))))):named a130 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 A_b_bool_fun_fun$ )(?v2 C_a_tllist$ )(?v3 D_b_tllist$ ))(= (tllist_all2$f ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 C_d_prod_a_b_prod_tllist$ ))(and (member$n ?v4 (collect$j (uuu$ ?v0 ?v1 )))(and (= (tmap$u uud$ uua$ ?v4 )?v2 )(= (tmap$v uuc$ uub$ ?v4 )?v3 )))))):named a131 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C_c_tllist$ )(?v3 D_d_tllist$ ))(= (tllist_all2$g ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 C_d_prod_c_d_prod_tllist$ ))(and (member$o ?v4 (collect$k (uuv$ ?v0 ?v1 )))(and (= (tmap$w uud$ uud$ ?v4 )?v2 )(= (tmap$x uuc$ uuc$ ?v4 )?v3 )))))):named a132 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(= (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(exists ((?v4 A_b_prod_c_d_prod_tllist$ ))(and (member$p ?v4 (collect$l (uuw$ ?v0 ?v1 )))(and (= (tmap$a uua$ uud$ ?v4 )?v2 )(= (tmap$ uub$ uuc$ ?v4 )?v3 )))))):named a133 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ ))(= (conversep$a (conversep$ ?v0 ))?v0 )):named a134 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_bool_fun_fun$ ))(= (conversep$ (conversep$a ?v0 ))?v0 )):named a135 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_bool_fun_fun$ )(?v1 A_b_prod_llist$ )(?v2 A_llist$ ))(! (= (fun_app$p (fun_app$q (conversep$a ?v0 )?v1 )?v2 )(fun_app$ (fun_app$aa ?v0 ?v2 )?v1 )):pattern ((fun_app$p (fun_app$q (conversep$a ?v0 )?v1 )?v2 )))):named a136 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_prod_llist$ ))(! (= (fun_app$ (fun_app$aa (conversep$ ?v0 )?v1 )?v2 )(fun_app$p (fun_app$q ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$aa (conversep$ ?v0 )?v1 )?v2 )))):named a137 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_bool_fun_fun$ )(?v1 A_llist_a_b_prod_llist_bool_fun_fun$ ))(= (= (conversep$a ?v0 )(conversep$a ?v1 ))(= ?v0 ?v1 ))):named a138 ))
(assert (! (forall ((?v0 A_b_prod_llist_a_llist_bool_fun_fun$ )(?v1 A_b_prod_llist_a_llist_bool_fun_fun$ ))(= (= (conversep$ ?v0 )(conversep$ ?v1 ))(= ?v0 ?v1 ))):named a139 ))
(check-sat )
;(get-unsat-core )
