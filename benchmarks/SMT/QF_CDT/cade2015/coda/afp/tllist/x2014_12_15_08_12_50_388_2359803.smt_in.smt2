;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_d_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort D_b_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_b_tllist_b_fun$ 0 )
(declare-sort C_d_tllist_d_fun$ 0 )
(declare-sort A_a_tllist_bool_fun$ 0 )
(declare-sort A_b_tllist_bool_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort A_d_tllist_bool_fun$ 0 )
(declare-sort B_a_tllist_bool_fun$ 0 )
(declare-sort B_b_tllist_bool_fun$ 0 )
(declare-sort C_d_tllist_bool_fun$ 0 )
(declare-sort A_a_a_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_b_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_a_d_tllist_bool_fun_fun$ 0 )
(declare-sort B_b_a_tllist_bool_fun_fun$ 0 )
(declare-sort B_b_b_tllist_bool_fun_fun$ 0 )
(declare-sort C_c_d_tllist_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_b_tllist$ (tNil$ (terminal$ B$ ))(tCons$ (thd$ A$ )(ttl$ A_b_tllist$ )))(C_d_tllist$ (tNil$a (terminal$a D$ ))(tCons$a (thd$a C$ )(ttl$a C_d_tllist$ )))(B_b_tllist$ (tNil$b (terminal$b B$ ))(tCons$b (thd$b B$ )(ttl$b B_b_tllist$ )))(B_a_tllist$ (tNil$c (terminal$c A$ ))(tCons$c (thd$c B$ )(ttl$c B_a_tllist$ )))(A_d_tllist$ (tNil$d (terminal$d D$ ))(tCons$d (thd$d A$ )(ttl$d A_d_tllist$ )))(A_c_tllist$ (tNil$e (terminal$e C$ ))(tCons$e (thd$e A$ )(ttl$e A_c_tllist$ )))(A_a_tllist$ (tNil$f (terminal$f A$ ))(tCons$f (thd$f A$ )(ttl$f A_a_tllist$ )))(D_d_tllist$ (tNil$g (terminal$g D$ ))(tCons$g (thd$g D$ )(ttl$g D_d_tllist$ )))(D_b_tllist$ (tNil$h (terminal$h B$ ))(tCons$h (thd$h D$ )(ttl$h D_b_tllist$ )))(D_c_tllist$ (tNil$i (terminal$i C$ ))(tCons$i (thd$i D$ )(ttl$i D_c_tllist$ )))(D_a_tllist$ (tNil$j (terminal$j A$ ))(tCons$j (thd$j D$ )(ttl$j D_a_tllist$ )))(B_d_tllist$ (tNil$k (terminal$k D$ ))(tCons$k (thd$k B$ )(ttl$k B_d_tllist$ )))(B_c_tllist$ (tNil$l (terminal$l C$ ))(tCons$l (thd$l B$ )(ttl$l B_c_tllist$ )))(C_b_tllist$ (tNil$m (terminal$m B$ ))(tCons$m (thd$m C$ )(ttl$m C_b_tllist$ )))(C_c_tllist$ (tNil$n (terminal$n C$ ))(tCons$n (thd$n C$ )(ttl$n C_c_tllist$ )))))
(declare-fun f$ ()C_a_fun$ )
(declare-fun g$ ()D_b_fun$ )
(declare-fun y$ ()A$ )
(declare-fun uu$ ()C_d_tllist_d_fun$ )
(declare-fun xs$ ()C_d_tllist$ )
(declare-fun ys$ ()A_b_tllist$ )
(declare-fun uua$ ()A_b_tllist_b_fun$ )
(declare-fun uub$ (D_set$ )D_bool_fun$ )
(declare-fun uuc$ (B_set$ )B_bool_fun$ )
(declare-fun uud$ (C_set$ )C_bool_fun$ )
(declare-fun uue$ (A_set$ )A_bool_fun$ )
(declare-fun tmap$ (C_a_fun$ D_b_fun$ C_d_tllist$ )A_b_tllist$ )
(declare-fun tset$ (B_b_tllist$ )B_set$ )
(declare-fun tmap$a (A_a_fun$ B_b_fun$ A_b_tllist$ )A_b_tllist$ )
(declare-fun tmap$b (A_c_fun$ B_d_fun$ A_b_tllist$ )C_d_tllist$ )
(declare-fun tmap$c (C_c_fun$ D_d_fun$ C_d_tllist$ )C_d_tllist$ )
(declare-fun tset$a (B_a_tllist$ )B_set$ )
(declare-fun tset$b (A_d_tllist$ )A_set$ )
(declare-fun tset$c (A_c_tllist$ )A_set$ )
(declare-fun tset$d (A_a_tllist$ )A_set$ )
(declare-fun tset$e (A_b_tllist$ )A_set$ )
(declare-fun tset$f (C_d_tllist$ )C_set$ )
(declare-fun tset$g (D_d_tllist$ )D_set$ )
(declare-fun tset$h (D_b_tllist$ )D_set$ )
(declare-fun tset$i (D_c_tllist$ )D_set$ )
(declare-fun tset$j (D_a_tllist$ )D_set$ )
(declare-fun tset$k (B_d_tllist$ )B_set$ )
(declare-fun tset$l (B_c_tllist$ )B_set$ )
(declare-fun tset$m (C_b_tllist$ )C_set$ )
(declare-fun tset$n (C_c_tllist$ )C_set$ )
(declare-fun member$ (D$ D_set$ )Bool )
(declare-fun collect$ (D_bool_fun$ )D_set$ )
(declare-fun fun_app$ (C_d_tllist_d_fun$ C_d_tllist$ )D$ )
(declare-fun is_TNil$ (A_b_tllist$ )Bool )
(declare-fun member$a (C$ C_set$ )Bool )
(declare-fun member$b (B$ B_set$ )Bool )
(declare-fun member$c (A$ A_set$ )Bool )
(declare-fun collect$a (B_bool_fun$ )B_set$ )
(declare-fun collect$b (C_bool_fun$ )C_set$ )
(declare-fun collect$c (A_bool_fun$ )A_set$ )
(declare-fun fun_app$a (A_b_tllist_b_fun$ A_b_tllist$ )B$ )
(declare-fun fun_app$b (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$c (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$d (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$e (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$f (C_a_fun$ C$ )A$ )
(declare-fun fun_app$g (A_a_fun$ A$ )A$ )
(declare-fun fun_app$h (A_c_fun$ A$ )C$ )
(declare-fun fun_app$i (C_c_fun$ C$ )C$ )
(declare-fun fun_app$j (B_b_tllist_bool_fun$ B_b_tllist$ )Bool )
(declare-fun fun_app$k (B_b_b_tllist_bool_fun_fun$ B$ )B_b_tllist_bool_fun$ )
(declare-fun fun_app$l (B_a_tllist_bool_fun$ B_a_tllist$ )Bool )
(declare-fun fun_app$m (B_b_a_tllist_bool_fun_fun$ B$ )B_a_tllist_bool_fun$ )
(declare-fun fun_app$n (A_d_tllist_bool_fun$ A_d_tllist$ )Bool )
(declare-fun fun_app$o (A_a_d_tllist_bool_fun_fun$ A$ )A_d_tllist_bool_fun$ )
(declare-fun fun_app$p (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$q (A_a_c_tllist_bool_fun_fun$ A$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$r (A_a_tllist_bool_fun$ A_a_tllist$ )Bool )
(declare-fun fun_app$s (A_a_a_tllist_bool_fun_fun$ A$ )A_a_tllist_bool_fun$ )
(declare-fun fun_app$t (A_b_tllist_bool_fun$ A_b_tllist$ )Bool )
(declare-fun fun_app$u (A_a_b_tllist_bool_fun_fun$ A$ )A_b_tllist_bool_fun$ )
(declare-fun fun_app$v (C_d_tllist_bool_fun$ C_d_tllist$ )Bool )
(declare-fun fun_app$w (C_c_d_tllist_bool_fun_fun$ C$ )C_d_tllist_bool_fun$ )
(declare-fun fun_app$x (D_d_fun$ D$ )D$ )
(declare-fun fun_app$y (B_d_fun$ B$ )D$ )
(declare-fun fun_app$z (B_b_fun$ B$ )B$ )
(declare-fun is_TNil$a (C_d_tllist$ )Bool )
(declare-fun fun_app$aa (D_b_fun$ D$ )B$ )
(declare-fun terminal0$ ()A_b_tllist_b_fun$ )
(declare-fun terminal0$a ()C_d_tllist_d_fun$ )
(declare-fun pred_tllist$ (B_bool_fun$ B_bool_fun$ B_b_tllist$ )Bool )
(declare-fun set2_tllist$ (B_b_tllist$ )B_set$ )
(declare-fun pred_tllist$a (B_bool_fun$ A_bool_fun$ B_a_tllist$ )Bool )
(declare-fun pred_tllist$b (A_bool_fun$ D_bool_fun$ A_d_tllist$ )Bool )
(declare-fun pred_tllist$c (A_bool_fun$ C_bool_fun$ A_c_tllist$ )Bool )
(declare-fun pred_tllist$d (A_bool_fun$ A_bool_fun$ A_a_tllist$ )Bool )
(declare-fun pred_tllist$e (A_bool_fun$ B_bool_fun$ A_b_tllist$ )Bool )
(declare-fun pred_tllist$f (C_bool_fun$ D_bool_fun$ C_d_tllist$ )Bool )
(declare-fun pred_tllist$g (D_bool_fun$ D_bool_fun$ D_d_tllist$ )Bool )
(declare-fun pred_tllist$h (D_bool_fun$ B_bool_fun$ D_b_tllist$ )Bool )
(declare-fun pred_tllist$i (D_bool_fun$ C_bool_fun$ D_c_tllist$ )Bool )
(declare-fun pred_tllist$j (D_bool_fun$ A_bool_fun$ D_a_tllist$ )Bool )
(declare-fun pred_tllist$k (B_bool_fun$ D_bool_fun$ B_d_tllist$ )Bool )
(declare-fun pred_tllist$l (B_bool_fun$ C_bool_fun$ B_c_tllist$ )Bool )
(declare-fun pred_tllist$m (C_bool_fun$ B_bool_fun$ C_b_tllist$ )Bool )
(declare-fun pred_tllist$n (C_bool_fun$ C_bool_fun$ C_c_tllist$ )Bool )
(declare-fun set2_tllist$a (B_a_tllist$ )A_set$ )
(declare-fun set2_tllist$b (A_d_tllist$ )D_set$ )
(declare-fun set2_tllist$c (A_c_tllist$ )C_set$ )
(declare-fun set2_tllist$d (A_a_tllist$ )A_set$ )
(declare-fun set2_tllist$e (A_b_tllist$ )B_set$ )
(declare-fun set2_tllist$f (C_d_tllist$ )D_set$ )
(declare-fun set2_tllist$g (D_d_tllist$ )D_set$ )
(declare-fun set2_tllist$h (D_b_tllist$ )B_set$ )
(declare-fun set2_tllist$i (D_c_tllist$ )C_set$ )
(declare-fun set2_tllist$j (D_a_tllist$ )A_set$ )
(declare-fun set2_tllist$k (B_d_tllist$ )D_set$ )
(declare-fun set2_tllist$l (B_c_tllist$ )C_set$ )
(declare-fun set2_tllist$m (C_b_tllist$ )B_set$ )
(declare-fun set2_tllist$n (C_c_tllist$ )C_set$ )
(assert (! (forall ((?v0 C_d_tllist$ ))(! (= (fun_app$ uu$ ?v0 )(terminal$a ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(! (= (fun_app$a uua$ ?v0 )(terminal$ ?v0 )):pattern ((fun_app$a uua$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 D_set$ )(?v1 D$ ))(! (= (fun_app$b (uub$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$b (uub$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C$ ))(! (= (fun_app$c (uud$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$c (uud$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B$ ))(! (= (fun_app$d (uuc$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$d (uuc$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$e (uue$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$e (uue$ ?v0 )?v1 )))):named a5 ))
(assert (! (not (= (= (tCons$ y$ ys$ )(tmap$ f$ g$ xs$ ))(exists ((?v0 C$ )(?v1 C_d_tllist$ ))(and (= xs$ (tCons$a ?v0 ?v1 ))(and (= (fun_app$f f$ ?v0 )y$ )(= (tmap$ f$ g$ ?v1 )ys$ )))))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A$ )(?v3 A_b_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a7 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ )(?v2 C$ )(?v3 C_d_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a8 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 A_b_tllist$ ))(! (= (tmap$a ?v0 ?v1 (tCons$ ?v2 ?v3 ))(tCons$ (fun_app$g ?v0 ?v2 )(tmap$a ?v0 ?v1 ?v3 ))):pattern ((tmap$a ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a9 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 A$ )(?v3 A_b_tllist$ ))(! (= (tmap$b ?v0 ?v1 (tCons$ ?v2 ?v3 ))(tCons$a (fun_app$h ?v0 ?v2 )(tmap$b ?v0 ?v1 ?v3 ))):pattern ((tmap$b ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a10 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 C$ )(?v3 C_d_tllist$ ))(! (= (tmap$ ?v0 ?v1 (tCons$a ?v2 ?v3 ))(tCons$ (fun_app$f ?v0 ?v2 )(tmap$ ?v0 ?v1 ?v3 ))):pattern ((tmap$ ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a11 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 C$ )(?v3 C_d_tllist$ ))(! (= (tmap$c ?v0 ?v1 (tCons$a ?v2 ?v3 ))(tCons$a (fun_app$i ?v0 ?v2 )(tmap$c ?v0 ?v1 ?v3 ))):pattern ((tmap$c ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a12 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ )(?v3 A$ )(?v4 A_b_tllist$ ))(= (= (tmap$a ?v0 ?v1 ?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (= (fun_app$g ?v0 ?v5 )?v3 )(= (tmap$a ?v0 ?v1 ?v6 )?v4 )))))):named a13 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 C_d_tllist$ )(?v3 A$ )(?v4 A_b_tllist$ ))(= (= (tmap$ ?v0 ?v1 ?v2 )(tCons$ ?v3 ?v4 ))(exists ((?v5 C$ )(?v6 C_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (= (fun_app$f ?v0 ?v5 )?v3 )(= (tmap$ ?v0 ?v1 ?v6 )?v4 )))))):named a14 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 A_b_tllist$ )(?v3 C$ )(?v4 C_d_tllist$ ))(= (= (tmap$b ?v0 ?v1 ?v2 )(tCons$a ?v3 ?v4 ))(exists ((?v5 A$ )(?v6 A_b_tllist$ ))(and (= ?v2 (tCons$ ?v5 ?v6 ))(and (= (fun_app$h ?v0 ?v5 )?v3 )(= (tmap$b ?v0 ?v1 ?v6 )?v4 )))))):named a15 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 C_d_tllist$ )(?v3 C$ )(?v4 C_d_tllist$ ))(= (= (tmap$c ?v0 ?v1 ?v2 )(tCons$a ?v3 ?v4 ))(exists ((?v5 C$ )(?v6 C_d_tllist$ ))(and (= ?v2 (tCons$a ?v5 ?v6 ))(and (= (fun_app$i ?v0 ?v5 )?v3 )(= (tmap$c ?v0 ?v1 ?v6 )?v4 )))))):named a16 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B$ )(?v3 B_b_tllist$ ))(! (= (pred_tllist$ ?v0 ?v1 (tCons$b ?v2 ?v3 ))(and (fun_app$d ?v0 ?v2 )(pred_tllist$ ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$ ?v0 ?v1 (tCons$b ?v2 ?v3 ))))):named a17 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B$ )(?v3 B_a_tllist$ ))(! (= (pred_tllist$a ?v0 ?v1 (tCons$c ?v2 ?v3 ))(and (fun_app$d ?v0 ?v2 )(pred_tllist$a ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$a ?v0 ?v1 (tCons$c ?v2 ?v3 ))))):named a18 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 D_bool_fun$ )(?v2 A$ )(?v3 A_d_tllist$ ))(! (= (pred_tllist$b ?v0 ?v1 (tCons$d ?v2 ?v3 ))(and (fun_app$e ?v0 ?v2 )(pred_tllist$b ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$b ?v0 ?v1 (tCons$d ?v2 ?v3 ))))):named a19 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 C_bool_fun$ )(?v2 A$ )(?v3 A_c_tllist$ ))(! (= (pred_tllist$c ?v0 ?v1 (tCons$e ?v2 ?v3 ))(and (fun_app$e ?v0 ?v2 )(pred_tllist$c ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$c ?v0 ?v1 (tCons$e ?v2 ?v3 ))))):named a20 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_a_tllist$ ))(! (= (pred_tllist$d ?v0 ?v1 (tCons$f ?v2 ?v3 ))(and (fun_app$e ?v0 ?v2 )(pred_tllist$d ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$d ?v0 ?v1 (tCons$f ?v2 ?v3 ))))):named a21 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 A$ )(?v3 A_b_tllist$ ))(! (= (pred_tllist$e ?v0 ?v1 (tCons$ ?v2 ?v3 ))(and (fun_app$e ?v0 ?v2 )(pred_tllist$e ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$e ?v0 ?v1 (tCons$ ?v2 ?v3 ))))):named a22 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 D_bool_fun$ )(?v2 C$ )(?v3 C_d_tllist$ ))(! (= (pred_tllist$f ?v0 ?v1 (tCons$a ?v2 ?v3 ))(and (fun_app$c ?v0 ?v2 )(pred_tllist$f ?v0 ?v1 ?v3 ))):pattern ((pred_tllist$f ?v0 ?v1 (tCons$a ?v2 ?v3 ))))):named a23 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 C_d_tllist$ ))(= (ttl$a (tmap$c ?v0 ?v1 ?v2 ))(tmap$c ?v0 ?v1 (ttl$a ?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 A_b_tllist$ ))(= (ttl$a (tmap$b ?v0 ?v1 ?v2 ))(tmap$b ?v0 ?v1 (ttl$ ?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ ))(= (ttl$ (tmap$a ?v0 ?v1 ?v2 ))(tmap$a ?v0 ?v1 (ttl$ ?v2 )))):named a26 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 C_d_tllist$ ))(= (ttl$ (tmap$ ?v0 ?v1 ?v2 ))(tmap$ ?v0 ?v1 (ttl$a ?v2 )))):named a27 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (terminal$ (tCons$ ?v0 ?v1 ))(terminal$ ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(! (= (terminal$a (tCons$a ?v0 ?v1 ))(terminal$a ?v1 )):pattern ((tCons$a ?v0 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(! (= (set2_tllist$ (tCons$b ?v0 ?v1 ))(set2_tllist$ ?v1 )):pattern ((tCons$b ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(! (= (set2_tllist$a (tCons$c ?v0 ?v1 ))(set2_tllist$a ?v1 )):pattern ((tCons$c ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A$ )(?v1 A_d_tllist$ ))(! (= (set2_tllist$b (tCons$d ?v0 ?v1 ))(set2_tllist$b ?v1 )):pattern ((tCons$d ?v0 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(! (= (set2_tllist$c (tCons$e ?v0 ?v1 ))(set2_tllist$c ?v1 )):pattern ((tCons$e ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(! (= (set2_tllist$d (tCons$f ?v0 ?v1 ))(set2_tllist$d ?v1 )):pattern ((tCons$f ?v0 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (set2_tllist$e (tCons$ ?v0 ?v1 ))(set2_tllist$e ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(! (= (set2_tllist$f (tCons$a ?v0 ?v1 ))(set2_tllist$f ?v1 )):pattern ((tCons$a ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B$ ))(=> (member$b ?v0 (set2_tllist$ ?v1 ))(member$b ?v0 (set2_tllist$ (tCons$b ?v2 ?v1 ))))):named a37 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_tllist$ )(?v2 B$ ))(=> (member$c ?v0 (set2_tllist$a ?v1 ))(member$c ?v0 (set2_tllist$a (tCons$c ?v2 ?v1 ))))):named a38 ))
(assert (! (forall ((?v0 D$ )(?v1 A_d_tllist$ )(?v2 A$ ))(=> (member$ ?v0 (set2_tllist$b ?v1 ))(member$ ?v0 (set2_tllist$b (tCons$d ?v2 ?v1 ))))):named a39 ))
(assert (! (forall ((?v0 C$ )(?v1 A_c_tllist$ )(?v2 A$ ))(=> (member$a ?v0 (set2_tllist$c ?v1 ))(member$a ?v0 (set2_tllist$c (tCons$e ?v2 ?v1 ))))):named a40 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A$ ))(=> (member$c ?v0 (set2_tllist$d ?v1 ))(member$c ?v0 (set2_tllist$d (tCons$f ?v2 ?v1 ))))):named a41 ))
(assert (! (forall ((?v0 B$ )(?v1 A_b_tllist$ )(?v2 A$ ))(=> (member$b ?v0 (set2_tllist$e ?v1 ))(member$b ?v0 (set2_tllist$e (tCons$ ?v2 ?v1 ))))):named a42 ))
(assert (! (forall ((?v0 D$ )(?v1 C_d_tllist$ )(?v2 C$ ))(=> (member$ ?v0 (set2_tllist$f ?v1 ))(member$ ?v0 (set2_tllist$f (tCons$a ?v2 ?v1 ))))):named a43 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (thd$ (tCons$ ?v0 ?v1 ))?v0 ):pattern ((tCons$ ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(! (= (thd$a (tCons$a ?v0 ?v1 ))?v0 ):pattern ((tCons$a ?v0 ?v1 )))):named a45 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B_b_b_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$ ?v1 ))(and (forall ((?v3 B$ )(?v4 B_b_tllist$ ))(fun_app$j (fun_app$k ?v2 ?v3 )(tCons$b ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_b_tllist$ )(?v5 B$ ))(=> (and (member$b ?v5 (tset$ ?v4 ))(fun_app$j (fun_app$k ?v2 ?v5 )?v4 ))(fun_app$j (fun_app$k ?v2 ?v5 )(tCons$b ?v3 ?v4 ))))))(fun_app$j (fun_app$k ?v2 ?v0 )?v1 ))):named a46 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B_b_a_tllist_bool_fun_fun$ ))(=> (and (member$b ?v0 (tset$a ?v1 ))(and (forall ((?v3 B$ )(?v4 B_a_tllist$ ))(fun_app$l (fun_app$m ?v2 ?v3 )(tCons$c ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_a_tllist$ )(?v5 B$ ))(=> (and (member$b ?v5 (tset$a ?v4 ))(fun_app$l (fun_app$m ?v2 ?v5 )?v4 ))(fun_app$l (fun_app$m ?v2 ?v5 )(tCons$c ?v3 ?v4 ))))))(fun_app$l (fun_app$m ?v2 ?v0 )?v1 ))):named a47 ))
(assert (! (forall ((?v0 A$ )(?v1 A_d_tllist$ )(?v2 A_a_d_tllist_bool_fun_fun$ ))(=> (and (member$c ?v0 (tset$b ?v1 ))(and (forall ((?v3 A$ )(?v4 A_d_tllist$ ))(fun_app$n (fun_app$o ?v2 ?v3 )(tCons$d ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_d_tllist$ )(?v5 A$ ))(=> (and (member$c ?v5 (tset$b ?v4 ))(fun_app$n (fun_app$o ?v2 ?v5 )?v4 ))(fun_app$n (fun_app$o ?v2 ?v5 )(tCons$d ?v3 ?v4 ))))))(fun_app$n (fun_app$o ?v2 ?v0 )?v1 ))):named a48 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A_a_c_tllist_bool_fun_fun$ ))(=> (and (member$c ?v0 (tset$c ?v1 ))(and (forall ((?v3 A$ )(?v4 A_c_tllist$ ))(fun_app$p (fun_app$q ?v2 ?v3 )(tCons$e ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_c_tllist$ )(?v5 A$ ))(=> (and (member$c ?v5 (tset$c ?v4 ))(fun_app$p (fun_app$q ?v2 ?v5 )?v4 ))(fun_app$p (fun_app$q ?v2 ?v5 )(tCons$e ?v3 ?v4 ))))))(fun_app$p (fun_app$q ?v2 ?v0 )?v1 ))):named a49 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A_a_a_tllist_bool_fun_fun$ ))(=> (and (member$c ?v0 (tset$d ?v1 ))(and (forall ((?v3 A$ )(?v4 A_a_tllist$ ))(fun_app$r (fun_app$s ?v2 ?v3 )(tCons$f ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_a_tllist$ )(?v5 A$ ))(=> (and (member$c ?v5 (tset$d ?v4 ))(fun_app$r (fun_app$s ?v2 ?v5 )?v4 ))(fun_app$r (fun_app$s ?v2 ?v5 )(tCons$f ?v3 ?v4 ))))))(fun_app$r (fun_app$s ?v2 ?v0 )?v1 ))):named a50 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A_a_b_tllist_bool_fun_fun$ ))(=> (and (member$c ?v0 (tset$e ?v1 ))(and (forall ((?v3 A$ )(?v4 A_b_tllist$ ))(fun_app$t (fun_app$u ?v2 ?v3 )(tCons$ ?v3 ?v4 )))(forall ((?v3 A$ )(?v4 A_b_tllist$ )(?v5 A$ ))(=> (and (member$c ?v5 (tset$e ?v4 ))(fun_app$t (fun_app$u ?v2 ?v5 )?v4 ))(fun_app$t (fun_app$u ?v2 ?v5 )(tCons$ ?v3 ?v4 ))))))(fun_app$t (fun_app$u ?v2 ?v0 )?v1 ))):named a51 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ )(?v2 C_c_d_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$f ?v1 ))(and (forall ((?v3 C$ )(?v4 C_d_tllist$ ))(fun_app$v (fun_app$w ?v2 ?v3 )(tCons$a ?v3 ?v4 )))(forall ((?v3 C$ )(?v4 C_d_tllist$ )(?v5 C$ ))(=> (and (member$a ?v5 (tset$f ?v4 ))(fun_app$v (fun_app$w ?v2 ?v5 )?v4 ))(fun_app$v (fun_app$w ?v2 ?v5 )(tCons$a ?v3 ?v4 ))))))(fun_app$v (fun_app$w ?v2 ?v0 )?v1 ))):named a52 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(=> (and (member$b ?v0 (tset$ ?v1 ))(and (forall ((?v2 B_b_tllist$ ))(=> (= ?v1 (tCons$b ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_b_tllist$ ))(=> (and (= ?v1 (tCons$b ?v2 ?v3 ))(member$b ?v0 (tset$ ?v3 )))false ))))false )):named a53 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(=> (and (member$b ?v0 (tset$a ?v1 ))(and (forall ((?v2 B_a_tllist$ ))(=> (= ?v1 (tCons$c ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_a_tllist$ ))(=> (and (= ?v1 (tCons$c ?v2 ?v3 ))(member$b ?v0 (tset$a ?v3 )))false ))))false )):named a54 ))
(assert (! (forall ((?v0 A$ )(?v1 A_d_tllist$ ))(=> (and (member$c ?v0 (tset$b ?v1 ))(and (forall ((?v2 A_d_tllist$ ))(=> (= ?v1 (tCons$d ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_d_tllist$ ))(=> (and (= ?v1 (tCons$d ?v2 ?v3 ))(member$c ?v0 (tset$b ?v3 )))false ))))false )):named a55 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(=> (and (member$c ?v0 (tset$c ?v1 ))(and (forall ((?v2 A_c_tllist$ ))(=> (= ?v1 (tCons$e ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_c_tllist$ ))(=> (and (= ?v1 (tCons$e ?v2 ?v3 ))(member$c ?v0 (tset$c ?v3 )))false ))))false )):named a56 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(=> (and (member$c ?v0 (tset$d ?v1 ))(and (forall ((?v2 A_a_tllist$ ))(=> (= ?v1 (tCons$f ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_a_tllist$ ))(=> (and (= ?v1 (tCons$f ?v2 ?v3 ))(member$c ?v0 (tset$d ?v3 )))false ))))false )):named a57 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(=> (and (member$c ?v0 (tset$e ?v1 ))(and (forall ((?v2 A_b_tllist$ ))(=> (= ?v1 (tCons$ ?v0 ?v2 ))false ))(forall ((?v2 A$ )(?v3 A_b_tllist$ ))(=> (and (= ?v1 (tCons$ ?v2 ?v3 ))(member$c ?v0 (tset$e ?v3 )))false ))))false )):named a58 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(=> (and (member$a ?v0 (tset$f ?v1 ))(and (forall ((?v2 C_d_tllist$ ))(=> (= ?v1 (tCons$a ?v0 ?v2 ))false ))(forall ((?v2 C$ )(?v3 C_d_tllist$ ))(=> (and (= ?v1 (tCons$a ?v2 ?v3 ))(member$a ?v0 (tset$f ?v3 )))false ))))false )):named a59 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ )(?v2 B$ ))(=> (member$b ?v0 (tset$ ?v1 ))(member$b ?v0 (tset$ (tCons$b ?v2 ?v1 ))))):named a60 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ )(?v2 B$ ))(=> (member$b ?v0 (tset$a ?v1 ))(member$b ?v0 (tset$a (tCons$c ?v2 ?v1 ))))):named a61 ))
(assert (! (forall ((?v0 A$ )(?v1 A_d_tllist$ )(?v2 A$ ))(=> (member$c ?v0 (tset$b ?v1 ))(member$c ?v0 (tset$b (tCons$d ?v2 ?v1 ))))):named a62 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A$ ))(=> (member$c ?v0 (tset$c ?v1 ))(member$c ?v0 (tset$c (tCons$e ?v2 ?v1 ))))):named a63 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ )(?v2 A$ ))(=> (member$c ?v0 (tset$d ?v1 ))(member$c ?v0 (tset$d (tCons$f ?v2 ?v1 ))))):named a64 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A$ ))(=> (member$c ?v0 (tset$e ?v1 ))(member$c ?v0 (tset$e (tCons$ ?v2 ?v1 ))))):named a65 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ )(?v2 C$ ))(=> (member$a ?v0 (tset$f ?v1 ))(member$a ?v0 (tset$f (tCons$a ?v2 ?v1 ))))):named a66 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(= (terminal$a (ttl$a ?v0 ))(terminal$a ?v0 ))):named a67 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(= (terminal$ (ttl$ ?v0 ))(terminal$ ?v0 ))):named a68 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(=> (member$b ?v0 (tset$ (ttl$b ?v1 )))(member$b ?v0 (tset$ ?v1 )))):named a69 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(=> (member$b ?v0 (tset$a (ttl$c ?v1 )))(member$b ?v0 (tset$a ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A$ )(?v1 A_d_tllist$ ))(=> (member$c ?v0 (tset$b (ttl$d ?v1 )))(member$c ?v0 (tset$b ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(=> (member$c ?v0 (tset$c (ttl$e ?v1 )))(member$c ?v0 (tset$c ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(=> (member$c ?v0 (tset$d (ttl$f ?v1 )))(member$c ?v0 (tset$d ?v1 )))):named a73 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(=> (member$a ?v0 (tset$f (ttl$a ?v1 )))(member$a ?v0 (tset$f ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(=> (member$c ?v0 (tset$e (ttl$ ?v1 )))(member$c ?v0 (tset$e ?v1 )))):named a75 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_d_tllist$ )(?v2 C_c_fun$ )(?v3 C_c_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 C$ ))(=> (member$a ?v6 (tset$f ?v1 ))(= (fun_app$i ?v2 ?v6 )(fun_app$i ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$ ?v6 (set2_tllist$f ?v1 ))(= (fun_app$x ?v4 ?v6 )(fun_app$x ?v5 ?v6 ))))))(= (tmap$c ?v2 ?v4 ?v0 )(tmap$c ?v3 ?v5 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ )(?v2 A_c_fun$ )(?v3 A_c_fun$ )(?v4 B_d_fun$ )(?v5 B_d_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$c ?v6 (tset$e ?v1 ))(= (fun_app$h ?v2 ?v6 )(fun_app$h ?v3 ?v6 ))))(forall ((?v6 B$ ))(=> (member$b ?v6 (set2_tllist$e ?v1 ))(= (fun_app$y ?v4 ?v6 )(fun_app$y ?v5 ?v6 ))))))(= (tmap$b ?v2 ?v4 ?v0 )(tmap$b ?v3 ?v5 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 A$ ))(=> (member$c ?v6 (tset$e ?v1 ))(= (fun_app$g ?v2 ?v6 )(fun_app$g ?v3 ?v6 ))))(forall ((?v6 B$ ))(=> (member$b ?v6 (set2_tllist$e ?v1 ))(= (fun_app$z ?v4 ?v6 )(fun_app$z ?v5 ?v6 ))))))(= (tmap$a ?v2 ?v4 ?v0 )(tmap$a ?v3 ?v5 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_d_tllist$ )(?v2 C_a_fun$ )(?v3 C_a_fun$ )(?v4 D_b_fun$ )(?v5 D_b_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 C$ ))(=> (member$a ?v6 (tset$f ?v1 ))(= (fun_app$f ?v2 ?v6 )(fun_app$f ?v3 ?v6 ))))(forall ((?v6 D$ ))(=> (member$ ?v6 (set2_tllist$f ?v1 ))(= (fun_app$aa ?v4 ?v6 )(fun_app$aa ?v5 ?v6 ))))))(= (tmap$ ?v2 ?v4 ?v0 )(tmap$ ?v3 ?v5 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_c_fun$ )(?v2 C_c_fun$ )(?v3 D_d_fun$ )(?v4 D_d_fun$ ))(=> (and (forall ((?v5 C$ ))(=> (member$a ?v5 (tset$f ?v0 ))(= (fun_app$i ?v1 ?v5 )(fun_app$i ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$ ?v5 (set2_tllist$f ?v0 ))(= (fun_app$x ?v3 ?v5 )(fun_app$x ?v4 ?v5 )))))(= (tmap$c ?v1 ?v3 ?v0 )(tmap$c ?v2 ?v4 ?v0 )))):named a80 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_c_fun$ )(?v2 A_c_fun$ )(?v3 B_d_fun$ )(?v4 B_d_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$c ?v5 (tset$e ?v0 ))(= (fun_app$h ?v1 ?v5 )(fun_app$h ?v2 ?v5 ))))(forall ((?v5 B$ ))(=> (member$b ?v5 (set2_tllist$e ?v0 ))(= (fun_app$y ?v3 ?v5 )(fun_app$y ?v4 ?v5 )))))(= (tmap$b ?v1 ?v3 ?v0 )(tmap$b ?v2 ?v4 ?v0 )))):named a81 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ ))(=> (and (forall ((?v5 A$ ))(=> (member$c ?v5 (tset$e ?v0 ))(= (fun_app$g ?v1 ?v5 )(fun_app$g ?v2 ?v5 ))))(forall ((?v5 B$ ))(=> (member$b ?v5 (set2_tllist$e ?v0 ))(= (fun_app$z ?v3 ?v5 )(fun_app$z ?v4 ?v5 )))))(= (tmap$a ?v1 ?v3 ?v0 )(tmap$a ?v2 ?v4 ?v0 )))):named a82 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_a_fun$ )(?v2 C_a_fun$ )(?v3 D_b_fun$ )(?v4 D_b_fun$ ))(=> (and (forall ((?v5 C$ ))(=> (member$a ?v5 (tset$f ?v0 ))(= (fun_app$f ?v1 ?v5 )(fun_app$f ?v2 ?v5 ))))(forall ((?v5 D$ ))(=> (member$ ?v5 (set2_tllist$f ?v0 ))(= (fun_app$aa ?v3 ?v5 )(fun_app$aa ?v4 ?v5 )))))(= (tmap$ ?v1 ?v3 ?v0 )(tmap$ ?v2 ?v4 ?v0 )))):named a83 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_d_tllist$ )(?v2 C_c_fun$ )(?v3 C_c_fun$ )(?v4 D_d_fun$ )(?v5 D_d_fun$ ))(=> (and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$a ?v6 (tset$f ?v0 ))(and (member$a ?v7 (tset$f ?v1 ))(= (fun_app$i ?v2 ?v6 )(fun_app$i ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (set2_tllist$f ?v0 ))(and (member$ ?v7 (set2_tllist$f ?v1 ))(= (fun_app$x ?v4 ?v6 )(fun_app$x ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$c ?v2 ?v4 ?v0 )(tmap$c ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a84 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ )(?v2 A_c_fun$ )(?v3 A_c_fun$ )(?v4 B_d_fun$ )(?v5 B_d_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$c ?v6 (tset$e ?v0 ))(and (member$c ?v7 (tset$e ?v1 ))(= (fun_app$h ?v2 ?v6 )(fun_app$h ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$b ?v6 (set2_tllist$e ?v0 ))(and (member$b ?v7 (set2_tllist$e ?v1 ))(= (fun_app$y ?v4 ?v6 )(fun_app$y ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$b ?v2 ?v4 ?v0 )(tmap$b ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a85 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 B_b_fun$ )(?v5 B_b_fun$ ))(=> (and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$c ?v6 (tset$e ?v0 ))(and (member$c ?v7 (tset$e ?v1 ))(= (fun_app$g ?v2 ?v6 )(fun_app$g ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 B$ )(?v7 B$ ))(=> (and (member$b ?v6 (set2_tllist$e ?v0 ))(and (member$b ?v7 (set2_tllist$e ?v1 ))(= (fun_app$z ?v4 ?v6 )(fun_app$z ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$a ?v2 ?v4 ?v0 )(tmap$a ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a86 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_d_tllist$ )(?v2 C_a_fun$ )(?v3 C_a_fun$ )(?v4 D_b_fun$ )(?v5 D_b_fun$ ))(=> (and (forall ((?v6 C$ )(?v7 C$ ))(=> (and (member$a ?v6 (tset$f ?v0 ))(and (member$a ?v7 (tset$f ?v1 ))(= (fun_app$f ?v2 ?v6 )(fun_app$f ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 D$ )(?v7 D$ ))(=> (and (member$ ?v6 (set2_tllist$f ?v0 ))(and (member$ ?v7 (set2_tllist$f ?v1 ))(= (fun_app$aa ?v4 ?v6 )(fun_app$aa ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (tmap$ ?v2 ?v4 ?v0 )(tmap$ ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a87 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (ttl$ (tCons$ ?v0 ?v1 ))?v1 ):pattern ((tCons$ ?v0 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(! (= (ttl$a (tCons$a ?v0 ?v1 ))?v1 ):pattern ((tCons$a ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_tllist$ ))(member$b ?v0 (tset$ (tCons$b ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_tllist$ ))(member$b ?v0 (tset$a (tCons$c ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A$ )(?v1 A_d_tllist$ ))(member$c ?v0 (tset$b (tCons$d ?v0 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ ))(member$c ?v0 (tset$c (tCons$e ?v0 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_tllist$ ))(member$c ?v0 (tset$d (tCons$f ?v0 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(member$c ?v0 (tset$e (tCons$ ?v0 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(member$a ?v0 (tset$f (tCons$a ?v0 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(! (= (terminal$ (tCons$ ?v0 ?v1 ))(fun_app$a terminal0$ ?v1 )):pattern ((tCons$ ?v0 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(! (= (terminal$a (tCons$a ?v0 ?v1 ))(fun_app$ terminal0$a ?v1 )):pattern ((tCons$a ?v0 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (=> (= ?v0 (tNil$ (terminal$ ?v0 )))false )(=> (= ?v0 (tCons$ (thd$ ?v0 )(ttl$ ?v0 )))false ))false )):named a99 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (and (=> (= ?v0 (tNil$a (terminal$a ?v0 )))false )(=> (= ?v0 (tCons$a (thd$a ?v0 )(ttl$a ?v0 )))false ))false )):named a100 ))
(assert (! (= terminal0$a uu$ ):named a101 ))
(assert (! (= terminal0$ uua$ ):named a102 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (not (is_TNil$ ?v0 ))(= (tCons$ (thd$ ?v0 )(ttl$ ?v0 ))?v0 ))):named a103 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (not (is_TNil$a ?v0 ))(= (tCons$a (thd$a ?v0 )(ttl$a ?v0 ))?v0 ))):named a104 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 D_bool_fun$ )(?v2 D_d_tllist$ ))(= (pred_tllist$g ?v0 ?v1 ?v2 )(and (forall ((?v3 D$ ))(=> (member$ ?v3 (tset$g ?v2 ))(fun_app$b ?v0 ?v3 )))(forall ((?v3 D$ ))(=> (member$ ?v3 (set2_tllist$g ?v2 ))(fun_app$b ?v1 ?v3 )))))):named a105 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 B_bool_fun$ )(?v2 D_b_tllist$ ))(= (pred_tllist$h ?v0 ?v1 ?v2 )(and (forall ((?v3 D$ ))(=> (member$ ?v3 (tset$h ?v2 ))(fun_app$b ?v0 ?v3 )))(forall ((?v3 B$ ))(=> (member$b ?v3 (set2_tllist$h ?v2 ))(fun_app$d ?v1 ?v3 )))))):named a106 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 C_bool_fun$ )(?v2 D_c_tllist$ ))(= (pred_tllist$i ?v0 ?v1 ?v2 )(and (forall ((?v3 D$ ))(=> (member$ ?v3 (tset$i ?v2 ))(fun_app$b ?v0 ?v3 )))(forall ((?v3 C$ ))(=> (member$a ?v3 (set2_tllist$i ?v2 ))(fun_app$c ?v1 ?v3 )))))):named a107 ))
(assert (! (forall ((?v0 D_bool_fun$ )(?v1 A_bool_fun$ )(?v2 D_a_tllist$ ))(= (pred_tllist$j ?v0 ?v1 ?v2 )(and (forall ((?v3 D$ ))(=> (member$ ?v3 (tset$j ?v2 ))(fun_app$b ?v0 ?v3 )))(forall ((?v3 A$ ))(=> (member$c ?v3 (set2_tllist$j ?v2 ))(fun_app$e ?v1 ?v3 )))))):named a108 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 D_bool_fun$ )(?v2 B_d_tllist$ ))(= (pred_tllist$k ?v0 ?v1 ?v2 )(and (forall ((?v3 B$ ))(=> (member$b ?v3 (tset$k ?v2 ))(fun_app$d ?v0 ?v3 )))(forall ((?v3 D$ ))(=> (member$ ?v3 (set2_tllist$k ?v2 ))(fun_app$b ?v1 ?v3 )))))):named a109 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_tllist$ ))(= (pred_tllist$ ?v0 ?v1 ?v2 )(and (forall ((?v3 B$ ))(=> (member$b ?v3 (tset$ ?v2 ))(fun_app$d ?v0 ?v3 )))(forall ((?v3 B$ ))(=> (member$b ?v3 (set2_tllist$ ?v2 ))(fun_app$d ?v1 ?v3 )))))):named a110 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 C_bool_fun$ )(?v2 B_c_tllist$ ))(= (pred_tllist$l ?v0 ?v1 ?v2 )(and (forall ((?v3 B$ ))(=> (member$b ?v3 (tset$l ?v2 ))(fun_app$d ?v0 ?v3 )))(forall ((?v3 C$ ))(=> (member$a ?v3 (set2_tllist$l ?v2 ))(fun_app$c ?v1 ?v3 )))))):named a111 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_tllist$ ))(= (pred_tllist$a ?v0 ?v1 ?v2 )(and (forall ((?v3 B$ ))(=> (member$b ?v3 (tset$a ?v2 ))(fun_app$d ?v0 ?v3 )))(forall ((?v3 A$ ))(=> (member$c ?v3 (set2_tllist$a ?v2 ))(fun_app$e ?v1 ?v3 )))))):named a112 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 B_bool_fun$ )(?v2 C_b_tllist$ ))(= (pred_tllist$m ?v0 ?v1 ?v2 )(and (forall ((?v3 C$ ))(=> (member$a ?v3 (tset$m ?v2 ))(fun_app$c ?v0 ?v3 )))(forall ((?v3 B$ ))(=> (member$b ?v3 (set2_tllist$m ?v2 ))(fun_app$d ?v1 ?v3 )))))):named a113 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C_bool_fun$ )(?v2 C_c_tllist$ ))(= (pred_tllist$n ?v0 ?v1 ?v2 )(and (forall ((?v3 C$ ))(=> (member$a ?v3 (tset$n ?v2 ))(fun_app$c ?v0 ?v3 )))(forall ((?v3 C$ ))(=> (member$a ?v3 (set2_tllist$n ?v2 ))(fun_app$c ?v1 ?v3 )))))):named a114 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ )(?v2 C_c_d_tllist_bool_fun_fun$ ))(=> (and (member$a ?v0 (tset$f ?v1 ))(and (forall ((?v3 C_d_tllist$ ))(=> (not (is_TNil$a ?v3 ))(fun_app$v (fun_app$w ?v2 (thd$a ?v3 ))?v3 )))(forall ((?v3 C_d_tllist$ )(?v4 C$ ))(=> (and (not (is_TNil$a ?v3 ))(and (member$a ?v4 (tset$f (ttl$a ?v3 )))(fun_app$v (fun_app$w ?v2 ?v4 )(ttl$a ?v3 ))))(fun_app$v (fun_app$w ?v2 ?v4 )?v3 )))))(fun_app$v (fun_app$w ?v2 ?v0 )?v1 ))):named a115 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ )(?v2 A_a_b_tllist_bool_fun_fun$ ))(=> (and (member$c ?v0 (tset$e ?v1 ))(and (forall ((?v3 A_b_tllist$ ))(=> (not (is_TNil$ ?v3 ))(fun_app$t (fun_app$u ?v2 (thd$ ?v3 ))?v3 )))(forall ((?v3 A_b_tllist$ )(?v4 A$ ))(=> (and (not (is_TNil$ ?v3 ))(and (member$c ?v4 (tset$e (ttl$ ?v3 )))(fun_app$t (fun_app$u ?v2 ?v4 )(ttl$ ?v3 ))))(fun_app$t (fun_app$u ?v2 ?v4 )?v3 )))))(fun_app$t (fun_app$u ?v2 ?v0 )?v1 ))):named a116 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_d_tllist$ ))(=> (and (= (is_TNil$a ?v0 )(is_TNil$a ?v1 ))(and (=> (and (is_TNil$a ?v0 )(is_TNil$a ?v1 ))(= (terminal$a ?v0 )(terminal$a ?v1 )))(=> (and (not (is_TNil$a ?v0 ))(not (is_TNil$a ?v1 )))(and (= (thd$a ?v0 )(thd$a ?v1 ))(= (ttl$a ?v0 )(ttl$a ?v1 ))))))(= ?v0 ?v1 ))):named a117 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_b_tllist$ ))(=> (and (= (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(and (=> (and (is_TNil$ ?v0 )(is_TNil$ ?v1 ))(= (terminal$ ?v0 )(terminal$ ?v1 )))(=> (and (not (is_TNil$ ?v0 ))(not (is_TNil$ ?v1 )))(and (= (thd$ ?v0 )(thd$ ?v1 ))(= (ttl$ ?v0 )(ttl$ ?v1 ))))))(= ?v0 ?v1 ))):named a118 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a119 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a120 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 C_d_tllist$ ))(= (is_TNil$a (tmap$c ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a121 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 A_b_tllist$ ))(= (is_TNil$a (tmap$b ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a122 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ ))(= (is_TNil$ (tmap$a ?v0 ?v1 ?v2 ))(is_TNil$ ?v2 ))):named a123 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 C_d_tllist$ ))(= (is_TNil$ (tmap$ ?v0 ?v1 ?v2 ))(is_TNil$a ?v2 ))):named a124 ))
(assert (! (forall ((?v0 D_set$ ))(= (collect$ (uub$ ?v0 ))?v0 )):named a125 ))
(assert (! (forall ((?v0 B_set$ ))(= (collect$a (uuc$ ?v0 ))?v0 )):named a126 ))
(assert (! (forall ((?v0 C_set$ ))(= (collect$b (uud$ ?v0 ))?v0 )):named a127 ))
(assert (! (forall ((?v0 A_set$ ))(= (collect$c (uue$ ?v0 ))?v0 )):named a128 ))
(assert (! (forall ((?v0 D$ )(?v1 D_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$b ?v1 ?v0 ))):named a129 ))
(assert (! (forall ((?v0 B$ )(?v1 B_bool_fun$ ))(= (member$b ?v0 (collect$a ?v1 ))(fun_app$d ?v1 ?v0 ))):named a130 ))
(assert (! (forall ((?v0 C$ )(?v1 C_bool_fun$ ))(= (member$a ?v0 (collect$b ?v1 ))(fun_app$c ?v1 ?v0 ))):named a131 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(= (member$c ?v0 (collect$c ?v1 ))(fun_app$e ?v1 ?v0 ))):named a132 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 D_bool_fun$ )(?v2 D$ ))(! (= (pred_tllist$f ?v0 ?v1 (tNil$a ?v2 ))(fun_app$b ?v1 ?v2 )):pattern ((pred_tllist$f ?v0 ?v1 (tNil$a ?v2 ))))):named a133 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B$ ))(! (= (pred_tllist$e ?v0 ?v1 (tNil$ ?v2 ))(fun_app$d ?v1 ?v2 )):pattern ((pred_tllist$e ?v0 ?v1 (tNil$ ?v2 ))))):named a134 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (is_TNil$a ?v0 )(= (tNil$a (terminal$a ?v0 ))?v0 ))):named a135 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (is_TNil$ ?v0 )(= (tNil$ (terminal$ ?v0 ))?v0 ))):named a136 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_c_fun$ )(?v2 D_d_fun$ ))(=> (not (is_TNil$a ?v0 ))(= (thd$a (tmap$c ?v1 ?v2 ?v0 ))(fun_app$i ?v1 (thd$a ?v0 ))))):named a137 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_c_fun$ )(?v2 B_d_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (thd$a (tmap$b ?v1 ?v2 ?v0 ))(fun_app$h ?v1 (thd$ ?v0 ))))):named a138 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(=> (not (is_TNil$ ?v0 ))(= (thd$ (tmap$a ?v1 ?v2 ?v0 ))(fun_app$g ?v1 (thd$ ?v0 ))))):named a139 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_a_fun$ )(?v2 D_b_fun$ ))(=> (not (is_TNil$a ?v0 ))(= (thd$ (tmap$ ?v1 ?v2 ?v0 ))(fun_app$f ?v1 (thd$a ?v0 ))))):named a140 ))
(assert (! (forall ((?v0 D$ ))(is_TNil$a (tNil$a ?v0 ))):named a141 ))
(assert (! (forall ((?v0 B$ ))(is_TNil$ (tNil$ ?v0 ))):named a142 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 D$ ))(=> (= ?v0 (tNil$a ?v1 ))(is_TNil$a ?v0 ))):named a143 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 B$ ))(=> (= ?v0 (tNil$ ?v1 ))(is_TNil$ ?v0 ))):named a144 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (and (=> (is_TNil$a ?v0 )false )(=> (not (is_TNil$a ?v0 ))false ))false )):named a145 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (=> (is_TNil$ ?v0 )false )(=> (not (is_TNil$ ?v0 ))false ))false )):named a146 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (and (=> (is_TNil$a ?v0 )false )(=> (not (is_TNil$a ?v0 ))false ))false )):named a147 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (=> (is_TNil$ ?v0 )false )(=> (not (is_TNil$ ?v0 ))false ))false )):named a148 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(= (is_TNil$a ?v0 )(exists ((?v1 D$ ))(= ?v0 (tNil$a ?v1 ))))):named a149 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(= (is_TNil$ ?v0 )(exists ((?v1 B$ ))(= ?v0 (tNil$ ?v1 ))))):named a150 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_c_fun$ )(?v2 D_d_fun$ ))(! (=> (is_TNil$a ?v0 )(= (tmap$c ?v1 ?v2 ?v0 )(tNil$a (fun_app$x ?v2 (terminal$a ?v0 ))))):pattern ((tmap$c ?v1 ?v2 ?v0 )))):named a151 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_c_fun$ )(?v2 B_d_fun$ ))(! (=> (is_TNil$ ?v0 )(= (tmap$b ?v1 ?v2 ?v0 )(tNil$a (fun_app$y ?v2 (terminal$ ?v0 ))))):pattern ((tmap$b ?v1 ?v2 ?v0 )))):named a152 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ ))(! (=> (is_TNil$ ?v0 )(= (tmap$a ?v1 ?v2 ?v0 )(tNil$ (fun_app$z ?v2 (terminal$ ?v0 ))))):pattern ((tmap$a ?v1 ?v2 ?v0 )))):named a153 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C_a_fun$ )(?v2 D_b_fun$ ))(! (=> (is_TNil$a ?v0 )(= (tmap$ ?v1 ?v2 ?v0 )(tNil$ (fun_app$aa ?v2 (terminal$a ?v0 ))))):pattern ((tmap$ ?v1 ?v2 ?v0 )))):named a154 ))
(assert (! (forall ((?v0 A_b_tllist$ )(?v1 A$ )(?v2 A_b_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))(not (is_TNil$ ?v0 )))):named a155 ))
(assert (! (forall ((?v0 C_d_tllist$ )(?v1 C$ )(?v2 C_d_tllist$ ))(=> (= ?v0 (tCons$a ?v1 ?v2 ))(not (is_TNil$a ?v0 )))):named a156 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_tllist$ ))(not (is_TNil$ (tCons$ ?v0 ?v1 )))):named a157 ))
(assert (! (forall ((?v0 C$ )(?v1 C_d_tllist$ ))(not (is_TNil$a (tCons$a ?v0 ?v1 )))):named a158 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (is_TNil$a ?v0 )(is_TNil$a (ttl$a ?v0 )))):named a159 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (is_TNil$ ?v0 )(is_TNil$ (ttl$ ?v0 )))):named a160 ))
(assert (! (forall ((?v0 D$ ))(! (= (terminal$a (tNil$a ?v0 ))?v0 ):pattern ((tNil$a ?v0 )))):named a161 ))
(assert (! (forall ((?v0 B$ ))(! (= (terminal$ (tNil$ ?v0 ))?v0 ):pattern ((tNil$ ?v0 )))):named a162 ))
(assert (! (forall ((?v0 A_b_tllist$ ))(=> (and (forall ((?v1 B$ ))(=> (= ?v0 (tNil$ ?v1 ))false ))(forall ((?v1 A$ )(?v2 A_b_tllist$ ))(=> (= ?v0 (tCons$ ?v1 ?v2 ))false )))false )):named a163 ))
(assert (! (forall ((?v0 C_d_tllist$ ))(=> (and (forall ((?v1 D$ ))(=> (= ?v0 (tNil$a ?v1 ))false ))(forall ((?v1 C$ )(?v2 C_d_tllist$ ))(=> (= ?v0 (tCons$a ?v1 ?v2 ))false )))false )):named a164 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ )(?v2 A_b_tllist$ ))(not (= (tNil$ ?v0 )(tCons$ ?v1 ?v2 )))):named a165 ))
(assert (! (forall ((?v0 D$ )(?v1 C$ )(?v2 C_d_tllist$ ))(not (= (tNil$a ?v0 )(tCons$a ?v1 ?v2 )))):named a166 ))
(assert (! (forall ((?v0 D$ ))(! (= (ttl$a (tNil$a ?v0 ))(tNil$a ?v0 )):pattern ((tNil$a ?v0 )))):named a167 ))
(assert (! (forall ((?v0 B$ ))(! (= (ttl$ (tNil$ ?v0 ))(tNil$ ?v0 )):pattern ((tNil$ ?v0 )))):named a168 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 C_d_tllist$ )(?v3 D$ ))(= (= (tmap$c ?v0 ?v1 ?v2 )(tNil$a ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(= (fun_app$x ?v1 ?v4 )?v3 ))))):named a169 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 A_b_tllist$ )(?v3 D$ ))(= (= (tmap$b ?v0 ?v1 ?v2 )(tNil$a ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$ ?v4 ))(= (fun_app$y ?v1 ?v4 )?v3 ))))):named a170 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 A_b_tllist$ )(?v3 B$ ))(= (= (tmap$a ?v0 ?v1 ?v2 )(tNil$ ?v3 ))(exists ((?v4 B$ ))(and (= ?v2 (tNil$ ?v4 ))(= (fun_app$z ?v1 ?v4 )?v3 ))))):named a171 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 C_d_tllist$ )(?v3 B$ ))(= (= (tmap$ ?v0 ?v1 ?v2 )(tNil$ ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(= (fun_app$aa ?v1 ?v4 )?v3 ))))):named a172 ))
(assert (! (forall ((?v0 D$ )(?v1 C_c_fun$ )(?v2 D_d_fun$ )(?v3 C_d_tllist$ ))(= (= (tNil$a ?v0 )(tmap$c ?v1 ?v2 ?v3 ))(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(= (fun_app$x ?v2 ?v4 )?v0 ))))):named a173 ))
(assert (! (forall ((?v0 D$ )(?v1 A_c_fun$ )(?v2 B_d_fun$ )(?v3 A_b_tllist$ ))(= (= (tNil$a ?v0 )(tmap$b ?v1 ?v2 ?v3 ))(exists ((?v4 B$ ))(and (= ?v3 (tNil$ ?v4 ))(= (fun_app$y ?v2 ?v4 )?v0 ))))):named a174 ))
(assert (! (forall ((?v0 B$ )(?v1 A_a_fun$ )(?v2 B_b_fun$ )(?v3 A_b_tllist$ ))(= (= (tNil$ ?v0 )(tmap$a ?v1 ?v2 ?v3 ))(exists ((?v4 B$ ))(and (= ?v3 (tNil$ ?v4 ))(= (fun_app$z ?v2 ?v4 )?v0 ))))):named a175 ))
(assert (! (forall ((?v0 B$ )(?v1 C_a_fun$ )(?v2 D_b_fun$ )(?v3 C_d_tllist$ ))(= (= (tNil$ ?v0 )(tmap$ ?v1 ?v2 ?v3 ))(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(= (fun_app$aa ?v2 ?v4 )?v0 ))))):named a176 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 D_d_fun$ )(?v2 D$ ))(! (= (tmap$c ?v0 ?v1 (tNil$a ?v2 ))(tNil$a (fun_app$x ?v1 ?v2 ))):pattern ((tmap$c ?v0 ?v1 (tNil$a ?v2 ))))):named a177 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 B_d_fun$ )(?v2 B$ ))(! (= (tmap$b ?v0 ?v1 (tNil$ ?v2 ))(tNil$a (fun_app$y ?v1 ?v2 ))):pattern ((tmap$b ?v0 ?v1 (tNil$ ?v2 ))))):named a178 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (tmap$a ?v0 ?v1 (tNil$ ?v2 ))(tNil$ (fun_app$z ?v1 ?v2 ))):pattern ((tmap$a ?v0 ?v1 (tNil$ ?v2 ))))):named a179 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 D_b_fun$ )(?v2 D$ ))(! (= (tmap$ ?v0 ?v1 (tNil$a ?v2 ))(tNil$ (fun_app$aa ?v1 ?v2 ))):pattern ((tmap$ ?v0 ?v1 (tNil$a ?v2 ))))):named a180 ))
(assert (! (forall ((?v0 D$ ))(member$ ?v0 (set2_tllist$f (tNil$a ?v0 )))):named a181 ))
(assert (! (forall ((?v0 B$ ))(member$b ?v0 (set2_tllist$e (tNil$ ?v0 )))):named a182 ))
(check-sat )
;(get-unsat-core )
