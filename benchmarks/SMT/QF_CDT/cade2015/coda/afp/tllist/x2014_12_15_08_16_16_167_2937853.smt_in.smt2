;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort B_d_tllist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(B_llist$ (lNil$a )(lCons$a (lhd$a B$ )(ltl$a B_llist$ )))(A_c_tllist$ (tNil$ (terminal$ C$ ))(tCons$ (thd$ A$ )(ttl$ A_c_tllist$ )))(B_d_tllist$ (tNil$a (terminal$a D$ ))(tCons$a (thd$a B$ )(ttl$a B_d_tllist$ )))))
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun a$ ()A_b_bool_fun_fun$ )
(declare-fun b$ ()C_d_bool_fun_fun$ )
(declare-fun uu$ ()B_b_bool_fun_fun$ )
(declare-fun uua$ ()D_d_bool_fun_fun$ )
(declare-fun uub$ ()B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun uuc$ ()A_a_bool_fun_fun$ )
(declare-fun uud$ ()C_c_bool_fun_fun$ )
(declare-fun uue$ ()A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun uuf$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uug$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun transp$ (B_b_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (B_d_tllist_bool_fun$ B_d_tllist$ )Bool )
(declare-fun tlength$ (A_c_tllist$ )Enat$ )
(declare-fun transp$a (D_d_bool_fun_fun$ )Bool )
(declare-fun transp$b (A_a_bool_fun_fun$ )Bool )
(declare-fun transp$c (C_c_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (B_d_tllist_b_d_tllist_bool_fun_fun$ B_d_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$b (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$c (A_c_tllist_a_c_tllist_bool_fun_fun$ A_c_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$d (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$e (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$f (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$g (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$h (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$i (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$j (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$k (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$l (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$m (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$n (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$o (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$p (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$q (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$r (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$s (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun lappendt$ (A_llist$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tlength$a (B_d_tllist$ )Enat$ )
(declare-fun lappendt$a (B_llist$ B_d_tllist$ )B_d_tllist$ )
(declare-fun llist_all2$ (A_b_bool_fun_fun$ A_llist$ B_llist$ )Bool )
(declare-fun llist_all2$a (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$c (B_a_bool_fun_fun$ B_llist$ A_llist$ )Bool )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$a (B_b_bool_fun_fun$ D_d_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (A_a_bool_fun_fun$ C_c_bool_fun_fun$ )A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (B_a_bool_fun_fun$ D_c_bool_fun_fun$ B_d_tllist$ A_c_tllist$ )Bool )
(declare-fun llist_of_tllist$ (A_c_tllist$ )A_llist$ )
(declare-fun llist_of_tllist$a (B_d_tllist$ )B_llist$ )
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ ))(! (= (fun_app$ (fun_app$a uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ ))(! (= (fun_app$b (fun_app$c uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uue$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uug$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$g uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uuf$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$h (fun_app$i uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uua$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$j (fun_app$k uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uud$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$l (fun_app$m uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uu$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$n (fun_app$o uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uuc$ ?v0 )?v1 )))):named a7 ))
(assert (! (not (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(=> (llist_all2$ a$ ?v0 ?v1 )(forall ((?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$ a$ b$ ?v2 ?v3 )(tllist_all2$ a$ b$ (lappendt$ ?v0 ?v2 )(lappendt$a ?v1 ?v3 ))))))):named a8 ))
(assert (! (= (tllist_all2$a uu$ uua$ )uub$ ):named a9 ))
(assert (! (= (tllist_all2$b uuc$ uud$ )uue$ ):named a10 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ )(?v4 B_b_bool_fun_fun$ )(?v5 D_d_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 B$ )(?v7 B$ ))(=> (fun_app$l (fun_app$m ?v0 ?v6 )?v7 )(fun_app$l (fun_app$m ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 D$ ))(=> (fun_app$h (fun_app$i ?v1 ?v6 )?v7 )(fun_app$h (fun_app$i ?v5 ?v6 )?v7 )))))(fun_app$ (fun_app$a (tllist_all2$a ?v4 ?v5 )?v2 )?v3 ))):named a11 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ )(?v4 B_a_bool_fun_fun$ )(?v5 D_c_bool_fun_fun$ ))(=> (and (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 A$ ))(=> (fun_app$n (fun_app$p ?v0 ?v6 )?v7 )(fun_app$n (fun_app$p ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 C$ ))(=> (fun_app$j (fun_app$q ?v1 ?v6 )?v7 )(fun_app$j (fun_app$q ?v5 ?v6 )?v7 )))))(tllist_all2$c ?v4 ?v5 ?v2 ?v3 ))):named a12 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 C_c_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$n (fun_app$o ?v0 ?v6 )?v7 )(fun_app$n (fun_app$o ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 C$ ))(=> (fun_app$j (fun_app$k ?v1 ?v6 )?v7 )(fun_app$j (fun_app$k ?v5 ?v6 )?v7 )))))(fun_app$b (fun_app$c (tllist_all2$b ?v4 ?v5 )?v2 )?v3 ))):named a13 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (fun_app$l (fun_app$r ?v0 ?v6 )?v7 )(fun_app$l (fun_app$r ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (fun_app$h (fun_app$s ?v1 ?v6 )?v7 )(fun_app$h (fun_app$s ?v5 ?v6 )?v7 )))))(tllist_all2$ ?v4 ?v5 ?v2 ?v3 ))):named a14 ))
(assert (! (= (llist_all2$a uuc$ )uuf$ ):named a15 ))
(assert (! (= (llist_all2$b uu$ )uug$ ):named a16 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (llist_all2$c ?v0 ?v1 ?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$n (fun_app$p ?v0 ?v4 )?v5 )(fun_app$n (fun_app$p ?v3 ?v4 )?v5 ))))(llist_all2$c ?v3 ?v1 ?v2 ))):named a17 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$g (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (fun_app$n (fun_app$o ?v0 ?v4 )?v5 )(fun_app$n (fun_app$o ?v3 ?v4 )?v5 ))))(fun_app$f (fun_app$g (llist_all2$a ?v3 )?v1 )?v2 ))):named a18 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (fun_app$l (fun_app$m ?v0 ?v4 )?v5 )(fun_app$l (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$d (fun_app$e (llist_all2$b ?v3 )?v1 )?v2 ))):named a19 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (llist_all2$ ?v0 ?v1 ?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$l (fun_app$r ?v0 ?v4 )?v5 )(fun_app$l (fun_app$r ?v3 ?v4 )?v5 ))))(llist_all2$ ?v3 ?v1 ?v2 ))):named a20 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 A_a_bool_fun_fun$ )(?v3 B_llist$ )(?v4 A_llist$ )(?v5 B_llist$ )(?v6 A_llist$ ))(=> (and (forall ((?v7 B$ )(?v8 A$ ))(=> (fun_app$n (fun_app$p ?v0 ?v7 )?v8 )(forall ((?v9 B$ )(?v10 A$ ))(=> (fun_app$n (fun_app$p ?v0 ?v9 )?v10 )(= (fun_app$l (fun_app$m ?v1 ?v7 )?v9 )(fun_app$n (fun_app$o ?v2 ?v8 )?v10 ))))))(and (llist_all2$c ?v0 ?v3 ?v4 )(llist_all2$c ?v0 ?v5 ?v6 )))(= (fun_app$d (fun_app$e (llist_all2$b ?v1 )?v3 )?v5 )(fun_app$f (fun_app$g (llist_all2$a ?v2 )?v4 )?v6 )))):named a21 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_a_bool_fun_fun$ )(?v3 A_llist$ )(?v4 A_llist$ )(?v5 A_llist$ )(?v6 A_llist$ ))(=> (and (forall ((?v7 A$ )(?v8 A$ ))(=> (fun_app$n (fun_app$o ?v0 ?v7 )?v8 )(forall ((?v9 A$ )(?v10 A$ ))(=> (fun_app$n (fun_app$o ?v0 ?v9 )?v10 )(= (fun_app$n (fun_app$o ?v1 ?v7 )?v9 )(fun_app$n (fun_app$o ?v2 ?v8 )?v10 ))))))(and (fun_app$f (fun_app$g (llist_all2$a ?v0 )?v3 )?v4 )(fun_app$f (fun_app$g (llist_all2$a ?v0 )?v5 )?v6 )))(= (fun_app$f (fun_app$g (llist_all2$a ?v1 )?v3 )?v5 )(fun_app$f (fun_app$g (llist_all2$a ?v2 )?v4 )?v6 )))):named a22 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_bool_fun_fun$ )(?v2 B_b_bool_fun_fun$ )(?v3 B_llist$ )(?v4 B_llist$ )(?v5 B_llist$ )(?v6 B_llist$ ))(=> (and (forall ((?v7 B$ )(?v8 B$ ))(=> (fun_app$l (fun_app$m ?v0 ?v7 )?v8 )(forall ((?v9 B$ )(?v10 B$ ))(=> (fun_app$l (fun_app$m ?v0 ?v9 )?v10 )(= (fun_app$l (fun_app$m ?v1 ?v7 )?v9 )(fun_app$l (fun_app$m ?v2 ?v8 )?v10 ))))))(and (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v3 )?v4 )(fun_app$d (fun_app$e (llist_all2$b ?v0 )?v5 )?v6 )))(= (fun_app$d (fun_app$e (llist_all2$b ?v1 )?v3 )?v5 )(fun_app$d (fun_app$e (llist_all2$b ?v2 )?v4 )?v6 )))):named a23 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 B_b_bool_fun_fun$ )(?v3 A_llist$ )(?v4 B_llist$ )(?v5 A_llist$ )(?v6 B_llist$ ))(=> (and (forall ((?v7 A$ )(?v8 B$ ))(=> (fun_app$l (fun_app$r ?v0 ?v7 )?v8 )(forall ((?v9 A$ )(?v10 B$ ))(=> (fun_app$l (fun_app$r ?v0 ?v9 )?v10 )(= (fun_app$n (fun_app$o ?v1 ?v7 )?v9 )(fun_app$l (fun_app$m ?v2 ?v8 )?v10 ))))))(and (llist_all2$ ?v0 ?v3 ?v4 )(llist_all2$ ?v0 ?v5 ?v6 )))(= (fun_app$f (fun_app$g (llist_all2$a ?v1 )?v3 )?v5 )(fun_app$d (fun_app$e (llist_all2$b ?v2 )?v4 )?v6 )))):named a24 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(fun_app$f (fun_app$g (llist_all2$a ?v0 )(llist_of_tllist$ ?v2 ))(llist_of_tllist$ ?v3 )))):named a25 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(llist_all2$c ?v0 (llist_of_tllist$a ?v2 )(llist_of_tllist$ ?v3 )))):named a26 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(fun_app$d (fun_app$e (llist_all2$b ?v0 )(llist_of_tllist$a ?v2 ))(llist_of_tllist$a ?v3 )))):named a27 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(llist_all2$ ?v0 (llist_of_tllist$ ?v2 )(llist_of_tllist$a ?v3 )))):named a28 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(fun_app$f (fun_app$g (llist_all2$a ?v0 )(llist_of_tllist$ ?v2 ))(llist_of_tllist$ ?v3 )))):named a29 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(llist_all2$c ?v0 (llist_of_tllist$a ?v2 )(llist_of_tllist$ ?v3 )))):named a30 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(fun_app$d (fun_app$e (llist_all2$b ?v0 )(llist_of_tllist$a ?v2 ))(llist_of_tllist$a ?v3 )))):named a31 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(llist_all2$ ?v0 (llist_of_tllist$ ?v2 )(llist_of_tllist$a ?v3 )))):named a32 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(! (= (lappendt$ lNil$ ?v0 )?v0 ):pattern ((lappendt$ lNil$ ?v0 )))):named a33 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(! (= (lappendt$a lNil$a ?v0 )?v0 ):pattern ((lappendt$a lNil$a ?v0 )))):named a34 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(= (tlength$ ?v2 )(tlength$ ?v3 )))):named a35 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$c ?v0 ?v1 ?v2 ?v3 )(= (tlength$a ?v2 )(tlength$ ?v3 )))):named a36 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(= (tlength$a ?v2 )(tlength$a ?v3 )))):named a37 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(= (tlength$ ?v2 )(tlength$a ?v3 )))):named a38 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ )(?v4 B_d_tllist$ ))(=> (and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v4 )(and (transp$ ?v0 )(transp$a ?v1 ))))(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )?v4 ))):named a39 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ )(?v4 A_c_tllist$ ))(=> (and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v4 )(and (transp$b ?v0 )(transp$c ?v1 ))))(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )?v4 ))):named a40 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$j (fun_app$k ?v1 ?v2 )?v3 )):pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a41 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 C$ ))(! (= (tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))(fun_app$j (fun_app$q ?v1 ?v2 )?v3 )):pattern ((tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))))):named a42 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))(fun_app$h (fun_app$i ?v1 ?v2 )?v3 )):pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))))):named a43 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))(fun_app$h (fun_app$s ?v1 ?v2 )?v3 )):pattern ((tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))))):named a44 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))(and (fun_app$n (fun_app$o ?v0 ?v2 )?v4 )(fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tCons$ ?v4 ?v5 ))))):named a45 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 A$ )(?v5 A_c_tllist$ ))(! (= (tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))(and (fun_app$n (fun_app$p ?v0 ?v2 )?v4 )(tllist_all2$c ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$c ?v0 ?v1 (tCons$a ?v2 ?v3 )(tCons$ ?v4 ?v5 ))))):named a46 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 B$ )(?v5 B_d_tllist$ ))(! (= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))(and (fun_app$l (fun_app$m ?v0 ?v2 )?v4 )(fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tCons$a ?v4 ?v5 ))))):named a47 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 B$ )(?v5 B_d_tllist$ ))(! (= (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))(and (fun_app$l (fun_app$r ?v0 ?v2 )?v4 )(tllist_all2$ ?v0 ?v1 ?v3 ?v5 ))):pattern ((tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tCons$a ?v4 ?v5 ))))):named a48 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 A_c_tllist$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )(tNil$ ?v2 ))?v3 )(exists ((?v4 C$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$j (fun_app$k ?v1 ?v2 )?v4 ))))):named a49 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 A_c_tllist$ ))(= (tllist_all2$c ?v0 ?v1 (tNil$a ?v2 )?v3 )(exists ((?v4 C$ ))(and (= ?v3 (tNil$ ?v4 ))(fun_app$j (fun_app$q ?v1 ?v2 )?v4 ))))):named a50 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 B_d_tllist$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )(tNil$a ?v2 ))?v3 )(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$h (fun_app$i ?v1 ?v2 )?v4 ))))):named a51 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 B_d_tllist$ ))(= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )?v3 )(exists ((?v4 D$ ))(and (= ?v3 (tNil$a ?v4 ))(fun_app$h (fun_app$s ?v1 ?v2 )?v4 ))))):named a52 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 C$ ))(= (fun_app$b (fun_app$c (tllist_all2$b ?v0 ?v1 )?v2 )(tNil$ ?v3 ))(exists ((?v4 C$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$j (fun_app$k ?v1 ?v4 )?v3 ))))):named a53 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 C$ ))(= (tllist_all2$c ?v0 ?v1 ?v2 (tNil$ ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$j (fun_app$q ?v1 ?v4 )?v3 ))))):named a54 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 D$ ))(= (fun_app$ (fun_app$a (tllist_all2$a ?v0 ?v1 )?v2 )(tNil$a ?v3 ))(exists ((?v4 D$ ))(and (= ?v2 (tNil$a ?v4 ))(fun_app$h (fun_app$i ?v1 ?v4 )?v3 ))))):named a55 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 D$ ))(= (tllist_all2$ ?v0 ?v1 ?v2 (tNil$a ?v3 ))(exists ((?v4 C$ ))(and (= ?v2 (tNil$ ?v4 ))(fun_app$h (fun_app$s ?v1 ?v4 )?v3 ))))):named a56 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A$ )(?v3 A_c_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a57 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 B$ )(?v3 B_d_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a58 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a59 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a60 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (llist_all2$c ?v0 lNil$a ?v1 )(= ?v1 lNil$ )):pattern ((llist_all2$c ?v0 lNil$a ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$f (fun_app$g (llist_all2$a ?v0 )lNil$ )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$f (fun_app$g (llist_all2$a ?v0 )lNil$ )?v1 )))):named a62 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$b ?v0 )lNil$a )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$d (fun_app$e (llist_all2$b ?v0 )lNil$a )?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (llist_all2$ ?v0 lNil$ ?v1 )(= ?v1 lNil$a )):pattern ((llist_all2$ ?v0 lNil$ ?v1 )))):named a64 ))
(check-sat )
;(get-unsat-core )
