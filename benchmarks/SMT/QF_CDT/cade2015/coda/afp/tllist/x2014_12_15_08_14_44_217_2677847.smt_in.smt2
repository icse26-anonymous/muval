;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort E$ 0 )
(declare-sort F$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort C_d_fun$ 0 )
(declare-sort C_e_fun$ 0 )
(declare-sort D_c_fun$ 0 )
(declare-sort D_d_fun$ 0 )
(declare-sort D_e_fun$ 0 )
(declare-sort E_c_fun$ 0 )
(declare-sort E_d_fun$ 0 )
(declare-sort F_c_fun$ 0 )
(declare-sort F_d_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort E_bool_fun$ 0 )
(declare-sort F_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_c_fun$ 0 )
(declare-sort A_e_tllist_e_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_d_fun$ 0 )
(declare-sort B_f_tllist_f_fun$ 0 )
(declare-sort C_a_c_tllist_fun$ 0 )
(declare-sort C_a_d_tllist_fun$ 0 )
(declare-sort C_a_e_tllist_fun$ 0 )
(declare-sort C_b_c_tllist_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort C_e_bool_fun_fun$ 0 )
(declare-sort C_f_bool_fun_fun$ 0 )
(declare-sort D_a_d_tllist_fun$ 0 )
(declare-sort D_b_c_tllist_fun$ 0 )
(declare-sort D_b_d_tllist_fun$ 0 )
(declare-sort D_b_f_tllist_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort D_e_bool_fun_fun$ 0 )
(declare-sort D_f_bool_fun_fun$ 0 )
(declare-sort E_a_c_tllist_fun$ 0 )
(declare-sort E_a_e_tllist_fun$ 0 )
(declare-sort E_c_bool_fun_fun$ 0 )
(declare-sort E_d_bool_fun_fun$ 0 )
(declare-sort E_e_bool_fun_fun$ 0 )
(declare-sort E_f_bool_fun_fun$ 0 )
(declare-sort F_b_d_tllist_fun$ 0 )
(declare-sort F_b_f_tllist_fun$ 0 )
(declare-sort F_c_bool_fun_fun$ 0 )
(declare-sort F_f_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort A_e_tllist_bool_fun$ 0 )
(declare-sort B_d_tllist_bool_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort A_e_tllist_a_e_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_e_tllist$ (tNil$ (terminal$ E$ ))(tCons$ (thd$ A$ )(ttl$ A_e_tllist$ )))(B_f_tllist$ (tNil$a (terminal$a F$ ))(tCons$a (thd$a B$ )(ttl$a B_f_tllist$ )))(A_c_tllist$ (tNil$b (terminal$b C$ ))(tCons$b (thd$b A$ )(ttl$b A_c_tllist$ )))(B_d_tllist$ (tNil$c (terminal$c D$ ))(tCons$c (thd$c B$ )(ttl$c B_d_tllist$ )))(A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(B_llist$ (lNil$a )(lCons$a (lhd$a B$ )(ltl$a B_llist$ )))(A_d_tllist$ (tNil$d (terminal$d D$ ))(tCons$d (thd$d A$ )(ttl$d A_d_tllist$ )))(B_c_tllist$ (tNil$e (terminal$e C$ ))(tCons$e (thd$e B$ )(ttl$e B_c_tllist$ )))))
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun p$ ()A_b_bool_fun_fun$ )
(declare-fun q$ ()C_d_bool_fun_fun$ )
(declare-fun r$ ()E_f_bool_fun_fun$ )
(declare-fun uu$ ()A_a_bool_fun_fun$ )
(declare-fun xs$ ()A_c_tllist$ )
(declare-fun ys$ ()B_d_tllist$ )
(declare-fun uua$ ()E_e_bool_fun_fun$ )
(declare-fun uub$ ()A_e_tllist_a_e_tllist_bool_fun_fun$ )
(declare-fun uuc$ ()B_b_bool_fun_fun$ )
(declare-fun uud$ ()D_d_bool_fun_fun$ )
(declare-fun uue$ ()B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun uuf$ ()C_c_bool_fun_fun$ )
(declare-fun uug$ ()A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun uuh$ ()A_e_tllist_e_fun$ )
(declare-fun uui$ ()B_f_tllist_f_fun$ )
(declare-fun uuj$ ()A_c_tllist_c_fun$ )
(declare-fun uuk$ ()B_d_tllist_d_fun$ )
(declare-fun xs$a ()C_a_e_tllist_fun$ )
(declare-fun ys$a ()D_b_f_tllist_fun$ )
(declare-fun tmap$ (A_a_fun$ C_c_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tset$ (A_e_tllist$ )A_set$ )
(declare-fun tcast$ (B_f_tllist$ )B_f_tllist$ )
(declare-fun tmap$a (B_a_fun$ D_c_fun$ B_d_tllist$ )A_c_tllist$ )
(declare-fun tmap$b (A_b_fun$ C_d_fun$ A_c_tllist$ )B_d_tllist$ )
(declare-fun tmap$c (B_b_fun$ D_d_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun tmap$d (A_a_fun$ E_c_fun$ A_e_tllist$ )A_c_tllist$ )
(declare-fun tmap$e (B_a_fun$ F_c_fun$ B_f_tllist$ )A_c_tllist$ )
(declare-fun tmap$f (A_b_fun$ E_d_fun$ A_e_tllist$ )B_d_tllist$ )
(declare-fun tmap$g (B_b_fun$ F_d_fun$ B_f_tllist$ )B_d_tllist$ )
(declare-fun tmap$h (A_a_fun$ C_e_fun$ A_c_tllist$ )A_e_tllist$ )
(declare-fun tmap$i (B_a_fun$ D_e_fun$ B_d_tllist$ )A_e_tllist$ )
(declare-fun tset$a (B_f_tllist$ )B_set$ )
(declare-fun tset$b (A_c_tllist$ )A_set$ )
(declare-fun tset$c (B_d_tllist$ )B_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun tcast$a (B_f_tllist$ )B_d_tllist$ )
(declare-fun tcast$b (A_e_tllist$ )A_e_tllist$ )
(declare-fun tcast$c (A_e_tllist$ )A_c_tllist$ )
(declare-fun tcast$d (A_c_tllist$ )A_c_tllist$ )
(declare-fun tcast$e (B_d_tllist$ )B_d_tllist$ )
(declare-fun tcast$f (A_c_tllist$ )A_e_tllist$ )
(declare-fun tcast$g (B_d_tllist$ )B_f_tllist$ )
(declare-fun fun_app$ (B_f_tllist_f_fun$ B_f_tllist$ )F$ )
(declare-fun lfinite$ (A_llist$ )Bool )
(declare-fun member$a (B$ B_set$ )Bool )
(declare-fun tappend$ (A_c_tllist$ C_a_e_tllist_fun$ )A_e_tllist$ )
(declare-fun tlength$ (A_e_tllist$ )Enat$ )
(declare-fun fun_app$a (B_d_tllist_d_fun$ B_d_tllist$ )D$ )
(declare-fun fun_app$b (A_e_tllist_e_fun$ A_e_tllist$ )E$ )
(declare-fun fun_app$c (A_c_tllist_c_fun$ A_c_tllist$ )C$ )
(declare-fun fun_app$d (B_d_tllist_bool_fun$ B_d_tllist$ )Bool )
(declare-fun fun_app$e (B_d_tllist_b_d_tllist_bool_fun_fun$ B_d_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$f (A_e_tllist_bool_fun$ A_e_tllist$ )Bool )
(declare-fun fun_app$g (A_e_tllist_a_e_tllist_bool_fun_fun$ A_e_tllist$ )A_e_tllist_bool_fun$ )
(declare-fun fun_app$h (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$i (A_c_tllist_a_c_tllist_bool_fun_fun$ A_c_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$j (E_bool_fun$ E$ )Bool )
(declare-fun fun_app$k (E_e_bool_fun_fun$ E$ )E_bool_fun$ )
(declare-fun fun_app$l (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$m (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$n (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$o (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$p (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$q (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$r (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$s (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$t (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$u (C_a_e_tllist_fun$ C$ )A_e_tllist$ )
(declare-fun fun_app$v (D_b_f_tllist_fun$ D$ )B_f_tllist$ )
(declare-fun fun_app$w (C_a_c_tllist_fun$ C$ )A_c_tllist$ )
(declare-fun fun_app$x (D_b_d_tllist_fun$ D$ )B_d_tllist$ )
(declare-fun fun_app$y (E_a_c_tllist_fun$ E$ )A_c_tllist$ )
(declare-fun fun_app$z (E_a_e_tllist_fun$ E$ )A_e_tllist$ )
(declare-fun lappendt$ (A_llist$ A_e_tllist$ )A_e_tllist$ )
(declare-fun lfinite$a (B_llist$ )Bool )
(declare-fun tappend$a (B_d_tllist$ D_b_f_tllist_fun$ )B_f_tllist$ )
(declare-fun tappend$b (A_c_tllist$ C_a_c_tllist_fun$ )A_c_tllist$ )
(declare-fun tappend$c (B_d_tllist$ D_b_d_tllist_fun$ )B_d_tllist$ )
(declare-fun tappend$d (A_e_tllist$ E_a_c_tllist_fun$ )A_c_tllist$ )
(declare-fun tappend$e (A_e_tllist$ E_a_e_tllist_fun$ )A_e_tllist$ )
(declare-fun tappend$f (B_f_tllist$ F_b_d_tllist_fun$ )B_d_tllist$ )
(declare-fun tappend$g (B_f_tllist$ F_b_f_tllist_fun$ )B_f_tllist$ )
(declare-fun tappend$h (A_c_tllist$ C_a_d_tllist_fun$ )A_d_tllist$ )
(declare-fun tappend$i (B_d_tllist$ D_b_c_tllist_fun$ )B_c_tllist$ )
(declare-fun tappend$j (B_c_tllist$ C_b_c_tllist_fun$ )B_c_tllist$ )
(declare-fun tappend$k (A_d_tllist$ D_a_d_tllist_fun$ )A_d_tllist$ )
(declare-fun tlength$a (B_f_tllist$ )Enat$ )
(declare-fun tlength$b (A_c_tllist$ )Enat$ )
(declare-fun tlength$c (B_d_tllist$ )Enat$ )
(declare-fun fun_app$aa (F_b_d_tllist_fun$ F$ )B_d_tllist$ )
(declare-fun fun_app$ab (F_b_f_tllist_fun$ F$ )B_f_tllist$ )
(declare-fun fun_app$ac (C_a_d_tllist_fun$ C$ )A_d_tllist$ )
(declare-fun fun_app$ad (D_b_c_tllist_fun$ D$ )B_c_tllist$ )
(declare-fun fun_app$ae (C_b_c_tllist_fun$ C$ )B_c_tllist$ )
(declare-fun fun_app$af (D_a_d_tllist_fun$ D$ )A_d_tllist$ )
(declare-fun fun_app$ag (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$ah (E_d_bool_fun_fun$ E$ )D_bool_fun$ )
(declare-fun fun_app$ai (F_bool_fun$ F$ )Bool )
(declare-fun fun_app$aj (C_f_bool_fun_fun$ C$ )F_bool_fun$ )
(declare-fun fun_app$ak (E_c_bool_fun_fun$ E$ )C_bool_fun$ )
(declare-fun fun_app$al (C_e_bool_fun_fun$ C$ )E_bool_fun$ )
(declare-fun fun_app$am (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$an (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$ao (E_f_bool_fun_fun$ E$ )F_bool_fun$ )
(declare-fun fun_app$ap (D_e_bool_fun_fun$ D$ )E_bool_fun$ )
(declare-fun fun_app$aq (D_f_bool_fun_fun$ D$ )F_bool_fun$ )
(declare-fun fun_app$ar (F_f_bool_fun_fun$ F$ )F_bool_fun$ )
(declare-fun fun_app$as (C_c_fun$ C$ )C$ )
(declare-fun fun_app$at (D_c_fun$ D$ )C$ )
(declare-fun fun_app$au (C_d_fun$ C$ )D$ )
(declare-fun fun_app$av (D_d_fun$ D$ )D$ )
(declare-fun fun_app$aw (E_c_fun$ E$ )C$ )
(declare-fun fun_app$ax (F_c_fun$ F$ )C$ )
(declare-fun fun_app$ay (E_d_fun$ E$ )D$ )
(declare-fun fun_app$az (F_d_fun$ F$ )D$ )
(declare-fun fun_app$ba (C_e_fun$ C$ )E$ )
(declare-fun fun_app$bb (D_e_fun$ D$ )E$ )
(declare-fun lappendt$a (B_llist$ B_f_tllist$ )B_f_tllist$ )
(declare-fun lappendt$b (A_llist$ A_c_tllist$ )A_c_tllist$ )
(declare-fun lappendt$c (B_llist$ B_d_tllist$ )B_d_tllist$ )
(declare-fun terminal0$ ()A_e_tllist_e_fun$ )
(declare-fun undefined$ ()D$ )
(declare-fun terminal0$a ()B_f_tllist_f_fun$ )
(declare-fun terminal0$b ()A_c_tllist_c_fun$ )
(declare-fun terminal0$c ()B_d_tllist_d_fun$ )
(declare-fun undefined$a ()C$ )
(declare-fun undefined$b ()E$ )
(declare-fun undefined$c ()F$ )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ E_f_bool_fun_fun$ A_e_tllist$ B_f_tllist$ )Bool )
(declare-fun tllist_all2$a (A_b_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$b (A_a_bool_fun_fun$ E_e_bool_fun_fun$ )A_e_tllist_a_e_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$c (B_b_bool_fun_fun$ D_d_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$d (A_a_bool_fun_fun$ C_c_bool_fun_fun$ )A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$e (A_b_bool_fun_fun$ E_d_bool_fun_fun$ A_e_tllist$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$f (A_b_bool_fun_fun$ C_f_bool_fun_fun$ A_c_tllist$ B_f_tllist$ )Bool )
(declare-fun tllist_all2$g (A_a_bool_fun_fun$ E_c_bool_fun_fun$ A_e_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$h (A_a_bool_fun_fun$ C_e_bool_fun_fun$ A_c_tllist$ A_e_tllist$ )Bool )
(declare-fun tllist_all2$i (B_a_bool_fun_fun$ D_c_bool_fun_fun$ B_d_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$j (B_a_bool_fun_fun$ D_e_bool_fun_fun$ B_d_tllist$ A_e_tllist$ )Bool )
(declare-fun tllist_all2$k (B_b_bool_fun_fun$ D_f_bool_fun_fun$ B_d_tllist$ B_f_tllist$ )Bool )
(declare-fun tllist_all2$l (B_a_bool_fun_fun$ F_c_bool_fun_fun$ B_f_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$m (B_b_bool_fun_fun$ F_f_bool_fun_fun$ B_f_tllist$ B_f_tllist$ )Bool )
(declare-fun llist_of_tllist$ (A_c_tllist$ )A_llist$ )
(declare-fun tllist_of_llist$ (E$ A_llist$ )A_e_tllist$ )
(declare-fun llist_of_tllist$a (B_d_tllist$ )B_llist$ )
(declare-fun llist_of_tllist$b (A_e_tllist$ )A_llist$ )
(declare-fun llist_of_tllist$c (B_f_tllist$ )B_llist$ )
(declare-fun llist_of_tllist$d (A_d_tllist$ )A_llist$ )
(declare-fun llist_of_tllist$e (B_c_tllist$ )B_llist$ )
(declare-fun tllist_of_llist$a (F$ B_llist$ )B_f_tllist$ )
(declare-fun tllist_of_llist$b (C$ A_llist$ )A_c_tllist$ )
(declare-fun tllist_of_llist$c (D$ B_llist$ )B_d_tllist$ )
(assert (! (forall ((?v0 B_f_tllist$ ))(! (= (fun_app$ uui$ ?v0 )(terminal$a ?v0 )):pattern ((fun_app$ uui$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(! (= (fun_app$a uuk$ ?v0 )(terminal$c ?v0 )):pattern ((fun_app$a uuk$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_e_tllist$ ))(! (= (fun_app$b uuh$ ?v0 )(terminal$ ?v0 )):pattern ((fun_app$b uuh$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(! (= (fun_app$c uuj$ ?v0 )(terminal$b ?v0 )):pattern ((fun_app$c uuj$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ ))(! (= (fun_app$d (fun_app$e uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uue$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 A_e_tllist$ ))(! (= (fun_app$f (fun_app$g uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uub$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ ))(! (= (fun_app$h (fun_app$i uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uug$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 E$ )(?v1 E$ ))(! (= (fun_app$j (fun_app$k uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uua$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$l (fun_app$m uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uud$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$n (fun_app$o uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uuf$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$p (fun_app$q uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$p (fun_app$q uuc$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$r (fun_app$s uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$r (fun_app$s uu$ ?v0 )?v1 )))):named a11 ))
(assert (! (not (tllist_all2$ p$ r$ (tappend$ xs$ xs$a )(tappend$a ys$ ys$a ))):named a12 ))
(assert (! (tllist_all2$a p$ q$ xs$ ys$ ):named a13 ))
(assert (! (=> (and (lfinite$ (llist_of_tllist$ xs$ ))(and (lfinite$a (llist_of_tllist$a ys$ ))(fun_app$l (fun_app$t q$ (terminal$b xs$ ))(terminal$c ys$ ))))(tllist_all2$ p$ r$ (fun_app$u xs$a (terminal$b xs$ ))(fun_app$v ys$a (terminal$c ys$ )))):named a14 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_e_tllist_fun$ ))(= (lfinite$ (llist_of_tllist$b (tappend$ ?v0 ?v1 )))(and (lfinite$ (llist_of_tllist$ ?v0 ))(lfinite$ (llist_of_tllist$b (fun_app$u ?v1 (terminal$b ?v0 ))))))):named a15 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_c_tllist_fun$ ))(= (lfinite$ (llist_of_tllist$ (tappend$b ?v0 ?v1 )))(and (lfinite$ (llist_of_tllist$ ?v0 ))(lfinite$ (llist_of_tllist$ (fun_app$w ?v1 (terminal$b ?v0 ))))))):named a16 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_f_tllist_fun$ ))(= (lfinite$a (llist_of_tllist$c (tappend$a ?v0 ?v1 )))(and (lfinite$a (llist_of_tllist$a ?v0 ))(lfinite$a (llist_of_tllist$c (fun_app$v ?v1 (terminal$c ?v0 ))))))):named a17 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_d_tllist_fun$ ))(= (lfinite$a (llist_of_tllist$a (tappend$c ?v0 ?v1 )))(and (lfinite$a (llist_of_tllist$a ?v0 ))(lfinite$a (llist_of_tllist$a (fun_app$x ?v1 (terminal$c ?v0 ))))))):named a18 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 E_a_c_tllist_fun$ ))(= (lfinite$ (llist_of_tllist$ (tappend$d ?v0 ?v1 )))(and (lfinite$ (llist_of_tllist$b ?v0 ))(lfinite$ (llist_of_tllist$ (fun_app$y ?v1 (terminal$ ?v0 ))))))):named a19 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 E_a_e_tllist_fun$ ))(= (lfinite$ (llist_of_tllist$b (tappend$e ?v0 ?v1 )))(and (lfinite$ (llist_of_tllist$b ?v0 ))(lfinite$ (llist_of_tllist$b (fun_app$z ?v1 (terminal$ ?v0 ))))))):named a20 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 F_b_d_tllist_fun$ ))(= (lfinite$a (llist_of_tllist$a (tappend$f ?v0 ?v1 )))(and (lfinite$a (llist_of_tllist$c ?v0 ))(lfinite$a (llist_of_tllist$a (fun_app$aa ?v1 (terminal$a ?v0 ))))))):named a21 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 F_b_f_tllist_fun$ ))(= (lfinite$a (llist_of_tllist$c (tappend$g ?v0 ?v1 )))(and (lfinite$a (llist_of_tllist$c ?v0 ))(lfinite$a (llist_of_tllist$c (fun_app$ab ?v1 (terminal$a ?v0 ))))))):named a22 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_d_tllist_fun$ ))(= (lfinite$ (llist_of_tllist$d (tappend$h ?v0 ?v1 )))(and (lfinite$ (llist_of_tllist$ ?v0 ))(lfinite$ (llist_of_tllist$d (fun_app$ac ?v1 (terminal$b ?v0 ))))))):named a23 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_c_tllist_fun$ ))(= (lfinite$a (llist_of_tllist$e (tappend$i ?v0 ?v1 )))(and (lfinite$a (llist_of_tllist$a ?v0 ))(lfinite$a (llist_of_tllist$e (fun_app$ad ?v1 (terminal$c ?v0 ))))))):named a24 ))
(assert (! (forall ((?v0 B_c_tllist$ )(?v1 C_b_c_tllist_fun$ ))(= (terminal$e (tappend$j ?v0 ?v1 ))(ite (lfinite$a (llist_of_tllist$e ?v0 ))(terminal$e (fun_app$ae ?v1 (terminal$e ?v0 )))(terminal$e ?v0 )))):named a25 ))
(assert (! (forall ((?v0 A_d_tllist$ )(?v1 D_a_d_tllist_fun$ ))(= (terminal$d (tappend$k ?v0 ?v1 ))(ite (lfinite$ (llist_of_tllist$d ?v0 ))(terminal$d (fun_app$af ?v1 (terminal$d ?v0 )))(terminal$d ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 E_a_e_tllist_fun$ ))(= (terminal$ (tappend$e ?v0 ?v1 ))(ite (lfinite$ (llist_of_tllist$b ?v0 ))(terminal$ (fun_app$z ?v1 (terminal$ ?v0 )))(terminal$ ?v0 )))):named a27 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 F_b_f_tllist_fun$ ))(= (terminal$a (tappend$g ?v0 ?v1 ))(ite (lfinite$a (llist_of_tllist$c ?v0 ))(terminal$a (fun_app$ab ?v1 (terminal$a ?v0 )))(terminal$a ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_c_tllist_fun$ ))(= (terminal$b (tappend$b ?v0 ?v1 ))(ite (lfinite$ (llist_of_tllist$ ?v0 ))(terminal$b (fun_app$w ?v1 (terminal$b ?v0 )))(terminal$b ?v0 )))):named a29 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_d_tllist_fun$ ))(= (terminal$c (tappend$c ?v0 ?v1 ))(ite (lfinite$a (llist_of_tllist$a ?v0 ))(terminal$c (fun_app$x ?v1 (terminal$c ?v0 )))(terminal$c ?v0 )))):named a30 ))
(assert (! (= (tllist_all2$b uu$ uua$ )uub$ ):named a31 ))
(assert (! (= (tllist_all2$c uuc$ uud$ )uue$ ):named a32 ))
(assert (! (= (tllist_all2$d uu$ uuf$ )uug$ ):named a33 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_d_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 B_d_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 E_d_bool_fun_fun$ ))(=> (and (tllist_all2$e ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (fun_app$p (fun_app$ag ?v0 ?v6 )?v7 )(fun_app$p (fun_app$ag ?v4 ?v6 )?v7 )))(forall ((?v6 E$ )(?v7 D$ ))(=> (fun_app$l (fun_app$ah ?v1 ?v6 )?v7 )(fun_app$l (fun_app$ah ?v5 ?v6 )?v7 )))))(tllist_all2$e ?v4 ?v5 ?v2 ?v3 ))):named a34 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_f_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 C_f_bool_fun_fun$ ))(=> (and (tllist_all2$f ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (fun_app$p (fun_app$ag ?v0 ?v6 )?v7 )(fun_app$p (fun_app$ag ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 F$ ))(=> (fun_app$ai (fun_app$aj ?v1 ?v6 )?v7 )(fun_app$ai (fun_app$aj ?v5 ?v6 )?v7 )))))(tllist_all2$f ?v4 ?v5 ?v2 ?v3 ))):named a35 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 A_e_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 E_e_bool_fun_fun$ ))(=> (and (fun_app$f (fun_app$g (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$r (fun_app$s ?v0 ?v6 )?v7 )(fun_app$r (fun_app$s ?v4 ?v6 )?v7 )))(forall ((?v6 E$ )(?v7 E$ ))(=> (fun_app$j (fun_app$k ?v1 ?v6 )?v7 )(fun_app$j (fun_app$k ?v5 ?v6 )?v7 )))))(fun_app$f (fun_app$g (tllist_all2$b ?v4 ?v5 )?v2 )?v3 ))):named a36 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 A_c_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 E_c_bool_fun_fun$ ))(=> (and (tllist_all2$g ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$r (fun_app$s ?v0 ?v6 )?v7 )(fun_app$r (fun_app$s ?v4 ?v6 )?v7 )))(forall ((?v6 E$ )(?v7 C$ ))(=> (fun_app$n (fun_app$ak ?v1 ?v6 )?v7 )(fun_app$n (fun_app$ak ?v5 ?v6 )?v7 )))))(tllist_all2$g ?v4 ?v5 ?v2 ?v3 ))):named a37 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_e_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 C_e_bool_fun_fun$ ))(=> (and (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$r (fun_app$s ?v0 ?v6 )?v7 )(fun_app$r (fun_app$s ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 E$ ))(=> (fun_app$j (fun_app$al ?v1 ?v6 )?v7 )(fun_app$j (fun_app$al ?v5 ?v6 )?v7 )))))(tllist_all2$h ?v4 ?v5 ?v2 ?v3 ))):named a38 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ )(?v4 B_b_bool_fun_fun$ )(?v5 D_d_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 B$ )(?v7 B$ ))(=> (fun_app$p (fun_app$q ?v0 ?v6 )?v7 )(fun_app$p (fun_app$q ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 D$ ))(=> (fun_app$l (fun_app$m ?v1 ?v6 )?v7 )(fun_app$l (fun_app$m ?v5 ?v6 )?v7 )))))(fun_app$d (fun_app$e (tllist_all2$c ?v4 ?v5 )?v2 )?v3 ))):named a39 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ )(?v4 B_a_bool_fun_fun$ )(?v5 D_c_bool_fun_fun$ ))(=> (and (tllist_all2$i ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 B$ )(?v7 A$ ))(=> (fun_app$r (fun_app$am ?v0 ?v6 )?v7 )(fun_app$r (fun_app$am ?v4 ?v6 )?v7 )))(forall ((?v6 D$ )(?v7 C$ ))(=> (fun_app$n (fun_app$an ?v1 ?v6 )?v7 )(fun_app$n (fun_app$an ?v5 ?v6 )?v7 )))))(tllist_all2$i ?v4 ?v5 ?v2 ?v3 ))):named a40 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ )(?v4 A_a_bool_fun_fun$ )(?v5 C_c_bool_fun_fun$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v6 A$ )(?v7 A$ ))(=> (fun_app$r (fun_app$s ?v0 ?v6 )?v7 )(fun_app$r (fun_app$s ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 C$ ))(=> (fun_app$n (fun_app$o ?v1 ?v6 )?v7 )(fun_app$n (fun_app$o ?v5 ?v6 )?v7 )))))(fun_app$h (fun_app$i (tllist_all2$d ?v4 ?v5 )?v2 )?v3 ))):named a41 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_f_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 B_f_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 E_f_bool_fun_fun$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (fun_app$p (fun_app$ag ?v0 ?v6 )?v7 )(fun_app$p (fun_app$ag ?v4 ?v6 )?v7 )))(forall ((?v6 E$ )(?v7 F$ ))(=> (fun_app$ai (fun_app$ao ?v1 ?v6 )?v7 )(fun_app$ai (fun_app$ao ?v5 ?v6 )?v7 )))))(tllist_all2$ ?v4 ?v5 ?v2 ?v3 ))):named a42 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ )(?v4 A_b_bool_fun_fun$ )(?v5 C_d_bool_fun_fun$ ))(=> (and (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v6 A$ )(?v7 B$ ))(=> (fun_app$p (fun_app$ag ?v0 ?v6 )?v7 )(fun_app$p (fun_app$ag ?v4 ?v6 )?v7 )))(forall ((?v6 C$ )(?v7 D$ ))(=> (fun_app$l (fun_app$t ?v1 ?v6 )?v7 )(fun_app$l (fun_app$t ?v5 ?v6 )?v7 )))))(tllist_all2$a ?v4 ?v5 ?v2 ?v3 ))):named a43 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v2 )?v3 )(lfinite$ (llist_of_tllist$ ?v3 )))(fun_app$n (fun_app$o ?v1 (terminal$b ?v2 ))(terminal$b ?v3 )))):named a44 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$i ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$ ?v3 )))(fun_app$n (fun_app$an ?v1 (terminal$c ?v2 ))(terminal$b ?v3 )))):named a45 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(lfinite$a (llist_of_tllist$a ?v3 )))(fun_app$l (fun_app$m ?v1 (terminal$c ?v2 ))(terminal$c ?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_f_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 B_f_tllist$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$c ?v3 )))(fun_app$ai (fun_app$ao ?v1 (terminal$ ?v2 ))(terminal$a ?v3 )))):named a47 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$a ?v3 )))(fun_app$l (fun_app$t ?v1 (terminal$b ?v2 ))(terminal$c ?v3 )))):named a48 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_e_tllist$ ))(=> (and (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$b ?v3 )))(fun_app$j (fun_app$al ?v1 (terminal$b ?v2 ))(terminal$ ?v3 )))):named a49 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_f_tllist$ ))(=> (and (tllist_all2$f ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$c ?v3 )))(fun_app$ai (fun_app$aj ?v1 (terminal$b ?v2 ))(terminal$a ?v3 )))):named a50 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_e_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_e_tllist$ ))(=> (and (tllist_all2$j ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$b ?v3 )))(fun_app$j (fun_app$ap ?v1 (terminal$c ?v2 ))(terminal$ ?v3 )))):named a51 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_f_tllist$ ))(=> (and (tllist_all2$k ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$c ?v3 )))(fun_app$ai (fun_app$aq ?v1 (terminal$c ?v2 ))(terminal$a ?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$g ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$ ?v3 )))(fun_app$n (fun_app$ak ?v1 (terminal$ ?v2 ))(terminal$b ?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v2 )?v3 )(lfinite$ (llist_of_tllist$ ?v2 )))(fun_app$n (fun_app$o ?v1 (terminal$b ?v2 ))(terminal$b ?v3 )))):named a54 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$i ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$a ?v2 )))(fun_app$n (fun_app$an ?v1 (terminal$c ?v2 ))(terminal$b ?v3 )))):named a55 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(lfinite$a (llist_of_tllist$a ?v2 )))(fun_app$l (fun_app$m ?v1 (terminal$c ?v2 ))(terminal$c ?v3 )))):named a56 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_f_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 B_f_tllist$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$b ?v2 )))(fun_app$ai (fun_app$ao ?v1 (terminal$ ?v2 ))(terminal$a ?v3 )))):named a57 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$ ?v2 )))(fun_app$l (fun_app$t ?v1 (terminal$b ?v2 ))(terminal$c ?v3 )))):named a58 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_e_tllist$ ))(=> (and (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$ ?v2 )))(fun_app$j (fun_app$al ?v1 (terminal$b ?v2 ))(terminal$ ?v3 )))):named a59 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_f_tllist$ ))(=> (and (tllist_all2$f ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$ ?v2 )))(fun_app$ai (fun_app$aj ?v1 (terminal$b ?v2 ))(terminal$a ?v3 )))):named a60 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_e_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_e_tllist$ ))(=> (and (tllist_all2$j ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$a ?v2 )))(fun_app$j (fun_app$ap ?v1 (terminal$c ?v2 ))(terminal$ ?v3 )))):named a61 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_f_tllist$ ))(=> (and (tllist_all2$k ?v0 ?v1 ?v2 ?v3 )(lfinite$a (llist_of_tllist$a ?v2 )))(fun_app$ai (fun_app$aq ?v1 (terminal$c ?v2 ))(terminal$a ?v3 )))):named a62 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$g ?v0 ?v1 ?v2 ?v3 )(lfinite$ (llist_of_tllist$b ?v2 )))(fun_app$n (fun_app$ak ?v1 (terminal$ ?v2 ))(terminal$b ?v3 )))):named a63 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v2 )?v3 )(= (lfinite$ (llist_of_tllist$ ?v2 ))(lfinite$ (llist_of_tllist$ ?v3 ))))):named a64 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$i ?v0 ?v1 ?v2 ?v3 )(= (lfinite$a (llist_of_tllist$a ?v2 ))(lfinite$ (llist_of_tllist$ ?v3 ))))):named a65 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(= (lfinite$a (llist_of_tllist$a ?v2 ))(lfinite$a (llist_of_tllist$a ?v3 ))))):named a66 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_f_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 B_f_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(= (lfinite$ (llist_of_tllist$b ?v2 ))(lfinite$a (llist_of_tllist$c ?v3 ))))):named a67 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(= (lfinite$ (llist_of_tllist$ ?v2 ))(lfinite$a (llist_of_tllist$a ?v3 ))))):named a68 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_f_tllist$ ))(=> (tllist_all2$f ?v0 ?v1 ?v2 ?v3 )(= (lfinite$ (llist_of_tllist$ ?v2 ))(lfinite$a (llist_of_tllist$c ?v3 ))))):named a69 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_e_tllist$ ))(=> (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(= (lfinite$ (llist_of_tllist$ ?v2 ))(lfinite$ (llist_of_tllist$b ?v3 ))))):named a70 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_f_tllist$ ))(=> (tllist_all2$k ?v0 ?v1 ?v2 ?v3 )(= (lfinite$a (llist_of_tllist$a ?v2 ))(lfinite$a (llist_of_tllist$c ?v3 ))))):named a71 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_e_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_e_tllist$ ))(=> (tllist_all2$j ?v0 ?v1 ?v2 ?v3 )(= (lfinite$a (llist_of_tllist$a ?v2 ))(lfinite$ (llist_of_tllist$b ?v3 ))))):named a72 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 F_c_bool_fun_fun$ )(?v2 B_f_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$l ?v0 ?v1 ?v2 ?v3 )(= (lfinite$a (llist_of_tllist$c ?v2 ))(lfinite$ (llist_of_tllist$ ?v3 ))))):named a73 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 F_b_f_tllist_fun$ ))(! (=> (not (lfinite$a (llist_of_tllist$c ?v0 )))(= (tappend$g ?v0 ?v1 )(tcast$ ?v0 ))):pattern ((tappend$g ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 F_b_d_tllist_fun$ ))(! (=> (not (lfinite$a (llist_of_tllist$c ?v0 )))(= (tappend$f ?v0 ?v1 )(tcast$a ?v0 ))):pattern ((tappend$f ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 E_a_e_tllist_fun$ ))(! (=> (not (lfinite$ (llist_of_tllist$b ?v0 )))(= (tappend$e ?v0 ?v1 )(tcast$b ?v0 ))):pattern ((tappend$e ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 E_a_c_tllist_fun$ ))(! (=> (not (lfinite$ (llist_of_tllist$b ?v0 )))(= (tappend$d ?v0 ?v1 )(tcast$c ?v0 ))):pattern ((tappend$d ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_c_tllist_fun$ ))(! (=> (not (lfinite$ (llist_of_tllist$ ?v0 )))(= (tappend$b ?v0 ?v1 )(tcast$d ?v0 ))):pattern ((tappend$b ?v0 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_d_tllist_fun$ ))(! (=> (not (lfinite$a (llist_of_tllist$a ?v0 )))(= (tappend$c ?v0 ?v1 )(tcast$e ?v0 ))):pattern ((tappend$c ?v0 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 C_a_e_tllist_fun$ ))(! (=> (not (lfinite$ (llist_of_tllist$ ?v0 )))(= (tappend$ ?v0 ?v1 )(tcast$f ?v0 ))):pattern ((tappend$ ?v0 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 D_b_f_tllist_fun$ ))(! (=> (not (lfinite$a (llist_of_tllist$a ?v0 )))(= (tappend$a ?v0 ?v1 )(tcast$g ?v0 ))):pattern ((tappend$a ?v0 ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_e_tllist$ ))(=> (lfinite$ ?v0 )(= (terminal$ (lappendt$ ?v0 ?v1 ))(terminal$ ?v1 )))):named a82 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_f_tllist$ ))(=> (lfinite$a ?v0 )(= (terminal$a (lappendt$a ?v0 ?v1 ))(terminal$a ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_c_tllist$ ))(=> (lfinite$ ?v0 )(= (terminal$b (lappendt$b ?v0 ?v1 ))(terminal$b ?v1 )))):named a84 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_d_tllist$ ))(=> (lfinite$a ?v0 )(= (terminal$c (lappendt$c ?v0 ?v1 ))(terminal$c ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 A_e_tllist$ ))(= (fun_app$f (fun_app$g (tllist_all2$b ?v0 ?v1 )?v2 )?v2 )(and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$ ?v2 ))(fun_app$r (fun_app$s ?v0 ?v3 )?v3 )))(=> (lfinite$ (llist_of_tllist$b ?v2 ))(fun_app$j (fun_app$k ?v1 (terminal$ ?v2 ))(terminal$ ?v2 )))))):named a86 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 F_f_bool_fun_fun$ )(?v2 B_f_tllist$ ))(= (tllist_all2$m ?v0 ?v1 ?v2 ?v2 )(and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$a ?v2 ))(fun_app$p (fun_app$q ?v0 ?v3 )?v3 )))(=> (lfinite$a (llist_of_tllist$c ?v2 ))(fun_app$ai (fun_app$ar ?v1 (terminal$a ?v2 ))(terminal$a ?v2 )))))):named a87 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ ))(= (fun_app$h (fun_app$i (tllist_all2$d ?v0 ?v1 )?v2 )?v2 )(and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$b ?v2 ))(fun_app$r (fun_app$s ?v0 ?v3 )?v3 )))(=> (lfinite$ (llist_of_tllist$ ?v2 ))(fun_app$n (fun_app$o ?v1 (terminal$b ?v2 ))(terminal$b ?v2 )))))):named a88 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ ))(= (fun_app$d (fun_app$e (tllist_all2$c ?v0 ?v1 )?v2 )?v2 )(and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$c ?v2 ))(fun_app$p (fun_app$q ?v0 ?v3 )?v3 )))(=> (lfinite$a (llist_of_tllist$a ?v2 ))(fun_app$l (fun_app$m ?v1 (terminal$c ?v2 ))(terminal$c ?v2 )))))):named a89 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 A_a_bool_fun_fun$ )(?v2 E_e_bool_fun_fun$ ))(=> (and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$ ?v0 ))(fun_app$r (fun_app$s ?v1 ?v3 )?v3 )))(=> (lfinite$ (llist_of_tllist$b ?v0 ))(fun_app$j (fun_app$k ?v2 (terminal$ ?v0 ))(terminal$ ?v0 ))))(fun_app$f (fun_app$g (tllist_all2$b ?v1 ?v2 )?v0 )?v0 ))):named a90 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 B_b_bool_fun_fun$ )(?v2 F_f_bool_fun_fun$ ))(=> (and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$a ?v0 ))(fun_app$p (fun_app$q ?v1 ?v3 )?v3 )))(=> (lfinite$a (llist_of_tllist$c ?v0 ))(fun_app$ai (fun_app$ar ?v2 (terminal$a ?v0 ))(terminal$a ?v0 ))))(tllist_all2$m ?v1 ?v2 ?v0 ?v0 ))):named a91 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_bool_fun_fun$ )(?v2 C_c_bool_fun_fun$ ))(=> (and (forall ((?v3 A$ ))(=> (member$ ?v3 (tset$b ?v0 ))(fun_app$r (fun_app$s ?v1 ?v3 )?v3 )))(=> (lfinite$ (llist_of_tllist$ ?v0 ))(fun_app$n (fun_app$o ?v2 (terminal$b ?v0 ))(terminal$b ?v0 ))))(fun_app$h (fun_app$i (tllist_all2$d ?v1 ?v2 )?v0 )?v0 ))):named a92 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_b_bool_fun_fun$ )(?v2 D_d_bool_fun_fun$ ))(=> (and (forall ((?v3 B$ ))(=> (member$a ?v3 (tset$c ?v0 ))(fun_app$p (fun_app$q ?v1 ?v3 )?v3 )))(=> (lfinite$a (llist_of_tllist$a ?v0 ))(fun_app$l (fun_app$m ?v2 (terminal$c ?v0 ))(terminal$c ?v0 ))))(fun_app$d (fun_app$e (tllist_all2$c ?v1 ?v2 )?v0 )?v0 ))):named a93 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_fun$ )(?v2 C_c_fun$ ))(=> (lfinite$ (llist_of_tllist$ ?v0 ))(= (terminal$b (tmap$ ?v1 ?v2 ?v0 ))(fun_app$as ?v2 (terminal$b ?v0 ))))):named a94 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_a_fun$ )(?v2 D_c_fun$ ))(=> (lfinite$a (llist_of_tllist$a ?v0 ))(= (terminal$b (tmap$a ?v1 ?v2 ?v0 ))(fun_app$at ?v2 (terminal$c ?v0 ))))):named a95 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_b_fun$ )(?v2 C_d_fun$ ))(=> (lfinite$ (llist_of_tllist$ ?v0 ))(= (terminal$c (tmap$b ?v1 ?v2 ?v0 ))(fun_app$au ?v2 (terminal$b ?v0 ))))):named a96 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_b_fun$ )(?v2 D_d_fun$ ))(=> (lfinite$a (llist_of_tllist$a ?v0 ))(= (terminal$c (tmap$c ?v1 ?v2 ?v0 ))(fun_app$av ?v2 (terminal$c ?v0 ))))):named a97 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 A_a_fun$ )(?v2 E_c_fun$ ))(=> (lfinite$ (llist_of_tllist$b ?v0 ))(= (terminal$b (tmap$d ?v1 ?v2 ?v0 ))(fun_app$aw ?v2 (terminal$ ?v0 ))))):named a98 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 B_a_fun$ )(?v2 F_c_fun$ ))(=> (lfinite$a (llist_of_tllist$c ?v0 ))(= (terminal$b (tmap$e ?v1 ?v2 ?v0 ))(fun_app$ax ?v2 (terminal$a ?v0 ))))):named a99 ))
(assert (! (forall ((?v0 A_e_tllist$ )(?v1 A_b_fun$ )(?v2 E_d_fun$ ))(=> (lfinite$ (llist_of_tllist$b ?v0 ))(= (terminal$c (tmap$f ?v1 ?v2 ?v0 ))(fun_app$ay ?v2 (terminal$ ?v0 ))))):named a100 ))
(assert (! (forall ((?v0 B_f_tllist$ )(?v1 B_b_fun$ )(?v2 F_d_fun$ ))(=> (lfinite$a (llist_of_tllist$c ?v0 ))(= (terminal$c (tmap$g ?v1 ?v2 ?v0 ))(fun_app$az ?v2 (terminal$a ?v0 ))))):named a101 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_a_fun$ )(?v2 C_e_fun$ ))(=> (lfinite$ (llist_of_tllist$ ?v0 ))(= (terminal$ (tmap$h ?v1 ?v2 ?v0 ))(fun_app$ba ?v2 (terminal$b ?v0 ))))):named a102 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_a_fun$ )(?v2 D_e_fun$ ))(=> (lfinite$a (llist_of_tllist$a ?v0 ))(= (terminal$ (tmap$i ?v1 ?v2 ?v0 ))(fun_app$bb ?v2 (terminal$c ?v0 ))))):named a103 ))
(assert (! (= terminal0$ uuh$ ):named a104 ))
(assert (! (= terminal0$a uui$ ):named a105 ))
(assert (! (= terminal0$b uuj$ ):named a106 ))
(assert (! (= terminal0$c uuk$ ):named a107 ))
(assert (! (forall ((?v0 A_d_tllist$ ))(! (=> (not (lfinite$ (llist_of_tllist$d ?v0 )))(= (terminal$d ?v0 )undefined$ )):pattern ((terminal$d ?v0 )))):named a108 ))
(assert (! (forall ((?v0 B_c_tllist$ ))(! (=> (not (lfinite$a (llist_of_tllist$e ?v0 )))(= (terminal$e ?v0 )undefined$a )):pattern ((terminal$e ?v0 )))):named a109 ))
(assert (! (forall ((?v0 A_e_tllist$ ))(! (=> (not (lfinite$ (llist_of_tllist$b ?v0 )))(= (terminal$ ?v0 )undefined$b )):pattern ((terminal$ ?v0 )))):named a110 ))
(assert (! (forall ((?v0 B_f_tllist$ ))(! (=> (not (lfinite$a (llist_of_tllist$c ?v0 )))(= (terminal$a ?v0 )undefined$c )):pattern ((terminal$a ?v0 )))):named a111 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(! (=> (not (lfinite$ (llist_of_tllist$ ?v0 )))(= (terminal$b ?v0 )undefined$a )):pattern ((terminal$b ?v0 )))):named a112 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(! (=> (not (lfinite$a (llist_of_tllist$a ?v0 )))(= (terminal$c ?v0 )undefined$ )):pattern ((terminal$c ?v0 )))):named a113 ))
(assert (! (forall ((?v0 A_e_tllist$ ))(= (tllist_of_llist$ (terminal$ ?v0 )(llist_of_tllist$b ?v0 ))?v0 )):named a114 ))
(assert (! (forall ((?v0 B_f_tllist$ ))(= (tllist_of_llist$a (terminal$a ?v0 )(llist_of_tllist$c ?v0 ))?v0 )):named a115 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(= (tllist_of_llist$b (terminal$b ?v0 )(llist_of_tllist$ ?v0 ))?v0 )):named a116 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(= (tllist_of_llist$c (terminal$c ?v0 )(llist_of_tllist$a ?v0 ))?v0 )):named a117 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 E$ ))(=> (lfinite$ ?v0 )(= (terminal$ (tllist_of_llist$ ?v1 ?v0 ))?v1 ))):named a118 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 F$ ))(=> (lfinite$a ?v0 )(= (terminal$a (tllist_of_llist$a ?v1 ?v0 ))?v1 ))):named a119 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 C$ ))(=> (lfinite$ ?v0 )(= (terminal$b (tllist_of_llist$b ?v1 ?v0 ))?v1 ))):named a120 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 D$ ))(=> (lfinite$a ?v0 )(= (terminal$c (tllist_of_llist$c ?v1 ?v0 ))?v1 ))):named a121 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_f_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 B_f_tllist$ ))(=> (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(= (tlength$ ?v2 )(tlength$a ?v3 )))):named a122 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$a ?v0 ?v1 ?v2 ?v3 )(= (tlength$b ?v2 )(tlength$c ?v3 )))):named a123 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_e_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_e_tllist$ ))(=> (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(= (tlength$b ?v2 )(tlength$ ?v3 )))):named a124 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_f_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_f_tllist$ ))(=> (tllist_all2$f ?v0 ?v1 ?v2 ?v3 )(= (tlength$b ?v2 )(tlength$a ?v3 )))):named a125 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_e_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_e_tllist$ ))(=> (tllist_all2$j ?v0 ?v1 ?v2 ?v3 )(= (tlength$c ?v2 )(tlength$ ?v3 )))):named a126 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_f_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_f_tllist$ ))(=> (tllist_all2$k ?v0 ?v1 ?v2 ?v3 )(= (tlength$c ?v2 )(tlength$a ?v3 )))):named a127 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_c_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$g ?v0 ?v1 ?v2 ?v3 )(= (tlength$ ?v2 )(tlength$b ?v3 )))):named a128 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 E_d_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 B_d_tllist$ ))(=> (tllist_all2$e ?v0 ?v1 ?v2 ?v3 )(= (tlength$ ?v2 )(tlength$c ?v3 )))):named a129 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 E_e_bool_fun_fun$ )(?v2 A_e_tllist$ )(?v3 A_e_tllist$ ))(=> (fun_app$f (fun_app$g (tllist_all2$b ?v0 ?v1 )?v2 )?v3 )(= (tlength$ ?v2 )(tlength$ ?v3 )))):named a130 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 F_c_bool_fun_fun$ )(?v2 B_f_tllist$ )(?v3 A_c_tllist$ ))(=> (tllist_all2$l ?v0 ?v1 ?v2 ?v3 )(= (tlength$a ?v2 )(tlength$b ?v3 )))):named a131 ))
(check-sat )
;(get-unsat-core )
