;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort Unit_c_fun$ 0 )
(declare-sort Unit_d_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort C_a_c_tllist_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort D_b_d_tllist_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort A_c_tllist_bool_fun$ 0 )
(declare-sort B_d_tllist_bool_fun$ 0 )
(declare-sort A_a_llist_bool_fun_fun$ 0 )
(declare-sort A_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_bool_fun_fun$ 0 )
(declare-sort A_llist_b_bool_fun_fun$ 0 )
(declare-sort A_llist_llist_bool_fun$ 0 )
(declare-sort B_a_llist_bool_fun_fun$ 0 )
(declare-sort B_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_bool_fun_fun$ 0 )
(declare-sort B_llist_b_bool_fun_fun$ 0 )
(declare-sort B_llist_llist_bool_fun$ 0 )
(declare-sort C_a_llist_c_tllist_fun$ 0 )
(declare-sort D_b_llist_d_tllist_fun$ 0 )
(declare-sort C_a_llist_llist_c_tllist_fun$ 0 )
(declare-sort D_b_llist_llist_d_tllist_fun$ 0 )
(declare-sort C_a_c_tllist_fun_a_c_tllist_fun$ 0 )
(declare-sort D_b_d_tllist_fun_b_d_tllist_fun$ 0 )
(declare-sort A_c_tllist_a_c_tllist_bool_fun_fun$ 0 )
(declare-sort B_d_tllist_b_d_tllist_bool_fun_fun$ 0 )
(declare-sort C_a_llist_c_tllist_fun_a_llist_c_tllist_fun$ 0 )
(declare-sort D_b_llist_d_tllist_fun_b_llist_d_tllist_fun$ 0 )
(declare-sort C_a_llist_llist_c_tllist_fun_a_llist_llist_c_tllist_fun$ 0 )
(declare-sort D_b_llist_llist_d_tllist_fun_b_llist_llist_d_tllist_fun$ 0 )
(declare-codatatypes ()((A_c_tllist$ (tNil$ (terminal$ C$ ))(tCons$ (thd$ A$ )(ttl$ A_c_tllist$ )))(B_d_tllist$ (tNil$a (terminal$a D$ ))(tCons$a (thd$a B$ )(ttl$a B_d_tllist$ )))(A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))(A_llist_llist_c_tllist$ (tNil$b (terminal$b C$ ))(tCons$b (thd$b A_llist_llist$ )(ttl$b A_llist_llist_c_tllist$ )))(B_llist$ (lNil$b )(lCons$b (lhd$b B$ )(ltl$b B_llist$ )))(B_llist_llist$ (lNil$c )(lCons$c (lhd$c B_llist$ )(ltl$c B_llist_llist$ )))(B_llist_llist_d_tllist$ (tNil$c (terminal$c D$ ))(tCons$c (thd$c B_llist_llist$ )(ttl$c B_llist_llist_d_tllist$ )))(B_llist_d_tllist$ (tNil$d (terminal$d D$ ))(tCons$d (thd$d B_llist$ )(ttl$d B_llist_d_tllist$ )))(A_llist_c_tllist$ (tNil$e (terminal$e C$ ))(tCons$e (thd$e A_llist$ )(ttl$e A_llist_c_tllist$ )))(A_llist_llist_llist$ (lNil$d )(lCons$d (lhd$d A_llist_llist$ )(ltl$d A_llist_llist_llist$ )))(A_llist_llist_llist_c_tllist$ (tNil$f (terminal$f C$ ))(tCons$f (thd$f A_llist_llist_llist$ )(ttl$f A_llist_llist_llist_c_tllist$ )))(B_llist_llist_llist$ (lNil$e )(lCons$e (lhd$e B_llist_llist$ )(ltl$e B_llist_llist_llist$ )))(B_llist_llist_llist_d_tllist$ (tNil$g (terminal$g D$ ))(tCons$g (thd$g B_llist_llist_llist$ )(ttl$g B_llist_llist_llist_d_tllist$ )))))
(declare-fun b$ ()C$ )
(declare-fun p$ ()A_b_bool_fun_fun$ )
(declare-fun q$ ()C_d_bool_fun_fun$ )
(declare-fun ts$ ()B_d_tllist$ )
(declare-fun uu$ ()B_b_bool_fun_fun$ )
(declare-fun uua$ ()D_d_bool_fun_fun$ )
(declare-fun uub$ ()B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun uuc$ ()A_a_bool_fun_fun$ )
(declare-fun uud$ ()C_c_bool_fun_fun$ )
(declare-fun uue$ ()A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun uuf$ ()C_a_llist_llist_c_tllist_fun$ )
(declare-fun uug$ ()D_b_llist_llist_d_tllist_fun$ )
(declare-fun uuh$ ()D_b_llist_d_tllist_fun$ )
(declare-fun uui$ ()C_a_llist_c_tllist_fun$ )
(declare-fun uuj$ ()C_a_c_tllist_fun$ )
(declare-fun uuk$ ()D_b_d_tllist_fun$ )
(declare-fun fun_app$ (D_b_llist_llist_d_tllist_fun$ D$ )B_llist_llist_d_tllist$ )
(declare-fun tappend$ (B_llist_d_tllist$ )D_b_llist_d_tllist_fun_b_llist_d_tllist_fun$ )
(declare-fun tconcat$ (C$ A_llist_llist_llist_c_tllist$ )A_llist_llist_c_tllist$ )
(declare-fun tfilter$ (Unit_c_fun$ A_llist_llist_bool_fun$ A_llist_llist_c_tllist$ )A_llist_llist_c_tllist$ )
(declare-fun fun_app$a (D_b_llist_d_tllist_fun$ D$ )B_llist_d_tllist$ )
(declare-fun fun_app$b (D_b_d_tllist_fun$ D$ )B_d_tllist$ )
(declare-fun fun_app$c (C_a_llist_llist_c_tllist_fun$ C$ )A_llist_llist_c_tllist$ )
(declare-fun fun_app$d (C_a_llist_c_tllist_fun$ C$ )A_llist_c_tllist$ )
(declare-fun fun_app$e (C_a_c_tllist_fun$ C$ )A_c_tllist$ )
(declare-fun fun_app$f (B_d_tllist_bool_fun$ B_d_tllist$ )Bool )
(declare-fun fun_app$g (B_d_tllist_b_d_tllist_bool_fun_fun$ B_d_tllist$ )B_d_tllist_bool_fun$ )
(declare-fun fun_app$h (A_c_tllist_bool_fun$ A_c_tllist$ )Bool )
(declare-fun fun_app$i (A_c_tllist_a_c_tllist_bool_fun_fun$ A_c_tllist$ )A_c_tllist_bool_fun$ )
(declare-fun fun_app$j (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$k (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$l (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$m (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$n (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$o (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$p (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$q (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$r (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$s (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$t (D_b_llist_d_tllist_fun_b_llist_d_tllist_fun$ D_b_llist_d_tllist_fun$ )B_llist_d_tllist$ )
(declare-fun fun_app$u (C_a_llist_c_tllist_fun_a_llist_c_tllist_fun$ C_a_llist_c_tllist_fun$ )A_llist_c_tllist$ )
(declare-fun fun_app$v (C_a_c_tllist_fun_a_c_tllist_fun$ C_a_c_tllist_fun$ )A_c_tllist$ )
(declare-fun fun_app$w (D_b_d_tllist_fun_b_d_tllist_fun$ D_b_d_tllist_fun$ )B_d_tllist$ )
(declare-fun fun_app$x (C_a_llist_llist_c_tllist_fun_a_llist_llist_c_tllist_fun$ C_a_llist_llist_c_tllist_fun$ )A_llist_llist_c_tllist$ )
(declare-fun fun_app$y (D_b_llist_llist_d_tllist_fun_b_llist_llist_d_tllist_fun$ D_b_llist_llist_d_tllist_fun$ )B_llist_llist_d_tllist$ )
(declare-fun fun_app$z (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun tappend$a (A_llist_c_tllist$ )C_a_llist_c_tllist_fun_a_llist_c_tllist_fun$ )
(declare-fun tappend$b (A_c_tllist$ )C_a_c_tllist_fun_a_c_tllist_fun$ )
(declare-fun tappend$c (B_d_tllist$ )D_b_d_tllist_fun_b_d_tllist_fun$ )
(declare-fun tappend$d (A_llist_llist_c_tllist$ )C_a_llist_llist_c_tllist_fun_a_llist_llist_c_tllist_fun$ )
(declare-fun tappend$e (B_llist_llist_d_tllist$ )D_b_llist_llist_d_tllist_fun_b_llist_llist_d_tllist_fun$ )
(declare-fun tconcat$a (D$ B_llist_llist_llist_d_tllist$ )B_llist_llist_d_tllist$ )
(declare-fun tconcat$b (D$ B_llist_llist_d_tllist$ )B_llist_d_tllist$ )
(declare-fun tconcat$c (C$ A_llist_llist_c_tllist$ )A_llist_c_tllist$ )
(declare-fun tconcat$d (C$ A_llist_c_tllist$ )A_c_tllist$ )
(declare-fun tconcat$e (D$ B_llist_d_tllist$ )B_d_tllist$ )
(declare-fun tconcat$f (Unit_c_fun$ A_llist_llist_llist_c_tllist$ )A_llist_llist_c_tllist$ )
(declare-fun tconcat$g (Unit_d_fun$ B_llist_llist_llist_d_tllist$ )B_llist_llist_d_tllist$ )
(declare-fun tconcat$h (Unit_d_fun$ B_llist_llist_d_tllist$ )B_llist_d_tllist$ )
(declare-fun tconcat$i (Unit_c_fun$ A_llist_llist_c_tllist$ )A_llist_c_tllist$ )
(declare-fun tconcat$j (Unit_c_fun$ A_llist_c_tllist$ )A_c_tllist$ )
(declare-fun tconcat$k (Unit_d_fun$ B_llist_d_tllist$ )B_d_tllist$ )
(declare-fun tfilter$a (Unit_d_fun$ B_llist_llist_bool_fun$ B_llist_llist_d_tllist$ )B_llist_llist_d_tllist$ )
(declare-fun tfilter$b (Unit_d_fun$ B_llist_bool_fun$ B_llist_d_tllist$ )B_llist_d_tllist$ )
(declare-fun tfilter$c (Unit_c_fun$ A_llist_bool_fun$ A_llist_c_tllist$ )A_llist_c_tllist$ )
(declare-fun tfilter$d (Unit_c_fun$ A_bool_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tfilter$e (Unit_d_fun$ B_bool_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun tfilter$f (C$ A_llist_llist_bool_fun$ A_llist_llist_c_tllist$ )A_llist_llist_c_tllist$ )
(declare-fun tfilter$g (D$ B_llist_llist_bool_fun$ B_llist_llist_d_tllist$ )B_llist_llist_d_tllist$ )
(declare-fun tfilter$h (D$ B_llist_bool_fun$ B_llist_d_tllist$ )B_llist_d_tllist$ )
(declare-fun tfilter$i (C$ A_llist_bool_fun$ A_llist_c_tllist$ )A_llist_c_tllist$ )
(declare-fun tfilter$j (C$ A_bool_fun$ A_c_tllist$ )A_c_tllist$ )
(declare-fun tfilter$k (D$ B_bool_fun$ B_d_tllist$ )B_d_tllist$ )
(declare-fun fun_app$aa (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$ab (B_llist_a_bool_fun_fun$ B_llist$ )A_bool_fun$ )
(declare-fun fun_app$ac (A_llist_a_bool_fun_fun$ A_llist$ )A_bool_fun$ )
(declare-fun fun_app$ad (B_llist_b_bool_fun_fun$ B_llist$ )B_bool_fun$ )
(declare-fun fun_app$ae (A_llist_b_bool_fun_fun$ A_llist$ )B_bool_fun$ )
(declare-fun fun_app$af (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$ag (A_b_llist_bool_fun_fun$ A$ )B_llist_bool_fun$ )
(declare-fun fun_app$ah (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$ai (A_a_llist_bool_fun_fun$ A$ )A_llist_bool_fun$ )
(declare-fun pred_tllist$ (A_llist_llist_bool_fun$ C_bool_fun$ A_llist_llist_c_tllist$ )Bool )
(declare-fun tllist_all2$ (A_b_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_d_tllist$ )Bool )
(declare-fun pred_tllist$a (B_llist_llist_bool_fun$ D_bool_fun$ B_llist_llist_d_tllist$ )Bool )
(declare-fun pred_tllist$b (B_llist_bool_fun$ D_bool_fun$ B_llist_d_tllist$ )Bool )
(declare-fun pred_tllist$c (A_llist_bool_fun$ C_bool_fun$ A_llist_c_tllist$ )Bool )
(declare-fun pred_tllist$d (A_bool_fun$ C_bool_fun$ A_c_tllist$ )Bool )
(declare-fun pred_tllist$e (B_bool_fun$ D_bool_fun$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$a (A_a_bool_fun_fun$ C_c_bool_fun_fun$ )A_c_tllist_a_c_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$b (B_a_bool_fun_fun$ D_c_bool_fun_fun$ B_d_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$c (B_b_bool_fun_fun$ D_d_bool_fun_fun$ )B_d_tllist_b_d_tllist_bool_fun_fun$ )
(declare-fun tllist_all2$d (A_b_llist_bool_fun_fun$ C_d_bool_fun_fun$ A_c_tllist$ B_llist_d_tllist$ )Bool )
(declare-fun tllist_all2$e (A_a_llist_bool_fun_fun$ C_c_bool_fun_fun$ A_c_tllist$ A_llist_c_tllist$ )Bool )
(declare-fun tllist_all2$f (B_b_llist_bool_fun_fun$ D_d_bool_fun_fun$ B_d_tllist$ B_llist_d_tllist$ )Bool )
(declare-fun tllist_all2$g (B_a_llist_bool_fun_fun$ D_c_bool_fun_fun$ B_d_tllist$ A_llist_c_tllist$ )Bool )
(declare-fun tllist_all2$h (B_llist_a_bool_fun_fun$ D_c_bool_fun_fun$ B_llist_d_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$i (B_llist_b_bool_fun_fun$ D_d_bool_fun_fun$ B_llist_d_tllist$ B_d_tllist$ )Bool )
(declare-fun tllist_all2$j (A_llist_a_bool_fun_fun$ C_c_bool_fun_fun$ A_llist_c_tllist$ A_c_tllist$ )Bool )
(declare-fun tllist_all2$k (A_llist_b_bool_fun_fun$ C_d_bool_fun_fun$ A_llist_c_tllist$ B_d_tllist$ )Bool )
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$ uug$ ?v0 )(tNil$c ?v0 )):pattern ((fun_app$ uug$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$a uuh$ ?v0 )(tNil$d ?v0 )):pattern ((fun_app$a uuh$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 D$ ))(! (= (fun_app$b uuk$ ?v0 )(tNil$a ?v0 )):pattern ((fun_app$b uuk$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$c uuf$ ?v0 )(tNil$b ?v0 )):pattern ((fun_app$c uuf$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$d uui$ ?v0 )(tNil$e ?v0 )):pattern ((fun_app$d uui$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$e uuj$ ?v0 )(tNil$ ?v0 )):pattern ((fun_app$e uuj$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 B_d_tllist$ )(?v1 B_d_tllist$ ))(! (= (fun_app$f (fun_app$g uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uub$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_c_tllist$ )(?v1 A_c_tllist$ ))(! (= (fun_app$h (fun_app$i uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uue$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$j (fun_app$k uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uua$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$l (fun_app$m uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uud$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$n (fun_app$o uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uu$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$p (fun_app$q uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$p (fun_app$q uuc$ ?v0 )?v1 )))):named a11 ))
(assert (! (not (= (tllist_all2$ p$ q$ (tNil$ b$ )ts$ )(exists ((?v0 D$ ))(and (= ts$ (tNil$a ?v0 ))(fun_app$j (fun_app$r q$ b$ )?v0 ))))):named a12 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(= (= (tNil$b ?v0 )(tNil$b ?v1 ))(= ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$c ?v0 )(tNil$c ?v1 ))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$d ?v0 )(tNil$d ?v1 ))(= ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(= (= (tNil$e ?v0 )(tNil$e ?v1 ))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(= (= (tNil$ ?v0 )(tNil$ ?v1 ))(= ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(= (= (tNil$a ?v0 )(tNil$a ?v1 ))(= ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))(fun_app$l (fun_app$m ?v1 ?v2 )?v3 )):pattern ((fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tNil$ ?v2 ))(tNil$ ?v3 ))))):named a19 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 C$ ))(! (= (tllist_all2$b ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))(fun_app$l (fun_app$s ?v1 ?v2 )?v3 )):pattern ((tllist_all2$b ?v0 ?v1 (tNil$a ?v2 )(tNil$ ?v3 ))))):named a20 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))(fun_app$j (fun_app$k ?v1 ?v2 )?v3 )):pattern ((fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tNil$a ?v2 ))(tNil$a ?v3 ))))):named a21 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))(fun_app$j (fun_app$r ?v1 ?v2 )?v3 )):pattern ((tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tNil$a ?v3 ))))):named a22 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 D$ ))(! (= (tllist_all2$d ?v0 ?v1 (tNil$ ?v2 )(tNil$d ?v3 ))(fun_app$j (fun_app$r ?v1 ?v2 )?v3 )):pattern ((tllist_all2$d ?v0 ?v1 (tNil$ ?v2 )(tNil$d ?v3 ))))):named a23 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 C$ ))(! (= (tllist_all2$e ?v0 ?v1 (tNil$ ?v2 )(tNil$e ?v3 ))(fun_app$l (fun_app$m ?v1 ?v2 )?v3 )):pattern ((tllist_all2$e ?v0 ?v1 (tNil$ ?v2 )(tNil$e ?v3 ))))):named a24 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (tllist_all2$f ?v0 ?v1 (tNil$a ?v2 )(tNil$d ?v3 ))(fun_app$j (fun_app$k ?v1 ?v2 )?v3 )):pattern ((tllist_all2$f ?v0 ?v1 (tNil$a ?v2 )(tNil$d ?v3 ))))):named a25 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 C$ ))(! (= (tllist_all2$g ?v0 ?v1 (tNil$a ?v2 )(tNil$e ?v3 ))(fun_app$l (fun_app$s ?v1 ?v2 )?v3 )):pattern ((tllist_all2$g ?v0 ?v1 (tNil$a ?v2 )(tNil$e ?v3 ))))):named a26 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 C$ ))(! (= (tllist_all2$h ?v0 ?v1 (tNil$d ?v2 )(tNil$ ?v3 ))(fun_app$l (fun_app$s ?v1 ?v2 )?v3 )):pattern ((tllist_all2$h ?v0 ?v1 (tNil$d ?v2 )(tNil$ ?v3 ))))):named a27 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 D$ ))(! (= (tllist_all2$i ?v0 ?v1 (tNil$d ?v2 )(tNil$a ?v3 ))(fun_app$j (fun_app$k ?v1 ?v2 )?v3 )):pattern ((tllist_all2$i ?v0 ?v1 (tNil$d ?v2 )(tNil$a ?v3 ))))):named a28 ))
(assert (! (= (tllist_all2$c uu$ uua$ )uub$ ):named a29 ))
(assert (! (= (tllist_all2$a uuc$ uud$ )uue$ ):named a30 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C$ )(?v2 C$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$l (fun_app$m ?v0 ?v1 )?v2 )(fun_app$h (fun_app$i (tllist_all2$a ?v3 ?v0 )(tNil$ ?v1 ))(tNil$ ?v2 )))):named a31 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D$ )(?v2 C$ )(?v3 B_a_bool_fun_fun$ ))(=> (fun_app$l (fun_app$s ?v0 ?v1 )?v2 )(tllist_all2$b ?v3 ?v0 (tNil$a ?v1 )(tNil$ ?v2 )))):named a32 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D$ )(?v2 D$ )(?v3 B_b_bool_fun_fun$ ))(=> (fun_app$j (fun_app$k ?v0 ?v1 )?v2 )(fun_app$f (fun_app$g (tllist_all2$c ?v3 ?v0 )(tNil$a ?v1 ))(tNil$a ?v2 )))):named a33 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C$ )(?v2 D$ )(?v3 A_b_bool_fun_fun$ ))(=> (fun_app$j (fun_app$r ?v0 ?v1 )?v2 )(tllist_all2$ ?v3 ?v0 (tNil$ ?v1 )(tNil$a ?v2 )))):named a34 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C$ )(?v2 D$ )(?v3 A_b_llist_bool_fun_fun$ ))(=> (fun_app$j (fun_app$r ?v0 ?v1 )?v2 )(tllist_all2$d ?v3 ?v0 (tNil$ ?v1 )(tNil$d ?v2 )))):named a35 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C$ )(?v2 C$ )(?v3 A_a_llist_bool_fun_fun$ ))(=> (fun_app$l (fun_app$m ?v0 ?v1 )?v2 )(tllist_all2$e ?v3 ?v0 (tNil$ ?v1 )(tNil$e ?v2 )))):named a36 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D$ )(?v2 D$ )(?v3 B_b_llist_bool_fun_fun$ ))(=> (fun_app$j (fun_app$k ?v0 ?v1 )?v2 )(tllist_all2$f ?v3 ?v0 (tNil$a ?v1 )(tNil$d ?v2 )))):named a37 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D$ )(?v2 C$ )(?v3 B_a_llist_bool_fun_fun$ ))(=> (fun_app$l (fun_app$s ?v0 ?v1 )?v2 )(tllist_all2$g ?v3 ?v0 (tNil$a ?v1 )(tNil$e ?v2 )))):named a38 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D$ )(?v2 C$ )(?v3 B_llist_a_bool_fun_fun$ ))(=> (fun_app$l (fun_app$s ?v0 ?v1 )?v2 )(tllist_all2$h ?v3 ?v0 (tNil$d ?v1 )(tNil$ ?v2 )))):named a39 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D$ )(?v2 D$ )(?v3 B_llist_b_bool_fun_fun$ ))(=> (fun_app$j (fun_app$k ?v0 ?v1 )?v2 )(tllist_all2$i ?v3 ?v0 (tNil$d ?v1 )(tNil$a ?v2 )))):named a40 ))
(assert (! (forall ((?v0 A_llist_llist_bool_fun$ )(?v1 C_bool_fun$ )(?v2 C$ ))(! (= (pred_tllist$ ?v0 ?v1 (tNil$b ?v2 ))(fun_app$l ?v1 ?v2 )):pattern ((pred_tllist$ ?v0 ?v1 (tNil$b ?v2 ))))):named a41 ))
(assert (! (forall ((?v0 B_llist_llist_bool_fun$ )(?v1 D_bool_fun$ )(?v2 D$ ))(! (= (pred_tllist$a ?v0 ?v1 (tNil$c ?v2 ))(fun_app$j ?v1 ?v2 )):pattern ((pred_tllist$a ?v0 ?v1 (tNil$c ?v2 ))))):named a42 ))
(assert (! (forall ((?v0 B_llist_bool_fun$ )(?v1 D_bool_fun$ )(?v2 D$ ))(! (= (pred_tllist$b ?v0 ?v1 (tNil$d ?v2 ))(fun_app$j ?v1 ?v2 )):pattern ((pred_tllist$b ?v0 ?v1 (tNil$d ?v2 ))))):named a43 ))
(assert (! (forall ((?v0 A_llist_bool_fun$ )(?v1 C_bool_fun$ )(?v2 C$ ))(! (= (pred_tllist$c ?v0 ?v1 (tNil$e ?v2 ))(fun_app$l ?v1 ?v2 )):pattern ((pred_tllist$c ?v0 ?v1 (tNil$e ?v2 ))))):named a44 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 C_bool_fun$ )(?v2 C$ ))(! (= (pred_tllist$d ?v0 ?v1 (tNil$ ?v2 ))(fun_app$l ?v1 ?v2 )):pattern ((pred_tllist$d ?v0 ?v1 (tNil$ ?v2 ))))):named a45 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 D_bool_fun$ )(?v2 D$ ))(! (= (pred_tllist$e ?v0 ?v1 (tNil$a ?v2 ))(fun_app$j ?v1 ?v2 )):pattern ((pred_tllist$e ?v0 ?v1 (tNil$a ?v2 ))))):named a46 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (tconcat$ ?v0 (tNil$f ?v1 ))(tNil$b ?v1 )):pattern ((tconcat$ ?v0 (tNil$f ?v1 ))))):named a47 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (tconcat$a ?v0 (tNil$g ?v1 ))(tNil$c ?v1 )):pattern ((tconcat$a ?v0 (tNil$g ?v1 ))))):named a48 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (tconcat$b ?v0 (tNil$c ?v1 ))(tNil$d ?v1 )):pattern ((tconcat$b ?v0 (tNil$c ?v1 ))))):named a49 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (tconcat$c ?v0 (tNil$b ?v1 ))(tNil$e ?v1 )):pattern ((tconcat$c ?v0 (tNil$b ?v1 ))))):named a50 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (tconcat$d ?v0 (tNil$e ?v1 ))(tNil$ ?v1 )):pattern ((tconcat$d ?v0 (tNil$e ?v1 ))))):named a51 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (tconcat$e ?v0 (tNil$d ?v1 ))(tNil$a ?v1 )):pattern ((tconcat$e ?v0 (tNil$d ?v1 ))))):named a52 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 C$ ))(! (= (tconcat$f ?v0 (tNil$f ?v1 ))(tNil$b ?v1 )):pattern ((tconcat$f ?v0 (tNil$f ?v1 ))))):named a53 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 D$ ))(! (= (tconcat$g ?v0 (tNil$g ?v1 ))(tNil$c ?v1 )):pattern ((tconcat$g ?v0 (tNil$g ?v1 ))))):named a54 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 D$ ))(! (= (tconcat$h ?v0 (tNil$c ?v1 ))(tNil$d ?v1 )):pattern ((tconcat$h ?v0 (tNil$c ?v1 ))))):named a55 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 C$ ))(! (= (tconcat$i ?v0 (tNil$b ?v1 ))(tNil$e ?v1 )):pattern ((tconcat$i ?v0 (tNil$b ?v1 ))))):named a56 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 C$ ))(! (= (tconcat$j ?v0 (tNil$e ?v1 ))(tNil$ ?v1 )):pattern ((tconcat$j ?v0 (tNil$e ?v1 ))))):named a57 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 D$ ))(! (= (tconcat$k ?v0 (tNil$d ?v1 ))(tNil$a ?v1 )):pattern ((tconcat$k ?v0 (tNil$d ?v1 ))))):named a58 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 A_llist_llist_bool_fun$ )(?v2 C$ ))(! (= (tfilter$ ?v0 ?v1 (tNil$b ?v2 ))(tNil$b ?v2 )):pattern ((tfilter$ ?v0 ?v1 (tNil$b ?v2 ))))):named a59 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 B_llist_llist_bool_fun$ )(?v2 D$ ))(! (= (tfilter$a ?v0 ?v1 (tNil$c ?v2 ))(tNil$c ?v2 )):pattern ((tfilter$a ?v0 ?v1 (tNil$c ?v2 ))))):named a60 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 B_llist_bool_fun$ )(?v2 D$ ))(! (= (tfilter$b ?v0 ?v1 (tNil$d ?v2 ))(tNil$d ?v2 )):pattern ((tfilter$b ?v0 ?v1 (tNil$d ?v2 ))))):named a61 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 A_llist_bool_fun$ )(?v2 C$ ))(! (= (tfilter$c ?v0 ?v1 (tNil$e ?v2 ))(tNil$e ?v2 )):pattern ((tfilter$c ?v0 ?v1 (tNil$e ?v2 ))))):named a62 ))
(assert (! (forall ((?v0 Unit_c_fun$ )(?v1 A_bool_fun$ )(?v2 C$ ))(! (= (tfilter$d ?v0 ?v1 (tNil$ ?v2 ))(tNil$ ?v2 )):pattern ((tfilter$d ?v0 ?v1 (tNil$ ?v2 ))))):named a63 ))
(assert (! (forall ((?v0 Unit_d_fun$ )(?v1 B_bool_fun$ )(?v2 D$ ))(! (= (tfilter$e ?v0 ?v1 (tNil$a ?v2 ))(tNil$a ?v2 )):pattern ((tfilter$e ?v0 ?v1 (tNil$a ?v2 ))))):named a64 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist_llist_bool_fun$ )(?v2 C$ ))(! (= (tfilter$f ?v0 ?v1 (tNil$b ?v2 ))(tNil$b ?v2 )):pattern ((tfilter$f ?v0 ?v1 (tNil$b ?v2 ))))):named a65 ))
(assert (! (forall ((?v0 D$ )(?v1 B_llist_llist_bool_fun$ )(?v2 D$ ))(! (= (tfilter$g ?v0 ?v1 (tNil$c ?v2 ))(tNil$c ?v2 )):pattern ((tfilter$g ?v0 ?v1 (tNil$c ?v2 ))))):named a66 ))
(assert (! (forall ((?v0 D$ )(?v1 B_llist_bool_fun$ )(?v2 D$ ))(! (= (tfilter$h ?v0 ?v1 (tNil$d ?v2 ))(tNil$d ?v2 )):pattern ((tfilter$h ?v0 ?v1 (tNil$d ?v2 ))))):named a67 ))
(assert (! (forall ((?v0 C$ )(?v1 A_llist_bool_fun$ )(?v2 C$ ))(! (= (tfilter$i ?v0 ?v1 (tNil$e ?v2 ))(tNil$e ?v2 )):pattern ((tfilter$i ?v0 ?v1 (tNil$e ?v2 ))))):named a68 ))
(assert (! (forall ((?v0 C$ )(?v1 A_bool_fun$ )(?v2 C$ ))(! (= (tfilter$j ?v0 ?v1 (tNil$ ?v2 ))(tNil$ ?v2 )):pattern ((tfilter$j ?v0 ?v1 (tNil$ ?v2 ))))):named a69 ))
(assert (! (forall ((?v0 D$ )(?v1 B_bool_fun$ )(?v2 D$ ))(! (= (tfilter$k ?v0 ?v1 (tNil$a ?v2 ))(tNil$a ?v2 )):pattern ((tfilter$k ?v0 ?v1 (tNil$a ?v2 ))))):named a70 ))
(assert (! (forall ((?v0 D$ )(?v1 D_b_llist_d_tllist_fun$ ))(! (= (fun_app$t (tappend$ (tNil$d ?v0 ))?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$t (tappend$ (tNil$d ?v0 ))?v1 )))):named a71 ))
(assert (! (forall ((?v0 C$ )(?v1 C_a_llist_c_tllist_fun$ ))(! (= (fun_app$u (tappend$a (tNil$e ?v0 ))?v1 )(fun_app$d ?v1 ?v0 )):pattern ((fun_app$u (tappend$a (tNil$e ?v0 ))?v1 )))):named a72 ))
(assert (! (forall ((?v0 C$ )(?v1 C_a_c_tllist_fun$ ))(! (= (fun_app$v (tappend$b (tNil$ ?v0 ))?v1 )(fun_app$e ?v1 ?v0 )):pattern ((fun_app$v (tappend$b (tNil$ ?v0 ))?v1 )))):named a73 ))
(assert (! (forall ((?v0 D$ )(?v1 D_b_d_tllist_fun$ ))(! (= (fun_app$w (tappend$c (tNil$a ?v0 ))?v1 )(fun_app$b ?v1 ?v0 )):pattern ((fun_app$w (tappend$c (tNil$a ?v0 ))?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_llist_llist_c_tllist$ ))(! (= (fun_app$x (tappend$d ?v0 )uuf$ )?v0 ):pattern ((tappend$d ?v0 )))):named a75 ))
(assert (! (forall ((?v0 B_llist_llist_d_tllist$ ))(! (= (fun_app$y (tappend$e ?v0 )uug$ )?v0 ):pattern ((tappend$e ?v0 )))):named a76 ))
(assert (! (forall ((?v0 B_llist_d_tllist$ ))(! (= (fun_app$t (tappend$ ?v0 )uuh$ )?v0 ):pattern ((tappend$ ?v0 )))):named a77 ))
(assert (! (forall ((?v0 A_llist_c_tllist$ ))(! (= (fun_app$u (tappend$a ?v0 )uui$ )?v0 ):pattern ((tappend$a ?v0 )))):named a78 ))
(assert (! (forall ((?v0 A_c_tllist$ ))(! (= (fun_app$v (tappend$b ?v0 )uuj$ )?v0 ):pattern ((tappend$b ?v0 )))):named a79 ))
(assert (! (forall ((?v0 B_d_tllist$ ))(! (= (fun_app$w (tappend$c ?v0 )uuk$ )?v0 ):pattern ((tappend$c ?v0 )))):named a80 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_c_tllist$ ))(=> (and (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 C$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$ ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$l (fun_app$m ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_c_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$ ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$p (fun_app$q ?v0 ?v4 )?v6 )(fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )?v5 )?v7 ))))false ))))false )):named a81 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$b ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 D$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$a ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$l (fun_app$s ?v1 ?v4 )?v5 )))false ))(forall ((?v4 B$ )(?v5 B_d_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$a ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$p (fun_app$z ?v0 ?v4 )?v6 )(tllist_all2$b ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a82 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_d_tllist$ )(?v3 B_d_tllist$ ))(=> (and (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 D$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$a ?v4 ))(and (= ?v3 (tNil$a ?v5 ))(fun_app$j (fun_app$k ?v1 ?v4 )?v5 )))false ))(forall ((?v4 B$ )(?v5 B_d_tllist$ )(?v6 B$ )(?v7 B_d_tllist$ ))(=> (and (= ?v2 (tCons$a ?v4 ?v5 ))(and (= ?v3 (tCons$a ?v6 ?v7 ))(and (fun_app$n (fun_app$o ?v0 ?v4 )?v6 )(fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )?v5 )?v7 ))))false ))))false )):named a83 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (tllist_all2$ ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 C$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$ ?v4 ))(and (= ?v3 (tNil$a ?v5 ))(fun_app$j (fun_app$r ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_c_tllist$ )(?v6 B$ )(?v7 B_d_tllist$ ))(=> (and (= ?v2 (tCons$ ?v4 ?v5 ))(and (= ?v3 (tCons$a ?v6 ?v7 ))(and (fun_app$n (fun_app$aa ?v0 ?v4 )?v6 )(tllist_all2$ ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a84 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_llist_d_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$h ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 D$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$d ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$l (fun_app$s ?v1 ?v4 )?v5 )))false ))(forall ((?v4 B_llist$ )(?v5 B_llist_d_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$d ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$p (fun_app$ab ?v0 ?v4 )?v6 )(tllist_all2$h ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a85 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_llist_c_tllist$ )(?v3 A_c_tllist$ ))(=> (and (tllist_all2$j ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 C$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$e ?v4 ))(and (= ?v3 (tNil$ ?v5 ))(fun_app$l (fun_app$m ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A_llist$ )(?v5 A_llist_c_tllist$ )(?v6 A$ )(?v7 A_c_tllist$ ))(=> (and (= ?v2 (tCons$e ?v4 ?v5 ))(and (= ?v3 (tCons$ ?v6 ?v7 ))(and (fun_app$p (fun_app$ac ?v0 ?v4 )?v6 )(tllist_all2$j ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a86 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B_llist_d_tllist$ )(?v3 B_d_tllist$ ))(=> (and (tllist_all2$i ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 D$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$d ?v4 ))(and (= ?v3 (tNil$a ?v5 ))(fun_app$j (fun_app$k ?v1 ?v4 )?v5 )))false ))(forall ((?v4 B_llist$ )(?v5 B_llist_d_tllist$ )(?v6 B$ )(?v7 B_d_tllist$ ))(=> (and (= ?v2 (tCons$d ?v4 ?v5 ))(and (= ?v3 (tCons$a ?v6 ?v7 ))(and (fun_app$n (fun_app$ad ?v0 ?v4 )?v6 )(tllist_all2$i ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a87 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_llist_c_tllist$ )(?v3 B_d_tllist$ ))(=> (and (tllist_all2$k ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 C$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$e ?v4 ))(and (= ?v3 (tNil$a ?v5 ))(fun_app$j (fun_app$r ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A_llist$ )(?v5 A_llist_c_tllist$ )(?v6 B$ )(?v7 B_d_tllist$ ))(=> (and (= ?v2 (tCons$e ?v4 ?v5 ))(and (= ?v3 (tCons$a ?v6 ?v7 ))(and (fun_app$n (fun_app$ae ?v0 ?v4 )?v6 )(tllist_all2$k ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a88 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 B_llist_d_tllist$ ))(=> (and (tllist_all2$d ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 C$ )(?v5 D$ ))(=> (and (= ?v2 (tNil$ ?v4 ))(and (= ?v3 (tNil$d ?v5 ))(fun_app$j (fun_app$r ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_c_tllist$ )(?v6 B_llist$ )(?v7 B_llist_d_tllist$ ))(=> (and (= ?v2 (tCons$ ?v4 ?v5 ))(and (= ?v3 (tCons$d ?v6 ?v7 ))(and (fun_app$af (fun_app$ag ?v0 ?v4 )?v6 )(tllist_all2$d ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a89 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A_c_tllist$ )(?v3 A_llist_c_tllist$ ))(=> (and (tllist_all2$e ?v0 ?v1 ?v2 ?v3 )(and (forall ((?v4 C$ )(?v5 C$ ))(=> (and (= ?v2 (tNil$ ?v4 ))(and (= ?v3 (tNil$e ?v5 ))(fun_app$l (fun_app$m ?v1 ?v4 )?v5 )))false ))(forall ((?v4 A$ )(?v5 A_c_tllist$ )(?v6 A_llist$ )(?v7 A_llist_c_tllist$ ))(=> (and (= ?v2 (tCons$ ?v4 ?v5 ))(and (= ?v3 (tCons$e ?v6 ?v7 ))(and (fun_app$ah (fun_app$ai ?v0 ?v4 )?v6 )(tllist_all2$e ?v0 ?v1 ?v5 ?v7 ))))false ))))false )):named a90 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 D$ ))(not (tllist_all2$ ?v0 ?v1 (tCons$ ?v2 ?v3 )(tNil$a ?v4 )))):named a91 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 D$ ))(not (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(tNil$a ?v4 )))):named a92 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 C$ ))(not (tllist_all2$b ?v0 ?v1 (tCons$a ?v2 ?v3 )(tNil$ ?v4 )))):named a93 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 C$ ))(not (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(tNil$ ?v4 )))):named a94 ))
(assert (! (forall ((?v0 A_b_llist_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 D$ ))(not (tllist_all2$d ?v0 ?v1 (tCons$ ?v2 ?v3 )(tNil$d ?v4 )))):named a95 ))
(assert (! (forall ((?v0 A_a_llist_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 A$ )(?v3 A_c_tllist$ )(?v4 C$ ))(not (tllist_all2$e ?v0 ?v1 (tCons$ ?v2 ?v3 )(tNil$e ?v4 )))):named a96 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 D$ ))(not (tllist_all2$f ?v0 ?v1 (tCons$a ?v2 ?v3 )(tNil$d ?v4 )))):named a97 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B$ )(?v3 B_d_tllist$ )(?v4 C$ ))(not (tllist_all2$g ?v0 ?v1 (tCons$a ?v2 ?v3 )(tNil$e ?v4 )))):named a98 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 A_llist$ )(?v3 A_llist_c_tllist$ )(?v4 D$ ))(not (tllist_all2$k ?v0 ?v1 (tCons$e ?v2 ?v3 )(tNil$a ?v4 )))):named a99 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist_d_tllist$ )(?v4 C$ ))(not (tllist_all2$h ?v0 ?v1 (tCons$d ?v2 ?v3 )(tNil$ ?v4 )))):named a100 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 B$ )(?v4 B_d_tllist$ ))(not (tllist_all2$ ?v0 ?v1 (tNil$ ?v2 )(tCons$a ?v3 ?v4 )))):named a101 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 B$ )(?v4 B_d_tllist$ ))(not (fun_app$f (fun_app$g (tllist_all2$c ?v0 ?v1 )(tNil$a ?v2 ))(tCons$a ?v3 ?v4 )))):named a102 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (tllist_all2$b ?v0 ?v1 (tNil$a ?v2 )(tCons$ ?v3 ?v4 )))):named a103 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (fun_app$h (fun_app$i (tllist_all2$a ?v0 ?v1 )(tNil$ ?v2 ))(tCons$ ?v3 ?v4 )))):named a104 ))
(assert (! (forall ((?v0 B_llist_a_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (tllist_all2$h ?v0 ?v1 (tNil$d ?v2 )(tCons$ ?v3 ?v4 )))):named a105 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 C_c_bool_fun_fun$ )(?v2 C$ )(?v3 A$ )(?v4 A_c_tllist$ ))(not (tllist_all2$j ?v0 ?v1 (tNil$e ?v2 )(tCons$ ?v3 ?v4 )))):named a106 ))
(assert (! (forall ((?v0 B_llist_b_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 B$ )(?v4 B_d_tllist$ ))(not (tllist_all2$i ?v0 ?v1 (tNil$d ?v2 )(tCons$a ?v3 ?v4 )))):named a107 ))
(assert (! (forall ((?v0 A_llist_b_bool_fun_fun$ )(?v1 C_d_bool_fun_fun$ )(?v2 C$ )(?v3 B$ )(?v4 B_d_tllist$ ))(not (tllist_all2$k ?v0 ?v1 (tNil$e ?v2 )(tCons$a ?v3 ?v4 )))):named a108 ))
(assert (! (forall ((?v0 B_b_llist_bool_fun_fun$ )(?v1 D_d_bool_fun_fun$ )(?v2 D$ )(?v3 B_llist$ )(?v4 B_llist_d_tllist$ ))(not (tllist_all2$f ?v0 ?v1 (tNil$a ?v2 )(tCons$d ?v3 ?v4 )))):named a109 ))
(assert (! (forall ((?v0 B_a_llist_bool_fun_fun$ )(?v1 D_c_bool_fun_fun$ )(?v2 D$ )(?v3 A_llist$ )(?v4 A_llist_c_tllist$ ))(not (tllist_all2$g ?v0 ?v1 (tNil$a ?v2 )(tCons$e ?v3 ?v4 )))):named a110 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_c_tllist$ )(?v2 A_llist$ )(?v3 A_llist_c_tllist$ ))(= (= (tCons$e ?v0 ?v1 )(tCons$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a111 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist_d_tllist$ )(?v2 B_llist$ )(?v3 B_llist_d_tllist$ ))(= (= (tCons$d ?v0 ?v1 )(tCons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a112 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_tllist$ )(?v2 A$ )(?v3 A_c_tllist$ ))(= (= (tCons$ ?v0 ?v1 )(tCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a113 ))
(assert (! (forall ((?v0 B$ )(?v1 B_d_tllist$ )(?v2 B$ )(?v3 B_d_tllist$ ))(= (= (tCons$a ?v0 ?v1 )(tCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a114 ))
(check-sat )
;(get-unsat-core )
