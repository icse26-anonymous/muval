;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_a_set_fun$ 0 )
(declare-sort A_set_a_fun$ 0 )
(declare-sort A_set_a_set_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_list$ 0)
(declare-fun nil$ ()A_list$)
(declare-fun hd$ (A_list$)A$)
(declare-fun tl$ (A_list$)A_list$)
(declare-fun cons$ (A$ A_list$ )A_list$)
(declare-fun x1$ ()A$ )
(declare-fun x2$ ()A$ )
(declare-fun l1a$ ()A_list$ )
(declare-fun l2b$ ()A_list$ )
(declare-fun set$ (A_list$ )A_set$ )
(declare-fun less$ (A$ A$ )Bool )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun less_eq$ (A$ A$ )Bool )
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$b (A_a_fun$ A$ )A$ )
(declare-fun fun_app$c (A_a_set_fun$ A$ )A_set$ )
(declare-fun fun_app$d (A_set_a_fun$ A_set$ )A$ )
(declare-fun fun_app$e (A_set_a_set_fun$ A_set$ )A_set$ )
(declare-fun less_eq$a (A_set$ A_set$ )Bool )
(declare-fun subset_sorted$ (A_list$ A_list$ )Bool )
(assert (! (not (= (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(member$ ?v0 (set$ l2b$ ))))(forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(or (= ?v0 x2$ )(member$ ?v0 (set$ l2b$ ))))))):named a0 ))
(assert (! (= (subset_sorted$ l1a$ l2b$ )(forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(member$ ?v0 (set$ l2b$ ))))):named a1 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(less_eq$ x2$ ?v0 ))):named a2 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l2b$ ))(less_eq$ x2$ ?v0 ))):named a3 ))
(assert (! (not (member$ x2$ (set$ l2b$ ))):named a4 ))
(assert (! (not (member$ x2$ (set$ l1a$ ))):named a5 ))
(assert (! (= x1$ x2$ ):named a6 ))
(assert (! (not (member$ x2$ (set$ l2b$ ))):named a7 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l2b$ ))(less_eq$ x2$ ?v0 ))):named a8 ))
(assert (! (forall ((?v0 A$ ))(=> (member$ ?v0 (set$ l1a$ ))(less_eq$ x1$ ?v0 ))):named a9 ))
(assert (! (= (subset_sorted$ l1a$ l2b$ )(less_eq$a (set$ l1a$ )(set$ l2b$ ))):named a10 ))
(assert (! (not (member$ x1$ (set$ l1a$ ))):named a11 ))
(assert (! (forall ((?v0 A$ ))(less_eq$ ?v0 ?v0 )):named a12 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$a ?v0 ?v0 )):named a13 ))
(assert (! (not (less$ x1$ x2$ )):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 )))):named a15 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (= ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (and (=> (less_eq$ ?v0 ?v1 )false )(=> (less_eq$ ?v1 ?v0 )false ))false )):named a17 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ ))(=> (and (forall ((?v3 A$ )(?v4 A$ ))(=> (less_eq$ ?v3 ?v4 )(fun_app$ (fun_app$a ?v0 ?v3 )?v4 )))(forall ((?v3 A$ )(?v4 A$ ))(=> (fun_app$ (fun_app$a ?v0 ?v4 )?v3 )(fun_app$ (fun_app$a ?v0 ?v3 )?v4 ))))(fun_app$ (fun_app$a ?v0 ?v1 )?v2 ))):named a18 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(=> (and (= ?v0 (fun_app$b ?v1 ?v2 ))(and (less_eq$ ?v2 ?v3 )(forall ((?v4 A$ )(?v5 A$ ))(=> (less_eq$ ?v4 ?v5 )(less_eq$ (fun_app$b ?v1 ?v4 )(fun_app$b ?v1 ?v5 ))))))(less_eq$ ?v0 (fun_app$b ?v1 ?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_set_fun$ )(?v2 A$ )(?v3 A$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(and (less_eq$ ?v2 ?v3 )(forall ((?v4 A$ )(?v5 A$ ))(=> (less_eq$ ?v4 ?v5 )(less_eq$a (fun_app$c ?v1 ?v4 )(fun_app$c ?v1 ?v5 ))))))(less_eq$a ?v0 (fun_app$c ?v1 ?v3 )))):named a20 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set_a_fun$ )(?v2 A_set$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$d ?v1 ?v2 ))(and (less_eq$a ?v2 ?v3 )(forall ((?v4 A_set$ )(?v5 A_set$ ))(=> (less_eq$a ?v4 ?v5 )(less_eq$ (fun_app$d ?v1 ?v4 )(fun_app$d ?v1 ?v5 ))))))(less_eq$ ?v0 (fun_app$d ?v1 ?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set_a_set_fun$ )(?v2 A_set$ )(?v3 A_set$ ))(=> (and (= ?v0 (fun_app$e ?v1 ?v2 ))(and (less_eq$a ?v2 ?v3 )(forall ((?v4 A_set$ )(?v5 A_set$ ))(=> (less_eq$a ?v4 ?v5 )(less_eq$a (fun_app$e ?v1 ?v4 )(fun_app$e ?v1 ?v5 ))))))(less_eq$a ?v0 (fun_app$e ?v1 ?v3 )))):named a22 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ )(?v3 A$ ))(=> (and (= ?v0 ?v1 )(and (less_eq$ ?v1 ?v2 )(= ?v2 ?v3 )))(less_eq$ ?v0 ?v3 ))):named a23 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_set$ )(?v3 A_set$ ))(=> (and (= ?v0 ?v1 )(and (less_eq$a ?v1 ?v2 )(= ?v2 ?v3 )))(less_eq$a ?v0 ?v3 ))):named a24 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (not (= ?v0 ?v1 ))(or (less$ ?v0 ?v1 )(less$ ?v1 ?v0 )))):named a25 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (not (less$ ?v0 ?v1 ))(or (less$ ?v1 ?v0 )(= ?v0 ?v1 )))):named a26 ))
(check-sat )
;(get-unsat-core )
