;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort B_llist_set$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_a_prod_llist_set$ 0 )
(declare-sort A_b_prod_llist_set$ 0 )
(declare-sort A_a_prod_llist_bool_fun$ 0 )
(declare-sort A_b_prod_llist_bool_fun$ 0 )
(declare-sort A_llist_set_a_llist_fun$ 0 )
(declare-sort B_a_prod_llist_bool_fun$ 0 )
(declare-sort B_b_prod_llist_bool_fun$ 0 )
(declare-sort B_llist_set_b_llist_fun$ 0 )
(declare-sort A_a_b_prod_prod_llist_set$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort A_llist_b_llist_prod_bool_fun$ 0 )
(declare-sort B_llist_a_llist_prod_bool_fun$ 0 )
(declare-sort B_llist_b_llist_prod_bool_fun$ 0 )
(declare-sort A_a_b_prod_prod_llist_bool_fun$ 0 )
(declare-sort B_a_b_prod_prod_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_b_llist_prod_b_llist_fun$ 0 )
(declare-sort B_llist_a_llist_prod_a_llist_fun$ 0 )
(declare-sort B_llist_a_llist_prod_b_llist_fun$ 0 )
(declare-sort B_llist_b_llist_prod_b_llist_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_bool_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_bool_fun$ 0 )
(declare-sort A_a_prod_llist_set_a_a_prod_llist_fun$ 0 )
(declare-sort A_b_prod_llist_set_a_b_prod_llist_fun$ 0 )
(declare-sort B_a_prod_llist_set_b_a_prod_llist_fun$ 0 )
(declare-sort B_b_prod_llist_set_b_b_prod_llist_fun$ 0 )
(declare-sort A_llist_a_llist_a_a_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_llist_a_b_prod_llist_fun_fun$ 0 )
(declare-sort B_llist_a_llist_b_a_prod_llist_fun_fun$ 0 )
(declare-sort B_llist_b_llist_b_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_a_prod_llist_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_b_llist_fun$ 0 )
(declare-sort B_llist_a_llist_prod_b_a_prod_llist_fun$ 0 )
(declare-sort B_llist_b_llist_prod_b_b_prod_llist_fun$ 0 )
(declare-sort A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort B_a_prod_llist_b_a_prod_llist_bool_fun_fun$ 0 )
(declare-sort B_b_prod_llist_b_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ 0 )
(declare-sort A_llist_a_llist_prod_set_a_llist_a_llist_prod_fun$ 0 )
(declare-sort A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ 0 )
(declare-sort B_llist_a_llist_prod_set_b_llist_a_llist_prod_fun$ 0 )
(declare-sort B_llist_b_llist_prod_set_b_llist_b_llist_prod_fun$ 0 )
(declare-sort A_a_b_prod_prod_llist_set_a_a_b_prod_prod_llist_fun$ 0 )
(declare-sort B_a_b_prod_prod_llist_set_b_a_b_prod_prod_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_a_b_prod_a_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_b_llist_a_b_prod_b_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_a_a_b_prod_prod_llist_fun_fun$ 0 )
(declare-sort A_llist_b_b_prod_llist_a_b_b_prod_prod_llist_fun_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_b_a_b_prod_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_b_prod_a_prod_llist_fun$ 0 )
(declare-sort A_b_prod_llist_b_llist_prod_a_b_prod_b_prod_llist_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_a_a_b_prod_prod_llist_fun$ 0 )
(declare-sort A_llist_b_b_prod_llist_prod_a_b_b_prod_prod_llist_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_b_a_b_prod_prod_llist_fun$ 0 )
(declare-sort A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_a_b_prod_prod_llist_a_a_b_prod_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_b_prod_prod_llist_a_b_b_prod_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_prod_llist_a_b_prod_a_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_b_prod_b_prod_llist_a_b_prod_b_prod_llist_bool_fun_fun$ 0 )
(declare-sort B_a_b_prod_prod_llist_b_a_b_prod_prod_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_set_a_llist_a_b_prod_llist_prod_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_set_b_llist_a_b_prod_llist_prod_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_a_b_prod_a_b_prod_prod_llist_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_a_b_prod_prod_llist_fun$ 0 )
(declare-sort A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_llist_b_llist_prod_a_b_prod_llist_b_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_llist_b_b_prod_llist_prod_a_llist_b_b_prod_llist_prod_bool_fun_fun$ 0 )
(declare-sort B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ 0 )
(declare-sort A_b_prod_a_b_prod_prod_llist_a_b_prod_a_b_prod_prod_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_set_b_llist_fun_a_llist_b_llist_prod_set_a_llist_b_llist_prod_fun_fun$ 0 )
(declare-sort A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ 0 )
(declare-codatatypes ()((B_llist$ (lNil$ )(lCons$ (lhd$ B$ )(ltl$ B_llist$ )))(A_llist$ (lNil$a )(lCons$a (lhd$a A$ )(ltl$a A_llist$ )))))
(declare-sort A_llist_b_llist_prod$ 0)
(declare-sort A_b_prod$ 0)
(declare-fun fst$ (A_llist_b_llist_prod$)A_llist$)
(declare-fun snd$ (A_llist_b_llist_prod$)B_llist$)
(declare-fun pair$ (A_llist$ B_llist$ )A_llist_b_llist_prod$)
(declare-fun fst$a (A_b_prod$)A$)
(declare-fun snd$a (A_b_prod$)B$)
(declare-fun pair$a (A$ B$ )A_b_prod$)
(declare-codatatypes ()((A_b_prod_llist$ (lNil$b )(lCons$b (lhd$b A_b_prod$ )(ltl$b A_b_prod_llist$ )))))
(declare-sort B_a_b_prod_prod$ 0)
(declare-fun fst$b (B_a_b_prod_prod$)B$)
(declare-fun snd$b (B_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$b (B$ A_b_prod$ )B_a_b_prod_prod$)
(declare-codatatypes ()((B_a_b_prod_prod_llist$ (lNil$c )(lCons$c (lhd$c B_a_b_prod_prod$ )(ltl$c B_a_b_prod_prod_llist$ )))))
(declare-sort B_b_prod$ 0)
(declare-fun fst$c (B_b_prod$)B$)
(declare-fun snd$c (B_b_prod$)B$)
(declare-fun pair$c (B$ B$ )B_b_prod$)
(declare-codatatypes ()((B_b_prod_llist$ (lNil$d )(lCons$d (lhd$d B_b_prod$ )(ltl$d B_b_prod_llist$ )))))
(declare-sort B_a_prod$ 0)
(declare-fun fst$d (B_a_prod$)B$)
(declare-fun snd$d (B_a_prod$)A$)
(declare-fun pair$d (B$ A$ )B_a_prod$)
(declare-codatatypes ()((B_a_prod_llist$ (lNil$e )(lCons$e (lhd$e B_a_prod$ )(ltl$e B_a_prod_llist$ )))))
(declare-sort A_a_b_prod_prod$ 0)
(declare-fun fst$e (A_a_b_prod_prod$)A$)
(declare-fun snd$e (A_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$e (A$ A_b_prod$ )A_a_b_prod_prod$)
(declare-codatatypes ()((A_a_b_prod_prod_llist$ (lNil$f )(lCons$f (lhd$f A_a_b_prod_prod$ )(ltl$f A_a_b_prod_prod_llist$ )))))
(declare-sort A_a_prod$ 0)
(declare-fun fst$f (A_a_prod$)A$)
(declare-fun snd$f (A_a_prod$)A$)
(declare-fun pair$f (A$ A$ )A_a_prod$)
(declare-codatatypes ()((A_a_prod_llist$ (lNil$g )(lCons$g (lhd$g A_a_prod$ )(ltl$g A_a_prod_llist$ )))))
(declare-sort A_llist_a_llist_prod$ 0)
(declare-sort B_llist_a_llist_prod$ 0)
(declare-sort B_llist_b_llist_prod$ 0)
(declare-sort A_llist_a_b_prod_llist_prod$ 0)
(declare-sort B_llist_a_b_prod_llist_prod$ 0)
(declare-sort A_b_prod_llist_a_llist_prod$ 0)
(declare-sort A_b_prod_a_prod$ 0)
(declare-fun fst$g (A_llist_a_llist_prod$)A_llist$)
(declare-fun snd$g (A_llist_a_llist_prod$)A_llist$)
(declare-fun pair$g (A_llist$ A_llist$ )A_llist_a_llist_prod$)
(declare-fun fst$h (B_llist_a_llist_prod$)B_llist$)
(declare-fun snd$h (B_llist_a_llist_prod$)A_llist$)
(declare-fun pair$h (B_llist$ A_llist$ )B_llist_a_llist_prod$)
(declare-fun fst$i (B_llist_b_llist_prod$)B_llist$)
(declare-fun snd$i (B_llist_b_llist_prod$)B_llist$)
(declare-fun pair$i (B_llist$ B_llist$ )B_llist_b_llist_prod$)
(declare-fun fst$j (A_llist_a_b_prod_llist_prod$)A_llist$)
(declare-fun snd$j (A_llist_a_b_prod_llist_prod$)A_b_prod_llist$)
(declare-fun pair$j (A_llist$ A_b_prod_llist$ )A_llist_a_b_prod_llist_prod$)
(declare-fun fst$k (B_llist_a_b_prod_llist_prod$)B_llist$)
(declare-fun snd$k (B_llist_a_b_prod_llist_prod$)A_b_prod_llist$)
(declare-fun pair$k (B_llist$ A_b_prod_llist$ )B_llist_a_b_prod_llist_prod$)
(declare-fun fst$l (A_b_prod_llist_a_llist_prod$)A_b_prod_llist$)
(declare-fun snd$l (A_b_prod_llist_a_llist_prod$)A_llist$)
(declare-fun pair$l (A_b_prod_llist$ A_llist$ )A_b_prod_llist_a_llist_prod$)
(declare-fun fst$m (A_b_prod_a_prod$)A_b_prod$)
(declare-fun snd$m (A_b_prod_a_prod$)A$)
(declare-fun pair$m (A_b_prod$ A$ )A_b_prod_a_prod$)
(declare-codatatypes ()((A_b_prod_a_prod_llist$ (lNil$h )(lCons$h (lhd$h A_b_prod_a_prod$ )(ltl$h A_b_prod_a_prod_llist$ )))))
(declare-sort A_b_prod_llist_b_llist_prod$ 0)
(declare-sort A_b_prod_b_prod$ 0)
(declare-fun fst$n (A_b_prod_llist_b_llist_prod$)A_b_prod_llist$)
(declare-fun snd$n (A_b_prod_llist_b_llist_prod$)B_llist$)
(declare-fun pair$n (A_b_prod_llist$ B_llist$ )A_b_prod_llist_b_llist_prod$)
(declare-fun fst$o (A_b_prod_b_prod$)A_b_prod$)
(declare-fun snd$o (A_b_prod_b_prod$)B$)
(declare-fun pair$o (A_b_prod$ B$ )A_b_prod_b_prod$)
(declare-codatatypes ()((A_b_prod_b_prod_llist$ (lNil$i )(lCons$i (lhd$i A_b_prod_b_prod$ )(ltl$i A_b_prod_b_prod_llist$ )))))
(declare-sort A_b_prod_llist_a_b_prod_llist_prod$ 0)
(declare-sort A_b_prod_a_b_prod_prod$ 0)
(declare-fun fst$p (A_b_prod_llist_a_b_prod_llist_prod$)A_b_prod_llist$)
(declare-fun snd$p (A_b_prod_llist_a_b_prod_llist_prod$)A_b_prod_llist$)
(declare-fun pair$p (A_b_prod_llist$ A_b_prod_llist$ )A_b_prod_llist_a_b_prod_llist_prod$)
(declare-fun fst$q (A_b_prod_a_b_prod_prod$)A_b_prod$)
(declare-fun snd$q (A_b_prod_a_b_prod_prod$)A_b_prod$)
(declare-fun pair$q (A_b_prod$ A_b_prod$ )A_b_prod_a_b_prod_prod$)
(declare-codatatypes ()((A_b_prod_a_b_prod_prod_llist$ (lNil$j )(lCons$j (lhd$j A_b_prod_a_b_prod_prod$ )(ltl$j A_b_prod_a_b_prod_prod_llist$ )))))
(declare-sort A_llist_b_b_prod_llist_prod$ 0)
(declare-sort A_b_b_prod_prod$ 0)
(declare-fun fst$r (A_llist_b_b_prod_llist_prod$)A_llist$)
(declare-fun snd$r (A_llist_b_b_prod_llist_prod$)B_b_prod_llist$)
(declare-fun pair$r (A_llist$ B_b_prod_llist$ )A_llist_b_b_prod_llist_prod$)
(declare-fun fst$s (A_b_b_prod_prod$)A$)
(declare-fun snd$s (A_b_b_prod_prod$)B_b_prod$)
(declare-fun pair$s (A$ B_b_prod$ )A_b_b_prod_prod$)
(declare-codatatypes ()((A_b_b_prod_prod_llist$ (lNil$k )(lCons$k (lhd$k A_b_b_prod_prod$ )(ltl$k A_b_b_prod_prod_llist$ )))))
(declare-fun uu$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uua$ ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun uub$ ()B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun uuc$ ()B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun uud$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uue$ ()B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun uuf$ ()A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun uug$ ()A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun uuh$ ()A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun uui$ ()B_llist_a_b_prod_llist_prod_b_llist_fun$ )
(declare-fun uuj$ ()B_llist_b_llist_prod_b_llist_fun$ )
(declare-fun uuk$ ()B_llist_a_llist_prod_b_llist_fun$ )
(declare-fun uul$ ()A_llist_a_b_prod_llist_prod_a_llist_fun$ )
(declare-fun uum$ ()A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun uun$ ()A_llist_b_llist_prod_a_llist_fun$ )
(declare-fun uuo$ ()B_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ )
(declare-fun uup$ ()B_llist_b_llist_prod_b_llist_fun$ )
(declare-fun uuq$ ()B_llist_a_llist_prod_a_llist_fun$ )
(declare-fun uur$ ()A_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ )
(declare-fun uus$ ()A_llist_a_llist_prod_a_llist_fun$ )
(declare-fun uut$ ()A_llist_b_llist_prod_b_llist_fun$ )
(declare-fun lSup$ ()A_llist_set_a_llist_fun$ )
(declare-fun lzip$ ()A_llist_b_llist_a_b_prod_llist_fun_fun$ )
(declare-fun chain$ (A_a_b_prod_prod_llist_a_a_b_prod_prod_llist_bool_fun_fun$ A_a_b_prod_prod_llist_set$ )Bool )
(declare-fun lSup$a ()B_llist_set_b_llist_fun$ )
(declare-fun lSup$b ()A_b_prod_llist_set_a_b_prod_llist_fun$ )
(declare-fun lSup$c ()B_a_b_prod_prod_llist_set_b_a_b_prod_prod_llist_fun$ )
(declare-fun lSup$d ()B_b_prod_llist_set_b_b_prod_llist_fun$ )
(declare-fun lSup$e ()B_a_prod_llist_set_b_a_prod_llist_fun$ )
(declare-fun lSup$f ()A_a_b_prod_prod_llist_set_a_a_b_prod_prod_llist_fun$ )
(declare-fun lSup$g ()A_a_prod_llist_set_a_a_prod_llist_fun$ )
(declare-fun lzip$a ()A_llist_a_llist_a_a_prod_llist_fun_fun$ )
(declare-fun lzip$b ()B_llist_a_llist_b_a_prod_llist_fun_fun$ )
(declare-fun lzip$c ()B_llist_b_llist_b_b_prod_llist_fun_fun$ )
(declare-fun lzip$d ()A_llist_a_b_prod_llist_a_a_b_prod_prod_llist_fun_fun$ )
(declare-fun lzip$e ()B_llist_a_b_prod_llist_b_a_b_prod_prod_llist_fun_fun$ )
(declare-fun lzip$f ()A_b_prod_llist_a_llist_a_b_prod_a_prod_llist_fun_fun$ )
(declare-fun lzip$g ()A_b_prod_llist_b_llist_a_b_prod_b_prod_llist_fun_fun$ )
(declare-fun lzip$h ()A_b_prod_llist_a_b_prod_llist_a_b_prod_a_b_prod_prod_llist_fun_fun$ )
(declare-fun lzip$i ()A_llist_b_b_prod_llist_a_b_b_prod_prod_llist_fun_fun$ )
(declare-fun mcont$ (A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )Bool )
(declare-fun chain$a (A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ A_a_prod_llist_set$ )Bool )
(declare-fun chain$b (A_llist_a_llist_bool_fun_fun$ A_llist_set$ )Bool )
(declare-fun chain$c (B_llist_b_llist_bool_fun_fun$ B_llist_set$ )Bool )
(declare-fun chain$d (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist_set$ )Bool )
(declare-fun mcont$a (A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_b_llist_prod_a_llist_fun$ )Bool )
(declare-fun mcont$b (A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ A_llist_b_llist_prod_b_llist_fun$ )Bool )
(declare-fun mcont$c (B_llist_a_b_prod_llist_prod_set_b_llist_a_b_prod_llist_prod_fun$ B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_a_b_prod_llist_prod_b_llist_fun$ )Bool )
(declare-fun mcont$d (B_llist_b_llist_prod_set_b_llist_b_llist_prod_fun$ B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_prod_b_llist_fun$ )Bool )
(declare-fun mcont$e (B_llist_a_llist_prod_set_b_llist_a_llist_prod_fun$ B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ B_llist_set_b_llist_fun$ B_llist_b_llist_bool_fun_fun$ B_llist_a_llist_prod_b_llist_fun$ )Bool )
(declare-fun mcont$f (A_llist_a_b_prod_llist_prod_set_a_llist_a_b_prod_llist_prod_fun$ A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_b_prod_llist_prod_a_llist_fun$ )Bool )
(declare-fun mcont$g (A_llist_a_llist_prod_set_a_llist_a_llist_prod_fun$ A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun mcont$h (B_llist_a_b_prod_llist_prod_set_b_llist_a_b_prod_llist_prod_fun$ B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ B_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ )Bool )
(declare-fun mcont$i (B_llist_a_llist_prod_set_b_llist_a_llist_prod_fun$ B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ B_llist_a_llist_prod_a_llist_fun$ )Bool )
(declare-fun mcont$j (A_llist_a_b_prod_llist_prod_set_a_llist_a_b_prod_llist_prod_fun$ A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ )Bool )
(declare-fun member$ (A_a_b_prod_prod_llist$ A_a_b_prod_prod_llist_set$ )Bool )
(declare-fun fun_app$ (B_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ B_llist_a_b_prod_llist_prod$ )A_b_prod_llist$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun member$a (A_a_prod_llist$ A_a_prod_llist_set$ )Bool )
(declare-fun member$b (A_llist$ A_llist_set$ )Bool )
(declare-fun member$c (B_llist$ B_llist_set$ )Bool )
(declare-fun member$d (A_b_prod_llist$ A_b_prod_llist_set$ )Bool )
(declare-fun fun_app$a (B_llist_b_llist_prod_b_llist_fun$ B_llist_b_llist_prod$ )B_llist$ )
(declare-fun fun_app$b (B_llist_a_llist_prod_a_llist_fun$ B_llist_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$c (A_llist_a_b_prod_llist_prod_a_b_prod_llist_fun$ A_llist_a_b_prod_llist_prod$ )A_b_prod_llist$ )
(declare-fun fun_app$d (A_llist_b_llist_prod_b_llist_fun$ A_llist_b_llist_prod$ )B_llist$ )
(declare-fun fun_app$e (A_llist_a_llist_prod_a_llist_fun$ A_llist_a_llist_prod$ )A_llist$ )
(declare-fun fun_app$f (B_llist_a_b_prod_llist_prod_b_llist_fun$ B_llist_a_b_prod_llist_prod$ )B_llist$ )
(declare-fun fun_app$g (B_llist_a_llist_prod_b_llist_fun$ B_llist_a_llist_prod$ )B_llist$ )
(declare-fun fun_app$h (A_llist_a_b_prod_llist_prod_a_llist_fun$ A_llist_a_b_prod_llist_prod$ )A_llist$ )
(declare-fun fun_app$i (A_llist_b_llist_prod_a_llist_fun$ A_llist_b_llist_prod$ )A_llist$ )
(declare-fun fun_app$j (A_b_prod_llist_bool_fun$ A_b_prod_llist$ )Bool )
(declare-fun fun_app$k (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist$ )A_b_prod_llist_bool_fun$ )
(declare-fun fun_app$l (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$m (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$n (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$o (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$p (B_llist_a_b_prod_llist_prod_bool_fun$ B_llist_a_b_prod_llist_prod$ )Bool )
(declare-fun fun_app$q (B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ B_llist_a_b_prod_llist_prod$ )B_llist_a_b_prod_llist_prod_bool_fun$ )
(declare-fun fun_app$r (B_llist_b_llist_prod_bool_fun$ B_llist_b_llist_prod$ )Bool )
(declare-fun fun_app$s (B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ B_llist_b_llist_prod$ )B_llist_b_llist_prod_bool_fun$ )
(declare-fun fun_app$t (B_llist_a_llist_prod_bool_fun$ B_llist_a_llist_prod$ )Bool )
(declare-fun fun_app$u (B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ B_llist_a_llist_prod$ )B_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$v (A_llist_a_b_prod_llist_prod_bool_fun$ A_llist_a_b_prod_llist_prod$ )Bool )
(declare-fun fun_app$w (A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ A_llist_a_b_prod_llist_prod$ )A_llist_a_b_prod_llist_prod_bool_fun$ )
(declare-fun fun_app$x (A_llist_b_llist_prod_bool_fun$ A_llist_b_llist_prod$ )Bool )
(declare-fun fun_app$y (A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ A_llist_b_llist_prod$ )A_llist_b_llist_prod_bool_fun$ )
(declare-fun fun_app$z (A_llist_a_llist_prod_bool_fun$ A_llist_a_llist_prod$ )Bool )
(declare-fun lprefix$a ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun lprefix$b ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$c ()B_a_b_prod_prod_llist_b_a_b_prod_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$d ()B_b_prod_llist_b_b_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$e ()B_a_prod_llist_b_a_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$f ()A_a_b_prod_prod_llist_a_a_b_prod_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$g ()A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$h ()A_b_prod_a_prod_llist_a_b_prod_a_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$i ()A_b_prod_b_prod_llist_a_b_prod_b_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$j ()A_b_prod_a_b_prod_prod_llist_a_b_prod_a_b_prod_prod_llist_bool_fun_fun$ )
(declare-fun lprefix$k ()A_b_b_prod_prod_llist_a_b_b_prod_prod_llist_bool_fun_fun$ )
(declare-fun monotone$ (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ A_llist_a_llist_prod_a_a_prod_llist_fun$ )Bool )
(declare-fun prod_lub$ (A_llist_set_a_llist_fun$ )B_llist_set_b_llist_fun_a_llist_b_llist_prod_set_a_llist_b_llist_prod_fun_fun$ )
(declare-fun rel_prod$ (A_llist_a_llist_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ )A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$ (A_llist_b_llist_a_b_prod_llist_fun_fun$ )A_llist_b_llist_prod_a_b_prod_llist_fun$ )
(declare-fun fun_app$aa (A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ A_llist_a_llist_prod$ )A_llist_a_llist_prod_bool_fun$ )
(declare-fun fun_app$ab (B_llist_set_b_llist_fun_a_llist_b_llist_prod_set_a_llist_b_llist_prod_fun_fun$ B_llist_set_b_llist_fun$ )A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ )
(declare-fun fun_app$ac (B_a_b_prod_prod_llist_bool_fun$ B_a_b_prod_prod_llist$ )Bool )
(declare-fun fun_app$ad (B_a_b_prod_prod_llist_b_a_b_prod_prod_llist_bool_fun_fun$ B_a_b_prod_prod_llist$ )B_a_b_prod_prod_llist_bool_fun$ )
(declare-fun fun_app$ae (B_b_prod_llist_bool_fun$ B_b_prod_llist$ )Bool )
(declare-fun fun_app$af (B_b_prod_llist_b_b_prod_llist_bool_fun_fun$ B_b_prod_llist$ )B_b_prod_llist_bool_fun$ )
(declare-fun fun_app$ag (B_a_prod_llist_bool_fun$ B_a_prod_llist$ )Bool )
(declare-fun fun_app$ah (B_a_prod_llist_b_a_prod_llist_bool_fun_fun$ B_a_prod_llist$ )B_a_prod_llist_bool_fun$ )
(declare-fun fun_app$ai (A_a_b_prod_prod_llist_bool_fun$ A_a_b_prod_prod_llist$ )Bool )
(declare-fun fun_app$aj (A_a_b_prod_prod_llist_a_a_b_prod_prod_llist_bool_fun_fun$ A_a_b_prod_prod_llist$ )A_a_b_prod_prod_llist_bool_fun$ )
(declare-fun fun_app$ak (A_a_prod_llist_bool_fun$ A_a_prod_llist$ )Bool )
(declare-fun fun_app$al (A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ A_a_prod_llist$ )A_a_prod_llist_bool_fun$ )
(declare-fun fun_app$am (A_llist_b_llist_prod_a_b_prod_llist_fun$ A_llist_b_llist_prod$ )A_b_prod_llist$ )
(declare-fun fun_app$an (B_llist_a_b_prod_llist_prod_b_a_b_prod_prod_llist_fun$ B_llist_a_b_prod_llist_prod$ )B_a_b_prod_prod_llist$ )
(declare-fun fun_app$ao (B_llist_b_llist_prod_b_b_prod_llist_fun$ B_llist_b_llist_prod$ )B_b_prod_llist$ )
(declare-fun fun_app$ap (B_llist_a_llist_prod_b_a_prod_llist_fun$ B_llist_a_llist_prod$ )B_a_prod_llist$ )
(declare-fun fun_app$aq (A_llist_a_b_prod_llist_prod_a_a_b_prod_prod_llist_fun$ A_llist_a_b_prod_llist_prod$ )A_a_b_prod_prod_llist$ )
(declare-fun fun_app$ar (A_llist_a_llist_prod_a_a_prod_llist_fun$ A_llist_a_llist_prod$ )A_a_prod_llist$ )
(declare-fun fun_app$as (A_a_b_prod_prod_llist_set_a_a_b_prod_prod_llist_fun$ A_a_b_prod_prod_llist_set$ )A_a_b_prod_prod_llist$ )
(declare-fun fun_app$at (A_a_prod_llist_set_a_a_prod_llist_fun$ A_a_prod_llist_set$ )A_a_prod_llist$ )
(declare-fun fun_app$au (A_llist_set_a_llist_fun$ A_llist_set$ )A_llist$ )
(declare-fun fun_app$av (B_llist_set_b_llist_fun$ B_llist_set$ )B_llist$ )
(declare-fun fun_app$aw (A_b_prod_llist_set_a_b_prod_llist_fun$ A_b_prod_llist_set$ )A_b_prod_llist$ )
(declare-fun monotone$a (A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_llist_b_llist_prod_a_b_prod_llist_fun$ )Bool )
(declare-fun monotone$b (B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ B_a_prod_llist_b_a_prod_llist_bool_fun_fun$ B_llist_a_llist_prod_b_a_prod_llist_fun$ )Bool )
(declare-fun monotone$c (B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ B_b_prod_llist_b_b_prod_llist_bool_fun_fun$ B_llist_b_llist_prod_b_b_prod_llist_fun$ )Bool )
(declare-fun monotone$d (A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ A_a_b_prod_prod_llist_a_a_b_prod_prod_llist_bool_fun_fun$ A_llist_a_b_prod_llist_prod_a_a_b_prod_prod_llist_fun$ )Bool )
(declare-fun monotone$e (B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ B_a_b_prod_prod_llist_b_a_b_prod_prod_llist_bool_fun_fun$ B_llist_a_b_prod_llist_prod_b_a_b_prod_prod_llist_fun$ )Bool )
(declare-fun monotone$f (A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_bool_fun_fun$ A_b_prod_a_prod_llist_a_b_prod_a_prod_llist_bool_fun_fun$ A_b_prod_llist_a_llist_prod_a_b_prod_a_prod_llist_fun$ )Bool )
(declare-fun monotone$g (A_b_prod_llist_b_llist_prod_a_b_prod_llist_b_llist_prod_bool_fun_fun$ A_b_prod_b_prod_llist_a_b_prod_b_prod_llist_bool_fun_fun$ A_b_prod_llist_b_llist_prod_a_b_prod_b_prod_llist_fun$ )Bool )
(declare-fun monotone$h (A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ A_b_prod_a_b_prod_prod_llist_a_b_prod_a_b_prod_prod_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_a_b_prod_prod_llist_fun$ )Bool )
(declare-fun monotone$i (A_llist_b_b_prod_llist_prod_a_llist_b_b_prod_llist_prod_bool_fun_fun$ A_b_b_prod_prod_llist_a_b_b_prod_prod_llist_bool_fun_fun$ A_llist_b_b_prod_llist_prod_a_b_b_prod_prod_llist_fun$ )Bool )
(declare-fun prod_lub$a (B_llist_set_b_llist_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ )B_llist_a_b_prod_llist_prod_set_b_llist_a_b_prod_llist_prod_fun$ )
(declare-fun prod_lub$b (B_llist_set_b_llist_fun$ B_llist_set_b_llist_fun$ )B_llist_b_llist_prod_set_b_llist_b_llist_prod_fun$ )
(declare-fun prod_lub$c (B_llist_set_b_llist_fun$ A_llist_set_a_llist_fun$ )B_llist_a_llist_prod_set_b_llist_a_llist_prod_fun$ )
(declare-fun prod_lub$d (A_llist_set_a_llist_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ )A_llist_a_b_prod_llist_prod_set_a_llist_a_b_prod_llist_prod_fun$ )
(declare-fun prod_lub$e (A_llist_set_a_llist_fun$ A_llist_set_a_llist_fun$ )A_llist_a_llist_prod_set_a_llist_a_llist_prod_fun$ )
(declare-fun rel_prod$a (A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_a_llist_prod_a_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$b (B_llist_b_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )B_llist_a_llist_prod_b_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$c (B_llist_b_llist_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ )B_llist_b_llist_prod_b_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$d (A_llist_a_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )A_llist_a_b_prod_llist_prod_a_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$e (B_llist_b_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )B_llist_a_b_prod_llist_prod_b_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$f (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_b_prod_llist_a_llist_prod_a_b_prod_llist_a_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$g (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ B_llist_b_llist_bool_fun_fun$ )A_b_prod_llist_b_llist_prod_a_b_prod_llist_b_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$h (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_llist_a_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun rel_prod$i (A_llist_a_llist_bool_fun_fun$ B_b_prod_llist_b_b_prod_llist_bool_fun_fun$ )A_llist_b_b_prod_llist_prod_a_llist_b_b_prod_llist_prod_bool_fun_fun$ )
(declare-fun case_prod$a (A_llist_a_llist_a_a_prod_llist_fun_fun$ )A_llist_a_llist_prod_a_a_prod_llist_fun$ )
(declare-fun case_prod$b (B_llist_a_llist_b_a_prod_llist_fun_fun$ )B_llist_a_llist_prod_b_a_prod_llist_fun$ )
(declare-fun case_prod$c (B_llist_b_llist_b_b_prod_llist_fun_fun$ )B_llist_b_llist_prod_b_b_prod_llist_fun$ )
(declare-fun case_prod$d (A_llist_a_b_prod_llist_a_a_b_prod_prod_llist_fun_fun$ )A_llist_a_b_prod_llist_prod_a_a_b_prod_prod_llist_fun$ )
(declare-fun case_prod$e (B_llist_a_b_prod_llist_b_a_b_prod_prod_llist_fun_fun$ )B_llist_a_b_prod_llist_prod_b_a_b_prod_prod_llist_fun$ )
(declare-fun case_prod$f (A_b_prod_llist_a_llist_a_b_prod_a_prod_llist_fun_fun$ )A_b_prod_llist_a_llist_prod_a_b_prod_a_prod_llist_fun$ )
(declare-fun case_prod$g (A_b_prod_llist_b_llist_a_b_prod_b_prod_llist_fun_fun$ )A_b_prod_llist_b_llist_prod_a_b_prod_b_prod_llist_fun$ )
(declare-fun case_prod$h (A_b_prod_llist_a_b_prod_llist_a_b_prod_a_b_prod_prod_llist_fun_fun$ )A_b_prod_llist_a_b_prod_llist_prod_a_b_prod_a_b_prod_prod_llist_fun$ )
(declare-fun case_prod$i (A_llist_b_b_prod_llist_a_b_b_prod_prod_llist_fun_fun$ )A_llist_b_b_prod_llist_prod_a_b_b_prod_prod_llist_fun$ )
(declare-fun finite_lprefix$ ()B_a_b_prod_prod_llist_b_a_b_prod_prod_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$a ()B_b_prod_llist_b_b_prod_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$b ()B_a_prod_llist_b_a_prod_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$c ()A_a_b_prod_prod_llist_a_a_b_prod_prod_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$d ()A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$e ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$f ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun finite_lprefix$g ()A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )
(declare-fun partial_function_definitions$ (B_a_b_prod_prod_llist_b_a_b_prod_prod_llist_bool_fun_fun$ B_a_b_prod_prod_llist_set_b_a_b_prod_prod_llist_fun$ )Bool )
(declare-fun partial_function_definitions$a (B_b_prod_llist_b_b_prod_llist_bool_fun_fun$ B_b_prod_llist_set_b_b_prod_llist_fun$ )Bool )
(declare-fun partial_function_definitions$b (B_a_prod_llist_b_a_prod_llist_bool_fun_fun$ B_a_prod_llist_set_b_a_prod_llist_fun$ )Bool )
(declare-fun partial_function_definitions$c (A_a_b_prod_prod_llist_a_a_b_prod_prod_llist_bool_fun_fun$ A_a_b_prod_prod_llist_set_a_a_b_prod_prod_llist_fun$ )Bool )
(declare-fun partial_function_definitions$d (A_a_prod_llist_a_a_prod_llist_bool_fun_fun$ A_a_prod_llist_set_a_a_prod_llist_fun$ )Bool )
(declare-fun partial_function_definitions$e (A_llist_a_llist_bool_fun_fun$ A_llist_set_a_llist_fun$ )Bool )
(declare-fun partial_function_definitions$f (B_llist_b_llist_bool_fun_fun$ B_llist_set_b_llist_fun$ )Bool )
(declare-fun partial_function_definitions$g (A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ A_b_prod_llist_set_a_b_prod_llist_fun$ )Bool )
(assert (! (forall ((?v0 B_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$ uuo$ ?v0 )(snd$k ?v0 )):pattern ((fun_app$ uuo$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ ))(! (= (fun_app$a uup$ ?v0 )(snd$i ?v0 )):pattern ((fun_app$a uup$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 B_llist_a_llist_prod$ ))(! (= (fun_app$b uuq$ ?v0 )(snd$h ?v0 )):pattern ((fun_app$b uuq$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$c uur$ ?v0 )(snd$j ?v0 )):pattern ((fun_app$c uur$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ ))(! (= (fun_app$d uut$ ?v0 )(snd$ ?v0 )):pattern ((fun_app$d uut$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ ))(! (= (fun_app$e uus$ ?v0 )(snd$g ?v0 )):pattern ((fun_app$e uus$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 B_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$f uui$ ?v0 )(fst$k ?v0 )):pattern ((fun_app$f uui$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ ))(! (= (fun_app$a uuj$ ?v0 )(fst$i ?v0 )):pattern ((fun_app$a uuj$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 B_llist_a_llist_prod$ ))(! (= (fun_app$g uuk$ ?v0 )(fst$h ?v0 )):pattern ((fun_app$g uuk$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$h uul$ ?v0 )(fst$j ?v0 )):pattern ((fun_app$h uul$ ?v0 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ ))(! (= (fun_app$i uun$ ?v0 )(fst$ ?v0 )):pattern ((fun_app$i uun$ ?v0 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ ))(! (= (fun_app$e uum$ ?v0 )(fst$g ?v0 )):pattern ((fun_app$e uum$ ?v0 )))):named a11 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(! (= (fun_app$j (fun_app$k uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uua$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$l (fun_app$m uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uu$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$n (fun_app$o uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uud$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 B_llist_a_b_prod_llist_prod$ )(?v1 B_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$p (fun_app$q uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$p (fun_app$q uub$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ )(?v1 B_llist_b_llist_prod$ ))(! (= (fun_app$r (fun_app$s uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$r (fun_app$s uuc$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 B_llist_a_llist_prod$ )(?v1 B_llist_a_llist_prod$ ))(! (= (fun_app$t (fun_app$u uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$t (fun_app$u uue$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod$ )(?v1 A_llist_a_b_prod_llist_prod$ ))(! (= (fun_app$v (fun_app$w uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$v (fun_app$w uuf$ ?v0 )?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ )(?v1 A_llist_b_llist_prod$ ))(! (= (fun_app$x (fun_app$y uuh$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$x (fun_app$y uuh$ ?v0 )?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ ))(! (= (fun_app$z (fun_app$aa uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$z (fun_app$aa uug$ ?v0 )?v1 )))):named a20 ))
(assert (! (not (mcont$ (fun_app$ab (prod_lub$ lSup$ )lSup$a )(rel_prod$ lprefix$ lprefix$a )lSup$b lprefix$b (case_prod$ lzip$ ))):named a21 ))
(assert (! (forall ((?v0 B_a_b_prod_prod_llist$ ))(fun_app$ac (fun_app$ad lprefix$c ?v0 )?v0 )):named a22 ))
(assert (! (forall ((?v0 B_b_prod_llist$ ))(fun_app$ae (fun_app$af lprefix$d ?v0 )?v0 )):named a23 ))
(assert (! (forall ((?v0 B_a_prod_llist$ ))(fun_app$ag (fun_app$ah lprefix$e ?v0 )?v0 )):named a24 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ ))(fun_app$ai (fun_app$aj lprefix$f ?v0 )?v0 )):named a25 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(fun_app$ak (fun_app$al lprefix$g ?v0 )?v0 )):named a26 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$n (fun_app$o lprefix$ ?v0 )?v0 )):named a27 ))
(assert (! (forall ((?v0 B_llist$ ))(fun_app$l (fun_app$m lprefix$a ?v0 )?v0 )):named a28 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$j (fun_app$k lprefix$b ?v0 )?v0 )):named a29 ))
(assert (! (forall ((?v0 B_a_b_prod_prod_llist$ ))(fun_app$ac (fun_app$ad lprefix$c ?v0 )?v0 )):named a30 ))
(assert (! (forall ((?v0 B_b_prod_llist$ ))(fun_app$ae (fun_app$af lprefix$d ?v0 )?v0 )):named a31 ))
(assert (! (forall ((?v0 B_a_prod_llist$ ))(fun_app$ag (fun_app$ah lprefix$e ?v0 )?v0 )):named a32 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ ))(fun_app$ai (fun_app$aj lprefix$f ?v0 )?v0 )):named a33 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(fun_app$ak (fun_app$al lprefix$g ?v0 )?v0 )):named a34 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$n (fun_app$o lprefix$ ?v0 )?v0 )):named a35 ))
(assert (! (forall ((?v0 B_llist$ ))(fun_app$l (fun_app$m lprefix$a ?v0 )?v0 )):named a36 ))
(assert (! (forall ((?v0 A_b_prod_llist$ ))(fun_app$j (fun_app$k lprefix$b ?v0 )?v0 )):named a37 ))
(assert (! (forall ((?v0 B_a_b_prod_prod_llist$ )(?v1 B_a_b_prod_prod_llist$ ))(=> (and (fun_app$ac (fun_app$ad lprefix$c ?v0 )?v1 )(fun_app$ac (fun_app$ad lprefix$c ?v1 )?v0 ))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_llist$ ))(=> (and (fun_app$ae (fun_app$af lprefix$d ?v0 )?v1 )(fun_app$ae (fun_app$af lprefix$d ?v1 )?v0 ))(= ?v0 ?v1 ))):named a39 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_llist$ ))(=> (and (fun_app$ag (fun_app$ah lprefix$e ?v0 )?v1 )(fun_app$ag (fun_app$ah lprefix$e ?v1 )?v0 ))(= ?v0 ?v1 ))):named a40 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_llist$ ))(=> (and (fun_app$ai (fun_app$aj lprefix$f ?v0 )?v1 )(fun_app$ai (fun_app$aj lprefix$f ?v1 )?v0 ))(= ?v0 ?v1 ))):named a41 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (fun_app$ak (fun_app$al lprefix$g ?v0 )?v1 )(fun_app$ak (fun_app$al lprefix$g ?v1 )?v0 ))(= ?v0 ?v1 ))):named a42 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$n (fun_app$o lprefix$ ?v0 )?v1 )(fun_app$n (fun_app$o lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a43 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (fun_app$l (fun_app$m lprefix$a ?v0 )?v1 )(fun_app$l (fun_app$m lprefix$a ?v1 )?v0 ))(= ?v0 ?v1 ))):named a44 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (fun_app$j (fun_app$k lprefix$b ?v0 )?v1 )(fun_app$j (fun_app$k lprefix$b ?v1 )?v0 ))(= ?v0 ?v1 ))):named a45 ))
(assert (! (forall ((?v0 B_a_b_prod_prod_llist$ )(?v1 B_a_b_prod_prod_llist$ ))(=> (and (fun_app$ac (fun_app$ad lprefix$c ?v0 )?v1 )(fun_app$ac (fun_app$ad lprefix$c ?v1 )?v0 ))(= ?v0 ?v1 ))):named a46 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_llist$ ))(=> (and (fun_app$ae (fun_app$af lprefix$d ?v0 )?v1 )(fun_app$ae (fun_app$af lprefix$d ?v1 )?v0 ))(= ?v0 ?v1 ))):named a47 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_llist$ ))(=> (and (fun_app$ag (fun_app$ah lprefix$e ?v0 )?v1 )(fun_app$ag (fun_app$ah lprefix$e ?v1 )?v0 ))(= ?v0 ?v1 ))):named a48 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_llist$ ))(=> (and (fun_app$ai (fun_app$aj lprefix$f ?v0 )?v1 )(fun_app$ai (fun_app$aj lprefix$f ?v1 )?v0 ))(= ?v0 ?v1 ))):named a49 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (fun_app$ak (fun_app$al lprefix$g ?v0 )?v1 )(fun_app$ak (fun_app$al lprefix$g ?v1 )?v0 ))(= ?v0 ?v1 ))):named a50 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$n (fun_app$o lprefix$ ?v0 )?v1 )(fun_app$n (fun_app$o lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a51 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (and (fun_app$l (fun_app$m lprefix$a ?v0 )?v1 )(fun_app$l (fun_app$m lprefix$a ?v1 )?v0 ))(= ?v0 ?v1 ))):named a52 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ ))(=> (and (fun_app$j (fun_app$k lprefix$b ?v0 )?v1 )(fun_app$j (fun_app$k lprefix$b ?v1 )?v0 ))(= ?v0 ?v1 ))):named a53 ))
(assert (! (forall ((?v0 B_a_b_prod_prod_llist$ )(?v1 B_a_b_prod_prod_llist$ )(?v2 B_a_b_prod_prod_llist$ ))(=> (and (fun_app$ac (fun_app$ad lprefix$c ?v0 )?v1 )(fun_app$ac (fun_app$ad lprefix$c ?v2 )?v1 ))(or (fun_app$ac (fun_app$ad lprefix$c ?v0 )?v2 )(fun_app$ac (fun_app$ad lprefix$c ?v2 )?v0 )))):named a54 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod_llist$ ))(=> (and (fun_app$ae (fun_app$af lprefix$d ?v0 )?v1 )(fun_app$ae (fun_app$af lprefix$d ?v2 )?v1 ))(or (fun_app$ae (fun_app$af lprefix$d ?v0 )?v2 )(fun_app$ae (fun_app$af lprefix$d ?v2 )?v0 )))):named a55 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod_llist$ ))(=> (and (fun_app$ag (fun_app$ah lprefix$e ?v0 )?v1 )(fun_app$ag (fun_app$ah lprefix$e ?v2 )?v1 ))(or (fun_app$ag (fun_app$ah lprefix$e ?v0 )?v2 )(fun_app$ag (fun_app$ah lprefix$e ?v2 )?v0 )))):named a56 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod_llist$ ))(=> (and (fun_app$ai (fun_app$aj lprefix$f ?v0 )?v1 )(fun_app$ai (fun_app$aj lprefix$f ?v2 )?v1 ))(or (fun_app$ai (fun_app$aj lprefix$f ?v0 )?v2 )(fun_app$ai (fun_app$aj lprefix$f ?v2 )?v0 )))):named a57 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod_llist$ ))(=> (and (fun_app$ak (fun_app$al lprefix$g ?v0 )?v1 )(fun_app$ak (fun_app$al lprefix$g ?v2 )?v1 ))(or (fun_app$ak (fun_app$al lprefix$g ?v0 )?v2 )(fun_app$ak (fun_app$al lprefix$g ?v2 )?v0 )))):named a58 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$n (fun_app$o lprefix$ ?v0 )?v1 )(fun_app$n (fun_app$o lprefix$ ?v2 )?v1 ))(or (fun_app$n (fun_app$o lprefix$ ?v0 )?v2 )(fun_app$n (fun_app$o lprefix$ ?v2 )?v0 )))):named a59 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$l (fun_app$m lprefix$a ?v0 )?v1 )(fun_app$l (fun_app$m lprefix$a ?v2 )?v1 ))(or (fun_app$l (fun_app$m lprefix$a ?v0 )?v2 )(fun_app$l (fun_app$m lprefix$a ?v2 )?v0 )))):named a60 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$j (fun_app$k lprefix$b ?v0 )?v1 )(fun_app$j (fun_app$k lprefix$b ?v2 )?v1 ))(or (fun_app$j (fun_app$k lprefix$b ?v0 )?v2 )(fun_app$j (fun_app$k lprefix$b ?v2 )?v0 )))):named a61 ))
(assert (! (forall ((?v0 B_a_b_prod_prod_llist$ )(?v1 B_a_b_prod_prod_llist$ )(?v2 B_a_b_prod_prod_llist$ ))(=> (and (fun_app$ac (fun_app$ad lprefix$c ?v0 )?v1 )(fun_app$ac (fun_app$ad lprefix$c ?v1 )?v2 ))(fun_app$ac (fun_app$ad lprefix$c ?v0 )?v2 ))):named a62 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod_llist$ ))(=> (and (fun_app$ae (fun_app$af lprefix$d ?v0 )?v1 )(fun_app$ae (fun_app$af lprefix$d ?v1 )?v2 ))(fun_app$ae (fun_app$af lprefix$d ?v0 )?v2 ))):named a63 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod_llist$ ))(=> (and (fun_app$ag (fun_app$ah lprefix$e ?v0 )?v1 )(fun_app$ag (fun_app$ah lprefix$e ?v1 )?v2 ))(fun_app$ag (fun_app$ah lprefix$e ?v0 )?v2 ))):named a64 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod_llist$ ))(=> (and (fun_app$ai (fun_app$aj lprefix$f ?v0 )?v1 )(fun_app$ai (fun_app$aj lprefix$f ?v1 )?v2 ))(fun_app$ai (fun_app$aj lprefix$f ?v0 )?v2 ))):named a65 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod_llist$ ))(=> (and (fun_app$ak (fun_app$al lprefix$g ?v0 )?v1 )(fun_app$ak (fun_app$al lprefix$g ?v1 )?v2 ))(fun_app$ak (fun_app$al lprefix$g ?v0 )?v2 ))):named a66 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$n (fun_app$o lprefix$ ?v0 )?v1 )(fun_app$n (fun_app$o lprefix$ ?v1 )?v2 ))(fun_app$n (fun_app$o lprefix$ ?v0 )?v2 ))):named a67 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$l (fun_app$m lprefix$a ?v0 )?v1 )(fun_app$l (fun_app$m lprefix$a ?v1 )?v2 ))(fun_app$l (fun_app$m lprefix$a ?v0 )?v2 ))):named a68 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$j (fun_app$k lprefix$b ?v0 )?v1 )(fun_app$j (fun_app$k lprefix$b ?v1 )?v2 ))(fun_app$j (fun_app$k lprefix$b ?v0 )?v2 ))):named a69 ))
(assert (! (forall ((?v0 B_a_b_prod_prod_llist$ )(?v1 B_a_b_prod_prod_llist$ )(?v2 B_a_b_prod_prod_llist$ ))(=> (and (fun_app$ac (fun_app$ad lprefix$c ?v0 )?v1 )(fun_app$ac (fun_app$ad lprefix$c ?v1 )?v2 ))(fun_app$ac (fun_app$ad lprefix$c ?v0 )?v2 ))):named a70 ))
(assert (! (forall ((?v0 B_b_prod_llist$ )(?v1 B_b_prod_llist$ )(?v2 B_b_prod_llist$ ))(=> (and (fun_app$ae (fun_app$af lprefix$d ?v0 )?v1 )(fun_app$ae (fun_app$af lprefix$d ?v1 )?v2 ))(fun_app$ae (fun_app$af lprefix$d ?v0 )?v2 ))):named a71 ))
(assert (! (forall ((?v0 B_a_prod_llist$ )(?v1 B_a_prod_llist$ )(?v2 B_a_prod_llist$ ))(=> (and (fun_app$ag (fun_app$ah lprefix$e ?v0 )?v1 )(fun_app$ag (fun_app$ah lprefix$e ?v1 )?v2 ))(fun_app$ag (fun_app$ah lprefix$e ?v0 )?v2 ))):named a72 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist$ )(?v1 A_a_b_prod_prod_llist$ )(?v2 A_a_b_prod_prod_llist$ ))(=> (and (fun_app$ai (fun_app$aj lprefix$f ?v0 )?v1 )(fun_app$ai (fun_app$aj lprefix$f ?v1 )?v2 ))(fun_app$ai (fun_app$aj lprefix$f ?v0 )?v2 ))):named a73 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ )(?v2 A_a_prod_llist$ ))(=> (and (fun_app$ak (fun_app$al lprefix$g ?v0 )?v1 )(fun_app$ak (fun_app$al lprefix$g ?v1 )?v2 ))(fun_app$ak (fun_app$al lprefix$g ?v0 )?v2 ))):named a74 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$n (fun_app$o lprefix$ ?v0 )?v1 )(fun_app$n (fun_app$o lprefix$ ?v1 )?v2 ))(fun_app$n (fun_app$o lprefix$ ?v0 )?v2 ))):named a75 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (and (fun_app$l (fun_app$m lprefix$a ?v0 )?v1 )(fun_app$l (fun_app$m lprefix$a ?v1 )?v2 ))(fun_app$l (fun_app$m lprefix$a ?v0 )?v2 ))):named a76 ))
(assert (! (forall ((?v0 A_b_prod_llist$ )(?v1 A_b_prod_llist$ )(?v2 A_b_prod_llist$ ))(=> (and (fun_app$j (fun_app$k lprefix$b ?v0 )?v1 )(fun_app$j (fun_app$k lprefix$b ?v1 )?v2 ))(fun_app$j (fun_app$k lprefix$b ?v0 )?v2 ))):named a77 ))
(assert (! (monotone$ (rel_prod$a lprefix$ lprefix$ )lprefix$g (case_prod$a lzip$a )):named a78 ))
(assert (! (monotone$a (rel_prod$ lprefix$ lprefix$a )lprefix$b (case_prod$ lzip$ )):named a79 ))
(assert (! (monotone$b (rel_prod$b lprefix$a lprefix$ )lprefix$e (case_prod$b lzip$b )):named a80 ))
(assert (! (monotone$c (rel_prod$c lprefix$a lprefix$a )lprefix$d (case_prod$c lzip$c )):named a81 ))
(assert (! (monotone$d (rel_prod$d lprefix$ lprefix$b )lprefix$f (case_prod$d lzip$d )):named a82 ))
(assert (! (monotone$e (rel_prod$e lprefix$a lprefix$b )lprefix$c (case_prod$e lzip$e )):named a83 ))
(assert (! (monotone$f (rel_prod$f lprefix$b lprefix$ )lprefix$h (case_prod$f lzip$f )):named a84 ))
(assert (! (monotone$g (rel_prod$g lprefix$b lprefix$a )lprefix$i (case_prod$g lzip$g )):named a85 ))
(assert (! (monotone$h (rel_prod$h lprefix$b lprefix$b )lprefix$j (case_prod$h lzip$h )):named a86 ))
(assert (! (monotone$i (rel_prod$i lprefix$ lprefix$d )lprefix$k (case_prod$i lzip$i )):named a87 ))
(assert (! (= (rel_prod$e uu$ uua$ )uub$ ):named a88 ))
(assert (! (= (rel_prod$c uu$ uu$ )uuc$ ):named a89 ))
(assert (! (= (rel_prod$b uu$ uud$ )uue$ ):named a90 ))
(assert (! (= (rel_prod$d uud$ uua$ )uuf$ ):named a91 ))
(assert (! (= (rel_prod$a uud$ uud$ )uug$ ):named a92 ))
(assert (! (= (rel_prod$ uud$ uu$ )uuh$ ):named a93 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ )(?v1 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v2 A_llist_set_a_llist_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_llist_fun$ )(?v5 A_llist_b_llist_prod$ )(?v6 A_llist_b_llist_prod$ ))(=> (and (mcont$a ?v0 ?v1 ?v2 ?v3 ?v4 )(fun_app$x (fun_app$y ?v1 ?v5 )?v6 ))(fun_app$n (fun_app$o ?v3 (fun_app$i ?v4 ?v5 ))(fun_app$i ?v4 ?v6 )))):named a94 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ )(?v1 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v2 B_llist_set_b_llist_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_b_llist_fun$ )(?v5 A_llist_b_llist_prod$ )(?v6 A_llist_b_llist_prod$ ))(=> (and (mcont$b ?v0 ?v1 ?v2 ?v3 ?v4 )(fun_app$x (fun_app$y ?v1 ?v5 )?v6 ))(fun_app$l (fun_app$m ?v3 (fun_app$d ?v4 ?v5 ))(fun_app$d ?v4 ?v6 )))):named a95 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod_set_a_llist_b_llist_prod_fun$ )(?v1 A_llist_b_llist_prod_a_llist_b_llist_prod_bool_fun_fun$ )(?v2 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ )(?v4 A_llist_b_llist_prod_a_b_prod_llist_fun$ )(?v5 A_llist_b_llist_prod$ )(?v6 A_llist_b_llist_prod$ ))(=> (and (mcont$ ?v0 ?v1 ?v2 ?v3 ?v4 )(fun_app$x (fun_app$y ?v1 ?v5 )?v6 ))(fun_app$j (fun_app$k ?v3 (fun_app$am ?v4 ?v5 ))(fun_app$am ?v4 ?v6 )))):named a96 ))
(assert (! (forall ((?v0 B_llist_a_b_prod_llist_prod$ )(?v1 B_llist_a_b_prod_llist_prod$ )(?v2 B_llist_a_b_prod_llist_b_a_b_prod_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$an (case_prod$e ?v2 )?v0 )(fun_app$an (case_prod$e ?v2 )?v1 )))):named a97 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ )(?v1 B_llist_b_llist_prod$ )(?v2 B_llist_b_llist_b_b_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ao (case_prod$c ?v2 )?v0 )(fun_app$ao (case_prod$c ?v2 )?v1 )))):named a98 ))
(assert (! (forall ((?v0 B_llist_a_llist_prod$ )(?v1 B_llist_a_llist_prod$ )(?v2 B_llist_a_llist_b_a_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ap (case_prod$b ?v2 )?v0 )(fun_app$ap (case_prod$b ?v2 )?v1 )))):named a99 ))
(assert (! (forall ((?v0 A_llist_a_b_prod_llist_prod$ )(?v1 A_llist_a_b_prod_llist_prod$ )(?v2 A_llist_a_b_prod_llist_a_a_b_prod_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$aq (case_prod$d ?v2 )?v0 )(fun_app$aq (case_prod$d ?v2 )?v1 )))):named a100 ))
(assert (! (forall ((?v0 A_llist_a_llist_prod$ )(?v1 A_llist_a_llist_prod$ )(?v2 A_llist_a_llist_a_a_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ar (case_prod$a ?v2 )?v0 )(fun_app$ar (case_prod$a ?v2 )?v1 )))):named a101 ))
(assert (! (forall ((?v0 A_llist_b_llist_prod$ )(?v1 A_llist_b_llist_prod$ )(?v2 A_llist_b_llist_a_b_prod_llist_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$am (case_prod$ ?v2 )?v0 )(fun_app$am (case_prod$ ?v2 )?v1 )))):named a102 ))
(assert (! (= finite_lprefix$ lprefix$c ):named a103 ))
(assert (! (= finite_lprefix$a lprefix$d ):named a104 ))
(assert (! (= finite_lprefix$b lprefix$e ):named a105 ))
(assert (! (= finite_lprefix$c lprefix$f ):named a106 ))
(assert (! (= finite_lprefix$d lprefix$g ):named a107 ))
(assert (! (= finite_lprefix$e lprefix$ ):named a108 ))
(assert (! (= finite_lprefix$f lprefix$a ):named a109 ))
(assert (! (= finite_lprefix$g lprefix$b ):named a110 ))
(assert (! (partial_function_definitions$ lprefix$c lSup$c ):named a111 ))
(assert (! (partial_function_definitions$a lprefix$d lSup$d ):named a112 ))
(assert (! (partial_function_definitions$b lprefix$e lSup$e ):named a113 ))
(assert (! (partial_function_definitions$c lprefix$f lSup$f ):named a114 ))
(assert (! (partial_function_definitions$d lprefix$g lSup$g ):named a115 ))
(assert (! (partial_function_definitions$e lprefix$ lSup$ ):named a116 ))
(assert (! (partial_function_definitions$f lprefix$a lSup$a ):named a117 ))
(assert (! (partial_function_definitions$g lprefix$b lSup$b ):named a118 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v2 B_llist_b_llist_bool_fun_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ ))(mcont$c (prod_lub$a ?v0 ?v1 )(rel_prod$e ?v2 ?v3 )?v0 ?v2 uui$ )):named a119 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 B_llist_set_b_llist_fun$ )(?v2 B_llist_b_llist_bool_fun_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ ))(mcont$d (prod_lub$b ?v0 ?v1 )(rel_prod$c ?v2 ?v3 )?v0 ?v2 uuj$ )):named a120 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 A_llist_set_a_llist_fun$ )(?v2 B_llist_b_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ ))(mcont$e (prod_lub$c ?v0 ?v1 )(rel_prod$b ?v2 ?v3 )?v0 ?v2 uuk$ )):named a121 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ ))(mcont$f (prod_lub$d ?v0 ?v1 )(rel_prod$d ?v2 ?v3 )?v0 ?v2 uul$ )):named a122 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_set_a_llist_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ ))(mcont$g (prod_lub$e ?v0 ?v1 )(rel_prod$a ?v2 ?v3 )?v0 ?v2 uum$ )):named a123 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 B_llist_set_b_llist_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ ))(mcont$a (fun_app$ab (prod_lub$ ?v0 )?v1 )(rel_prod$ ?v2 ?v3 )?v0 ?v2 uun$ )):named a124 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v2 B_llist_b_llist_bool_fun_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ ))(mcont$h (prod_lub$a ?v0 ?v1 )(rel_prod$e ?v2 ?v3 )?v1 ?v3 uuo$ )):named a125 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 B_llist_set_b_llist_fun$ )(?v2 B_llist_b_llist_bool_fun_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ ))(mcont$d (prod_lub$b ?v0 ?v1 )(rel_prod$c ?v2 ?v3 )?v1 ?v3 uup$ )):named a126 ))
(assert (! (forall ((?v0 B_llist_set_b_llist_fun$ )(?v1 A_llist_set_a_llist_fun$ )(?v2 B_llist_b_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ ))(mcont$i (prod_lub$c ?v0 ?v1 )(rel_prod$b ?v2 ?v3 )?v1 ?v3 uuq$ )):named a127 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_b_prod_llist_set_a_b_prod_llist_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_b_prod_llist_a_b_prod_llist_bool_fun_fun$ ))(mcont$j (prod_lub$d ?v0 ?v1 )(rel_prod$d ?v2 ?v3 )?v1 ?v3 uur$ )):named a128 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_set_a_llist_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ ))(mcont$g (prod_lub$e ?v0 ?v1 )(rel_prod$a ?v2 ?v3 )?v1 ?v3 uus$ )):named a129 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 B_llist_set_b_llist_fun$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 B_llist_b_llist_bool_fun_fun$ ))(mcont$b (fun_app$ab (prod_lub$ ?v0 )?v1 )(rel_prod$ ?v2 ?v3 )?v1 ?v3 uut$ )):named a130 ))
(assert (! (forall ((?v0 A_a_b_prod_prod_llist_set$ )(?v1 A_a_b_prod_prod_llist$ ))(=> (and (chain$ lprefix$f ?v0 )(forall ((?v2 A_a_b_prod_prod_llist$ ))(=> (member$ ?v2 ?v0 )(fun_app$ai (fun_app$aj lprefix$f ?v2 )?v1 ))))(fun_app$ai (fun_app$aj lprefix$f (fun_app$as lSup$f ?v0 ))?v1 ))):named a131 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ )(?v1 A_a_prod_llist$ ))(=> (and (chain$a lprefix$g ?v0 )(forall ((?v2 A_a_prod_llist$ ))(=> (member$a ?v2 ?v0 )(fun_app$ak (fun_app$al lprefix$g ?v2 )?v1 ))))(fun_app$ak (fun_app$al lprefix$g (fun_app$at lSup$g ?v0 ))?v1 ))):named a132 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist$ ))(=> (and (chain$b lprefix$ ?v0 )(forall ((?v2 A_llist$ ))(=> (member$b ?v2 ?v0 )(fun_app$n (fun_app$o lprefix$ ?v2 )?v1 ))))(fun_app$n (fun_app$o lprefix$ (fun_app$au lSup$ ?v0 ))?v1 ))):named a133 ))
(assert (! (forall ((?v0 B_llist_set$ )(?v1 B_llist$ ))(=> (and (chain$c lprefix$a ?v0 )(forall ((?v2 B_llist$ ))(=> (member$c ?v2 ?v0 )(fun_app$l (fun_app$m lprefix$a ?v2 )?v1 ))))(fun_app$l (fun_app$m lprefix$a (fun_app$av lSup$a ?v0 ))?v1 ))):named a134 ))
(assert (! (forall ((?v0 A_b_prod_llist_set$ )(?v1 A_b_prod_llist$ ))(=> (and (chain$d lprefix$b ?v0 )(forall ((?v2 A_b_prod_llist$ ))(=> (member$d ?v2 ?v0 )(fun_app$j (fun_app$k lprefix$b ?v2 )?v1 ))))(fun_app$j (fun_app$k lprefix$b (fun_app$aw lSup$b ?v0 ))?v1 ))):named a135 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist$ ))(=> (and (chain$b lprefix$ ?v0 )(forall ((?v2 A_llist$ ))(=> (member$b ?v2 ?v0 )(fun_app$n (fun_app$o lprefix$ ?v2 )?v1 ))))(fun_app$n (fun_app$o lprefix$ (fun_app$au lSup$ ?v0 ))?v1 ))):named a136 ))
(assert (! (forall ((?v0 B_llist_set$ )(?v1 B_llist$ ))(=> (and (chain$c lprefix$a ?v0 )(forall ((?v2 B_llist$ ))(=> (member$c ?v2 ?v0 )(fun_app$l (fun_app$m lprefix$a ?v2 )?v1 ))))(fun_app$l (fun_app$m lprefix$a (fun_app$av lSup$a ?v0 ))?v1 ))):named a137 ))
(assert (! (forall ((?v0 A_b_prod_llist_set$ )(?v1 A_b_prod_llist$ ))(=> (and (chain$d lprefix$b ?v0 )(forall ((?v2 A_b_prod_llist$ ))(=> (member$d ?v2 ?v0 )(fun_app$j (fun_app$k lprefix$b ?v2 )?v1 ))))(fun_app$j (fun_app$k lprefix$b (fun_app$aw lSup$b ?v0 ))?v1 ))):named a138 ))
(check-sat )
;(get-unsat-core )
