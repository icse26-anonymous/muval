;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_set_bool_fun$ 0 )
(declare-sort B_set_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_llist_a_set_fun$ 0 )
(declare-sort B_llist_b_set_fun$ 0 )
(declare-sort A_set_a_set_bool_fun_fun$ 0 )
(declare-sort A_set_b_set_bool_fun_fun$ 0 )
(declare-sort B_set_a_set_bool_fun_fun$ 0 )
(declare-sort B_set_b_set_bool_fun_fun$ 0 )
(declare-sort A_llist_a_set_fun_bool_fun$ 0 )
(declare-sort B_llist_b_set_fun_bool_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$ 0 )
(declare-sort B_llist_b_set_fun_b_llist_b_set_fun_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(B_llist$ (lNil$a )(lCons$a (lhd$a B$ )(ltl$a B_llist$ )))))
(declare-fun a$ ()A_b_bool_fun_fun$ )
(declare-fun uu$ ()B_b_bool_fun_fun$ )
(declare-fun uua$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uub$ ()A_a_bool_fun_fun$ )
(declare-fun uuc$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uud$ ()B_set_b_set_bool_fun_fun$ )
(declare-fun uue$ ()A_set_a_set_bool_fun_fun$ )
(declare-fun uuf$ ()B_llist_b_set_fun_b_llist_b_set_fun_bool_fun_fun$ )
(declare-fun uug$ ()A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$ )
(declare-fun lset$ ()A_llist_a_set_fun$ )
(declare-fun lset$a ()B_llist_b_set_fun$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun fun_app$ (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun lmember$ (A$ A_llist$ )Bool )
(declare-fun member$a (B$ B_set$ )Bool )
(declare-fun rel_fun$ (A_llist_b_llist_bool_fun_fun$ A_set_b_set_bool_fun_fun$ A_llist_a_set_fun$ B_llist_b_set_fun$ )Bool )
(declare-fun rel_set$ (A_b_bool_fun_fun$ )A_set_b_set_bool_fun_fun$ )
(declare-fun fun_app$a (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$b (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$c (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$d (B_set_bool_fun$ B_set$ )Bool )
(declare-fun fun_app$e (B_set_b_set_bool_fun_fun$ B_set$ )B_set_bool_fun$ )
(declare-fun fun_app$f (A_set_bool_fun$ A_set$ )Bool )
(declare-fun fun_app$g (A_set_a_set_bool_fun_fun$ A_set$ )A_set_bool_fun$ )
(declare-fun fun_app$h (B_llist_b_set_fun_bool_fun$ B_llist_b_set_fun$ )Bool )
(declare-fun fun_app$i (B_llist_b_set_fun_b_llist_b_set_fun_bool_fun_fun$ B_llist_b_set_fun$ )B_llist_b_set_fun_bool_fun$ )
(declare-fun fun_app$j (A_llist_a_set_fun_bool_fun$ A_llist_a_set_fun$ )Bool )
(declare-fun fun_app$k (A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$ A_llist_a_set_fun$ )A_llist_a_set_fun_bool_fun$ )
(declare-fun fun_app$l (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$m (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$n (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$o (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$p (A_llist_a_set_fun$ A_llist$ )A_set$ )
(declare-fun fun_app$q (B_llist_b_set_fun$ B_llist$ )B_set$ )
(declare-fun fun_app$r (B_llist_a_llist_bool_fun_fun$ B_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$s (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$t (A_llist_b_llist_bool_fun_fun$ A_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$u (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$v (B_set_a_set_bool_fun_fun$ B_set$ )A_set_bool_fun$ )
(declare-fun fun_app$w (A_set_b_set_bool_fun_fun$ A_set$ )B_set_bool_fun$ )
(declare-fun lmember$a (B$ B_llist$ )Bool )
(declare-fun rel_fun$a (A_llist_a_llist_bool_fun_fun$ A_set_a_set_bool_fun_fun$ )A_llist_a_set_fun_a_llist_a_set_fun_bool_fun_fun$ )
(declare-fun rel_fun$b (B_llist_a_llist_bool_fun_fun$ B_set_a_set_bool_fun_fun$ B_llist_b_set_fun$ A_llist_a_set_fun$ )Bool )
(declare-fun rel_fun$c (B_llist_b_llist_bool_fun_fun$ B_set_b_set_bool_fun_fun$ )B_llist_b_set_fun_b_llist_b_set_fun_bool_fun_fun$ )
(declare-fun rel_set$a (A_a_bool_fun_fun$ )A_set_a_set_bool_fun_fun$ )
(declare-fun rel_set$b (B_a_bool_fun_fun$ )B_set_a_set_bool_fun_fun$ )
(declare-fun rel_set$c (B_b_bool_fun_fun$ )B_set_b_set_bool_fun_fun$ )
(declare-fun llist_all2$ (A_b_bool_fun_fun$ )A_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$a (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$c (B_a_bool_fun_fun$ )B_llist_a_llist_bool_fun_fun$ )
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$b (fun_app$c uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uuc$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ ))(! (= (fun_app$d (fun_app$e uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uud$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (= (fun_app$f (fun_app$g uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uue$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_llist_b_set_fun$ )(?v1 B_llist_b_set_fun$ ))(! (= (fun_app$h (fun_app$i uuf$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uuf$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_llist_a_set_fun$ )(?v1 A_llist_a_set_fun$ ))(! (= (fun_app$j (fun_app$k uug$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (fun_app$k uug$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$l (fun_app$m uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (fun_app$m uu$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$n (fun_app$o uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (fun_app$o uub$ ?v0 )?v1 )))):named a7 ))
(assert (! (not (rel_fun$ (llist_all2$ a$ )(rel_set$ a$ )lset$ lset$a )):named a8 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v1 )(forall ((?v2 A$ ))(=> (member$ ?v2 (fun_app$p lset$ ?v1 ))(fun_app$n (fun_app$o ?v0 ?v2 )?v2 ))))):named a9 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v1 )(forall ((?v2 B$ ))(=> (member$a ?v2 (fun_app$q lset$a ?v1 ))(fun_app$l (fun_app$m ?v0 ?v2 )?v2 ))))):named a10 ))
(assert (! (= (llist_all2$b uu$ )uua$ ):named a11 ))
(assert (! (= (llist_all2$a uub$ )uuc$ ):named a12 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_bool_fun_fun$ ))(=> (forall ((?v2 A$ ))(=> (member$ ?v2 (fun_app$p lset$ ?v0 ))(fun_app$n (fun_app$o ?v1 ?v2 )?v2 )))(fun_app$b (fun_app$c (llist_all2$a ?v1 )?v0 )?v0 ))):named a13 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_b_bool_fun_fun$ ))(=> (forall ((?v2 B$ ))(=> (member$a ?v2 (fun_app$q lset$a ?v0 ))(fun_app$l (fun_app$m ?v1 ?v2 )?v2 )))(fun_app$ (fun_app$a (llist_all2$b ?v1 )?v0 )?v0 ))):named a14 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (and (member$ ?v4 (fun_app$p lset$ ?v1 ))(and (member$ ?v5 (fun_app$p lset$ ?v2 ))(fun_app$n (fun_app$o ?v0 ?v4 )?v5 )))(fun_app$n (fun_app$o ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$c (llist_all2$a ?v3 )?v1 )?v2 ))):named a15 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$r (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (and (member$a ?v4 (fun_app$q lset$a ?v1 ))(and (member$ ?v5 (fun_app$p lset$ ?v2 ))(fun_app$n (fun_app$s ?v0 ?v4 )?v5 )))(fun_app$n (fun_app$s ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$r (llist_all2$c ?v3 )?v1 )?v2 ))):named a16 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (and (member$a ?v4 (fun_app$q lset$a ?v1 ))(and (member$a ?v5 (fun_app$q lset$a ?v2 ))(fun_app$l (fun_app$m ?v0 ?v4 )?v5 )))(fun_app$l (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$a (llist_all2$b ?v3 )?v1 )?v2 ))):named a17 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (and (member$ ?v4 (fun_app$p lset$ ?v1 ))(and (member$a ?v5 (fun_app$q lset$a ?v2 ))(fun_app$l (fun_app$u ?v0 ?v4 )?v5 )))(fun_app$l (fun_app$u ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$t (llist_all2$ ?v3 )?v1 )?v2 ))):named a18 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (fun_app$l (fun_app$m ?v0 ?v4 )?v5 )(fun_app$l (fun_app$m ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$a (llist_all2$b ?v3 )?v1 )?v2 ))):named a19 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (fun_app$n (fun_app$o ?v0 ?v4 )?v5 )(fun_app$n (fun_app$o ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$c (llist_all2$a ?v3 )?v1 )?v2 ))):named a20 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$r (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$n (fun_app$s ?v0 ?v4 )?v5 )(fun_app$n (fun_app$s ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$r (llist_all2$c ?v3 )?v1 )?v2 ))):named a21 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$l (fun_app$u ?v0 ?v4 )?v5 )(fun_app$l (fun_app$u ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$t (llist_all2$ ?v3 )?v1 )?v2 ))):named a22 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(member$ ?v3 (fun_app$p lset$ ?v2 )))(exists ((?v4 A$ ))(and (member$ ?v4 (fun_app$p lset$ ?v1 ))(fun_app$n (fun_app$o ?v0 ?v4 )?v3 ))))):named a23 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 A$ ))(=> (and (fun_app$b (fun_app$r (llist_all2$c ?v0 )?v1 )?v2 )(member$ ?v3 (fun_app$p lset$ ?v2 )))(exists ((?v4 B$ ))(and (member$a ?v4 (fun_app$q lset$a ?v1 ))(fun_app$n (fun_app$s ?v0 ?v4 )?v3 ))))):named a24 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v2 )(member$a ?v3 (fun_app$q lset$a ?v2 )))(exists ((?v4 B$ ))(and (member$a ?v4 (fun_app$q lset$a ?v1 ))(fun_app$l (fun_app$m ?v0 ?v4 )?v3 ))))):named a25 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 B$ ))(=> (and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v1 )?v2 )(member$a ?v3 (fun_app$q lset$a ?v2 )))(exists ((?v4 A$ ))(and (member$ ?v4 (fun_app$p lset$ ?v1 ))(fun_app$l (fun_app$u ?v0 ?v4 )?v3 ))))):named a26 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(member$ ?v3 (fun_app$p lset$ ?v1 )))(exists ((?v4 A$ ))(and (member$ ?v4 (fun_app$p lset$ ?v2 ))(fun_app$n (fun_app$o ?v0 ?v3 )?v4 ))))):named a27 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B$ ))(=> (and (fun_app$b (fun_app$r (llist_all2$c ?v0 )?v1 )?v2 )(member$a ?v3 (fun_app$q lset$a ?v1 )))(exists ((?v4 A$ ))(and (member$ ?v4 (fun_app$p lset$ ?v2 ))(fun_app$n (fun_app$s ?v0 ?v3 )?v4 ))))):named a28 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$b ?v0 )?v1 )?v2 )(member$a ?v3 (fun_app$q lset$a ?v1 )))(exists ((?v4 B$ ))(and (member$a ?v4 (fun_app$q lset$a ?v2 ))(fun_app$l (fun_app$m ?v0 ?v3 )?v4 ))))):named a29 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A$ ))(=> (and (fun_app$ (fun_app$t (llist_all2$ ?v0 )?v1 )?v2 )(member$ ?v3 (fun_app$p lset$ ?v1 )))(exists ((?v4 B$ ))(and (member$a ?v4 (fun_app$q lset$a ?v2 ))(fun_app$l (fun_app$u ?v0 ?v3 )?v4 ))))):named a30 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(fun_app$j (fun_app$k (rel_fun$a (llist_all2$a ?v0 )(rel_set$a ?v0 ))lset$ )lset$ )):named a31 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ ))(rel_fun$b (llist_all2$c ?v0 )(rel_set$b ?v0 )lset$a lset$ )):named a32 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ ))(fun_app$h (fun_app$i (rel_fun$c (llist_all2$b ?v0 )(rel_set$c ?v0 ))lset$a )lset$a )):named a33 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ ))(rel_fun$ (llist_all2$ ?v0 )(rel_set$ ?v0 )lset$ lset$a )):named a34 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_set_b_set_bool_fun_fun$ )(?v2 B_llist_b_set_fun$ )(?v3 B_llist_b_set_fun$ ))(=> (forall ((?v4 B_llist$ )(?v5 B_llist$ ))(=> (fun_app$ (fun_app$a ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v1 (fun_app$q ?v2 ?v4 ))(fun_app$q ?v3 ?v5 ))))(fun_app$h (fun_app$i (rel_fun$c ?v0 ?v1 )?v2 )?v3 ))):named a35 ))
(assert (! (forall ((?v0 B_llist_a_llist_bool_fun_fun$ )(?v1 B_set_a_set_bool_fun_fun$ )(?v2 B_llist_b_set_fun$ )(?v3 A_llist_a_set_fun$ ))(=> (forall ((?v4 B_llist$ )(?v5 A_llist$ ))(=> (fun_app$b (fun_app$r ?v0 ?v4 )?v5 )(fun_app$f (fun_app$v ?v1 (fun_app$q ?v2 ?v4 ))(fun_app$p ?v3 ?v5 ))))(rel_fun$b ?v0 ?v1 ?v2 ?v3 ))):named a36 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_set_a_set_bool_fun_fun$ )(?v2 A_llist_a_set_fun$ )(?v3 A_llist_a_set_fun$ ))(=> (forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (fun_app$b (fun_app$c ?v0 ?v4 )?v5 )(fun_app$f (fun_app$g ?v1 (fun_app$p ?v2 ?v4 ))(fun_app$p ?v3 ?v5 ))))(fun_app$j (fun_app$k (rel_fun$a ?v0 ?v1 )?v2 )?v3 ))):named a37 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_set_b_set_bool_fun_fun$ )(?v2 A_llist_a_set_fun$ )(?v3 B_llist_b_set_fun$ ))(=> (forall ((?v4 A_llist$ )(?v5 B_llist$ ))(=> (fun_app$ (fun_app$t ?v0 ?v4 )?v5 )(fun_app$d (fun_app$w ?v1 (fun_app$p ?v2 ?v4 ))(fun_app$q ?v3 ?v5 ))))(rel_fun$ ?v0 ?v1 ?v2 ?v3 ))):named a38 ))
(assert (! (= (rel_set$c uu$ )uud$ ):named a39 ))
(assert (! (= (rel_set$a uub$ )uue$ ):named a40 ))
(assert (! (forall ((?v0 B_set$ )(?v1 B_set$ )(?v2 B_b_bool_fun_fun$ ))(=> (and (forall ((?v3 B$ ))(=> (member$a ?v3 ?v0 )(exists ((?v4 B$ ))(and (member$a ?v4 ?v1 )(fun_app$l (fun_app$m ?v2 ?v3 )?v4 )))))(forall ((?v3 B$ ))(=> (member$a ?v3 ?v1 )(exists ((?v4 B$ ))(and (member$a ?v4 ?v0 )(fun_app$l (fun_app$m ?v2 ?v4 )?v3 ))))))(fun_app$d (fun_app$e (rel_set$c ?v2 )?v0 )?v1 ))):named a41 ))
(assert (! (forall ((?v0 B_set$ )(?v1 A_set$ )(?v2 B_a_bool_fun_fun$ ))(=> (and (forall ((?v3 B$ ))(=> (member$a ?v3 ?v0 )(exists ((?v4 A$ ))(and (member$ ?v4 ?v1 )(fun_app$n (fun_app$s ?v2 ?v3 )?v4 )))))(forall ((?v3 A$ ))(=> (member$ ?v3 ?v1 )(exists ((?v4 B$ ))(and (member$a ?v4 ?v0 )(fun_app$n (fun_app$s ?v2 ?v4 )?v3 ))))))(fun_app$f (fun_app$v (rel_set$b ?v2 )?v0 )?v1 ))):named a42 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_bool_fun_fun$ ))(=> (and (forall ((?v3 A$ ))(=> (member$ ?v3 ?v0 )(exists ((?v4 A$ ))(and (member$ ?v4 ?v1 )(fun_app$n (fun_app$o ?v2 ?v3 )?v4 )))))(forall ((?v3 A$ ))(=> (member$ ?v3 ?v1 )(exists ((?v4 A$ ))(and (member$ ?v4 ?v0 )(fun_app$n (fun_app$o ?v2 ?v4 )?v3 ))))))(fun_app$f (fun_app$g (rel_set$a ?v2 )?v0 )?v1 ))):named a43 ))
(assert (! (forall ((?v0 A_set$ )(?v1 B_set$ )(?v2 A_b_bool_fun_fun$ ))(=> (and (forall ((?v3 A$ ))(=> (member$ ?v3 ?v0 )(exists ((?v4 B$ ))(and (member$a ?v4 ?v1 )(fun_app$l (fun_app$u ?v2 ?v3 )?v4 )))))(forall ((?v3 B$ ))(=> (member$a ?v3 ?v1 )(exists ((?v4 A$ ))(and (member$ ?v4 ?v0 )(fun_app$l (fun_app$u ?v2 ?v4 )?v3 ))))))(fun_app$d (fun_app$w (rel_set$ ?v2 )?v0 )?v1 ))):named a44 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set$ )(?v2 B_set$ )(?v3 B$ ))(=> (and (fun_app$d (fun_app$e (rel_set$c ?v0 )?v1 )?v2 )(member$a ?v3 ?v2 ))(exists ((?v4 B$ ))(and (member$a ?v4 ?v1 )(fun_app$l (fun_app$m ?v0 ?v4 )?v3 ))))):named a45 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_set$ )(?v2 A_set$ )(?v3 A$ ))(=> (and (fun_app$f (fun_app$v (rel_set$b ?v0 )?v1 )?v2 )(member$ ?v3 ?v2 ))(exists ((?v4 B$ ))(and (member$a ?v4 ?v1 )(fun_app$n (fun_app$s ?v0 ?v4 )?v3 ))))):named a46 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set$ )(?v2 A_set$ )(?v3 A$ ))(=> (and (fun_app$f (fun_app$g (rel_set$a ?v0 )?v1 )?v2 )(member$ ?v3 ?v2 ))(exists ((?v4 A$ ))(and (member$ ?v4 ?v1 )(fun_app$n (fun_app$o ?v0 ?v4 )?v3 ))))):named a47 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_set$ )(?v2 B_set$ )(?v3 B$ ))(=> (and (fun_app$d (fun_app$w (rel_set$ ?v0 )?v1 )?v2 )(member$a ?v3 ?v2 ))(exists ((?v4 A$ ))(and (member$ ?v4 ?v1 )(fun_app$l (fun_app$u ?v0 ?v4 )?v3 ))))):named a48 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_set$ )(?v2 B_set$ )(?v3 B$ ))(=> (and (fun_app$d (fun_app$e (rel_set$c ?v0 )?v1 )?v2 )(member$a ?v3 ?v1 ))(exists ((?v4 B$ ))(and (member$a ?v4 ?v2 )(fun_app$l (fun_app$m ?v0 ?v3 )?v4 ))))):named a49 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_set$ )(?v2 A_set$ )(?v3 B$ ))(=> (and (fun_app$f (fun_app$v (rel_set$b ?v0 )?v1 )?v2 )(member$a ?v3 ?v1 ))(exists ((?v4 A$ ))(and (member$ ?v4 ?v2 )(fun_app$n (fun_app$s ?v0 ?v3 )?v4 ))))):named a50 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_set$ )(?v2 A_set$ )(?v3 A$ ))(=> (and (fun_app$f (fun_app$g (rel_set$a ?v0 )?v1 )?v2 )(member$ ?v3 ?v1 ))(exists ((?v4 A$ ))(and (member$ ?v4 ?v2 )(fun_app$n (fun_app$o ?v0 ?v3 )?v4 ))))):named a51 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_set$ )(?v2 B_set$ )(?v3 A$ ))(=> (and (fun_app$d (fun_app$w (rel_set$ ?v0 )?v1 )?v2 )(member$ ?v3 ?v1 ))(exists ((?v4 B$ ))(and (member$a ?v4 ?v2 )(fun_app$l (fun_app$u ?v0 ?v3 )?v4 ))))):named a52 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ ))(= (member$ ?v0 (fun_app$p lset$ ?v1 ))(lmember$ ?v0 ?v1 ))):named a53 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ ))(= (member$a ?v0 (fun_app$q lset$a ?v1 ))(lmember$a ?v0 ?v1 ))):named a54 ))
(assert (! (= (rel_fun$c uua$ uud$ )uuf$ ):named a55 ))
(assert (! (= (rel_fun$a uuc$ uue$ )uug$ ):named a56 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_set_b_set_bool_fun_fun$ )(?v2 B_llist_b_set_fun$ )(?v3 B_llist_b_set_fun$ )(?v4 B_llist$ )(?v5 B_llist$ ))(=> (and (fun_app$h (fun_app$i (rel_fun$c ?v0 ?v1 )?v2 )?v3 )(and (fun_app$ (fun_app$a ?v0 ?v4 )?v5 )(=> (fun_app$d (fun_app$e ?v1 (fun_app$q ?v2 ?v4 ))(fun_app$q ?v3 ?v5 ))false )))false )):named a57 ))
(assert (! (forall ((?v0 B_llist_a_llist_bool_fun_fun$ )(?v1 B_set_a_set_bool_fun_fun$ )(?v2 B_llist_b_set_fun$ )(?v3 A_llist_a_set_fun$ )(?v4 B_llist$ )(?v5 A_llist$ ))(=> (and (rel_fun$b ?v0 ?v1 ?v2 ?v3 )(and (fun_app$b (fun_app$r ?v0 ?v4 )?v5 )(=> (fun_app$f (fun_app$v ?v1 (fun_app$q ?v2 ?v4 ))(fun_app$p ?v3 ?v5 ))false )))false )):named a58 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_set_a_set_bool_fun_fun$ )(?v2 A_llist_a_set_fun$ )(?v3 A_llist_a_set_fun$ )(?v4 A_llist$ )(?v5 A_llist$ ))(=> (and (fun_app$j (fun_app$k (rel_fun$a ?v0 ?v1 )?v2 )?v3 )(and (fun_app$b (fun_app$c ?v0 ?v4 )?v5 )(=> (fun_app$f (fun_app$g ?v1 (fun_app$p ?v2 ?v4 ))(fun_app$p ?v3 ?v5 ))false )))false )):named a59 ))
(assert (! (forall ((?v0 A_llist_b_llist_bool_fun_fun$ )(?v1 A_set_b_set_bool_fun_fun$ )(?v2 A_llist_a_set_fun$ )(?v3 B_llist_b_set_fun$ )(?v4 A_llist$ )(?v5 B_llist$ ))(=> (and (rel_fun$ ?v0 ?v1 ?v2 ?v3 )(and (fun_app$ (fun_app$t ?v0 ?v4 )?v5 )(=> (fun_app$d (fun_app$w ?v1 (fun_app$p ?v2 ?v4 ))(fun_app$q ?v3 ?v5 ))false )))false )):named a60 ))
(check-sat )
;(get-unsat-core )
