;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Enat_set$ 0 )
(declare-sort Enat_set_set$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort Enat_enat_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_enat_fun$ 0 )
(declare-sort Enat_a_llist_fun$ 0 )
(declare-sort Enat_enat_set_fun$ 0 )
(declare-sort Enat_set_enat_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_enat_set_fun$ 0 )
(declare-sort Enat_set_a_llist_fun$ 0 )
(declare-sort Enat_enat_set_set_fun$ 0 )
(declare-sort Enat_set_enat_set_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort Enat_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_set_a_llist_fun$ 0 )
(declare-sort A_llist_enat_set_set_fun$ 0 )
(declare-sort A_llist_enat_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_set_enat_set_fun$ 0 )
(declare-sort Enat_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_enat_set_enat_fun_fun$ 0 )
(declare-sort Enat_set_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_enat_set_fun_fun$ 0 )
(declare-sort A_llist_enat_set_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_enat_set_fun_fun$ 0 )
(declare-sort Enat_enat_set_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_set_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_set_enat_set_fun_fun$ 0 )
(declare-sort Enat_set_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_set_enat_set_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_set_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_set_set_enat_set_set_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_enat_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_enat_set_fun_enat_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_a_llist_fun_enat_enat_set_fun_fun$ 0 )
(declare-sort Enat_enat_set_fun_enat_a_llist_fun_fun$ 0 )
(declare-sort Enat_set_set_enat_set_set_bool_fun_fun$ 0 )
(declare-sort Enat_enat_set_fun_enat_enat_set_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_fun_a_llist_enat_set_fun_fun$ 0 )
(declare-sort A_llist_enat_set_fun_a_llist_enat_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort A_llist_enat_set_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-fun f$ (Enat$ )Enat_a_llist_fun$ )
(declare-fun uu$ (Enat$ )Enat_a_llist_fun$ )
(declare-fun sup$ ()Enat_set_enat_fun$ )
(declare-fun uua$ ()Enat_a_llist_fun$ )
(declare-fun uub$ ()Enat_a_llist_fun$ )
(declare-fun uuc$ (Enat_enat_set_a_llist_fun_fun$ )Enat_set_enat_a_llist_fun_fun$ )
(declare-fun uud$ (Enat_enat_set_a_llist_fun_fun$ )Enat_enat_set_fun_enat_a_llist_fun_fun$ )
(declare-fun uue$ (A_llist_enat_set_a_llist_fun_fun$ )Enat_set_a_llist_a_llist_fun_fun$ )
(declare-fun uuf$ (A_llist_enat_set_a_llist_fun_fun$ )A_llist_enat_set_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uug$ (A_llist_enat_a_llist_fun_fun$ )Enat_a_llist_a_llist_fun_fun$ )
(declare-fun uuh$ (A_llist_enat_a_llist_fun_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uui$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_a_llist_fun_fun$ )
(declare-fun uuj$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuk$ (Enat_a_llist_a_llist_fun_fun$ )A_llist_enat_a_llist_fun_fun$ )
(declare-fun uul$ (Enat_a_llist_a_llist_fun_fun$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun uum$ (Enat_enat_a_llist_fun_fun$ )Enat_enat_a_llist_fun_fun$ )
(declare-fun uun$ (Enat_enat_a_llist_fun_fun$ )Enat_enat_fun_enat_a_llist_fun_fun$ )
(declare-fun uuo$ (Enat_set_a_llist_fun$ )A_llist_enat_set_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uup$ (Enat_set_a_llist_fun$ )Enat_enat_set_fun_enat_a_llist_fun_fun$ )
(declare-fun uuq$ (Enat_a_llist_fun$ )A_llist_enat_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uur$ (A_llist_a_llist_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uus$ (A_llist_a_llist_fun$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun uut$ (Enat_a_llist_fun$ )Enat_enat_fun_enat_a_llist_fun_fun$ )
(declare-fun uuu$ (A_llist$ )A_llist_a_llist_fun$ )
(declare-fun uuv$ (A_llist$ )Enat_a_llist_fun$ )
(declare-fun uuw$ (Enat_a_llist_enat_fun_fun$ )A_llist_enat_enat_fun_fun$ )
(declare-fun uux$ (Enat_a_llist_enat_fun_fun$ )Enat_a_llist_fun_enat_enat_fun_fun$ )
(declare-fun uuy$ (Enat_enat_enat_fun_fun$ )Enat_enat_enat_fun_fun$ )
(declare-fun uuz$ (Enat_enat_enat_fun_fun$ )Enat_enat_fun_enat_enat_fun_fun$ )
(declare-fun uva$ (A_llist_enat_enat_fun_fun$ )Enat_a_llist_enat_fun_fun$ )
(declare-fun uvb$ (A_llist_enat_enat_fun_fun$ )A_llist_enat_fun_a_llist_enat_fun_fun$ )
(declare-fun uvc$ (A_llist_a_llist_enat_fun_fun$ )A_llist_a_llist_enat_fun_fun$ )
(declare-fun uvd$ (A_llist_a_llist_enat_fun_fun$ )A_llist_a_llist_fun_a_llist_enat_fun_fun$ )
(declare-fun uve$ (Enat_enat_set_enat_fun_fun$ )Enat_set_enat_enat_fun_fun$ )
(declare-fun uvf$ (Enat_enat_set_enat_fun_fun$ )Enat_enat_set_fun_enat_enat_fun_fun$ )
(declare-fun uvg$ (Enat_enat_enat_set_fun_fun$ )Enat_enat_enat_set_fun_fun$ )
(declare-fun uvh$ (Enat_enat_enat_set_fun_fun$ )Enat_enat_fun_enat_enat_set_fun_fun$ )
(declare-fun uvi$ (A_llist_enat_set_enat_fun_fun$ )Enat_set_a_llist_enat_fun_fun$ )
(declare-fun uvj$ (A_llist_enat_set_enat_fun_fun$ )A_llist_enat_set_fun_a_llist_enat_fun_fun$ )
(declare-fun uvk$ (Enat_enat_set_enat_set_fun_fun$ )Enat_set_enat_enat_set_fun_fun$ )
(declare-fun uvl$ (Enat_enat_set_enat_set_fun_fun$ )Enat_enat_set_fun_enat_enat_set_fun_fun$ )
(declare-fun uvm$ (Enat_a_llist_enat_set_fun_fun$ )A_llist_enat_enat_set_fun_fun$ )
(declare-fun uvn$ (Enat_a_llist_enat_set_fun_fun$ )Enat_a_llist_fun_enat_enat_set_fun_fun$ )
(declare-fun uvo$ (A_llist_enat_enat_set_fun_fun$ )Enat_a_llist_enat_set_fun_fun$ )
(declare-fun uvp$ (A_llist_enat_enat_set_fun_fun$ )A_llist_enat_fun_a_llist_enat_set_fun_fun$ )
(declare-fun uvq$ (A_llist_enat_set_set_fun$ )A_llist_enat_set_fun$ )
(declare-fun uvr$ (Enat_enat_set_set_fun$ )Enat_enat_set_fun$ )
(declare-fun uvs$ (Enat_enat_set_fun$ )Enat_enat_fun$ )
(declare-fun uvt$ (A_llist_enat_set_fun$ )A_llist_enat_fun$ )
(declare-fun eSuc$ (Enat$ )Enat$ )
(declare-fun lSup$ ()A_llist_set_a_llist_fun$ )
(declare-fun sup$a ()Enat_set_set_enat_set_fun$ )
(declare-fun sup$b ()Enat_set_set_set_enat_set_set_fun$ )
(declare-fun mcont$ (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_a_llist_fun$ )Bool )
(declare-fun mcont$a (Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_a_llist_fun$ )Bool )
(declare-fun mcont$b (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_enat_set_fun$ )Bool )
(declare-fun mcont$c (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ )Bool )
(declare-fun mcont$d (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ A_llist_enat_set_fun$ )Bool )
(declare-fun mcont$e (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ A_llist_enat_fun$ )Bool )
(declare-fun mcont$f (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_enat_fun$ )Bool )
(declare-fun mcont$g (Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_enat_fun$ )Bool )
(declare-fun mcont$h (Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_set_set_enat_set_fun$ Enat_set_enat_set_bool_fun_fun$ Enat_set_enat_set_fun$ )Bool )
(declare-fun mcont$i (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Enat_set_set_set_enat_set_set_fun$ Enat_set_set_enat_set_set_bool_fun_fun$ A_llist_enat_set_set_fun$ )Bool )
(declare-fun mcont$j (Enat_set_enat_fun$ Enat_enat_bool_fun_fun$ Enat_set_set_set_enat_set_set_fun$ Enat_set_set_enat_set_set_bool_fun_fun$ Enat_enat_set_set_fun$ )Bool )
(declare-fun fun_app$ (Enat_a_llist_fun$ Enat$ )A_llist$ )
(declare-fun less_eq$ ()Enat_enat_bool_fun_fun$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$a (Enat_a_llist_fun_enat_a_llist_fun_fun$ Enat_a_llist_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$b (A_llist_enat_fun$ A_llist$ )Enat$ )
(declare-fun fun_app$c (Enat_set_enat_fun$ Enat_set$ )Enat$ )
(declare-fun fun_app$d (A_llist_enat_set_fun$ A_llist$ )Enat_set$ )
(declare-fun fun_app$e (Enat_set_set_enat_set_fun$ Enat_set_set$ )Enat_set$ )
(declare-fun fun_app$f (A_llist_enat_set_set_fun$ A_llist$ )Enat_set_set$ )
(declare-fun fun_app$g (Enat_enat_fun$ Enat$ )Enat$ )
(declare-fun fun_app$h (Enat_enat_set_fun$ Enat$ )Enat_set$ )
(declare-fun fun_app$i (Enat_enat_set_set_fun$ Enat$ )Enat_set_set$ )
(declare-fun fun_app$j (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$k (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$l (A_llist_a_llist_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$m (A_llist_a_llist_fun_a_llist_enat_fun_fun$ A_llist_a_llist_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$n (A_llist_a_llist_enat_fun_fun$ A_llist$ )A_llist_enat_fun$ )
(declare-fun fun_app$o (A_llist_enat_fun_a_llist_a_llist_fun_fun$ A_llist_enat_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$p (A_llist_enat_a_llist_fun_fun$ A_llist$ )Enat_a_llist_fun$ )
(declare-fun fun_app$q (A_llist_enat_fun_a_llist_enat_fun_fun$ A_llist_enat_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$r (A_llist_enat_enat_fun_fun$ A_llist$ )Enat_enat_fun$ )
(declare-fun fun_app$s (A_llist_enat_fun_a_llist_enat_set_fun_fun$ A_llist_enat_fun$ )A_llist_enat_set_fun$ )
(declare-fun fun_app$t (A_llist_enat_enat_set_fun_fun$ A_llist$ )Enat_enat_set_fun$ )
(declare-fun fun_app$u (A_llist_enat_set_fun_a_llist_a_llist_fun_fun$ A_llist_enat_set_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$v (Enat_set_a_llist_fun$ Enat_set$ )A_llist$ )
(declare-fun fun_app$w (A_llist_enat_set_a_llist_fun_fun$ A_llist$ )Enat_set_a_llist_fun$ )
(declare-fun fun_app$x (A_llist_enat_set_fun_a_llist_enat_fun_fun$ A_llist_enat_set_fun$ )A_llist_enat_fun$ )
(declare-fun fun_app$y (A_llist_enat_set_enat_fun_fun$ A_llist$ )Enat_set_enat_fun$ )
(declare-fun fun_app$z (Enat_a_llist_a_llist_fun_fun$ Enat$ )A_llist_a_llist_fun$ )
(declare-fun less_eq$a ()Enat_set_enat_set_bool_fun_fun$ )
(declare-fun less_eq$b ()Enat_set_set_enat_set_set_bool_fun_fun$ )
(declare-fun case_enat$ (A_llist$ )Enat_a_llist_fun_enat_a_llist_fun_fun$ )
(declare-fun fun_app$aa (Enat_a_llist_fun_enat_enat_fun_fun$ Enat_a_llist_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$ab (Enat_a_llist_enat_fun_fun$ Enat$ )A_llist_enat_fun$ )
(declare-fun fun_app$ac (Enat_a_llist_fun_enat_enat_set_fun_fun$ Enat_a_llist_fun$ )Enat_enat_set_fun$ )
(declare-fun fun_app$ad (Enat_a_llist_enat_set_fun_fun$ Enat$ )A_llist_enat_set_fun$ )
(declare-fun fun_app$ae (Enat_enat_fun_enat_a_llist_fun_fun$ Enat_enat_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$af (Enat_enat_a_llist_fun_fun$ Enat$ )Enat_a_llist_fun$ )
(declare-fun fun_app$ag (Enat_enat_fun_enat_enat_fun_fun$ Enat_enat_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$ah (Enat_enat_enat_fun_fun$ Enat$ )Enat_enat_fun$ )
(declare-fun fun_app$ai (Enat_enat_fun_enat_enat_set_fun_fun$ Enat_enat_fun$ )Enat_enat_set_fun$ )
(declare-fun fun_app$aj (Enat_enat_enat_set_fun_fun$ Enat$ )Enat_enat_set_fun$ )
(declare-fun fun_app$ak (Enat_enat_set_fun_enat_a_llist_fun_fun$ Enat_enat_set_fun$ )Enat_a_llist_fun$ )
(declare-fun fun_app$al (Enat_enat_set_a_llist_fun_fun$ Enat$ )Enat_set_a_llist_fun$ )
(declare-fun fun_app$am (Enat_enat_set_fun_enat_enat_fun_fun$ Enat_enat_set_fun$ )Enat_enat_fun$ )
(declare-fun fun_app$an (Enat_enat_set_enat_fun_fun$ Enat$ )Enat_set_enat_fun$ )
(declare-fun fun_app$ao (Enat_enat_set_fun_enat_enat_set_fun_fun$ Enat_enat_set_fun$ )Enat_enat_set_fun$ )
(declare-fun fun_app$ap (Enat_set_enat_set_fun$ Enat_set$ )Enat_set$ )
(declare-fun fun_app$aq (Enat_enat_set_enat_set_fun_fun$ Enat$ )Enat_set_enat_set_fun$ )
(declare-fun fun_app$ar (Enat_set_a_llist_a_llist_fun_fun$ Enat_set$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$as (Enat_set_a_llist_enat_fun_fun$ Enat_set$ )A_llist_enat_fun$ )
(declare-fun fun_app$at (Enat_set_enat_a_llist_fun_fun$ Enat_set$ )Enat_a_llist_fun$ )
(declare-fun fun_app$au (Enat_set_enat_enat_fun_fun$ Enat_set$ )Enat_enat_fun$ )
(declare-fun fun_app$av (Enat_set_enat_enat_set_fun_fun$ Enat_set$ )Enat_enat_set_fun$ )
(declare-fun fun_app$aw (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$ax (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$ay (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$az (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$ uua$ ?v0 )(fun_app$ (fun_app$a (case_enat$ lNil$ )(uu$ ?v0 ))?v0 )):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$ uub$ ?v0 )(fun_app$ (f$ ?v0 )(eSuc$ ?v0 ))):pattern ((fun_app$ uub$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(! (= (fun_app$ (uu$ ?v0 )?v1 )(fun_app$ (f$ ?v1 )?v0 )):pattern ((fun_app$ (uu$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_enat_set_fun$ )(?v1 A_llist$ ))(! (= (fun_app$b (uvt$ ?v0 )?v1 )(fun_app$c sup$ (fun_app$d ?v0 ?v1 ))):pattern ((fun_app$b (uvt$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_enat_set_set_fun$ )(?v1 A_llist$ ))(! (= (fun_app$d (uvq$ ?v0 )?v1 )(fun_app$e sup$a (fun_app$f ?v0 ?v1 ))):pattern ((fun_app$d (uvq$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 Enat_enat_set_fun$ )(?v1 Enat$ ))(! (= (fun_app$g (uvs$ ?v0 )?v1 )(fun_app$c sup$ (fun_app$h ?v0 ?v1 ))):pattern ((fun_app$g (uvs$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 Enat_enat_set_set_fun$ )(?v1 Enat$ ))(! (= (fun_app$h (uvr$ ?v0 )?v1 )(fun_app$e sup$a (fun_app$i ?v0 ?v1 ))):pattern ((fun_app$h (uvr$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$k (uuj$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$l ?v0 ?v2 )(fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$k (uuj$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_llist_a_llist_enat_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$m (uvd$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$n ?v0 ?v2 )(fun_app$j ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$m (uvd$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$o (uuh$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$p ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$o (uuh$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_enat_enat_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$q (uvb$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$r ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$q (uvb$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_enat_enat_set_fun_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$d (fun_app$s (uvp$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$t ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$s (uvp$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_enat_set_a_llist_fun_fun$ )(?v1 A_llist_enat_set_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$u (uuf$ ?v0 )?v1 )?v2 )(fun_app$v (fun_app$w ?v0 ?v2 )(fun_app$d ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$u (uuf$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_enat_set_enat_fun_fun$ )(?v1 A_llist_enat_set_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$x (uvj$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$y ?v0 ?v2 )(fun_app$d ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$x (uvj$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$a (uul$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$z ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (uul$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$g (fun_app$aa (uux$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$ab ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$aa (uux$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_set_fun_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$h (fun_app$ac (uvn$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$ad ?v0 ?v2 )(fun_app$ ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$ac (uvn$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ae (uun$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$af ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ae (uun$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 Enat_enat_enat_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$g (fun_app$ag (uuz$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$ah ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$ag (uuz$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 Enat_enat_enat_set_fun_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$h (fun_app$ai (uvh$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$aj ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$ai (uvh$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 Enat_enat_set_a_llist_fun_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ak (uud$ ?v0 )?v1 )?v2 )(fun_app$v (fun_app$al ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ak (uud$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_fun_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$g (fun_app$am (uvf$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$an ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$am (uvf$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_set_fun_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$h (fun_app$ao (uvl$ ?v0 )?v1 )?v2 )(fun_app$ap (fun_app$aq ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$ao (uvl$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$l (uui$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$l ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$l (uui$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_llist_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$n (uvc$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$n ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$n (uvc$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_llist_enat_a_llist_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$z (uug$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$p ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$z (uug$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_llist_enat_enat_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$ab (uva$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$r ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$ab (uva$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_enat_enat_set_fun_fun$ )(?v1 Enat$ )(?v2 A_llist$ ))(! (= (fun_app$d (fun_app$ad (uvo$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$t ?v0 ?v2 )?v1 )):pattern ((fun_app$d (fun_app$ad (uvo$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_enat_set_a_llist_fun_fun$ )(?v1 Enat_set$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$ar (uue$ ?v0 )?v1 )?v2 )(fun_app$v (fun_app$w ?v0 ?v2 )?v1 )):pattern ((fun_app$j (fun_app$ar (uue$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_llist_enat_set_enat_fun_fun$ )(?v1 Enat_set$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$as (uvi$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$y ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$as (uvi$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 Enat_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$p (uuk$ ?v0 )?v1 )?v2 )(fun_app$j (fun_app$z ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$p (uuk$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_fun_fun$ )(?v1 A_llist$ )(?v2 Enat$ ))(! (= (fun_app$g (fun_app$r (uuw$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$ab ?v0 ?v2 )?v1 )):pattern ((fun_app$g (fun_app$r (uuw$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 Enat_a_llist_enat_set_fun_fun$ )(?v1 A_llist$ )(?v2 Enat$ ))(! (= (fun_app$h (fun_app$t (uvm$ ?v0 )?v1 )?v2 )(fun_app$d (fun_app$ad ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$t (uvm$ ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 Enat_enat_a_llist_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$af (uum$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$af ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$af (uum$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 Enat_enat_enat_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$g (fun_app$ah (uuy$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$ah ?v0 ?v2 )?v1 )):pattern ((fun_app$g (fun_app$ah (uuy$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 Enat_enat_enat_set_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(! (= (fun_app$h (fun_app$aj (uvg$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$aj ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$aj (uvg$ ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 Enat_enat_set_a_llist_fun_fun$ )(?v1 Enat_set$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$at (uuc$ ?v0 )?v1 )?v2 )(fun_app$v (fun_app$al ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$at (uuc$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_fun_fun$ )(?v1 Enat_set$ )(?v2 Enat$ ))(! (= (fun_app$g (fun_app$au (uve$ ?v0 )?v1 )?v2 )(fun_app$c (fun_app$an ?v0 ?v2 )?v1 )):pattern ((fun_app$g (fun_app$au (uve$ ?v0 )?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Enat_enat_set_enat_set_fun_fun$ )(?v1 Enat_set$ )(?v2 Enat$ ))(! (= (fun_app$h (fun_app$av (uvk$ ?v0 )?v1 )?v2 )(fun_app$ap (fun_app$aq ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$av (uvk$ ?v0 )?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$k (uur$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$k (uur$ ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Enat_a_llist_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$a (uus$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (uus$ ?v0 )?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 A_llist_enat_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$o (uuq$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$o (uuq$ ?v0 )?v1 )?v2 )))):named a41 ))
(assert (! (forall ((?v0 Enat_a_llist_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ae (uut$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$g ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ae (uut$ ?v0 )?v1 )?v2 )))):named a42 ))
(assert (! (forall ((?v0 Enat_set_a_llist_fun$ )(?v1 A_llist_enat_set_fun$ )(?v2 A_llist$ ))(! (= (fun_app$j (fun_app$u (uuo$ ?v0 )?v1 )?v2 )(fun_app$v ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$u (uuo$ ?v0 )?v1 )?v2 )))):named a43 ))
(assert (! (forall ((?v0 Enat_set_a_llist_fun$ )(?v1 Enat_enat_set_fun$ )(?v2 Enat$ ))(! (= (fun_app$ (fun_app$ak (uup$ ?v0 )?v1 )?v2 )(fun_app$v ?v0 (fun_app$h ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$ak (uup$ ?v0 )?v1 )?v2 )))):named a44 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$j (uuu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (uuu$ ?v0 )?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Enat$ ))(! (= (fun_app$ (uuv$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uuv$ ?v0 )?v1 )))):named a46 ))
(assert (! (not (mcont$ sup$ less_eq$ lSup$ lprefix$ uua$ )):named a47 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$aw (fun_app$ax lprefix$ ?v0 )?v0 )):named a48 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$aw (fun_app$ax lprefix$ ?v0 )?v0 )):named a49 ))
(assert (! (mcont$ sup$ less_eq$ lSup$ lprefix$ uub$ ):named a50 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$aw (fun_app$ax lprefix$ lNil$ )?v0 )true ):pattern ((fun_app$aw (fun_app$ax lprefix$ lNil$ )?v0 )))):named a51 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat$ )(?v2 Enat$ ))(=> (and (forall ((?v3 Enat$ )(?v4 Enat$ ))(=> (fun_app$ay (fun_app$az less_eq$ ?v3 )?v4 )(fun_app$ay (fun_app$az ?v0 ?v3 )?v4 )))(=> (fun_app$ay (fun_app$az ?v0 ?v1 )?v2 )(fun_app$ay (fun_app$az ?v0 ?v2 )?v1 )))(fun_app$ay (fun_app$az ?v0 ?v2 )?v1 ))):named a52 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_a_llist_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$al ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$at (uuc$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ak (uud$ ?v2 )?v5 )))):named a53 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 A_llist_enat_set_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_set_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$a ?v0 ?v1 lSup$ lprefix$ (fun_app$w ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$ar (uue$ ?v2 )?v6 )))(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$u (uuf$ ?v2 )?v5 )))):named a54 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$ ?v0 ?v1 lSup$ lprefix$ (fun_app$p ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$z (uug$ ?v2 )?v6 )))(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$o (uuh$ ?v2 )?v5 )))):named a55 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (fun_app$l ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$l (uui$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$k (uuj$ ?v2 )?v5 )))):named a56 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_a_llist_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (fun_app$z ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$p (uuk$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$a (uul$ ?v2 )?v5 )))):named a57 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_a_llist_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$ ?v0 ?v1 lSup$ lprefix$ (fun_app$af ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$af (uum$ ?v2 )?v6 )))(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ae (uun$ ?v2 )?v5 )))):named a58 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_set_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_set_fun$ ))(=> (and (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$u (uuo$ ?v2 )?v5 )))):named a59 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_set_a_llist_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (mcont$a ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ak (uup$ ?v2 )?v5 )))):named a60 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (mcont$ ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$o (uuq$ ?v2 )?v5 )))):named a61 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$k (uur$ ?v2 )?v5 )))):named a62 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$a (uus$ ?v2 )?v5 )))):named a63 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_a_llist_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (mcont$ ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 lSup$ lprefix$ (fun_app$ae (uut$ ?v2 )?v5 )))):named a64 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$aw (fun_app$ax lprefix$ ?v0 )?v1 )(fun_app$aw (fun_app$ax lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a65 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$aw (fun_app$ax lprefix$ ?v0 )?v1 )(fun_app$aw (fun_app$ax lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a66 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$aw (fun_app$ax lprefix$ ?v0 )?v1 )(fun_app$aw (fun_app$ax lprefix$ ?v2 )?v1 ))(or (fun_app$aw (fun_app$ax lprefix$ ?v0 )?v2 )(fun_app$aw (fun_app$ax lprefix$ ?v2 )?v0 )))):named a67 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$aw (fun_app$ax lprefix$ ?v0 )?v1 )(fun_app$aw (fun_app$ax lprefix$ ?v1 )?v2 ))(fun_app$aw (fun_app$ax lprefix$ ?v0 )?v2 ))):named a68 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$aw (fun_app$ax lprefix$ ?v0 )?v1 )(fun_app$aw (fun_app$ax lprefix$ ?v1 )?v2 ))(fun_app$aw (fun_app$ax lprefix$ ?v0 )?v2 ))):named a69 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (uuu$ ?v2 ))):named a70 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist$ ))(mcont$ ?v0 ?v1 lSup$ lprefix$ (uuv$ ?v2 ))):named a71 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$aw (fun_app$ax lprefix$ lNil$ )?v0 )):named a72 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$e ?v0 ?v1 sup$ less_eq$ (fun_app$ab ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$r (uuw$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$aa (uux$ ?v2 )?v5 )))):named a73 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$f ?v0 ?v1 sup$ less_eq$ (fun_app$ah ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$ah (uuy$ ?v2 )?v6 )))(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$ag (uuz$ ?v2 )?v5 )))):named a74 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$f ?v0 ?v1 sup$ less_eq$ (fun_app$r ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$ab (uva$ ?v2 )?v6 )))(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$q (uvb$ ?v2 )?v5 )))):named a75 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$e ?v0 ?v1 sup$ less_eq$ (fun_app$n ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$n (uvc$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$m (uvd$ ?v2 )?v5 )))):named a76 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$g ?v0 ?v1 sup$ less_eq$ (fun_app$an ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$au (uve$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$am (uvf$ ?v2 )?v5 )))):named a77 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$b ?v0 ?v1 sup$a less_eq$a (fun_app$aj ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$aj (uvg$ ?v2 )?v6 )))(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$ai (uvh$ ?v2 )?v5 )))):named a78 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 A_llist_enat_set_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_set_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$g ?v0 ?v1 sup$ less_eq$ (fun_app$y ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$as (uvi$ ?v2 )?v6 )))(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$x (uvj$ ?v2 )?v5 )))):named a79 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$h ?v0 ?v1 sup$a less_eq$a (fun_app$aq ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$av (uvk$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$ao (uvl$ ?v2 )?v5 )))):named a80 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$d ?v0 ?v1 sup$a less_eq$a (fun_app$ad ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$t (uvm$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$ac (uvn$ ?v2 )?v5 )))):named a81 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_set_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$b ?v0 ?v1 sup$a less_eq$a (fun_app$t ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$d ?v3 ?v4 sup$a less_eq$a (fun_app$ad (uvo$ ?v2 )?v6 )))(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$a less_eq$a (fun_app$s (uvp$ ?v2 )?v5 )))):named a82 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$e ?v0 ?v1 sup$ less_eq$ (fun_app$ab ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$r (uuw$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$aa (uux$ ?v2 )?v5 )))):named a83 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$f ?v0 ?v1 sup$ less_eq$ (fun_app$ah ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$ah (uuy$ ?v2 )?v6 )))(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$ag (uuz$ ?v2 )?v5 )))):named a84 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$f ?v0 ?v1 sup$ less_eq$ (fun_app$r ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$ab (uva$ ?v2 )?v6 )))(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$q (uvb$ ?v2 )?v5 )))):named a85 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$e ?v0 ?v1 sup$ less_eq$ (fun_app$n ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$n (uvc$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$m (uvd$ ?v2 )?v5 )))):named a86 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$g ?v0 ?v1 sup$ less_eq$ (fun_app$an ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$au (uve$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$f ?v3 ?v4 sup$ less_eq$ (fun_app$am (uvf$ ?v2 )?v5 )))):named a87 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$b ?v0 ?v1 sup$a less_eq$a (fun_app$aj ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$aj (uvg$ ?v2 )?v6 )))(mcont$f ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$ai (uvh$ ?v2 )?v5 )))):named a88 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 A_llist_enat_set_enat_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_set_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$g ?v0 ?v1 sup$ less_eq$ (fun_app$y ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$as (uvi$ ?v2 )?v6 )))(mcont$d ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$e ?v3 ?v4 sup$ less_eq$ (fun_app$x (uvj$ ?v2 )?v5 )))):named a89 ))
(assert (! (forall ((?v0 Enat_set_set_enat_set_fun$ )(?v1 Enat_set_enat_set_bool_fun_fun$ )(?v2 Enat_enat_set_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_enat_set_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$h ?v0 ?v1 sup$a less_eq$a (fun_app$aq ?v2 ?v6 )))(and (forall ((?v6 Enat_set$ ))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$av (uvk$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$ao (uvl$ ?v2 )?v5 )))):named a90 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Enat_a_llist_enat_set_fun_fun$ )(?v3 Enat_set_enat_fun$ )(?v4 Enat_enat_bool_fun_fun$ )(?v5 Enat_a_llist_fun$ ))(=> (and (forall ((?v6 Enat$ ))(mcont$d ?v0 ?v1 sup$a less_eq$a (fun_app$ad ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$t (uvm$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 sup$a less_eq$a (fun_app$ac (uvn$ ?v2 )?v5 )))):named a91 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 A_llist_enat_enat_set_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_enat_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$b ?v0 ?v1 sup$a less_eq$a (fun_app$t ?v2 ?v6 )))(and (forall ((?v6 Enat$ ))(mcont$d ?v3 ?v4 sup$a less_eq$a (fun_app$ad (uvo$ ?v2 )?v6 )))(mcont$e ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$d ?v3 ?v4 sup$a less_eq$a (fun_app$s (uvp$ ?v2 )?v5 )))):named a92 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_enat_set_set_fun$ ))(=> (mcont$i ?v0 ?v1 sup$b less_eq$b ?v2 )(mcont$d ?v0 ?v1 sup$a less_eq$a (uvq$ ?v2 )))):named a93 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_set_set_fun$ ))(=> (mcont$j ?v0 ?v1 sup$b less_eq$b ?v2 )(mcont$b ?v0 ?v1 sup$a less_eq$a (uvr$ ?v2 )))):named a94 ))
(assert (! (forall ((?v0 Enat_set_enat_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_set_fun$ ))(=> (mcont$b ?v0 ?v1 sup$a less_eq$a ?v2 )(mcont$f ?v0 ?v1 sup$ less_eq$ (uvs$ ?v2 )))):named a95 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_enat_set_fun$ ))(=> (mcont$d ?v0 ?v1 sup$a less_eq$a ?v2 )(mcont$e ?v0 ?v1 sup$ less_eq$ (uvt$ ?v2 )))):named a96 ))
(check-sat )
;(get-unsat-core )
