;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-fun r$ ()A_a_bool_fun_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun ys$ ()A_llist$ )
(declare-fun xsa$ ()A_llist$ )
(declare-fun ysa$ ()A_llist$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun llexord$ (A_a_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$b (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$c (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(assert (! (not (and (not (lnull$ ysa$ ))(=> (not (lnull$ ysa$ ))(or (fun_app$ (fun_app$a r$ (lhd$ xsa$ ))(lhd$ ysa$ ))(and (= (lhd$ xsa$ )(lhd$ ysa$ ))(or (not (fun_app$b (llexord$ r$ (ltl$ ysa$ ))(ltl$ xsa$ )))(fun_app$b (llexord$ r$ (ltl$ xsa$ ))(ltl$ ysa$ )))))))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(or (fun_app$ (fun_app$a r$ ?v0 )?v1 )(or (= ?v0 ?v1 )(fun_app$ (fun_app$a r$ ?v1 )?v0 )))):named a1 ))
(assert (! (not (lnull$ xsa$ )):named a2 ))
(assert (! (not (fun_app$b (llexord$ r$ ys$ )xs$ )):named a3 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(fun_app$b (llexord$ ?v0 ?v1 )?v1 )):named a4 ))
(assert (! (not (fun_app$b (llexord$ r$ ysa$ )xsa$ )):named a5 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_llist$ ))(! (=> (lnull$ ?v0 )(= (fun_app$b (llexord$ ?v1 ?v2 )?v0 )(lnull$ ?v2 ))):pattern ((fun_app$b (llexord$ ?v1 ?v2 )?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_bool_fun$ ))(=> (and (=> (or (lnull$ ?v0 )(not (fun_app$ ?v1 (lhd$ ?v0 ))))false )(=> (and (not (lnull$ ?v0 ))(fun_app$ ?v1 (lhd$ ?v0 )))false ))false )):named a7 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a8 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$ ?v1 ))))false ))false )):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (or (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a10 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (lnull$ ?v0 )false )(=> (not (lnull$ ?v0 ))false ))false )):named a11 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_llist$ ))(=> (and (fun_app$b (llexord$ ?v0 ?v1 )?v2 )(and (fun_app$b (llexord$ ?v0 ?v2 )?v3 )(forall ((?v4 A$ )(?v5 A$ )(?v6 A$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v4 )?v5 )(fun_app$ (fun_app$a ?v0 ?v5 )?v6 ))(fun_app$ (fun_app$a ?v0 ?v4 )?v6 )))))(fun_app$b (llexord$ ?v0 ?v1 )?v3 ))):named a12 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$b (llexord$ ?v0 ?v1 )?v2 )(and (fun_app$b (llexord$ ?v0 ?v2 )?v1 )(forall ((?v3 A$ )(?v4 A$ ))(=> (and (fun_app$ (fun_app$a ?v0 ?v3 )?v4 )(fun_app$ (fun_app$a ?v0 ?v4 )?v3 ))false ))))(= ?v1 ?v2 ))):named a13 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (= (lnull$ ?v0 )(lnull$ ?v1 ))(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))(and (= (lhd$ ?v0 )(lhd$ ?v1 ))(= (ltl$ ?v0 )(ltl$ ?v1 )))))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_bool_fun_fun$ )(?v2 A_llist$ ))(=> (lnull$ ?v0 )(fun_app$b (llexord$ ?v1 ?v0 )?v2 ))):named a15 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (lnull$ ?v0 )(lnull$ (ltl$ ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A_llist_a_llist_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v1 )?v2 )(forall ((?v4 A_llist$ )(?v5 A_llist$ ))(=> (and (fun_app$b (fun_app$c ?v0 ?v4 )?v5 )(not (lnull$ ?v4 )))(and (not (lnull$ ?v5 ))(=> (not (lnull$ ?v5 ))(or (fun_app$ (fun_app$a ?v3 (lhd$ ?v4 ))(lhd$ ?v5 ))(and (= (lhd$ ?v4 )(lhd$ ?v5 ))(or (fun_app$b (fun_app$c ?v0 (ltl$ ?v4 ))(ltl$ ?v5 ))(fun_app$b (llexord$ ?v3 (ltl$ ?v4 ))(ltl$ ?v5 ))))))))))(fun_app$b (llexord$ ?v3 ?v1 )?v2 ))):named a17 ))
(check-sat )
;(get-unsat-core )
