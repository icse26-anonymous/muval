;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_a_set_fun$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_a_llist_set_fun$ 0 )
(declare-sort A_llist_a_set_fun$ 0 )
(declare-sort A_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_set_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_a_bool_fun_fun$ 0 )
(declare-sort A_llist_a_bool_fun_fun_a_bool_fun_fun$ 0 )
(declare-sort A_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(A_llist_llist$ (lNil$a )(lCons$a (lhd$a A_llist$ )(ltl$a A_llist_llist$ )))))
(declare-fun uu$ (A_llist_a_bool_fun_fun$ )A_a_llist_bool_fun_fun$ )
(declare-fun uua$ (A_a_bool_fun_fun$ )A_a_bool_fun_fun$ )
(declare-fun uub$ (A_llist_set$ )A_llist_bool_fun$ )
(declare-fun uuc$ (A_set$ )A_bool_fun$ )
(declare-fun xss$ ()A_llist_llist$ )
(declare-fun lset$ ()A_llist_a_set_fun$ )
(declare-fun lset$a (A_llist_llist$ )A_llist_set$ )
(declare-fun member$ (A_llist$ A_llist_set$ )Bool )
(declare-fun fun_app$ (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun lconcat$ (A_llist_llist$ )A_llist$ )
(declare-fun less_eq$ (A_set$ A_set$ )Bool )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun fun_app$a (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$b (A_a_llist_bool_fun_fun$ A$ )A_llist_bool_fun$ )
(declare-fun fun_app$c (A_llist_a_bool_fun_fun$ A_llist$ )A_bool_fun$ )
(declare-fun fun_app$d (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$e (A_llist_a_set_fun$ A_llist$ )A_set$ )
(declare-fun fun_app$f (A_a_llist_set_fun$ A$ )A_llist_set$ )
(declare-fun fun_app$g (A_llist_a_llist_set_fun$ A_llist$ )A_llist_set$ )
(declare-fun fun_app$h (A_a_set_fun$ A$ )A_set$ )
(declare-fun fun_app$i (A_llist_a_bool_fun_fun_a_bool_fun_fun$ A_llist_a_bool_fun_fun$ )A_bool_fun$ )
(declare-fun fun_app$j (A_a_bool_fun_fun_a_bool_fun_fun$ A_a_bool_fun_fun$ )A_bool_fun$ )
(declare-fun fun_app$k (A_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ A_a_llist_bool_fun_fun$ )A_llist_bool_fun$ )
(declare-fun fun_app$l (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$m (A_llist_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ A_llist_a_llist_bool_fun_fun$ )A_llist_bool_fun$ )
(declare-fun less_eq$a (A_llist_bool_fun$ A_llist_bool_fun$ )Bool )
(declare-fun less_eq$b (A_llist_set$ A_llist_set$ )Bool )
(declare-fun less_eq$c (A_bool_fun$ A_bool_fun$ )Bool )
(declare-fun supremum$ (A_llist_set$ A_llist_a_set_fun$ )A_set$ )
(declare-fun supremum$a (A_set$ A_a_llist_set_fun$ )A_llist_set$ )
(declare-fun supremum$b (A_llist_set$ A_llist_a_llist_set_fun$ )A_llist_set$ )
(declare-fun supremum$c (A_set$ A_a_set_fun$ )A_set$ )
(declare-fun supremum$d (A_llist_set$ )A_llist_a_bool_fun_fun_a_bool_fun_fun$ )
(declare-fun supremum$e (A_llist_set$ A_llist_bool_fun$ )Bool )
(declare-fun supremum$f (A_set$ )A_a_bool_fun_fun_a_bool_fun_fun$ )
(declare-fun supremum$g (A_set$ A_bool_fun$ )Bool )
(declare-fun supremum$h (A_set$ )A_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ )
(declare-fun supremum$i (A_llist_set$ )A_llist_a_llist_bool_fun_fun_a_llist_bool_fun_fun$ )
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist$ ))(! (= (fun_app$ (uub$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$ (uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$a (uuc$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$a (uuc$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ ))(! (= (fun_app$ (fun_app$b (uu$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$c ?v0 ?v2 )?v1 )):pattern ((fun_app$ (fun_app$b (uu$ ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$a (fun_app$d (uua$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$d ?v0 ?v2 )?v1 )):pattern ((fun_app$a (fun_app$d (uua$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (not (less_eq$ (fun_app$e lset$ (lconcat$ xss$ ))(supremum$ (lset$a xss$ )lset$ ))):named a4 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_set$ )(?v2 A_a_llist_set_fun$ ))(= (member$ ?v0 (supremum$a ?v1 ?v2 ))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(member$ ?v0 (fun_app$f ?v2 ?v3 )))))):named a5 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A_llist_a_llist_set_fun$ ))(= (member$ ?v0 (supremum$b ?v1 ?v2 ))(exists ((?v3 A_llist$ ))(and (member$ ?v3 ?v1 )(member$ ?v0 (fun_app$g ?v2 ?v3 )))))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_a_set_fun$ ))(= (member$a ?v0 (supremum$c ?v1 ?v2 ))(exists ((?v3 A$ ))(and (member$a ?v3 ?v1 )(member$a ?v0 (fun_app$h ?v2 ?v3 )))))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist_set$ )(?v2 A_llist_a_set_fun$ ))(= (member$a ?v0 (supremum$ ?v1 ?v2 ))(exists ((?v3 A_llist$ ))(and (member$ ?v3 ?v1 )(member$a ?v0 (fun_app$e ?v2 ?v3 )))))):named a8 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_llist$ )(?v3 A_a_llist_set_fun$ ))(=> (and (member$a ?v0 ?v1 )(member$ ?v2 (fun_app$f ?v3 ?v0 )))(member$ ?v2 (supremum$a ?v1 ?v3 )))):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A_llist$ )(?v3 A_llist_a_llist_set_fun$ ))(=> (and (member$ ?v0 ?v1 )(member$ ?v2 (fun_app$g ?v3 ?v0 )))(member$ ?v2 (supremum$b ?v1 ?v3 )))):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A$ )(?v3 A_a_set_fun$ ))(=> (and (member$a ?v0 ?v1 )(member$a ?v2 (fun_app$h ?v3 ?v0 )))(member$a ?v2 (supremum$c ?v1 ?v3 )))):named a11 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist_set$ )(?v2 A$ )(?v3 A_llist_a_set_fun$ ))(=> (and (member$ ?v0 ?v1 )(member$a ?v2 (fun_app$e ?v3 ?v0 )))(member$a ?v2 (supremum$ ?v1 ?v3 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_bool_fun_fun$ )(?v2 A$ ))(= (fun_app$a (fun_app$i (supremum$d ?v0 )?v1 )?v2 )(supremum$e ?v0 (fun_app$b (uu$ ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ ))(= (fun_app$a (fun_app$j (supremum$f ?v0 )?v1 )?v2 )(supremum$g ?v0 (fun_app$d (uua$ ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_llist_bool_fun_fun$ )(?v3 A_a_llist_bool_fun_fun$ ))(=> (and (less_eq$ ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$a ?v4 ?v0 )(less_eq$a (fun_app$b ?v2 ?v4 )(fun_app$b ?v3 ?v4 )))))(less_eq$a (fun_app$k (supremum$h ?v0 )?v2 )(fun_app$k (supremum$h ?v1 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ )(?v2 A_llist_a_llist_bool_fun_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ ))(=> (and (less_eq$b ?v0 ?v1 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 ?v0 )(less_eq$a (fun_app$l ?v2 ?v4 )(fun_app$l ?v3 ?v4 )))))(less_eq$a (fun_app$m (supremum$i ?v0 )?v2 )(fun_app$m (supremum$i ?v1 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_llist_set_fun$ )(?v3 A_a_llist_set_fun$ ))(=> (and (less_eq$ ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$a ?v4 ?v0 )(less_eq$b (fun_app$f ?v2 ?v4 )(fun_app$f ?v3 ?v4 )))))(less_eq$b (supremum$a ?v0 ?v2 )(supremum$a ?v1 ?v3 )))):named a17 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_bool_fun_fun$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (less_eq$ ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$a ?v4 ?v0 )(less_eq$c (fun_app$d ?v2 ?v4 )(fun_app$d ?v3 ?v4 )))))(less_eq$c (fun_app$j (supremum$f ?v0 )?v2 )(fun_app$j (supremum$f ?v1 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ )(?v2 A_llist_a_llist_set_fun$ )(?v3 A_llist_a_llist_set_fun$ ))(=> (and (less_eq$b ?v0 ?v1 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 ?v0 )(less_eq$b (fun_app$g ?v2 ?v4 )(fun_app$g ?v3 ?v4 )))))(less_eq$b (supremum$b ?v0 ?v2 )(supremum$b ?v1 ?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ )(?v2 A_llist_a_bool_fun_fun$ )(?v3 A_llist_a_bool_fun_fun$ ))(=> (and (less_eq$b ?v0 ?v1 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 ?v0 )(less_eq$c (fun_app$c ?v2 ?v4 )(fun_app$c ?v3 ?v4 )))))(less_eq$c (fun_app$i (supremum$d ?v0 )?v2 )(fun_app$i (supremum$d ?v1 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_a_set_fun$ )(?v3 A_a_set_fun$ ))(=> (and (less_eq$ ?v0 ?v1 )(forall ((?v4 A$ ))(=> (member$a ?v4 ?v0 )(less_eq$ (fun_app$h ?v2 ?v4 )(fun_app$h ?v3 ?v4 )))))(less_eq$ (supremum$c ?v0 ?v2 )(supremum$c ?v1 ?v3 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ )(?v2 A_llist_a_set_fun$ )(?v3 A_llist_a_set_fun$ ))(=> (and (less_eq$b ?v0 ?v1 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 ?v0 )(less_eq$ (fun_app$e ?v2 ?v4 )(fun_app$e ?v3 ?v4 )))))(less_eq$ (supremum$ ?v0 ?v2 )(supremum$ ?v1 ?v3 )))):named a22 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (exists ((?v3 A_llist$ ))(and (member$ ?v3 (supremum$a ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 A_llist$ ))(and (member$ ?v4 (fun_app$f ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a23 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (exists ((?v3 A_llist$ ))(and (member$ ?v3 (supremum$b ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 A_llist$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 A_llist$ ))(and (member$ ?v4 (fun_app$g ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a24 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_set_fun$ )(?v2 A_bool_fun$ ))(= (exists ((?v3 A$ ))(and (member$a ?v3 (supremum$c ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 A$ ))(and (member$a ?v4 (fun_app$h ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a25 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_set_fun$ )(?v2 A_bool_fun$ ))(= (exists ((?v3 A$ ))(and (member$a ?v3 (supremum$ ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A_llist$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 A$ ))(and (member$a ?v4 (fun_app$e ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a26 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (exists ((?v3 A_llist$ ))(and (member$ ?v3 (supremum$a ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 A_llist$ ))(and (member$ ?v4 (fun_app$f ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a27 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (exists ((?v3 A_llist$ ))(and (member$ ?v3 (supremum$b ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 A_llist$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 A_llist$ ))(and (member$ ?v4 (fun_app$g ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a28 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_set_fun$ )(?v2 A_bool_fun$ ))(= (exists ((?v3 A$ ))(and (member$a ?v3 (supremum$c ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A$ ))(and (member$a ?v3 ?v0 )(exists ((?v4 A$ ))(and (member$a ?v4 (fun_app$h ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a29 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_set_fun$ )(?v2 A_bool_fun$ ))(= (exists ((?v3 A$ ))(and (member$a ?v3 (supremum$ ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(exists ((?v3 A_llist$ ))(and (member$ ?v3 ?v0 )(exists ((?v4 A$ ))(and (member$a ?v4 (fun_app$e ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a30 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (forall ((?v3 A_llist$ ))(=> (member$ ?v3 (supremum$a ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 (fun_app$f ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a31 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (forall ((?v3 A_llist$ ))(=> (member$ ?v3 (supremum$b ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 (fun_app$g ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a32 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_set_fun$ )(?v2 A_bool_fun$ ))(= (forall ((?v3 A$ ))(=> (member$a ?v3 (supremum$c ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 A$ ))(=> (member$a ?v4 (fun_app$h ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a33 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_set_fun$ )(?v2 A_bool_fun$ ))(= (forall ((?v3 A$ ))(=> (member$a ?v3 (supremum$ ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 A$ ))(=> (member$a ?v4 (fun_app$e ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a34 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (forall ((?v3 A_llist$ ))(=> (member$ ?v3 (supremum$a ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 (fun_app$f ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a35 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_llist_set_fun$ )(?v2 A_llist_bool_fun$ ))(= (forall ((?v3 A_llist$ ))(=> (member$ ?v3 (supremum$b ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 A_llist$ ))(=> (member$ ?v4 (fun_app$g ?v1 ?v3 ))(fun_app$ ?v2 ?v4 ))))))):named a36 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_set_fun$ )(?v2 A_bool_fun$ ))(= (forall ((?v3 A$ ))(=> (member$a ?v3 (supremum$c ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(forall ((?v4 A$ ))(=> (member$a ?v4 (fun_app$h ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a37 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_set_fun$ )(?v2 A_bool_fun$ ))(= (forall ((?v3 A$ ))(=> (member$a ?v3 (supremum$ ?v0 ?v1 ))(fun_app$a ?v2 ?v3 )))(forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(forall ((?v4 A$ ))(=> (member$a ?v4 (fun_app$e ?v1 ?v3 ))(fun_app$a ?v2 ?v4 ))))))):named a38 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (forall ((?v2 A_llist$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$b ?v0 ?v1 ))):named a39 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a40 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(=> (and (less_eq$b ?v0 ?v1 )(less_eq$b ?v1 ?v0 ))(= ?v0 ?v1 ))):named a41 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a42 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_llist_set_fun$ )(?v2 A_llist_set$ ))(= (less_eq$b (supremum$a ?v0 ?v1 )?v2 )(forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(less_eq$b (fun_app$f ?v1 ?v3 )?v2 ))))):named a43 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_llist_set_fun$ )(?v2 A_llist_set$ ))(= (less_eq$b (supremum$b ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(less_eq$b (fun_app$g ?v1 ?v3 )?v2 ))))):named a44 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_set_fun$ )(?v2 A_set$ ))(= (less_eq$ (supremum$c ?v0 ?v1 )?v2 )(forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(less_eq$ (fun_app$h ?v1 ?v3 )?v2 ))))):named a45 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_set_fun$ )(?v2 A_set$ ))(= (less_eq$ (supremum$ ?v0 ?v1 )?v2 )(forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(less_eq$ (fun_app$e ?v1 ?v3 )?v2 ))))):named a46 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_llist_set_fun$ )(?v2 A_llist_set$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(less_eq$b (fun_app$f ?v1 ?v3 )?v2 )))(less_eq$b (supremum$a ?v0 ?v1 )?v2 ))):named a47 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_llist_set_fun$ )(?v2 A_llist_set$ ))(=> (forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(less_eq$b (fun_app$g ?v1 ?v3 )?v2 )))(less_eq$b (supremum$b ?v0 ?v1 )?v2 ))):named a48 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_a_set_fun$ )(?v2 A_set$ ))(=> (forall ((?v3 A$ ))(=> (member$a ?v3 ?v0 )(less_eq$ (fun_app$h ?v1 ?v3 )?v2 )))(less_eq$ (supremum$c ?v0 ?v1 )?v2 ))):named a49 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_a_set_fun$ )(?v2 A_set$ ))(=> (forall ((?v3 A_llist$ ))(=> (member$ ?v3 ?v0 )(less_eq$ (fun_app$e ?v1 ?v3 )?v2 )))(less_eq$ (supremum$ ?v0 ?v1 )?v2 ))):named a50 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ ))(= (less_eq$b ?v0 ?v1 )(less_eq$a (uub$ ?v0 )(uub$ ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (less_eq$ ?v0 ?v1 )(less_eq$c (uuc$ ?v0 )(uuc$ ?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_llist_set$ ))(less_eq$b ?v0 ?v0 )):named a53 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$ ?v0 ?v0 )):named a54 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (less_eq$b ?v0 ?v1 )(member$ ?v2 ?v0 ))(member$ ?v2 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (less_eq$ ?v0 ?v1 )(member$a ?v2 ?v0 ))(member$a ?v2 ?v1 ))):named a56 ))
(assert (! (forall ((?v0 A_llist_set$ )(?v1 A_llist_set$ )(?v2 A_llist$ ))(=> (and (less_eq$b ?v0 ?v1 )(not (member$ ?v2 ?v1 )))(not (member$ ?v2 ?v0 )))):named a57 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A$ ))(=> (and (less_eq$ ?v0 ?v1 )(not (member$a ?v2 ?v1 )))(not (member$a ?v2 ?v0 )))):named a58 ))
(check-sat )
;(get-unsat-core )
