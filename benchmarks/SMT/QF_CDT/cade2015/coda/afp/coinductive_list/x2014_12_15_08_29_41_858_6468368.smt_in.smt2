;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort Bool_a_fun$ 0 )
(declare-sort Bool_llist$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_a_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort Bool_a_fun_bool_a_fun_fun$ 0 )
(declare-sort Bool_a_fun_bool_bool_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_a_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-fun p$ ()A_bool_fun$ )
(declare-fun uu$ ()Bool_bool_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun comp$ (Bool_bool_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun lmap$ (Bool_a_fun$ Bool_llist$ )A_llist$ )
(declare-fun comp$a (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun comp$b (Bool_a_fun$ )A_bool_fun_a_a_fun_fun$ )
(declare-fun comp$c (A_bool_fun$ )Bool_a_fun_bool_bool_fun_fun$ )
(declare-fun comp$d (Bool_a_fun$ )Bool_bool_fun_bool_a_fun_fun$ )
(declare-fun comp$e (A_a_fun$ )Bool_a_fun_bool_a_fun_fun$ )
(declare-fun comp$f (Bool_bool_fun$ )Bool_bool_fun_bool_bool_fun_fun$ )
(declare-fun comp$g (A_bool_fun$ )A_a_fun_a_bool_fun_fun$ )
(declare-fun lmap$a (Bool_bool_fun$ Bool_llist$ )Bool_llist$ )
(declare-fun lmap$b (A_bool_fun$ A_llist$ )Bool_llist$ )
(declare-fun lmap$c (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$ (Bool_bool_fun$ Bool )Bool )
(declare-fun lfilter$ (A_bool_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$a (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$b (A_a_fun$ A$ )A$ )
(declare-fun fun_app$c (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$d (A_bool_fun_a_a_fun_fun$ A_bool_fun$ )A_a_fun$ )
(declare-fun fun_app$e (Bool_a_fun$ Bool )A$ )
(declare-fun fun_app$f (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$g (Bool_a_fun_bool_bool_fun_fun$ Bool_a_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$h (Bool_bool_fun_bool_a_fun_fun$ Bool_bool_fun$ )Bool_a_fun$ )
(declare-fun fun_app$i (Bool_a_fun_bool_a_fun_fun$ Bool_a_fun$ )Bool_a_fun$ )
(declare-fun fun_app$j (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$k (A_a_fun_a_bool_fun_fun$ A_a_fun$ )A_bool_fun$ )
(declare-fun ldropWhile$ (A_bool_fun$ A_llist$ )A_llist$ )
(declare-fun ldropWhile$a (Bool_bool_fun$ Bool_llist$ )Bool_llist$ )
(declare-fun unfold_llist$ (Bool_bool_fun$ Bool_bool_fun$ Bool_bool_fun$ Bool )Bool_llist$ )
(declare-fun unfold_llist$a (A_bool_fun$ A_bool_fun$ A_a_fun$ A$ )Bool_llist$ )
(assert (! (forall ((?v0 Bool ))(! (= (fun_app$ uu$ ?v0 )(not ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (not (= (lhd$ (lfilter$ p$ xs$ ))(lhd$ (ldropWhile$ (fun_app$a (comp$ uu$ )p$ )xs$ )))):named a1 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$b (fun_app$c (comp$a ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$c (comp$a ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$b (fun_app$d (comp$b ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$f ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$d (comp$b ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$g (comp$c ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$g (comp$c ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$e (fun_app$h (comp$d ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$h (comp$d ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool ))(! (= (fun_app$e (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$i (comp$e ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))):pattern ((fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ ))(= (fun_app$a (comp$ ?v0 )(fun_app$k (comp$g ?v1 )?v2 ))(fun_app$k (comp$g (fun_app$a (comp$ ?v0 )?v1 ))?v2 ))):named a10 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$a (comp$ ?v0 )(fun_app$a (comp$ ?v1 )?v2 ))(fun_app$a (comp$ (fun_app$j (comp$f ?v0 )?v1 ))?v2 ))):named a11 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_a_fun$ ))(= (fun_app$j (comp$f ?v0 )(fun_app$g (comp$c ?v1 )?v2 ))(fun_app$g (comp$c (fun_app$a (comp$ ?v0 )?v1 ))?v2 ))):named a12 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ ))(= (fun_app$j (comp$f ?v0 )(fun_app$j (comp$f ?v1 )?v2 ))(fun_app$j (comp$f (fun_app$j (comp$f ?v0 )?v1 ))?v2 ))):named a13 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$k (comp$g ?v0 )(fun_app$d (comp$b ?v1 )?v2 ))(fun_app$a (comp$ (fun_app$g (comp$c ?v0 )?v1 ))?v2 ))):named a14 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(= (fun_app$k (comp$g ?v0 )(fun_app$c (comp$a ?v1 )?v2 ))(fun_app$k (comp$g (fun_app$k (comp$g ?v0 )?v1 ))?v2 ))):named a15 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(= (fun_app$c (comp$a ?v0 )(fun_app$c (comp$a ?v1 )?v2 ))(fun_app$c (comp$a (fun_app$c (comp$a ?v0 )?v1 ))?v2 ))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Bool_a_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$c (comp$a ?v0 )(fun_app$d (comp$b ?v1 )?v2 ))(fun_app$d (comp$b (fun_app$i (comp$e ?v0 )?v1 ))?v2 ))):named a17 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$d (comp$b ?v0 )(fun_app$a (comp$ ?v1 )?v2 ))(fun_app$d (comp$b (fun_app$h (comp$d ?v0 )?v1 ))?v2 ))):named a18 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ ))(= (fun_app$d (comp$b ?v0 )(fun_app$k (comp$g ?v1 )?v2 ))(fun_app$c (comp$a (fun_app$d (comp$b ?v0 )?v1 ))?v2 ))):named a19 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ ))(= (fun_app$k (comp$g (fun_app$a (comp$ ?v0 )?v1 ))?v2 )(fun_app$a (comp$ ?v0 )(fun_app$k (comp$g ?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$a (comp$ (fun_app$j (comp$f ?v0 )?v1 ))?v2 )(fun_app$a (comp$ ?v0 )(fun_app$a (comp$ ?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_a_fun$ ))(= (fun_app$g (comp$c (fun_app$a (comp$ ?v0 )?v1 ))?v2 )(fun_app$j (comp$f ?v0 )(fun_app$g (comp$c ?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$a (comp$ (fun_app$g (comp$c ?v0 )?v1 ))?v2 )(fun_app$k (comp$g ?v0 )(fun_app$d (comp$b ?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ ))(= (fun_app$j (comp$f (fun_app$j (comp$f ?v0 )?v1 ))?v2 )(fun_app$j (comp$f ?v0 )(fun_app$j (comp$f ?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(= (fun_app$k (comp$g (fun_app$k (comp$g ?v0 )?v1 ))?v2 )(fun_app$k (comp$g ?v0 )(fun_app$c (comp$a ?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_bool_fun$ ))(= (fun_app$j (comp$f (fun_app$g (comp$c ?v0 )?v1 ))?v2 )(fun_app$g (comp$c ?v0 )(fun_app$h (comp$d ?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ ))(= (fun_app$c (comp$a (fun_app$c (comp$a ?v0 )?v1 ))?v2 )(fun_app$c (comp$a ?v0 )(fun_app$c (comp$a ?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ ))(= (fun_app$c (comp$a (fun_app$d (comp$b ?v0 )?v1 ))?v2 )(fun_app$d (comp$b ?v0 )(fun_app$k (comp$g ?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$d (comp$b (fun_app$h (comp$d ?v0 )?v1 ))?v2 )(fun_app$d (comp$b ?v0 )(fun_app$a (comp$ ?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$b (fun_app$c (comp$a ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$c (comp$a ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$b (fun_app$d (comp$b ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$f ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$d (comp$b ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$g (comp$c ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$g (comp$c ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$e (fun_app$h (comp$d ?v0 )?v1 )?v2 )(fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$h (comp$d ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool ))(! (= (fun_app$e (fun_app$i (comp$e ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$i (comp$e ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool ))(! (= (fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )(fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))):pattern ((fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$ ?v0 (fun_app$f ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$f ?v3 ?v4 ))))false ))false )):named a38 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$k (comp$g ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$ ?v0 (fun_app$f ?v1 ?v4 ))(fun_app$f ?v2 (fun_app$b ?v3 ?v4 ))))false ))false )):named a39 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (and (= (fun_app$j (comp$f ?v0 )?v1 )(fun_app$j (comp$f ?v2 )?v3 ))(=> (forall ((?v4 Bool ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))false ))false )):named a40 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (and (= (fun_app$k (comp$g ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$f ?v0 (fun_app$b ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$f ?v3 ?v4 ))))false ))false )):named a41 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ ))(=> (and (= (fun_app$k (comp$g ?v0 )?v1 )(fun_app$k (comp$g ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$f ?v0 (fun_app$b ?v1 ?v4 ))(fun_app$f ?v2 (fun_app$b ?v3 ?v4 ))))false ))false )):named a42 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ )(?v3 Bool_a_fun$ ))(=> (and (= (fun_app$j (comp$f ?v0 )?v1 )(fun_app$g (comp$c ?v2 )?v3 ))(=> (forall ((?v4 Bool ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$f ?v2 (fun_app$e ?v3 ?v4 ))))false ))false )):named a43 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ ))(=> (and (= (fun_app$c (comp$a ?v0 )?v1 )(fun_app$c (comp$a ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$b ?v0 (fun_app$b ?v1 ?v4 ))(fun_app$b ?v2 (fun_app$b ?v3 ?v4 ))))false ))false )):named a44 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 Bool_a_fun$ )(?v3 A_bool_fun$ ))(=> (and (= (fun_app$c (comp$a ?v0 )?v1 )(fun_app$d (comp$b ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$b ?v0 (fun_app$b ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$f ?v3 ?v4 ))))false ))false )):named a45 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ ))(=> (and (= (fun_app$d (comp$b ?v0 )?v1 )(fun_app$c (comp$a ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$e ?v0 (fun_app$f ?v1 ?v4 ))(fun_app$b ?v2 (fun_app$b ?v3 ?v4 ))))false ))false )):named a46 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_a_fun$ )(?v3 A_bool_fun$ ))(=> (and (= (fun_app$d (comp$b ?v0 )?v1 )(fun_app$d (comp$b ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$e ?v0 (fun_app$f ?v1 ?v4 ))(fun_app$e ?v2 (fun_app$f ?v3 ?v4 ))))false ))false )):named a47 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$k (comp$g ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$j (comp$f ?v4 )?v2 )?v5 ))(= (fun_app$k (comp$g (fun_app$a (comp$ ?v4 )?v0 ))?v1 )(fun_app$a (comp$ ?v5 )?v3 )))):named a48 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 Bool_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$k (comp$g ?v2 )?v3 ))(= (fun_app$a (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$ (fun_app$j (comp$f ?v4 )?v0 ))?v1 )(fun_app$k (comp$g ?v5 )?v3 )))):named a49 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$j (comp$f ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$ (fun_app$j (comp$f ?v4 )?v0 ))?v1 )(fun_app$a (comp$ ?v5 )?v3 )))):named a50 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_a_fun$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$i (comp$e ?v0 )?v1 )(fun_app$h (comp$d ?v2 )?v3 ))(= (fun_app$g (comp$c ?v4 )?v2 )?v5 ))(= (fun_app$g (comp$c (fun_app$k (comp$g ?v4 )?v0 ))?v1 )(fun_app$j (comp$f ?v5 )?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 Bool_a_fun$ )(?v3 A_bool_fun$ )(?v4 A_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$c (comp$a ?v0 )?v1 )(fun_app$d (comp$b ?v2 )?v3 ))(= (fun_app$g (comp$c ?v4 )?v2 )?v5 ))(= (fun_app$k (comp$g (fun_app$k (comp$g ?v4 )?v0 ))?v1 )(fun_app$a (comp$ ?v5 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$d (comp$b ?v0 )?v1 )(fun_app$c (comp$a ?v2 )?v3 ))(= (fun_app$k (comp$g ?v4 )?v2 )?v5 ))(= (fun_app$a (comp$ (fun_app$g (comp$c ?v4 )?v0 ))?v1 )(fun_app$k (comp$g ?v5 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_a_fun$ )(?v3 Bool_a_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$h (comp$d ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(= (fun_app$k (comp$g ?v4 )?v2 )?v5 ))(= (fun_app$j (comp$f (fun_app$g (comp$c ?v4 )?v0 ))?v1 )(fun_app$g (comp$c ?v5 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 A_a_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$c (comp$a ?v0 )?v1 )(fun_app$c (comp$a ?v2 )?v3 ))(= (fun_app$k (comp$g ?v4 )?v2 )?v5 ))(= (fun_app$k (comp$g (fun_app$k (comp$g ?v4 )?v0 ))?v1 )(fun_app$k (comp$g ?v5 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$g (comp$c ?v0 )?v1 )(fun_app$j (comp$f ?v2 )?v3 ))(= (fun_app$j (comp$f ?v4 )?v2 )?v5 ))(= (fun_app$g (comp$c (fun_app$a (comp$ ?v4 )?v0 ))?v1 )(fun_app$j (comp$f ?v5 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ )(?v3 Bool_a_fun$ )(?v4 Bool_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$j (comp$f ?v0 )?v1 )(fun_app$g (comp$c ?v2 )?v3 ))(= (fun_app$a (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$j (comp$f (fun_app$j (comp$f ?v4 )?v0 ))?v1 )(fun_app$g (comp$c ?v5 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$j (comp$f ?v0 )?v1 )(fun_app$j (comp$f ?v2 )?v3 ))(= (fun_app$a (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$ ?v0 )(fun_app$a (comp$ ?v1 )?v4 ))(fun_app$a (comp$ ?v2 )?v5 )))):named a58 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$k (comp$g ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$ ?v0 )(fun_app$k (comp$g ?v1 )?v4 ))(fun_app$a (comp$ ?v2 )?v5 )))):named a59 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$g (comp$c ?v0 )?v1 )(fun_app$j (comp$f ?v2 )?v3 ))(= (fun_app$a (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$k (comp$g ?v0 )(fun_app$d (comp$b ?v1 )?v4 ))(fun_app$a (comp$ ?v2 )?v5 )))):named a60 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 Bool_a_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$g (comp$c ?v3 )?v4 )?v5 ))(= (fun_app$j (comp$f ?v0 )(fun_app$g (comp$c ?v1 )?v4 ))(fun_app$j (comp$f ?v2 )?v5 )))):named a61 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 A_a_fun$ )(?v5 A_a_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$k (comp$g ?v2 )?v3 ))(= (fun_app$c (comp$a ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$ ?v0 )(fun_app$k (comp$g ?v1 )?v4 ))(fun_app$k (comp$g ?v2 )?v5 )))):named a62 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 Bool_a_fun$ )(?v5 Bool_a_fun$ ))(=> (and (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$k (comp$g ?v2 )?v3 ))(= (fun_app$i (comp$e ?v3 )?v4 )?v5 ))(= (fun_app$j (comp$f ?v0 )(fun_app$g (comp$c ?v1 )?v4 ))(fun_app$g (comp$c ?v2 )?v5 )))):named a63 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ )(?v3 Bool_a_fun$ )(?v4 A_bool_fun$ )(?v5 A_a_fun$ ))(=> (and (= (fun_app$j (comp$f ?v0 )?v1 )(fun_app$g (comp$c ?v2 )?v3 ))(= (fun_app$d (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$ ?v0 )(fun_app$a (comp$ ?v1 )?v4 ))(fun_app$k (comp$g ?v2 )?v5 )))):named a64 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$j (comp$f ?v0 )?v1 )(fun_app$j (comp$f ?v2 )?v3 ))(= (fun_app$j (comp$f ?v3 )?v4 )?v5 ))(= (fun_app$j (comp$f ?v0 )(fun_app$j (comp$f ?v1 )?v4 ))(fun_app$j (comp$f ?v2 )?v5 )))):named a65 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 Bool_a_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$k (comp$g ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$g (comp$c ?v3 )?v4 )?v5 ))(= (fun_app$g (comp$c ?v0 )(fun_app$i (comp$e ?v1 )?v4 ))(fun_app$j (comp$f ?v2 )?v5 )))):named a66 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$k (comp$g ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$k (comp$g ?v3 )?v4 )?v5 ))(= (fun_app$k (comp$g ?v0 )(fun_app$c (comp$a ?v1 )?v4 ))(fun_app$a (comp$ ?v2 )?v5 )))):named a67 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Bool_a_fun$ )(?v2 A_a_fun$ )(?v3 Bool_a_fun$ )(?v4 Bool ))(=> (= (fun_app$i (comp$e ?v0 )?v1 )(fun_app$i (comp$e ?v2 )?v3 ))(= (fun_app$b ?v0 (fun_app$e ?v1 ?v4 ))(fun_app$b ?v2 (fun_app$e ?v3 ?v4 ))))):named a68 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 A$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$k (comp$g ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$f ?v1 ?v4 ))(fun_app$f ?v2 (fun_app$b ?v3 ?v4 ))))):named a69 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 Bool ))(=> (= (fun_app$j (comp$f ?v0 )?v1 )(fun_app$j (comp$f ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$ ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$ ?v3 ?v4 ))))):named a70 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 A$ ))(=> (= (fun_app$k (comp$g ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$f ?v0 (fun_app$b ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$f ?v3 ?v4 ))))):named a71 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 A$ ))(=> (= (fun_app$k (comp$g ?v0 )?v1 )(fun_app$k (comp$g ?v2 )?v3 ))(= (fun_app$f ?v0 (fun_app$b ?v1 ?v4 ))(fun_app$f ?v2 (fun_app$b ?v3 ?v4 ))))):named a72 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 A$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )(fun_app$a (comp$ ?v2 )?v3 ))(= (fun_app$ ?v0 (fun_app$f ?v1 ?v4 ))(fun_app$ ?v2 (fun_app$f ?v3 ?v4 ))))):named a73 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$g (comp$c ?v0 )?v1 )?v2 )(= (fun_app$g (comp$c (fun_app$a (comp$ ?v3 )?v0 ))?v1 )(fun_app$j (comp$f ?v3 )?v2 )))):named a74 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$d (comp$b ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ (fun_app$g (comp$c ?v3 )?v0 ))?v1 )(fun_app$k (comp$g ?v3 )?v2 )))):named a75 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$c (comp$a ?v0 )?v1 )?v2 )(= (fun_app$k (comp$g (fun_app$k (comp$g ?v3 )?v0 ))?v1 )(fun_app$k (comp$g ?v3 )?v2 )))):named a76 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$j (comp$f ?v0 )?v1 )?v2 )(= (fun_app$j (comp$f (fun_app$j (comp$f ?v3 )?v0 ))?v1 )(fun_app$j (comp$f ?v3 )?v2 )))):named a77 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$k (comp$g ?v0 )?v1 )?v2 )(= (fun_app$k (comp$g (fun_app$a (comp$ ?v3 )?v0 ))?v1 )(fun_app$a (comp$ ?v3 )?v2 )))):named a78 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ (fun_app$j (comp$f ?v3 )?v0 ))?v1 )(fun_app$a (comp$ ?v3 )?v2 )))):named a79 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$g (comp$c ?v0 )?v1 )?v2 )(= (fun_app$k (comp$g ?v0 )(fun_app$d (comp$b ?v1 )?v3 ))(fun_app$a (comp$ ?v2 )?v3 )))):named a80 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 Bool_a_fun$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$j (comp$f ?v0 )(fun_app$g (comp$c ?v1 )?v3 ))(fun_app$g (comp$c ?v2 )?v3 )))):named a81 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$j (comp$f ?v0 )?v1 )?v2 )(= (fun_app$j (comp$f ?v0 )(fun_app$j (comp$f ?v1 )?v3 ))(fun_app$j (comp$f ?v2 )?v3 )))):named a82 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ ))(=> (= (fun_app$k (comp$g ?v0 )?v1 )?v2 )(= (fun_app$k (comp$g ?v0 )(fun_app$c (comp$a ?v1 )?v3 ))(fun_app$k (comp$g ?v2 )?v3 )))):named a83 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$j (comp$f ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ ?v0 )(fun_app$a (comp$ ?v1 )?v3 ))(fun_app$a (comp$ ?v2 )?v3 )))):named a84 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$a (comp$ ?v0 )(fun_app$k (comp$g ?v1 )?v3 ))(fun_app$k (comp$g ?v2 )?v3 )))):named a85 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool ))(=> (= (fun_app$j (comp$f ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$ ?v2 ?v3 )))):named a86 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 A$ ))(=> (= (fun_app$k (comp$g ?v0 )?v1 )?v2 )(= (fun_app$f ?v0 (fun_app$b ?v1 ?v3 ))(fun_app$f ?v2 ?v3 )))):named a87 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A$ ))(=> (= (fun_app$a (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ ?v0 (fun_app$f ?v1 ?v3 ))(fun_app$f ?v2 ?v3 )))):named a88 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$f ?v4 ?v2 )))(= (fun_app$f (fun_app$k (comp$g (fun_app$a (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$f (fun_app$a (comp$ (fun_app$j (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a89 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$b ?v4 ?v2 )))(= (fun_app$f (fun_app$a (comp$ (fun_app$j (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$f (fun_app$k (comp$g (fun_app$a (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a90 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$f ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$g (comp$c (fun_app$a (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$j (comp$f (fun_app$j (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a91 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool )(?v3 Bool_a_fun$ )(?v4 Bool_bool_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$b ?v0 (fun_app$e ?v1 ?v2 ))(fun_app$e ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$g (comp$c (fun_app$k (comp$g ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$j (comp$f (fun_app$g (comp$c ?v5 )?v3 ))?v4 )?v2 )))):named a92 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_a_fun$ )(?v4 A_a_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$b ?v3 (fun_app$b ?v4 ?v2 )))(= (fun_app$f (fun_app$a (comp$ (fun_app$g (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$f (fun_app$k (comp$g (fun_app$k (comp$g ?v5 )?v3 ))?v4 )?v2 )))):named a93 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$f ?v4 ?v2 )))(= (fun_app$f (fun_app$a (comp$ (fun_app$j (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$f (fun_app$a (comp$ (fun_app$j (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a94 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 A_a_fun$ )(?v4 Bool_a_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$e ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$b ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$ (fun_app$j (comp$f (fun_app$g (comp$c ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$g (comp$c (fun_app$k (comp$g ?v5 )?v3 ))?v4 )?v2 )))):named a95 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 A_bool_fun$ )(?v4 Bool_a_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$e ?v4 ?v2 )))(= (fun_app$ (fun_app$j (comp$f (fun_app$j (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$g (comp$c (fun_app$a (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a96 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$j (comp$f (fun_app$j (comp$f ?v5 )?v0 ))?v1 )?v2 )(fun_app$ (fun_app$j (comp$f (fun_app$j (comp$f ?v5 )?v3 ))?v4 )?v2 )))):named a97 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ )(?v5 Bool_bool_fun$ ))(=> (= (fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$b ?v4 ?v2 )))(= (fun_app$f (fun_app$k (comp$g (fun_app$a (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$f (fun_app$k (comp$g (fun_app$a (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a98 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool ))(=> (= (fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$j (comp$f ?v3 )?v4 )?v5 )))):named a99 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ )(?v5 A$ ))(=> (= (fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$b ?v4 ?v5 )))(= (fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$f (fun_app$k (comp$g ?v3 )?v4 )?v5 )))):named a100 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 A$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$f ?v4 ?v5 )))(= (fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )(fun_app$f (fun_app$a (comp$ ?v3 )?v4 )?v5 )))):named a101 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )(fun_app$ (fun_app$j (comp$f ?v3 )?v4 )?v5 )))):named a102 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 A_bool_fun$ )(?v4 A_a_fun$ )(?v5 A$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$b ?v4 ?v5 )))(= (fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )(fun_app$f (fun_app$k (comp$g ?v3 )?v4 )?v5 )))):named a103 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 A$ ))(=> (= (fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$f ?v4 ?v5 )))(= (fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )(fun_app$f (fun_app$a (comp$ ?v3 )?v4 )?v5 )))):named a104 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ )(?v5 Bool ))(=> (= (fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v5 )))(= (fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )(fun_app$ (fun_app$j (comp$f ?v3 )?v4 )?v5 )))):named a105 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ )(?v5 A$ ))(=> (= (fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$b ?v4 ?v5 )))(= (fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )(fun_app$f (fun_app$k (comp$g ?v3 )?v4 )?v5 )))):named a106 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 A$ ))(=> (= (fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$f ?v4 ?v5 )))(= (fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$f (fun_app$a (comp$ ?v3 )?v4 )?v5 )))):named a107 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$b ?v4 ?v2 )))(= (fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$f (fun_app$k (comp$g ?v3 )?v4 )?v2 )))):named a108 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool )(?v3 Bool_bool_fun$ )(?v4 Bool_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$ ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$ ?v4 ?v2 )))(= (fun_app$ (fun_app$j (comp$f ?v0 )?v1 )?v2 )(fun_app$ (fun_app$j (comp$f ?v3 )?v4 )?v2 )))):named a109 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ ))(=> (= (fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$f ?v4 ?v2 )))(= (fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )(fun_app$f (fun_app$a (comp$ ?v3 )?v4 )?v2 )))):named a110 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_bool_fun$ )(?v4 A_a_fun$ ))(=> (= (fun_app$f ?v0 (fun_app$b ?v1 ?v2 ))(fun_app$f ?v3 (fun_app$b ?v4 ?v2 )))(= (fun_app$f (fun_app$k (comp$g ?v0 )?v1 )?v2 )(fun_app$f (fun_app$k (comp$g ?v3 )?v4 )?v2 )))):named a111 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ ))(=> (= (fun_app$ ?v0 (fun_app$f ?v1 ?v2 ))(fun_app$ ?v3 (fun_app$f ?v4 ?v2 )))(= (fun_app$f (fun_app$a (comp$ ?v0 )?v1 )?v2 )(fun_app$f (fun_app$a (comp$ ?v3 )?v4 )?v2 )))):named a112 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool ))(= (unfold_llist$ ?v0 ?v1 ?v2 (fun_app$ ?v2 ?v3 ))(unfold_llist$ (fun_app$j (comp$f ?v0 )?v2 )(fun_app$j (comp$f ?v1 )?v2 )?v2 ?v3 ))):named a113 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (unfold_llist$a ?v0 ?v1 ?v2 (fun_app$b ?v2 ?v3 ))(unfold_llist$a (fun_app$k (comp$g ?v0 )?v2 )(fun_app$k (comp$g ?v1 )?v2 )?v2 ?v3 ))):named a114 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_llist$ ))(= (ldropWhile$ ?v0 (lmap$ ?v1 ?v2 ))(lmap$ ?v1 (ldropWhile$a (fun_app$g (comp$c ?v0 )?v1 )?v2 )))):named a115 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_llist$ ))(= (ldropWhile$a ?v0 (lmap$a ?v1 ?v2 ))(lmap$a ?v1 (ldropWhile$a (fun_app$j (comp$f ?v0 )?v1 )?v2 )))):named a116 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_llist$ ))(= (ldropWhile$a ?v0 (lmap$b ?v1 ?v2 ))(lmap$b ?v1 (ldropWhile$ (fun_app$a (comp$ ?v0 )?v1 )?v2 )))):named a117 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ ))(= (ldropWhile$ ?v0 (lmap$c ?v1 ?v2 ))(lmap$c ?v1 (ldropWhile$ (fun_app$k (comp$g ?v0 )?v1 )?v2 )))):named a118 ))
(check-sat )
;(get-unsat-core )
