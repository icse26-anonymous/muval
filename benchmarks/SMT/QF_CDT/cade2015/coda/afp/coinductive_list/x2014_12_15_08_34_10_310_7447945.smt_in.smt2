;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort Nat_set$ 0 )
(declare-sort A_nat_fun$ 0 )
(declare-sort Nat_a_fun$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort A_a_a_prod_fun$ 0 )
(declare-sort A_nat_a_fun_fun$ 0 )
(declare-sort A_a_nat_prod_fun$ 0 )
(declare-sort A_nat_a_prod_fun$ 0 )
(declare-sort A_nat_prod_a_fun$ 0 )
(declare-sort Nat_a_a_prod_fun$ 0 )
(declare-sort A_nat_bool_fun_fun$ 0 )
(declare-sort A_nat_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_fun$ 0 )
(declare-sort Nat_a_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_bool_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort A_a_a_a_prod_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_fun$ 0 )
(declare-sort Nat_nat_prod_bool_fun$ 0 )
(declare-sort A_a_a_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_a_nat_prod_prod_fun$ 0 )
(declare-sort A_a_nat_prod_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_a_a_prod_fun$ 0 )
(declare-sort A_a_nat_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_a_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_a_fun_fun$ 0 )
(declare-sort Nat_a_nat_a_prod_fun_fun$ 0 )
(declare-sort Nat_nat_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_nat_prod_nat_prod_fun$ 0 )
(declare-sort A_a_prod_nat_nat_prod_fun$ 0 )
(declare-sort A_nat_nat_prod_a_prod_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_fun$ 0 )
(declare-sort Nat_a_a_nat_prod_prod_fun$ 0 )
(declare-sort Nat_a_nat_prod_a_prod_fun$ 0 )
(declare-sort Nat_a_prod_nat_a_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_a_prod_fun$ 0 )
(declare-sort A_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_a_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_bool_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_a_nat_prod_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_prod_bool_fun$ 0 )
(declare-sort Nat_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort A_a_a_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort A_a_a_nat_prod_a_prod_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_nat_prod_prod_fun$ 0 )
(declare-sort A_a_prod_a_nat_prod_a_prod_fun$ 0 )
(declare-sort A_a_nat_prod_a_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_a_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort A_a_nat_prod_prod_a_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_a_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_prod_fun$ 0 )
(declare-sort A_nat_a_nat_prod_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_prod_a_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_a_nat_prod_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_nat_prod_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_a_a_nat_prod_a_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_nat_prod_prod_fun$ 0 )
(declare-sort A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_prod_a_a_prod_fun$ 0 )
(declare-sort A_nat_prod_a_prod_a_nat_prod_a_prod_fun$ 0 )
(declare-sort A_nat_prod_a_a_nat_prod_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_a_prod_fun_fun$ 0 )
(declare-sort Nat_nat_fun_a_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_a_prod_a_nat_prod_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_prod_a_nat_prod_a_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun$ 0 )
(declare-sort Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ 0 )
(declare-sort A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_bool_fun_a_nat_prod_bool_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_prod_a_nat_prod_nat_prod_fun$ 0 )
(declare-sort Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_prod_nat_nat_prod_a_prod_fun$ 0 )
(declare-sort A_nat_a_nat_prod_fun_fun_a_nat_a_fun_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_nat_prod_a_prod_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_prod_nat_nat_nat_prod_prod_fun$ 0 )
(declare-sort Nat_nat_prod_bool_fun_nat_nat_prod_bool_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_prod_nat_nat_prod_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_prod_a_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_prod_a_nat_prod_a_prod_fun$ 0 )
(declare-sort A_nat_a_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_prod_bool_fun_a_nat_prod_nat_prod_bool_fun_fun$ 0 )
(declare-sort A_nat_a_nat_prod_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_fun_fun_a_nat_prod_nat_a_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_fun_fun_a_nat_prod_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun_a_nat_prod_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-sort A_nat_prod$ 0)
(declare-fun fst$ (A_nat_prod$)A$)
(declare-fun snd$ (A_nat_prod$)Nat$)
(declare-fun pair$ (A$ Nat$ )A_nat_prod$)
(declare-codatatypes ()((A_nat_prod_llist$ (lNil$a )(lCons$a (lhd$a A_nat_prod$ )(ltl$a A_nat_prod_llist$ )))(Nat_llist$ (lNil$b )(lCons$b (lhd$b Nat$ )(ltl$b Nat_llist$ )))))
(declare-sort A_nat_prod_nat_prod$ 0)
(declare-fun fst$a (A_nat_prod_nat_prod$)A_nat_prod$)
(declare-fun snd$a (A_nat_prod_nat_prod$)Nat$)
(declare-fun pair$a (A_nat_prod$ Nat$ )A_nat_prod_nat_prod$)
(declare-codatatypes ()((A_nat_prod_nat_prod_llist$ (lNil$c )(lCons$c (lhd$c A_nat_prod_nat_prod$ )(ltl$c A_nat_prod_nat_prod_llist$ )))))
(declare-sort Nat_nat_prod$ 0)
(declare-fun fst$b (Nat_nat_prod$)Nat$)
(declare-fun snd$b (Nat_nat_prod$)Nat$)
(declare-fun pair$b (Nat$ Nat$ )Nat_nat_prod$)
(declare-codatatypes ()((Nat_nat_prod_llist$ (lNil$d )(lCons$d (lhd$d Nat_nat_prod$ )(ltl$d Nat_nat_prod_llist$ )))))
(declare-sort A_a_prod$ 0)
(declare-fun fst$c (A_a_prod$)A$)
(declare-fun snd$c (A_a_prod$)A$)
(declare-fun pair$c (A$ A$ )A_a_prod$)
(declare-codatatypes ()((A_a_prod_llist$ (lNil$e )(lCons$e (lhd$e A_a_prod$ )(ltl$e A_a_prod_llist$ )))))
(declare-sort Nat_a_nat_prod_prod$ 0)
(declare-fun fst$d (Nat_a_nat_prod_prod$)Nat$)
(declare-fun snd$d (Nat_a_nat_prod_prod$)A_nat_prod$)
(declare-fun pair$d (Nat$ A_nat_prod$ )Nat_a_nat_prod_prod$)
(declare-codatatypes ()((Nat_a_nat_prod_prod_llist$ (lNil$f )(lCons$f (lhd$f Nat_a_nat_prod_prod$ )(ltl$f Nat_a_nat_prod_prod_llist$ )))))
(declare-sort Nat_a_prod$ 0)
(declare-fun fst$e (Nat_a_prod$)Nat$)
(declare-fun snd$e (Nat_a_prod$)A$)
(declare-fun pair$e (Nat$ A$ )Nat_a_prod$)
(declare-codatatypes ()((Nat_a_prod_llist$ (lNil$g )(lCons$g (lhd$g Nat_a_prod$ )(ltl$g Nat_a_prod_llist$ )))))
(declare-sort A_nat_nat_prod_prod$ 0)
(declare-fun fst$f (A_nat_nat_prod_prod$)A$)
(declare-fun snd$f (A_nat_nat_prod_prod$)Nat_nat_prod$)
(declare-fun pair$f (A$ Nat_nat_prod$ )A_nat_nat_prod_prod$)
(declare-codatatypes ()((A_nat_nat_prod_prod_llist$ (lNil$h )(lCons$h (lhd$h A_nat_nat_prod_prod$ )(ltl$h A_nat_nat_prod_prod_llist$ )))))
(declare-sort A_a_nat_prod_prod$ 0)
(declare-fun fst$g (A_a_nat_prod_prod$)A$)
(declare-fun snd$g (A_a_nat_prod_prod$)A_nat_prod$)
(declare-fun pair$g (A$ A_nat_prod$ )A_a_nat_prod_prod$)
(declare-codatatypes ()((A_a_nat_prod_prod_llist$ (lNil$i )(lCons$i (lhd$i A_a_nat_prod_prod$ )(ltl$i A_a_nat_prod_prod_llist$ )))))
(declare-sort A_nat_prod_a_nat_prod_prod$ 0)
(declare-fun fst$h (A_nat_prod_a_nat_prod_prod$)A_nat_prod$)
(declare-fun snd$h (A_nat_prod_a_nat_prod_prod$)A_nat_prod$)
(declare-fun pair$h (A_nat_prod$ A_nat_prod$ )A_nat_prod_a_nat_prod_prod$)
(declare-codatatypes ()((A_nat_prod_a_nat_prod_prod_llist$ (lNil$j )(lCons$j (lhd$j A_nat_prod_a_nat_prod_prod$ )(ltl$j A_nat_prod_a_nat_prod_prod_llist$ )))))
(declare-sort A_nat_prod_a_prod$ 0)
(declare-fun fst$i (A_nat_prod_a_prod$)A_nat_prod$)
(declare-fun snd$i (A_nat_prod_a_prod$)A$)
(declare-fun pair$i (A_nat_prod$ A$ )A_nat_prod_a_prod$)
(declare-codatatypes ()((A_nat_prod_a_prod_llist$ (lNil$k )(lCons$k (lhd$k A_nat_prod_a_prod$ )(ltl$k A_nat_prod_a_prod_llist$ )))))
(declare-sort Nat_nat_nat_prod_prod$ 0)
(declare-fun fst$j (Nat_nat_nat_prod_prod$)Nat$)
(declare-fun snd$j (Nat_nat_nat_prod_prod$)Nat_nat_prod$)
(declare-fun pair$j (Nat$ Nat_nat_prod$ )Nat_nat_nat_prod_prod$)
(declare-codatatypes ()((Nat_nat_nat_prod_prod_llist$ (lNil$l )(lCons$l (lhd$l Nat_nat_nat_prod_prod$ )(ltl$l Nat_nat_nat_prod_prod_llist$ )))))
(declare-sort Nat_nat_prod_nat_prod$ 0)
(declare-fun fst$k (Nat_nat_prod_nat_prod$)Nat_nat_prod$)
(declare-fun snd$k (Nat_nat_prod_nat_prod$)Nat$)
(declare-fun pair$k (Nat_nat_prod$ Nat$ )Nat_nat_prod_nat_prod$)
(declare-codatatypes ()((Nat_nat_prod_nat_prod_llist$ (lNil$m )(lCons$m (lhd$m Nat_nat_prod_nat_prod$ )(ltl$m Nat_nat_prod_nat_prod_llist$ )))))
(declare-sort Nat_nat_prod_a_prod$ 0)
(declare-fun fst$l (Nat_nat_prod_a_prod$)Nat_nat_prod$)
(declare-fun snd$l (Nat_nat_prod_a_prod$)A$)
(declare-fun pair$l (Nat_nat_prod$ A$ )Nat_nat_prod_a_prod$)
(declare-codatatypes ()((Nat_nat_prod_a_prod_llist$ (lNil$n )(lCons$n (lhd$n Nat_nat_prod_a_prod$ )(ltl$n Nat_nat_prod_a_prod_llist$ )))))
(declare-fun a$ ()Nat_set$ )
(declare-fun n$ ()Nat$ )
(declare-fun uu$ ()A_nat_prod_a_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun suc$ ()Nat_nat_fun$ )
(declare-fun uua$ ()A_nat_bool_fun_fun$ )
(declare-fun uub$ ()A_nat_bool_fun_fun$ )
(declare-fun uuc$ ()A_a_prod_a_a_prod_fun$ )
(declare-fun uud$ ()Nat_nat_fun$ )
(declare-fun uue$ ()A_a_fun$ )
(declare-fun uuf$ ()A_nat_prod_a_nat_prod_fun$ )
(declare-fun uug$ ()A_nat_prod_nat_prod_bool_fun$ )
(declare-fun uuh$ ()Nat_nat_prod_bool_fun$ )
(declare-fun uui$ ()A_nat_prod_bool_fun$ )
(declare-fun uuj$ ()A_nat_a_nat_prod_fun_fun$ )
(declare-fun uuk$ (A_nat_prod_nat_prod_bool_fun$ )A_nat_prod_nat_prod_bool_fun_a_nat_prod_nat_prod_bool_fun_fun$ )
(declare-fun uul$ (Nat_nat_prod_bool_fun$ )Nat_nat_prod_bool_fun_nat_nat_prod_bool_fun_fun$ )
(declare-fun uum$ (A_nat_prod_bool_fun$ )A_nat_prod_bool_fun_a_nat_prod_bool_fun_fun$ )
(declare-fun uun$ (Bool A_nat_bool_fun_fun$ )A_nat_bool_fun_fun$ )
(declare-fun uuo$ ()Nat_nat_prod_nat_fun$ )
(declare-fun uup$ (Nat_set$ )Nat_nat_bool_fun_fun$ )
(declare-fun uuq$ ()A_nat_prod_nat_prod_a_nat_prod_fun$ )
(declare-fun uur$ (Nat_set$ )A_nat_prod_nat_bool_fun_fun$ )
(declare-fun uus$ (Nat_set$ )A_nat_bool_fun_fun$ )
(declare-fun uut$ ()Nat_nat_nat_fun_fun$ )
(declare-fun uuu$ ()A_nat_prod_nat_a_nat_prod_fun_fun$ )
(declare-fun uuv$ ()A_nat_a_fun_fun$ )
(declare-fun uuw$ (A_a_fun$ )Nat_nat_fun_a_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uux$ (A_nat_prod_a_fun$ A_nat_prod_a_fun$ )A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ )
(declare-fun uuy$ (A_nat_prod_a_fun$ A_nat_prod_a_nat_prod_fun$ )A_nat_prod_a_nat_prod_a_a_nat_prod_prod_fun_fun$ )
(declare-fun uuz$ (A_nat_prod_a_nat_prod_fun$ A_nat_prod_a_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_prod_fun_fun$ )
(declare-fun uva$ (A_nat_prod_a_nat_prod_fun$ A_nat_prod_a_nat_prod_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uvb$ (A_nat_fun$ A_nat_fun$ )A_a_nat_nat_prod_fun_fun$ )
(declare-fun uvc$ (Nat_a_fun$ Nat_a_fun$ )Nat_nat_a_a_prod_fun_fun$ )
(declare-fun uvd$ (Nat_a_fun$ )Nat_nat_fun_nat_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uve$ (A_nat_fun$ Nat_nat_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvf$ (Nat_nat_fun$ Nat_nat_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvg$ (Nat_nat_fun$ A_a_fun$ )Nat_a_nat_a_prod_fun_fun$ )
(declare-fun uvh$ (A_a_fun$ A_a_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uvi$ (Nat_nat_fun$ A_nat_prod_a_nat_prod_fun$ )Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ )
(declare-fun uvj$ (Nat_nat_fun$ Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ )
(declare-fun uvk$ (A_nat_prod_a_nat_prod_fun$ Nat_nat_fun$ )A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun$ )
(declare-fun uvl$ (A_nat_prod_a_nat_prod_fun$ A_a_fun$ )A_nat_prod_a_a_nat_prod_a_prod_fun_fun$ )
(declare-fun uvm$ (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_fun$ )Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ )
(declare-fun uvn$ (Nat_nat_prod_nat_nat_prod_fun$ A_a_fun$ )Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ )
(declare-fun uvo$ (Nat_nat_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun uvp$ (A_nat_fun$ )A_a_a_nat_prod_fun_fun$ )
(declare-fun uvq$ (Nat_a_fun$ )A_nat_a_a_prod_fun_fun$ )
(declare-fun uvr$ (Nat_nat_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvs$ (A_a_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uvt$ (A_nat_prod_nat_fun$ )A_a_nat_prod_a_nat_prod_fun_fun$ )
(declare-fun uvu$ (A_nat_fun$ )A_nat_prod_a_a_nat_prod_nat_prod_fun_fun$ )
(declare-fun uvv$ (Nat_a_fun$ )A_nat_prod_nat_a_nat_prod_a_prod_fun_fun$ )
(declare-fun uvw$ (Nat_a_nat_prod_fun$ )A_nat_a_a_nat_prod_prod_fun_fun$ )
(declare-fun uvx$ (A_a_nat_prod_fun$ )A_a_a_a_nat_prod_prod_fun_fun$ )
(declare-fun uvy$ (A_a_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun uvz$ (A_nat_prod_a_fun$ )A_nat_prod_nat_a_nat_prod_fun_fun$ )
(declare-fun uwa$ (Nat_a_fun$ )Nat_nat_a_nat_prod_fun_fun$ )
(declare-fun uwb$ (A_nat_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uwc$ (Nat_nat_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uwd$ (A_a_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uwe$ (A_a_nat_prod_fun$ )A_nat_a_nat_prod_nat_prod_fun_fun$ )
(declare-fun uwf$ (Nat_a_nat_prod_fun$ )Nat_nat_a_nat_prod_nat_prod_fun_fun$ )
(declare-fun uwg$ (A_a_nat_prod_fun$ )A_a_a_nat_prod_a_prod_fun_fun$ )
(declare-fun uwh$ (A_nat_prod_nat_fun$ )A_nat_prod_nat_nat_nat_prod_fun_fun$ )
(declare-fun uwi$ (A_nat_bool_fun_fun$ A_nat_a_nat_prod_fun_fun$ )A_nat_bool_fun_fun$ )
(declare-fun uwj$ (A_nat_a_nat_prod_fun_fun$ )A_nat_a_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uwk$ (A_nat_a_fun_fun$ )A_nat_a_nat_prod_fun_fun_a_nat_a_fun_fun_fun$ )
(declare-fun uwl$ (A_nat_bool_fun_fun$ A_nat_prod_nat_a_nat_prod_fun_fun$ )A_nat_prod_nat_bool_fun_fun$ )
(declare-fun uwm$ (Nat_nat_nat_nat_prod_fun_fun$ Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uwn$ (A_nat_a_fun_fun$ )A_nat_prod_nat_a_nat_prod_fun_fun_a_nat_prod_nat_a_fun_fun_fun$ )
(declare-fun uwo$ (A_nat_a_nat_prod_fun_fun$ )A_nat_prod_nat_a_nat_prod_fun_fun_a_nat_prod_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uwp$ (A_nat_prod_nat_a_nat_prod_fun_fun$ )A_nat_a_nat_prod_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uwq$ (A_a_a_a_prod_fun_fun$ A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ )A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ )
(declare-fun uwr$ (A_nat_prod_nat_a_nat_prod_fun_fun$ )A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun_a_nat_prod_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun lmap$ (A_nat_prod_a_fun$ A_nat_prod_llist$ )A_llist$ )
(declare-fun lzip$ (A_llist$ Nat_llist$ )A_nat_prod_llist$ )
(declare-fun zero$ ()Nat$ )
(declare-fun lmap$a (A_a_prod_a_a_prod_fun$ A_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$b (Nat_nat_fun$ Nat_llist$ )Nat_llist$ )
(declare-fun lmap$c (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$d (A_nat_prod_a_nat_prod_fun$ A_nat_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$e (Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ Nat_a_nat_prod_prod_llist$ )Nat_a_nat_prod_prod_llist$ )
(declare-fun lmap$f (Nat_a_prod_nat_a_prod_fun$ Nat_a_prod_llist$ )Nat_a_prod_llist$ )
(declare-fun lmap$g (A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ A_nat_nat_prod_prod_llist$ )A_nat_nat_prod_prod_llist$ )
(declare-fun lmap$h (A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ A_a_nat_prod_prod_llist$ )A_a_nat_prod_prod_llist$ )
(declare-fun lmap$i (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun lmap$j (Nat_nat_prod_nat_fun$ Nat_nat_prod_llist$ )Nat_llist$ )
(declare-fun lmap$k (A_nat_prod_nat_prod_a_nat_prod_fun$ A_nat_prod_nat_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$l (A_nat_prod_a_nat_prod_prod_a_a_prod_fun$ A_nat_prod_a_nat_prod_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$m (A_nat_prod_a_nat_prod_prod_a_a_nat_prod_prod_fun$ A_nat_prod_a_nat_prod_prod_llist$ )A_a_nat_prod_prod_llist$ )
(declare-fun lmap$n (A_nat_prod_a_nat_prod_prod_a_nat_prod_a_prod_fun$ A_nat_prod_a_nat_prod_prod_llist$ )A_nat_prod_a_prod_llist$ )
(declare-fun lmap$o (A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ A_nat_prod_a_nat_prod_prod_llist$ )A_nat_prod_a_nat_prod_prod_llist$ )
(declare-fun lmap$p (A_nat_fun$ A_llist$ )Nat_llist$ )
(declare-fun lmap$q (A_a_prod_nat_nat_prod_fun$ A_a_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun lmap$r (Nat_a_fun$ Nat_llist$ )A_llist$ )
(declare-fun lmap$s (Nat_nat_prod_a_a_prod_fun$ Nat_nat_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$t (Nat_nat_prod_a_nat_prod_fun$ Nat_nat_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$u (A_nat_prod_nat_nat_prod_fun$ A_nat_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun lmap$v (A_a_prod_a_nat_prod_fun$ A_a_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$w (A_nat_prod_a_a_prod_fun$ A_nat_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$x (A_nat_prod_nat_fun$ A_nat_prod_llist$ )Nat_llist$ )
(declare-fun lmap$y (A_a_nat_prod_prod_a_nat_prod_fun$ A_a_nat_prod_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$z (A_nat_prod_a_prod_a_nat_prod_nat_prod_fun$ A_nat_prod_a_prod_llist$ )A_nat_prod_nat_prod_llist$ )
(declare-fun lzip$a (Nat_llist$ Nat_llist$ )Nat_nat_prod_llist$ )
(declare-fun lzip$b (A_nat_prod_llist$ Nat_llist$ )A_nat_prod_nat_prod_llist$ )
(declare-fun lzip$c (A_llist$ A_llist$ )A_a_prod_llist$ )
(declare-fun lzip$d (A_nat_prod_llist$ A_nat_prod_llist$ )A_nat_prod_a_nat_prod_prod_llist$ )
(declare-fun lzip$e (A_llist$ A_nat_prod_llist$ )A_a_nat_prod_prod_llist$ )
(declare-fun lzip$f (A_nat_prod_llist$ A_llist$ )A_nat_prod_a_prod_llist$ )
(declare-fun lzip$g (Nat_llist$ A_llist$ )Nat_a_prod_llist$ )
(declare-fun lzip$h (Nat_llist$ A_nat_prod_llist$ )Nat_a_nat_prod_prod_llist$ )
(declare-fun lzip$i (Nat_llist$ Nat_nat_prod_llist$ )Nat_nat_nat_prod_prod_llist$ )
(declare-fun lzip$j (Nat_nat_prod_llist$ Nat_llist$ )Nat_nat_prod_nat_prod_llist$ )
(declare-fun lzip$k (Nat_nat_prod_llist$ A_llist$ )Nat_nat_prod_a_prod_llist$ )
(declare-fun lmap$aa (A_nat_prod_nat_prod_a_nat_prod_a_prod_fun$ A_nat_prod_nat_prod_llist$ )A_nat_prod_a_prod_llist$ )
(declare-fun lmap$ab (Nat_a_nat_prod_fun$ Nat_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$ac (A_nat_prod_a_a_nat_prod_prod_fun$ A_nat_prod_llist$ )A_a_nat_prod_prod_llist$ )
(declare-fun lmap$ad (A_a_nat_prod_fun$ A_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$ae (A_a_prod_a_a_nat_prod_prod_fun$ A_a_prod_llist$ )A_a_nat_prod_prod_llist$ )
(declare-fun lmap$af (A_nat_prod_a_nat_prod_nat_prod_fun$ A_nat_prod_llist$ )A_nat_prod_nat_prod_llist$ )
(declare-fun lmap$ag (Nat_nat_prod_a_nat_prod_nat_prod_fun$ Nat_nat_prod_llist$ )A_nat_prod_nat_prod_llist$ )
(declare-fun lmap$ah (A_a_prod_a_nat_prod_a_prod_fun$ A_a_prod_llist$ )A_nat_prod_a_prod_llist$ )
(declare-fun lmap$ai (A_nat_prod_nat_prod_nat_nat_prod_fun$ A_nat_prod_nat_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun member$ (Nat$ Nat_set$ )Bool )
(declare-fun fun_app$ (A_nat_prod_nat_prod_a_nat_prod_fun$ A_nat_prod_nat_prod$ )A_nat_prod$ )
(declare-fun lfilter$ (A_nat_prod_bool_fun$ A_nat_prod_llist$ )A_nat_prod_llist$ )
(declare-fun fun_app$a (Nat_nat_prod_nat_fun$ Nat_nat_prod$ )Nat$ )
(declare-fun fun_app$b (A_nat_prod_a_fun$ A_nat_prod$ )A$ )
(declare-fun fun_app$c (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$d (A_nat_bool_fun_fun$ A$ )Nat_bool_fun$ )
(declare-fun fun_app$e (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$f (Nat_a_nat_prod_fun$ Nat$ )A_nat_prod$ )
(declare-fun fun_app$g (A_nat_a_nat_prod_fun_fun$ A$ )Nat_a_nat_prod_fun$ )
(declare-fun fun_app$h (A_nat_prod_nat_prod_bool_fun$ A_nat_prod_nat_prod$ )Bool )
(declare-fun fun_app$i (A_nat_prod_nat_prod_bool_fun_a_nat_prod_nat_prod_bool_fun_fun$ A_nat_prod_nat_prod_bool_fun$ )A_nat_prod_nat_prod_bool_fun$ )
(declare-fun fun_app$j (Nat_nat_prod_bool_fun$ Nat_nat_prod$ )Bool )
(declare-fun fun_app$k (Nat_nat_prod_bool_fun_nat_nat_prod_bool_fun_fun$ Nat_nat_prod_bool_fun$ )Nat_nat_prod_bool_fun$ )
(declare-fun fun_app$l (A_nat_prod_bool_fun$ A_nat_prod$ )Bool )
(declare-fun fun_app$m (A_nat_prod_bool_fun_a_nat_prod_bool_fun_fun$ A_nat_prod_bool_fun$ )A_nat_prod_bool_fun$ )
(declare-fun fun_app$n (Nat_nat_nat_prod_fun$ Nat$ )Nat_nat_prod$ )
(declare-fun fun_app$o (A_nat_prod_nat_nat_nat_prod_fun_fun$ A_nat_prod$ )Nat_nat_nat_prod_fun$ )
(declare-fun fun_app$p (A_nat_prod_nat_fun$ A_nat_prod$ )Nat$ )
(declare-fun fun_app$q (A_nat_prod_nat_a_nat_prod_fun_fun$ A_nat_prod$ )Nat_a_nat_prod_fun$ )
(declare-fun fun_app$r (Nat_a_nat_prod_nat_prod_fun$ Nat$ )A_nat_prod_nat_prod$ )
(declare-fun fun_app$s (Nat_nat_a_nat_prod_nat_prod_fun_fun$ Nat$ )Nat_a_nat_prod_nat_prod_fun$ )
(declare-fun fun_app$t (Nat_nat_nat_nat_prod_fun_fun$ Nat$ )Nat_nat_nat_prod_fun$ )
(declare-fun fun_app$u (Nat_nat_a_nat_prod_fun_fun$ Nat$ )Nat_a_nat_prod_fun$ )
(declare-fun fun_app$v (Nat_a_fun$ Nat$ )A$ )
(declare-fun fun_app$w (A_nat_a_nat_prod_nat_prod_fun_fun$ A$ )Nat_a_nat_prod_nat_prod_fun$ )
(declare-fun fun_app$x (A_a_nat_prod_fun$ A$ )A_nat_prod$ )
(declare-fun fun_app$y (A_a_nat_prod_a_prod_fun$ A$ )A_nat_prod_a_prod$ )
(declare-fun fun_app$z (A_a_a_nat_prod_a_prod_fun_fun$ A$ )A_a_nat_prod_a_prod_fun$ )
(declare-fun iterates$ (Nat_nat_fun$ Nat$ )Nat_llist$ )
(declare-fun lfilter$a (A_nat_prod_nat_prod_bool_fun$ A_nat_prod_nat_prod_llist$ )A_nat_prod_nat_prod_llist$ )
(declare-fun lfilter$b (Nat_nat_prod_bool_fun$ Nat_nat_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun lsublist$ (Nat_llist$ Nat_set$ )Nat_llist$ )
(declare-fun case_prod$ (A_nat_prod_nat_a_nat_prod_fun_fun$ )A_nat_prod_nat_prod_a_nat_prod_fun$ )
(declare-fun fun_app$aa (A_nat_nat_nat_prod_fun_fun$ A$ )Nat_nat_nat_prod_fun$ )
(declare-fun fun_app$ab (A_nat_fun$ A$ )Nat$ )
(declare-fun fun_app$ac (A_a_fun$ A$ )A$ )
(declare-fun fun_app$ad (A_a_a_prod_fun$ A$ )A_a_prod$ )
(declare-fun fun_app$ae (A_a_a_a_prod_fun_fun$ A$ )A_a_a_prod_fun$ )
(declare-fun fun_app$af (A_nat_prod_a_nat_prod_fun$ A_nat_prod$ )A_nat_prod$ )
(declare-fun fun_app$ag (A_a_nat_prod_a_nat_prod_fun_fun$ A$ )A_nat_prod_a_nat_prod_fun$ )
(declare-fun fun_app$ah (Nat_a_a_nat_prod_prod_fun$ Nat$ )A_a_nat_prod_prod$ )
(declare-fun fun_app$ai (A_nat_a_a_nat_prod_prod_fun_fun$ A$ )Nat_a_a_nat_prod_prod_fun$ )
(declare-fun fun_app$aj (Nat_a_nat_prod_a_prod_fun$ Nat$ )A_nat_prod_a_prod$ )
(declare-fun fun_app$ak (A_nat_prod_nat_a_nat_prod_a_prod_fun_fun$ A_nat_prod$ )Nat_a_nat_prod_a_prod_fun$ )
(declare-fun fun_app$al (Nat_a_a_prod_fun$ Nat$ )A_a_prod$ )
(declare-fun fun_app$am (A_nat_a_a_prod_fun_fun$ A$ )Nat_a_a_prod_fun$ )
(declare-fun fun_app$an (A_a_a_nat_prod_prod_fun$ A$ )A_a_nat_prod_prod$ )
(declare-fun fun_app$ao (A_a_a_a_nat_prod_prod_fun_fun$ A$ )A_a_a_nat_prod_prod_fun$ )
(declare-fun fun_app$ap (A_a_nat_prod_nat_prod_fun$ A$ )A_nat_prod_nat_prod$ )
(declare-fun fun_app$aq (A_nat_prod_a_a_nat_prod_nat_prod_fun_fun$ A_nat_prod$ )A_a_nat_prod_nat_prod_fun$ )
(declare-fun fun_app$ar (A_a_a_nat_prod_fun_fun$ A$ )A_a_nat_prod_fun$ )
(declare-fun fun_app$as (A_nat_prod_nat_bool_fun_fun$ A_nat_prod$ )Nat_bool_fun$ )
(declare-fun fun_app$at (Nat_nat_bool_fun_fun$ Nat$ )Nat_bool_fun$ )
(declare-fun fun_app$au (Nat_nat_nat_prod_nat_prod_fun$ Nat$ )Nat_nat_prod_nat_prod$ )
(declare-fun fun_app$av (Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ Nat_nat_prod$ )Nat_nat_nat_prod_nat_prod_fun$ )
(declare-fun fun_app$aw (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod$ )
(declare-fun fun_app$ax (A_nat_nat_prod_a_prod_fun$ A$ )Nat_nat_prod_a_prod$ )
(declare-fun fun_app$ay (Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ Nat_nat_prod$ )A_nat_nat_prod_a_prod_fun$ )
(declare-fun fun_app$az (A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ A_nat_prod$ )A_nat_prod_a_nat_prod_prod$ )
(declare-fun fun_app$ba (A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ A_nat_prod$ )A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun fun_app$bb (A_nat_prod_a_nat_prod_a_prod_fun$ A_nat_prod$ )A_nat_prod_a_prod$ )
(declare-fun fun_app$bc (A_nat_prod_a_nat_prod_a_nat_prod_a_prod_fun_fun$ A_nat_prod$ )A_nat_prod_a_nat_prod_a_prod_fun$ )
(declare-fun fun_app$bd (A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun$ A_nat_prod$ )Nat_a_nat_prod_nat_prod_fun$ )
(declare-fun fun_app$be (A_nat_prod_a_a_nat_prod_a_prod_fun_fun$ A_nat_prod$ )A_a_nat_prod_a_prod_fun$ )
(declare-fun fun_app$bf (A_nat_prod_a_a_nat_prod_prod_fun$ A_nat_prod$ )A_a_nat_prod_prod$ )
(declare-fun fun_app$bg (A_nat_prod_a_nat_prod_a_a_nat_prod_prod_fun_fun$ A_nat_prod$ )A_nat_prod_a_a_nat_prod_prod_fun$ )
(declare-fun fun_app$bh (A_nat_prod_a_a_prod_fun$ A_nat_prod$ )A_a_prod$ )
(declare-fun fun_app$bi (A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ A_nat_prod$ )A_nat_prod_a_a_prod_fun$ )
(declare-fun fun_app$bj (Nat_nat_prod_nat_nat_nat_prod_prod_fun$ Nat_nat_prod$ )Nat_nat_nat_prod_prod$ )
(declare-fun fun_app$bk (Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ Nat$ )Nat_nat_prod_nat_nat_nat_prod_prod_fun$ )
(declare-fun fun_app$bl (A_nat_prod_nat_a_nat_prod_prod_fun$ A_nat_prod$ )Nat_a_nat_prod_prod$ )
(declare-fun fun_app$bm (Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ Nat$ )A_nat_prod_nat_a_nat_prod_prod_fun$ )
(declare-fun fun_app$bn (A_nat_a_prod_fun$ A$ )Nat_a_prod$ )
(declare-fun fun_app$bo (Nat_a_nat_a_prod_fun_fun$ Nat$ )A_nat_a_prod_fun$ )
(declare-fun fun_app$bp (Nat_nat_fun_nat_nat_a_nat_prod_fun_fun_fun$ Nat_nat_fun$ )Nat_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bq (Nat_nat_a_a_prod_fun_fun$ Nat$ )Nat_a_a_prod_fun$ )
(declare-fun fun_app$br (A_nat_nat_prod_fun$ A$ )Nat_nat_prod$ )
(declare-fun fun_app$bs (A_a_nat_nat_prod_fun_fun$ A$ )A_nat_nat_prod_fun$ )
(declare-fun fun_app$bt (Nat_nat_fun_a_nat_a_nat_prod_fun_fun_fun$ Nat_nat_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bu (A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun_a_nat_prod_nat_a_nat_prod_fun_fun_fun$ A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun$ )A_nat_prod_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bv (A_nat_a_nat_prod_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ A_nat_a_nat_prod_nat_prod_fun_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bw (A_nat_prod_nat_a_nat_prod_fun_fun_a_nat_prod_nat_a_nat_prod_fun_fun_fun$ A_nat_prod_nat_a_nat_prod_fun_fun$ )A_nat_prod_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bx (A_nat_a_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ A_nat_a_nat_prod_fun_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$by (A_nat_prod_nat_a_fun_fun$ A_nat_prod$ )Nat_a_fun$ )
(declare-fun fun_app$bz (A_nat_prod_nat_a_nat_prod_fun_fun_a_nat_prod_nat_a_fun_fun_fun$ A_nat_prod_nat_a_nat_prod_fun_fun$ )A_nat_prod_nat_a_fun_fun$ )
(declare-fun fun_app$ca (A_nat_a_fun_fun$ A$ )Nat_a_fun$ )
(declare-fun fun_app$cb (A_nat_a_nat_prod_fun_fun_a_nat_a_fun_fun_fun$ A_nat_a_nat_prod_fun_fun$ )A_nat_a_fun_fun$ )
(declare-fun fun_app$cc (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod$ )
(declare-fun fun_app$cd (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$ce (Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ Nat_a_nat_prod_prod$ )Nat_a_nat_prod_prod$ )
(declare-fun fun_app$cf (Nat_a_prod_nat_a_prod_fun$ Nat_a_prod$ )Nat_a_prod$ )
(declare-fun fun_app$cg (A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ A_nat_nat_prod_prod$ )A_nat_nat_prod_prod$ )
(declare-fun fun_app$ch (A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ A_a_nat_prod_prod$ )A_a_nat_prod_prod$ )
(declare-fun fun_app$ci (A_nat_prod_a_nat_prod_nat_prod_fun$ A_nat_prod$ )A_nat_prod_nat_prod$ )
(declare-fun fun_app$cj (A_nat_prod_a_nat_prod_prod_a_a_prod_fun$ A_nat_prod_a_nat_prod_prod$ )A_a_prod$ )
(declare-fun fun_app$ck (A_nat_prod_nat_prod_a_nat_prod_nat_prod_fun$ A_nat_prod_nat_prod$ )A_nat_prod_nat_prod$ )
(declare-fun iterates$a (Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ Nat_a_nat_prod_prod$ )Nat_a_nat_prod_prod_llist$ )
(declare-fun iterates$b (Nat_a_prod_nat_a_prod_fun$ Nat_a_prod$ )Nat_a_prod_llist$ )
(declare-fun iterates$c (A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ A_nat_nat_prod_prod$ )A_nat_nat_prod_prod_llist$ )
(declare-fun iterates$d (A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ A_a_nat_prod_prod$ )A_a_nat_prod_prod_llist$ )
(declare-fun iterates$e (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod_llist$ )
(declare-fun iterates$f (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod_llist$ )
(declare-fun iterates$g (A_a_fun$ A$ )A_llist$ )
(declare-fun iterates$h (A_nat_prod_a_nat_prod_fun$ A_nat_prod$ )A_nat_prod_llist$ )
(declare-fun iterates$i (Nat_nat_nat_prod_prod_nat_nat_nat_prod_prod_fun$ Nat_nat_nat_prod_prod$ )Nat_nat_nat_prod_prod_llist$ )
(declare-fun iterates$j (A_nat_prod_nat_prod_a_nat_prod_nat_prod_fun$ A_nat_prod_nat_prod$ )A_nat_prod_nat_prod_llist$ )
(declare-fun iterates$k (A_nat_prod_a_prod_a_nat_prod_a_prod_fun$ A_nat_prod_a_prod$ )A_nat_prod_a_prod_llist$ )
(declare-fun iterates$l (Nat_nat_prod_nat_prod_nat_nat_prod_nat_prod_fun$ Nat_nat_prod_nat_prod$ )Nat_nat_prod_nat_prod_llist$ )
(declare-fun iterates$m (Nat_nat_prod_a_prod_nat_nat_prod_a_prod_fun$ Nat_nat_prod_a_prod$ )Nat_nat_prod_a_prod_llist$ )
(declare-fun lsublist$a (A_nat_prod_llist$ Nat_set$ )A_nat_prod_llist$ )
(declare-fun lsublist$b (A_llist$ Nat_set$ )A_llist$ )
(declare-fun case_prod$a (Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$b (A_nat_a_nat_prod_fun_fun$ )A_nat_prod_a_nat_prod_fun$ )
(declare-fun case_prod$c (A_nat_bool_fun_fun$ )A_nat_prod_bool_fun$ )
(declare-fun case_prod$d (A_nat_a_fun_fun$ )A_nat_prod_a_fun$ )
(declare-fun case_prod$e (A_a_a_a_prod_fun_fun$ )A_a_prod_a_a_prod_fun$ )
(declare-fun case_prod$f (Nat_nat_bool_fun_fun$ )Nat_nat_prod_bool_fun$ )
(declare-fun case_prod$g (A_nat_prod_nat_bool_fun_fun$ )A_nat_prod_nat_prod_bool_fun$ )
(declare-fun case_prod$h (Nat_nat_nat_fun_fun$ Nat_nat_prod$ )Nat$ )
(declare-fun case_prod$i (A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ )A_nat_prod_a_nat_prod_prod_a_a_prod_fun$ )
(declare-fun case_prod$j (A_nat_prod_a_nat_prod_a_a_nat_prod_prod_fun_fun$ )A_nat_prod_a_nat_prod_prod_a_a_nat_prod_prod_fun$ )
(declare-fun case_prod$k (A_nat_prod_a_nat_prod_a_nat_prod_a_prod_fun_fun$ )A_nat_prod_a_nat_prod_prod_a_nat_prod_a_prod_fun$ )
(declare-fun case_prod$l (A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun case_prod$m (A_a_nat_nat_prod_fun_fun$ )A_a_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$n (Nat_nat_a_a_prod_fun_fun$ )Nat_nat_prod_a_a_prod_fun$ )
(declare-fun case_prod$o (Nat_nat_a_nat_prod_fun_fun$ )Nat_nat_prod_a_nat_prod_fun$ )
(declare-fun case_prod$p (A_nat_nat_nat_prod_fun_fun$ )A_nat_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$q (Nat_a_nat_a_prod_fun_fun$ )Nat_a_prod_nat_a_prod_fun$ )
(declare-fun case_prod$r (Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ )Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ )
(declare-fun case_prod$s (Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ )Nat_nat_nat_prod_prod_nat_nat_nat_prod_prod_fun$ )
(declare-fun case_prod$t (A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun$ )A_nat_prod_nat_prod_a_nat_prod_nat_prod_fun$ )
(declare-fun case_prod$u (A_nat_prod_a_a_nat_prod_a_prod_fun_fun$ )A_nat_prod_a_prod_a_nat_prod_a_prod_fun$ )
(declare-fun case_prod$v (Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ )Nat_nat_prod_nat_prod_nat_nat_prod_nat_prod_fun$ )
(declare-fun case_prod$w (Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ )Nat_nat_prod_a_prod_nat_nat_prod_a_prod_fun$ )
(declare-fun case_prod$x (A_a_a_nat_prod_fun_fun$ )A_a_prod_a_nat_prod_fun$ )
(declare-fun case_prod$y (A_nat_a_a_prod_fun_fun$ )A_nat_prod_a_a_prod_fun$ )
(declare-fun case_prod$z (A_a_nat_prod_a_nat_prod_fun_fun$ )A_a_nat_prod_prod_a_nat_prod_fun$ )
(declare-fun case_prod$aa (A_nat_prod_a_a_nat_prod_nat_prod_fun_fun$ )A_nat_prod_a_prod_a_nat_prod_nat_prod_fun$ )
(declare-fun case_prod$ab (A_nat_prod_nat_a_nat_prod_a_prod_fun_fun$ )A_nat_prod_nat_prod_a_nat_prod_a_prod_fun$ )
(declare-fun case_prod$ac (A_nat_a_a_nat_prod_prod_fun_fun$ )A_nat_prod_a_a_nat_prod_prod_fun$ )
(declare-fun case_prod$ad (A_a_a_a_nat_prod_prod_fun_fun$ )A_a_prod_a_a_nat_prod_prod_fun$ )
(declare-fun case_prod$ae (A_nat_a_nat_prod_nat_prod_fun_fun$ )A_nat_prod_a_nat_prod_nat_prod_fun$ )
(declare-fun case_prod$af (Nat_nat_a_nat_prod_nat_prod_fun_fun$ )Nat_nat_prod_a_nat_prod_nat_prod_fun$ )
(declare-fun case_prod$ag (A_a_a_nat_prod_a_prod_fun_fun$ )A_a_prod_a_nat_prod_a_prod_fun$ )
(declare-fun case_prod$ah (A_nat_prod_nat_nat_nat_prod_fun_fun$ )A_nat_prod_nat_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$ai (A_nat_prod_nat_a_fun_fun$ A_nat_prod_nat_prod$ )A$ )
(assert (! (forall ((?v0 A_nat_prod_nat_prod$ ))(! (= (fun_app$ uuq$ ?v0 )(fst$a ?v0 )):pattern ((fun_app$ uuq$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(! (= (fun_app$a uuo$ ?v0 )(fst$b ?v0 )):pattern ((fun_app$a uuo$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(! (= (fun_app$b uu$ ?v0 )(fst$ ?v0 )):pattern ((fun_app$b uu$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$c (fun_app$d uub$ ?v0 )?v1 )(member$ (fun_app$e suc$ ?v1 )a$ )):pattern ((fun_app$c (fun_app$d uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$f (fun_app$g uuj$ ?v0 )?v1 )(pair$ ?v0 (fun_app$e suc$ ?v1 ))):pattern ((fun_app$f (fun_app$g uuj$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$c (fun_app$d uua$ ?v0 )?v1 )(member$ ?v1 a$ )):pattern ((fun_app$c (fun_app$d uua$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_nat_prod_nat_prod_bool_fun$ )(?v1 A_nat_prod_nat_prod_bool_fun$ )(?v2 A_nat_prod_nat_prod$ ))(! (= (fun_app$h (fun_app$i (uuk$ ?v0 )?v1 )?v2 )(and (fun_app$h ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$i (uuk$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_prod_bool_fun$ )(?v1 Nat_nat_prod_bool_fun$ )(?v2 Nat_nat_prod$ ))(! (= (fun_app$j (fun_app$k (uul$ ?v0 )?v1 )?v2 )(and (fun_app$j ?v0 ?v2 )(fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$k (uul$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_nat_prod_bool_fun$ )(?v1 A_nat_prod_bool_fun$ )(?v2 A_nat_prod$ ))(! (= (fun_app$l (fun_app$m (uum$ ?v0 )?v1 )?v2 )(and (fun_app$l ?v0 ?v2 )(fun_app$l ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$m (uum$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_nat_prod_nat_fun$ )(?v1 A_nat_prod$ )(?v2 Nat$ ))(! (= (fun_app$n (fun_app$o (uwh$ ?v0 )?v1 )?v2 )(pair$b (fun_app$p ?v0 ?v1 )?v2 )):pattern ((fun_app$n (fun_app$o (uwh$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod$ )(?v2 Nat$ ))(! (= (fun_app$f (fun_app$q (uvz$ ?v0 )?v1 )?v2 )(pair$ (fun_app$b ?v0 ?v1 )?v2 )):pattern ((fun_app$f (fun_app$q (uvz$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Nat_a_nat_prod_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$r (fun_app$s (uwf$ ?v0 )?v1 )?v2 )(pair$a (fun_app$f ?v0 ?v1 )?v2 )):pattern ((fun_app$r (fun_app$s (uwf$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$n (fun_app$t (uwc$ ?v0 )?v1 )?v2 )(pair$b (fun_app$e ?v0 ?v1 )?v2 )):pattern ((fun_app$n (fun_app$t (uwc$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$f (fun_app$u (uwa$ ?v0 )?v1 )?v2 )(pair$ (fun_app$v ?v0 ?v1 )?v2 )):pattern ((fun_app$f (fun_app$u (uwa$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$r (fun_app$w (uwe$ ?v0 )?v1 )?v2 )(pair$a (fun_app$x ?v0 ?v1 )?v2 )):pattern ((fun_app$r (fun_app$w (uwe$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$y (fun_app$z (uwg$ ?v0 )?v1 )?v2 )(pair$i (fun_app$x ?v0 ?v1 )?v2 )):pattern ((fun_app$y (fun_app$z (uwg$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$n (fun_app$aa (uwb$ ?v0 )?v1 )?v2 )(pair$b (fun_app$ab ?v0 ?v1 )?v2 )):pattern ((fun_app$n (fun_app$aa (uwb$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$f (fun_app$g (uvy$ ?v0 )?v1 )?v2 )(pair$ (fun_app$ac ?v0 ?v1 )?v2 )):pattern ((fun_app$f (fun_app$g (uvy$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$ad (fun_app$ae (uwd$ ?v0 )?v1 )?v2 )(pair$c (fun_app$ac ?v0 ?v1 )?v2 )):pattern ((fun_app$ad (fun_app$ae (uwd$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_nat_prod_nat_fun$ )(?v1 A$ )(?v2 A_nat_prod$ ))(! (= (fun_app$af (fun_app$ag (uvt$ ?v0 )?v1 )?v2 )(pair$ ?v1 (fun_app$p ?v0 ?v2 ))):pattern ((fun_app$af (fun_app$ag (uvt$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 Nat_a_nat_prod_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$ah (fun_app$ai (uvw$ ?v0 )?v1 )?v2 )(pair$g ?v1 (fun_app$f ?v0 ?v2 ))):pattern ((fun_app$ah (fun_app$ai (uvw$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$n (fun_app$t (uvr$ ?v0 )?v1 )?v2 )(pair$b ?v1 (fun_app$e ?v0 ?v2 ))):pattern ((fun_app$n (fun_app$t (uvr$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$f (fun_app$g (uvo$ ?v0 )?v1 )?v2 )(pair$ ?v1 (fun_app$e ?v0 ?v2 ))):pattern ((fun_app$f (fun_app$g (uvo$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 A_nat_prod$ )(?v2 Nat$ ))(! (= (fun_app$aj (fun_app$ak (uvv$ ?v0 )?v1 )?v2 )(pair$i ?v1 (fun_app$v ?v0 ?v2 ))):pattern ((fun_app$aj (fun_app$ak (uvv$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$al (fun_app$am (uvq$ ?v0 )?v1 )?v2 )(pair$c ?v1 (fun_app$v ?v0 ?v2 ))):pattern ((fun_app$al (fun_app$am (uvq$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$an (fun_app$ao (uvx$ ?v0 )?v1 )?v2 )(pair$g ?v1 (fun_app$x ?v0 ?v2 ))):pattern ((fun_app$an (fun_app$ao (uvx$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_nat_prod$ )(?v2 A$ ))(! (= (fun_app$ap (fun_app$aq (uvu$ ?v0 )?v1 )?v2 )(pair$a ?v1 (fun_app$ab ?v0 ?v2 ))):pattern ((fun_app$ap (fun_app$aq (uvu$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$x (fun_app$ar (uvp$ ?v0 )?v1 )?v2 )(pair$ ?v1 (fun_app$ab ?v0 ?v2 ))):pattern ((fun_app$x (fun_app$ar (uvp$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$ad (fun_app$ae (uvs$ ?v0 )?v1 )?v2 )(pair$c ?v1 (fun_app$ac ?v0 ?v2 ))):pattern ((fun_app$ad (fun_app$ae (uvs$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 A_nat_prod$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$as (uur$ ?v0 )?v1 )?v2 )(member$ ?v2 ?v0 )):pattern ((fun_app$c (fun_app$as (uur$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$at (uup$ ?v0 )?v1 )?v2 )(member$ ?v2 ?v0 )):pattern ((fun_app$c (fun_app$at (uup$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 Nat_set$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$c (fun_app$d (uus$ ?v0 )?v1 )?v2 )(member$ ?v2 ?v0 )):pattern ((fun_app$c (fun_app$d (uus$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_prod$ )(?v3 Nat$ ))(! (= (fun_app$au (fun_app$av (uvm$ ?v0 ?v1 )?v2 )?v3 )(pair$k (fun_app$aw ?v0 ?v2 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$au (fun_app$av (uvm$ ?v0 ?v1 )?v2 )?v3 )))):named a32 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 A_a_fun$ )(?v2 Nat_nat_prod$ )(?v3 A$ ))(! (= (fun_app$ax (fun_app$ay (uvn$ ?v0 ?v1 )?v2 )?v3 )(pair$l (fun_app$aw ?v0 ?v2 )(fun_app$ac ?v1 ?v3 ))):pattern ((fun_app$ax (fun_app$ay (uvn$ ?v0 ?v1 )?v2 )?v3 )))):named a33 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_a_nat_prod_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$az (fun_app$ba (uva$ ?v0 ?v1 )?v2 )?v3 )(pair$h (fun_app$af ?v0 ?v2 )(fun_app$af ?v1 ?v3 ))):pattern ((fun_app$az (fun_app$ba (uva$ ?v0 ?v1 )?v2 )?v3 )))):named a34 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_a_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$bb (fun_app$bc (uuz$ ?v0 ?v1 )?v2 )?v3 )(pair$i (fun_app$af ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$bb (fun_app$bc (uuz$ ?v0 ?v1 )?v2 )?v3 )))):named a35 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 Nat_nat_fun$ )(?v2 A_nat_prod$ )(?v3 Nat$ ))(! (= (fun_app$r (fun_app$bd (uvk$ ?v0 ?v1 )?v2 )?v3 )(pair$a (fun_app$af ?v0 ?v2 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$r (fun_app$bd (uvk$ ?v0 ?v1 )?v2 )?v3 )))):named a36 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_a_fun$ )(?v2 A_nat_prod$ )(?v3 A$ ))(! (= (fun_app$y (fun_app$be (uvl$ ?v0 ?v1 )?v2 )?v3 )(pair$i (fun_app$af ?v0 ?v2 )(fun_app$ac ?v1 ?v3 ))):pattern ((fun_app$y (fun_app$be (uvl$ ?v0 ?v1 )?v2 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_a_nat_prod_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$bf (fun_app$bg (uuy$ ?v0 ?v1 )?v2 )?v3 )(pair$g (fun_app$b ?v0 ?v2 )(fun_app$af ?v1 ?v3 ))):pattern ((fun_app$bf (fun_app$bg (uuy$ ?v0 ?v1 )?v2 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_a_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$bh (fun_app$bi (uux$ ?v0 ?v1 )?v2 )?v3 )(pair$c (fun_app$b ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$bh (fun_app$bi (uux$ ?v0 ?v1 )?v2 )?v3 )))):named a39 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ )(?v2 Nat$ )(?v3 Nat_nat_prod$ ))(! (= (fun_app$bj (fun_app$bk (uvj$ ?v0 ?v1 )?v2 )?v3 )(pair$j (fun_app$e ?v0 ?v2 )(fun_app$aw ?v1 ?v3 ))):pattern ((fun_app$bj (fun_app$bk (uvj$ ?v0 ?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A_nat_prod_a_nat_prod_fun$ )(?v2 Nat$ )(?v3 A_nat_prod$ ))(! (= (fun_app$bl (fun_app$bm (uvi$ ?v0 ?v1 )?v2 )?v3 )(pair$d (fun_app$e ?v0 ?v2 )(fun_app$af ?v1 ?v3 ))):pattern ((fun_app$bl (fun_app$bm (uvi$ ?v0 ?v1 )?v2 )?v3 )))):named a41 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$n (fun_app$t (uvf$ ?v0 ?v1 )?v2 )?v3 )(pair$b (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$t (uvf$ ?v0 ?v1 )?v2 )?v3 )))):named a42 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A_a_fun$ )(?v2 Nat$ )(?v3 A$ ))(! (= (fun_app$bn (fun_app$bo (uvg$ ?v0 ?v1 )?v2 )?v3 )(pair$e (fun_app$e ?v0 ?v2 )(fun_app$ac ?v1 ?v3 ))):pattern ((fun_app$bn (fun_app$bo (uvg$ ?v0 ?v1 )?v2 )?v3 )))):named a43 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$f (fun_app$u (fun_app$bp (uvd$ ?v0 )?v1 )?v2 )?v3 )(pair$ (fun_app$v ?v0 ?v2 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$f (fun_app$u (fun_app$bp (uvd$ ?v0 )?v1 )?v2 )?v3 )))):named a44 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_a_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$al (fun_app$bq (uvc$ ?v0 ?v1 )?v2 )?v3 )(pair$c (fun_app$v ?v0 ?v2 )(fun_app$v ?v1 ?v3 ))):pattern ((fun_app$al (fun_app$bq (uvc$ ?v0 ?v1 )?v2 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$n (fun_app$aa (uve$ ?v0 ?v1 )?v2 )?v3 )(pair$b (fun_app$ab ?v0 ?v2 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$n (fun_app$aa (uve$ ?v0 ?v1 )?v2 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_nat_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$br (fun_app$bs (uvb$ ?v0 ?v1 )?v2 )?v3 )(pair$b (fun_app$ab ?v0 ?v2 )(fun_app$ab ?v1 ?v3 ))):pattern ((fun_app$br (fun_app$bs (uvb$ ?v0 ?v1 )?v2 )?v3 )))):named a47 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Nat_nat_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$f (fun_app$g (fun_app$bt (uuw$ ?v0 )?v1 )?v2 )?v3 )(pair$ (fun_app$ac ?v0 ?v2 )(fun_app$e ?v1 ?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$bt (uuw$ ?v0 )?v1 )?v2 )?v3 )))):named a48 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$ad (fun_app$ae (uvh$ ?v0 ?v1 )?v2 )?v3 )(pair$c (fun_app$ac ?v0 ?v2 )(fun_app$ac ?v1 ?v3 ))):pattern ((fun_app$ad (fun_app$ae (uvh$ ?v0 ?v1 )?v2 )?v3 )))):named a49 ))
(assert (! (forall ((?v0 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun$ )(?v2 A_nat_prod$ )(?v3 Nat$ ))(! (= (fun_app$f (fun_app$q (fun_app$bu (uwr$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ (case_prod$ ?v0 )(fun_app$r (fun_app$bd ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$q (fun_app$bu (uwr$ ?v0 )?v1 )?v2 )?v3 )))):named a50 ))
(assert (! (forall ((?v0 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$f (fun_app$g (fun_app$bv (uwp$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ (case_prod$ ?v0 )(fun_app$r (fun_app$w ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$bv (uwp$ ?v0 )?v1 )?v2 )?v3 )))):named a51 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$n (fun_app$t (uwm$ ?v0 ?v1 )?v2 )?v3 )(fun_app$aw (case_prod$a ?v0 )(fun_app$n (fun_app$t ?v1 ?v2 )?v3 ))):pattern ((fun_app$n (fun_app$t (uwm$ ?v0 ?v1 )?v2 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ )(?v3 Nat$ ))(! (= (fun_app$f (fun_app$q (fun_app$bw (uwo$ ?v0 )?v1 )?v2 )?v3 )(fun_app$af (case_prod$b ?v0 )(fun_app$f (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$q (fun_app$bw (uwo$ ?v0 )?v1 )?v2 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$f (fun_app$g (fun_app$bx (uwj$ ?v0 )?v1 )?v2 )?v3 )(fun_app$af (case_prod$b ?v0 )(fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$f (fun_app$g (fun_app$bx (uwj$ ?v0 )?v1 )?v2 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_nat_bool_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ )(?v3 Nat$ ))(! (= (fun_app$c (fun_app$as (uwl$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l (case_prod$c ?v0 )(fun_app$f (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$c (fun_app$as (uwl$ ?v0 ?v1 )?v2 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_nat_bool_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$c (fun_app$d (uwi$ ?v0 ?v1 )?v2 )?v3 )(fun_app$l (case_prod$c ?v0 )(fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$c (fun_app$d (uwi$ ?v0 ?v1 )?v2 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 A_nat_a_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ )(?v3 Nat$ ))(! (= (fun_app$v (fun_app$by (fun_app$bz (uwn$ ?v0 )?v1 )?v2 )?v3 )(fun_app$b (case_prod$d ?v0 )(fun_app$f (fun_app$q ?v1 ?v2 )?v3 ))):pattern ((fun_app$v (fun_app$by (fun_app$bz (uwn$ ?v0 )?v1 )?v2 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 A_nat_a_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$v (fun_app$ca (fun_app$cb (uwk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$b (case_prod$d ?v0 )(fun_app$f (fun_app$g ?v1 ?v2 )?v3 ))):pattern ((fun_app$v (fun_app$ca (fun_app$cb (uwk$ ?v0 )?v1 )?v2 )?v3 )))):named a58 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$bh (fun_app$bi (uwq$ ?v0 ?v1 )?v2 )?v3 )(fun_app$cc (case_prod$e ?v0 )(fun_app$bh (fun_app$bi ?v1 ?v2 )?v3 ))):pattern ((fun_app$bh (fun_app$bi (uwq$ ?v0 ?v1 )?v2 )?v3 )))):named a59 ))
(assert (! (forall ((?v0 Bool )(?v1 A_nat_bool_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$c (fun_app$d (uun$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$c (fun_app$d ?v1 ?v2 )?v3 ))):pattern ((fun_app$c (fun_app$d (uun$ ?v0 ?v1 )?v2 )?v3 )))):named a60 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 Nat$ ))(! (= (fun_app$f (fun_app$q uuu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$f (fun_app$q uuu$ ?v0 )?v1 )))):named a61 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$e (fun_app$cd uut$ ?v0 )?v1 )?v0 ):pattern ((fun_app$e (fun_app$cd uut$ ?v0 )?v1 )))):named a62 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$v (fun_app$ca uuv$ ?v0 )?v1 )?v0 ):pattern ((fun_app$v (fun_app$ca uuv$ ?v0 )?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(! (= (fun_app$af uuf$ ?v0 )?v0 ):pattern ((fun_app$af uuf$ ?v0 )))):named a64 ))
(assert (! (forall ((?v0 A_a_prod$ ))(! (= (fun_app$cc uuc$ ?v0 )?v0 ):pattern ((fun_app$cc uuc$ ?v0 )))):named a65 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$e uud$ ?v0 )?v0 ):pattern ((fun_app$e uud$ ?v0 )))):named a66 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$ac uue$ ?v0 )?v0 ):pattern ((fun_app$ac uue$ ?v0 )))):named a67 ))
(assert (! (forall ((?v0 A_nat_prod_nat_prod$ ))(! (= (fun_app$h uug$ ?v0 )true ):pattern ((fun_app$h uug$ ?v0 )))):named a68 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(! (= (fun_app$j uuh$ ?v0 )true ):pattern ((fun_app$j uuh$ ?v0 )))):named a69 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(! (= (fun_app$l uui$ ?v0 )true ):pattern ((fun_app$l uui$ ?v0 )))):named a70 ))
(assert (! (not (= (lmap$ uu$ (lfilter$ (case_prod$c uua$ )(lzip$ xs$ (iterates$ suc$ (fun_app$e suc$ n$ )))))(lmap$ uu$ (lfilter$ (case_prod$c uub$ )(lzip$ xs$ (iterates$ suc$ n$ )))))):named a71 ))
(assert (! (forall ((?v0 A_nat_prod_nat_prod_bool_fun$ )(?v1 A_nat_prod_nat_prod_llist$ ))(= (lfilter$a ?v0 (lfilter$a ?v0 ?v1 ))(lfilter$a ?v0 ?v1 ))):named a72 ))
(assert (! (forall ((?v0 Nat_nat_prod_bool_fun$ )(?v1 Nat_nat_prod_llist$ ))(= (lfilter$b ?v0 (lfilter$b ?v0 ?v1 ))(lfilter$b ?v0 ?v1 ))):named a73 ))
(assert (! (forall ((?v0 A_nat_prod_bool_fun$ )(?v1 A_nat_prod_llist$ ))(= (lfilter$ ?v0 (lfilter$ ?v0 ?v1 ))(lfilter$ ?v0 ?v1 ))):named a74 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(= (lmap$a uuc$ ?v0 )?v0 )):named a75 ))
(assert (! (forall ((?v0 Nat_llist$ ))(= (lmap$b uud$ ?v0 )?v0 )):named a76 ))
(assert (! (forall ((?v0 A_llist$ ))(= (lmap$c uue$ ?v0 )?v0 )):named a77 ))
(assert (! (forall ((?v0 A_nat_prod_llist$ ))(= (lmap$d uuf$ ?v0 )?v0 )):named a78 ))
(assert (! (forall ((?v0 A_nat_prod_nat_prod_llist$ ))(= (lfilter$a uug$ ?v0 )?v0 )):named a79 ))
(assert (! (forall ((?v0 Nat_nat_prod_llist$ ))(= (lfilter$b uuh$ ?v0 )?v0 )):named a80 ))
(assert (! (forall ((?v0 A_nat_prod_llist$ ))(= (lfilter$ uui$ ?v0 )?v0 )):named a81 ))
(assert (! (= (lzip$ xs$ (iterates$ suc$ (fun_app$e suc$ n$ )))(lmap$d (case_prod$b uuj$ )(lzip$ xs$ (iterates$ suc$ n$ )))):named a82 ))
(assert (! (forall ((?v0 A_nat_prod_nat_prod_bool_fun$ )(?v1 A_nat_prod_nat_prod_bool_fun$ )(?v2 A_nat_prod_nat_prod_llist$ ))(= (lfilter$a ?v0 (lfilter$a ?v1 ?v2 ))(lfilter$a (fun_app$i (uuk$ ?v0 )?v1 )?v2 ))):named a83 ))
(assert (! (forall ((?v0 Nat_nat_prod_bool_fun$ )(?v1 Nat_nat_prod_bool_fun$ )(?v2 Nat_nat_prod_llist$ ))(= (lfilter$b ?v0 (lfilter$b ?v1 ?v2 ))(lfilter$b (fun_app$k (uul$ ?v0 )?v1 )?v2 ))):named a84 ))
(assert (! (forall ((?v0 A_nat_prod_bool_fun$ )(?v1 A_nat_prod_bool_fun$ )(?v2 A_nat_prod_llist$ ))(= (lfilter$ ?v0 (lfilter$ ?v1 ?v2 ))(lfilter$ (fun_app$m (uum$ ?v0 )?v1 )?v2 ))):named a85 ))
(assert (! (forall ((?v0 Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ )(?v1 Nat_a_nat_prod_prod$ ))(= (lmap$e ?v0 (iterates$a ?v0 ?v1 ))(iterates$a ?v0 (fun_app$ce ?v0 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 Nat_a_prod_nat_a_prod_fun$ )(?v1 Nat_a_prod$ ))(= (lmap$f ?v0 (iterates$b ?v0 ?v1 ))(iterates$b ?v0 (fun_app$cf ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ )(?v1 A_nat_nat_prod_prod$ ))(= (lmap$g ?v0 (iterates$c ?v0 ?v1 ))(iterates$c ?v0 (fun_app$cg ?v0 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ )(?v1 A_a_nat_prod_prod$ ))(= (lmap$h ?v0 (iterates$d ?v0 ?v1 ))(iterates$d ?v0 (fun_app$ch ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_prod$ ))(= (lmap$a ?v0 (iterates$e ?v0 ?v1 ))(iterates$e ?v0 (fun_app$cc ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ ))(= (lmap$i ?v0 (iterates$f ?v0 ?v1 ))(iterates$f ?v0 (fun_app$aw ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (lmap$c ?v0 (iterates$g ?v0 ?v1 ))(iterates$g ?v0 (fun_app$ac ?v0 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ ))(= (lmap$b ?v0 (iterates$ ?v0 ?v1 ))(iterates$ ?v0 (fun_app$e ?v0 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod$ ))(= (lmap$d ?v0 (iterates$h ?v0 ?v1 ))(iterates$h ?v0 (fun_app$af ?v0 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 Bool )(?v1 A_nat_bool_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$l (case_prod$c (uun$ ?v0 ?v1 ))?v2 )(and ?v0 (fun_app$l (case_prod$c ?v1 )?v2 )))):named a95 ))
(assert (! (forall ((?v0 Nat_llist$ )(?v1 Nat_set$ ))(= (lsublist$ ?v0 ?v1 )(lmap$j uuo$ (lfilter$b (case_prod$f (uup$ ?v1 ))(lzip$a ?v0 (iterates$ suc$ zero$ )))))):named a96 ))
(assert (! (forall ((?v0 A_nat_prod_llist$ )(?v1 Nat_set$ ))(= (lsublist$a ?v0 ?v1 )(lmap$k uuq$ (lfilter$a (case_prod$g (uur$ ?v1 ))(lzip$b ?v0 (iterates$ suc$ zero$ )))))):named a97 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat_set$ ))(= (lsublist$b ?v0 ?v1 )(lmap$ uu$ (lfilter$ (case_prod$c (uus$ ?v1 ))(lzip$ ?v0 (iterates$ suc$ zero$ )))))):named a98 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$e suc$ ?v0 )(fun_app$e suc$ ?v1 ))(= ?v0 ?v1 ))):named a99 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$e suc$ ?v0 )(fun_app$e suc$ ?v1 ))(= ?v0 ?v1 ))):named a100 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(= (fst$b ?v0 )(case_prod$h uut$ ?v0 ))):named a101 ))
(assert (! (forall ((?v0 A_nat_prod_nat_prod$ ))(= (fst$a ?v0 )(fun_app$ (case_prod$ uuu$ )?v0 ))):named a102 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(= (fst$ ?v0 )(fun_app$b (case_prod$d uuv$ )?v0 ))):named a103 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$ (lmap$c ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(lmap$d (case_prod$b (fun_app$bt (uuw$ ?v0 )?v2 ))(lzip$ ?v1 ?v3 )))):named a104 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_llist$ )(?v2 A_nat_prod_a_fun$ )(?v3 A_nat_prod_llist$ ))(= (lzip$c (lmap$ ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(lmap$l (case_prod$i (uux$ ?v0 ?v2 ))(lzip$d ?v1 ?v3 )))):named a105 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_llist$ )(?v2 A_nat_prod_a_nat_prod_fun$ )(?v3 A_nat_prod_llist$ ))(= (lzip$e (lmap$ ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(lmap$m (case_prod$j (uuy$ ?v0 ?v2 ))(lzip$d ?v1 ?v3 )))):named a106 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_llist$ )(?v2 A_nat_prod_a_fun$ )(?v3 A_nat_prod_llist$ ))(= (lzip$f (lmap$d ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(lmap$n (case_prod$k (uuz$ ?v0 ?v2 ))(lzip$d ?v1 ?v3 )))):named a107 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_llist$ )(?v2 A_nat_prod_a_nat_prod_fun$ )(?v3 A_nat_prod_llist$ ))(= (lzip$d (lmap$d ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(lmap$o (case_prod$l (uva$ ?v0 ?v2 ))(lzip$d ?v1 ?v3 )))):named a108 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_llist$ )(?v2 A_nat_fun$ )(?v3 A_llist$ ))(= (lzip$a (lmap$p ?v0 ?v1 )(lmap$p ?v2 ?v3 ))(lmap$q (case_prod$m (uvb$ ?v0 ?v2 ))(lzip$c ?v1 ?v3 )))):named a109 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_llist$ )(?v2 Nat_a_fun$ )(?v3 Nat_llist$ ))(= (lzip$c (lmap$r ?v0 ?v1 )(lmap$r ?v2 ?v3 ))(lmap$s (case_prod$n (uvc$ ?v0 ?v2 ))(lzip$a ?v1 ?v3 )))):named a110 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$ (lmap$r ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(lmap$t (case_prod$o (fun_app$bp (uvd$ ?v0 )?v2 ))(lzip$a ?v1 ?v3 )))):named a111 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$a (lmap$p ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(lmap$u (case_prod$p (uve$ ?v0 ?v2 ))(lzip$ ?v1 ?v3 )))):named a112 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$a (lmap$b ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(lmap$i (case_prod$a (uvf$ ?v0 ?v2 ))(lzip$a ?v1 ?v3 )))):named a113 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(= (lzip$ (iterates$g ?v0 ?v1 )(iterates$ ?v2 ?v3 ))(iterates$h (case_prod$b (fun_app$bt (uuw$ ?v0 )?v2 ))(pair$ ?v1 ?v3 )))):named a114 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(= (lzip$a (iterates$ ?v0 ?v1 )(iterates$ ?v2 ?v3 ))(iterates$f (case_prod$a (uvf$ ?v0 ?v2 ))(pair$b ?v1 ?v3 )))):named a115 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (lzip$g (iterates$ ?v0 ?v1 )(iterates$g ?v2 ?v3 ))(iterates$b (case_prod$q (uvg$ ?v0 ?v2 ))(pair$e ?v1 ?v3 )))):named a116 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (lzip$c (iterates$g ?v0 ?v1 )(iterates$g ?v2 ?v3 ))(iterates$e (case_prod$e (uvh$ ?v0 ?v2 ))(pair$c ?v1 ?v3 )))):named a117 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 A_nat_prod_a_nat_prod_fun$ )(?v3 A_nat_prod$ ))(= (lzip$h (iterates$ ?v0 ?v1 )(iterates$h ?v2 ?v3 ))(iterates$a (case_prod$r (uvi$ ?v0 ?v2 ))(pair$d ?v1 ?v3 )))):named a118 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat_nat_prod_nat_nat_prod_fun$ )(?v3 Nat_nat_prod$ ))(= (lzip$i (iterates$ ?v0 ?v1 )(iterates$f ?v2 ?v3 ))(iterates$i (case_prod$s (uvj$ ?v0 ?v2 ))(pair$j ?v1 ?v3 )))):named a119 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(= (lzip$b (iterates$h ?v0 ?v1 )(iterates$ ?v2 ?v3 ))(iterates$j (case_prod$t (uvk$ ?v0 ?v2 ))(pair$a ?v1 ?v3 )))):named a120 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (lzip$f (iterates$h ?v0 ?v1 )(iterates$g ?v2 ?v3 ))(iterates$k (case_prod$u (uvl$ ?v0 ?v2 ))(pair$i ?v1 ?v3 )))):named a121 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(= (lzip$j (iterates$f ?v0 ?v1 )(iterates$ ?v2 ?v3 ))(iterates$l (case_prod$v (uvm$ ?v0 ?v2 ))(pair$k ?v1 ?v3 )))):named a122 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (lzip$k (iterates$f ?v0 ?v1 )(iterates$g ?v2 ?v3 ))(iterates$m (case_prod$w (uvn$ ?v0 ?v2 ))(pair$l ?v1 ?v3 )))):named a123 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat_nat_fun$ )(?v2 Nat_llist$ ))(= (lzip$ ?v0 (lmap$b ?v1 ?v2 ))(lmap$d (case_prod$b (uvo$ ?v1 ))(lzip$ ?v0 ?v2 )))):named a124 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_nat_fun$ )(?v2 A_llist$ ))(= (lzip$ ?v0 (lmap$p ?v1 ?v2 ))(lmap$v (case_prod$x (uvp$ ?v1 ))(lzip$c ?v0 ?v2 )))):named a125 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat_a_fun$ )(?v2 Nat_llist$ ))(= (lzip$c ?v0 (lmap$r ?v1 ?v2 ))(lmap$w (case_prod$y (uvq$ ?v1 ))(lzip$ ?v0 ?v2 )))):named a126 ))
(assert (! (forall ((?v0 Nat_llist$ )(?v1 Nat_nat_fun$ )(?v2 Nat_llist$ ))(= (lzip$a ?v0 (lmap$b ?v1 ?v2 ))(lmap$i (case_prod$a (uvr$ ?v1 ))(lzip$a ?v0 ?v2 )))):named a127 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_fun$ )(?v2 A_llist$ ))(= (lzip$c ?v0 (lmap$c ?v1 ?v2 ))(lmap$a (case_prod$e (uvs$ ?v1 ))(lzip$c ?v0 ?v2 )))):named a128 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_nat_prod_nat_fun$ )(?v2 A_nat_prod_llist$ ))(= (lzip$ ?v0 (lmap$x ?v1 ?v2 ))(lmap$y (case_prod$z (uvt$ ?v1 ))(lzip$e ?v0 ?v2 )))):named a129 ))
(assert (! (forall ((?v0 A_nat_prod_llist$ )(?v1 A_nat_fun$ )(?v2 A_llist$ ))(= (lzip$b ?v0 (lmap$p ?v1 ?v2 ))(lmap$z (case_prod$aa (uvu$ ?v1 ))(lzip$f ?v0 ?v2 )))):named a130 ))
(assert (! (forall ((?v0 A_nat_prod_llist$ )(?v1 Nat_a_fun$ )(?v2 Nat_llist$ ))(= (lzip$f ?v0 (lmap$r ?v1 ?v2 ))(lmap$aa (case_prod$ab (uvv$ ?v1 ))(lzip$b ?v0 ?v2 )))):named a131 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat_a_nat_prod_fun$ )(?v2 Nat_llist$ ))(= (lzip$e ?v0 (lmap$ab ?v1 ?v2 ))(lmap$ac (case_prod$ac (uvw$ ?v1 ))(lzip$ ?v0 ?v2 )))):named a132 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_nat_prod_fun$ )(?v2 A_llist$ ))(= (lzip$e ?v0 (lmap$ad ?v1 ?v2 ))(lmap$ae (case_prod$ad (uvx$ ?v1 ))(lzip$c ?v0 ?v2 )))):named a133 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 Nat_llist$ ))(= (lzip$ (lmap$c ?v0 ?v1 )?v2 )(lmap$d (case_prod$b (uvy$ ?v0 ))(lzip$ ?v1 ?v2 )))):named a134 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_llist$ )(?v2 Nat_llist$ ))(= (lzip$ (lmap$ ?v0 ?v1 )?v2 )(lmap$k (case_prod$ (uvz$ ?v0 ))(lzip$b ?v1 ?v2 )))):named a135 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_llist$ )(?v2 Nat_llist$ ))(= (lzip$ (lmap$r ?v0 ?v1 )?v2 )(lmap$t (case_prod$o (uwa$ ?v0 ))(lzip$a ?v1 ?v2 )))):named a136 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_llist$ )(?v2 Nat_llist$ ))(= (lzip$a (lmap$p ?v0 ?v1 )?v2 )(lmap$u (case_prod$p (uwb$ ?v0 ))(lzip$ ?v1 ?v2 )))):named a137 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_llist$ )(?v2 Nat_llist$ ))(= (lzip$a (lmap$b ?v0 ?v1 )?v2 )(lmap$i (case_prod$a (uwc$ ?v0 ))(lzip$a ?v1 ?v2 )))):named a138 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (lzip$c (lmap$c ?v0 ?v1 )?v2 )(lmap$a (case_prod$e (uwd$ ?v0 ))(lzip$c ?v1 ?v2 )))):named a139 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A_llist$ )(?v2 Nat_llist$ ))(= (lzip$b (lmap$ad ?v0 ?v1 )?v2 )(lmap$af (case_prod$ae (uwe$ ?v0 ))(lzip$ ?v1 ?v2 )))):named a140 ))
(assert (! (forall ((?v0 Nat_a_nat_prod_fun$ )(?v1 Nat_llist$ )(?v2 Nat_llist$ ))(= (lzip$b (lmap$ab ?v0 ?v1 )?v2 )(lmap$ag (case_prod$af (uwf$ ?v0 ))(lzip$a ?v1 ?v2 )))):named a141 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (lzip$f (lmap$ad ?v0 ?v1 )?v2 )(lmap$ah (case_prod$ag (uwg$ ?v0 ))(lzip$c ?v1 ?v2 )))):named a142 ))
(assert (! (forall ((?v0 A_nat_prod_nat_fun$ )(?v1 A_nat_prod_llist$ )(?v2 Nat_llist$ ))(= (lzip$a (lmap$x ?v0 ?v1 )?v2 )(lmap$ai (case_prod$ah (uwh$ ?v0 ))(lzip$b ?v1 ?v2 )))):named a143 ))
(assert (! (forall ((?v0 A_nat_bool_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$l (case_prod$c ?v0 )(fun_app$af (case_prod$b ?v1 )?v2 ))(fun_app$l (case_prod$c (uwi$ ?v0 ?v1 ))?v2 ))):named a144 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$af (case_prod$b ?v0 )(fun_app$af (case_prod$b ?v1 )?v2 ))(fun_app$af (case_prod$b (fun_app$bx (uwj$ ?v0 )?v1 ))?v2 ))):named a145 ))
(assert (! (forall ((?v0 A_nat_a_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$b (case_prod$d ?v0 )(fun_app$af (case_prod$b ?v1 )?v2 ))(fun_app$b (case_prod$d (fun_app$cb (uwk$ ?v0 )?v1 ))?v2 ))):named a146 ))
(assert (! (forall ((?v0 A_nat_bool_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod_nat_prod$ ))(= (fun_app$l (case_prod$c ?v0 )(fun_app$ (case_prod$ ?v1 )?v2 ))(fun_app$h (case_prod$g (uwl$ ?v0 ?v1 ))?v2 ))):named a147 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$aw (case_prod$a ?v0 )(fun_app$aw (case_prod$a ?v1 )?v2 ))(fun_app$aw (case_prod$a (uwm$ ?v0 ?v1 ))?v2 ))):named a148 ))
(assert (! (forall ((?v0 A_nat_a_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod_nat_prod$ ))(= (fun_app$b (case_prod$d ?v0 )(fun_app$ (case_prod$ ?v1 )?v2 ))(case_prod$ai (fun_app$bz (uwn$ ?v0 )?v1 )?v2 ))):named a149 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod_nat_prod$ ))(= (fun_app$af (case_prod$b ?v0 )(fun_app$ (case_prod$ ?v1 )?v2 ))(fun_app$ (case_prod$ (fun_app$bw (uwo$ ?v0 )?v1 ))?v2 ))):named a150 ))
(assert (! (forall ((?v0 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$ (case_prod$ ?v0 )(fun_app$ci (case_prod$ae ?v1 )?v2 ))(fun_app$af (case_prod$b (fun_app$bv (uwp$ ?v0 )?v1 ))?v2 ))):named a151 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_nat_prod_a_nat_prod_a_a_prod_fun_fun$ )(?v2 A_nat_prod_a_nat_prod_prod$ ))(= (fun_app$cc (case_prod$e ?v0 )(fun_app$cj (case_prod$i ?v1 )?v2 ))(fun_app$cj (case_prod$i (uwq$ ?v0 ?v1 ))?v2 ))):named a152 ))
(assert (! (forall ((?v0 A_nat_prod_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_prod_nat_a_nat_prod_nat_prod_fun_fun$ )(?v2 A_nat_prod_nat_prod$ ))(= (fun_app$ (case_prod$ ?v0 )(fun_app$ck (case_prod$t ?v1 )?v2 ))(fun_app$ (case_prod$ (fun_app$bu (uwr$ ?v0 )?v1 ))?v2 ))):named a153 ))
(check-sat )
;(get-unsat-core )
