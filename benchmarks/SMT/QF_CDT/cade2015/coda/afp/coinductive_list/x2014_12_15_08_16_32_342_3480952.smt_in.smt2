;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Nat_a_llist_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_llist_set_a_llist_fun$ 0 )
(declare-sort Nat_a_llist_fun_bool_fun$ 0 )
(declare-sort A_llist_nat_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_a_llist_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort A_llist_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_nat_a_llist_fun_fun$ 0 )
(declare-sort Nat_nat_a_llist_fun_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_nat_a_llist_fun_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_set_nat_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ 0 )
(declare-sort A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ 0 )
(declare-sort A_llist_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_nat_a_llist_fun_fun_a_llist_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort A_llist_nat_a_llist_fun_fun_a_llist_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_a_llist_fun_fun$ 0 )
(declare-sort Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-fun uu$ ()A_llist_nat_a_llist_fun_fun$ )
(declare-fun uua$ (Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )
(declare-fun uub$ (Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )
(declare-fun uuc$ (Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )
(declare-fun uud$ (Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )
(declare-fun uue$ (A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )
(declare-fun uuf$ (A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )A_llist_nat_a_llist_fun_fun_a_llist_nat_a_llist_fun_fun_fun$ )
(declare-fun uug$ (A_llist_a_llist_nat_a_llist_fun_fun_fun$ )A_llist_a_llist_nat_a_llist_fun_fun_fun$ )
(declare-fun uuh$ (A_llist_a_llist_nat_a_llist_fun_fun_fun$ )A_llist_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )
(declare-fun uui$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_a_llist_fun_fun$ )
(declare-fun uuj$ (A_llist_a_llist_a_llist_fun_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuk$ (Nat_a_llist_fun_a_llist_a_llist_fun_fun$ )A_llist_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uul$ (Nat_a_llist_fun_a_llist_a_llist_fun_fun$ )Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uum$ (Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uun$ (Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uuo$ (A_llist_nat_a_llist_fun_a_llist_fun_fun$ )Nat_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uup$ (A_llist_nat_a_llist_fun_a_llist_fun_fun$ )A_llist_nat_a_llist_fun_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuq$ (A_llist_nat_a_llist_fun_fun$ )Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )
(declare-fun uur$ (Nat_a_llist_fun_nat_a_llist_fun_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )
(declare-fun uus$ (Nat_a_llist_fun_nat_a_llist_fun_fun$ )A_llist_nat_a_llist_fun_fun_a_llist_nat_a_llist_fun_fun_fun$ )
(declare-fun uut$ (A_llist_nat_a_llist_fun_fun$ )A_llist_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )
(declare-fun uuu$ (A_llist_a_llist_fun$ )A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuv$ (A_llist_a_llist_fun$ )Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uuw$ (Nat_a_llist_fun_a_llist_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uux$ (Nat_a_llist_fun_a_llist_fun$ )A_llist_nat_a_llist_fun_fun_a_llist_a_llist_fun_fun$ )
(declare-fun uuy$ (Nat_a_llist_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun$ )
(declare-fun uuz$ (Nat_a_llist_fun$ )A_llist_nat_a_llist_fun_fun$ )
(declare-fun uva$ (Nat_a_llist_fun_nat_a_llist_fun_fun$ )Nat_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uvb$ (A_llist_nat_a_llist_fun_fun$ )Nat_a_llist_a_llist_fun_fun$ )
(declare-fun uvc$ (A_llist_a_llist_fun$ )Nat_nat_a_llist_fun_a_llist_fun_fun$ )
(declare-fun uvd$ (A_llist_nat_a_llist_fun_fun$ )Nat_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )
(declare-fun lSup$ ()A_llist_set_a_llist_fun$ )
(declare-fun mcont$ (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Nat_a_llist_fun_set_nat_a_llist_fun_fun$ Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ A_llist_nat_a_llist_fun_fun$ )Bool )
(declare-fun ldropn$ (Nat$ )A_llist_a_llist_fun$ )
(declare-fun mcont$a (Nat_a_llist_fun_set_nat_a_llist_fun_fun$ Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ Nat_a_llist_fun_set_nat_a_llist_fun_fun$ Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ Nat_a_llist_fun_nat_a_llist_fun_fun$ )Bool )
(declare-fun mcont$b (Nat_a_llist_fun_set_nat_a_llist_fun_fun$ Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ Nat_a_llist_fun_a_llist_fun$ )Bool )
(declare-fun mcont$c (A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_set_a_llist_fun$ A_llist_a_llist_bool_fun_fun$ A_llist_a_llist_fun$ )Bool )
(declare-fun fun_app$ (Nat_a_llist_fun$ Nat$ )A_llist$ )
(declare-fun fun_lub$ (A_llist_set_a_llist_fun$ )Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )
(declare-fun fun_ord$ (A_llist_a_llist_bool_fun_fun$ )Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )
(declare-fun lprefix$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun fun_app$a (A_llist_nat_a_llist_fun_fun$ A_llist$ )Nat_a_llist_fun$ )
(declare-fun fun_app$b (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$c (A_llist_a_llist_fun_a_llist_a_llist_fun_fun$ A_llist_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$d (A_llist_a_llist_a_llist_fun_fun$ A_llist$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$e (A_llist_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ A_llist_a_llist_fun$ )A_llist_nat_a_llist_fun_fun$ )
(declare-fun fun_app$f (A_llist_a_llist_nat_a_llist_fun_fun_fun$ A_llist$ )A_llist_nat_a_llist_fun_fun$ )
(declare-fun fun_app$g (A_llist_nat_a_llist_fun_fun_a_llist_a_llist_fun_fun$ A_llist_nat_a_llist_fun_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$h (Nat_a_llist_fun_a_llist_fun$ Nat_a_llist_fun$ )A_llist$ )
(declare-fun fun_app$i (A_llist_nat_a_llist_fun_a_llist_fun_fun$ A_llist$ )Nat_a_llist_fun_a_llist_fun$ )
(declare-fun fun_app$j (A_llist_nat_a_llist_fun_fun_a_llist_nat_a_llist_fun_fun_fun$ A_llist_nat_a_llist_fun_fun$ )A_llist_nat_a_llist_fun_fun$ )
(declare-fun fun_app$k (Nat_a_llist_fun_nat_a_llist_fun_fun$ Nat_a_llist_fun$ )Nat_a_llist_fun$ )
(declare-fun fun_app$l (A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ A_llist$ )Nat_a_llist_fun_nat_a_llist_fun_fun$ )
(declare-fun fun_app$m (Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ Nat_a_llist_fun_a_llist_fun$ )Nat_a_llist_fun_a_llist_fun$ )
(declare-fun fun_app$n (Nat_a_llist_fun_a_llist_a_llist_fun_fun$ Nat_a_llist_fun$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$o (Nat_a_llist_fun_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ Nat_a_llist_fun_a_llist_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun$ )
(declare-fun fun_app$p (Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ Nat_a_llist_fun$ )A_llist_nat_a_llist_fun_fun$ )
(declare-fun fun_app$q (Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_a_llist_fun_fun$ Nat_a_llist_fun_nat_a_llist_fun_fun$ )Nat_a_llist_fun_a_llist_fun$ )
(declare-fun fun_app$r (Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ Nat_a_llist_fun$ )Nat_a_llist_fun_a_llist_fun$ )
(declare-fun fun_app$s (Nat_a_llist_fun_nat_a_llist_fun_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ Nat_a_llist_fun_nat_a_llist_fun_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun$ )
(declare-fun fun_app$t (Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ Nat_a_llist_fun$ )Nat_a_llist_fun_nat_a_llist_fun_fun$ )
(declare-fun fun_app$u (Nat_a_llist_a_llist_fun_fun$ Nat$ )A_llist_a_llist_fun$ )
(declare-fun fun_app$v (Nat_nat_a_llist_fun_a_llist_fun_fun$ Nat$ )Nat_a_llist_fun_a_llist_fun$ )
(declare-fun fun_app$w (Nat_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ Nat$ )Nat_a_llist_fun_nat_a_llist_fun_fun$ )
(declare-fun fun_app$x (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$y (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$z (Nat_a_llist_fun_bool_fun$ Nat_a_llist_fun$ )Bool )
(declare-fun fun_app$aa (Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ Nat_a_llist_fun$ )Nat_a_llist_fun_bool_fun$ )
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uu$ ?v0 )?v1 )(fun_app$b (ldropn$ ?v1 )?v0 )):pattern ((fun_app$ (fun_app$a uu$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$c (uuj$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$d ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$c (uuj$ ?v0 )?v1 )?v2 )))):named a1 ))
(assert (! (forall ((?v0 A_llist_a_llist_nat_a_llist_fun_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$e (uuh$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$f ?v0 ?v2 )(fun_app$b ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$e (uuh$ ?v0 )?v1 )?v2 )))):named a2 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_a_llist_fun_fun$ )(?v1 A_llist_nat_a_llist_fun_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$g (uup$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i ?v0 ?v2 )(fun_app$a ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$g (uup$ ?v0 )?v1 )?v2 )))):named a3 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )(?v1 A_llist_nat_a_llist_fun_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$j (uuf$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$l ?v0 ?v2 )(fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$j (uuf$ ?v0 )?v1 )?v2 )))):named a4 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_a_llist_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_a_llist_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$m (uul$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$n ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$m (uul$ ?v0 )?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )(?v1 Nat_a_llist_fun_a_llist_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$k (fun_app$o (uub$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$p ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$o (uub$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$q (uun$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$r ?v0 ?v2 )(fun_app$k ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$q (uun$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$k (fun_app$s (uud$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$t ?v0 ?v2 )(fun_app$k ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$s (uud$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_llist_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$d (uui$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$d ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$d (uui$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_llist_a_llist_nat_a_llist_fun_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$f (uug$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$f ?v0 ?v2 )?v1 )):pattern ((fun_app$a (fun_app$f (uug$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_fun$ )(?v1 Nat$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$u (uvb$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$a ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$u (uvb$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$n (uuo$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$i ?v0 ?v2 )?v1 )):pattern ((fun_app$b (fun_app$n (uuo$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )(?v1 Nat_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$p (uue$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$l ?v0 ?v2 )?v1 )):pattern ((fun_app$a (fun_app$p (uue$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_a_llist_a_llist_fun_fun$ )(?v1 A_llist$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$i (uuk$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$n ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$i (uuk$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )(?v1 A_llist$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$k (fun_app$l (uua$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$p ?v0 ?v2 )?v1 )):pattern ((fun_app$k (fun_app$l (uua$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v1 Nat$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$v (uva$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$k ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$v (uva$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$r (uum$ ?v0 )?v1 )?v2 )(fun_app$h (fun_app$r ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$r (uum$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )(?v1 Nat_a_llist_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$k (fun_app$t (uuc$ ?v0 )?v1 )?v2 )(fun_app$k (fun_app$t ?v0 ?v2 )?v1 )):pattern ((fun_app$k (fun_app$t (uuc$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$c (uuu$ ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$c (uuu$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Nat_a_llist_fun_a_llist_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$m (uuv$ ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$h ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$m (uuv$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$e (uut$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$b ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$e (uut$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_a_llist_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$k (fun_app$o (uuq$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$h ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$o (uuq$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_a_llist_fun$ )(?v1 A_llist_nat_a_llist_fun_fun$ )(?v2 A_llist$ ))(! (= (fun_app$b (fun_app$g (uux$ ?v0 )?v1 )?v2 )(fun_app$h ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$b (fun_app$g (uux$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_a_llist_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$q (uuw$ ?v0 )?v1 )?v2 )(fun_app$h ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$q (uuw$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v1 A_llist_nat_a_llist_fun_fun$ )(?v2 A_llist$ ))(! (= (fun_app$a (fun_app$j (uus$ ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$a ?v1 ?v2 ))):pattern ((fun_app$a (fun_app$j (uus$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$k (fun_app$s (uur$ ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$k ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$s (uur$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_llist_a_llist_fun$ )(?v1 Nat$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$h (fun_app$v (uvc$ ?v0 )?v1 )?v2 )(fun_app$b ?v0 (fun_app$ ?v2 ?v1 ))):pattern ((fun_app$h (fun_app$v (uvc$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_llist_nat_a_llist_fun_fun$ )(?v1 Nat$ )(?v2 Nat_a_llist_fun$ ))(! (= (fun_app$k (fun_app$w (uvd$ ?v0 )?v1 )?v2 )(fun_app$a ?v0 (fun_app$ ?v2 ?v1 ))):pattern ((fun_app$k (fun_app$w (uvd$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 Nat_a_llist_fun$ )(?v1 A_llist$ ))(! (= (fun_app$a (uuz$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (uuz$ ?v0 )?v1 )))):named a29 ))
(assert (! (forall ((?v0 Nat_a_llist_fun$ )(?v1 Nat_a_llist_fun$ ))(! (= (fun_app$k (uuy$ ?v0 )?v1 )?v0 ):pattern ((fun_app$k (uuy$ ?v0 )?v1 )))):named a30 ))
(assert (! (not (mcont$ lSup$ lprefix$ (fun_lub$ lSup$ )(fun_ord$ lprefix$ )uu$ )):named a31 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$x (fun_app$y lprefix$ ?v0 )?v0 )):named a32 ))
(assert (! (forall ((?v0 A_llist$ ))(fun_app$x (fun_app$y lprefix$ ?v0 )?v0 )):named a33 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Nat_a_llist_fun_a_llist_nat_a_llist_fun_fun_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_a_llist_fun$ ))(=> (and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$ ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$p ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$a ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$l (uua$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$a ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$o (uub$ ?v2 )?v5 )))):named a34 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 Nat_a_llist_fun_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_nat_a_llist_fun_fun$ ))(=> (and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$a ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$t ?v2 ?v6 )))(and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$a ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$t (uuc$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$a ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$s (uud$ ?v2 )?v5 )))):named a35 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 A_llist_nat_a_llist_fun_nat_a_llist_fun_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_nat_a_llist_fun_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$a ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$l ?v2 ?v6 )))(and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$ ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$p (uue$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$j (uuf$ ?v2 )?v5 )))):named a36 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_nat_a_llist_fun_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$ ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$f ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$ ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$f (uug$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$ ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$e (uuh$ ?v2 )?v5 )))):named a37 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (fun_app$d ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$d (uui$ ?v2 )?v6 )))(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$c (uuj$ ?v2 )?v5 )))):named a38 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Nat_a_llist_fun_a_llist_a_llist_fun_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_a_llist_fun$ ))(=> (and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$c ?v0 ?v1 lSup$ lprefix$ (fun_app$n ?v2 ?v6 )))(and (forall ((?v6 A_llist$ ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$i (uuk$ ?v2 )?v6 )))(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$m (uul$ ?v2 )?v5 )))):named a39 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 Nat_a_llist_fun_nat_a_llist_fun_a_llist_fun_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_nat_a_llist_fun_fun$ ))(=> (and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$b ?v0 ?v1 lSup$ lprefix$ (fun_app$r ?v2 ?v6 )))(and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$r (uum$ ?v2 )?v6 )))(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$q (uun$ ?v2 )?v5 )))):named a40 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 A_llist_nat_a_llist_fun_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_nat_a_llist_fun_fun$ ))(=> (and (forall ((?v6 A_llist$ ))(mcont$b ?v0 ?v1 lSup$ lprefix$ (fun_app$i ?v2 ?v6 )))(and (forall ((?v6 Nat_a_llist_fun$ ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$n (uuo$ ?v2 )?v6 )))(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 )))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$g (uup$ ?v2 )?v5 )))):named a41 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_nat_a_llist_fun_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_a_llist_fun$ ))(=> (and (mcont$ ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$a ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$o (uuq$ ?v2 )?v5 )))):named a42 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_nat_a_llist_fun_fun$ ))(=> (and (mcont$a ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )?v2 )(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$a ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$s (uur$ ?v2 )?v5 )))):named a43 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 Nat_a_llist_fun_nat_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_nat_a_llist_fun_fun$ ))(=> (and (mcont$a ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$j (uus$ ?v2 )?v5 )))):named a44 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_nat_a_llist_fun_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (mcont$ ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )?v2 )(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$ ?v3 ?v4 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(fun_app$e (uut$ ?v2 )?v5 )))):named a45 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_a_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$c ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$c (uuu$ ?v2 )?v5 )))):named a46 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_a_llist_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_a_llist_fun$ ))(=> (and (mcont$c ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$b ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$m (uuv$ ?v2 )?v5 )))):named a47 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 Nat_a_llist_fun_a_llist_fun$ )(?v3 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v5 Nat_a_llist_fun_nat_a_llist_fun_fun$ ))(=> (and (mcont$b ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$a ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$b ?v3 ?v4 lSup$ lprefix$ (fun_app$q (uuw$ ?v2 )?v5 )))):named a48 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 Nat_a_llist_fun_a_llist_fun$ )(?v3 A_llist_set_a_llist_fun$ )(?v4 A_llist_a_llist_bool_fun_fun$ )(?v5 A_llist_nat_a_llist_fun_fun$ ))(=> (and (mcont$b ?v0 ?v1 lSup$ lprefix$ ?v2 )(mcont$ ?v3 ?v4 ?v0 ?v1 ?v5 ))(mcont$c ?v3 ?v4 lSup$ lprefix$ (fun_app$g (uux$ ?v2 )?v5 )))):named a49 ))
(assert (! (forall ((?v0 Nat_a_llist_fun$ )(?v1 Nat_a_llist_fun$ )(?v2 Nat_a_llist_fun$ ))(=> (and (fun_app$z (fun_app$aa (fun_ord$ lprefix$ )?v0 )?v1 )(fun_app$z (fun_app$aa (fun_ord$ lprefix$ )?v1 )?v2 ))(fun_app$z (fun_app$aa (fun_ord$ lprefix$ )?v0 )?v2 ))):named a50 ))
(assert (! (forall ((?v0 Nat_a_llist_fun$ )(?v1 Nat_a_llist_fun$ ))(=> (and (fun_app$z (fun_app$aa (fun_ord$ lprefix$ )?v0 )?v1 )(fun_app$z (fun_app$aa (fun_ord$ lprefix$ )?v1 )?v0 ))(= ?v0 ?v1 ))):named a51 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$x (fun_app$y lprefix$ ?v0 )?v1 )(fun_app$x (fun_app$y lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a52 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (fun_app$x (fun_app$y lprefix$ ?v0 )?v1 )(fun_app$x (fun_app$y lprefix$ ?v1 )?v0 ))(= ?v0 ?v1 ))):named a53 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$x (fun_app$y lprefix$ ?v0 )?v1 )(fun_app$x (fun_app$y lprefix$ ?v2 )?v1 ))(or (fun_app$x (fun_app$y lprefix$ ?v0 )?v2 )(fun_app$x (fun_app$y lprefix$ ?v2 )?v0 )))):named a54 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$x (fun_app$y lprefix$ ?v0 )?v1 )(fun_app$x (fun_app$y lprefix$ ?v1 )?v2 ))(fun_app$x (fun_app$y lprefix$ ?v0 )?v2 ))):named a55 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (and (fun_app$x (fun_app$y lprefix$ ?v0 )?v1 )(fun_app$x (fun_app$y lprefix$ ?v1 )?v2 ))(fun_app$x (fun_app$y lprefix$ ?v0 )?v2 ))):named a56 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 Nat_a_llist_fun$ ))(mcont$a ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(uuy$ ?v2 ))):named a57 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Nat_a_llist_fun$ ))(mcont$ ?v0 ?v1 (fun_lub$ lSup$ )(fun_ord$ lprefix$ )(uuz$ ?v2 ))):named a58 ))
(assert (! (forall ((?v0 Nat_a_llist_fun$ ))(fun_app$z (fun_app$aa (fun_ord$ lprefix$ )?v0 )?v0 )):named a59 ))
(assert (! (forall ((?v0 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v1 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v2 A_llist_set_a_llist_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 Nat_a_llist_fun_nat_a_llist_fun_fun$ ))(= (mcont$a ?v0 ?v1 (fun_lub$ ?v2 )(fun_ord$ ?v3 )?v4 )(forall ((?v5 Nat$ ))(mcont$b ?v0 ?v1 ?v2 ?v3 (fun_app$v (uva$ ?v4 )?v5 ))))):named a60 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_set_a_llist_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_nat_a_llist_fun_fun$ ))(= (mcont$ ?v0 ?v1 (fun_lub$ ?v2 )(fun_ord$ ?v3 )?v4 )(forall ((?v5 Nat$ ))(mcont$c ?v0 ?v1 ?v2 ?v3 (fun_app$u (uvb$ ?v4 )?v5 ))))):named a61 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 A_llist_set_a_llist_fun$ )(?v3 A_llist_a_llist_bool_fun_fun$ )(?v4 A_llist_a_llist_fun$ )(?v5 Nat$ ))(=> (mcont$c ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$b (fun_lub$ ?v0 )(fun_ord$ ?v1 )?v2 ?v3 (fun_app$v (uvc$ ?v4 )?v5 )))):named a62 ))
(assert (! (forall ((?v0 A_llist_set_a_llist_fun$ )(?v1 A_llist_a_llist_bool_fun_fun$ )(?v2 Nat_a_llist_fun_set_nat_a_llist_fun_fun$ )(?v3 Nat_a_llist_fun_nat_a_llist_fun_bool_fun_fun$ )(?v4 A_llist_nat_a_llist_fun_fun$ )(?v5 Nat$ ))(=> (mcont$ ?v0 ?v1 ?v2 ?v3 ?v4 )(mcont$a (fun_lub$ ?v0 )(fun_ord$ ?v1 )?v2 ?v3 (fun_app$w (uvd$ ?v4 )?v5 )))):named a63 ))
(check-sat )
;(get-unsat-core )
