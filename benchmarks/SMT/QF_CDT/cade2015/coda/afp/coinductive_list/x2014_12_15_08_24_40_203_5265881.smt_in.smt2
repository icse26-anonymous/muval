;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_llist_bool_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort B_b_bool_fun_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort A_llist_a_llist_bool_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(B_llist$ (lNil$a )(lCons$a (lhd$a B$ )(ltl$a B_llist$ )))))
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun p$ ()A_b_bool_fun_fun$ )
(declare-fun q$ ()A_b_bool_fun_fun$ )
(declare-fun uu$ ()A_b_bool_fun_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun ys$ ()B_llist$ )
(declare-fun uua$ ()B_b_bool_fun_fun$ )
(declare-fun uub$ ()B_llist_b_llist_bool_fun_fun$ )
(declare-fun uuc$ ()A_a_bool_fun_fun$ )
(declare-fun uud$ ()A_llist_a_llist_bool_fun_fun$ )
(declare-fun uue$ ()A_a_bool_fun_fun$ )
(declare-fun uuf$ ()B_a_bool_fun_fun$ )
(declare-fun uug$ ()B_b_bool_fun_fun$ )
(declare-fun uuh$ ()A_b_bool_fun_fun$ )
(declare-fun uui$ (A_b_bool_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun uuj$ (B_b_bool_fun_fun$ A_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuk$ (B_b_bool_fun_fun$ B_b_fun$ )B_b_bool_fun_fun$ )
(declare-fun uul$ (B_a_bool_fun_fun$ B_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun uum$ (B_a_bool_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun uun$ (A_a_bool_fun_fun$ B_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uuo$ (A_a_bool_fun_fun$ A_a_fun$ )A_a_bool_fun_fun$ )
(declare-fun uup$ (A_b_bool_fun_fun$ A_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuq$ (A_b_bool_fun_fun$ A_b_fun$ )A_a_bool_fun_fun$ )
(declare-fun uur$ (B_b_bool_fun_fun$ B_b_fun$ )B_b_bool_fun_fun$ )
(declare-fun uus$ (B_b_bool_fun_fun$ A_b_fun$ )B_a_bool_fun_fun$ )
(declare-fun uut$ (B_a_bool_fun_fun$ B_a_fun$ )B_b_bool_fun_fun$ )
(declare-fun uuu$ (B_a_bool_fun_fun$ A_a_fun$ )B_a_bool_fun_fun$ )
(declare-fun uuv$ (A_a_bool_fun_fun$ B_a_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuw$ (A_a_bool_fun_fun$ A_a_fun$ )A_a_bool_fun_fun$ )
(declare-fun uux$ (A_b_bool_fun_fun$ B_b_fun$ )A_b_bool_fun_fun$ )
(declare-fun uuy$ ()A_a_fun$ )
(declare-fun uuz$ ()B_b_fun$ )
(declare-fun lmap$ (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun lmap$a (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$b (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$c (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun lnull$a (B_llist$ )Bool )
(declare-fun fun_app$ (B_bool_fun$ B$ )Bool )
(declare-fun llength$ (A_llist$ )Enat$ )
(declare-fun fun_app$a (A_b_bool_fun_fun$ A$ )B_bool_fun$ )
(declare-fun fun_app$b (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun fun_app$c (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$d (A_llist_bool_fun$ A_llist$ )Bool )
(declare-fun fun_app$e (A_llist_a_llist_bool_fun_fun$ A_llist$ )A_llist_bool_fun$ )
(declare-fun fun_app$f (B_b_bool_fun_fun$ B$ )B_bool_fun$ )
(declare-fun fun_app$g (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$h (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$i (B_b_fun$ B$ )B$ )
(declare-fun fun_app$j (A_b_fun$ A$ )B$ )
(declare-fun fun_app$k (B_a_bool_fun_fun$ B$ )A_bool_fun$ )
(declare-fun fun_app$l (B_a_fun$ B$ )A$ )
(declare-fun fun_app$m (A_a_fun$ A$ )A$ )
(declare-fun llength$a (B_llist$ )Enat$ )
(declare-fun llist_all2$ (A_b_bool_fun_fun$ A_llist$ )B_llist_bool_fun$ )
(declare-fun llist_all2$a (B_b_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (A_a_bool_fun_fun$ )A_llist_a_llist_bool_fun_fun$ )
(declare-fun llist_all2$c (B_a_bool_fun_fun$ B_llist$ )A_llist_bool_fun$ )
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$ (fun_app$a uu$ ?v0 )?v1 )(and (fun_app$ (fun_app$a p$ ?v0 )?v1 )(fun_app$ (fun_app$a q$ ?v0 )?v1 ))):pattern ((fun_app$ (fun_app$a uu$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(! (= (fun_app$b (fun_app$c uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uub$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (= (fun_app$d (fun_app$e uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uud$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$ (fun_app$f uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$f uua$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$h uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$g (fun_app$h uuc$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$f (uuk$ ?v0 ?v1 )?v2 )(fun_app$f ?v0 (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$f (uuk$ ?v0 ?v1 )?v2 )))):named a5 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$a (uuj$ ?v0 ?v1 )?v2 )(fun_app$f ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$a (uuj$ ?v0 ?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$k (uul$ ?v0 ?v1 )?v2 )(fun_app$k ?v0 (fun_app$i ?v1 ?v2 ))):pattern ((fun_app$k (uul$ ?v0 ?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$h (uum$ ?v0 ?v1 )?v2 )(fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$h (uum$ ?v0 ?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$f (uui$ ?v0 ?v1 )?v2 )(fun_app$a ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$f (uui$ ?v0 ?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$a (uup$ ?v0 ?v1 )?v2 )(fun_app$a ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$a (uup$ ?v0 ?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$k (uun$ ?v0 ?v1 )?v2 )(fun_app$h ?v0 (fun_app$l ?v1 ?v2 ))):pattern ((fun_app$k (uun$ ?v0 ?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$h (uuo$ ?v0 ?v1 )?v2 )(fun_app$h ?v0 (fun_app$m ?v1 ?v2 ))):pattern ((fun_app$h (uuo$ ?v0 ?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$f (uur$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$f ?v0 ?v2 )(fun_app$i ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$f (uur$ ?v0 ?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$k (uus$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$f ?v0 ?v2 )(fun_app$j ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$k (uus$ ?v0 ?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$f (uut$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$k ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$f (uut$ ?v0 ?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 B$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$k (uuu$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$k ?v0 ?v2 )(fun_app$m ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$k (uuu$ ?v0 ?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (uux$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$a ?v0 ?v2 )(fun_app$i ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uux$ ?v0 ?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$h (uuq$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ (fun_app$a ?v0 ?v2 )(fun_app$j ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uuq$ ?v0 ?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 A$ )(?v3 B$ ))(! (= (fun_app$ (fun_app$a (uuv$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$h ?v0 ?v2 )(fun_app$l ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (uuv$ ?v0 ?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$h (uuw$ ?v0 ?v1 )?v2 )?v3 )(fun_app$g (fun_app$h ?v0 ?v2 )(fun_app$m ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uuw$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(! (= (fun_app$ (fun_app$f uug$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$f uug$ ?v0 )?v1 )))):named a21 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$k uuf$ ?v0 )?v1 )true ):pattern ((fun_app$g (fun_app$k uuf$ ?v0 )?v1 )))):named a22 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$ (fun_app$a uuh$ ?v0 )?v1 )true ):pattern ((fun_app$ (fun_app$a uuh$ ?v0 )?v1 )))):named a23 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$h uue$ ?v0 )?v1 )true ):pattern ((fun_app$g (fun_app$h uue$ ?v0 )?v1 )))):named a24 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$i uuz$ ?v0 )?v0 ):pattern ((fun_app$i uuz$ ?v0 )))):named a25 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$m uuy$ ?v0 )?v0 ):pattern ((fun_app$m uuy$ ?v0 )))):named a26 ))
(assert (! (not (= (fun_app$b (llist_all2$ uu$ xs$ )ys$ )(and (fun_app$b (llist_all2$ p$ xs$ )ys$ )(fun_app$b (llist_all2$ q$ xs$ )ys$ )))):named a27 ))
(assert (! (= (llist_all2$a uua$ )uub$ ):named a28 ))
(assert (! (= (llist_all2$b uuc$ )uud$ ):named a29 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ )(?v3 B_b_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 B$ )(?v5 B$ ))(=> (fun_app$ (fun_app$f ?v0 ?v4 )?v5 )(fun_app$ (fun_app$f ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$c (llist_all2$a ?v3 )?v1 )?v2 ))):named a30 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ )(?v3 B_a_bool_fun_fun$ ))(=> (and (fun_app$d (llist_all2$c ?v0 ?v1 )?v2 )(forall ((?v4 B$ )(?v5 A$ ))(=> (fun_app$g (fun_app$k ?v0 ?v4 )?v5 )(fun_app$g (fun_app$k ?v3 ?v4 )?v5 ))))(fun_app$d (llist_all2$c ?v3 ?v1 )?v2 ))):named a31 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ )(?v3 A_a_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 A$ )(?v5 A$ ))(=> (fun_app$g (fun_app$h ?v0 ?v4 )?v5 )(fun_app$g (fun_app$h ?v3 ?v4 )?v5 ))))(fun_app$d (fun_app$e (llist_all2$b ?v3 )?v1 )?v2 ))):named a32 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ )(?v3 A_b_bool_fun_fun$ ))(=> (and (fun_app$b (llist_all2$ ?v0 ?v1 )?v2 )(forall ((?v4 A$ )(?v5 B$ ))(=> (fun_app$ (fun_app$a ?v0 ?v4 )?v5 )(fun_app$ (fun_app$a ?v3 ?v4 )?v5 ))))(fun_app$b (llist_all2$ ?v3 ?v1 )?v2 ))):named a33 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b uue$ )?v0 )?v1 )(= (llength$ ?v0 )(llength$ ?v1 )))):named a34 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 A_llist$ ))(= (fun_app$d (llist_all2$c uuf$ ?v0 )?v1 )(= (llength$a ?v0 )(llength$ ?v1 )))):named a35 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a uug$ )?v0 )?v1 )(= (llength$a ?v0 )(llength$a ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 B_llist$ ))(= (fun_app$b (llist_all2$ uuh$ ?v0 )?v1 )(= (llength$ ?v0 )(llength$a ?v1 )))):named a37 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )lNil$a )(= ?v1 lNil$a )):pattern ((fun_app$c (llist_all2$a ?v0 )?v1 )))):named a38 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$d (llist_all2$c ?v0 ?v1 )lNil$ )(= ?v1 lNil$a )):pattern ((llist_all2$c ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )lNil$ )(= ?v1 lNil$ )):pattern ((fun_app$e (llist_all2$b ?v0 )?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$b (llist_all2$ ?v0 ?v1 )lNil$a )(= ?v1 lNil$ )):pattern ((llist_all2$ ?v0 ?v1 )))):named a41 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$a ?v0 )lNil$a )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$b (fun_app$c (llist_all2$a ?v0 )lNil$a )?v1 )))):named a42 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$d (llist_all2$c ?v0 lNil$a )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$d (llist_all2$c ?v0 lNil$a )?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$b ?v0 )lNil$ )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$d (fun_app$e (llist_all2$b ?v0 )lNil$ )?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_llist$ ))(! (= (fun_app$b (llist_all2$ ?v0 lNil$ )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$b (llist_all2$ ?v0 lNil$ )?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 (lmap$ ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (uui$ ?v0 ?v1 ))?v2 )?v3 ))):named a46 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$a ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$ (uuj$ ?v0 ?v1 )?v2 )?v3 ))):named a47 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$b ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (uuk$ ?v0 ?v1 ))?v2 )?v3 ))):named a48 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 (lmap$b ?v1 ?v2 ))?v3 )(fun_app$d (llist_all2$c (uul$ ?v0 ?v1 )?v2 )?v3 ))):named a49 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 (lmap$a ?v1 ?v2 ))?v3 )(fun_app$d (fun_app$e (llist_all2$b (uum$ ?v0 ?v1 ))?v2 )?v3 ))):named a50 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )(lmap$ ?v1 ?v2 ))?v3 )(fun_app$d (llist_all2$c (uun$ ?v0 ?v1 )?v2 )?v3 ))):named a51 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )(lmap$c ?v1 ?v2 ))?v3 )(fun_app$d (fun_app$e (llist_all2$b (uuo$ ?v0 ?v1 ))?v2 )?v3 ))):named a52 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$ (uup$ ?v0 ?v1 )?v2 )?v3 ))):named a53 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 (lmap$ ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (uui$ ?v0 ?v1 ))?v2 )?v3 ))):named a54 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$a ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$ (uuj$ ?v0 ?v1 )?v2 )?v3 ))):named a55 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lmap$b ?v1 ?v2 ))?v3 )(fun_app$b (fun_app$c (llist_all2$a (uuk$ ?v0 ?v1 ))?v2 )?v3 ))):named a56 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 (lmap$b ?v1 ?v2 ))?v3 )(fun_app$d (llist_all2$c (uul$ ?v0 ?v1 )?v2 )?v3 ))):named a57 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 (lmap$a ?v1 ?v2 ))?v3 )(fun_app$d (fun_app$e (llist_all2$b (uum$ ?v0 ?v1 ))?v2 )?v3 ))):named a58 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )(lmap$ ?v1 ?v2 ))?v3 )(fun_app$d (llist_all2$c (uun$ ?v0 ?v1 )?v2 )?v3 ))):named a59 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )(lmap$c ?v1 ?v2 ))?v3 )(fun_app$d (fun_app$e (llist_all2$b (uuo$ ?v0 ?v1 ))?v2 )?v3 ))):named a60 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 (lmap$c ?v1 ?v2 ))?v3 )(fun_app$b (llist_all2$ (uup$ ?v0 ?v1 )?v2 )?v3 ))):named a61 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$b (llist_all2$ ?v0 ?v1 )(lmap$a ?v2 ?v3 ))(fun_app$d (fun_app$e (llist_all2$b (uuq$ ?v0 ?v2 ))?v1 )?v3 ))):named a62 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )(lmap$b ?v2 ?v3 ))(fun_app$b (fun_app$c (llist_all2$a (uur$ ?v0 ?v2 ))?v1 )?v3 ))):named a63 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )(lmap$a ?v2 ?v3 ))(fun_app$d (llist_all2$c (uus$ ?v0 ?v2 )?v1 )?v3 ))):named a64 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$d (llist_all2$c ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(fun_app$b (fun_app$c (llist_all2$a (uut$ ?v0 ?v2 ))?v1 )?v3 ))):named a65 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 ?v1 )(lmap$c ?v2 ?v3 ))(fun_app$d (llist_all2$c (uuu$ ?v0 ?v2 )?v1 )?v3 ))):named a66 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )(lmap$ ?v2 ?v3 ))(fun_app$b (llist_all2$ (uuv$ ?v0 ?v2 )?v1 )?v3 ))):named a67 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )(lmap$c ?v2 ?v3 ))(fun_app$d (fun_app$e (llist_all2$b (uuw$ ?v0 ?v2 ))?v1 )?v3 ))):named a68 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(fun_app$b (llist_all2$ (uux$ ?v0 ?v2 )?v1 )?v3 ))):named a69 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$b (llist_all2$ ?v0 ?v1 )(lmap$a ?v2 ?v3 ))(fun_app$d (fun_app$e (llist_all2$b (uuq$ ?v0 ?v2 ))?v1 )?v3 ))):named a70 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )(lmap$b ?v2 ?v3 ))(fun_app$b (fun_app$c (llist_all2$a (uur$ ?v0 ?v2 ))?v1 )?v3 ))):named a71 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_b_fun$ )(?v3 A_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )(lmap$a ?v2 ?v3 ))(fun_app$d (llist_all2$c (uus$ ?v0 ?v2 )?v1 )?v3 ))):named a72 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$d (llist_all2$c ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(fun_app$b (fun_app$c (llist_all2$a (uut$ ?v0 ?v2 ))?v1 )?v3 ))):named a73 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 ?v1 )(lmap$c ?v2 ?v3 ))(fun_app$d (llist_all2$c (uuu$ ?v0 ?v2 )?v1 )?v3 ))):named a74 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_a_fun$ )(?v3 B_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )(lmap$ ?v2 ?v3 ))(fun_app$b (llist_all2$ (uuv$ ?v0 ?v2 )?v1 )?v3 ))):named a75 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )(lmap$c ?v2 ?v3 ))(fun_app$d (fun_app$e (llist_all2$b (uuw$ ?v0 ?v2 ))?v1 )?v3 ))):named a76 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_b_fun$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 ?v1 )(lmap$b ?v2 ?v3 ))(fun_app$b (llist_all2$ (uux$ ?v0 ?v2 )?v1 )?v3 ))):named a77 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$b ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$g (fun_app$h ?v0 ?v1 )?v3 )(fun_app$d (fun_app$e (llist_all2$b ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$e (llist_all2$b ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a78 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 A$ )(?v4 A_llist$ ))(! (= (fun_app$d (llist_all2$c ?v0 (lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$g (fun_app$k ?v0 ?v1 )?v3 )(fun_app$d (llist_all2$c ?v0 ?v2 )?v4 ))):pattern ((fun_app$d (llist_all2$c ?v0 (lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a79 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$ (fun_app$f ?v0 ?v1 )?v3 )(fun_app$b (fun_app$c (llist_all2$a ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$c (llist_all2$a ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a80 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 B$ )(?v4 B_llist$ ))(! (= (fun_app$b (llist_all2$ ?v0 (lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$ (fun_app$a ?v0 ?v1 )?v3 )(fun_app$b (llist_all2$ ?v0 ?v2 )?v4 ))):pattern ((fun_app$b (llist_all2$ ?v0 (lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a81 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ ))(fun_app$b (fun_app$c (llist_all2$a ?v0 )lNil$a )lNil$a )):named a82 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ ))(fun_app$d (llist_all2$c ?v0 lNil$a )lNil$ )):named a83 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ ))(fun_app$d (fun_app$e (llist_all2$b ?v0 )lNil$ )lNil$ )):named a84 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ ))(fun_app$b (llist_all2$ ?v0 lNil$ )lNil$a )):named a85 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(=> (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )?v2 )(= (lnull$ ?v1 )(lnull$ ?v2 )))):named a86 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A_llist$ ))(=> (fun_app$d (llist_all2$c ?v0 ?v1 )?v2 )(= (lnull$a ?v1 )(lnull$ ?v2 )))):named a87 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B_llist$ ))(=> (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )?v2 )(= (lnull$a ?v1 )(lnull$a ?v2 )))):named a88 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B_llist$ ))(=> (fun_app$b (llist_all2$ ?v0 ?v1 )?v2 )(= (lnull$ ?v1 )(lnull$a ?v2 )))):named a89 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )(lCons$ ?v1 ?v2 ))?v3 )(exists ((?v4 A$ )(?v5 A_llist$ ))(and (= ?v3 (lCons$ ?v4 ?v5 ))(and (fun_app$g (fun_app$h ?v0 ?v1 )?v4 )(fun_app$d (fun_app$e (llist_all2$b ?v0 )?v2 )?v5 )))))):named a90 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 (lCons$a ?v1 ?v2 ))?v3 )(exists ((?v4 A$ )(?v5 A_llist$ ))(and (= ?v3 (lCons$ ?v4 ?v5 ))(and (fun_app$g (fun_app$k ?v0 ?v1 )?v4 )(fun_app$d (llist_all2$c ?v0 ?v2 )?v5 )))))):named a91 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B$ )(?v2 B_llist$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )(lCons$a ?v1 ?v2 ))?v3 )(exists ((?v4 B$ )(?v5 B_llist$ ))(and (= ?v3 (lCons$a ?v4 ?v5 ))(and (fun_app$ (fun_app$f ?v0 ?v1 )?v4 )(fun_app$b (fun_app$c (llist_all2$a ?v0 )?v2 )?v5 )))))):named a92 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A$ )(?v2 A_llist$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 (lCons$ ?v1 ?v2 ))?v3 )(exists ((?v4 B$ )(?v5 B_llist$ ))(and (= ?v3 (lCons$a ?v4 ?v5 ))(and (fun_app$ (fun_app$a ?v0 ?v1 )?v4 )(fun_app$b (llist_all2$ ?v0 ?v2 )?v5 )))))):named a93 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$b ?v0 )?v1 )(lCons$ ?v2 ?v3 ))(exists ((?v4 A$ )(?v5 A_llist$ ))(and (= ?v1 (lCons$ ?v4 ?v5 ))(and (fun_app$g (fun_app$h ?v0 ?v4 )?v2 )(fun_app$d (fun_app$e (llist_all2$b ?v0 )?v5 )?v3 )))))):named a94 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun$ )(?v1 B_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (fun_app$d (llist_all2$c ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(exists ((?v4 B$ )(?v5 B_llist$ ))(and (= ?v1 (lCons$a ?v4 ?v5 ))(and (fun_app$g (fun_app$k ?v0 ?v4 )?v2 )(fun_app$d (llist_all2$c ?v0 ?v5 )?v3 )))))):named a95 ))
(assert (! (forall ((?v0 B_b_bool_fun_fun$ )(?v1 B_llist$ )(?v2 B$ )(?v3 B_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$a ?v0 )?v1 )(lCons$a ?v2 ?v3 ))(exists ((?v4 B$ )(?v5 B_llist$ ))(and (= ?v1 (lCons$a ?v4 ?v5 ))(and (fun_app$ (fun_app$f ?v0 ?v4 )?v2 )(fun_app$b (fun_app$c (llist_all2$a ?v0 )?v5 )?v3 )))))):named a96 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_llist$ )(?v2 B$ )(?v3 B_llist$ ))(= (fun_app$b (llist_all2$ ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(exists ((?v4 A$ )(?v5 A_llist$ ))(and (= ?v1 (lCons$ ?v4 ?v5 ))(and (fun_app$ (fun_app$a ?v0 ?v4 )?v2 )(fun_app$b (llist_all2$ ?v0 ?v5 )?v3 )))))):named a97 ))
(assert (! (forall ((?v0 A$ )(?v1 A_llist$ )(?v2 A$ )(?v3 A_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a98 ))
(assert (! (forall ((?v0 B$ )(?v1 B_llist$ )(?v2 B$ )(?v3 B_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a99 ))
(assert (! (forall ((?v0 A_llist$ ))(= (lmap$c uuy$ ?v0 )?v0 )):named a100 ))
(assert (! (forall ((?v0 B_llist$ ))(= (lmap$b uuz$ ?v0 )?v0 )):named a101 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ ))(= (lnull$ (lmap$c ?v0 ?v1 ))(lnull$ ?v1 ))):named a102 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_llist$ ))(= (lnull$ (lmap$ ?v0 ?v1 ))(lnull$a ?v1 ))):named a103 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_llist$ ))(= (lnull$a (lmap$a ?v0 ?v1 ))(lnull$ ?v1 ))):named a104 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_llist$ ))(= (lnull$a (lmap$b ?v0 ?v1 ))(lnull$a ?v1 ))):named a105 ))
(check-sat )
;(get-unsat-core )
