;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort D$ 0 )
(declare-sort Nat$ 0 )
(declare-sort C_set$ 0 )
(declare-sort D_set$ 0 )
(declare-sort Nat_c_fun$ 0 )
(declare-sort Nat_d_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort D_bool_fun$ 0 )
(declare-sort C_llist_set$ 0 )
(declare-sort C_llist_a_fun$ 0 )
(declare-sort D_llist_b_fun$ 0 )
(declare-sort Nat_c_llist_fun$ 0 )
(declare-sort Nat_d_llist_fun$ 0 )
(declare-sort C_c_bool_fun_fun$ 0 )
(declare-sort C_d_bool_fun_fun$ 0 )
(declare-sort C_llist_bool_fun$ 0 )
(declare-sort D_c_bool_fun_fun$ 0 )
(declare-sort D_d_bool_fun_fun$ 0 )
(declare-sort D_llist_bool_fun$ 0 )
(declare-sort C_c_llist_a_fun_fun$ 0 )
(declare-sort C_llist_c_llist_fun$ 0 )
(declare-sort D_d_llist_b_fun_fun$ 0 )
(declare-sort D_llist_d_llist_fun$ 0 )
(declare-sort C_c_llist_bool_fun_fun$ 0 )
(declare-sort C_d_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_c_bool_fun_fun$ 0 )
(declare-sort C_llist_d_bool_fun_fun$ 0 )
(declare-sort C_llist_llist_bool_fun$ 0 )
(declare-sort D_c_llist_bool_fun_fun$ 0 )
(declare-sort D_d_llist_bool_fun_fun$ 0 )
(declare-sort D_llist_c_bool_fun_fun$ 0 )
(declare-sort D_llist_d_bool_fun_fun$ 0 )
(declare-sort D_llist_llist_bool_fun$ 0 )
(declare-sort C_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_d_llist_bool_fun_fun$ 0 )
(declare-sort D_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort D_llist_d_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_c_llist_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_d_llist_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_llist_d_llist_bool_fun_fun$ 0 )
(declare-sort D_llist_c_llist_llist_bool_fun_fun$ 0 )
(declare-sort D_llist_d_llist_llist_bool_fun_fun$ 0 )
(declare-sort D_llist_llist_c_llist_bool_fun_fun$ 0 )
(declare-sort D_llist_llist_d_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_llist_c_llist_llist_bool_fun_fun$ 0 )
(declare-sort C_llist_llist_d_llist_llist_bool_fun_fun$ 0 )
(declare-codatatypes ()((C_llist$ (lNil$ )(lCons$ (lhd$ C$ )(ltl$ C_llist$ )))(D_llist$ (lNil$a )(lCons$a (lhd$a D$ )(ltl$a D_llist$ )))(C_llist_llist$ (lNil$b )(lCons$b (lhd$b C_llist$ )(ltl$b C_llist_llist$ )))(D_llist_llist$ (lNil$c )(lCons$c (lhd$c D_llist$ )(ltl$c D_llist_llist$ )))(C_llist_llist_llist$ (lNil$d )(lCons$d (lhd$d C_llist_llist$ )(ltl$d C_llist_llist_llist$ )))(D_llist_llist_llist$ (lNil$e )(lCons$e (lhd$e D_llist_llist$ )(ltl$e D_llist_llist_llist$ )))))
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-fun a$ ()C_d_bool_fun_fun$ )
(declare-fun b$ (A$ B$ )Bool )
(declare-fun uu$ ()C_llist_c_llist_bool_fun_fun$ )
(declare-fun uua$ ()C_llist_llist_c_llist_llist_bool_fun_fun$ )
(declare-fun uub$ ()D_d_bool_fun_fun$ )
(declare-fun uuc$ ()D_llist_d_llist_bool_fun_fun$ )
(declare-fun uud$ ()C_c_bool_fun_fun$ )
(declare-fun lset$ (C_llist_llist$ )C_llist_set$ )
(declare-fun ldrop$ (Enat$ )C_llist_c_llist_fun$ )
(declare-fun lset$a (D_llist$ )D_set$ )
(declare-fun lset$b (C_llist$ )C_set$ )
(declare-fun ldrop$a (Enat$ )D_llist_d_llist_fun$ )
(declare-fun ldrop$b (Enat$ C_llist_llist$ )C_llist_llist$ )
(declare-fun ldrop$c (Enat$ D_llist_llist$ )D_llist_llist$ )
(declare-fun member$ (C_llist$ C_llist_set$ )Bool )
(declare-fun transp$ (C_llist_c_llist_bool_fun_fun$ )Bool )
(declare-fun fun_app$ (C_llist_llist_bool_fun$ C_llist_llist$ )Bool )
(declare-fun lconcat$ (C_llist_llist$ )C_llist$ )
(declare-fun member$a (D$ D_set$ )Bool )
(declare-fun member$b (C$ C_set$ )Bool )
(declare-fun transp$a (D_d_bool_fun_fun$ )Bool )
(declare-fun transp$b (C_c_bool_fun_fun$ )Bool )
(declare-fun fun_app$a (C_llist_llist_c_llist_llist_bool_fun_fun$ C_llist_llist$ )C_llist_llist_bool_fun$ )
(declare-fun fun_app$b (D_llist_bool_fun$ D_llist$ )Bool )
(declare-fun fun_app$c (D_llist_d_llist_bool_fun_fun$ D_llist$ )D_llist_bool_fun$ )
(declare-fun fun_app$d (C_llist_bool_fun$ C_llist$ )Bool )
(declare-fun fun_app$e (C_llist_c_llist_bool_fun_fun$ C_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$f (D_bool_fun$ D$ )Bool )
(declare-fun fun_app$g (D_d_bool_fun_fun$ D$ )D_bool_fun$ )
(declare-fun fun_app$h (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$i (C_c_bool_fun_fun$ C$ )C_bool_fun$ )
(declare-fun fun_app$j (C_d_bool_fun_fun$ C$ )D_bool_fun$ )
(declare-fun fun_app$k (C_llist_d_llist_bool_fun_fun$ C_llist$ )D_llist_bool_fun$ )
(declare-fun fun_app$l (C_llist_a_fun$ C_llist$ )A$ )
(declare-fun fun_app$m (C_c_llist_a_fun_fun$ C$ )C_llist_a_fun$ )
(declare-fun fun_app$n (D_llist_b_fun$ D_llist$ )B$ )
(declare-fun fun_app$o (D_d_llist_b_fun_fun$ D$ )D_llist_b_fun$ )
(declare-fun fun_app$p (D_llist_c_llist_bool_fun_fun$ D_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$q (D_c_bool_fun_fun$ D$ )C_bool_fun$ )
(declare-fun fun_app$r (D_llist_llist_bool_fun$ D_llist_llist$ )Bool )
(declare-fun fun_app$s (C_llist_llist_d_llist_llist_bool_fun_fun$ C_llist_llist$ )D_llist_llist_bool_fun$ )
(declare-fun fun_app$t (Nat_c_fun$ Nat$ )C$ )
(declare-fun fun_app$u (Nat_d_fun$ Nat$ )D$ )
(declare-fun fun_app$v (Nat_c_llist_fun$ Nat$ )C_llist$ )
(declare-fun fun_app$w (Nat_d_llist_fun$ Nat$ )D_llist$ )
(declare-fun fun_app$x (C_llist_c_llist_llist_bool_fun_fun$ C_llist$ )C_llist_llist_bool_fun$ )
(declare-fun fun_app$y (C_c_llist_bool_fun_fun$ C$ )C_llist_bool_fun$ )
(declare-fun fun_app$z (C_llist_d_llist_llist_bool_fun_fun$ C_llist$ )D_llist_llist_bool_fun$ )
(declare-fun lconcat$a (D_llist_llist$ )D_llist$ )
(declare-fun lconcat$b (C_llist_llist_llist$ )C_llist_llist$ )
(declare-fun lconcat$c (D_llist_llist_llist$ )D_llist_llist$ )
(declare-fun fun_app$aa (C_d_llist_bool_fun_fun$ C$ )D_llist_bool_fun$ )
(declare-fun fun_app$ab (D_llist_c_llist_llist_bool_fun_fun$ D_llist$ )C_llist_llist_bool_fun$ )
(declare-fun fun_app$ac (D_c_llist_bool_fun_fun$ D$ )C_llist_bool_fun$ )
(declare-fun fun_app$ad (D_llist_d_llist_llist_bool_fun_fun$ D_llist$ )D_llist_llist_bool_fun$ )
(declare-fun fun_app$ae (D_d_llist_bool_fun_fun$ D$ )D_llist_bool_fun$ )
(declare-fun fun_app$af (C_llist_llist_c_llist_bool_fun_fun$ C_llist_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$ag (C_llist_c_bool_fun_fun$ C_llist$ )C_bool_fun$ )
(declare-fun fun_app$ah (D_llist_llist_d_llist_bool_fun_fun$ D_llist_llist$ )D_llist_bool_fun$ )
(declare-fun fun_app$ai (C_llist_llist_d_llist_bool_fun_fun$ C_llist_llist$ )D_llist_bool_fun$ )
(declare-fun fun_app$aj (D_llist_llist_c_llist_bool_fun_fun$ D_llist_llist$ )C_llist_bool_fun$ )
(declare-fun fun_app$ak (C_llist_c_llist_fun$ C_llist$ )C_llist$ )
(declare-fun fun_app$al (D_llist_d_llist_fun$ D_llist$ )D_llist$ )
(declare-fun inf_llist$ (Nat_c_fun$ )C_llist$ )
(declare-fun case_llist$ (A$ C_c_llist_a_fun_fun$ )C_llist_a_fun$ )
(declare-fun inf_llist$a (Nat_d_fun$ )D_llist$ )
(declare-fun inf_llist$b (Nat_c_llist_fun$ )C_llist_llist$ )
(declare-fun inf_llist$c (Nat_d_llist_fun$ )D_llist_llist$ )
(declare-fun ldropWhile$ (C_bool_fun$ C_llist$ )C_llist$ )
(declare-fun llist_all2$ (C_d_bool_fun_fun$ )C_llist_d_llist_bool_fun_fun$ )
(declare-fun case_llist$a (B$ D_d_llist_b_fun_fun$ )D_llist_b_fun$ )
(declare-fun ldropWhile$a (D_bool_fun$ D_llist$ )D_llist$ )
(declare-fun ldropWhile$b (C_llist_bool_fun$ C_llist_llist$ )C_llist_llist$ )
(declare-fun ldropWhile$c (D_llist_bool_fun$ D_llist_llist$ )D_llist_llist$ )
(declare-fun llist_all2$a (C_llist_c_llist_bool_fun_fun$ )C_llist_llist_c_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$b (D_d_bool_fun_fun$ )D_llist_d_llist_bool_fun_fun$ )
(declare-fun llist_all2$c (C_c_bool_fun_fun$ )C_llist_c_llist_bool_fun_fun$ )
(declare-fun llist_all2$d (D_llist_c_llist_bool_fun_fun$ D_llist_llist$ C_llist_llist$ )Bool )
(declare-fun llist_all2$e (D_c_bool_fun_fun$ )D_llist_c_llist_bool_fun_fun$ )
(declare-fun llist_all2$f (C_llist_d_llist_bool_fun_fun$ )C_llist_llist_d_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$g (C_c_llist_bool_fun_fun$ )C_llist_c_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$h (C_d_llist_bool_fun_fun$ )C_llist_d_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$i (D_c_llist_bool_fun_fun$ )D_llist_c_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$j (D_d_llist_bool_fun_fun$ )D_llist_d_llist_llist_bool_fun_fun$ )
(declare-fun llist_all2$k (C_llist_c_bool_fun_fun$ )C_llist_llist_c_llist_bool_fun_fun$ )
(declare-fun llist_all2$l (D_llist_d_bool_fun_fun$ )D_llist_llist_d_llist_bool_fun_fun$ )
(declare-fun llist_all2$m (C_llist_d_bool_fun_fun$ )C_llist_llist_d_llist_bool_fun_fun$ )
(declare-fun llist_all2$n (D_llist_c_bool_fun_fun$ )D_llist_llist_c_llist_bool_fun_fun$ )
(declare-fun llist_all2$o (D_llist_d_llist_bool_fun_fun$ D_llist_llist$ D_llist_llist$ )Bool )
(declare-fun llist_all2$p (C_llist_llist_d_llist_llist_bool_fun_fun$ C_llist_llist_llist$ D_llist_llist_llist$ )Bool )
(declare-fun llist_all2$q (C_llist_c_llist_llist_bool_fun_fun$ C_llist_llist$ C_llist_llist_llist$ )Bool )
(declare-fun llist_all2$r (C_llist_d_llist_llist_bool_fun_fun$ C_llist_llist$ D_llist_llist_llist$ )Bool )
(declare-fun llist_all2$s (D_llist_c_llist_llist_bool_fun_fun$ D_llist_llist$ C_llist_llist_llist$ )Bool )
(declare-fun llist_all2$t (D_llist_d_llist_llist_bool_fun_fun$ D_llist_llist$ D_llist_llist_llist$ )Bool )
(declare-fun llist_all2$u (C_llist_llist_c_llist_bool_fun_fun$ C_llist_llist_llist$ C_llist_llist$ )Bool )
(assert (! (forall ((?v0 C_llist_llist$ )(?v1 C_llist_llist$ ))(! (= (fun_app$ (fun_app$a uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uua$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 D_llist$ )(?v1 D_llist$ ))(! (= (fun_app$b (fun_app$c uuc$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uuc$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist$ ))(! (= (fun_app$d (fun_app$e uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uu$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 D$ )(?v1 D$ ))(! (= (fun_app$f (fun_app$g uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$f (fun_app$g uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ ))(! (= (fun_app$h (fun_app$i uud$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$i uud$ ?v0 )?v1 )))):named a4 ))
(assert (! (not (forall ((?v0 A$ )(?v1 B$ ))(=> (b$ ?v0 ?v1 )(forall ((?v2 C_c_llist_a_fun_fun$ )(?v3 D_d_llist_b_fun_fun$ ))(=> (forall ((?v4 C$ )(?v5 D$ ))(=> (fun_app$f (fun_app$j a$ ?v4 )?v5 )(forall ((?v6 C_llist$ )(?v7 D_llist$ ))(=> (fun_app$b (fun_app$k (llist_all2$ a$ )?v6 )?v7 )(b$ (fun_app$l (fun_app$m ?v2 ?v4 )?v6 )(fun_app$n (fun_app$o ?v3 ?v5 )?v7 ))))))(forall ((?v4 C_llist$ )(?v5 D_llist$ ))(=> (fun_app$b (fun_app$k (llist_all2$ a$ )?v4 )?v5 )(b$ (fun_app$l (case_llist$ ?v0 ?v2 )?v4 )(fun_app$n (case_llist$a ?v1 ?v3 )?v5 ))))))))):named a5 ))
(assert (! (= (llist_all2$a uu$ )uua$ ):named a6 ))
(assert (! (= (llist_all2$b uub$ )uuc$ ):named a7 ))
(assert (! (= (llist_all2$c uud$ )uu$ ):named a8 ))
(assert (! (forall ((?v0 D_llist_c_llist_bool_fun_fun$ )(?v1 D_llist_llist$ )(?v2 C_llist_llist$ )(?v3 D_llist_c_llist_bool_fun_fun$ ))(=> (and (llist_all2$d ?v0 ?v1 ?v2 )(forall ((?v4 D_llist$ )(?v5 C_llist$ ))(=> (fun_app$d (fun_app$p ?v0 ?v4 )?v5 )(fun_app$d (fun_app$p ?v3 ?v4 )?v5 ))))(llist_all2$d ?v3 ?v1 ?v2 ))):named a9 ))
(assert (! (forall ((?v0 C_llist_c_llist_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 C_llist_llist$ )(?v3 C_llist_c_llist_bool_fun_fun$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )?v2 )(forall ((?v4 C_llist$ )(?v5 C_llist$ ))(=> (fun_app$d (fun_app$e ?v0 ?v4 )?v5 )(fun_app$d (fun_app$e ?v3 ?v4 )?v5 ))))(fun_app$ (fun_app$a (llist_all2$a ?v3 )?v1 )?v2 ))):named a10 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist$ )(?v2 D_llist$ )(?v3 D_d_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v4 D$ )(?v5 D$ ))(=> (fun_app$f (fun_app$g ?v0 ?v4 )?v5 )(fun_app$f (fun_app$g ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$c (llist_all2$b ?v3 )?v1 )?v2 ))):named a11 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_llist$ )(?v2 C_llist$ )(?v3 D_c_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$p (llist_all2$e ?v0 )?v1 )?v2 )(forall ((?v4 D$ )(?v5 C$ ))(=> (fun_app$h (fun_app$q ?v0 ?v4 )?v5 )(fun_app$h (fun_app$q ?v3 ?v4 )?v5 ))))(fun_app$d (fun_app$p (llist_all2$e ?v3 )?v1 )?v2 ))):named a12 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ )(?v3 C_c_bool_fun_fun$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v4 C$ )(?v5 C$ ))(=> (fun_app$h (fun_app$i ?v0 ?v4 )?v5 )(fun_app$h (fun_app$i ?v3 ?v4 )?v5 ))))(fun_app$d (fun_app$e (llist_all2$c ?v3 )?v1 )?v2 ))):named a13 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 D_llist_llist$ )(?v3 C_llist_d_llist_bool_fun_fun$ ))(=> (and (fun_app$r (fun_app$s (llist_all2$f ?v0 )?v1 )?v2 )(forall ((?v4 C_llist$ )(?v5 D_llist$ ))(=> (fun_app$b (fun_app$k ?v0 ?v4 )?v5 )(fun_app$b (fun_app$k ?v3 ?v4 )?v5 ))))(fun_app$r (fun_app$s (llist_all2$f ?v3 )?v1 )?v2 ))):named a14 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_llist$ )(?v2 D_llist$ )(?v3 C_d_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$k (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v4 C$ )(?v5 D$ ))(=> (fun_app$f (fun_app$j ?v0 ?v4 )?v5 )(fun_app$f (fun_app$j ?v3 ?v4 )?v5 ))))(fun_app$b (fun_app$k (llist_all2$ ?v3 )?v1 )?v2 ))):named a15 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 Nat_c_fun$ )(?v2 Nat_d_fun$ ))(= (fun_app$b (fun_app$k (llist_all2$ ?v0 )(inf_llist$ ?v1 ))(inf_llist$a ?v2 ))(forall ((?v3 Nat$ ))(fun_app$f (fun_app$j ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$u ?v2 ?v3 ))))):named a16 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 Nat_c_fun$ )(?v2 Nat_c_fun$ ))(= (fun_app$d (fun_app$e (llist_all2$c ?v0 )(inf_llist$ ?v1 ))(inf_llist$ ?v2 ))(forall ((?v3 Nat$ ))(fun_app$h (fun_app$i ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$t ?v2 ?v3 ))))):named a17 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 Nat_d_fun$ )(?v2 Nat_c_fun$ ))(= (fun_app$d (fun_app$p (llist_all2$e ?v0 )(inf_llist$a ?v1 ))(inf_llist$ ?v2 ))(forall ((?v3 Nat$ ))(fun_app$h (fun_app$q ?v0 (fun_app$u ?v1 ?v3 ))(fun_app$t ?v2 ?v3 ))))):named a18 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 Nat_d_fun$ )(?v2 Nat_d_fun$ ))(= (fun_app$b (fun_app$c (llist_all2$b ?v0 )(inf_llist$a ?v1 ))(inf_llist$a ?v2 ))(forall ((?v3 Nat$ ))(fun_app$f (fun_app$g ?v0 (fun_app$u ?v1 ?v3 ))(fun_app$u ?v2 ?v3 ))))):named a19 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 Nat_c_llist_fun$ )(?v2 Nat_d_llist_fun$ ))(= (fun_app$r (fun_app$s (llist_all2$f ?v0 )(inf_llist$b ?v1 ))(inf_llist$c ?v2 ))(forall ((?v3 Nat$ ))(fun_app$b (fun_app$k ?v0 (fun_app$v ?v1 ?v3 ))(fun_app$w ?v2 ?v3 ))))):named a20 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ )(?v1 Nat_c_fun$ )(?v2 Nat_c_llist_fun$ ))(= (fun_app$ (fun_app$x (llist_all2$g ?v0 )(inf_llist$ ?v1 ))(inf_llist$b ?v2 ))(forall ((?v3 Nat$ ))(fun_app$d (fun_app$y ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$v ?v2 ?v3 ))))):named a21 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ )(?v1 Nat_c_fun$ )(?v2 Nat_d_llist_fun$ ))(= (fun_app$r (fun_app$z (llist_all2$h ?v0 )(inf_llist$ ?v1 ))(inf_llist$c ?v2 ))(forall ((?v3 Nat$ ))(fun_app$b (fun_app$aa ?v0 (fun_app$t ?v1 ?v3 ))(fun_app$w ?v2 ?v3 ))))):named a22 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ )(?v1 Nat_d_fun$ )(?v2 Nat_c_llist_fun$ ))(= (fun_app$ (fun_app$ab (llist_all2$i ?v0 )(inf_llist$a ?v1 ))(inf_llist$b ?v2 ))(forall ((?v3 Nat$ ))(fun_app$d (fun_app$ac ?v0 (fun_app$u ?v1 ?v3 ))(fun_app$v ?v2 ?v3 ))))):named a23 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ )(?v1 Nat_d_fun$ )(?v2 Nat_d_llist_fun$ ))(= (fun_app$r (fun_app$ad (llist_all2$j ?v0 )(inf_llist$a ?v1 ))(inf_llist$c ?v2 ))(forall ((?v3 Nat$ ))(fun_app$b (fun_app$ae ?v0 (fun_app$u ?v1 ?v3 ))(fun_app$w ?v2 ?v3 ))))):named a24 ))
(assert (! (forall ((?v0 C_llist_c_bool_fun_fun$ )(?v1 Nat_c_llist_fun$ )(?v2 Nat_c_fun$ ))(= (fun_app$d (fun_app$af (llist_all2$k ?v0 )(inf_llist$b ?v1 ))(inf_llist$ ?v2 ))(forall ((?v3 Nat$ ))(fun_app$h (fun_app$ag ?v0 (fun_app$v ?v1 ?v3 ))(fun_app$t ?v2 ?v3 ))))):named a25 ))
(assert (! (forall ((?v0 C_llist_c_llist_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 C_llist_llist$ )(?v3 C_llist_llist$ ))(=> (and (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )?v2 )(and (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v2 )?v3 )(transp$ ?v0 )))(fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )?v3 ))):named a26 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist$ )(?v2 D_llist$ )(?v3 D_llist$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$b ?v0 )?v1 )?v2 )(and (fun_app$b (fun_app$c (llist_all2$b ?v0 )?v2 )?v3 )(transp$a ?v0 )))(fun_app$b (fun_app$c (llist_all2$b ?v0 )?v1 )?v3 ))):named a27 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ )(?v3 C_llist$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v2 )?v3 )(transp$b ?v0 )))(fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v3 ))):named a28 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$b (fun_app$k (llist_all2$ ?v0 )?v1 )lNil$a )(= ?v1 lNil$ )):pattern ((fun_app$k (llist_all2$ ?v0 )?v1 )))):named a29 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$b ?v0 )?v1 )lNil$a )(= ?v1 lNil$a )):pattern ((fun_app$c (llist_all2$b ?v0 )?v1 )))):named a30 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_llist$ ))(! (= (fun_app$d (fun_app$p (llist_all2$e ?v0 )?v1 )lNil$ )(= ?v1 lNil$a )):pattern ((fun_app$p (llist_all2$e ?v0 )?v1 )))):named a31 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )lNil$ )(= ?v1 lNil$ )):pattern ((fun_app$e (llist_all2$c ?v0 )?v1 )))):named a32 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 C_llist_llist$ ))(! (= (fun_app$r (fun_app$s (llist_all2$f ?v0 )?v1 )lNil$c )(= ?v1 lNil$b )):pattern ((fun_app$s (llist_all2$f ?v0 )?v1 )))):named a33 ))
(assert (! (forall ((?v0 D_llist_d_bool_fun_fun$ )(?v1 D_llist_llist$ ))(! (= (fun_app$b (fun_app$ah (llist_all2$l ?v0 )?v1 )lNil$a )(= ?v1 lNil$c )):pattern ((fun_app$ah (llist_all2$l ?v0 )?v1 )))):named a34 ))
(assert (! (forall ((?v0 C_llist_d_bool_fun_fun$ )(?v1 C_llist_llist$ ))(! (= (fun_app$b (fun_app$ai (llist_all2$m ?v0 )?v1 )lNil$a )(= ?v1 lNil$b )):pattern ((fun_app$ai (llist_all2$m ?v0 )?v1 )))):named a35 ))
(assert (! (forall ((?v0 D_llist_c_bool_fun_fun$ )(?v1 D_llist_llist$ ))(! (= (fun_app$d (fun_app$aj (llist_all2$n ?v0 )?v1 )lNil$ )(= ?v1 lNil$c )):pattern ((fun_app$aj (llist_all2$n ?v0 )?v1 )))):named a36 ))
(assert (! (forall ((?v0 C_llist_c_bool_fun_fun$ )(?v1 C_llist_llist$ ))(! (= (fun_app$d (fun_app$af (llist_all2$k ?v0 )?v1 )lNil$ )(= ?v1 lNil$b )):pattern ((fun_app$af (llist_all2$k ?v0 )?v1 )))):named a37 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ )(?v1 D_llist$ ))(! (= (fun_app$r (fun_app$ad (llist_all2$j ?v0 )?v1 )lNil$c )(= ?v1 lNil$a )):pattern ((fun_app$ad (llist_all2$j ?v0 )?v1 )))):named a38 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 D_llist$ ))(! (= (fun_app$b (fun_app$k (llist_all2$ ?v0 )lNil$ )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$b (fun_app$k (llist_all2$ ?v0 )lNil$ )?v1 )))):named a39 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$b ?v0 )lNil$a )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$b (fun_app$c (llist_all2$b ?v0 )lNil$a )?v1 )))):named a40 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$d (fun_app$p (llist_all2$e ?v0 )lNil$a )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$d (fun_app$p (llist_all2$e ?v0 )lNil$a )?v1 )))):named a41 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$c ?v0 )lNil$ )?v1 )(= ?v1 lNil$ )):pattern ((fun_app$d (fun_app$e (llist_all2$c ?v0 )lNil$ )?v1 )))):named a42 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 D_llist_llist$ ))(! (= (fun_app$r (fun_app$s (llist_all2$f ?v0 )lNil$b )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$r (fun_app$s (llist_all2$f ?v0 )lNil$b )?v1 )))):named a43 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ )(?v1 D_llist_llist$ ))(! (= (fun_app$r (fun_app$ad (llist_all2$j ?v0 )lNil$a )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$r (fun_app$ad (llist_all2$j ?v0 )lNil$a )?v1 )))):named a44 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ )(?v1 C_llist_llist$ ))(! (= (fun_app$ (fun_app$ab (llist_all2$i ?v0 )lNil$a )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$ (fun_app$ab (llist_all2$i ?v0 )lNil$a )?v1 )))):named a45 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ )(?v1 D_llist_llist$ ))(! (= (fun_app$r (fun_app$z (llist_all2$h ?v0 )lNil$ )?v1 )(= ?v1 lNil$c )):pattern ((fun_app$r (fun_app$z (llist_all2$h ?v0 )lNil$ )?v1 )))):named a46 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ )(?v1 C_llist_llist$ ))(! (= (fun_app$ (fun_app$x (llist_all2$g ?v0 )lNil$ )?v1 )(= ?v1 lNil$b )):pattern ((fun_app$ (fun_app$x (llist_all2$g ?v0 )lNil$ )?v1 )))):named a47 ))
(assert (! (forall ((?v0 D_llist_d_bool_fun_fun$ )(?v1 D_llist$ ))(! (= (fun_app$b (fun_app$ah (llist_all2$l ?v0 )lNil$c )?v1 )(= ?v1 lNil$a )):pattern ((fun_app$b (fun_app$ah (llist_all2$l ?v0 )lNil$c )?v1 )))):named a48 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C$ )(?v2 C_llist$ )(?v3 D$ )(?v4 D_llist$ ))(! (= (fun_app$b (fun_app$k (llist_all2$ ?v0 )(lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$f (fun_app$j ?v0 ?v1 )?v3 )(fun_app$b (fun_app$k (llist_all2$ ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$k (llist_all2$ ?v0 )(lCons$ ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a49 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C$ )(?v2 C_llist$ )(?v3 C$ )(?v4 C_llist$ ))(! (= (fun_app$d (fun_app$e (llist_all2$c ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$h (fun_app$i ?v0 ?v1 )?v3 )(fun_app$d (fun_app$e (llist_all2$c ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$e (llist_all2$c ?v0 )(lCons$ ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a50 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D$ )(?v2 D_llist$ )(?v3 C$ )(?v4 C_llist$ ))(! (= (fun_app$d (fun_app$p (llist_all2$e ?v0 )(lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$h (fun_app$q ?v0 ?v1 )?v3 )(fun_app$d (fun_app$p (llist_all2$e ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$p (llist_all2$e ?v0 )(lCons$a ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a51 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D$ )(?v2 D_llist$ )(?v3 D$ )(?v4 D_llist$ ))(! (= (fun_app$b (fun_app$c (llist_all2$b ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))(and (fun_app$f (fun_app$g ?v0 ?v1 )?v3 )(fun_app$b (fun_app$c (llist_all2$b ?v0 )?v2 )?v4 ))):pattern ((fun_app$b (fun_app$c (llist_all2$b ?v0 )(lCons$a ?v1 ?v2 ))(lCons$a ?v3 ?v4 ))))):named a52 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist_llist$ )(?v3 D_llist$ )(?v4 D_llist_llist$ ))(! (= (fun_app$r (fun_app$s (llist_all2$f ?v0 )(lCons$b ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$b (fun_app$k ?v0 ?v1 )?v3 )(fun_app$r (fun_app$s (llist_all2$f ?v0 )?v2 )?v4 ))):pattern ((fun_app$r (fun_app$s (llist_all2$f ?v0 )(lCons$b ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a53 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ )(?v1 C$ )(?v2 C_llist$ )(?v3 C_llist$ )(?v4 C_llist_llist$ ))(! (= (fun_app$ (fun_app$x (llist_all2$g ?v0 )(lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$d (fun_app$y ?v0 ?v1 )?v3 )(fun_app$ (fun_app$x (llist_all2$g ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$x (llist_all2$g ?v0 )(lCons$ ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a54 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ )(?v1 C$ )(?v2 C_llist$ )(?v3 D_llist$ )(?v4 D_llist_llist$ ))(! (= (fun_app$r (fun_app$z (llist_all2$h ?v0 )(lCons$ ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$b (fun_app$aa ?v0 ?v1 )?v3 )(fun_app$r (fun_app$z (llist_all2$h ?v0 )?v2 )?v4 ))):pattern ((fun_app$r (fun_app$z (llist_all2$h ?v0 )(lCons$ ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a55 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ )(?v1 D$ )(?v2 D_llist$ )(?v3 C_llist$ )(?v4 C_llist_llist$ ))(! (= (fun_app$ (fun_app$ab (llist_all2$i ?v0 )(lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))(and (fun_app$d (fun_app$ac ?v0 ?v1 )?v3 )(fun_app$ (fun_app$ab (llist_all2$i ?v0 )?v2 )?v4 ))):pattern ((fun_app$ (fun_app$ab (llist_all2$i ?v0 )(lCons$a ?v1 ?v2 ))(lCons$b ?v3 ?v4 ))))):named a56 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ )(?v1 D$ )(?v2 D_llist$ )(?v3 D_llist$ )(?v4 D_llist_llist$ ))(! (= (fun_app$r (fun_app$ad (llist_all2$j ?v0 )(lCons$a ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))(and (fun_app$b (fun_app$ae ?v0 ?v1 )?v3 )(fun_app$r (fun_app$ad (llist_all2$j ?v0 )?v2 )?v4 ))):pattern ((fun_app$r (fun_app$ad (llist_all2$j ?v0 )(lCons$a ?v1 ?v2 ))(lCons$c ?v3 ?v4 ))))):named a57 ))
(assert (! (forall ((?v0 C_llist_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist_llist$ )(?v3 C$ )(?v4 C_llist$ ))(! (= (fun_app$d (fun_app$af (llist_all2$k ?v0 )(lCons$b ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))(and (fun_app$h (fun_app$ag ?v0 ?v1 )?v3 )(fun_app$d (fun_app$af (llist_all2$k ?v0 )?v2 )?v4 ))):pattern ((fun_app$d (fun_app$af (llist_all2$k ?v0 )(lCons$b ?v1 ?v2 ))(lCons$ ?v3 ?v4 ))))):named a58 ))
(assert (! (forall ((?v0 C_llist_c_llist_bool_fun_fun$ )(?v1 C_llist_llist$ ))(= (fun_app$ (fun_app$a (llist_all2$a ?v0 )?v1 )?v1 )(forall ((?v2 C_llist$ ))(=> (member$ ?v2 (lset$ ?v1 ))(fun_app$d (fun_app$e ?v0 ?v2 )?v2 ))))):named a59 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist$ ))(= (fun_app$b (fun_app$c (llist_all2$b ?v0 )?v1 )?v1 )(forall ((?v2 D$ ))(=> (member$a ?v2 (lset$a ?v1 ))(fun_app$f (fun_app$g ?v0 ?v2 )?v2 ))))):named a60 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ ))(= (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v1 )(forall ((?v2 C$ ))(=> (member$b ?v2 (lset$b ?v1 ))(fun_app$h (fun_app$i ?v0 ?v2 )?v2 ))))):named a61 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_llist$ )(?v2 D_llist$ )(?v3 C_bool_fun$ )(?v4 D_bool_fun$ ))(=> (and (fun_app$b (fun_app$k (llist_all2$ ?v0 )?v1 )?v2 )(forall ((?v5 C$ )(?v6 D$ ))(=> (fun_app$f (fun_app$j ?v0 ?v5 )?v6 )(= (fun_app$h ?v3 ?v5 )(fun_app$f ?v4 ?v6 )))))(fun_app$b (fun_app$k (llist_all2$ ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$a ?v4 ?v2 )))):named a62 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ )(?v3 C_bool_fun$ )(?v4 C_bool_fun$ ))(=> (and (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(forall ((?v5 C$ )(?v6 C$ ))(=> (fun_app$h (fun_app$i ?v0 ?v5 )?v6 )(= (fun_app$h ?v3 ?v5 )(fun_app$h ?v4 ?v6 )))))(fun_app$d (fun_app$e (llist_all2$c ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$ ?v4 ?v2 )))):named a63 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_llist$ )(?v2 C_llist$ )(?v3 D_bool_fun$ )(?v4 C_bool_fun$ ))(=> (and (fun_app$d (fun_app$p (llist_all2$e ?v0 )?v1 )?v2 )(forall ((?v5 D$ )(?v6 C$ ))(=> (fun_app$h (fun_app$q ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$h ?v4 ?v6 )))))(fun_app$d (fun_app$p (llist_all2$e ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$ ?v4 ?v2 )))):named a64 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist$ )(?v2 D_llist$ )(?v3 D_bool_fun$ )(?v4 D_bool_fun$ ))(=> (and (fun_app$b (fun_app$c (llist_all2$b ?v0 )?v1 )?v2 )(forall ((?v5 D$ )(?v6 D$ ))(=> (fun_app$f (fun_app$g ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$f ?v4 ?v6 )))))(fun_app$b (fun_app$c (llist_all2$b ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$a ?v4 ?v2 )))):named a65 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 D_llist_llist$ )(?v3 C_llist_bool_fun$ )(?v4 D_llist_bool_fun$ ))(=> (and (fun_app$r (fun_app$s (llist_all2$f ?v0 )?v1 )?v2 )(forall ((?v5 C_llist$ )(?v6 D_llist$ ))(=> (fun_app$b (fun_app$k ?v0 ?v5 )?v6 )(= (fun_app$d ?v3 ?v5 )(fun_app$b ?v4 ?v6 )))))(fun_app$r (fun_app$s (llist_all2$f ?v0 )(ldropWhile$b ?v3 ?v1 ))(ldropWhile$c ?v4 ?v2 )))):named a66 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist_llist$ )(?v3 C_bool_fun$ )(?v4 C_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$x (llist_all2$g ?v0 )?v1 )?v2 )(forall ((?v5 C$ )(?v6 C_llist$ ))(=> (fun_app$d (fun_app$y ?v0 ?v5 )?v6 )(= (fun_app$h ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(fun_app$ (fun_app$x (llist_all2$g ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$b ?v4 ?v2 )))):named a67 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 D_llist_llist$ )(?v3 C_bool_fun$ )(?v4 D_llist_bool_fun$ ))(=> (and (fun_app$r (fun_app$z (llist_all2$h ?v0 )?v1 )?v2 )(forall ((?v5 C$ )(?v6 D_llist$ ))(=> (fun_app$b (fun_app$aa ?v0 ?v5 )?v6 )(= (fun_app$h ?v3 ?v5 )(fun_app$b ?v4 ?v6 )))))(fun_app$r (fun_app$z (llist_all2$h ?v0 )(ldropWhile$ ?v3 ?v1 ))(ldropWhile$c ?v4 ?v2 )))):named a68 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ )(?v1 D_llist$ )(?v2 C_llist_llist$ )(?v3 D_bool_fun$ )(?v4 C_llist_bool_fun$ ))(=> (and (fun_app$ (fun_app$ab (llist_all2$i ?v0 )?v1 )?v2 )(forall ((?v5 D$ )(?v6 C_llist$ ))(=> (fun_app$d (fun_app$ac ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$d ?v4 ?v6 )))))(fun_app$ (fun_app$ab (llist_all2$i ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$b ?v4 ?v2 )))):named a69 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ )(?v1 D_llist$ )(?v2 D_llist_llist$ )(?v3 D_bool_fun$ )(?v4 D_llist_bool_fun$ ))(=> (and (fun_app$r (fun_app$ad (llist_all2$j ?v0 )?v1 )?v2 )(forall ((?v5 D$ )(?v6 D_llist$ ))(=> (fun_app$b (fun_app$ae ?v0 ?v5 )?v6 )(= (fun_app$f ?v3 ?v5 )(fun_app$b ?v4 ?v6 )))))(fun_app$r (fun_app$ad (llist_all2$j ?v0 )(ldropWhile$a ?v3 ?v1 ))(ldropWhile$c ?v4 ?v2 )))):named a70 ))
(assert (! (forall ((?v0 C_llist_c_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 C_llist$ )(?v3 C_llist_bool_fun$ )(?v4 C_bool_fun$ ))(=> (and (fun_app$d (fun_app$af (llist_all2$k ?v0 )?v1 )?v2 )(forall ((?v5 C_llist$ )(?v6 C$ ))(=> (fun_app$h (fun_app$ag ?v0 ?v5 )?v6 )(= (fun_app$d ?v3 ?v5 )(fun_app$h ?v4 ?v6 )))))(fun_app$d (fun_app$af (llist_all2$k ?v0 )(ldropWhile$b ?v3 ?v1 ))(ldropWhile$ ?v4 ?v2 )))):named a71 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 D_llist_llist$ ))(=> (fun_app$r (fun_app$s (llist_all2$f (llist_all2$ ?v0 ))?v1 )?v2 )(fun_app$b (fun_app$k (llist_all2$ ?v0 )(lconcat$ ?v1 ))(lconcat$a ?v2 )))):named a72 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 C_llist_llist$ ))(=> (fun_app$ (fun_app$a (llist_all2$a (llist_all2$c ?v0 ))?v1 )?v2 )(fun_app$d (fun_app$e (llist_all2$c ?v0 )(lconcat$ ?v1 ))(lconcat$ ?v2 )))):named a73 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_llist_llist$ )(?v2 C_llist_llist$ ))(=> (llist_all2$d (llist_all2$e ?v0 )?v1 ?v2 )(fun_app$d (fun_app$p (llist_all2$e ?v0 )(lconcat$a ?v1 ))(lconcat$ ?v2 )))):named a74 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist_llist$ )(?v2 D_llist_llist$ ))(=> (llist_all2$o (llist_all2$b ?v0 )?v1 ?v2 )(fun_app$b (fun_app$c (llist_all2$b ?v0 )(lconcat$a ?v1 ))(lconcat$a ?v2 )))):named a75 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 C_llist_llist_llist$ )(?v2 D_llist_llist_llist$ ))(=> (llist_all2$p (llist_all2$f ?v0 )?v1 ?v2 )(fun_app$r (fun_app$s (llist_all2$f ?v0 )(lconcat$b ?v1 ))(lconcat$c ?v2 )))):named a76 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 C_llist_llist_llist$ ))(=> (llist_all2$q (llist_all2$g ?v0 )?v1 ?v2 )(fun_app$ (fun_app$x (llist_all2$g ?v0 )(lconcat$ ?v1 ))(lconcat$b ?v2 )))):named a77 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 D_llist_llist_llist$ ))(=> (llist_all2$r (llist_all2$h ?v0 )?v1 ?v2 )(fun_app$r (fun_app$z (llist_all2$h ?v0 )(lconcat$ ?v1 ))(lconcat$c ?v2 )))):named a78 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ )(?v1 D_llist_llist$ )(?v2 C_llist_llist_llist$ ))(=> (llist_all2$s (llist_all2$i ?v0 )?v1 ?v2 )(fun_app$ (fun_app$ab (llist_all2$i ?v0 )(lconcat$a ?v1 ))(lconcat$b ?v2 )))):named a79 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ )(?v1 D_llist_llist$ )(?v2 D_llist_llist_llist$ ))(=> (llist_all2$t (llist_all2$j ?v0 )?v1 ?v2 )(fun_app$r (fun_app$ad (llist_all2$j ?v0 )(lconcat$a ?v1 ))(lconcat$c ?v2 )))):named a80 ))
(assert (! (forall ((?v0 C_llist_c_bool_fun_fun$ )(?v1 C_llist_llist_llist$ )(?v2 C_llist_llist$ ))(=> (llist_all2$u (llist_all2$k ?v0 )?v1 ?v2 )(fun_app$d (fun_app$af (llist_all2$k ?v0 )(lconcat$b ?v1 ))(lconcat$ ?v2 )))):named a81 ))
(assert (! (forall ((?v0 A$ )(?v1 C_c_llist_a_fun_fun$ ))(! (= (fun_app$l (case_llist$ ?v0 ?v1 )lNil$ )?v0 ):pattern ((case_llist$ ?v0 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 B$ )(?v1 D_d_llist_b_fun_fun$ ))(! (= (fun_app$n (case_llist$a ?v0 ?v1 )lNil$a )?v0 ):pattern ((case_llist$a ?v0 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ ))(fun_app$b (fun_app$k (llist_all2$ ?v0 )lNil$ )lNil$a )):named a84 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ ))(fun_app$b (fun_app$c (llist_all2$b ?v0 )lNil$a )lNil$a )):named a85 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ ))(fun_app$d (fun_app$p (llist_all2$e ?v0 )lNil$a )lNil$ )):named a86 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(fun_app$d (fun_app$e (llist_all2$c ?v0 )lNil$ )lNil$ )):named a87 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ ))(fun_app$r (fun_app$s (llist_all2$f ?v0 )lNil$b )lNil$c )):named a88 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ ))(fun_app$r (fun_app$ad (llist_all2$j ?v0 )lNil$a )lNil$c )):named a89 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ ))(fun_app$ (fun_app$ab (llist_all2$i ?v0 )lNil$a )lNil$b )):named a90 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ ))(fun_app$r (fun_app$z (llist_all2$h ?v0 )lNil$ )lNil$c )):named a91 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ ))(fun_app$ (fun_app$x (llist_all2$g ?v0 )lNil$ )lNil$b )):named a92 ))
(assert (! (forall ((?v0 D_llist_d_bool_fun_fun$ ))(fun_app$b (fun_app$ah (llist_all2$l ?v0 )lNil$c )lNil$a )):named a93 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ ))(fun_app$b (fun_app$k (llist_all2$ ?v0 )lNil$ )lNil$a )):named a94 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ ))(fun_app$b (fun_app$c (llist_all2$b ?v0 )lNil$a )lNil$a )):named a95 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ ))(fun_app$d (fun_app$p (llist_all2$e ?v0 )lNil$a )lNil$ )):named a96 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ ))(fun_app$d (fun_app$e (llist_all2$c ?v0 )lNil$ )lNil$ )):named a97 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ ))(fun_app$r (fun_app$s (llist_all2$f ?v0 )lNil$b )lNil$c )):named a98 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ ))(fun_app$r (fun_app$ad (llist_all2$j ?v0 )lNil$a )lNil$c )):named a99 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ ))(fun_app$ (fun_app$ab (llist_all2$i ?v0 )lNil$a )lNil$b )):named a100 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ ))(fun_app$r (fun_app$z (llist_all2$h ?v0 )lNil$ )lNil$c )):named a101 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ ))(fun_app$ (fun_app$x (llist_all2$g ?v0 )lNil$ )lNil$b )):named a102 ))
(assert (! (forall ((?v0 D_llist_d_bool_fun_fun$ ))(fun_app$b (fun_app$ah (llist_all2$l ?v0 )lNil$c )lNil$a )):named a103 ))
(assert (! (forall ((?v0 C_d_bool_fun_fun$ )(?v1 C_llist$ )(?v2 D_llist$ )(?v3 Enat$ ))(=> (fun_app$b (fun_app$k (llist_all2$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$k (llist_all2$ ?v0 )(fun_app$ak (ldrop$ ?v3 )?v1 ))(fun_app$al (ldrop$a ?v3 )?v2 )))):named a104 ))
(assert (! (forall ((?v0 C_c_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist$ )(?v3 Enat$ ))(=> (fun_app$d (fun_app$e (llist_all2$c ?v0 )?v1 )?v2 )(fun_app$d (fun_app$e (llist_all2$c ?v0 )(fun_app$ak (ldrop$ ?v3 )?v1 ))(fun_app$ak (ldrop$ ?v3 )?v2 )))):named a105 ))
(assert (! (forall ((?v0 D_c_bool_fun_fun$ )(?v1 D_llist$ )(?v2 C_llist$ )(?v3 Enat$ ))(=> (fun_app$d (fun_app$p (llist_all2$e ?v0 )?v1 )?v2 )(fun_app$d (fun_app$p (llist_all2$e ?v0 )(fun_app$al (ldrop$a ?v3 )?v1 ))(fun_app$ak (ldrop$ ?v3 )?v2 )))):named a106 ))
(assert (! (forall ((?v0 D_d_bool_fun_fun$ )(?v1 D_llist$ )(?v2 D_llist$ )(?v3 Enat$ ))(=> (fun_app$b (fun_app$c (llist_all2$b ?v0 )?v1 )?v2 )(fun_app$b (fun_app$c (llist_all2$b ?v0 )(fun_app$al (ldrop$a ?v3 )?v1 ))(fun_app$al (ldrop$a ?v3 )?v2 )))):named a107 ))
(assert (! (forall ((?v0 C_llist_d_llist_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 D_llist_llist$ )(?v3 Enat$ ))(=> (fun_app$r (fun_app$s (llist_all2$f ?v0 )?v1 )?v2 )(fun_app$r (fun_app$s (llist_all2$f ?v0 )(ldrop$b ?v3 ?v1 ))(ldrop$c ?v3 ?v2 )))):named a108 ))
(assert (! (forall ((?v0 C_c_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 C_llist_llist$ )(?v3 Enat$ ))(=> (fun_app$ (fun_app$x (llist_all2$g ?v0 )?v1 )?v2 )(fun_app$ (fun_app$x (llist_all2$g ?v0 )(fun_app$ak (ldrop$ ?v3 )?v1 ))(ldrop$b ?v3 ?v2 )))):named a109 ))
(assert (! (forall ((?v0 C_d_llist_bool_fun_fun$ )(?v1 C_llist$ )(?v2 D_llist_llist$ )(?v3 Enat$ ))(=> (fun_app$r (fun_app$z (llist_all2$h ?v0 )?v1 )?v2 )(fun_app$r (fun_app$z (llist_all2$h ?v0 )(fun_app$ak (ldrop$ ?v3 )?v1 ))(ldrop$c ?v3 ?v2 )))):named a110 ))
(assert (! (forall ((?v0 D_c_llist_bool_fun_fun$ )(?v1 D_llist$ )(?v2 C_llist_llist$ )(?v3 Enat$ ))(=> (fun_app$ (fun_app$ab (llist_all2$i ?v0 )?v1 )?v2 )(fun_app$ (fun_app$ab (llist_all2$i ?v0 )(fun_app$al (ldrop$a ?v3 )?v1 ))(ldrop$b ?v3 ?v2 )))):named a111 ))
(assert (! (forall ((?v0 D_d_llist_bool_fun_fun$ )(?v1 D_llist$ )(?v2 D_llist_llist$ )(?v3 Enat$ ))(=> (fun_app$r (fun_app$ad (llist_all2$j ?v0 )?v1 )?v2 )(fun_app$r (fun_app$ad (llist_all2$j ?v0 )(fun_app$al (ldrop$a ?v3 )?v1 ))(ldrop$c ?v3 ?v2 )))):named a112 ))
(assert (! (forall ((?v0 C_llist_c_bool_fun_fun$ )(?v1 C_llist_llist$ )(?v2 C_llist$ )(?v3 Enat$ ))(=> (fun_app$d (fun_app$af (llist_all2$k ?v0 )?v1 )?v2 )(fun_app$d (fun_app$af (llist_all2$k ?v0 )(ldrop$b ?v3 ?v1 ))(fun_app$ak (ldrop$ ?v3 )?v2 )))):named a113 ))
(assert (! (forall ((?v0 C_llist$ )(?v1 C_llist_llist$ )(?v2 C_llist$ )(?v3 C_llist_llist$ ))(= (= (lCons$b ?v0 ?v1 )(lCons$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a114 ))
(assert (! (forall ((?v0 D_llist$ )(?v1 D_llist_llist$ )(?v2 D_llist$ )(?v3 D_llist_llist$ ))(= (= (lCons$c ?v0 ?v1 )(lCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a115 ))
(assert (! (forall ((?v0 C$ )(?v1 C_llist$ )(?v2 C$ )(?v3 C_llist$ ))(= (= (lCons$ ?v0 ?v1 )(lCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a116 ))
(assert (! (forall ((?v0 D$ )(?v1 D_llist$ )(?v2 D$ )(?v3 D_llist$ ))(= (= (lCons$a ?v0 ?v1 )(lCons$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a117 ))
(assert (! (forall ((?v0 Nat_d_llist_fun$ )(?v1 Nat_d_llist_fun$ ))(= (= (inf_llist$c ?v0 )(inf_llist$c ?v1 ))(= ?v0 ?v1 ))):named a118 ))
(assert (! (forall ((?v0 Nat_c_fun$ )(?v1 Nat_c_fun$ ))(= (= (inf_llist$ ?v0 )(inf_llist$ ?v1 ))(= ?v0 ?v1 ))):named a119 ))
(assert (! (forall ((?v0 Nat_d_fun$ )(?v1 Nat_d_fun$ ))(= (= (inf_llist$a ?v0 )(inf_llist$a ?v1 ))(= ?v0 ?v1 ))):named a120 ))
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$al (ldrop$a ?v0 )lNil$a )lNil$a ):pattern ((ldrop$a ?v0 )))):named a121 ))
(assert (! (forall ((?v0 Enat$ ))(! (= (fun_app$ak (ldrop$ ?v0 )lNil$ )lNil$ ):pattern ((ldrop$ ?v0 )))):named a122 ))
(check-sat )
;(get-unsat-core )
