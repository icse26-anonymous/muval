;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort Bool_a_fun$ 0 )
(declare-sort Bool_b_fun$ 0 )
(declare-sort Bool_llist$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_b_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort A_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_a_fun_fun$ 0 )
(declare-sort A_bool_fun_a_b_fun_fun$ 0 )
(declare-sort B_a_fun_b_bool_fun_fun$ 0 )
(declare-sort B_b_fun_b_bool_fun_fun$ 0 )
(declare-sort B_bool_fun_b_a_fun_fun$ 0 )
(declare-sort B_bool_fun_b_b_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort B_bool_fun_b_bool_fun_fun$ 0 )
(declare-sort Bool_a_fun_bool_bool_fun_fun$ 0 )
(declare-sort Bool_b_fun_bool_bool_fun_fun$ 0 )
(declare-sort Bool_bool_fun_bool_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))(B_llist$ (lNil$a )(lCons$a (lhd$a B$ )(ltl$a B_llist$ )))))
(declare-fun f$ ()B_a_fun$ )
(declare-fun p$ ()A_bool_fun$ )
(declare-fun xs$ ()B_llist$ )
(declare-fun comp$ (A_bool_fun$ )B_a_fun_b_bool_fun_fun$ )
(declare-fun lmap$ (B_a_fun$ B_llist$ )A_llist$ )
(declare-fun comp$a (A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun comp$b (B_a_fun$ )B_b_fun_b_a_fun_fun$ )
(declare-fun comp$c (A_b_fun$ )B_a_fun_b_b_fun_fun$ )
(declare-fun comp$d (Bool_a_fun$ )A_bool_fun_a_a_fun_fun$ )
(declare-fun comp$e (Bool_bool_fun$ )A_bool_fun_a_bool_fun_fun$ )
(declare-fun comp$f (Bool_a_fun$ )B_bool_fun_b_a_fun_fun$ )
(declare-fun comp$g (Bool_b_fun$ )B_bool_fun_b_b_fun_fun$ )
(declare-fun comp$h (Bool_bool_fun$ )B_bool_fun_b_bool_fun_fun$ )
(declare-fun comp$i (B_a_fun$ )A_b_fun_a_a_fun_fun$ )
(declare-fun comp$j (B_bool_fun$ )B_b_fun_b_bool_fun_fun$ )
(declare-fun comp$k (A_bool_fun$ )A_a_fun_a_bool_fun_fun$ )
(declare-fun comp$l (Bool_bool_fun$ )Bool_bool_fun_bool_bool_fun_fun$ )
(declare-fun comp$m (B_bool_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun comp$n (B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun comp$o (A_bool_fun$ )Bool_a_fun_bool_bool_fun_fun$ )
(declare-fun comp$p (B_b_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun comp$q (Bool_b_fun$ )A_bool_fun_a_b_fun_fun$ )
(declare-fun comp$r (B_bool_fun$ )Bool_b_fun_bool_bool_fun_fun$ )
(declare-fun comp$s (A_b_fun$ )A_a_fun_a_b_fun_fun$ )
(declare-fun comp$t (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun lmap$a (A_bool_fun$ A_llist$ )Bool_llist$ )
(declare-fun lmap$b (B_bool_fun$ B_llist$ )Bool_llist$ )
(declare-fun lmap$c (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$d (B_b_fun$ B_llist$ )B_llist$ )
(declare-fun lmap$e (A_b_fun$ A_llist$ )B_llist$ )
(declare-fun lmap$f (Bool_a_fun$ Bool_llist$ )A_llist$ )
(declare-fun lmap$g (Bool_bool_fun$ Bool_llist$ )Bool_llist$ )
(declare-fun lmap$h (Bool_b_fun$ Bool_llist$ )B_llist$ )
(declare-fun fun_app$ (B_a_fun_b_bool_fun_fun$ B_a_fun$ )B_bool_fun$ )
(declare-fun lfilter$ (A_bool_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$a (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun fun_app$b (B_b_fun_b_a_fun_fun$ B_b_fun$ )B_a_fun$ )
(declare-fun fun_app$c (B_a_fun_b_b_fun_fun$ B_a_fun$ )B_b_fun$ )
(declare-fun fun_app$d (A_bool_fun_a_a_fun_fun$ A_bool_fun$ )A_a_fun$ )
(declare-fun fun_app$e (A_bool_fun_a_bool_fun_fun$ A_bool_fun$ )A_bool_fun$ )
(declare-fun fun_app$f (B_bool_fun_b_a_fun_fun$ B_bool_fun$ )B_a_fun$ )
(declare-fun fun_app$g (B_bool_fun_b_b_fun_fun$ B_bool_fun$ )B_b_fun$ )
(declare-fun fun_app$h (B_bool_fun_b_bool_fun_fun$ B_bool_fun$ )B_bool_fun$ )
(declare-fun fun_app$i (A_b_fun_a_a_fun_fun$ A_b_fun$ )A_a_fun$ )
(declare-fun fun_app$j (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$k (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$l (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$m (B_b_fun_b_bool_fun_fun$ B_b_fun$ )B_bool_fun$ )
(declare-fun fun_app$n (B_b_fun$ B$ )B$ )
(declare-fun fun_app$o (B_a_fun$ B$ )A$ )
(declare-fun fun_app$p (A_a_fun_a_bool_fun_fun$ A_a_fun$ )A_bool_fun$ )
(declare-fun fun_app$q (A_a_fun$ A$ )A$ )
(declare-fun fun_app$r (Bool_bool_fun_bool_bool_fun_fun$ Bool_bool_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$s (A_b_fun_a_bool_fun_fun$ A_b_fun$ )A_bool_fun$ )
(declare-fun fun_app$t (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun$ )
(declare-fun fun_app$u (Bool_a_fun_bool_bool_fun_fun$ Bool_a_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$v (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun$ )
(declare-fun fun_app$w (A_bool_fun_a_b_fun_fun$ A_bool_fun$ )A_b_fun$ )
(declare-fun fun_app$x (Bool_b_fun_bool_bool_fun_fun$ Bool_b_fun$ )Bool_bool_fun$ )
(declare-fun fun_app$y (A_a_fun_a_b_fun_fun$ A_a_fun$ )A_b_fun$ )
(declare-fun fun_app$z (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun lfilter$a (B_bool_fun$ B_llist$ )B_llist$ )
(declare-fun fun_app$aa (A_b_fun$ A$ )B$ )
(assert (! (not (= (lfilter$ p$ (lmap$ f$ xs$ ))(lmap$ f$ (lfilter$a (fun_app$ (comp$ p$ )f$ )xs$ )))):named a0 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_llist$ ))(= (lfilter$ ?v0 (lfilter$ ?v0 ?v1 ))(lfilter$ ?v0 ?v1 ))):named a1 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_llist$ ))(= (lfilter$a ?v0 (lfilter$a ?v0 ?v1 ))(lfilter$a ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ ))(= (lmap$a ?v0 (lmap$ ?v1 ?v2 ))(lmap$b (fun_app$ (comp$ ?v0 )?v1 )?v2 ))):named a3 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ ))(= (lmap$c ?v0 (lmap$ ?v1 ?v2 ))(lmap$ (fun_app$a (comp$a ?v0 )?v1 )?v2 ))):named a4 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_llist$ ))(= (lmap$ ?v0 (lmap$d ?v1 ?v2 ))(lmap$ (fun_app$b (comp$b ?v0 )?v1 )?v2 ))):named a5 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_llist$ ))(= (lmap$e ?v0 (lmap$ ?v1 ?v2 ))(lmap$d (fun_app$c (comp$c ?v0 )?v1 )?v2 ))):named a6 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_llist$ ))(= (lmap$f ?v0 (lmap$a ?v1 ?v2 ))(lmap$c (fun_app$d (comp$d ?v0 )?v1 )?v2 ))):named a7 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_llist$ ))(= (lmap$g ?v0 (lmap$a ?v1 ?v2 ))(lmap$a (fun_app$e (comp$e ?v0 )?v1 )?v2 ))):named a8 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_llist$ ))(= (lmap$f ?v0 (lmap$b ?v1 ?v2 ))(lmap$ (fun_app$f (comp$f ?v0 )?v1 )?v2 ))):named a9 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 B_bool_fun$ )(?v2 B_llist$ ))(= (lmap$h ?v0 (lmap$b ?v1 ?v2 ))(lmap$d (fun_app$g (comp$g ?v0 )?v1 )?v2 ))):named a10 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_llist$ ))(= (lmap$g ?v0 (lmap$b ?v1 ?v2 ))(lmap$b (fun_app$h (comp$h ?v0 )?v1 )?v2 ))):named a11 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 A_llist$ ))(= (lmap$ ?v0 (lmap$e ?v1 ?v2 ))(lmap$c (fun_app$i (comp$i ?v0 )?v1 )?v2 ))):named a12 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$e (comp$e ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$e (comp$e ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$l (fun_app$m (comp$j ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$m (comp$j ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$o (fun_app$b (comp$b ?v0 )?v1 )?v2 )(fun_app$o ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$b (comp$b ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$p (comp$k ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$p (comp$k ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$o (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$q ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$a (comp$a ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$l (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$ (comp$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ ))(= (fun_app$h (comp$h ?v0 )(fun_app$ (comp$ ?v1 )?v2 ))(fun_app$ (comp$ (fun_app$e (comp$e ?v0 )?v1 ))?v2 ))):named a19 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$ (comp$ ?v0 )(fun_app$b (comp$b ?v1 )?v2 ))(fun_app$m (comp$j (fun_app$ (comp$ ?v0 )?v1 ))?v2 ))):named a20 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 B_a_fun$ ))(= (fun_app$ (comp$ ?v0 )(fun_app$a (comp$a ?v1 )?v2 ))(fun_app$ (comp$ (fun_app$p (comp$k ?v0 )?v1 ))?v2 ))):named a21 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ ))(= (fun_app$f (comp$f ?v0 )(fun_app$ (comp$ ?v1 )?v2 ))(fun_app$a (comp$a (fun_app$d (comp$d ?v0 )?v1 ))?v2 ))):named a22 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$h (comp$h ?v0 )(fun_app$m (comp$j ?v1 )?v2 ))(fun_app$m (comp$j (fun_app$h (comp$h ?v0 )?v1 ))?v2 ))):named a23 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$f (comp$f ?v0 )(fun_app$m (comp$j ?v1 )?v2 ))(fun_app$b (comp$b (fun_app$f (comp$f ?v0 )?v1 ))?v2 ))):named a24 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$e (comp$e ?v0 )(fun_app$e (comp$e ?v1 )?v2 ))(fun_app$e (comp$e (fun_app$r (comp$l ?v0 )?v1 ))?v2 ))):named a25 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ ))(= (fun_app$e (comp$e ?v0 )(fun_app$p (comp$k ?v1 )?v2 ))(fun_app$p (comp$k (fun_app$e (comp$e ?v0 )?v1 ))?v2 ))):named a26 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_b_fun$ )(?v2 B_a_fun$ ))(= (fun_app$m (comp$j ?v0 )(fun_app$c (comp$c ?v1 )?v2 ))(fun_app$ (comp$ (fun_app$s (comp$m ?v0 )?v1 ))?v2 ))):named a27 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (fun_app$m (comp$j ?v0 )(fun_app$t (comp$n ?v1 )?v2 ))(fun_app$m (comp$j (fun_app$m (comp$j ?v0 )?v1 ))?v2 ))):named a28 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ ))(= (fun_app$m (comp$j (fun_app$ (comp$ ?v0 )?v1 ))?v2 )(fun_app$ (comp$ ?v0 )(fun_app$b (comp$b ?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ ))(= (fun_app$ (comp$ (fun_app$e (comp$e ?v0 )?v1 ))?v2 )(fun_app$h (comp$h ?v0 )(fun_app$ (comp$ ?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 B_a_fun$ ))(= (fun_app$ (comp$ (fun_app$p (comp$k ?v0 )?v1 ))?v2 )(fun_app$ (comp$ ?v0 )(fun_app$a (comp$a ?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 A_b_fun$ ))(= (fun_app$s (comp$m (fun_app$ (comp$ ?v0 )?v1 ))?v2 )(fun_app$p (comp$k ?v0 )(fun_app$i (comp$i ?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_b_fun$ )(?v2 B_a_fun$ ))(= (fun_app$ (comp$ (fun_app$s (comp$m ?v0 )?v1 ))?v2 )(fun_app$m (comp$j ?v0 )(fun_app$c (comp$c ?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$e (comp$e (fun_app$r (comp$l ?v0 )?v1 ))?v2 )(fun_app$e (comp$e ?v0 )(fun_app$e (comp$e ?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 A_bool_fun$ ))(= (fun_app$e (comp$e (fun_app$u (comp$o ?v0 )?v1 ))?v2 )(fun_app$p (comp$k ?v0 )(fun_app$d (comp$d ?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$m (comp$j (fun_app$h (comp$h ?v0 )?v1 ))?v2 )(fun_app$h (comp$h ?v0 )(fun_app$m (comp$j ?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ ))(= (fun_app$m (comp$j (fun_app$m (comp$j ?v0 )?v1 ))?v2 )(fun_app$m (comp$j ?v0 )(fun_app$t (comp$n ?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_b_fun$ ))(= (fun_app$b (comp$b (fun_app$f (comp$f ?v0 )?v1 ))?v2 )(fun_app$f (comp$f ?v0 )(fun_app$m (comp$j ?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$e (comp$e ?v0 )?v1 )?v2 )(fun_app$k ?v0 (fun_app$j ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$e (comp$e ?v0 )?v1 )?v2 )))):named a39 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$l (fun_app$m (comp$j ?v0 )?v1 )?v2 )(fun_app$l ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$m (comp$j ?v0 )?v1 )?v2 )))):named a40 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ ))(! (= (fun_app$o (fun_app$b (comp$b ?v0 )?v1 )?v2 )(fun_app$o ?v0 (fun_app$n ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$b (comp$b ?v0 )?v1 )?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$j (fun_app$p (comp$k ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$q ?v1 ?v2 ))):pattern ((fun_app$j (fun_app$p (comp$k ?v0 )?v1 )?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$o (fun_app$a (comp$a ?v0 )?v1 )?v2 )(fun_app$q ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$a (comp$a ?v0 )?v1 )?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$l (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))):pattern ((fun_app$l (fun_app$ (comp$ ?v0 )?v1 )?v2 )))):named a44 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$j ?v0 (fun_app$o ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$o ?v3 ?v4 ))))false ))false )):named a45 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$m (comp$j ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$j ?v0 (fun_app$o ?v1 ?v4 ))(fun_app$l ?v2 (fun_app$n ?v3 ?v4 ))))false ))false )):named a46 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (and (= (fun_app$e (comp$e ?v0 )?v1 )(fun_app$e (comp$e ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))false ))false )):named a47 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ ))(=> (and (= (fun_app$e (comp$e ?v0 )?v1 )(fun_app$p (comp$k ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$q ?v3 ?v4 ))))false ))false )):named a48 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (and (= (fun_app$m (comp$j ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$l ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$o ?v3 ?v4 ))))false ))false )):named a49 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$m (comp$j ?v0 )?v1 )(fun_app$m (comp$j ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$l ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$l ?v2 (fun_app$n ?v3 ?v4 ))))false ))false )):named a50 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (and (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$b (comp$b ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$o ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$o ?v2 (fun_app$n ?v3 ?v4 ))))false ))false )):named a51 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ ))(=> (and (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(=> (forall ((?v4 B$ ))(= (fun_app$o ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$q ?v2 (fun_app$o ?v3 ?v4 ))))false ))false )):named a52 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (and (= (fun_app$p (comp$k ?v0 )?v1 )(fun_app$e (comp$e ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$j ?v0 (fun_app$q ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))false ))false )):named a53 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ ))(=> (and (= (fun_app$p (comp$k ?v0 )?v1 )(fun_app$p (comp$k ?v2 )?v3 ))(=> (forall ((?v4 A$ ))(= (fun_app$j ?v0 (fun_app$q ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$q ?v3 ?v4 ))))false ))false )):named a54 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(= (fun_app$p (comp$k ?v4 )?v2 )?v5 ))(= (fun_app$m (comp$j (fun_app$ (comp$ ?v4 )?v0 ))?v1 )(fun_app$ (comp$ ?v5 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 A_bool_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$a (comp$a ?v0 )?v1 )(fun_app$b (comp$b ?v2 )?v3 ))(= (fun_app$ (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$ (comp$ (fun_app$p (comp$k ?v4 )?v0 ))?v1 )(fun_app$m (comp$j ?v5 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 Bool_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$e (comp$e ?v4 )?v2 )?v5 ))(= (fun_app$ (comp$ (fun_app$e (comp$e ?v4 )?v0 ))?v1 )(fun_app$ (comp$ ?v5 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 Bool_a_fun$ )(?v3 A_bool_fun$ )(?v4 A_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$i (comp$i ?v0 )?v1 )(fun_app$d (comp$d ?v2 )?v3 ))(= (fun_app$u (comp$o ?v4 )?v2 )?v5 ))(= (fun_app$s (comp$m (fun_app$ (comp$ ?v4 )?v0 ))?v1 )(fun_app$e (comp$e ?v5 )?v3 )))):named a58 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_b_fun$ )(?v2 Bool_b_fun$ )(?v3 A_bool_fun$ )(?v4 B_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$v (comp$p ?v0 )?v1 )(fun_app$w (comp$q ?v2 )?v3 ))(= (fun_app$x (comp$r ?v4 )?v2 )?v5 ))(= (fun_app$s (comp$m (fun_app$m (comp$j ?v4 )?v0 ))?v1 )(fun_app$e (comp$e ?v5 )?v3 )))):named a59 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun$ )(?v3 A_a_fun$ )(?v4 B_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$v (comp$p ?v0 )?v1 )(fun_app$y (comp$s ?v2 )?v3 ))(= (fun_app$s (comp$m ?v4 )?v2 )?v5 ))(= (fun_app$s (comp$m (fun_app$m (comp$j ?v4 )?v0 ))?v1 )(fun_app$p (comp$k ?v5 )?v3 )))):named a60 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 A_b_fun$ )(?v3 B_a_fun$ )(?v4 B_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$t (comp$n ?v0 )?v1 )(fun_app$c (comp$c ?v2 )?v3 ))(= (fun_app$s (comp$m ?v4 )?v2 )?v5 ))(= (fun_app$m (comp$j (fun_app$m (comp$j ?v4 )?v0 ))?v1 )(fun_app$ (comp$ ?v5 )?v3 )))):named a61 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 A_b_fun$ )(?v3 B_a_fun$ )(?v4 B_a_fun$ )(?v5 A_a_fun$ ))(=> (and (= (fun_app$t (comp$n ?v0 )?v1 )(fun_app$c (comp$c ?v2 )?v3 ))(= (fun_app$i (comp$i ?v4 )?v2 )?v5 ))(= (fun_app$b (comp$b (fun_app$b (comp$b ?v4 )?v0 ))?v1 )(fun_app$a (comp$a ?v5 )?v3 )))):named a62 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 Bool_a_fun$ )(?v3 A_bool_fun$ )(?v4 A_bool_fun$ )(?v5 Bool_bool_fun$ ))(=> (and (= (fun_app$z (comp$t ?v0 )?v1 )(fun_app$d (comp$d ?v2 )?v3 ))(= (fun_app$u (comp$o ?v4 )?v2 )?v5 ))(= (fun_app$p (comp$k (fun_app$p (comp$k ?v4 )?v0 ))?v1 )(fun_app$e (comp$e ?v5 )?v3 )))):named a63 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ )(?v3 A_b_fun$ )(?v4 A_bool_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$d (comp$d ?v0 )?v1 )(fun_app$i (comp$i ?v2 )?v3 ))(= (fun_app$ (comp$ ?v4 )?v2 )?v5 ))(= (fun_app$e (comp$e (fun_app$u (comp$o ?v4 )?v0 ))?v1 )(fun_app$s (comp$m ?v5 )?v3 )))):named a64 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$e (comp$e ?v0 )?v1 )(fun_app$p (comp$k ?v2 )?v3 ))(= (fun_app$a (comp$a ?v3 )?v4 )?v5 ))(= (fun_app$h (comp$h ?v0 )(fun_app$ (comp$ ?v1 )?v4 ))(fun_app$ (comp$ ?v2 )?v5 )))):named a65 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$p (comp$k ?v0 )?v1 )(fun_app$e (comp$e ?v2 )?v3 ))(= (fun_app$ (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$ (comp$ ?v0 )(fun_app$a (comp$a ?v1 )?v4 ))(fun_app$h (comp$h ?v2 )?v5 )))):named a66 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 B_a_fun$ ))(=> (and (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$b (comp$b ?v3 )?v4 )?v5 ))(= (fun_app$ (comp$ ?v0 )(fun_app$b (comp$b ?v1 )?v4 ))(fun_app$ (comp$ ?v2 )?v5 )))):named a67 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 B_a_fun$ )(?v3 A_b_fun$ )(?v4 B_a_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$d (comp$d ?v0 )?v1 )(fun_app$i (comp$i ?v2 )?v3 ))(= (fun_app$c (comp$c ?v3 )?v4 )?v5 ))(= (fun_app$f (comp$f ?v0 )(fun_app$ (comp$ ?v1 )?v4 ))(fun_app$b (comp$b ?v2 )?v5 )))):named a68 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 A_bool_fun$ )(?v3 Bool_a_fun$ )(?v4 A_bool_fun$ )(?v5 A_a_fun$ ))(=> (and (= (fun_app$r (comp$l ?v0 )?v1 )(fun_app$u (comp$o ?v2 )?v3 ))(= (fun_app$d (comp$d ?v3 )?v4 )?v5 ))(= (fun_app$e (comp$e ?v0 )(fun_app$e (comp$e ?v1 )?v4 ))(fun_app$p (comp$k ?v2 )?v5 )))):named a69 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 B_a_fun$ )(?v3 A_b_fun$ )(?v4 B_a_fun$ )(?v5 B_b_fun$ ))(=> (and (= (fun_app$z (comp$t ?v0 )?v1 )(fun_app$i (comp$i ?v2 )?v3 ))(= (fun_app$c (comp$c ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$a ?v0 )(fun_app$a (comp$a ?v1 )?v4 ))(fun_app$b (comp$b ?v2 )?v5 )))):named a70 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 Bool_a_fun$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$i (comp$i ?v0 )?v1 )(fun_app$d (comp$d ?v2 )?v3 ))(= (fun_app$ (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$b (comp$b ?v0 )(fun_app$c (comp$c ?v1 )?v4 ))(fun_app$f (comp$f ?v2 )?v5 )))):named a71 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 Bool_a_fun$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ )(?v5 B_bool_fun$ ))(=> (and (= (fun_app$z (comp$t ?v0 )?v1 )(fun_app$d (comp$d ?v2 )?v3 ))(= (fun_app$ (comp$ ?v3 )?v4 )?v5 ))(= (fun_app$a (comp$a ?v0 )(fun_app$a (comp$a ?v1 )?v4 ))(fun_app$f (comp$f ?v2 )?v5 )))):named a72 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$r (comp$l ?v0 )?v1 )(fun_app$r (comp$l ?v2 )?v3 ))(= (fun_app$e (comp$e ?v3 )?v4 )?v5 ))(= (fun_app$e (comp$e ?v0 )(fun_app$e (comp$e ?v1 )?v4 ))(fun_app$e (comp$e ?v2 )?v5 )))):named a73 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 Bool_bool_fun$ )(?v4 A_bool_fun$ )(?v5 A_bool_fun$ ))(=> (and (= (fun_app$u (comp$o ?v0 )?v1 )(fun_app$r (comp$l ?v2 )?v3 ))(= (fun_app$e (comp$e ?v3 )?v4 )?v5 ))(= (fun_app$p (comp$k ?v0 )(fun_app$d (comp$d ?v1 )?v4 ))(fun_app$e (comp$e ?v2 )?v5 )))):named a74 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 B$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$o ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$o ?v3 ?v4 ))))):named a75 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )(fun_app$m (comp$j ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$o ?v1 ?v4 ))(fun_app$l ?v2 (fun_app$n ?v3 ?v4 ))))):named a76 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 A$ ))(=> (= (fun_app$e (comp$e ?v0 )?v1 )(fun_app$e (comp$e ?v2 )?v3 ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))):named a77 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 A$ ))(=> (= (fun_app$e (comp$e ?v0 )?v1 )(fun_app$p (comp$k ?v2 )?v3 ))(= (fun_app$k ?v0 (fun_app$j ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$q ?v3 ?v4 ))))):named a78 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ )(?v4 B$ ))(=> (= (fun_app$m (comp$j ?v0 )?v1 )(fun_app$ (comp$ ?v2 )?v3 ))(= (fun_app$l ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$o ?v3 ?v4 ))))):named a79 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$m (comp$j ?v0 )?v1 )(fun_app$m (comp$j ?v2 )?v3 ))(= (fun_app$l ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$l ?v2 (fun_app$n ?v3 ?v4 ))))):named a80 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ )(?v4 B$ ))(=> (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$b (comp$b ?v2 )?v3 ))(= (fun_app$o ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$o ?v2 (fun_app$n ?v3 ?v4 ))))):named a81 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ )(?v4 B$ ))(=> (= (fun_app$b (comp$b ?v0 )?v1 )(fun_app$a (comp$a ?v2 )?v3 ))(= (fun_app$o ?v0 (fun_app$n ?v1 ?v4 ))(fun_app$q ?v2 (fun_app$o ?v3 ?v4 ))))):named a82 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ )(?v4 A$ ))(=> (= (fun_app$p (comp$k ?v0 )?v1 )(fun_app$e (comp$e ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$q ?v1 ?v4 ))(fun_app$k ?v2 (fun_app$j ?v3 ?v4 ))))):named a83 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 A_a_fun$ )(?v4 A$ ))(=> (= (fun_app$p (comp$k ?v0 )?v1 )(fun_app$p (comp$k ?v2 )?v3 ))(= (fun_app$j ?v0 (fun_app$q ?v1 ?v4 ))(fun_app$j ?v2 (fun_app$q ?v3 ?v4 ))))):named a84 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$b (comp$b ?v0 )?v1 )?v2 )(= (fun_app$m (comp$j (fun_app$ (comp$ ?v3 )?v0 ))?v1 )(fun_app$ (comp$ ?v3 )?v2 )))):named a85 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$a (comp$a ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ (fun_app$p (comp$k ?v3 )?v0 ))?v1 )(fun_app$ (comp$ ?v3 )?v2 )))):named a86 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 Bool_bool_fun$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ (fun_app$e (comp$e ?v3 )?v0 ))?v1 )(fun_app$h (comp$h ?v3 )?v2 )))):named a87 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 A_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$i (comp$i ?v0 )?v1 )?v2 )(= (fun_app$s (comp$m (fun_app$ (comp$ ?v3 )?v0 ))?v1 )(fun_app$p (comp$k ?v3 )?v2 )))):named a88 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_bool_fun$ ))(=> (= (fun_app$c (comp$c ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ (fun_app$s (comp$m ?v3 )?v0 ))?v1 )(fun_app$m (comp$j ?v3 )?v2 )))):named a89 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$d (comp$d ?v0 )?v1 )?v2 )(= (fun_app$e (comp$e (fun_app$u (comp$o ?v3 )?v0 ))?v1 )(fun_app$p (comp$k ?v3 )?v2 )))):named a90 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_bool_fun$ ))(=> (= (fun_app$t (comp$n ?v0 )?v1 )?v2 )(= (fun_app$m (comp$j (fun_app$m (comp$j ?v3 )?v0 ))?v1 )(fun_app$m (comp$j ?v3 )?v2 )))):named a91 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B_b_fun$ )(?v2 B_b_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$t (comp$n ?v0 )?v1 )?v2 )(= (fun_app$b (comp$b (fun_app$b (comp$b ?v3 )?v0 ))?v1 )(fun_app$b (comp$b ?v3 )?v2 )))):named a92 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$z (comp$t ?v0 )?v1 )?v2 )(= (fun_app$p (comp$k (fun_app$p (comp$k ?v3 )?v0 ))?v1 )(fun_app$p (comp$k ?v3 )?v2 )))):named a93 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B_b_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$c (comp$c ?v0 )?v1 )?v2 )(= (fun_app$a (comp$a (fun_app$i (comp$i ?v3 )?v0 ))?v1 )(fun_app$b (comp$b ?v3 )?v2 )))):named a94 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$e (comp$e ?v0 )?v1 )?v2 )(= (fun_app$h (comp$h ?v0 )(fun_app$ (comp$ ?v1 )?v3 ))(fun_app$ (comp$ ?v2 )?v3 )))):named a95 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$p (comp$k ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ ?v0 )(fun_app$a (comp$a ?v1 )?v3 ))(fun_app$ (comp$ ?v2 )?v3 )))):named a96 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )?v2 )(= (fun_app$ (comp$ ?v0 )(fun_app$b (comp$b ?v1 )?v3 ))(fun_app$m (comp$j ?v2 )?v3 )))):named a97 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$d (comp$d ?v0 )?v1 )?v2 )(= (fun_app$f (comp$f ?v0 )(fun_app$ (comp$ ?v1 )?v3 ))(fun_app$a (comp$a ?v2 )?v3 )))):named a98 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_bool_fun$ )(?v2 B_bool_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$h (comp$h ?v0 )?v1 )?v2 )(= (fun_app$h (comp$h ?v0 )(fun_app$m (comp$j ?v1 )?v3 ))(fun_app$m (comp$j ?v2 )?v3 )))):named a99 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 B_bool_fun$ )(?v2 B_a_fun$ )(?v3 B_b_fun$ ))(=> (= (fun_app$f (comp$f ?v0 )?v1 )?v2 )(= (fun_app$f (comp$f ?v0 )(fun_app$m (comp$j ?v1 )?v3 ))(fun_app$b (comp$b ?v2 )?v3 )))):named a100 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool_bool_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$r (comp$l ?v0 )?v1 )?v2 )(= (fun_app$e (comp$e ?v0 )(fun_app$e (comp$e ?v1 )?v3 ))(fun_app$e (comp$e ?v2 )?v3 )))):named a101 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 A_b_fun$ )(?v2 A_bool_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$s (comp$m ?v0 )?v1 )?v2 )(= (fun_app$m (comp$j ?v0 )(fun_app$c (comp$c ?v1 )?v3 ))(fun_app$ (comp$ ?v2 )?v3 )))):named a102 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 A_b_fun$ )(?v2 A_a_fun$ )(?v3 B_a_fun$ ))(=> (= (fun_app$i (comp$i ?v0 )?v1 )?v2 )(= (fun_app$b (comp$b ?v0 )(fun_app$c (comp$c ?v1 )?v3 ))(fun_app$a (comp$a ?v2 )?v3 )))):named a103 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 Bool_a_fun$ )(?v2 Bool_bool_fun$ )(?v3 A_bool_fun$ ))(=> (= (fun_app$u (comp$o ?v0 )?v1 )?v2 )(= (fun_app$p (comp$k ?v0 )(fun_app$d (comp$d ?v1 )?v3 ))(fun_app$e (comp$e ?v2 )?v3 )))):named a104 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun$ )(?v3 A$ ))(=> (= (fun_app$e (comp$e ?v0 )?v1 )?v2 )(= (fun_app$k ?v0 (fun_app$j ?v1 ?v3 ))(fun_app$j ?v2 ?v3 )))):named a105 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_b_fun$ )(?v2 B_bool_fun$ )(?v3 B$ ))(=> (= (fun_app$m (comp$j ?v0 )?v1 )?v2 )(= (fun_app$l ?v0 (fun_app$n ?v1 ?v3 ))(fun_app$l ?v2 ?v3 )))):named a106 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B_a_fun$ )(?v3 B$ ))(=> (= (fun_app$b (comp$b ?v0 )?v1 )?v2 )(= (fun_app$o ?v0 (fun_app$n ?v1 ?v3 ))(fun_app$o ?v2 ?v3 )))):named a107 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_a_fun$ )(?v2 A_bool_fun$ )(?v3 A$ ))(=> (= (fun_app$p (comp$k ?v0 )?v1 )?v2 )(= (fun_app$j ?v0 (fun_app$q ?v1 ?v3 ))(fun_app$j ?v2 ?v3 )))):named a108 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun$ )(?v3 B$ ))(=> (= (fun_app$a (comp$a ?v0 )?v1 )?v2 )(= (fun_app$q ?v0 (fun_app$o ?v1 ?v3 ))(fun_app$o ?v2 ?v3 )))):named a109 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B_bool_fun$ )(?v3 B$ ))(=> (= (fun_app$ (comp$ ?v0 )?v1 )?v2 )(= (fun_app$j ?v0 (fun_app$o ?v1 ?v3 ))(fun_app$l ?v2 ?v3 )))):named a110 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A_a_fun$ )(?v4 A_a_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$q ?v0 (fun_app$q ?v1 ?v2 ))(fun_app$q ?v3 (fun_app$q ?v4 ?v2 )))(= (fun_app$j (fun_app$p (comp$k (fun_app$p (comp$k ?v5 )?v0 ))?v1 )?v2 )(fun_app$j (fun_app$p (comp$k (fun_app$p (comp$k ?v5 )?v3 ))?v4 )?v2 )))):named a111 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_b_fun$ )(?v4 B_b_fun$ )(?v5 B_a_fun$ ))(=> (= (fun_app$aa ?v0 (fun_app$o ?v1 ?v2 ))(fun_app$n ?v3 (fun_app$n ?v4 ?v2 )))(= (fun_app$o (fun_app$a (comp$a (fun_app$i (comp$i ?v5 )?v0 ))?v1 )?v2 )(fun_app$o (fun_app$b (comp$b (fun_app$b (comp$b ?v5 )?v3 ))?v4 )?v2 )))):named a112 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 A_a_fun$ ))(=> (= (fun_app$q ?v0 (fun_app$o ?v1 ?v2 ))(fun_app$o ?v3 (fun_app$n ?v4 ?v2 )))(= (fun_app$o (fun_app$a (comp$a (fun_app$z (comp$t ?v5 )?v0 ))?v1 )?v2 )(fun_app$o (fun_app$b (comp$b (fun_app$a (comp$a ?v5 )?v3 ))?v4 )?v2 )))):named a113 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_b_fun$ )(?v2 B$ )(?v3 A_a_fun$ )(?v4 B_a_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$o ?v0 (fun_app$n ?v1 ?v2 ))(fun_app$q ?v3 (fun_app$o ?v4 ?v2 )))(= (fun_app$l (fun_app$m (comp$j (fun_app$ (comp$ ?v5 )?v0 ))?v1 )?v2 )(fun_app$l (fun_app$ (comp$ (fun_app$p (comp$k ?v5 )?v3 ))?v4 )?v2 )))):named a114 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 B_a_fun$ )(?v4 B_b_fun$ )(?v5 A_bool_fun$ ))(=> (= (fun_app$q ?v0 (fun_app$o ?v1 ?v2 ))(fun_app$o ?v3 (fun_app$n ?v4 ?v2 )))(= (fun_app$l (fun_app$ (comp$ (fun_app$p (comp$k ?v5 )?v0 ))?v1 )?v2 )(fun_app$l (fun_app$m (comp$j (fun_app$ (comp$ ?v5 )?v3 ))?v4 )?v2 )))):named a115 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ )(?v5 B$ ))(=> (= (fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$o ?v4 ?v5 )))(= (fun_app$l (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$l (fun_app$ (comp$ ?v3 )?v4 )?v5 )))):named a116 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 B_a_fun$ )(?v2 B$ )(?v3 A_bool_fun$ )(?v4 B_a_fun$ ))(=> (= (fun_app$j ?v0 (fun_app$o ?v1 ?v2 ))(fun_app$j ?v3 (fun_app$o ?v4 ?v2 )))(= (fun_app$l (fun_app$ (comp$ ?v0 )?v1 )?v2 )(fun_app$l (fun_app$ (comp$ ?v3 )?v4 )?v2 )))):named a117 ))
(check-sat )
;(get-unsat-core )
