;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_llist_set$ 0 )
(declare-sort A_a_prod_llist_set$ 0 )
(declare-sort A_a_a_prod_prod_llist_set$ 0 )
(declare-sort A_a_prod_a_prod_llist_set$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_llist_set$ 0 )
(declare-codatatypes ()((A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-sort A_a_prod$ 0)
(declare-fun fst$ (A_a_prod$)A$)
(declare-fun snd$ (A_a_prod$)A$)
(declare-fun pair$ (A$ A$ )A_a_prod$)
(declare-codatatypes ()((A_a_prod_llist$ (lNil$a )(lCons$a (lhd$a A_a_prod$ )(ltl$a A_a_prod_llist$ )))))
(declare-sort A_a_prod_a_prod$ 0)
(declare-fun fst$a (A_a_prod_a_prod$)A_a_prod$)
(declare-fun snd$a (A_a_prod_a_prod$)A$)
(declare-fun pair$a (A_a_prod$ A$ )A_a_prod_a_prod$)
(declare-codatatypes ()((A_a_prod_a_prod_llist$ (lNil$b )(lCons$b (lhd$b A_a_prod_a_prod$ )(ltl$b A_a_prod_a_prod_llist$ )))))
(declare-sort A_a_a_prod_prod$ 0)
(declare-fun fst$b (A_a_a_prod_prod$)A$)
(declare-fun snd$b (A_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$b (A$ A_a_prod$ )A_a_a_prod_prod$)
(declare-codatatypes ()((A_a_a_prod_prod_llist$ (lNil$c )(lCons$c (lhd$c A_a_a_prod_prod$ )(ltl$c A_a_a_prod_prod_llist$ )))))
(declare-sort A_a_prod_a_a_prod_prod$ 0)
(declare-fun fst$c (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun snd$c (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$c (A_a_prod$ A_a_prod$ )A_a_prod_a_a_prod_prod$)
(declare-codatatypes ()((A_a_prod_a_a_prod_prod_llist$ (lNil$d )(lCons$d (lhd$d A_a_prod_a_a_prod_prod$ )(ltl$d A_a_prod_a_a_prod_prod_llist$ )))))
(declare-sort A_a_a_prod_a_prod_prod$ 0)
(declare-fun fst$d (A_a_a_prod_a_prod_prod$)A$)
(declare-fun snd$d (A_a_a_prod_a_prod_prod$)A_a_prod_a_prod$)
(declare-fun pair$d (A$ A_a_prod_a_prod$ )A_a_a_prod_a_prod_prod$)
(declare-codatatypes ()((A_a_a_prod_a_prod_prod_llist$ (lNil$e )(lCons$e (lhd$e A_a_a_prod_a_prod_prod$ )(ltl$e A_a_a_prod_a_prod_prod_llist$ )))))
(declare-sort A_a_a_a_prod_prod_prod$ 0)
(declare-fun fst$e (A_a_a_a_prod_prod_prod$)A$)
(declare-fun snd$e (A_a_a_a_prod_prod_prod$)A_a_a_prod_prod$)
(declare-fun pair$e (A$ A_a_a_prod_prod$ )A_a_a_a_prod_prod_prod$)
(declare-codatatypes ()((A_a_a_a_prod_prod_prod_llist$ (lNil$f )(lCons$f (lhd$f A_a_a_a_prod_prod_prod$ )(ltl$f A_a_a_a_prod_prod_prod_llist$ )))))
(declare-sort A_a_prod_a_prod_a_prod$ 0)
(declare-fun fst$f (A_a_prod_a_prod_a_prod$)A_a_prod_a_prod$)
(declare-fun snd$f (A_a_prod_a_prod_a_prod$)A$)
(declare-fun pair$f (A_a_prod_a_prod$ A$ )A_a_prod_a_prod_a_prod$)
(declare-codatatypes ()((A_a_prod_a_prod_a_prod_llist$ (lNil$g )(lCons$g (lhd$g A_a_prod_a_prod_a_prod$ )(ltl$g A_a_prod_a_prod_a_prod_llist$ )))))
(declare-sort A_a_a_prod_prod_a_prod$ 0)
(declare-fun fst$g (A_a_a_prod_prod_a_prod$)A_a_a_prod_prod$)
(declare-fun snd$g (A_a_a_prod_prod_a_prod$)A$)
(declare-fun pair$g (A_a_a_prod_prod$ A$ )A_a_a_prod_prod_a_prod$)
(declare-codatatypes ()((A_a_a_prod_prod_a_prod_llist$ (lNil$h )(lCons$h (lhd$h A_a_a_prod_prod_a_prod$ )(ltl$h A_a_a_prod_prod_a_prod_llist$ )))))
(declare-sort A_a_a_prod_a_a_prod_prod_prod$ 0)
(declare-fun fst$h (A_a_a_prod_a_a_prod_prod_prod$)A$)
(declare-fun snd$h (A_a_a_prod_a_a_prod_prod_prod$)A_a_prod_a_a_prod_prod$)
(declare-fun pair$h (A$ A_a_prod_a_a_prod_prod$ )A_a_a_prod_a_a_prod_prod_prod$)
(declare-codatatypes ()((A_a_a_prod_a_a_prod_prod_prod_llist$ (lNil$i )(lCons$i (lhd$i A_a_a_prod_a_a_prod_prod_prod$ )(ltl$i A_a_a_prod_a_a_prod_prod_prod_llist$ )))))
(declare-sort A_a_prod_a_a_prod_a_prod_prod$ 0)
(declare-fun fst$i (A_a_prod_a_a_prod_a_prod_prod$)A_a_prod$)
(declare-fun snd$i (A_a_prod_a_a_prod_a_prod_prod$)A_a_prod_a_prod$)
(declare-fun pair$i (A_a_prod$ A_a_prod_a_prod$ )A_a_prod_a_a_prod_a_prod_prod$)
(declare-codatatypes ()((A_a_prod_a_a_prod_a_prod_prod_llist$ (lNil$j )(lCons$j (lhd$j A_a_prod_a_a_prod_a_prod_prod$ )(ltl$j A_a_prod_a_a_prod_a_prod_prod_llist$ )))))
(declare-fun xs$ ()A_llist$ )
(declare-fun ys$ ()A_llist$ )
(declare-fun lzip$ (A_llist$ A_llist$ )A_a_prod_llist$ )
(declare-fun lnull$ (A_llist$ )Bool )
(declare-fun lzip$a (A_llist$ A_a_prod_llist$ )A_a_a_prod_prod_llist$ )
(declare-fun lzip$b (A_a_prod_llist$ A_llist$ )A_a_prod_a_prod_llist$ )
(declare-fun lzip$c (A_a_prod_llist$ A_a_prod_llist$ )A_a_prod_a_a_prod_prod_llist$ )
(declare-fun lzip$d (A_llist$ A_a_prod_a_prod_llist$ )A_a_a_prod_a_prod_prod_llist$ )
(declare-fun lzip$e (A_llist$ A_a_a_prod_prod_llist$ )A_a_a_a_prod_prod_prod_llist$ )
(declare-fun lzip$f (A_a_prod_a_prod_llist$ A_llist$ )A_a_prod_a_prod_a_prod_llist$ )
(declare-fun lzip$g (A_a_a_prod_prod_llist$ A_llist$ )A_a_a_prod_prod_a_prod_llist$ )
(declare-fun lzip$h (A_llist$ A_a_prod_a_a_prod_prod_llist$ )A_a_a_prod_a_a_prod_prod_prod_llist$ )
(declare-fun lzip$i (A_a_prod_llist$ A_a_prod_a_prod_llist$ )A_a_prod_a_a_prod_a_prod_prod_llist$ )
(declare-fun lnull$a (A_a_prod_llist$ )Bool )
(declare-fun lnull$b (A_a_prod_a_prod_llist$ )Bool )
(declare-fun lnull$c (A_a_a_prod_prod_llist$ )Bool )
(declare-fun lnull$d (A_a_prod_a_a_prod_prod_llist$ )Bool )
(declare-fun lnull$e (A_a_a_prod_a_prod_prod_llist$ )Bool )
(declare-fun lnull$f (A_a_a_a_prod_prod_prod_llist$ )Bool )
(declare-fun lnull$g (A_a_prod_a_prod_a_prod_llist$ )Bool )
(declare-fun lnull$h (A_a_a_prod_prod_a_prod_llist$ )Bool )
(declare-fun lnull$i (A_a_a_prod_a_a_prod_prod_prod_llist$ )Bool )
(declare-fun lnull$j (A_a_prod_a_a_prod_a_prod_prod_llist$ )Bool )
(declare-fun member$ (A_a_prod_a_a_prod_prod_llist$ A_a_prod_a_a_prod_prod_llist_set$ )Bool )
(declare-fun lappend$ (A_llist$ A_llist$ )A_llist$ )
(declare-fun lfinite$ (A_a_prod_a_a_prod_prod_llist$ )Bool )
(declare-fun member$a (A_a_prod_a_prod_llist$ A_a_prod_a_prod_llist_set$ )Bool )
(declare-fun member$b (A_a_a_prod_prod_llist$ A_a_a_prod_prod_llist_set$ )Bool )
(declare-fun member$c (A_a_prod_llist$ A_a_prod_llist_set$ )Bool )
(declare-fun member$d (A_llist$ A_llist_set$ )Bool )
(declare-fun lappend$a (A_a_prod_a_a_prod_prod_llist$ A_a_prod_a_a_prod_prod_llist$ )A_a_prod_a_a_prod_prod_llist$ )
(declare-fun lappend$b (A_a_prod_a_prod_llist$ A_a_prod_a_prod_llist$ )A_a_prod_a_prod_llist$ )
(declare-fun lappend$c (A_a_a_prod_prod_llist$ A_a_a_prod_prod_llist$ )A_a_a_prod_prod_llist$ )
(declare-fun lappend$d (A_a_prod_llist$ A_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun lfinite$a (A_a_prod_a_prod_llist$ )Bool )
(declare-fun lfinite$b (A_a_a_prod_prod_llist$ )Bool )
(declare-fun lfinite$c (A_a_prod_llist$ )Bool )
(declare-fun lfinite$d (A_llist$ )Bool )
(assert (! (not (lnull$ ys$ )):named a0 ))
(assert (! (= xs$ (lappend$ xs$ ys$ )):named a1 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a2 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a3 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a4 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a5 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$b ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a6 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$c ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$c ?v1 )))false ))false )):named a7 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$b ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$b ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a8 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(=> (and (=> (or (lnull$c ?v0 )(lnull$ ?v1 ))false )(=> (and (not (lnull$c ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a9 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (=> (or (lnull$ ?v0 )(lnull$d ?v1 ))false )(=> (and (not (lnull$ ?v0 ))(not (lnull$d ?v1 )))false ))false )):named a10 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (=> (or (lnull$a ?v0 )(lnull$b ?v1 ))false )(=> (and (not (lnull$a ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a11 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$d ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (member$ ?v1 ?v0 )(lnull$d ?v1 ))))false ))false )):named a12 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_a_prod_llist$ ))(=> (member$a ?v1 ?v0 )(lnull$b ?v1 ))))false ))false )):named a13 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_a_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 )))false )(=> (not (forall ((?v1 A_a_a_prod_prod_llist$ ))(=> (member$b ?v1 ?v0 )(lnull$c ?v1 ))))false ))false )):named a14 ))
(assert (! (forall ((?v0 A_a_prod_llist_set$ ))(=> (and (=> (forall ((?v1 A_a_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 )))false )(=> (not (forall ((?v1 A_a_prod_llist$ ))(=> (member$c ?v1 ?v0 )(lnull$a ?v1 ))))false ))false )):named a15 ))
(assert (! (forall ((?v0 A_llist_set$ ))(=> (and (=> (forall ((?v1 A_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$ ?v1 )))false )(=> (not (forall ((?v1 A_llist$ ))(=> (member$d ?v1 ?v0 )(lnull$ ?v1 ))))false ))false )):named a16 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (=> (and (lnull$d ?v0 )(lnull$d ?v1 ))false )(=> (or (not (lnull$d ?v0 ))(not (lnull$d ?v1 )))false ))false )):named a17 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (=> (and (lnull$b ?v0 )(lnull$b ?v1 ))false )(=> (or (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))false ))false )):named a18 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (and (=> (and (lnull$c ?v0 )(lnull$c ?v1 ))false )(=> (or (not (lnull$c ?v0 ))(not (lnull$c ?v1 )))false ))false )):named a19 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (=> (and (lnull$a ?v0 )(lnull$a ?v1 ))false )(=> (or (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))false ))false )):named a20 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (=> (and (lnull$ ?v0 )(lnull$ ?v1 ))false )(=> (or (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))false ))false )):named a21 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (=> (lnull$d ?v0 )false )(=> (not (lnull$d ?v0 ))false ))false )):named a22 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ ))(=> (and (=> (lnull$b ?v0 )false )(=> (not (lnull$b ?v0 ))false ))false )):named a23 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ ))(=> (and (=> (lnull$c ?v0 )false )(=> (not (lnull$c ?v0 ))false ))false )):named a24 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(=> (and (=> (lnull$a ?v0 )false )(=> (not (lnull$a ?v0 ))false ))false )):named a25 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (and (=> (lnull$ ?v0 )false )(=> (not (lnull$ ?v0 ))false ))false )):named a26 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (not (lnull$d (lappend$a ?v0 ?v1 )))(or (not (lnull$d ?v0 ))(not (lnull$d ?v1 ))))):named a27 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (not (lnull$b (lappend$b ?v0 ?v1 )))(or (not (lnull$b ?v0 ))(not (lnull$b ?v1 ))))):named a28 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(= (not (lnull$c (lappend$c ?v0 ?v1 )))(or (not (lnull$c ?v0 ))(not (lnull$c ?v1 ))))):named a29 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(= (not (lnull$a (lappend$d ?v0 ?v1 )))(or (not (lnull$a ?v0 ))(not (lnull$a ?v1 ))))):named a30 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (not (lnull$ (lappend$ ?v0 ?v1 )))(or (not (lnull$ ?v0 ))(not (lnull$ ?v1 ))))):named a31 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (lnull$d (lappend$a ?v0 ?v1 ))(and (lnull$d ?v0 )(lnull$d ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (lnull$b (lappend$b ?v0 ?v1 ))(and (lnull$b ?v0 )(lnull$b ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(= (lnull$c (lappend$c ?v0 ?v1 ))(and (lnull$c ?v0 )(lnull$c ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(= (lnull$a (lappend$d ?v0 ?v1 ))(and (lnull$a ?v0 )(lnull$a ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (lnull$ (lappend$ ?v0 ?v1 ))(and (lnull$ ?v0 )(lnull$ ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ ))(=> (lnull$d ?v0 )(lfinite$ ?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ ))(=> (lnull$b ?v0 )(lfinite$a ?v0 ))):named a38 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ ))(=> (lnull$c ?v0 )(lfinite$b ?v0 ))):named a39 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(=> (lnull$a ?v0 )(lfinite$c ?v0 ))):named a40 ))
(assert (! (forall ((?v0 A_llist$ ))(=> (lnull$ ?v0 )(lfinite$d ?v0 ))):named a41 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (or (not (lnull$d ?v0 ))(not (lnull$d ?v1 )))(not (lnull$d (lappend$a ?v0 ?v1 ))))):named a42 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (or (not (lnull$b ?v0 ))(not (lnull$b ?v1 )))(not (lnull$b (lappend$b ?v0 ?v1 ))))):named a43 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (or (not (lnull$c ?v0 ))(not (lnull$c ?v1 )))(not (lnull$c (lappend$c ?v0 ?v1 ))))):named a44 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (or (not (lnull$a ?v0 ))(not (lnull$a ?v1 )))(not (lnull$a (lappend$d ?v0 ?v1 ))))):named a45 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (or (not (lnull$ ?v0 ))(not (lnull$ ?v1 )))(not (lnull$ (lappend$ ?v0 ?v1 ))))):named a46 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(=> (and (lnull$d ?v0 )(lnull$d ?v1 ))(lnull$d (lappend$a ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(=> (and (lnull$b ?v0 )(lnull$b ?v1 ))(lnull$b (lappend$b ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(=> (and (lnull$c ?v0 )(lnull$c ?v1 ))(lnull$c (lappend$c ?v0 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(=> (and (lnull$a ?v0 )(lnull$a ?v1 ))(lnull$a (lappend$d ?v0 ?v1 )))):named a50 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(=> (and (lnull$ ?v0 )(lnull$ ?v1 ))(lnull$ (lappend$ ?v0 ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(! (=> (lnull$d ?v0 )(= (lappend$a ?v1 ?v0 )?v1 )):pattern ((lappend$a ?v1 ?v0 )))):named a52 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(! (=> (lnull$b ?v0 )(= (lappend$b ?v1 ?v0 )?v1 )):pattern ((lappend$b ?v1 ?v0 )))):named a53 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(! (=> (lnull$c ?v0 )(= (lappend$c ?v1 ?v0 )?v1 )):pattern ((lappend$c ?v1 ?v0 )))):named a54 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(! (=> (lnull$a ?v0 )(= (lappend$d ?v1 ?v0 )?v1 )):pattern ((lappend$d ?v1 ?v0 )))):named a55 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (=> (lnull$ ?v0 )(= (lappend$ ?v1 ?v0 )?v1 )):pattern ((lappend$ ?v1 ?v0 )))):named a56 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(! (=> (lnull$d ?v0 )(= (lappend$a ?v0 ?v1 )?v1 )):pattern ((lappend$a ?v0 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(! (=> (lnull$b ?v0 )(= (lappend$b ?v0 ?v1 )?v1 )):pattern ((lappend$b ?v0 ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(! (=> (lnull$c ?v0 )(= (lappend$c ?v0 ?v1 )?v1 )):pattern ((lappend$c ?v0 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(! (=> (lnull$a ?v0 )(= (lappend$d ?v0 ?v1 )?v1 )):pattern ((lappend$d ?v0 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(! (=> (lnull$ ?v0 )(= (lappend$ ?v0 ?v1 )?v1 )):pattern ((lappend$ ?v0 ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (not (lnull$a (lzip$ ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$ ?v1 ))))):named a62 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(= (not (lnull$c (lzip$a ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$a ?v1 ))))):named a63 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(= (not (lnull$b (lzip$b ?v0 ?v1 )))(and (not (lnull$a ?v0 ))(not (lnull$ ?v1 ))))):named a64 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(= (not (lnull$d (lzip$c ?v0 ?v1 )))(and (not (lnull$a ?v0 ))(not (lnull$a ?v1 ))))):named a65 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (not (lnull$e (lzip$d ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$b ?v1 ))))):named a66 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(= (not (lnull$f (lzip$e ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$c ?v1 ))))):named a67 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(= (not (lnull$g (lzip$f ?v0 ?v1 )))(and (not (lnull$b ?v0 ))(not (lnull$ ?v1 ))))):named a68 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(= (not (lnull$h (lzip$g ?v0 ?v1 )))(and (not (lnull$c ?v0 ))(not (lnull$ ?v1 ))))):named a69 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (not (lnull$i (lzip$h ?v0 ?v1 )))(and (not (lnull$ ?v0 ))(not (lnull$d ?v1 ))))):named a70 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (not (lnull$j (lzip$i ?v0 ?v1 )))(and (not (lnull$a ?v0 ))(not (lnull$b ?v1 ))))):named a71 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_llist$ ))(= (lnull$a (lzip$ ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$ ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_llist$ ))(= (lnull$c (lzip$a ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$a ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_llist$ ))(= (lnull$b (lzip$b ?v0 ?v1 ))(or (lnull$a ?v0 )(lnull$ ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_llist$ ))(= (lnull$d (lzip$c ?v0 ?v1 ))(or (lnull$a ?v0 )(lnull$a ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (lnull$e (lzip$d ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$b ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_a_prod_prod_llist$ ))(= (lnull$f (lzip$e ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$c ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_llist$ )(?v1 A_llist$ ))(= (lnull$g (lzip$f ?v0 ?v1 ))(or (lnull$b ?v0 )(lnull$ ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_llist$ )(?v1 A_llist$ ))(= (lnull$h (lzip$g ?v0 ?v1 ))(or (lnull$c ?v0 )(lnull$ ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_prod_a_a_prod_prod_llist$ ))(= (lnull$i (lzip$h ?v0 ?v1 ))(or (lnull$ ?v0 )(lnull$d ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_a_prod_llist$ )(?v1 A_a_prod_a_prod_llist$ ))(= (lnull$j (lzip$i ?v0 ?v1 ))(or (lnull$a ?v0 )(lnull$b ?v1 )))):named a81 ))
(check-sat )
;(get-unsat-core )
