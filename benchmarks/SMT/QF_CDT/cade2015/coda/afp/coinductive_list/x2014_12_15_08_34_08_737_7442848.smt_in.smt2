;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_nat_fun$ 0 )
(declare-sort Nat_a_fun$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort A_a_a_prod_fun$ 0 )
(declare-sort A_a_nat_prod_fun$ 0 )
(declare-sort A_nat_a_prod_fun$ 0 )
(declare-sort A_nat_prod_a_fun$ 0 )
(declare-sort Nat_a_a_prod_fun$ 0 )
(declare-sort A_nat_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_fun$ 0 )
(declare-sort Nat_a_nat_prod_fun$ 0 )
(declare-sort Nat_nat_a_prod_fun$ 0 )
(declare-sort A_a_a_a_prod_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_fun$ 0 )
(declare-sort A_a_a_nat_prod_fun_fun$ 0 )
(declare-sort A_a_nat_a_prod_fun_fun$ 0 )
(declare-sort A_nat_a_a_prod_fun_fun$ 0 )
(declare-sort Nat_a_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_prod_a_nat_prod_fun$ 0 )
(declare-sort A_a_prod_nat_a_prod_fun$ 0 )
(declare-sort A_nat_prod_a_a_prod_fun$ 0 )
(declare-sort Nat_a_prod_a_a_prod_fun$ 0 )
(declare-sort A_nat_a_nat_prod_fun_fun$ 0 )
(declare-sort Nat_a_nat_a_prod_fun_fun$ 0 )
(declare-sort A_nat_nat_prod_a_prod_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_fun$ 0 )
(declare-sort Nat_a_prod_nat_a_prod_fun$ 0 )
(declare-sort A_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_a_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_a_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_nat_a_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_a_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_a_prod_fun$ 0 )
(declare-sort Nat_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_a_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_nat_prod_a_nat_prod_fun_fun$ 0 )
(declare-sort A_nat_nat_prod_prod_a_nat_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_a_nat_prod_prod_fun$ 0 )
(declare-sort Nat_a_nat_prod_a_nat_prod_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_nat_nat_prod_prod_fun$ 0 )
(declare-sort A_a_nat_prod_a_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_nat_prod_prod_fun$ 0 )
(declare-sort A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_fun_a_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_prod_a_nat_prod_fun$ 0 )
(declare-sort A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort Nat_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ 0 )
(declare-sort A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ 0 )
(declare-sort Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ 0 )
(declare-sort Nat_nat_prod_a_prod_nat_nat_prod_a_prod_fun$ 0 )
(declare-sort Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_prod_nat_nat_nat_prod_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_prod_nat_nat_prod_nat_prod_fun$ 0 )
(declare-sort A_nat_a_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_nat_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ 0 )
(declare-sort A_nat_prod_nat_fun_a_nat_prod_a_nat_prod_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_prod_a_a_nat_prod_a_nat_prod_prod_prod_fun$ 0 )
(declare-sort A_nat_a_nat_prod_a_nat_prod_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ 0 )
(declare-sort A_a_nat_prod_a_nat_prod_prod_a_a_nat_prod_a_nat_prod_prod_prod_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_fun_a_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_a_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_fun$ 0 )
(declare-sort A_nat_prod$ 0)
(declare-fun fst$ (A_nat_prod$)A$)
(declare-fun snd$ (A_nat_prod$)Nat$)
(declare-fun pair$ (A$ Nat$ )A_nat_prod$)
(declare-codatatypes ()((A_nat_prod_llist$ (lNil$ )(lCons$ (lhd$ A_nat_prod$ )(ltl$ A_nat_prod_llist$ )))(A_llist$ (lNil$a )(lCons$a (lhd$a A$ )(ltl$a A_llist$ )))(Nat_llist$ (lNil$b )(lCons$b (lhd$b Nat$ )(ltl$b Nat_llist$ )))))
(declare-sort A_a_prod$ 0)
(declare-fun fst$a (A_a_prod$)A$)
(declare-fun snd$a (A_a_prod$)A$)
(declare-fun pair$a (A$ A$ )A_a_prod$)
(declare-codatatypes ()((A_a_prod_llist$ (lNil$c )(lCons$c (lhd$c A_a_prod$ )(ltl$c A_a_prod_llist$ )))))
(declare-sort A_nat_prod_a_nat_prod_prod$ 0)
(declare-fun fst$b (A_nat_prod_a_nat_prod_prod$)A_nat_prod$)
(declare-fun snd$b (A_nat_prod_a_nat_prod_prod$)A_nat_prod$)
(declare-fun pair$b (A_nat_prod$ A_nat_prod$ )A_nat_prod_a_nat_prod_prod$)
(declare-codatatypes ()((A_nat_prod_a_nat_prod_prod_llist$ (lNil$d )(lCons$d (lhd$d A_nat_prod_a_nat_prod_prod$ )(ltl$d A_nat_prod_a_nat_prod_prod_llist$ )))))
(declare-sort Nat_nat_prod$ 0)
(declare-fun fst$c (Nat_nat_prod$)Nat$)
(declare-fun snd$c (Nat_nat_prod$)Nat$)
(declare-fun pair$c (Nat$ Nat$ )Nat_nat_prod$)
(declare-codatatypes ()((Nat_nat_prod_llist$ (lNil$e )(lCons$e (lhd$e Nat_nat_prod$ )(ltl$e Nat_nat_prod_llist$ )))))
(declare-sort Nat_a_prod$ 0)
(declare-fun fst$d (Nat_a_prod$)Nat$)
(declare-fun snd$d (Nat_a_prod$)A$)
(declare-fun pair$d (Nat$ A$ )Nat_a_prod$)
(declare-codatatypes ()((Nat_a_prod_llist$ (lNil$f )(lCons$f (lhd$f Nat_a_prod$ )(ltl$f Nat_a_prod_llist$ )))))
(declare-sort A_nat_nat_prod_prod$ 0)
(declare-fun fst$e (A_nat_nat_prod_prod$)A$)
(declare-fun snd$e (A_nat_nat_prod_prod$)Nat_nat_prod$)
(declare-fun pair$e (A$ Nat_nat_prod$ )A_nat_nat_prod_prod$)
(declare-codatatypes ()((A_nat_nat_prod_prod_llist$ (lNil$g )(lCons$g (lhd$g A_nat_nat_prod_prod$ )(ltl$g A_nat_nat_prod_prod_llist$ )))))
(declare-sort Nat_nat_nat_prod_prod$ 0)
(declare-fun fst$f (Nat_nat_nat_prod_prod$)Nat$)
(declare-fun snd$f (Nat_nat_nat_prod_prod$)Nat_nat_prod$)
(declare-fun pair$f (Nat$ Nat_nat_prod$ )Nat_nat_nat_prod_prod$)
(declare-codatatypes ()((Nat_nat_nat_prod_prod_llist$ (lNil$h )(lCons$h (lhd$h Nat_nat_nat_prod_prod$ )(ltl$h Nat_nat_nat_prod_prod_llist$ )))))
(declare-sort Nat_a_nat_prod_prod$ 0)
(declare-fun fst$g (Nat_a_nat_prod_prod$)Nat$)
(declare-fun snd$g (Nat_a_nat_prod_prod$)A_nat_prod$)
(declare-fun pair$g (Nat$ A_nat_prod$ )Nat_a_nat_prod_prod$)
(declare-codatatypes ()((Nat_a_nat_prod_prod_llist$ (lNil$i )(lCons$i (lhd$i Nat_a_nat_prod_prod$ )(ltl$i Nat_a_nat_prod_prod_llist$ )))))
(declare-sort Nat_nat_prod_nat_prod$ 0)
(declare-fun fst$h (Nat_nat_prod_nat_prod$)Nat_nat_prod$)
(declare-fun snd$h (Nat_nat_prod_nat_prod$)Nat$)
(declare-fun pair$h (Nat_nat_prod$ Nat$ )Nat_nat_prod_nat_prod$)
(declare-codatatypes ()((Nat_nat_prod_nat_prod_llist$ (lNil$j )(lCons$j (lhd$j Nat_nat_prod_nat_prod$ )(ltl$j Nat_nat_prod_nat_prod_llist$ )))))
(declare-sort Nat_nat_prod_a_prod$ 0)
(declare-fun fst$i (Nat_nat_prod_a_prod$)Nat_nat_prod$)
(declare-fun snd$i (Nat_nat_prod_a_prod$)A$)
(declare-fun pair$i (Nat_nat_prod$ A$ )Nat_nat_prod_a_prod$)
(declare-codatatypes ()((Nat_nat_prod_a_prod_llist$ (lNil$k )(lCons$k (lhd$k Nat_nat_prod_a_prod$ )(ltl$k Nat_nat_prod_a_prod_llist$ )))))
(declare-sort A_a_nat_prod_prod$ 0)
(declare-fun fst$j (A_a_nat_prod_prod$)A$)
(declare-fun snd$j (A_a_nat_prod_prod$)A_nat_prod$)
(declare-fun pair$j (A$ A_nat_prod$ )A_a_nat_prod_prod$)
(declare-codatatypes ()((A_a_nat_prod_prod_llist$ (lNil$l )(lCons$l (lhd$l A_a_nat_prod_prod$ )(ltl$l A_a_nat_prod_prod_llist$ )))))
(declare-sort A_a_nat_prod_a_nat_prod_prod_prod$ 0)
(declare-fun fst$k (A_a_nat_prod_a_nat_prod_prod_prod$)A$)
(declare-fun snd$k (A_a_nat_prod_a_nat_prod_prod_prod$)A_nat_prod_a_nat_prod_prod$)
(declare-fun pair$k (A$ A_nat_prod_a_nat_prod_prod$ )A_a_nat_prod_a_nat_prod_prod_prod$)
(declare-fun n$ ()Nat$ )
(declare-fun uu$ ()A_nat_a_nat_prod_fun_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun suc$ ()Nat_nat_fun$ )
(declare-fun uua$ ()A_a_prod_a_a_prod_fun$ )
(declare-fun uub$ ()A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun uuc$ ()A_a_fun$ )
(declare-fun uud$ ()Nat_nat_fun$ )
(declare-fun uue$ ()A_nat_prod_a_nat_prod_fun$ )
(declare-fun uuf$ (A_a_fun$ )Nat_nat_fun_a_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uug$ (A_nat_prod_a_nat_prod_fun$ )A_nat_prod_a_nat_prod_fun_a_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_fun$ )
(declare-fun uuh$ (Nat_a_fun$ )Nat_nat_fun_nat_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uui$ (A_nat_fun$ Nat_nat_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uuj$ (A_a_fun$ A_a_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uuk$ (Nat_nat_fun$ A_a_fun$ )Nat_a_nat_a_prod_fun_fun$ )
(declare-fun uul$ (Nat_nat_fun$ Nat_nat_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uum$ (A_nat_prod_a_fun$ )A_nat_prod_nat_fun_a_nat_prod_a_nat_prod_a_nat_prod_fun_fun_fun$ )
(declare-fun uun$ (A_a_nat_prod_fun$ Nat_a_nat_prod_fun$ )A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uuo$ (Nat_a_nat_prod_fun$ Nat_a_nat_prod_fun$ )Nat_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uup$ (Nat_nat_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun uuq$ (Nat_nat_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uur$ (A_nat_prod_a_nat_prod_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uus$ (A_a_fun$ )Nat_a_nat_a_prod_fun_fun$ )
(declare-fun uut$ (A_a_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uuu$ (Nat_a_fun$ )Nat_nat_nat_a_prod_fun_fun$ )
(declare-fun uuv$ (Nat_a_fun$ )A_nat_a_a_prod_fun_fun$ )
(declare-fun uuw$ (A_nat_fun$ )A_a_a_nat_prod_fun_fun$ )
(declare-fun uux$ (A_nat_fun$ )Nat_a_nat_nat_prod_fun_fun$ )
(declare-fun uuy$ (Nat_nat_prod_nat_fun$ )A_nat_nat_prod_a_nat_prod_fun_fun$ )
(declare-fun uuz$ (Nat_nat_fun$ Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ )
(declare-fun uva$ (Nat_nat_fun$ A_nat_prod_a_nat_prod_fun$ )Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ )
(declare-fun uvb$ (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_fun$ )Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ )
(declare-fun uvc$ (Nat_nat_prod_nat_nat_prod_fun$ A_a_fun$ )Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ )
(declare-fun uvd$ (A_a_fun$ Nat_nat_prod_nat_nat_prod_fun$ )A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ )
(declare-fun uve$ (A_a_fun$ A_nat_prod_a_nat_prod_fun$ )A_a_nat_prod_a_a_nat_prod_prod_fun_fun$ )
(declare-fun uvf$ (A_a_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun uvg$ (Nat_a_fun$ )Nat_nat_a_nat_prod_fun_fun$ )
(declare-fun uvh$ (A_nat_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvi$ (Nat_nat_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvj$ (A_nat_prod_a_nat_prod_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uvk$ (A_a_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uvl$ (Nat_nat_fun$ )Nat_a_nat_a_prod_fun_fun$ )
(declare-fun uvm$ (Nat_a_fun$ )Nat_a_a_a_prod_fun_fun$ )
(declare-fun uvn$ (A_nat_fun$ )A_a_nat_a_prod_fun_fun$ )
(declare-fun uvo$ (A_a_fun$ )A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ )
(declare-fun uvp$ (A_nat_a_nat_prod_fun_fun$ )A_nat_a_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uvq$ (Nat_nat_nat_nat_prod_fun_fun$ Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvr$ (A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_a_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_fun$ )
(declare-fun uvs$ (Nat_nat_a_nat_prod_fun_fun$ )A_nat_nat_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uvt$ (Nat_nat_nat_nat_prod_fun_fun$ A_nat_nat_nat_prod_fun_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvu$ (A_nat_nat_nat_prod_fun_fun$ Nat_nat_a_nat_prod_fun_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvv$ (A_nat_nat_nat_prod_fun_fun$ A_nat_a_nat_prod_fun_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvw$ (A_a_a_a_prod_fun_fun$ A_a_a_a_prod_fun_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uvx$ (A_nat_prod_a_nat_prod_a_nat_prod_fun_fun$ )A_nat_a_nat_prod_a_nat_prod_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ )
(declare-fun uvy$ (A_nat_prod_a_nat_prod_nat_nat_prod_fun_fun$ A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uvz$ ()Nat_a_nat_a_prod_fun_fun$ )
(declare-fun uwa$ ()A_a_nat_prod_a_nat_prod_prod_a_a_nat_prod_a_nat_prod_prod_prod_fun_fun$ )
(declare-fun uwb$ ()A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ )
(declare-fun uwc$ ()A_a_nat_prod_a_a_nat_prod_prod_fun_fun$ )
(declare-fun uwd$ ()A_a_a_a_prod_fun_fun$ )
(declare-fun uwe$ ()A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uwf$ ()Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uwg$ ()A_nat_a_nat_prod_fun_fun$ )
(declare-fun uwh$ (A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ )A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ )
(declare-fun uwi$ (A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ )A_a_nat_prod_a_a_nat_prod_prod_fun_fun$ )
(declare-fun uwj$ (A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ )A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uwk$ (A_nat_prod_nat_nat_prod_fun$ )A_nat_nat_nat_prod_fun_fun$ )
(declare-fun uwl$ (A_a_prod_a_a_prod_fun$ )A_a_a_a_prod_fun_fun$ )
(declare-fun uwm$ (A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun uwn$ (Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun uwo$ (A_nat_prod_a_nat_prod_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun lmap$ (A_nat_prod_a_nat_prod_fun$ A_nat_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lzip$ (A_llist$ Nat_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$a (A_a_prod_a_a_prod_fun$ A_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$b (A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ A_nat_prod_a_nat_prod_prod_llist$ )A_nat_prod_a_nat_prod_prod_llist$ )
(declare-fun lmap$c (A_a_fun$ A_llist$ )A_llist$ )
(declare-fun lmap$d (Nat_nat_fun$ Nat_llist$ )Nat_llist$ )
(declare-fun lmap$e (Nat_a_fun$ Nat_llist$ )A_llist$ )
(declare-fun lmap$f (Nat_nat_prod_a_nat_prod_fun$ Nat_nat_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$g (A_nat_fun$ A_llist$ )Nat_llist$ )
(declare-fun lmap$h (A_nat_prod_nat_nat_prod_fun$ A_nat_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun lmap$i (Nat_a_prod_nat_a_prod_fun$ Nat_a_prod_llist$ )Nat_a_prod_llist$ )
(declare-fun lmap$j (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun lmap$k (A_nat_prod_a_fun$ A_nat_prod_llist$ )A_llist$ )
(declare-fun lmap$l (A_nat_prod_nat_fun$ A_nat_prod_llist$ )Nat_llist$ )
(declare-fun lmap$m (A_nat_prod_a_nat_prod_prod_a_nat_prod_fun$ A_nat_prod_a_nat_prod_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$n (A_a_nat_prod_fun$ A_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$o (Nat_a_nat_prod_fun$ Nat_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$p (A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ A_nat_prod_llist$ )A_nat_prod_a_nat_prod_prod_llist$ )
(declare-fun lmap$q (Nat_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ Nat_nat_prod_llist$ )A_nat_prod_a_nat_prod_prod_llist$ )
(declare-fun lmap$r (Nat_nat_prod_nat_a_prod_fun$ Nat_nat_prod_llist$ )Nat_a_prod_llist$ )
(declare-fun lmap$s (A_nat_prod_a_a_prod_fun$ A_nat_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$t (A_a_prod_a_nat_prod_fun$ A_a_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$u (Nat_a_prod_nat_nat_prod_fun$ Nat_a_prod_llist$ )Nat_nat_prod_llist$ )
(declare-fun lmap$v (Nat_nat_prod_nat_fun$ Nat_nat_prod_llist$ )Nat_llist$ )
(declare-fun lmap$w (A_nat_nat_prod_prod_a_nat_prod_fun$ A_nat_nat_prod_prod_llist$ )A_nat_prod_llist$ )
(declare-fun lmap$x (Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ Nat_a_nat_prod_prod_llist$ )Nat_a_nat_prod_prod_llist$ )
(declare-fun lmap$y (A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ A_nat_nat_prod_prod_llist$ )A_nat_nat_prod_prod_llist$ )
(declare-fun lmap$z (A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ A_a_nat_prod_prod_llist$ )A_a_nat_prod_prod_llist$ )
(declare-fun lzip$a (A_nat_prod_llist$ A_nat_prod_llist$ )A_nat_prod_a_nat_prod_prod_llist$ )
(declare-fun lzip$b (Nat_llist$ Nat_llist$ )Nat_nat_prod_llist$ )
(declare-fun lzip$c (A_llist$ A_llist$ )A_a_prod_llist$ )
(declare-fun lzip$d (Nat_llist$ A_llist$ )Nat_a_prod_llist$ )
(declare-fun lzip$e (A_llist$ Nat_nat_prod_llist$ )A_nat_nat_prod_prod_llist$ )
(declare-fun lzip$f (Nat_llist$ Nat_nat_prod_llist$ )Nat_nat_nat_prod_prod_llist$ )
(declare-fun lzip$g (Nat_llist$ A_nat_prod_llist$ )Nat_a_nat_prod_prod_llist$ )
(declare-fun lzip$h (Nat_nat_prod_llist$ Nat_llist$ )Nat_nat_prod_nat_prod_llist$ )
(declare-fun lzip$i (Nat_nat_prod_llist$ A_llist$ )Nat_nat_prod_a_prod_llist$ )
(declare-fun lzip$j (A_llist$ A_nat_prod_llist$ )A_a_nat_prod_prod_llist$ )
(declare-fun lmap$aa (Nat_a_prod_a_a_prod_fun$ Nat_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun lmap$ab (A_a_prod_nat_a_prod_fun$ A_a_prod_llist$ )Nat_a_prod_llist$ )
(declare-fun fun_app$ (Nat_a_nat_prod_fun$ Nat$ )A_nat_prod$ )
(declare-fun fun_app$a (A_nat_a_nat_prod_fun_fun$ A$ )Nat_a_nat_prod_fun$ )
(declare-fun fun_app$b (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$c (A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ A_nat_prod$ )A_nat_prod_a_nat_prod_prod$ )
(declare-fun fun_app$d (A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ A_nat_prod$ )A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun fun_app$e (Nat_nat_nat_prod_fun$ Nat$ )Nat_nat_prod$ )
(declare-fun fun_app$f (Nat_nat_nat_nat_prod_fun_fun$ Nat$ )Nat_nat_nat_prod_fun$ )
(declare-fun fun_app$g (A_nat_a_prod_fun$ A$ )Nat_a_prod$ )
(declare-fun fun_app$h (Nat_a_nat_a_prod_fun_fun$ Nat$ )A_nat_a_prod_fun$ )
(declare-fun fun_app$i (A_nat_prod_a_nat_prod_prod_a_a_nat_prod_a_nat_prod_prod_prod_fun$ A_nat_prod_a_nat_prod_prod$ )A_a_nat_prod_a_nat_prod_prod_prod$ )
(declare-fun fun_app$j (A_a_nat_prod_a_nat_prod_prod_a_a_nat_prod_a_nat_prod_prod_prod_fun_fun$ A$ )A_nat_prod_a_nat_prod_prod_a_a_nat_prod_a_nat_prod_prod_prod_fun$ )
(declare-fun fun_app$k (Nat_nat_prod_a_nat_nat_prod_prod_fun$ Nat_nat_prod$ )A_nat_nat_prod_prod$ )
(declare-fun fun_app$l (A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ A$ )Nat_nat_prod_a_nat_nat_prod_prod_fun$ )
(declare-fun fun_app$m (A_nat_prod_a_a_nat_prod_prod_fun$ A_nat_prod$ )A_a_nat_prod_prod$ )
(declare-fun fun_app$n (A_a_nat_prod_a_a_nat_prod_prod_fun_fun$ A$ )A_nat_prod_a_a_nat_prod_prod_fun$ )
(declare-fun fun_app$o (A_a_a_prod_fun$ A$ )A_a_prod$ )
(declare-fun fun_app$p (A_a_a_a_prod_fun_fun$ A$ )A_a_a_prod_fun$ )
(declare-fun fun_app$q (A_nat_prod_a_nat_prod_fun$ A_nat_prod$ )A_nat_prod$ )
(declare-fun fun_app$r (Nat_nat_a_nat_prod_fun_fun$ Nat$ )Nat_a_nat_prod_fun$ )
(declare-fun fun_app$s (Nat_a_fun$ Nat$ )A$ )
(declare-fun fun_app$t (Nat_a_a_a_prod_fun_fun$ Nat$ )A_a_a_prod_fun$ )
(declare-fun fun_app$u (A_nat_nat_nat_prod_fun_fun$ A$ )Nat_nat_nat_prod_fun$ )
(declare-fun fun_app$v (A_nat_fun$ A$ )Nat$ )
(declare-fun fun_app$w (A_a_nat_a_prod_fun_fun$ A$ )A_nat_a_prod_fun$ )
(declare-fun fun_app$x (A_a_fun$ A$ )A$ )
(declare-fun fun_app$y (Nat_nat_prod_a_nat_prod_fun$ Nat_nat_prod$ )A_nat_prod$ )
(declare-fun fun_app$z (A_nat_nat_prod_a_nat_prod_fun_fun$ A$ )Nat_nat_prod_a_nat_prod_fun$ )
(declare-fun iterates$ (Nat_nat_fun$ Nat$ )Nat_llist$ )
(declare-fun case_prod$ (A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun fun_app$aa (Nat_nat_prod_nat_fun$ Nat_nat_prod$ )Nat$ )
(declare-fun fun_app$ab (Nat_nat_a_prod_fun$ Nat$ )Nat_a_prod$ )
(declare-fun fun_app$ac (Nat_nat_nat_a_prod_fun_fun$ Nat$ )Nat_nat_a_prod_fun$ )
(declare-fun fun_app$ad (Nat_a_a_prod_fun$ Nat$ )A_a_prod$ )
(declare-fun fun_app$ae (A_nat_a_a_prod_fun_fun$ A$ )Nat_a_a_prod_fun$ )
(declare-fun fun_app$af (A_nat_nat_prod_fun$ A$ )Nat_nat_prod$ )
(declare-fun fun_app$ag (Nat_a_nat_nat_prod_fun_fun$ Nat$ )A_nat_nat_prod_fun$ )
(declare-fun fun_app$ah (A_a_nat_prod_fun$ A$ )A_nat_prod$ )
(declare-fun fun_app$ai (A_a_a_nat_prod_fun_fun$ A$ )A_a_nat_prod_fun$ )
(declare-fun fun_app$aj (A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ A_nat_prod_a_nat_prod_prod$ )A_nat_prod_a_nat_prod_prod$ )
(declare-fun fun_app$ak (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod$ )
(declare-fun fun_app$al (A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ A_nat_nat_prod_prod$ )A_nat_nat_prod_prod$ )
(declare-fun fun_app$am (A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ A_a_nat_prod_prod$ )A_a_nat_prod_prod$ )
(declare-fun fun_app$an (Nat_a_nat_prod_a_nat_prod_prod_fun$ Nat$ )A_nat_prod_a_nat_prod_prod$ )
(declare-fun fun_app$ao (A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ A$ )Nat_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun fun_app$ap (A_nat_prod_nat_nat_prod_fun$ A_nat_prod$ )Nat_nat_prod$ )
(declare-fun fun_app$aq (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod$ )
(declare-fun fun_app$ar (Nat_nat_nat_prod_nat_prod_fun$ Nat$ )Nat_nat_prod_nat_prod$ )
(declare-fun fun_app$as (Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ Nat_nat_prod$ )Nat_nat_nat_prod_nat_prod_fun$ )
(declare-fun fun_app$at (A_nat_nat_prod_a_prod_fun$ A$ )Nat_nat_prod_a_prod$ )
(declare-fun fun_app$au (Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ Nat_nat_prod$ )A_nat_nat_prod_a_prod_fun$ )
(declare-fun fun_app$av (A_nat_prod_a_nat_prod_fun_a_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_fun$ A_nat_prod_a_nat_prod_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun fun_app$aw (A_nat_prod_a_nat_prod_a_nat_prod_fun_fun$ A_nat_prod$ )A_nat_prod_a_nat_prod_fun$ )
(declare-fun fun_app$ax (A_nat_prod_nat_fun_a_nat_prod_a_nat_prod_a_nat_prod_fun_fun_fun$ A_nat_prod_nat_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_fun_fun$ )
(declare-fun fun_app$ay (A_nat_prod_a_fun$ A_nat_prod$ )A$ )
(declare-fun fun_app$az (A_nat_prod_nat_fun$ A_nat_prod$ )Nat$ )
(declare-fun fun_app$ba (Nat_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ Nat$ )Nat_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun fun_app$bb (Nat_nat_prod_nat_nat_nat_prod_prod_fun$ Nat_nat_prod$ )Nat_nat_nat_prod_prod$ )
(declare-fun fun_app$bc (Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ Nat$ )Nat_nat_prod_nat_nat_nat_prod_prod_fun$ )
(declare-fun fun_app$bd (A_nat_prod_nat_a_nat_prod_prod_fun$ A_nat_prod$ )Nat_a_nat_prod_prod$ )
(declare-fun fun_app$be (Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ Nat$ )A_nat_prod_nat_a_nat_prod_prod_fun$ )
(declare-fun fun_app$bf (Nat_nat_fun_nat_nat_a_nat_prod_fun_fun_fun$ Nat_nat_fun$ )Nat_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bg (Nat_nat_fun_a_nat_a_nat_prod_fun_fun_fun$ Nat_nat_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bh (A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_a_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun_fun$ A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )
(declare-fun fun_app$bi (A_nat_a_nat_prod_a_nat_prod_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bj (A_nat_prod_a_nat_prod_prod_a_nat_prod_fun$ A_nat_prod_a_nat_prod_prod$ )A_nat_prod$ )
(declare-fun fun_app$bk (A_nat_nat_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ A_nat_nat_nat_prod_fun_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bl (A_nat_a_nat_prod_fun_fun_a_nat_a_nat_prod_fun_fun_fun$ A_nat_a_nat_prod_fun_fun$ )A_nat_a_nat_prod_fun_fun$ )
(declare-fun fun_app$bm (Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ Nat_a_nat_prod_prod$ )Nat_a_nat_prod_prod$ )
(declare-fun fun_app$bn (Nat_a_prod_nat_a_prod_fun$ Nat_a_prod$ )Nat_a_prod$ )
(declare-fun iterates$a (A_a_fun$ A$ )A_llist$ )
(declare-fun iterates$b (A_nat_prod_a_nat_prod_fun$ A_nat_prod$ )A_nat_prod_llist$ )
(declare-fun iterates$c (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod_llist$ )
(declare-fun iterates$d (Nat_a_prod_nat_a_prod_fun$ Nat_a_prod$ )Nat_a_prod_llist$ )
(declare-fun iterates$e (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod_llist$ )
(declare-fun iterates$f (Nat_nat_nat_prod_prod_nat_nat_nat_prod_prod_fun$ Nat_nat_nat_prod_prod$ )Nat_nat_nat_prod_prod_llist$ )
(declare-fun iterates$g (Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ Nat_a_nat_prod_prod$ )Nat_a_nat_prod_prod_llist$ )
(declare-fun iterates$h (Nat_nat_prod_nat_prod_nat_nat_prod_nat_prod_fun$ Nat_nat_prod_nat_prod$ )Nat_nat_prod_nat_prod_llist$ )
(declare-fun iterates$i (Nat_nat_prod_a_prod_nat_nat_prod_a_prod_fun$ Nat_nat_prod_a_prod$ )Nat_nat_prod_a_prod_llist$ )
(declare-fun iterates$j (A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ A_nat_nat_prod_prod$ )A_nat_nat_prod_prod_llist$ )
(declare-fun iterates$k (A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ A_a_nat_prod_prod$ )A_a_nat_prod_prod_llist$ )
(declare-fun iterates$l (A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ A_nat_prod_a_nat_prod_prod$ )A_nat_prod_a_nat_prod_prod_llist$ )
(declare-fun case_prod$a (A_nat_prod_a_nat_prod_nat_nat_prod_fun_fun$ A_nat_prod_a_nat_prod_prod$ )Nat_nat_prod$ )
(declare-fun case_prod$b (A_nat_prod_a_nat_prod_a_nat_prod_fun_fun$ )A_nat_prod_a_nat_prod_prod_a_nat_prod_fun$ )
(declare-fun case_prod$c (Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$d (Nat_nat_a_nat_prod_fun_fun$ )Nat_nat_prod_a_nat_prod_fun$ )
(declare-fun case_prod$e (A_nat_nat_nat_prod_fun_fun$ )A_nat_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$f (A_nat_a_nat_prod_fun_fun$ )A_nat_prod_a_nat_prod_fun$ )
(declare-fun case_prod$g (A_a_a_a_prod_fun_fun$ )A_a_prod_a_a_prod_fun$ )
(declare-fun case_prod$h (Nat_a_nat_a_prod_fun_fun$ )Nat_a_prod_nat_a_prod_fun$ )
(declare-fun case_prod$i (A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun case_prod$j (Nat_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )Nat_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ )
(declare-fun case_prod$k (Nat_nat_nat_a_prod_fun_fun$ )Nat_nat_prod_nat_a_prod_fun$ )
(declare-fun case_prod$l (A_nat_a_a_prod_fun_fun$ )A_nat_prod_a_a_prod_fun$ )
(declare-fun case_prod$m (A_a_a_nat_prod_fun_fun$ )A_a_prod_a_nat_prod_fun$ )
(declare-fun case_prod$n (Nat_a_nat_nat_prod_fun_fun$ )Nat_a_prod_nat_nat_prod_fun$ )
(declare-fun case_prod$o (A_nat_nat_prod_a_nat_prod_fun_fun$ )A_nat_nat_prod_prod_a_nat_prod_fun$ )
(declare-fun case_prod$p (Nat_nat_nat_prod_nat_nat_nat_prod_prod_fun_fun$ )Nat_nat_nat_prod_prod_nat_nat_nat_prod_prod_fun$ )
(declare-fun case_prod$q (Nat_a_nat_prod_nat_a_nat_prod_prod_fun_fun$ )Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ )
(declare-fun case_prod$r (Nat_nat_prod_nat_nat_nat_prod_nat_prod_fun_fun$ )Nat_nat_prod_nat_prod_nat_nat_prod_nat_prod_fun$ )
(declare-fun case_prod$s (Nat_nat_prod_a_nat_nat_prod_a_prod_fun_fun$ )Nat_nat_prod_a_prod_nat_nat_prod_a_prod_fun$ )
(declare-fun case_prod$t (A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ )A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ )
(declare-fun case_prod$u (A_a_nat_prod_a_a_nat_prod_prod_fun_fun$ )A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ )
(declare-fun case_prod$v (Nat_a_a_a_prod_fun_fun$ )Nat_a_prod_a_a_prod_fun$ )
(declare-fun case_prod$w (A_a_nat_a_prod_fun_fun$ )A_a_prod_nat_a_prod_fun$ )
(declare-fun case_prod$x (A_a_nat_prod_a_nat_prod_prod_a_a_nat_prod_a_nat_prod_prod_prod_fun_fun$ A_a_nat_prod_a_nat_prod_prod_prod$ )A_a_nat_prod_a_nat_prod_prod_prod$ )
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uu$ ?v0 )?v1 )(pair$ ?v0 (fun_app$b suc$ ?v1 ))):pattern ((fun_app$ (fun_app$a uu$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_nat_prod$ ))(! (= (fun_app$c (fun_app$d uwe$ ?v0 )?v1 )(pair$b ?v0 ?v1 )):pattern ((fun_app$c (fun_app$d uwe$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$e (fun_app$f uwf$ ?v0 )?v1 )(pair$c ?v0 ?v1 )):pattern ((fun_app$e (fun_app$f uwf$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ ))(! (= (fun_app$g (fun_app$h uvz$ ?v0 )?v1 )(pair$d ?v0 ?v1 )):pattern ((fun_app$g (fun_app$h uvz$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_prod_a_nat_prod_prod$ ))(! (= (fun_app$i (fun_app$j uwa$ ?v0 )?v1 )(pair$k ?v0 ?v1 )):pattern ((fun_app$i (fun_app$j uwa$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat_nat_prod$ ))(! (= (fun_app$k (fun_app$l uwb$ ?v0 )?v1 )(pair$e ?v0 ?v1 )):pattern ((fun_app$k (fun_app$l uwb$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_prod$ ))(! (= (fun_app$m (fun_app$n uwc$ ?v0 )?v1 )(pair$j ?v0 ?v1 )):pattern ((fun_app$m (fun_app$n uwc$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ ))(! (= (fun_app$ (fun_app$a uwg$ ?v0 )?v1 )(pair$ ?v0 ?v1 )):pattern ((fun_app$ (fun_app$a uwg$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$o (fun_app$p uwd$ ?v0 )?v1 )(pair$a ?v0 ?v1 )):pattern ((fun_app$o (fun_app$p uwd$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod$ )(?v2 A_nat_prod$ ))(! (= (fun_app$c (fun_app$d (uvj$ ?v0 )?v1 )?v2 )(pair$b (fun_app$q ?v0 ?v1 )?v2 )):pattern ((fun_app$c (fun_app$d (uvj$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$e (fun_app$f (uvi$ ?v0 )?v1 )?v2 )(pair$c (fun_app$b ?v0 ?v1 )?v2 )):pattern ((fun_app$e (fun_app$f (uvi$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 A$ ))(! (= (fun_app$g (fun_app$h (uvl$ ?v0 )?v1 )?v2 )(pair$d (fun_app$b ?v0 ?v1 )?v2 )):pattern ((fun_app$g (fun_app$h (uvl$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$ (fun_app$r (uvg$ ?v0 )?v1 )?v2 )(pair$ (fun_app$s ?v0 ?v1 )?v2 )):pattern ((fun_app$ (fun_app$r (uvg$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat$ )(?v2 A$ ))(! (= (fun_app$o (fun_app$t (uvm$ ?v0 )?v1 )?v2 )(pair$a (fun_app$s ?v0 ?v1 )?v2 )):pattern ((fun_app$o (fun_app$t (uvm$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$e (fun_app$u (uvh$ ?v0 )?v1 )?v2 )(pair$c (fun_app$v ?v0 ?v1 )?v2 )):pattern ((fun_app$e (fun_app$u (uvh$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$g (fun_app$w (uvn$ ?v0 )?v1 )?v2 )(pair$d (fun_app$v ?v0 ?v1 )?v2 )):pattern ((fun_app$g (fun_app$w (uvn$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 Nat_nat_prod$ ))(! (= (fun_app$k (fun_app$l (uvo$ ?v0 )?v1 )?v2 )(pair$e (fun_app$x ?v0 ?v1 )?v2 )):pattern ((fun_app$k (fun_app$l (uvo$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$ (fun_app$a (uvf$ ?v0 )?v1 )?v2 )(pair$ (fun_app$x ?v0 ?v1 )?v2 )):pattern ((fun_app$ (fun_app$a (uvf$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$o (fun_app$p (uvk$ ?v0 )?v1 )?v2 )(pair$a (fun_app$x ?v0 ?v1 )?v2 )):pattern ((fun_app$o (fun_app$p (uvk$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 A$ )(?v2 Nat_nat_prod$ ))(! (= (fun_app$y (fun_app$z (uuy$ ?v0 )?v1 )?v2 )(pair$ ?v1 (fun_app$aa ?v0 ?v2 ))):pattern ((fun_app$y (fun_app$z (uuy$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod$ )(?v2 A_nat_prod$ ))(! (= (fun_app$c (fun_app$d (uur$ ?v0 )?v1 )?v2 )(pair$b ?v1 (fun_app$q ?v0 ?v2 ))):pattern ((fun_app$c (fun_app$d (uur$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$e (fun_app$f (uuq$ ?v0 )?v1 )?v2 )(pair$c ?v1 (fun_app$b ?v0 ?v2 ))):pattern ((fun_app$e (fun_app$f (uuq$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$ (fun_app$a (uup$ ?v0 )?v1 )?v2 )(pair$ ?v1 (fun_app$b ?v0 ?v2 ))):pattern ((fun_app$ (fun_app$a (uup$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$ab (fun_app$ac (uuu$ ?v0 )?v1 )?v2 )(pair$d ?v1 (fun_app$s ?v0 ?v2 ))):pattern ((fun_app$ab (fun_app$ac (uuu$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$ad (fun_app$ae (uuv$ ?v0 )?v1 )?v2 )(pair$a ?v1 (fun_app$s ?v0 ?v2 ))):pattern ((fun_app$ad (fun_app$ae (uuv$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 Nat$ )(?v2 A$ ))(! (= (fun_app$af (fun_app$ag (uux$ ?v0 )?v1 )?v2 )(pair$c ?v1 (fun_app$v ?v0 ?v2 ))):pattern ((fun_app$af (fun_app$ag (uux$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$ah (fun_app$ai (uuw$ ?v0 )?v1 )?v2 )(pair$ ?v1 (fun_app$v ?v0 ?v2 ))):pattern ((fun_app$ah (fun_app$ai (uuw$ ?v0 )?v1 )?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Nat$ )(?v2 A$ ))(! (= (fun_app$g (fun_app$h (uus$ ?v0 )?v1 )?v2 )(pair$d ?v1 (fun_app$x ?v0 ?v2 ))):pattern ((fun_app$g (fun_app$h (uus$ ?v0 )?v1 )?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$o (fun_app$p (uut$ ?v0 )?v1 )?v2 )(pair$a ?v1 (fun_app$x ?v0 ?v2 ))):pattern ((fun_app$o (fun_app$p (uut$ ?v0 )?v1 )?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ )(?v1 A_nat_prod$ )(?v2 A_nat_prod$ ))(! (= (fun_app$c (fun_app$d (uwm$ ?v0 )?v1 )?v2 )(fun_app$aj ?v0 (pair$b ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$d (uwm$ ?v0 )?v1 )?v2 )))):named a29 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$e (fun_app$f (uwn$ ?v0 )?v1 )?v2 )(fun_app$ak ?v0 (pair$c ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$f (uwn$ ?v0 )?v1 )?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ )(?v1 A$ )(?v2 Nat_nat_prod$ ))(! (= (fun_app$k (fun_app$l (uwh$ ?v0 )?v1 )?v2 )(fun_app$al ?v0 (pair$e ?v1 ?v2 ))):pattern ((fun_app$k (fun_app$l (uwh$ ?v0 )?v1 )?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ )(?v1 A$ )(?v2 A_nat_prod$ ))(! (= (fun_app$m (fun_app$n (uwi$ ?v0 )?v1 )?v2 )(fun_app$am ?v0 (pair$j ?v1 ?v2 ))):pattern ((fun_app$m (fun_app$n (uwi$ ?v0 )?v1 )?v2 )))):named a32 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$an (fun_app$ao (uwj$ ?v0 )?v1 )?v2 )(fun_app$c ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$an (fun_app$ao (uwj$ ?v0 )?v1 )?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_nat_prod_nat_nat_prod_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$e (fun_app$u (uwk$ ?v0 )?v1 )?v2 )(fun_app$ap ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$u (uwk$ ?v0 )?v1 )?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$ (fun_app$a (uwo$ ?v0 )?v1 )?v2 )(fun_app$q ?v0 (pair$ ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (uwo$ ?v0 )?v1 )?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$o (fun_app$p (uwl$ ?v0 )?v1 )?v2 )(fun_app$aq ?v0 (pair$a ?v1 ?v2 ))):pattern ((fun_app$o (fun_app$p (uwl$ ?v0 )?v1 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_prod$ )(?v3 Nat$ ))(! (= (fun_app$ar (fun_app$as (uvb$ ?v0 ?v1 )?v2 )?v3 )(pair$h (fun_app$ak ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$ar (fun_app$as (uvb$ ?v0 ?v1 )?v2 )?v3 )))):named a37 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 A_a_fun$ )(?v2 Nat_nat_prod$ )(?v3 A$ ))(! (= (fun_app$at (fun_app$au (uvc$ ?v0 ?v1 )?v2 )?v3 )(pair$i (fun_app$ak ?v0 ?v2 )(fun_app$x ?v1 ?v3 ))):pattern ((fun_app$at (fun_app$au (uvc$ ?v0 ?v1 )?v2 )?v3 )))):named a38 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_a_nat_prod_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$c (fun_app$d (fun_app$av (uug$ ?v0 )?v1 )?v2 )?v3 )(pair$b (fun_app$q ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$c (fun_app$d (fun_app$av (uug$ ?v0 )?v1 )?v2 )?v3 )))):named a39 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_nat_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$q (fun_app$aw (fun_app$ax (uum$ ?v0 )?v1 )?v2 )?v3 )(pair$ (fun_app$ay ?v0 ?v2 )(fun_app$az ?v1 ?v3 ))):pattern ((fun_app$q (fun_app$aw (fun_app$ax (uum$ ?v0 )?v1 )?v2 )?v3 )))):named a40 ))
(assert (! (forall ((?v0 Nat_a_nat_prod_fun$ )(?v1 Nat_a_nat_prod_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$an (fun_app$ba (uuo$ ?v0 ?v1 )?v2 )?v3 )(pair$b (fun_app$ ?v0 ?v2 )(fun_app$ ?v1 ?v3 ))):pattern ((fun_app$an (fun_app$ba (uuo$ ?v0 ?v1 )?v2 )?v3 )))):named a41 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ )(?v2 Nat$ )(?v3 Nat_nat_prod$ ))(! (= (fun_app$bb (fun_app$bc (uuz$ ?v0 ?v1 )?v2 )?v3 )(pair$f (fun_app$b ?v0 ?v2 )(fun_app$ak ?v1 ?v3 ))):pattern ((fun_app$bb (fun_app$bc (uuz$ ?v0 ?v1 )?v2 )?v3 )))):named a42 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A_nat_prod_a_nat_prod_fun$ )(?v2 Nat$ )(?v3 A_nat_prod$ ))(! (= (fun_app$bd (fun_app$be (uva$ ?v0 ?v1 )?v2 )?v3 )(pair$g (fun_app$b ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$bd (fun_app$be (uva$ ?v0 ?v1 )?v2 )?v3 )))):named a43 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$e (fun_app$f (uul$ ?v0 ?v1 )?v2 )?v3 )(pair$c (fun_app$b ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$f (uul$ ?v0 ?v1 )?v2 )?v3 )))):named a44 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 A_a_fun$ )(?v2 Nat$ )(?v3 A$ ))(! (= (fun_app$g (fun_app$h (uuk$ ?v0 ?v1 )?v2 )?v3 )(pair$d (fun_app$b ?v0 ?v2 )(fun_app$x ?v1 ?v3 ))):pattern ((fun_app$g (fun_app$h (uuk$ ?v0 ?v1 )?v2 )?v3 )))):named a45 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$ (fun_app$r (fun_app$bf (uuh$ ?v0 )?v1 )?v2 )?v3 )(pair$ (fun_app$s ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$r (fun_app$bf (uuh$ ?v0 )?v1 )?v2 )?v3 )))):named a46 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 Nat_a_nat_prod_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$an (fun_app$ao (uun$ ?v0 ?v1 )?v2 )?v3 )(pair$b (fun_app$ah ?v0 ?v2 )(fun_app$ ?v1 ?v3 ))):pattern ((fun_app$an (fun_app$ao (uun$ ?v0 ?v1 )?v2 )?v3 )))):named a47 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 Nat_nat_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$e (fun_app$u (uui$ ?v0 ?v1 )?v2 )?v3 )(pair$c (fun_app$v ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$e (fun_app$u (uui$ ?v0 ?v1 )?v2 )?v3 )))):named a48 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ )(?v2 A$ )(?v3 Nat_nat_prod$ ))(! (= (fun_app$k (fun_app$l (uvd$ ?v0 ?v1 )?v2 )?v3 )(pair$e (fun_app$x ?v0 ?v2 )(fun_app$ak ?v1 ?v3 ))):pattern ((fun_app$k (fun_app$l (uvd$ ?v0 ?v1 )?v2 )?v3 )))):named a49 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_nat_prod_a_nat_prod_fun$ )(?v2 A$ )(?v3 A_nat_prod$ ))(! (= (fun_app$m (fun_app$n (uve$ ?v0 ?v1 )?v2 )?v3 )(pair$j (fun_app$x ?v0 ?v2 )(fun_app$q ?v1 ?v3 ))):pattern ((fun_app$m (fun_app$n (uve$ ?v0 ?v1 )?v2 )?v3 )))):named a50 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 Nat_nat_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$ (fun_app$a (fun_app$bg (uuf$ ?v0 )?v1 )?v2 )?v3 )(pair$ (fun_app$x ?v0 ?v2 )(fun_app$b ?v1 ?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$bg (uuf$ ?v0 )?v1 )?v2 )?v3 )))):named a51 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$o (fun_app$p (uuj$ ?v0 ?v1 )?v2 )?v3 )(pair$a (fun_app$x ?v0 ?v2 )(fun_app$x ?v1 ?v3 ))):pattern ((fun_app$o (fun_app$p (uuj$ ?v0 ?v1 )?v2 )?v3 )))):named a52 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v1 A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(! (= (fun_app$c (fun_app$d (fun_app$bh (uvr$ ?v0 )?v1 )?v2 )?v3 )(fun_app$aj (case_prod$ ?v0 )(fun_app$c (fun_app$d ?v1 ?v2 )?v3 ))):pattern ((fun_app$c (fun_app$d (fun_app$bh (uvr$ ?v0 )?v1 )?v2 )?v3 )))):named a53 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_nat_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$e (fun_app$u (uvy$ ?v0 ?v1 )?v2 )?v3 )(case_prod$a ?v0 (fun_app$an (fun_app$ao ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$u (uvy$ ?v0 ?v1 )?v2 )?v3 )))):named a54 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$ (fun_app$a (fun_app$bi (uvx$ ?v0 )?v1 )?v2 )?v3 )(fun_app$bj (case_prod$b ?v0 )(fun_app$an (fun_app$ao ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$bi (uvx$ ?v0 )?v1 )?v2 )?v3 )))):named a55 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$e (fun_app$f (uvq$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ak (case_prod$c ?v0 )(fun_app$e (fun_app$f ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$f (uvq$ ?v0 ?v1 )?v2 )?v3 )))):named a56 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 A_nat_nat_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$e (fun_app$u (uvt$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ak (case_prod$c ?v0 )(fun_app$e (fun_app$u ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$u (uvt$ ?v0 ?v1 )?v2 )?v3 )))):named a57 ))
(assert (! (forall ((?v0 Nat_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_nat_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$ (fun_app$a (fun_app$bk (uvs$ ?v0 )?v1 )?v2 )?v3 )(fun_app$y (case_prod$d ?v0 )(fun_app$e (fun_app$u ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$bk (uvs$ ?v0 )?v1 )?v2 )?v3 )))):named a58 ))
(assert (! (forall ((?v0 A_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_a_nat_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$e (fun_app$f (uvu$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ap (case_prod$e ?v0 )(fun_app$ (fun_app$r ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$f (uvu$ ?v0 ?v1 )?v2 )?v3 )))):named a59 ))
(assert (! (forall ((?v0 A_nat_nat_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$e (fun_app$u (uvv$ ?v0 ?v1 )?v2 )?v3 )(fun_app$ap (case_prod$e ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$e (fun_app$u (uvv$ ?v0 ?v1 )?v2 )?v3 )))):named a60 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A$ )(?v3 Nat$ ))(! (= (fun_app$ (fun_app$a (fun_app$bl (uvp$ ?v0 )?v1 )?v2 )?v3 )(fun_app$q (case_prod$f ?v0 )(fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$bl (uvp$ ?v0 )?v1 )?v2 )?v3 )))):named a61 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$o (fun_app$p (uvw$ ?v0 ?v1 )?v2 )?v3 )(fun_app$aq (case_prod$g ?v0 )(fun_app$o (fun_app$p ?v1 ?v2 )?v3 ))):pattern ((fun_app$o (fun_app$p (uvw$ ?v0 ?v1 )?v2 )?v3 )))):named a62 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_prod$ ))(! (= (fun_app$aj uub$ ?v0 )?v0 ):pattern ((fun_app$aj uub$ ?v0 )))):named a63 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(! (= (fun_app$q uue$ ?v0 )?v0 ):pattern ((fun_app$q uue$ ?v0 )))):named a64 ))
(assert (! (forall ((?v0 A_a_prod$ ))(! (= (fun_app$aq uua$ ?v0 )?v0 ):pattern ((fun_app$aq uua$ ?v0 )))):named a65 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$b uud$ ?v0 )?v0 ):pattern ((fun_app$b uud$ ?v0 )))):named a66 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$x uuc$ ?v0 )?v0 ):pattern ((fun_app$x uuc$ ?v0 )))):named a67 ))
(assert (! (not (= (lzip$ xs$ (iterates$ suc$ (fun_app$b suc$ n$ )))(lmap$ (case_prod$f uu$ )(lzip$ xs$ (iterates$ suc$ n$ ))))):named a68 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(= (lmap$a uua$ ?v0 )?v0 )):named a69 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_prod_llist$ ))(= (lmap$b uub$ ?v0 )?v0 )):named a70 ))
(assert (! (forall ((?v0 A_llist$ ))(= (lmap$c uuc$ ?v0 )?v0 )):named a71 ))
(assert (! (forall ((?v0 Nat_llist$ ))(= (lmap$d uud$ ?v0 )?v0 )):named a72 ))
(assert (! (forall ((?v0 A_nat_prod_llist$ ))(= (lmap$ uue$ ?v0 )?v0 )):named a73 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$ (lmap$c ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(lmap$ (case_prod$f (fun_app$bg (uuf$ ?v0 )?v2 ))(lzip$ ?v1 ?v3 )))):named a74 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_llist$ )(?v2 A_nat_prod_a_nat_prod_fun$ )(?v3 A_nat_prod_llist$ ))(= (lzip$a (lmap$ ?v0 ?v1 )(lmap$ ?v2 ?v3 ))(lmap$b (case_prod$ (fun_app$av (uug$ ?v0 )?v2 ))(lzip$a ?v1 ?v3 )))):named a75 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$ (lmap$e ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(lmap$f (case_prod$d (fun_app$bf (uuh$ ?v0 )?v2 ))(lzip$b ?v1 ?v3 )))):named a76 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$b (lmap$g ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(lmap$h (case_prod$e (uui$ ?v0 ?v2 ))(lzip$ ?v1 ?v3 )))):named a77 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (lzip$c (lmap$c ?v0 ?v1 )(lmap$c ?v2 ?v3 ))(lmap$a (case_prod$g (uuj$ ?v0 ?v2 ))(lzip$c ?v1 ?v3 )))):named a78 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_llist$ )(?v2 A_a_fun$ )(?v3 A_llist$ ))(= (lzip$d (lmap$d ?v0 ?v1 )(lmap$c ?v2 ?v3 ))(lmap$i (case_prod$h (uuk$ ?v0 ?v2 ))(lzip$d ?v1 ?v3 )))):named a79 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_llist$ )(?v2 Nat_nat_fun$ )(?v3 Nat_llist$ ))(= (lzip$b (lmap$d ?v0 ?v1 )(lmap$d ?v2 ?v3 ))(lmap$j (case_prod$c (uul$ ?v0 ?v2 ))(lzip$b ?v1 ?v3 )))):named a80 ))
(assert (! (forall ((?v0 A_nat_prod_a_fun$ )(?v1 A_nat_prod_llist$ )(?v2 A_nat_prod_nat_fun$ )(?v3 A_nat_prod_llist$ ))(= (lzip$ (lmap$k ?v0 ?v1 )(lmap$l ?v2 ?v3 ))(lmap$m (case_prod$b (fun_app$ax (uum$ ?v0 )?v2 ))(lzip$a ?v1 ?v3 )))):named a81 ))
(assert (! (forall ((?v0 A_a_nat_prod_fun$ )(?v1 A_llist$ )(?v2 Nat_a_nat_prod_fun$ )(?v3 Nat_llist$ ))(= (lzip$a (lmap$n ?v0 ?v1 )(lmap$o ?v2 ?v3 ))(lmap$p (case_prod$i (uun$ ?v0 ?v2 ))(lzip$ ?v1 ?v3 )))):named a82 ))
(assert (! (forall ((?v0 Nat_a_nat_prod_fun$ )(?v1 Nat_llist$ )(?v2 Nat_a_nat_prod_fun$ )(?v3 Nat_llist$ ))(= (lzip$a (lmap$o ?v0 ?v1 )(lmap$o ?v2 ?v3 ))(lmap$q (case_prod$j (uuo$ ?v0 ?v2 ))(lzip$b ?v1 ?v3 )))):named a83 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat_nat_fun$ )(?v2 Nat_llist$ ))(= (lzip$ ?v0 (lmap$d ?v1 ?v2 ))(lmap$ (case_prod$f (uup$ ?v1 ))(lzip$ ?v0 ?v2 )))):named a84 ))
(assert (! (forall ((?v0 Nat_llist$ )(?v1 Nat_nat_fun$ )(?v2 Nat_llist$ ))(= (lzip$b ?v0 (lmap$d ?v1 ?v2 ))(lmap$j (case_prod$c (uuq$ ?v1 ))(lzip$b ?v0 ?v2 )))):named a85 ))
(assert (! (forall ((?v0 A_nat_prod_llist$ )(?v1 A_nat_prod_a_nat_prod_fun$ )(?v2 A_nat_prod_llist$ ))(= (lzip$a ?v0 (lmap$ ?v1 ?v2 ))(lmap$b (case_prod$ (uur$ ?v1 ))(lzip$a ?v0 ?v2 )))):named a86 ))
(assert (! (forall ((?v0 Nat_llist$ )(?v1 A_a_fun$ )(?v2 A_llist$ ))(= (lzip$d ?v0 (lmap$c ?v1 ?v2 ))(lmap$i (case_prod$h (uus$ ?v1 ))(lzip$d ?v0 ?v2 )))):named a87 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_a_fun$ )(?v2 A_llist$ ))(= (lzip$c ?v0 (lmap$c ?v1 ?v2 ))(lmap$a (case_prod$g (uut$ ?v1 ))(lzip$c ?v0 ?v2 )))):named a88 ))
(assert (! (forall ((?v0 Nat_llist$ )(?v1 Nat_a_fun$ )(?v2 Nat_llist$ ))(= (lzip$d ?v0 (lmap$e ?v1 ?v2 ))(lmap$r (case_prod$k (uuu$ ?v1 ))(lzip$b ?v0 ?v2 )))):named a89 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat_a_fun$ )(?v2 Nat_llist$ ))(= (lzip$c ?v0 (lmap$e ?v1 ?v2 ))(lmap$s (case_prod$l (uuv$ ?v1 ))(lzip$ ?v0 ?v2 )))):named a90 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 A_nat_fun$ )(?v2 A_llist$ ))(= (lzip$ ?v0 (lmap$g ?v1 ?v2 ))(lmap$t (case_prod$m (uuw$ ?v1 ))(lzip$c ?v0 ?v2 )))):named a91 ))
(assert (! (forall ((?v0 Nat_llist$ )(?v1 A_nat_fun$ )(?v2 A_llist$ ))(= (lzip$b ?v0 (lmap$g ?v1 ?v2 ))(lmap$u (case_prod$n (uux$ ?v1 ))(lzip$d ?v0 ?v2 )))):named a92 ))
(assert (! (forall ((?v0 A_llist$ )(?v1 Nat_nat_prod_nat_fun$ )(?v2 Nat_nat_prod_llist$ ))(= (lzip$ ?v0 (lmap$v ?v1 ?v2 ))(lmap$w (case_prod$o (uuy$ ?v1 ))(lzip$e ?v0 ?v2 )))):named a93 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(= (lzip$ (iterates$a ?v0 ?v1 )(iterates$ ?v2 ?v3 ))(iterates$b (case_prod$f (fun_app$bg (uuf$ ?v0 )?v2 ))(pair$ ?v1 ?v3 )))):named a94 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(= (lzip$b (iterates$ ?v0 ?v1 )(iterates$ ?v2 ?v3 ))(iterates$c (case_prod$c (uul$ ?v0 ?v2 ))(pair$c ?v1 ?v3 )))):named a95 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (lzip$d (iterates$ ?v0 ?v1 )(iterates$a ?v2 ?v3 ))(iterates$d (case_prod$h (uuk$ ?v0 ?v2 ))(pair$d ?v1 ?v3 )))):named a96 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (lzip$c (iterates$a ?v0 ?v1 )(iterates$a ?v2 ?v3 ))(iterates$e (case_prod$g (uuj$ ?v0 ?v2 ))(pair$a ?v1 ?v3 )))):named a97 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 Nat_nat_prod_nat_nat_prod_fun$ )(?v3 Nat_nat_prod$ ))(= (lzip$f (iterates$ ?v0 ?v1 )(iterates$c ?v2 ?v3 ))(iterates$f (case_prod$p (uuz$ ?v0 ?v2 ))(pair$f ?v1 ?v3 )))):named a98 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ )(?v2 A_nat_prod_a_nat_prod_fun$ )(?v3 A_nat_prod$ ))(= (lzip$g (iterates$ ?v0 ?v1 )(iterates$b ?v2 ?v3 ))(iterates$g (case_prod$q (uva$ ?v0 ?v2 ))(pair$g ?v1 ?v3 )))):named a99 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ )(?v2 Nat_nat_fun$ )(?v3 Nat$ ))(= (lzip$h (iterates$c ?v0 ?v1 )(iterates$ ?v2 ?v3 ))(iterates$h (case_prod$r (uvb$ ?v0 ?v2 ))(pair$h ?v1 ?v3 )))):named a100 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ )(?v2 A_a_fun$ )(?v3 A$ ))(= (lzip$i (iterates$c ?v0 ?v1 )(iterates$a ?v2 ?v3 ))(iterates$i (case_prod$s (uvc$ ?v0 ?v2 ))(pair$i ?v1 ?v3 )))):named a101 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 Nat_nat_prod_nat_nat_prod_fun$ )(?v3 Nat_nat_prod$ ))(= (lzip$e (iterates$a ?v0 ?v1 )(iterates$c ?v2 ?v3 ))(iterates$j (case_prod$t (uvd$ ?v0 ?v2 ))(pair$e ?v1 ?v3 )))):named a102 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_nat_prod_a_nat_prod_fun$ )(?v3 A_nat_prod$ ))(= (lzip$j (iterates$a ?v0 ?v1 )(iterates$b ?v2 ?v3 ))(iterates$k (case_prod$u (uve$ ?v0 ?v2 ))(pair$j ?v1 ?v3 )))):named a103 ))
(assert (! (forall ((?v0 Nat_a_nat_prod_prod_nat_a_nat_prod_prod_fun$ )(?v1 Nat_a_nat_prod_prod$ ))(= (lmap$x ?v0 (iterates$g ?v0 ?v1 ))(iterates$g ?v0 (fun_app$bm ?v0 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 Nat_a_prod_nat_a_prod_fun$ )(?v1 Nat_a_prod$ ))(= (lmap$i ?v0 (iterates$d ?v0 ?v1 ))(iterates$d ?v0 (fun_app$bn ?v0 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ )(?v1 A_nat_nat_prod_prod$ ))(= (lmap$y ?v0 (iterates$j ?v0 ?v1 ))(iterates$j ?v0 (fun_app$al ?v0 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ )(?v1 A_a_nat_prod_prod$ ))(= (lmap$z ?v0 (iterates$k ?v0 ?v1 ))(iterates$k ?v0 (fun_app$am ?v0 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_prod$ ))(= (lmap$a ?v0 (iterates$e ?v0 ?v1 ))(iterates$e ?v0 (fun_app$aq ?v0 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ ))(= (lmap$j ?v0 (iterates$c ?v0 ?v1 ))(iterates$c ?v0 (fun_app$ak ?v0 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ )(?v1 A_nat_prod_a_nat_prod_prod$ ))(= (lmap$b ?v0 (iterates$l ?v0 ?v1 ))(iterates$l ?v0 (fun_app$aj ?v0 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (lmap$c ?v0 (iterates$a ?v0 ?v1 ))(iterates$a ?v0 (fun_app$x ?v0 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ ))(= (lmap$d ?v0 (iterates$ ?v0 ?v1 ))(iterates$ ?v0 (fun_app$b ?v0 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod$ ))(= (lmap$ ?v0 (iterates$b ?v0 ?v1 ))(iterates$b ?v0 (fun_app$q ?v0 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 Nat_llist$ ))(= (lzip$ (lmap$c ?v0 ?v1 )?v2 )(lmap$ (case_prod$f (uvf$ ?v0 ))(lzip$ ?v1 ?v2 )))):named a114 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_llist$ )(?v2 Nat_llist$ ))(= (lzip$ (lmap$e ?v0 ?v1 )?v2 )(lmap$f (case_prod$d (uvg$ ?v0 ))(lzip$b ?v1 ?v2 )))):named a115 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_llist$ )(?v2 Nat_llist$ ))(= (lzip$b (lmap$g ?v0 ?v1 )?v2 )(lmap$h (case_prod$e (uvh$ ?v0 ))(lzip$ ?v1 ?v2 )))):named a116 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_llist$ )(?v2 Nat_llist$ ))(= (lzip$b (lmap$d ?v0 ?v1 )?v2 )(lmap$j (case_prod$c (uvi$ ?v0 ))(lzip$b ?v1 ?v2 )))):named a117 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ )(?v1 A_nat_prod_llist$ )(?v2 A_nat_prod_llist$ ))(= (lzip$a (lmap$ ?v0 ?v1 )?v2 )(lmap$b (case_prod$ (uvj$ ?v0 ))(lzip$a ?v1 ?v2 )))):named a118 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (lzip$c (lmap$c ?v0 ?v1 )?v2 )(lmap$a (case_prod$g (uvk$ ?v0 ))(lzip$c ?v1 ?v2 )))):named a119 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_llist$ )(?v2 A_llist$ ))(= (lzip$d (lmap$d ?v0 ?v1 )?v2 )(lmap$i (case_prod$h (uvl$ ?v0 ))(lzip$d ?v1 ?v2 )))):named a120 ))
(assert (! (forall ((?v0 Nat_a_fun$ )(?v1 Nat_llist$ )(?v2 A_llist$ ))(= (lzip$c (lmap$e ?v0 ?v1 )?v2 )(lmap$aa (case_prod$v (uvm$ ?v0 ))(lzip$d ?v1 ?v2 )))):named a121 ))
(assert (! (forall ((?v0 A_nat_fun$ )(?v1 A_llist$ )(?v2 A_llist$ ))(= (lzip$d (lmap$g ?v0 ?v1 )?v2 )(lmap$ab (case_prod$w (uvn$ ?v0 ))(lzip$c ?v1 ?v2 )))):named a122 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_llist$ )(?v2 Nat_nat_prod_llist$ ))(= (lzip$e (lmap$c ?v0 ?v1 )?v2 )(lmap$y (case_prod$t (uvo$ ?v0 ))(lzip$e ?v1 ?v2 )))):named a123 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$b suc$ ?v0 )(fun_app$b suc$ ?v1 ))(= ?v0 ?v1 ))):named a124 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (fun_app$b suc$ ?v0 )(fun_app$b suc$ ?v1 ))(= ?v0 ?v1 ))):named a125 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$q (case_prod$f ?v0 )(fun_app$q (case_prod$f ?v1 )?v2 ))(fun_app$q (case_prod$f (fun_app$bl (uvp$ ?v0 )?v1 ))?v2 ))):named a126 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$ak (case_prod$c ?v0 )(fun_app$ak (case_prod$c ?v1 )?v2 ))(fun_app$ak (case_prod$c (uvq$ ?v0 ?v1 ))?v2 ))):named a127 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v1 A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v2 A_nat_prod_a_nat_prod_prod$ ))(= (fun_app$aj (case_prod$ ?v0 )(fun_app$aj (case_prod$ ?v1 )?v2 ))(fun_app$aj (case_prod$ (fun_app$bh (uvr$ ?v0 )?v1 ))?v2 ))):named a128 ))
(assert (! (forall ((?v0 Nat_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_nat_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$y (case_prod$d ?v0 )(fun_app$ap (case_prod$e ?v1 )?v2 ))(fun_app$q (case_prod$f (fun_app$bk (uvs$ ?v0 )?v1 ))?v2 ))):named a129 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 A_nat_nat_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$ak (case_prod$c ?v0 )(fun_app$ap (case_prod$e ?v1 )?v2 ))(fun_app$ap (case_prod$e (uvt$ ?v0 ?v1 ))?v2 ))):named a130 ))
(assert (! (forall ((?v0 A_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_a_nat_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$ap (case_prod$e ?v0 )(fun_app$y (case_prod$d ?v1 )?v2 ))(fun_app$ak (case_prod$c (uvu$ ?v0 ?v1 ))?v2 ))):named a131 ))
(assert (! (forall ((?v0 A_nat_nat_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$ap (case_prod$e ?v0 )(fun_app$q (case_prod$f ?v1 )?v2 ))(fun_app$ap (case_prod$e (uvv$ ?v0 ?v1 ))?v2 ))):named a132 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A_a_prod$ ))(= (fun_app$aq (case_prod$g ?v0 )(fun_app$aq (case_prod$g ?v1 )?v2 ))(fun_app$aq (case_prod$g (uvw$ ?v0 ?v1 ))?v2 ))):named a133 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (fun_app$bj (case_prod$b ?v0 )(fun_app$c (case_prod$i ?v1 )?v2 ))(fun_app$q (case_prod$f (fun_app$bi (uvx$ ?v0 )?v1 ))?v2 ))):named a134 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_nat_nat_prod_fun_fun$ )(?v1 A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v2 A_nat_prod$ ))(= (case_prod$a ?v0 (fun_app$c (case_prod$i ?v1 )?v2 ))(fun_app$ap (case_prod$e (uvy$ ?v0 ?v1 ))?v2 ))):named a135 ))
(assert (! (forall ((?v0 Nat_a_prod$ ))(! (= (fun_app$bn (case_prod$h uvz$ )?v0 )?v0 ):pattern ((fun_app$bn (case_prod$h uvz$ )?v0 )))):named a136 ))
(assert (! (forall ((?v0 A_a_nat_prod_a_nat_prod_prod_prod$ ))(! (= (case_prod$x uwa$ ?v0 )?v0 ):pattern ((case_prod$x uwa$ ?v0 )))):named a137 ))
(assert (! (forall ((?v0 A_nat_nat_prod_prod$ ))(! (= (fun_app$al (case_prod$t uwb$ )?v0 )?v0 ):pattern ((fun_app$al (case_prod$t uwb$ )?v0 )))):named a138 ))
(assert (! (forall ((?v0 A_a_nat_prod_prod$ ))(! (= (fun_app$am (case_prod$u uwc$ )?v0 )?v0 ):pattern ((fun_app$am (case_prod$u uwc$ )?v0 )))):named a139 ))
(assert (! (forall ((?v0 A_a_prod$ ))(! (= (fun_app$aq (case_prod$g uwd$ )?v0 )?v0 ):pattern ((fun_app$aq (case_prod$g uwd$ )?v0 )))):named a140 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_prod$ ))(! (= (fun_app$aj (case_prod$ uwe$ )?v0 )?v0 ):pattern ((fun_app$aj (case_prod$ uwe$ )?v0 )))):named a141 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(! (= (fun_app$ak (case_prod$c uwf$ )?v0 )?v0 ):pattern ((fun_app$ak (case_prod$c uwf$ )?v0 )))):named a142 ))
(assert (! (forall ((?v0 A_nat_prod$ ))(! (= (fun_app$q (case_prod$f uwg$ )?v0 )?v0 ):pattern ((fun_app$q (case_prod$f uwg$ )?v0 )))):named a143 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ )(?v2 Nat$ )(?v3 A$ ))(= (= (pair$d ?v0 ?v1 )(pair$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a144 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_prod_a_nat_prod_prod$ )(?v2 A$ )(?v3 A_nat_prod_a_nat_prod_prod$ ))(= (= (pair$k ?v0 ?v1 )(pair$k ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a145 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat_nat_prod$ )(?v2 A$ )(?v3 Nat_nat_prod$ ))(= (= (pair$e ?v0 ?v1 )(pair$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a146 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_prod$ )(?v2 A$ )(?v3 A_nat_prod$ ))(= (= (pair$j ?v0 ?v1 )(pair$j ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a147 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ )(?v3 A$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a148 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_nat_prod$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a149 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a150 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A$ )(?v3 Nat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a151 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A$ )(?v2 Nat$ )(?v3 A$ ))(= (= (pair$d ?v0 ?v1 )(pair$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a152 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_prod_a_nat_prod_prod$ )(?v2 A$ )(?v3 A_nat_prod_a_nat_prod_prod$ ))(= (= (pair$k ?v0 ?v1 )(pair$k ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a153 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat_nat_prod$ )(?v2 A$ )(?v3 Nat_nat_prod$ ))(= (= (pair$e ?v0 ?v1 )(pair$e ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a154 ))
(assert (! (forall ((?v0 A$ )(?v1 A_nat_prod$ )(?v2 A$ )(?v3 A_nat_prod$ ))(= (= (pair$j ?v0 ?v1 )(pair$j ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a155 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ )(?v3 A$ ))(= (= (pair$a ?v0 ?v1 )(pair$a ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a156 ))
(assert (! (forall ((?v0 A_nat_prod$ )(?v1 A_nat_prod$ )(?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(= (= (pair$b ?v0 ?v1 )(pair$b ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a157 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ )(?v3 Nat$ ))(= (= (pair$c ?v0 ?v1 )(pair$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a158 ))
(assert (! (forall ((?v0 A$ )(?v1 Nat$ )(?v2 A$ )(?v3 Nat$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a159 ))
(assert (! (forall ((?v0 A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ ))(= (case_prod$t (uwh$ ?v0 ))?v0 )):named a160 ))
(assert (! (forall ((?v0 A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ ))(= (case_prod$u (uwi$ ?v0 ))?v0 )):named a161 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ ))(= (case_prod$i (uwj$ ?v0 ))?v0 )):named a162 ))
(assert (! (forall ((?v0 A_nat_prod_nat_nat_prod_fun$ ))(= (case_prod$e (uwk$ ?v0 ))?v0 )):named a163 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ ))(= (case_prod$g (uwl$ ?v0 ))?v0 )):named a164 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ ))(= (case_prod$ (uwm$ ?v0 ))?v0 )):named a165 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ ))(= (case_prod$c (uwn$ ?v0 ))?v0 )):named a166 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_fun$ ))(= (case_prod$f (uwo$ ?v0 ))?v0 )):named a167 ))
(assert (! (forall ((?v0 A_nat_nat_prod_a_nat_nat_prod_prod_fun_fun$ )(?v1 A_nat_nat_prod_prod_a_nat_nat_prod_prod_fun$ ))(=> (forall ((?v2 A$ )(?v3 Nat_nat_prod$ ))(= (fun_app$k (fun_app$l ?v0 ?v2 )?v3 )(fun_app$al ?v1 (pair$e ?v2 ?v3 ))))(= (case_prod$t ?v0 )?v1 ))):named a168 ))
(assert (! (forall ((?v0 A_a_nat_prod_a_a_nat_prod_prod_fun_fun$ )(?v1 A_a_nat_prod_prod_a_a_nat_prod_prod_fun$ ))(=> (forall ((?v2 A$ )(?v3 A_nat_prod$ ))(= (fun_app$m (fun_app$n ?v0 ?v2 )?v3 )(fun_app$am ?v1 (pair$j ?v2 ?v3 ))))(= (case_prod$u ?v0 )?v1 ))):named a169 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v1 A_nat_prod_a_nat_prod_a_nat_prod_prod_fun$ ))(=> (forall ((?v2 A$ )(?v3 Nat$ ))(= (fun_app$an (fun_app$ao ?v0 ?v2 )?v3 )(fun_app$c ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$i ?v0 )?v1 ))):named a170 ))
(assert (! (forall ((?v0 A_nat_nat_nat_prod_fun_fun$ )(?v1 A_nat_prod_nat_nat_prod_fun$ ))(=> (forall ((?v2 A$ )(?v3 Nat$ ))(= (fun_app$e (fun_app$u ?v0 ?v2 )?v3 )(fun_app$ap ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$e ?v0 )?v1 ))):named a171 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_a_prod_a_a_prod_fun$ ))(=> (forall ((?v2 A$ )(?v3 A$ ))(= (fun_app$o (fun_app$p ?v0 ?v2 )?v3 )(fun_app$aq ?v1 (pair$a ?v2 ?v3 ))))(= (case_prod$g ?v0 )?v1 ))):named a172 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v1 A_nat_prod_a_nat_prod_prod_a_nat_prod_a_nat_prod_prod_fun$ ))(=> (forall ((?v2 A_nat_prod$ )(?v3 A_nat_prod$ ))(= (fun_app$c (fun_app$d ?v0 ?v2 )?v3 )(fun_app$aj ?v1 (pair$b ?v2 ?v3 ))))(= (case_prod$ ?v0 )?v1 ))):named a173 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(=> (forall ((?v2 Nat$ )(?v3 Nat$ ))(= (fun_app$e (fun_app$f ?v0 ?v2 )?v3 )(fun_app$ak ?v1 (pair$c ?v2 ?v3 ))))(= (case_prod$c ?v0 )?v1 ))):named a174 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A_nat_prod_a_nat_prod_fun$ ))(=> (forall ((?v2 A$ )(?v3 Nat$ ))(= (fun_app$ (fun_app$a ?v0 ?v2 )?v3 )(fun_app$q ?v1 (pair$ ?v2 ?v3 ))))(= (case_prod$f ?v0 )?v1 ))):named a175 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$c (case_prod$i ?v0 )(pair$ ?v1 ?v2 ))(fun_app$an (fun_app$ao ?v0 ?v1 )?v2 )):pattern ((fun_app$c (case_prod$i ?v0 )(pair$ ?v1 ?v2 ))))):named a176 ))
(assert (! (forall ((?v0 A_nat_nat_nat_prod_fun_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$ap (case_prod$e ?v0 )(pair$ ?v1 ?v2 ))(fun_app$e (fun_app$u ?v0 ?v1 )?v2 )):pattern ((fun_app$ap (case_prod$e ?v0 )(pair$ ?v1 ?v2 ))))):named a177 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A$ )(?v2 A$ ))(! (= (fun_app$aq (case_prod$g ?v0 )(pair$a ?v1 ?v2 ))(fun_app$o (fun_app$p ?v0 ?v1 )?v2 )):pattern ((fun_app$aq (case_prod$g ?v0 )(pair$a ?v1 ?v2 ))))):named a178 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v1 A_nat_prod$ )(?v2 A_nat_prod$ ))(! (= (fun_app$aj (case_prod$ ?v0 )(pair$b ?v1 ?v2 ))(fun_app$c (fun_app$d ?v0 ?v1 )?v2 )):pattern ((fun_app$aj (case_prod$ ?v0 )(pair$b ?v1 ?v2 ))))):named a179 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$ak (case_prod$c ?v0 )(pair$c ?v1 ?v2 ))(fun_app$e (fun_app$f ?v0 ?v1 )?v2 )):pattern ((fun_app$ak (case_prod$c ?v0 )(pair$c ?v1 ?v2 ))))):named a180 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$q (case_prod$f ?v0 )(pair$ ?v1 ?v2 ))(fun_app$ (fun_app$a ?v0 ?v1 )?v2 )):pattern ((fun_app$q (case_prod$f ?v0 )(pair$ ?v1 ?v2 ))))):named a181 ))
(assert (! (forall ((?v0 A_nat_prod_a_nat_prod_a_nat_prod_a_nat_prod_prod_fun_fun$ )(?v1 A_nat_prod$ )(?v2 A_nat_prod$ ))(! (= (fun_app$aj (case_prod$ ?v0 )(pair$b ?v1 ?v2 ))(fun_app$c (fun_app$d ?v0 ?v1 )?v2 )):pattern ((fun_app$aj (case_prod$ ?v0 )(pair$b ?v1 ?v2 ))))):named a182 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun$ )(?v1 Nat$ )(?v2 Nat$ ))(! (= (fun_app$ak (case_prod$c ?v0 )(pair$c ?v1 ?v2 ))(fun_app$e (fun_app$f ?v0 ?v1 )?v2 )):pattern ((fun_app$ak (case_prod$c ?v0 )(pair$c ?v1 ?v2 ))))):named a183 ))
(assert (! (forall ((?v0 A_nat_a_nat_prod_fun_fun$ )(?v1 A$ )(?v2 Nat$ ))(! (= (fun_app$q (case_prod$f ?v0 )(pair$ ?v1 ?v2 ))(fun_app$ (fun_app$a ?v0 ?v1 )?v2 )):pattern ((fun_app$q (case_prod$f ?v0 )(pair$ ?v1 ?v2 ))))):named a184 ))
(check-sat )
;(get-unsat-core )
