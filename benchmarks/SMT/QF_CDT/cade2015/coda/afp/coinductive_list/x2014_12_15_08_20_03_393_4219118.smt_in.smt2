;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Enat_nat_fun$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Nat_enat_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort Enat_bool_fun$ 0 )
(declare-sort Enat_enat_fun$ 0 )
(declare-sort B_llist_nat_fun$ 0 )
(declare-sort Nat_b_llist_fun$ 0 )
(declare-sort B_llist_bool_fun$ 0 )
(declare-sort B_llist_enat_fun$ 0 )
(declare-sort Enat_b_llist_fun$ 0 )
(declare-sort Nat_nat_prod_set$ 0 )
(declare-sort Enat_enat_prod_set$ 0 )
(declare-sort B_llist_b_llist_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_fun$ 0 )
(declare-sort Enat_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_bool_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun$ 0 )
(declare-sort Nat_enat_enat_prod_fun$ 0 )
(declare-sort Bool_enat_enat_prod_fun$ 0 )
(declare-sort Enat_enat_enat_prod_fun$ 0 )
(declare-sort Enat_enat_prod_bool_fun$ 0 )
(declare-sort B_llist_b_llist_prod_set$ 0 )
(declare-sort B_llist_nat_nat_prod_fun$ 0 )
(declare-sort B_llist_enat_enat_prod_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun$ 0 )
(declare-sort Nat_b_llist_b_llist_prod_fun$ 0 )
(declare-sort Nat_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort B_llist_b_llist_prod_bool_fun$ 0 )
(declare-sort Bool_b_llist_b_llist_prod_fun$ 0 )
(declare-sort Enat_b_llist_b_llist_prod_fun$ 0 )
(declare-sort Enat_enat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_enat_enat_prod_fun_fun$ 0 )
(declare-sort B_llist_b_llist_b_llist_prod_fun$ 0 )
(declare-sort Enat_enat_enat_enat_prod_fun_fun$ 0 )
(declare-sort Enat_enat_prod_enat_enat_prod_fun$ 0 )
(declare-sort B_llist_b_llist_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_b_llist_b_llist_prod_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_enat_enat_prod_fun_fun$ 0 )
(declare-sort Enat_enat_b_llist_b_llist_prod_fun_fun$ 0 )
(declare-sort Enat_enat_fun_enat_enat_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort Enat_enat_bool_fun_fun_enat_enat_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_fun_b_llist_b_llist_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_nat_nat_prod_fun_fun_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_enat_enat_prod_fun_fun_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort Enat_enat_nat_nat_prod_fun_fun_enat_enat_bool_fun_fun_fun$ 0 )
(declare-sort Enat_enat_enat_enat_prod_fun_fun_enat_enat_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_bool_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ 0 )
(declare-sort Nat_nat_b_llist_b_llist_prod_fun_fun_nat_nat_bool_fun_fun_fun$ 0 )
(declare-sort Enat_enat_b_llist_b_llist_prod_fun_fun_enat_enat_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_nat_nat_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_enat_enat_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ 0 )
(declare-sort B_llist_b_llist_b_llist_b_llist_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ 0 )
(declare-sort Nat_option$ 0)
(declare-sort Enat$ 0)
(declare-fun none$ ()Nat_option$)
(declare-fun the$ (Nat_option$)Nat$)
(declare-fun some$ (Nat$ )Nat_option$)
(declare-fun rep_enat$ (Enat$)Nat_option$)
(declare-fun abs_enat$ (Nat_option$ )Enat$)
(declare-codatatypes ()((B_llist$ (lNil$ )(lCons$ (lhd$ B$ )(ltl$ B_llist$ )))))
(declare-sort Enat_enat_prod$ 0)
(declare-sort Nat_nat_prod$ 0)
(declare-sort B_llist_b_llist_prod$ 0)
(declare-fun fst$ (Enat_enat_prod$)Enat$)
(declare-fun snd$ (Enat_enat_prod$)Enat$)
(declare-fun pair$ (Enat$ Enat$ )Enat_enat_prod$)
(declare-fun fst$a (Nat_nat_prod$)Nat$)
(declare-fun snd$a (Nat_nat_prod$)Nat$)
(declare-fun pair$a (Nat$ Nat$ )Nat_nat_prod$)
(declare-fun fst$b (B_llist_b_llist_prod$)B_llist$)
(declare-fun snd$b (B_llist_b_llist_prod$)B_llist$)
(declare-fun pair$b (B_llist$ B_llist$ )B_llist_b_llist_prod$)
(declare-fun uu$ (Bool )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ )
(declare-fun wf$ (B_llist_b_llist_prod_set$ )Bool )
(declare-fun uua$ (Bool )B_llist_b_llist_bool_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ )
(declare-fun uub$ (Bool )Enat_enat_bool_fun_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun uuc$ (Enat_enat_bool_fun_fun$ )Enat_enat_enat_enat_prod_fun_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun uud$ (Enat_enat_bool_fun_fun$ )B_llist_b_llist_enat_enat_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ )
(declare-fun uue$ (Enat_enat_enat_enat_prod_fun_fun$ Enat_enat_enat_enat_prod_fun_fun$ )Enat_enat_enat_enat_prod_fun_fun$ )
(declare-fun uuf$ (B_llist_b_llist_bool_fun_fun$ )Enat_enat_b_llist_b_llist_prod_fun_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun uug$ (B_llist_b_llist_bool_fun_fun$ )B_llist_b_llist_b_llist_b_llist_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ )
(declare-fun uuh$ (Enat_enat_bool_fun_fun$ )Nat_nat_enat_enat_prod_fun_fun_nat_nat_bool_fun_fun_fun$ )
(declare-fun uui$ (Nat_nat_bool_fun_fun$ )Enat_enat_nat_nat_prod_fun_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun uuj$ (Nat_nat_bool_fun_fun$ )Nat_nat_nat_nat_prod_fun_fun_nat_nat_bool_fun_fun_fun$ )
(declare-fun uuk$ (B_llist_b_llist_bool_fun_fun$ )Nat_nat_b_llist_b_llist_prod_fun_fun_nat_nat_bool_fun_fun_fun$ )
(declare-fun uul$ (Nat_nat_bool_fun_fun$ )B_llist_b_llist_nat_nat_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ )
(declare-fun uum$ (Bool_bool_fun$ )Enat_enat_bool_fun_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun uun$ (Bool_enat_enat_prod_fun$ Enat_enat_bool_fun_fun$ )Enat_enat_enat_enat_prod_fun_fun$ )
(declare-fun uuo$ (Enat_enat_prod_bool_fun$ )Enat_enat_enat_enat_prod_fun_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun uup$ (Bool_bool_fun$ )B_llist_b_llist_bool_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ )
(declare-fun uuq$ (Enat_enat_prod_enat_enat_prod_fun$ Enat_enat_enat_enat_prod_fun_fun$ )Enat_enat_enat_enat_prod_fun_fun$ )
(declare-fun uur$ (Bool_bool_fun$ )Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ )
(declare-fun uus$ (Bool_b_llist_b_llist_prod_fun$ Enat_enat_bool_fun_fun$ )Enat_enat_b_llist_b_llist_prod_fun_fun$ )
(declare-fun uut$ (Bool_enat_enat_prod_fun$ B_llist_b_llist_bool_fun_fun$ )B_llist_b_llist_enat_enat_prod_fun_fun$ )
(declare-fun uuu$ (B_llist_b_llist_prod_bool_fun$ )Enat_enat_b_llist_b_llist_prod_fun_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun uuv$ (Enat_enat_prod_bool_fun$ )B_llist_b_llist_enat_enat_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ )
(declare-fun uuw$ (Nat_bool_fun$ )Nat_nat_fun_nat_nat_bool_fun_fun_fun$ )
(declare-fun uux$ (B_llist_bool_fun$ )B_llist_b_llist_fun_b_llist_b_llist_bool_fun_fun_fun$ )
(declare-fun uuy$ (Enat_bool_fun$ )Enat_enat_fun_enat_enat_bool_fun_fun_fun$ )
(declare-fun wf$a (Enat_enat_prod_set$ )Bool )
(declare-fun wf$b (Nat_nat_prod_set$ )Bool )
(declare-fun less$ ()Enat_enat_bool_fun_fun$ )
(declare-fun less$a ()Nat_nat_bool_fun_fun$ )
(declare-fun collect$ (Enat_enat_prod_bool_fun$ )Enat_enat_prod_set$ )
(declare-fun fun_app$ (B_llist_bool_fun$ B_llist$ )Bool )
(declare-fun llength$ ()B_llist_enat_fun$ )
(declare-fun collect$a (Nat_nat_prod_bool_fun$ )Nat_nat_prod_set$ )
(declare-fun collect$b (B_llist_b_llist_prod_bool_fun$ )B_llist_b_llist_prod_set$ )
(declare-fun fun_app$a (B_llist_b_llist_bool_fun_fun$ B_llist$ )B_llist_bool_fun$ )
(declare-fun fun_app$b (B_llist_b_llist_fun_b_llist_b_llist_bool_fun_fun_fun$ B_llist_b_llist_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun fun_app$c (B_llist_b_llist_fun$ B_llist$ )B_llist$ )
(declare-fun fun_app$d (Enat_bool_fun$ Enat$ )Bool )
(declare-fun fun_app$e (Enat_enat_bool_fun_fun$ Enat$ )Enat_bool_fun$ )
(declare-fun fun_app$f (Enat_enat_fun_enat_enat_bool_fun_fun_fun$ Enat_enat_fun$ )Enat_enat_bool_fun_fun$ )
(declare-fun fun_app$g (Enat_enat_fun$ Enat$ )Enat$ )
(declare-fun fun_app$h (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$i (Nat_nat_bool_fun_fun$ Nat$ )Nat_bool_fun$ )
(declare-fun fun_app$j (Nat_nat_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun fun_app$k (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$l (B_llist_b_llist_b_llist_b_llist_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun fun_app$m (B_llist_b_llist_prod_bool_fun$ B_llist_b_llist_prod$ )Bool )
(declare-fun fun_app$n (B_llist_b_llist_b_llist_prod_fun$ B_llist$ )B_llist_b_llist_prod$ )
(declare-fun fun_app$o (B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ B_llist$ )B_llist_b_llist_b_llist_prod_fun$ )
(declare-fun fun_app$p (Enat_enat_b_llist_b_llist_prod_fun_fun_enat_enat_bool_fun_fun_fun$ Enat_enat_b_llist_b_llist_prod_fun_fun$ )Enat_enat_bool_fun_fun$ )
(declare-fun fun_app$q (Enat_b_llist_b_llist_prod_fun$ Enat$ )B_llist_b_llist_prod$ )
(declare-fun fun_app$r (Enat_enat_b_llist_b_llist_prod_fun_fun$ Enat$ )Enat_b_llist_b_llist_prod_fun$ )
(declare-fun fun_app$s (Nat_nat_b_llist_b_llist_prod_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_b_llist_b_llist_prod_fun_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun fun_app$t (Nat_b_llist_b_llist_prod_fun$ Nat$ )B_llist_b_llist_prod$ )
(declare-fun fun_app$u (Nat_nat_b_llist_b_llist_prod_fun_fun$ Nat$ )Nat_b_llist_b_llist_prod_fun$ )
(declare-fun fun_app$v (Enat_enat_enat_prod_fun$ Enat$ )Enat_enat_prod$ )
(declare-fun fun_app$w (Enat_enat_enat_enat_prod_fun_fun$ Enat$ )Enat_enat_enat_prod_fun$ )
(declare-fun fun_app$x (Enat_enat_prod_enat_enat_prod_fun$ Enat_enat_prod$ )Enat_enat_prod$ )
(declare-fun fun_app$y (B_llist_b_llist_enat_enat_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ B_llist_b_llist_enat_enat_prod_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun fun_app$z (Enat_enat_prod_bool_fun$ Enat_enat_prod$ )Bool )
(declare-fun case_prod$ (B_llist_b_llist_bool_fun_fun$ )B_llist_b_llist_prod_bool_fun$ )
(declare-fun fun_app$aa (B_llist_enat_enat_prod_fun$ B_llist$ )Enat_enat_prod$ )
(declare-fun fun_app$ab (B_llist_b_llist_enat_enat_prod_fun_fun$ B_llist$ )B_llist_enat_enat_prod_fun$ )
(declare-fun fun_app$ac (Enat_enat_enat_enat_prod_fun_fun_enat_enat_bool_fun_fun_fun$ Enat_enat_enat_enat_prod_fun_fun$ )Enat_enat_bool_fun_fun$ )
(declare-fun fun_app$ad (Nat_nat_enat_enat_prod_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_enat_enat_prod_fun_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun fun_app$ae (Nat_enat_enat_prod_fun$ Nat$ )Enat_enat_prod$ )
(declare-fun fun_app$af (Nat_nat_enat_enat_prod_fun_fun$ Nat$ )Nat_enat_enat_prod_fun$ )
(declare-fun fun_app$ag (B_llist_b_llist_nat_nat_prod_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ B_llist_b_llist_nat_nat_prod_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun fun_app$ah (Nat_nat_prod_bool_fun$ Nat_nat_prod$ )Bool )
(declare-fun fun_app$ai (B_llist_nat_nat_prod_fun$ B_llist$ )Nat_nat_prod$ )
(declare-fun fun_app$aj (B_llist_b_llist_nat_nat_prod_fun_fun$ B_llist$ )B_llist_nat_nat_prod_fun$ )
(declare-fun fun_app$ak (Enat_enat_nat_nat_prod_fun_fun_enat_enat_bool_fun_fun_fun$ Enat_enat_nat_nat_prod_fun_fun$ )Enat_enat_bool_fun_fun$ )
(declare-fun fun_app$al (Enat_nat_nat_prod_fun$ Enat$ )Nat_nat_prod$ )
(declare-fun fun_app$am (Enat_enat_nat_nat_prod_fun_fun$ Enat$ )Enat_nat_nat_prod_fun$ )
(declare-fun fun_app$an (Nat_nat_nat_nat_prod_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_nat_nat_prod_fun_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun fun_app$ao (Nat_nat_nat_prod_fun$ Nat$ )Nat_nat_prod$ )
(declare-fun fun_app$ap (Nat_nat_nat_nat_prod_fun_fun$ Nat$ )Nat_nat_nat_prod_fun$ )
(declare-fun fun_app$aq (B_llist_b_llist_bool_fun_fun_b_llist_b_llist_bool_fun_fun_fun$ B_llist_b_llist_bool_fun_fun$ )B_llist_b_llist_bool_fun_fun$ )
(declare-fun fun_app$ar (Enat_enat_bool_fun_fun_enat_enat_bool_fun_fun_fun$ Enat_enat_bool_fun_fun$ )Enat_enat_bool_fun_fun$ )
(declare-fun fun_app$as (Nat_nat_bool_fun_fun_nat_nat_bool_fun_fun_fun$ Nat_nat_bool_fun_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun fun_app$at (Bool_b_llist_b_llist_prod_fun$ Bool )B_llist_b_llist_prod$ )
(declare-fun fun_app$au (Bool_enat_enat_prod_fun$ Bool )Enat_enat_prod$ )
(declare-fun fun_app$av (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$aw (B_llist_enat_fun$ B_llist$ )Enat$ )
(declare-fun fun_app$ax (B_llist_nat_fun$ B_llist$ )Nat$ )
(declare-fun fun_app$ay (Enat_nat_fun$ Enat$ )Nat$ )
(declare-fun inv_image$ (Enat_enat_prod_set$ B_llist_enat_fun$ )B_llist_b_llist_prod_set$ )
(declare-fun case_prod$a (Enat_enat_enat_enat_prod_fun_fun$ )Enat_enat_prod_enat_enat_prod_fun$ )
(declare-fun case_prod$b (Enat_enat_bool_fun_fun$ )Enat_enat_prod_bool_fun$ )
(declare-fun case_prod$c (Nat_nat_bool_fun_fun$ )Nat_nat_prod_bool_fun$ )
(declare-fun case_prod$d (B_llist_b_llist_enat_enat_prod_fun_fun$ B_llist_b_llist_prod$ )Enat_enat_prod$ )
(declare-fun case_prod$e (Enat_enat_b_llist_b_llist_prod_fun_fun$ Enat_enat_prod$ )B_llist_b_llist_prod$ )
(declare-fun case_prod$f (B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ B_llist_b_llist_prod$ )B_llist_b_llist_prod$ )
(declare-fun case_prod$g (Nat_nat_enat_enat_prod_fun_fun$ Nat_nat_prod$ )Enat_enat_prod$ )
(declare-fun case_prod$h (Enat_enat_nat_nat_prod_fun_fun$ Enat_enat_prod$ )Nat_nat_prod$ )
(declare-fun case_prod$i (Nat_nat_nat_nat_prod_fun_fun$ Nat_nat_prod$ )Nat_nat_prod$ )
(declare-fun case_prod$j (Nat_nat_b_llist_b_llist_prod_fun_fun$ Nat_nat_prod$ )B_llist_b_llist_prod$ )
(declare-fun case_prod$k (B_llist_b_llist_nat_nat_prod_fun_fun$ B_llist_b_llist_prod$ )Nat_nat_prod$ )
(declare-fun inv_image$a (B_llist_b_llist_prod_set$ Nat_b_llist_fun$ )Nat_nat_prod_set$ )
(declare-fun inv_image$b (Enat_enat_prod_set$ Nat_enat_fun$ )Nat_nat_prod_set$ )
(declare-fun inv_image$c (Nat_nat_prod_set$ B_llist_nat_fun$ )B_llist_b_llist_prod_set$ )
(declare-fun inv_image$d (Nat_nat_prod_set$ Enat_nat_fun$ )Enat_enat_prod_set$ )
(declare-fun inv_image$e (Nat_nat_prod_set$ Nat_nat_fun$ )Nat_nat_prod_set$ )
(declare-fun inv_image$f (B_llist_b_llist_prod_set$ B_llist_b_llist_fun$ )B_llist_b_llist_prod_set$ )
(declare-fun inv_image$g (B_llist_b_llist_prod_set$ Enat_b_llist_fun$ )Enat_enat_prod_set$ )
(declare-fun inv_image$h (Enat_enat_prod_set$ Enat_enat_fun$ )Enat_enat_prod_set$ )
(declare-fun lstrict_prefix$ (B_llist$ )B_llist_bool_fun$ )
(assert (! (forall ((?v0 B_llist_bool_fun$ )(?v1 B_llist_b_llist_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (fun_app$b (uux$ ?v0 )?v1 )?v2 )?v3 )(and (fun_app$ ?v0 ?v3 )(= ?v2 (fun_app$c ?v1 ?v3 )))):pattern ((fun_app$ (fun_app$a (fun_app$b (uux$ ?v0 )?v1 )?v2 )?v3 )))):named a0 ))
(assert (! (forall ((?v0 Enat_bool_fun$ )(?v1 Enat_enat_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$f (uuy$ ?v0 )?v1 )?v2 )?v3 )(and (fun_app$d ?v0 ?v3 )(= ?v2 (fun_app$g ?v1 ?v3 )))):pattern ((fun_app$d (fun_app$e (fun_app$f (uuy$ ?v0 )?v1 )?v2 )?v3 )))):named a1 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$h (fun_app$i (fun_app$j (uuw$ ?v0 )?v1 )?v2 )?v3 )(and (fun_app$h ?v0 ?v3 )(= ?v2 (fun_app$k ?v1 ?v3 )))):pattern ((fun_app$h (fun_app$i (fun_app$j (uuw$ ?v0 )?v1 )?v2 )?v3 )))):named a2 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (fun_app$l (uug$ ?v0 )?v1 )?v2 )?v3 )(fun_app$m (case_prod$ ?v0 )(fun_app$n (fun_app$o ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$l (uug$ ?v0 )?v1 )?v2 )?v3 )))):named a3 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$p (uuf$ ?v0 )?v1 )?v2 )?v3 )(fun_app$m (case_prod$ ?v0 )(fun_app$q (fun_app$r ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$p (uuf$ ?v0 )?v1 )?v2 )?v3 )))):named a4 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 Nat_nat_b_llist_b_llist_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$h (fun_app$i (fun_app$s (uuk$ ?v0 )?v1 )?v2 )?v3 )(fun_app$m (case_prod$ ?v0 )(fun_app$t (fun_app$u ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$s (uuk$ ?v0 )?v1 )?v2 )?v3 )))):named a5 ))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_fun_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$v (fun_app$w (uue$ ?v0 ?v1 )?v2 )?v3 )(fun_app$x (case_prod$a ?v0 )(fun_app$v (fun_app$w ?v1 ?v2 )?v3 ))):pattern ((fun_app$v (fun_app$w (uue$ ?v0 ?v1 )?v2 )?v3 )))):named a6 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 B_llist_b_llist_enat_enat_prod_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (fun_app$y (uud$ ?v0 )?v1 )?v2 )?v3 )(fun_app$z (case_prod$b ?v0 )(fun_app$aa (fun_app$ab ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$y (uud$ ?v0 )?v1 )?v2 )?v3 )))):named a7 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$ac (uuc$ ?v0 )?v1 )?v2 )?v3 )(fun_app$z (case_prod$b ?v0 )(fun_app$v (fun_app$w ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$ac (uuc$ ?v0 )?v1 )?v2 )?v3 )))):named a8 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Nat_nat_enat_enat_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$h (fun_app$i (fun_app$ad (uuh$ ?v0 )?v1 )?v2 )?v3 )(fun_app$z (case_prod$b ?v0 )(fun_app$ae (fun_app$af ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$ad (uuh$ ?v0 )?v1 )?v2 )?v3 )))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 B_llist_b_llist_nat_nat_prod_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (fun_app$ag (uul$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ah (case_prod$c ?v0 )(fun_app$ai (fun_app$aj ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$ag (uul$ ?v0 )?v1 )?v2 )?v3 )))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Enat_enat_nat_nat_prod_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$ak (uui$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ah (case_prod$c ?v0 )(fun_app$al (fun_app$am ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$ak (uui$ ?v0 )?v1 )?v2 )?v3 )))):named a11 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$h (fun_app$i (fun_app$an (uuj$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ah (case_prod$c ?v0 )(fun_app$ao (fun_app$ap ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$an (uuj$ ?v0 )?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 Bool )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (fun_app$aq (uua$ ?v0 )?v1 )?v2 )?v3 )(and ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$aq (uua$ ?v0 )?v1 )?v2 )?v3 )))):named a13 ))
(assert (! (forall ((?v0 Bool )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$ar (uub$ ?v0 )?v1 )?v2 )?v3 )(and ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$ar (uub$ ?v0 )?v1 )?v2 )?v3 )))):named a14 ))
(assert (! (forall ((?v0 Bool )(?v1 Nat_nat_bool_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$h (fun_app$i (fun_app$as (uu$ ?v0 )?v1 )?v2 )?v3 )(and ?v0 (fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$as (uu$ ?v0 )?v1 )?v2 )?v3 )))):named a15 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod_bool_fun$ )(?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$p (uuu$ ?v0 )?v1 )?v2 )?v3 )(fun_app$m ?v0 (fun_app$q (fun_app$r ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$p (uuu$ ?v0 )?v1 )?v2 )?v3 )))):named a16 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$v (fun_app$w (uuq$ ?v0 ?v1 )?v2 )?v3 )(fun_app$x ?v0 (fun_app$v (fun_app$w ?v1 ?v2 )?v3 ))):pattern ((fun_app$v (fun_app$w (uuq$ ?v0 ?v1 )?v2 )?v3 )))):named a17 ))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$ )(?v1 B_llist_b_llist_enat_enat_prod_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (fun_app$y (uuv$ ?v0 )?v1 )?v2 )?v3 )(fun_app$z ?v0 (fun_app$aa (fun_app$ab ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$y (uuv$ ?v0 )?v1 )?v2 )?v3 )))):named a18 ))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$ac (uuo$ ?v0 )?v1 )?v2 )?v3 )(fun_app$z ?v0 (fun_app$v (fun_app$w ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$ac (uuo$ ?v0 )?v1 )?v2 )?v3 )))):named a19 ))
(assert (! (forall ((?v0 Bool_b_llist_b_llist_prod_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$q (fun_app$r (uus$ ?v0 ?v1 )?v2 )?v3 )(fun_app$at ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$q (fun_app$r (uus$ ?v0 ?v1 )?v2 )?v3 )))):named a20 ))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$aa (fun_app$ab (uut$ ?v0 ?v1 )?v2 )?v3 )(fun_app$au ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$aa (fun_app$ab (uut$ ?v0 ?v1 )?v2 )?v3 )))):named a21 ))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$v (fun_app$w (uun$ ?v0 ?v1 )?v2 )?v3 )(fun_app$au ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$v (fun_app$w (uun$ ?v0 ?v1 )?v2 )?v3 )))):named a22 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist$ )(?v3 B_llist$ ))(! (= (fun_app$ (fun_app$a (fun_app$aq (uup$ ?v0 )?v1 )?v2 )?v3 )(fun_app$av ?v0 (fun_app$ (fun_app$a ?v1 ?v2 )?v3 ))):pattern ((fun_app$ (fun_app$a (fun_app$aq (uup$ ?v0 )?v1 )?v2 )?v3 )))):named a23 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat$ )(?v3 Enat$ ))(! (= (fun_app$d (fun_app$e (fun_app$ar (uum$ ?v0 )?v1 )?v2 )?v3 )(fun_app$av ?v0 (fun_app$d (fun_app$e ?v1 ?v2 )?v3 ))):pattern ((fun_app$d (fun_app$e (fun_app$ar (uum$ ?v0 )?v1 )?v2 )?v3 )))):named a24 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_nat_bool_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$h (fun_app$i (fun_app$as (uur$ ?v0 )?v1 )?v2 )?v3 )(fun_app$av ?v0 (fun_app$h (fun_app$i ?v1 ?v2 )?v3 ))):pattern ((fun_app$h (fun_app$i (fun_app$as (uur$ ?v0 )?v1 )?v2 )?v3 )))):named a25 ))
(assert (! (not (wf$ (inv_image$ (collect$ (case_prod$b less$ ))llength$ ))):named a26 ))
(assert (! (wf$a (collect$ (case_prod$b less$ ))):named a27 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$ )(?v1 Nat_b_llist_fun$ ))(=> (wf$ ?v0 )(wf$b (inv_image$a ?v0 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 Enat_enat_prod_set$ )(?v1 Nat_enat_fun$ ))(=> (wf$a ?v0 )(wf$b (inv_image$b ?v0 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 Nat_nat_prod_set$ )(?v1 B_llist_nat_fun$ ))(=> (wf$b ?v0 )(wf$ (inv_image$c ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 Nat_nat_prod_set$ )(?v1 Enat_nat_fun$ ))(=> (wf$b ?v0 )(wf$a (inv_image$d ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 Nat_nat_prod_set$ )(?v1 Nat_nat_fun$ ))(=> (wf$b ?v0 )(wf$b (inv_image$e ?v0 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$ )(?v1 B_llist_b_llist_fun$ ))(=> (wf$ ?v0 )(wf$ (inv_image$f ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod_set$ )(?v1 Enat_b_llist_fun$ ))(=> (wf$ ?v0 )(wf$a (inv_image$g ?v0 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 Enat_enat_prod_set$ )(?v1 Enat_enat_fun$ ))(=> (wf$a ?v0 )(wf$a (inv_image$h ?v0 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 Enat_enat_prod_set$ )(?v1 B_llist_enat_fun$ ))(=> (wf$a ?v0 )(wf$ (inv_image$ ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 Bool )(?v1 Nat_nat_bool_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$ah (case_prod$c (fun_app$as (uu$ ?v0 )?v1 ))?v2 )(and ?v0 (fun_app$ah (case_prod$c ?v1 )?v2 )))):named a37 ))
(assert (! (forall ((?v0 Bool )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist_b_llist_prod$ ))(= (fun_app$m (case_prod$ (fun_app$aq (uua$ ?v0 )?v1 ))?v2 )(and ?v0 (fun_app$m (case_prod$ ?v1 )?v2 )))):named a38 ))
(assert (! (forall ((?v0 Bool )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$z (case_prod$b (fun_app$ar (uub$ ?v0 )?v1 ))?v2 )(and ?v0 (fun_app$z (case_prod$b ?v1 )?v2 )))):named a39 ))
(assert (! (wf$b (collect$a (case_prod$c less$a ))):named a40 ))
(assert (! (wf$a (collect$ (case_prod$b less$ ))):named a41 ))
(assert (! (forall ((?v0 B_llist$ )(?v1 B_llist$ ))(=> (fun_app$ (lstrict_prefix$ ?v0 )?v1 )(fun_app$d (fun_app$e less$ (fun_app$aw llength$ ?v0 ))(fun_app$aw llength$ ?v1 )))):named a42 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$z (case_prod$b ?v0 )(fun_app$x (case_prod$a ?v1 )?v2 ))(fun_app$z (case_prod$b (fun_app$ac (uuc$ ?v0 )?v1 ))?v2 ))):named a43 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 B_llist_b_llist_enat_enat_prod_fun_fun$ )(?v2 B_llist_b_llist_prod$ ))(= (fun_app$z (case_prod$b ?v0 )(case_prod$d ?v1 ?v2 ))(fun_app$m (case_prod$ (fun_app$y (uud$ ?v0 )?v1 ))?v2 ))):named a44 ))
(assert (! (forall ((?v0 Enat_enat_enat_enat_prod_fun_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$x (case_prod$a ?v0 )(fun_app$x (case_prod$a ?v1 )?v2 ))(fun_app$x (case_prod$a (uue$ ?v0 ?v1 ))?v2 ))):named a45 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$m (case_prod$ ?v0 )(case_prod$e ?v1 ?v2 ))(fun_app$z (case_prod$b (fun_app$p (uuf$ ?v0 )?v1 ))?v2 ))):named a46 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ )(?v2 B_llist_b_llist_prod$ ))(= (fun_app$m (case_prod$ ?v0 )(case_prod$f ?v1 ?v2 ))(fun_app$m (case_prod$ (fun_app$l (uug$ ?v0 )?v1 ))?v2 ))):named a47 ))
(assert (! (forall ((?v0 Enat_enat_bool_fun_fun$ )(?v1 Nat_nat_enat_enat_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$z (case_prod$b ?v0 )(case_prod$g ?v1 ?v2 ))(fun_app$ah (case_prod$c (fun_app$ad (uuh$ ?v0 )?v1 ))?v2 ))):named a48 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Enat_enat_nat_nat_prod_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$ah (case_prod$c ?v0 )(case_prod$h ?v1 ?v2 ))(fun_app$z (case_prod$b (fun_app$ak (uui$ ?v0 )?v1 ))?v2 ))):named a49 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 Nat_nat_nat_nat_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$ah (case_prod$c ?v0 )(case_prod$i ?v1 ?v2 ))(fun_app$ah (case_prod$c (fun_app$an (uuj$ ?v0 )?v1 ))?v2 ))):named a50 ))
(assert (! (forall ((?v0 B_llist_b_llist_bool_fun_fun$ )(?v1 Nat_nat_b_llist_b_llist_prod_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$m (case_prod$ ?v0 )(case_prod$j ?v1 ?v2 ))(fun_app$ah (case_prod$c (fun_app$s (uuk$ ?v0 )?v1 ))?v2 ))):named a51 ))
(assert (! (forall ((?v0 Nat_nat_bool_fun_fun$ )(?v1 B_llist_b_llist_nat_nat_prod_fun_fun$ )(?v2 B_llist_b_llist_prod$ ))(= (fun_app$ah (case_prod$c ?v0 )(case_prod$k ?v1 ?v2 ))(fun_app$m (case_prod$ (fun_app$ag (uul$ ?v0 )?v1 ))?v2 ))):named a52 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$av ?v0 (fun_app$z (case_prod$b ?v1 )?v2 ))(fun_app$z (case_prod$b (fun_app$ar (uum$ ?v0 )?v1 ))?v2 ))):named a53 ))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$au ?v0 (fun_app$z (case_prod$b ?v1 )?v2 ))(fun_app$x (case_prod$a (uun$ ?v0 ?v1 ))?v2 ))):named a54 ))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$z ?v0 (fun_app$x (case_prod$a ?v1 )?v2 ))(fun_app$z (case_prod$b (fun_app$ac (uuo$ ?v0 )?v1 ))?v2 ))):named a55 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist_b_llist_prod$ ))(= (fun_app$av ?v0 (fun_app$m (case_prod$ ?v1 )?v2 ))(fun_app$m (case_prod$ (fun_app$aq (uup$ ?v0 )?v1 ))?v2 ))):named a56 ))
(assert (! (forall ((?v0 Enat_enat_prod_enat_enat_prod_fun$ )(?v1 Enat_enat_enat_enat_prod_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$x ?v0 (fun_app$x (case_prod$a ?v1 )?v2 ))(fun_app$x (case_prod$a (uuq$ ?v0 ?v1 ))?v2 ))):named a57 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Nat_nat_bool_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (fun_app$av ?v0 (fun_app$ah (case_prod$c ?v1 )?v2 ))(fun_app$ah (case_prod$c (fun_app$as (uur$ ?v0 )?v1 ))?v2 ))):named a58 ))
(assert (! (forall ((?v0 Bool_b_llist_b_llist_prod_fun$ )(?v1 Enat_enat_bool_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$at ?v0 (fun_app$z (case_prod$b ?v1 )?v2 ))(case_prod$e (uus$ ?v0 ?v1 )?v2 ))):named a59 ))
(assert (! (forall ((?v0 Bool_enat_enat_prod_fun$ )(?v1 B_llist_b_llist_bool_fun_fun$ )(?v2 B_llist_b_llist_prod$ ))(= (fun_app$au ?v0 (fun_app$m (case_prod$ ?v1 )?v2 ))(case_prod$d (uut$ ?v0 ?v1 )?v2 ))):named a60 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod_bool_fun$ )(?v1 Enat_enat_b_llist_b_llist_prod_fun_fun$ )(?v2 Enat_enat_prod$ ))(= (fun_app$m ?v0 (case_prod$e ?v1 ?v2 ))(fun_app$z (case_prod$b (fun_app$p (uuu$ ?v0 )?v1 ))?v2 ))):named a61 ))
(assert (! (forall ((?v0 Enat_enat_prod_bool_fun$ )(?v1 B_llist_b_llist_enat_enat_prod_fun_fun$ )(?v2 B_llist_b_llist_prod$ ))(= (fun_app$z ?v0 (case_prod$d ?v1 ?v2 ))(fun_app$m (case_prod$ (fun_app$y (uuv$ ?v0 )?v1 ))?v2 ))):named a62 ))
(assert (! (forall ((?v0 Enat_bool_fun$ )(?v1 Enat$ ))(=> (forall ((?v2 Enat$ ))(=> (forall ((?v3 Enat$ ))(=> (fun_app$d (fun_app$e less$ ?v3 )?v2 )(fun_app$d ?v0 ?v3 )))(fun_app$d ?v0 ?v2 )))(fun_app$d ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod$ )(?v2 Nat_nat_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$ah (case_prod$c ?v2 )?v0 )(fun_app$ah (case_prod$c ?v2 )?v1 )))):named a64 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ )(?v1 B_llist_b_llist_prod$ )(?v2 B_llist_b_llist_b_llist_b_llist_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$f ?v2 ?v0 )(case_prod$f ?v2 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_prod$ )(?v2 Enat_enat_b_llist_b_llist_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$e ?v2 ?v0 )(case_prod$e ?v2 ?v1 )))):named a66 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ )(?v1 B_llist_b_llist_prod$ )(?v2 B_llist_b_llist_enat_enat_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (case_prod$d ?v2 ?v0 )(case_prod$d ?v2 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_prod$ )(?v2 Enat_enat_enat_enat_prod_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$x (case_prod$a ?v2 )?v0 )(fun_app$x (case_prod$a ?v2 )?v1 )))):named a68 ))
(assert (! (forall ((?v0 B_llist_b_llist_prod$ )(?v1 B_llist_b_llist_prod$ )(?v2 B_llist_b_llist_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$m (case_prod$ ?v2 )?v0 )(fun_app$m (case_prod$ ?v2 )?v1 )))):named a69 ))
(assert (! (forall ((?v0 Enat_enat_prod$ )(?v1 Enat_enat_prod$ )(?v2 Enat_enat_bool_fun_fun$ ))(=> (= ?v0 ?v1 )(= (fun_app$z (case_prod$b ?v2 )?v0 )(fun_app$z (case_prod$b ?v2 )?v1 )))):named a70 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (not (= ?v0 ?v1 ))(or (fun_app$h (fun_app$i less$a ?v0 )?v1 )(fun_app$h (fun_app$i less$a ?v1 )?v0 )))):named a71 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (not (= ?v0 ?v1 ))(or (fun_app$d (fun_app$e less$ ?v0 )?v1 )(fun_app$d (fun_app$e less$ ?v1 )?v0 )))):named a72 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (not (fun_app$h (fun_app$i less$a ?v0 )?v1 ))(or (fun_app$h (fun_app$i less$a ?v1 )?v0 )(= ?v0 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(= (not (fun_app$d (fun_app$e less$ ?v0 )?v1 ))(or (fun_app$d (fun_app$e less$ ?v1 )?v0 )(= ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(=> (and (=> (fun_app$h (fun_app$i less$a ?v0 )?v1 )false )(and (=> (= ?v0 ?v1 )false )(=> (fun_app$h (fun_app$i less$a ?v1 )?v0 )false )))false )):named a75 ))
(assert (! (forall ((?v0 Enat$ )(?v1 Enat$ ))(=> (and (=> (fun_app$d (fun_app$e less$ ?v0 )?v1 )false )(and (=> (= ?v0 ?v1 )false )(=> (fun_app$d (fun_app$e less$ ?v1 )?v0 )false )))false )):named a76 ))
(assert (! (forall ((?v0 Nat_bool_fun$ )(?v1 Nat_nat_fun$ )(?v2 Nat_nat_fun$ ))(=> (forall ((?v3 Nat$ ))(=> (fun_app$h ?v0 ?v3 )(fun_app$h (fun_app$i less$a (fun_app$k ?v1 (fun_app$k ?v2 ?v3 )))(fun_app$k ?v1 ?v3 ))))(wf$b (collect$a (case_prod$c (fun_app$j (uuw$ ?v0 )?v2 )))))):named a77 ))
(assert (! (forall ((?v0 B_llist_bool_fun$ )(?v1 B_llist_nat_fun$ )(?v2 B_llist_b_llist_fun$ ))(=> (forall ((?v3 B_llist$ ))(=> (fun_app$ ?v0 ?v3 )(fun_app$h (fun_app$i less$a (fun_app$ax ?v1 (fun_app$c ?v2 ?v3 )))(fun_app$ax ?v1 ?v3 ))))(wf$ (collect$b (case_prod$ (fun_app$b (uux$ ?v0 )?v2 )))))):named a78 ))
(assert (! (forall ((?v0 Enat_bool_fun$ )(?v1 Enat_nat_fun$ )(?v2 Enat_enat_fun$ ))(=> (forall ((?v3 Enat$ ))(=> (fun_app$d ?v0 ?v3 )(fun_app$h (fun_app$i less$a (fun_app$ay ?v1 (fun_app$g ?v2 ?v3 )))(fun_app$ay ?v1 ?v3 ))))(wf$a (collect$ (case_prod$b (fun_app$f (uuy$ ?v0 )?v2 )))))):named a79 ))
(assert (! (forall ((?v0 Nat$ ))(not (fun_app$h (fun_app$i less$a ?v0 )?v0 ))):named a80 ))
(assert (! (forall ((?v0 Enat$ ))(not (fun_app$d (fun_app$e less$ ?v0 )?v0 ))):named a81 ))
(assert (! (forall ((?v0 Nat$ ))(not (fun_app$h (fun_app$i less$a ?v0 )?v0 ))):named a82 ))
(assert (! (forall ((?v0 Enat$ ))(not (fun_app$d (fun_app$e less$ ?v0 )?v0 ))):named a83 ))
(check-sat )
;(get-unsat-core )
