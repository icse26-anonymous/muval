;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_llist_a_fun$ 0 )
(declare-sort A_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_a_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_stream_bool_fun$ 0 )
(declare-sort A_llist_a_llist_fun$ 0 )
(declare-sort A_a_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_a_prod_a_fun_fun$ 0 )
(declare-sort A_a_prod_a_a_fun_fun$ 0 )
(declare-sort A_llist_a_stream_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_a_prod_stream_bool_fun$ 0 )
(declare-sort A_a_a_a_prod_prod_a_fun_fun$ 0 )
(declare-sort A_a_a_prod_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_a_prod_a_prod_a_fun_fun$ 0 )
(declare-sort A_a_prod_a_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_a_fun_fun$ 0 )
(declare-sort A_a_prod_llist_a_a_prod_fun$ 0 )
(declare-sort A_a_prod_stream_a_a_prod_fun$ 0 )
(declare-sort A_a_a_prod_prod_stream_bool_fun$ 0 )
(declare-sort A_a_prod_a_prod_stream_bool_fun$ 0 )
(declare-sort A_a_prod_llist_a_a_prod_llist_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_a_a_prod_fun_fun$ 0 )
(declare-sort A_a_prod_llist_a_a_prod_stream_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_a_a_prod_prod_a_a_a_prod_prod_fun$ 0 )
(declare-sort A_a_prod_a_prod_a_a_prod_a_prod_fun$ 0 )
(declare-sort A_a_prod_stream_a_a_prod_stream_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_stream_bool_fun$ 0 )
(declare-sort A_stream_bool_fun_a_stream_bool_fun_fun$ 0 )
(declare-sort A_a_prod_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_a_a_prod_prod_stream_a_a_a_prod_prod_fun$ 0 )
(declare-sort A_a_prod_a_prod_stream_a_a_prod_a_prod_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_a_a_prod_stream_a_a_prod_stream_fun_fun$ 0 )
(declare-sort A_a_a_prod_prod_stream_a_a_a_prod_prod_stream_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_a_a_prod_a_a_prod_prod_fun$ 0 )
(declare-sort A_a_prod_a_prod_stream_a_a_prod_a_prod_stream_fun$ 0 )
(declare-sort A_a_prod_stream_bool_fun_a_a_prod_stream_bool_fun_fun$ 0 )
(declare-sort A_a_prod_stream_a_a_prod_stream_a_a_prod_stream_fun_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_stream_fun$ 0 )
(declare-sort A_a_a_prod_prod_stream_bool_fun_a_a_a_prod_prod_stream_bool_fun_fun$ 0 )
(declare-sort A_a_prod_a_prod_stream_bool_fun_a_a_prod_a_prod_stream_bool_fun_fun$ 0 )
(declare-sort A_a_prod_stream_a_a_prod_stream_fun_a_a_prod_stream_a_a_prod_stream_fun_fun$ 0 )
(declare-sort A_a_prod_a_a_prod_prod_stream_bool_fun_a_a_prod_a_a_prod_prod_stream_bool_fun_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))(A_llist$ (lNil$ )(lCons$ (lhd$ A$ )(ltl$ A_llist$ )))))
(declare-sort A_a_prod$ 0)
(declare-sort A_a_prod_a_a_prod_prod$ 0)
(declare-fun fst$ (A_a_prod$)A$)
(declare-fun snd$ (A_a_prod$)A$)
(declare-fun pair$ (A$ A$ )A_a_prod$)
(declare-fun fst$a (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun snd$a (A_a_prod_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$a (A_a_prod$ A_a_prod$ )A_a_prod_a_a_prod_prod$)
(declare-codatatypes ()((A_a_prod_a_a_prod_prod_stream$ (sCons$a (shd$a A_a_prod_a_a_prod_prod$ )(stl$a A_a_prod_a_a_prod_prod_stream$ )))(A_a_prod_a_a_prod_prod_llist$ (lNil$a )(lCons$a (lhd$a A_a_prod_a_a_prod_prod$ )(ltl$a A_a_prod_a_a_prod_prod_llist$ )))))
(declare-sort A_a_prod_a_prod$ 0)
(declare-fun fst$b (A_a_prod_a_prod$)A_a_prod$)
(declare-fun snd$b (A_a_prod_a_prod$)A$)
(declare-fun pair$b (A_a_prod$ A$ )A_a_prod_a_prod$)
(declare-codatatypes ()((A_a_prod_a_prod_stream$ (sCons$b (shd$b A_a_prod_a_prod$ )(stl$b A_a_prod_a_prod_stream$ )))(A_a_prod_a_prod_llist$ (lNil$b )(lCons$b (lhd$b A_a_prod_a_prod$ )(ltl$b A_a_prod_a_prod_llist$ )))))
(declare-sort A_a_a_prod_prod$ 0)
(declare-fun fst$c (A_a_a_prod_prod$)A$)
(declare-fun snd$c (A_a_a_prod_prod$)A_a_prod$)
(declare-fun pair$c (A$ A_a_prod$ )A_a_a_prod_prod$)
(declare-codatatypes ()((A_a_a_prod_prod_stream$ (sCons$c (shd$c A_a_a_prod_prod$ )(stl$c A_a_a_prod_prod_stream$ )))(A_a_a_prod_prod_llist$ (lNil$c )(lCons$c (lhd$c A_a_a_prod_prod$ )(ltl$c A_a_a_prod_prod_llist$ )))(A_a_prod_stream$ (sCons$d (shd$d A_a_prod$ )(stl$d A_a_prod_stream$ )))(A_a_prod_llist$ (lNil$d )(lCons$d (lhd$d A_a_prod$ )(ltl$d A_a_prod_llist$ )))))
(declare-sort A_a_a_prod_a_prod_prod$ 0)
(declare-fun fst$d (A_a_a_prod_a_prod_prod$)A$)
(declare-fun snd$d (A_a_a_prod_a_prod_prod$)A_a_prod_a_prod$)
(declare-fun pair$d (A$ A_a_prod_a_prod$ )A_a_a_prod_a_prod_prod$)
(declare-codatatypes ()((A_a_a_prod_a_prod_prod_stream$ (sCons$e (shd$e A_a_a_prod_a_prod_prod$ )(stl$e A_a_a_prod_a_prod_prod_stream$ )))))
(declare-sort A_a_a_a_prod_prod_prod$ 0)
(declare-fun fst$e (A_a_a_a_prod_prod_prod$)A$)
(declare-fun snd$e (A_a_a_a_prod_prod_prod$)A_a_a_prod_prod$)
(declare-fun pair$e (A$ A_a_a_prod_prod$ )A_a_a_a_prod_prod_prod$)
(declare-codatatypes ()((A_a_a_a_prod_prod_prod_stream$ (sCons$f (shd$f A_a_a_a_prod_prod_prod$ )(stl$f A_a_a_a_prod_prod_prod_stream$ )))))
(declare-sort A_a_prod_a_prod_a_prod$ 0)
(declare-fun fst$f (A_a_prod_a_prod_a_prod$)A_a_prod_a_prod$)
(declare-fun snd$f (A_a_prod_a_prod_a_prod$)A$)
(declare-fun pair$f (A_a_prod_a_prod$ A$ )A_a_prod_a_prod_a_prod$)
(declare-codatatypes ()((A_a_prod_a_prod_a_prod_stream$ (sCons$g (shd$g A_a_prod_a_prod_a_prod$ )(stl$g A_a_prod_a_prod_a_prod_stream$ )))))
(declare-sort A_a_a_prod_prod_a_prod$ 0)
(declare-fun fst$g (A_a_a_prod_prod_a_prod$)A_a_a_prod_prod$)
(declare-fun snd$g (A_a_a_prod_prod_a_prod$)A$)
(declare-fun pair$g (A_a_a_prod_prod$ A$ )A_a_a_prod_prod_a_prod$)
(declare-codatatypes ()((A_a_a_prod_prod_a_prod_stream$ (sCons$h (shd$h A_a_a_prod_prod_a_prod$ )(stl$h A_a_a_prod_prod_a_prod_stream$ )))))
(declare-sort A_a_a_prod_a_a_prod_prod_prod$ 0)
(declare-fun fst$h (A_a_a_prod_a_a_prod_prod_prod$)A$)
(declare-fun snd$h (A_a_a_prod_a_a_prod_prod_prod$)A_a_prod_a_a_prod_prod$)
(declare-fun pair$h (A$ A_a_prod_a_a_prod_prod$ )A_a_a_prod_a_a_prod_prod_prod$)
(declare-codatatypes ()((A_a_a_prod_a_a_prod_prod_prod_stream$ (sCons$i (shd$i A_a_a_prod_a_a_prod_prod_prod$ )(stl$i A_a_a_prod_a_a_prod_prod_prod_stream$ )))))
(declare-sort A_a_prod_a_a_prod_a_prod_prod$ 0)
(declare-fun fst$i (A_a_prod_a_a_prod_a_prod_prod$)A_a_prod$)
(declare-fun snd$i (A_a_prod_a_a_prod_a_prod_prod$)A_a_prod_a_prod$)
(declare-fun pair$i (A_a_prod$ A_a_prod_a_prod$ )A_a_prod_a_a_prod_a_prod_prod$)
(declare-codatatypes ()((A_a_prod_a_a_prod_a_prod_prod_stream$ (sCons$j (shd$j A_a_prod_a_a_prod_a_prod_prod$ )(stl$j A_a_prod_a_a_prod_a_prod_prod_stream$ )))))
(declare-fun uu$ ()A_a_prod_llist_a_a_prod_fun$ )
(declare-fun xs$ ()A_llist$ )
(declare-fun uua$ ()A_a_prod_llist_a_a_prod_llist_fun$ )
(declare-fun uub$ ()A_llist_a_fun$ )
(declare-fun uuc$ ()A_llist_a_llist_fun$ )
(declare-fun uud$ ()A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_fun$ )
(declare-fun uue$ ()A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_stream_fun$ )
(declare-fun uuf$ ()A_a_prod_a_prod_stream_a_a_prod_a_prod_fun$ )
(declare-fun uug$ ()A_a_prod_a_prod_stream_a_a_prod_a_prod_stream_fun$ )
(declare-fun uuh$ ()A_a_a_prod_prod_stream_a_a_a_prod_prod_fun$ )
(declare-fun uui$ ()A_a_a_prod_prod_stream_a_a_a_prod_prod_stream_fun$ )
(declare-fun uuj$ ()A_a_prod_stream_a_a_prod_fun$ )
(declare-fun uuk$ ()A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun uul$ ()A_stream_a_fun$ )
(declare-fun uum$ ()A_stream_a_stream_fun$ )
(declare-fun snth$ (A_a_prod_stream$ Nat$ )A_a_prod$ )
(declare-fun szip$ (A_stream$ A_stream$ )A_a_prod_stream$ )
(declare-fun lnull$ (A_a_prod_llist$ )Bool )
(declare-fun sdrop$ (Nat$ )A_stream_a_stream_fun$ )
(declare-fun smap2$ (A_a_a_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun snth$a (A_stream$ Nat$ )A$ )
(declare-fun szip$a (A_stream$ A_a_prod_stream$ )A_a_a_prod_prod_stream$ )
(declare-fun szip$b (A_a_prod_stream$ A_stream$ )A_a_prod_a_prod_stream$ )
(declare-fun szip$c (A_a_prod_stream$ A_a_prod_stream$ )A_a_prod_a_a_prod_prod_stream$ )
(declare-fun szip$d (A_stream$ A_a_prod_a_prod_stream$ )A_a_a_prod_a_prod_prod_stream$ )
(declare-fun szip$e (A_stream$ A_a_a_prod_prod_stream$ )A_a_a_a_prod_prod_prod_stream$ )
(declare-fun szip$f (A_a_prod_a_prod_stream$ A_stream$ )A_a_prod_a_prod_a_prod_stream$ )
(declare-fun szip$g (A_a_a_prod_prod_stream$ A_stream$ )A_a_a_prod_prod_a_prod_stream$ )
(declare-fun szip$h (A_stream$ A_a_prod_a_a_prod_prod_stream$ )A_a_a_prod_a_a_prod_prod_prod_stream$ )
(declare-fun szip$i (A_a_prod_stream$ A_a_prod_a_prod_stream$ )A_a_prod_a_a_prod_a_prod_prod_stream$ )
(declare-fun until$ (A_a_prod_a_a_prod_prod_stream_bool_fun$ )A_a_prod_a_a_prod_prod_stream_bool_fun_a_a_prod_a_a_prod_prod_stream_bool_fun_fun$ )
(declare-fun lnull$a (A_llist$ )Bool )
(declare-fun sdrop$a (Nat$ )A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun sdrop$b (Nat$ A_a_a_prod_prod_stream$ )A_a_a_prod_prod_stream$ )
(declare-fun sdrop$c (Nat$ A_a_prod_a_prod_stream$ )A_a_prod_a_prod_stream$ )
(declare-fun sdrop$d (Nat$ A_a_prod_a_a_prod_prod_stream$ )A_a_prod_a_a_prod_prod_stream$ )
(declare-fun smap2$a (A_a_a_prod_a_fun_fun$ A_stream$ A_a_prod_stream$ )A_stream$ )
(declare-fun smap2$b (A_a_prod_a_a_fun_fun$ )A_a_prod_stream_a_stream_a_stream_fun_fun$ )
(declare-fun smap2$c (A_a_a_a_prod_fun_fun$ A_stream$ A_stream$ )A_a_prod_stream$ )
(declare-fun smap2$d (A_a_prod_a_a_prod_a_fun_fun$ A_a_prod_stream$ A_a_prod_stream$ )A_stream$ )
(declare-fun smap2$e (A_a_a_prod_a_a_prod_fun_fun$ )A_stream_a_a_prod_stream_a_a_prod_stream_fun_fun$ )
(declare-fun smap2$f (A_a_prod_a_a_a_prod_fun_fun$ A_a_prod_stream$ A_stream$ )A_a_prod_stream$ )
(declare-fun smap2$g (A_a_prod_a_a_prod_a_a_prod_fun_fun$ )A_a_prod_stream_a_a_prod_stream_a_a_prod_stream_fun_fun$ )
(declare-fun smap2$h (A_a_a_prod_a_prod_a_fun_fun$ A_stream$ A_a_prod_a_prod_stream$ )A_stream$ )
(declare-fun smap2$i (A_a_a_a_prod_prod_a_fun_fun$ A_stream$ A_a_a_prod_prod_stream$ )A_stream$ )
(declare-fun suntil$ (A_a_prod_a_a_prod_prod_stream_bool_fun$ )A_a_prod_a_a_prod_prod_stream_bool_fun_a_a_prod_a_a_prod_prod_stream_bool_fun_fun$ )
(declare-fun until$a (A_a_prod_a_prod_stream_bool_fun$ )A_a_prod_a_prod_stream_bool_fun_a_a_prod_a_prod_stream_bool_fun_fun$ )
(declare-fun until$b (A_a_a_prod_prod_stream_bool_fun$ )A_a_a_prod_prod_stream_bool_fun_a_a_a_prod_prod_stream_bool_fun_fun$ )
(declare-fun until$c (A_a_prod_stream_bool_fun$ )A_a_prod_stream_bool_fun_a_a_prod_stream_bool_fun_fun$ )
(declare-fun until$d (A_stream_bool_fun$ )A_stream_bool_fun_a_stream_bool_fun_fun$ )
(declare-fun fun_app$ (A_a_prod_llist_a_a_prod_llist_fun$ A_a_prod_llist$ )A_a_prod_llist$ )
(declare-fun suntil$a (A_a_prod_a_prod_stream_bool_fun$ )A_a_prod_a_prod_stream_bool_fun_a_a_prod_a_prod_stream_bool_fun_fun$ )
(declare-fun suntil$b (A_a_a_prod_prod_stream_bool_fun$ )A_a_a_prod_prod_stream_bool_fun_a_a_a_prod_prod_stream_bool_fun_fun$ )
(declare-fun suntil$c (A_a_prod_stream_bool_fun$ )A_a_prod_stream_bool_fun_a_a_prod_stream_bool_fun_fun$ )
(declare-fun suntil$d (A_stream_bool_fun$ )A_stream_bool_fun_a_stream_bool_fun_fun$ )
(declare-fun fun_app$a (A_llist_a_llist_fun$ A_llist$ )A_llist$ )
(declare-fun fun_app$b (A_a_prod_llist_a_a_prod_fun$ A_a_prod_llist$ )A_a_prod$ )
(declare-fun fun_app$c (A_llist_a_fun$ A_llist$ )A$ )
(declare-fun fun_app$d (A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_stream_fun$ A_a_prod_a_a_prod_prod_stream$ )A_a_prod_a_a_prod_prod_stream$ )
(declare-fun fun_app$e (A_a_prod_a_prod_stream_a_a_prod_a_prod_stream_fun$ A_a_prod_a_prod_stream$ )A_a_prod_a_prod_stream$ )
(declare-fun fun_app$f (A_a_a_prod_prod_stream_a_a_a_prod_prod_stream_fun$ A_a_a_prod_prod_stream$ )A_a_a_prod_prod_stream$ )
(declare-fun fun_app$g (A_a_prod_stream_a_a_prod_stream_fun$ A_a_prod_stream$ )A_a_prod_stream$ )
(declare-fun fun_app$h (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$i (A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_fun$ A_a_prod_a_a_prod_prod_stream$ )A_a_prod_a_a_prod_prod$ )
(declare-fun fun_app$j (A_a_prod_a_prod_stream_a_a_prod_a_prod_fun$ A_a_prod_a_prod_stream$ )A_a_prod_a_prod$ )
(declare-fun fun_app$k (A_a_a_prod_prod_stream_a_a_a_prod_prod_fun$ A_a_a_prod_prod_stream$ )A_a_a_prod_prod$ )
(declare-fun fun_app$l (A_a_prod_stream_a_a_prod_fun$ A_a_prod_stream$ )A_a_prod$ )
(declare-fun fun_app$m (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$n (A_llist_a_stream_fun$ A_llist$ )A_stream$ )
(declare-fun fun_app$o (A_a_prod_stream_a_a_prod_stream_fun_a_a_prod_stream_a_a_prod_stream_fun_fun$ A_a_prod_stream_a_a_prod_stream_fun$ )A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun fun_app$p (A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$q (A_stream_a_stream_a_stream_fun_fun$ A_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$r (A_a_prod_stream_a_stream_a_stream_fun_fun$ A_a_prod_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$s (A_stream_a_a_prod_stream_a_a_prod_stream_fun_fun$ A_stream$ )A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun fun_app$t (A_a_prod_stream_a_a_prod_stream_a_a_prod_stream_fun_fun$ A_a_prod_stream$ )A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun fun_app$u (A_a_prod_a_a_prod_prod_stream_bool_fun$ A_a_prod_a_a_prod_prod_stream$ )Bool )
(declare-fun fun_app$v (A_a_prod_a_a_prod_prod_stream_bool_fun_a_a_prod_a_a_prod_prod_stream_bool_fun_fun$ A_a_prod_a_a_prod_prod_stream_bool_fun$ )A_a_prod_a_a_prod_prod_stream_bool_fun$ )
(declare-fun fun_app$w (A_a_prod_a_prod_stream_bool_fun$ A_a_prod_a_prod_stream$ )Bool )
(declare-fun fun_app$x (A_a_prod_a_prod_stream_bool_fun_a_a_prod_a_prod_stream_bool_fun_fun$ A_a_prod_a_prod_stream_bool_fun$ )A_a_prod_a_prod_stream_bool_fun$ )
(declare-fun fun_app$y (A_a_a_prod_prod_stream_bool_fun$ A_a_a_prod_prod_stream$ )Bool )
(declare-fun fun_app$z (A_a_a_prod_prod_stream_bool_fun_a_a_a_prod_prod_stream_bool_fun_fun$ A_a_a_prod_prod_stream_bool_fun$ )A_a_a_prod_prod_stream_bool_fun$ )
(declare-fun siterate$ (A_a_prod_a_a_prod_prod_a_a_prod_a_a_prod_prod_fun$ A_a_prod_a_a_prod_prod$ )A_a_prod_a_a_prod_prod_stream$ )
(declare-fun fun_app$aa (A_a_prod_stream_bool_fun$ A_a_prod_stream$ )Bool )
(declare-fun fun_app$ab (A_a_prod_stream_bool_fun_a_a_prod_stream_bool_fun_fun$ A_a_prod_stream_bool_fun$ )A_a_prod_stream_bool_fun$ )
(declare-fun fun_app$ac (A_stream_bool_fun$ A_stream$ )Bool )
(declare-fun fun_app$ad (A_stream_bool_fun_a_stream_bool_fun_fun$ A_stream_bool_fun$ )A_stream_bool_fun$ )
(declare-fun fun_app$ae (A_a_a_prod_fun$ A$ )A_a_prod$ )
(declare-fun fun_app$af (A_a_prod_a_a_a_prod_fun_fun$ A_a_prod$ )A_a_a_prod_fun$ )
(declare-fun fun_app$ag (A_a_fun$ A$ )A$ )
(declare-fun fun_app$ah (A_a_prod_a_a_fun_fun$ A_a_prod$ )A_a_fun$ )
(declare-fun fun_app$ai (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod$ )
(declare-fun fun_app$aj (A_a_a_prod_a_a_prod_fun_fun$ A$ )A_a_prod_a_a_prod_fun$ )
(declare-fun fun_app$ak (A_a_prod_a_fun$ A_a_prod$ )A$ )
(declare-fun fun_app$al (A_a_a_prod_a_fun_fun$ A$ )A_a_prod_a_fun$ )
(declare-fun fun_app$am (A_a_a_a_prod_fun_fun$ A$ )A_a_a_prod_fun$ )
(declare-fun fun_app$an (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$ao (A_a_prod_a_a_prod_prod_a_a_prod_a_a_prod_prod_fun$ A_a_prod_a_a_prod_prod$ )A_a_prod_a_a_prod_prod$ )
(declare-fun fun_app$ap (A_a_prod_a_prod_a_a_prod_a_prod_fun$ A_a_prod_a_prod$ )A_a_prod_a_prod$ )
(declare-fun fun_app$aq (A_a_a_prod_prod_a_a_a_prod_prod_fun$ A_a_a_prod_prod$ )A_a_a_prod_prod$ )
(declare-fun siterate$a (A_a_prod_a_prod_a_a_prod_a_prod_fun$ A_a_prod_a_prod$ )A_a_prod_a_prod_stream$ )
(declare-fun siterate$b (A_a_a_prod_prod_a_a_a_prod_prod_fun$ A_a_a_prod_prod$ )A_a_a_prod_prod_stream$ )
(declare-fun siterate$c (A_a_prod_a_a_prod_fun$ A_a_prod$ )A_a_prod_stream$ )
(declare-fun siterate$d (A_a_fun$ A$ )A_stream$ )
(declare-fun sinterleave$ (A_a_prod_a_a_prod_prod_stream$ A_a_prod_a_a_prod_prod_stream$ )A_a_prod_a_a_prod_prod_stream$ )
(declare-fun sinterleave$a (A_a_prod_a_prod_stream$ A_a_prod_a_prod_stream$ )A_a_prod_a_prod_stream$ )
(declare-fun sinterleave$b (A_a_a_prod_prod_stream$ A_a_a_prod_prod_stream$ )A_a_a_prod_prod_stream$ )
(declare-fun sinterleave$c (A_a_prod_stream$ )A_a_prod_stream_a_a_prod_stream_fun$ )
(declare-fun sinterleave$d (A_stream$ )A_stream_a_stream_fun$ )
(declare-fun unfold_stream$ (A_a_prod_llist_a_a_prod_fun$ A_a_prod_llist_a_a_prod_llist_fun$ )A_a_prod_llist_a_a_prod_stream_fun$ )
(declare-fun unfold_stream$a (A_llist_a_fun$ A_llist_a_llist_fun$ )A_llist_a_stream_fun$ )
(declare-fun unfold_stream$b (A_a_prod_stream_a_a_prod_fun$ )A_a_prod_stream_a_a_prod_stream_fun_a_a_prod_stream_a_a_prod_stream_fun_fun$ )
(declare-fun unfold_stream$c (A_stream_a_fun$ )A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun unfold_stream$d (A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_fun$ A_a_prod_a_a_prod_prod_stream_a_a_prod_a_a_prod_prod_stream_fun$ A_a_prod_a_a_prod_prod_stream$ )A_a_prod_a_a_prod_prod_stream$ )
(declare-fun unfold_stream$e (A_a_prod_a_prod_stream_a_a_prod_a_prod_fun$ A_a_prod_a_prod_stream_a_a_prod_a_prod_stream_fun$ A_a_prod_a_prod_stream$ )A_a_prod_a_prod_stream$ )
(declare-fun unfold_stream$f (A_a_a_prod_prod_stream_a_a_a_prod_prod_fun$ A_a_a_prod_prod_stream_a_a_a_prod_prod_stream_fun$ A_a_a_prod_prod_stream$ )A_a_a_prod_prod_stream$ )
(declare-fun llist_of_stream$ (A_a_prod_a_a_prod_prod_stream$ )A_a_prod_a_a_prod_prod_llist$ )
(declare-fun stream_of_llist$ ()A_llist_a_stream_fun$ )
(declare-fun llist_of_stream$a (A_a_prod_a_prod_stream$ )A_a_prod_a_prod_llist$ )
(declare-fun llist_of_stream$b (A_a_a_prod_prod_stream$ )A_a_a_prod_prod_llist$ )
(declare-fun llist_of_stream$c (A_a_prod_stream$ )A_a_prod_llist$ )
(declare-fun llist_of_stream$d (A_stream$ )A_llist$ )
(declare-fun stream_of_llist$a ()A_a_prod_llist_a_a_prod_stream_fun$ )
(assert (! (forall ((?v0 A_a_prod_llist$ ))(! (= (fun_app$ uua$ ?v0 )(ltl$d ?v0 )):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$a uuc$ ?v0 )(ltl$ ?v0 )):pattern ((fun_app$a uuc$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_a_prod_llist$ ))(! (= (fun_app$b uu$ ?v0 )(lhd$d ?v0 )):pattern ((fun_app$b uu$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A_llist$ ))(! (= (fun_app$c uub$ ?v0 )(lhd$ ?v0 )):pattern ((fun_app$c uub$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream$ ))(! (= (fun_app$d uue$ ?v0 )(stl$a ?v0 )):pattern ((fun_app$d uue$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream$ ))(! (= (fun_app$e uug$ ?v0 )(stl$b ?v0 )):pattern ((fun_app$e uug$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream$ ))(! (= (fun_app$f uui$ ?v0 )(stl$c ?v0 )):pattern ((fun_app$f uui$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 A_a_prod_stream$ ))(! (= (fun_app$g uuk$ ?v0 )(stl$d ?v0 )):pattern ((fun_app$g uuk$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 A_stream$ ))(! (= (fun_app$h uum$ ?v0 )(stl$ ?v0 )):pattern ((fun_app$h uum$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream$ ))(! (= (fun_app$i uud$ ?v0 )(shd$a ?v0 )):pattern ((fun_app$i uud$ ?v0 )))):named a9 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream$ ))(! (= (fun_app$j uuf$ ?v0 )(shd$b ?v0 )):pattern ((fun_app$j uuf$ ?v0 )))):named a10 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream$ ))(! (= (fun_app$k uuh$ ?v0 )(shd$c ?v0 )):pattern ((fun_app$k uuh$ ?v0 )))):named a11 ))
(assert (! (forall ((?v0 A_a_prod_stream$ ))(! (= (fun_app$l uuj$ ?v0 )(shd$d ?v0 )):pattern ((fun_app$l uuj$ ?v0 )))):named a12 ))
(assert (! (forall ((?v0 A_stream$ ))(! (= (fun_app$m uul$ ?v0 )(shd$ ?v0 )):pattern ((fun_app$m uul$ ?v0 )))):named a13 ))
(assert (! (not (= (stl$ (fun_app$n stream_of_llist$ xs$ ))(fun_app$n stream_of_llist$ (ltl$ xs$ )))):named a14 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream$ ))(= (ltl$a (llist_of_stream$ ?v0 ))(llist_of_stream$ (stl$a ?v0 )))):named a15 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream$ ))(= (ltl$b (llist_of_stream$a ?v0 ))(llist_of_stream$a (stl$b ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream$ ))(= (ltl$c (llist_of_stream$b ?v0 ))(llist_of_stream$b (stl$c ?v0 )))):named a17 ))
(assert (! (forall ((?v0 A_a_prod_stream$ ))(= (ltl$d (llist_of_stream$c ?v0 ))(llist_of_stream$c (stl$d ?v0 )))):named a18 ))
(assert (! (forall ((?v0 A_stream$ ))(= (ltl$ (llist_of_stream$d ?v0 ))(llist_of_stream$d (stl$ ?v0 )))):named a19 ))
(assert (! (= stream_of_llist$a (unfold_stream$ uu$ uua$ )):named a20 ))
(assert (! (= stream_of_llist$ (unfold_stream$a uub$ uuc$ )):named a21 ))
(assert (! (forall ((?v0 A_a_prod_stream_a_a_prod_fun$ )(?v1 A_a_prod_stream_a_a_prod_stream_fun$ )(?v2 A_a_prod_stream$ ))(= (stl$d (fun_app$g (fun_app$o (unfold_stream$b ?v0 )?v1 )?v2 ))(fun_app$g (fun_app$o (unfold_stream$b ?v0 )?v1 )(fun_app$g ?v1 ?v2 )))):named a22 ))
(assert (! (forall ((?v0 A_llist_a_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ ))(= (stl$ (fun_app$n (unfold_stream$a ?v0 ?v1 )?v2 ))(fun_app$n (unfold_stream$a ?v0 ?v1 )(fun_app$a ?v1 ?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ ))(= (stl$ (fun_app$h (fun_app$p (unfold_stream$c ?v0 )?v1 )?v2 ))(fun_app$h (fun_app$p (unfold_stream$c ?v0 )?v1 )(fun_app$h ?v1 ?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream$ )(?v1 A_a_prod_a_a_prod_prod_stream$ ))(= (stl$a (sinterleave$ ?v0 ?v1 ))(sinterleave$ ?v1 (stl$a ?v0 )))):named a25 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream$ )(?v1 A_a_prod_a_prod_stream$ ))(= (stl$b (sinterleave$a ?v0 ?v1 ))(sinterleave$a ?v1 (stl$b ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream$ )(?v1 A_a_a_prod_prod_stream$ ))(= (stl$c (sinterleave$b ?v0 ?v1 ))(sinterleave$b ?v1 (stl$c ?v0 )))):named a27 ))
(assert (! (forall ((?v0 A_a_prod_stream$ )(?v1 A_a_prod_stream$ ))(= (stl$d (fun_app$g (sinterleave$c ?v0 )?v1 ))(fun_app$g (sinterleave$c ?v1 )(stl$d ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (stl$ (fun_app$h (sinterleave$d ?v0 )?v1 ))(fun_app$h (sinterleave$d ?v1 )(stl$ ?v0 )))):named a29 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (stl$ (fun_app$h (fun_app$q (smap2$ ?v0 )?v1 )?v2 ))(fun_app$h (fun_app$q (smap2$ ?v0 )(stl$ ?v1 ))(stl$ ?v2 )))):named a30 ))
(assert (! (forall ((?v0 A_a_a_prod_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_prod_stream$ ))(= (stl$ (smap2$a ?v0 ?v1 ?v2 ))(smap2$a ?v0 (stl$ ?v1 )(stl$d ?v2 )))):named a31 ))
(assert (! (forall ((?v0 A_a_prod_a_a_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_stream$ ))(= (stl$ (fun_app$h (fun_app$r (smap2$b ?v0 )?v1 )?v2 ))(fun_app$h (fun_app$r (smap2$b ?v0 )(stl$d ?v1 ))(stl$ ?v2 )))):named a32 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (stl$d (smap2$c ?v0 ?v1 ?v2 ))(smap2$c ?v0 (stl$ ?v1 )(stl$ ?v2 )))):named a33 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_a_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod_stream$ ))(= (stl$ (smap2$d ?v0 ?v1 ?v2 ))(smap2$d ?v0 (stl$d ?v1 )(stl$d ?v2 )))):named a34 ))
(assert (! (forall ((?v0 A_a_a_prod_a_a_prod_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_prod_stream$ ))(= (stl$d (fun_app$g (fun_app$s (smap2$e ?v0 )?v1 )?v2 ))(fun_app$g (fun_app$s (smap2$e ?v0 )(stl$ ?v1 ))(stl$d ?v2 )))):named a35 ))
(assert (! (forall ((?v0 A_a_prod_a_a_a_prod_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_stream$ ))(= (stl$d (smap2$f ?v0 ?v1 ?v2 ))(smap2$f ?v0 (stl$d ?v1 )(stl$ ?v2 )))):named a36 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_a_a_prod_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod_stream$ ))(= (stl$d (fun_app$g (fun_app$t (smap2$g ?v0 )?v1 )?v2 ))(fun_app$g (fun_app$t (smap2$g ?v0 )(stl$d ?v1 ))(stl$d ?v2 )))):named a37 ))
(assert (! (forall ((?v0 A_a_a_prod_a_prod_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_prod_a_prod_stream$ ))(= (stl$ (smap2$h ?v0 ?v1 ?v2 ))(smap2$h ?v0 (stl$ ?v1 )(stl$b ?v2 )))):named a38 ))
(assert (! (forall ((?v0 A_a_a_a_prod_prod_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_a_prod_prod_stream$ ))(= (stl$ (smap2$i ?v0 ?v1 ?v2 ))(smap2$i ?v0 (stl$ ?v1 )(stl$c ?v2 )))):named a39 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_prod_a_a_prod_prod_stream$ ))(= (fun_app$u (fun_app$v (until$ ?v0 )?v1 )?v2 )(or (exists ((?v3 A_a_prod_a_a_prod_prod_stream$ ))(and (= ?v2 ?v3 )(fun_app$u ?v1 ?v3 )))(exists ((?v3 A_a_prod_a_a_prod_prod_stream$ ))(and (= ?v2 ?v3 )(and (fun_app$u ?v0 ?v3 )(fun_app$u (fun_app$v (until$ ?v0 )?v1 )(stl$a ?v3 )))))))):named a40 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream_bool_fun$ )(?v1 A_a_prod_a_prod_stream_bool_fun$ )(?v2 A_a_prod_a_prod_stream$ ))(= (fun_app$w (fun_app$x (until$a ?v0 )?v1 )?v2 )(or (exists ((?v3 A_a_prod_a_prod_stream$ ))(and (= ?v2 ?v3 )(fun_app$w ?v1 ?v3 )))(exists ((?v3 A_a_prod_a_prod_stream$ ))(and (= ?v2 ?v3 )(and (fun_app$w ?v0 ?v3 )(fun_app$w (fun_app$x (until$a ?v0 )?v1 )(stl$b ?v3 )))))))):named a41 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_a_prod_prod_stream$ ))(= (fun_app$y (fun_app$z (until$b ?v0 )?v1 )?v2 )(or (exists ((?v3 A_a_a_prod_prod_stream$ ))(and (= ?v2 ?v3 )(fun_app$y ?v1 ?v3 )))(exists ((?v3 A_a_a_prod_prod_stream$ ))(and (= ?v2 ?v3 )(and (fun_app$y ?v0 ?v3 )(fun_app$y (fun_app$z (until$b ?v0 )?v1 )(stl$c ?v3 )))))))):named a42 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod_stream$ ))(= (fun_app$aa (fun_app$ab (until$c ?v0 )?v1 )?v2 )(or (exists ((?v3 A_a_prod_stream$ ))(and (= ?v2 ?v3 )(fun_app$aa ?v1 ?v3 )))(exists ((?v3 A_a_prod_stream$ ))(and (= ?v2 ?v3 )(and (fun_app$aa ?v0 ?v3 )(fun_app$aa (fun_app$ab (until$c ?v0 )?v1 )(stl$d ?v3 )))))))):named a43 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A_stream$ ))(= (fun_app$ac (fun_app$ad (until$d ?v0 )?v1 )?v2 )(or (exists ((?v3 A_stream$ ))(and (= ?v2 ?v3 )(fun_app$ac ?v1 ?v3 )))(exists ((?v3 A_stream$ ))(and (= ?v2 ?v3 )(and (fun_app$ac ?v0 ?v3 )(fun_app$ac (fun_app$ad (until$d ?v0 )?v1 )(stl$ ?v3 )))))))):named a44 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_prod_a_a_prod_prod_stream$ ))(=> (and (fun_app$u (fun_app$v (until$ ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_prod_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$u ?v1 ?v3 ))false ))(forall ((?v3 A_a_prod_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$u ?v0 ?v3 )(fun_app$u (fun_app$v (until$ ?v0 )?v1 )(stl$a ?v3 ))))false ))))false )):named a45 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream_bool_fun$ )(?v1 A_a_prod_a_prod_stream_bool_fun$ )(?v2 A_a_prod_a_prod_stream$ ))(=> (and (fun_app$w (fun_app$x (until$a ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_prod_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$w ?v1 ?v3 ))false ))(forall ((?v3 A_a_prod_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$w ?v0 ?v3 )(fun_app$w (fun_app$x (until$a ?v0 )?v1 )(stl$b ?v3 ))))false ))))false )):named a46 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_a_prod_prod_stream$ ))(=> (and (fun_app$y (fun_app$z (until$b ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$y ?v1 ?v3 ))false ))(forall ((?v3 A_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$y ?v0 ?v3 )(fun_app$y (fun_app$z (until$b ?v0 )?v1 )(stl$c ?v3 ))))false ))))false )):named a47 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod_stream$ ))(=> (and (fun_app$aa (fun_app$ab (until$c ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$aa ?v1 ?v3 ))false ))(forall ((?v3 A_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$aa ?v0 ?v3 )(fun_app$aa (fun_app$ab (until$c ?v0 )?v1 )(stl$d ?v3 ))))false ))))false )):named a48 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A_stream$ ))(=> (and (fun_app$ac (fun_app$ad (until$d ?v0 )?v1 )?v2 )(and (forall ((?v3 A_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$ac ?v1 ?v3 ))false ))(forall ((?v3 A_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$ac ?v0 ?v3 )(fun_app$ac (fun_app$ad (until$d ?v0 )?v1 )(stl$ ?v3 ))))false ))))false )):named a49 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_prod_a_a_prod_prod_stream$ )(?v2 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v3 A_a_prod_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$u ?v0 ?v1 )(forall ((?v4 A_a_prod_a_a_prod_prod_stream$ ))(=> (fun_app$u ?v0 ?v4 )(or (exists ((?v5 A_a_prod_a_a_prod_prod_stream$ ))(and (= ?v4 ?v5 )(fun_app$u ?v2 ?v5 )))(exists ((?v5 A_a_prod_a_a_prod_prod_stream$ ))(and (= ?v4 ?v5 )(and (fun_app$u ?v3 ?v5 )(or (fun_app$u ?v0 (stl$a ?v5 ))(fun_app$u (fun_app$v (until$ ?v3 )?v2 )(stl$a ?v5 ))))))))))(fun_app$u (fun_app$v (until$ ?v3 )?v2 )?v1 ))):named a50 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream_bool_fun$ )(?v1 A_a_prod_a_prod_stream$ )(?v2 A_a_prod_a_prod_stream_bool_fun$ )(?v3 A_a_prod_a_prod_stream_bool_fun$ ))(=> (and (fun_app$w ?v0 ?v1 )(forall ((?v4 A_a_prod_a_prod_stream$ ))(=> (fun_app$w ?v0 ?v4 )(or (exists ((?v5 A_a_prod_a_prod_stream$ ))(and (= ?v4 ?v5 )(fun_app$w ?v2 ?v5 )))(exists ((?v5 A_a_prod_a_prod_stream$ ))(and (= ?v4 ?v5 )(and (fun_app$w ?v3 ?v5 )(or (fun_app$w ?v0 (stl$b ?v5 ))(fun_app$w (fun_app$x (until$a ?v3 )?v2 )(stl$b ?v5 ))))))))))(fun_app$w (fun_app$x (until$a ?v3 )?v2 )?v1 ))):named a51 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_a_prod_prod_stream$ )(?v2 A_a_a_prod_prod_stream_bool_fun$ )(?v3 A_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$y ?v0 ?v1 )(forall ((?v4 A_a_a_prod_prod_stream$ ))(=> (fun_app$y ?v0 ?v4 )(or (exists ((?v5 A_a_a_prod_prod_stream$ ))(and (= ?v4 ?v5 )(fun_app$y ?v2 ?v5 )))(exists ((?v5 A_a_a_prod_prod_stream$ ))(and (= ?v4 ?v5 )(and (fun_app$y ?v3 ?v5 )(or (fun_app$y ?v0 (stl$c ?v5 ))(fun_app$y (fun_app$z (until$b ?v3 )?v2 )(stl$c ?v5 ))))))))))(fun_app$y (fun_app$z (until$b ?v3 )?v2 )?v1 ))):named a52 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod_stream_bool_fun$ )(?v3 A_a_prod_stream_bool_fun$ ))(=> (and (fun_app$aa ?v0 ?v1 )(forall ((?v4 A_a_prod_stream$ ))(=> (fun_app$aa ?v0 ?v4 )(or (exists ((?v5 A_a_prod_stream$ ))(and (= ?v4 ?v5 )(fun_app$aa ?v2 ?v5 )))(exists ((?v5 A_a_prod_stream$ ))(and (= ?v4 ?v5 )(and (fun_app$aa ?v3 ?v5 )(or (fun_app$aa ?v0 (stl$d ?v5 ))(fun_app$aa (fun_app$ab (until$c ?v3 )?v2 )(stl$d ?v5 ))))))))))(fun_app$aa (fun_app$ab (until$c ?v3 )?v2 )?v1 ))):named a53 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_bool_fun$ )(?v3 A_stream_bool_fun$ ))(=> (and (fun_app$ac ?v0 ?v1 )(forall ((?v4 A_stream$ ))(=> (fun_app$ac ?v0 ?v4 )(or (exists ((?v5 A_stream$ ))(and (= ?v4 ?v5 )(fun_app$ac ?v2 ?v5 )))(exists ((?v5 A_stream$ ))(and (= ?v4 ?v5 )(and (fun_app$ac ?v3 ?v5 )(or (fun_app$ac ?v0 (stl$ ?v5 ))(fun_app$ac (fun_app$ad (until$d ?v3 )?v2 )(stl$ ?v5 ))))))))))(fun_app$ac (fun_app$ad (until$d ?v3 )?v2 )?v1 ))):named a54 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_prod_a_a_prod_prod_stream$ )(?v2 A_a_prod_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$u ?v0 ?v1 )(fun_app$u (fun_app$v (until$ ?v0 )?v2 )(stl$a ?v1 )))(fun_app$u (fun_app$v (until$ ?v0 )?v2 )?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream_bool_fun$ )(?v1 A_a_prod_a_prod_stream$ )(?v2 A_a_prod_a_prod_stream_bool_fun$ ))(=> (and (fun_app$w ?v0 ?v1 )(fun_app$w (fun_app$x (until$a ?v0 )?v2 )(stl$b ?v1 )))(fun_app$w (fun_app$x (until$a ?v0 )?v2 )?v1 ))):named a56 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_a_prod_prod_stream$ )(?v2 A_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$y ?v0 ?v1 )(fun_app$y (fun_app$z (until$b ?v0 )?v2 )(stl$c ?v1 )))(fun_app$y (fun_app$z (until$b ?v0 )?v2 )?v1 ))):named a57 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod_stream_bool_fun$ ))(=> (and (fun_app$aa ?v0 ?v1 )(fun_app$aa (fun_app$ab (until$c ?v0 )?v2 )(stl$d ?v1 )))(fun_app$aa (fun_app$ab (until$c ?v0 )?v2 )?v1 ))):named a58 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_bool_fun$ ))(=> (and (fun_app$ac ?v0 ?v1 )(fun_app$ac (fun_app$ad (until$d ?v0 )?v2 )(stl$ ?v1 )))(fun_app$ac (fun_app$ad (until$d ?v0 )?v2 )?v1 ))):named a59 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod_stream_bool_fun$ )(?v4 A_a_prod_stream_bool_fun$ ))(=> (and (fun_app$aa (fun_app$ab (until$c ?v0 )?v1 )?v2 )(and (forall ((?v5 A_a_prod_stream$ ))(=> (fun_app$aa ?v0 ?v5 )(fun_app$aa ?v3 ?v5 )))(forall ((?v5 A_a_prod_stream$ ))(=> (fun_app$aa ?v1 ?v5 )(fun_app$aa ?v4 ?v5 )))))(fun_app$aa (fun_app$ab (until$c ?v3 )?v4 )?v2 ))):named a60 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A_stream$ )(?v3 A_stream_bool_fun$ )(?v4 A_stream_bool_fun$ ))(=> (and (fun_app$ac (fun_app$ad (until$d ?v0 )?v1 )?v2 )(and (forall ((?v5 A_stream$ ))(=> (fun_app$ac ?v0 ?v5 )(fun_app$ac ?v3 ?v5 )))(forall ((?v5 A_stream$ ))(=> (fun_app$ac ?v1 ?v5 )(fun_app$ac ?v4 ?v5 )))))(fun_app$ac (fun_app$ad (until$d ?v3 )?v4 )?v2 ))):named a61 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod_stream_bool_fun$ ))(=> (and (fun_app$aa (fun_app$ab (until$c ?v0 )?v1 )?v2 )(forall ((?v4 A_a_prod_stream$ ))(=> (fun_app$aa ?v1 ?v4 )(fun_app$aa ?v3 ?v4 ))))(fun_app$aa (fun_app$ab (until$c ?v0 )?v3 )?v2 ))):named a62 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A_stream$ )(?v3 A_stream_bool_fun$ ))(=> (and (fun_app$ac (fun_app$ad (until$d ?v0 )?v1 )?v2 )(forall ((?v4 A_stream$ ))(=> (fun_app$ac ?v1 ?v4 )(fun_app$ac ?v3 ?v4 ))))(fun_app$ac (fun_app$ad (until$d ?v0 )?v3 )?v2 ))):named a63 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod_stream_bool_fun$ ))(=> (and (fun_app$aa (fun_app$ab (until$c ?v0 )?v1 )?v2 )(forall ((?v4 A_a_prod_stream$ ))(=> (fun_app$aa ?v0 ?v4 )(fun_app$aa ?v3 ?v4 ))))(fun_app$aa (fun_app$ab (until$c ?v3 )?v1 )?v2 ))):named a64 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A_stream$ )(?v3 A_stream_bool_fun$ ))(=> (and (fun_app$ac (fun_app$ad (until$d ?v0 )?v1 )?v2 )(forall ((?v4 A_stream$ ))(=> (fun_app$ac ?v0 ?v4 )(fun_app$ac ?v3 ?v4 ))))(fun_app$ac (fun_app$ad (until$d ?v3 )?v1 )?v2 ))):named a65 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod_stream_bool_fun$ ))(=> (fun_app$aa ?v0 ?v1 )(fun_app$aa (fun_app$ab (until$c ?v2 )?v0 )?v1 ))):named a66 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_bool_fun$ ))(=> (fun_app$ac ?v0 ?v1 )(fun_app$ac (fun_app$ad (until$d ?v2 )?v0 )?v1 ))):named a67 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_prod_a_a_prod_a_fun_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod_stream$ ))(= (fun_app$h (sdrop$ ?v0 )(smap2$d ?v1 ?v2 ?v3 ))(smap2$d ?v1 (fun_app$g (sdrop$a ?v0 )?v2 )(fun_app$g (sdrop$a ?v0 )?v3 )))):named a68 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_prod_a_a_prod_a_a_prod_fun_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod_stream$ ))(= (fun_app$g (sdrop$a ?v0 )(fun_app$g (fun_app$t (smap2$g ?v1 )?v2 )?v3 ))(fun_app$g (fun_app$t (smap2$g ?v1 )(fun_app$g (sdrop$a ?v0 )?v2 ))(fun_app$g (sdrop$a ?v0 )?v3 )))):named a69 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_prod_a_a_a_prod_fun_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_stream$ ))(= (fun_app$g (sdrop$a ?v0 )(smap2$f ?v1 ?v2 ?v3 ))(smap2$f ?v1 (fun_app$g (sdrop$a ?v0 )?v2 )(fun_app$h (sdrop$ ?v0 )?v3 )))):named a70 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_prod_a_a_fun_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_stream$ ))(= (fun_app$h (sdrop$ ?v0 )(fun_app$h (fun_app$r (smap2$b ?v1 )?v2 )?v3 ))(fun_app$h (fun_app$r (smap2$b ?v1 )(fun_app$g (sdrop$a ?v0 )?v2 ))(fun_app$h (sdrop$ ?v0 )?v3 )))):named a71 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_prod_a_a_prod_fun_fun$ )(?v2 A_stream$ )(?v3 A_a_prod_stream$ ))(= (fun_app$g (sdrop$a ?v0 )(fun_app$g (fun_app$s (smap2$e ?v1 )?v2 )?v3 ))(fun_app$g (fun_app$s (smap2$e ?v1 )(fun_app$h (sdrop$ ?v0 )?v2 ))(fun_app$g (sdrop$a ?v0 )?v3 )))):named a72 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_prod_a_fun_fun$ )(?v2 A_stream$ )(?v3 A_a_prod_stream$ ))(= (fun_app$h (sdrop$ ?v0 )(smap2$a ?v1 ?v2 ?v3 ))(smap2$a ?v1 (fun_app$h (sdrop$ ?v0 )?v2 )(fun_app$g (sdrop$a ?v0 )?v3 )))):named a73 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_a_prod_fun_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (fun_app$g (sdrop$a ?v0 )(smap2$c ?v1 ?v2 ?v3 ))(smap2$c ?v1 (fun_app$h (sdrop$ ?v0 )?v2 )(fun_app$h (sdrop$ ?v0 )?v3 )))):named a74 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_a_fun_fun$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (fun_app$h (sdrop$ ?v0 )(fun_app$h (fun_app$q (smap2$ ?v1 )?v2 )?v3 ))(fun_app$h (fun_app$q (smap2$ ?v1 )(fun_app$h (sdrop$ ?v0 )?v2 ))(fun_app$h (sdrop$ ?v0 )?v3 )))):named a75 ))
(assert (! (forall ((?v0 A_a_prod_a_a_a_prod_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_stream$ )(?v3 Nat$ ))(= (snth$ (smap2$f ?v0 ?v1 ?v2 )?v3 )(fun_app$ae (fun_app$af ?v0 (snth$ ?v1 ?v3 ))(snth$a ?v2 ?v3 )))):named a76 ))
(assert (! (forall ((?v0 A_a_prod_a_a_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_stream$ )(?v3 Nat$ ))(= (snth$a (fun_app$h (fun_app$r (smap2$b ?v0 )?v1 )?v2 )?v3 )(fun_app$ag (fun_app$ah ?v0 (snth$ ?v1 ?v3 ))(snth$a ?v2 ?v3 )))):named a77 ))
(assert (! (forall ((?v0 A_a_a_prod_a_a_prod_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_prod_stream$ )(?v3 Nat$ ))(= (snth$ (fun_app$g (fun_app$s (smap2$e ?v0 )?v1 )?v2 )?v3 )(fun_app$ai (fun_app$aj ?v0 (snth$a ?v1 ?v3 ))(snth$ ?v2 ?v3 )))):named a78 ))
(assert (! (forall ((?v0 A_a_a_prod_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_prod_stream$ )(?v3 Nat$ ))(= (snth$a (smap2$a ?v0 ?v1 ?v2 )?v3 )(fun_app$ak (fun_app$al ?v0 (snth$a ?v1 ?v3 ))(snth$ ?v2 ?v3 )))):named a79 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 Nat$ ))(= (snth$ (smap2$c ?v0 ?v1 ?v2 )?v3 )(fun_app$ae (fun_app$am ?v0 (snth$a ?v1 ?v3 ))(snth$a ?v2 ?v3 )))):named a80 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 Nat$ ))(= (snth$a (fun_app$h (fun_app$q (smap2$ ?v0 )?v1 )?v2 )?v3 )(fun_app$ag (fun_app$an ?v0 (snth$a ?v1 ?v3 ))(snth$a ?v2 ?v3 )))):named a81 ))
(assert (! (forall ((?v0 A_a_prod_stream$ ))(not (lnull$ (llist_of_stream$c ?v0 )))):named a82 ))
(assert (! (forall ((?v0 A_stream$ ))(not (lnull$a (llist_of_stream$d ?v0 )))):named a83 ))
(assert (! (forall ((?v0 A_a_prod_stream_a_a_prod_fun$ )(?v1 A_a_prod_stream_a_a_prod_stream_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod$ )(?v4 A_a_prod_stream$ ))(= (= (fun_app$g (fun_app$o (unfold_stream$b ?v0 )?v1 )?v2 )(sCons$d ?v3 ?v4 ))(and (= ?v3 (fun_app$l ?v0 ?v2 ))(= ?v4 (fun_app$g (fun_app$o (unfold_stream$b ?v0 )?v1 )(fun_app$g ?v1 ?v2 )))))):named a84 ))
(assert (! (forall ((?v0 A_llist_a_fun$ )(?v1 A_llist_a_llist_fun$ )(?v2 A_llist$ )(?v3 A$ )(?v4 A_stream$ ))(= (= (fun_app$n (unfold_stream$a ?v0 ?v1 )?v2 )(sCons$ ?v3 ?v4 ))(and (= ?v3 (fun_app$c ?v0 ?v2 ))(= ?v4 (fun_app$n (unfold_stream$a ?v0 ?v1 )(fun_app$a ?v1 ?v2 )))))):named a85 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_a_stream_fun$ )(?v2 A_stream$ )(?v3 A$ )(?v4 A_stream$ ))(= (= (fun_app$h (fun_app$p (unfold_stream$c ?v0 )?v1 )?v2 )(sCons$ ?v3 ?v4 ))(and (= ?v3 (fun_app$m ?v0 ?v2 ))(= ?v4 (fun_app$h (fun_app$p (unfold_stream$c ?v0 )?v1 )(fun_app$h ?v1 ?v2 )))))):named a86 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (stl$d (szip$ ?v0 ?v1 ))(szip$ (stl$ ?v0 )(stl$ ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_prod_stream$ ))(= (stl$c (szip$a ?v0 ?v1 ))(szip$a (stl$ ?v0 )(stl$d ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_a_prod_stream$ )(?v1 A_stream$ ))(= (stl$b (szip$b ?v0 ?v1 ))(szip$b (stl$d ?v0 )(stl$ ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_a_prod_stream$ )(?v1 A_a_prod_stream$ ))(= (stl$a (szip$c ?v0 ?v1 ))(szip$c (stl$d ?v0 )(stl$d ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_prod_a_prod_stream$ ))(= (stl$e (szip$d ?v0 ?v1 ))(szip$d (stl$ ?v0 )(stl$b ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_a_prod_prod_stream$ ))(= (stl$f (szip$e ?v0 ?v1 ))(szip$e (stl$ ?v0 )(stl$c ?v1 )))):named a92 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream$ )(?v1 A_stream$ ))(= (stl$g (szip$f ?v0 ?v1 ))(szip$f (stl$b ?v0 )(stl$ ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream$ )(?v1 A_stream$ ))(= (stl$h (szip$g ?v0 ?v1 ))(szip$g (stl$c ?v0 )(stl$ ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_a_prod_a_a_prod_prod_stream$ ))(= (stl$i (szip$h ?v0 ?v1 ))(szip$h (stl$ ?v0 )(stl$a ?v1 )))):named a95 ))
(assert (! (forall ((?v0 A_a_prod_stream$ )(?v1 A_a_prod_a_prod_stream$ ))(= (stl$j (szip$i ?v0 ?v1 ))(szip$i (stl$d ?v0 )(stl$b ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A_a_prod_a_a_a_prod_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_stream$ )(?v3 A_a_prod_stream$ ))(= (= (smap2$f ?v0 ?v1 ?v2 )?v3 )(forall ((?v4 Nat$ ))(= (fun_app$ae (fun_app$af ?v0 (snth$ ?v1 ?v4 ))(snth$a ?v2 ?v4 ))(snth$ ?v3 ?v4 ))))):named a97 ))
(assert (! (forall ((?v0 A_a_prod_a_a_fun_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (= (fun_app$h (fun_app$r (smap2$b ?v0 )?v1 )?v2 )?v3 )(forall ((?v4 Nat$ ))(= (fun_app$ag (fun_app$ah ?v0 (snth$ ?v1 ?v4 ))(snth$a ?v2 ?v4 ))(snth$a ?v3 ?v4 ))))):named a98 ))
(assert (! (forall ((?v0 A_a_a_prod_a_a_prod_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod_stream$ ))(= (= (fun_app$g (fun_app$s (smap2$e ?v0 )?v1 )?v2 )?v3 )(forall ((?v4 Nat$ ))(= (fun_app$ai (fun_app$aj ?v0 (snth$a ?v1 ?v4 ))(snth$ ?v2 ?v4 ))(snth$ ?v3 ?v4 ))))):named a99 ))
(assert (! (forall ((?v0 A_a_a_prod_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_prod_stream$ )(?v3 A_stream$ ))(= (= (smap2$a ?v0 ?v1 ?v2 )?v3 )(forall ((?v4 Nat$ ))(= (fun_app$ak (fun_app$al ?v0 (snth$a ?v1 ?v4 ))(snth$ ?v2 ?v4 ))(snth$a ?v3 ?v4 ))))):named a100 ))
(assert (! (forall ((?v0 A_a_a_a_prod_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_a_prod_stream$ ))(= (= (smap2$c ?v0 ?v1 ?v2 )?v3 )(forall ((?v4 Nat$ ))(= (fun_app$ae (fun_app$am ?v0 (snth$a ?v1 ?v4 ))(snth$a ?v2 ?v4 ))(snth$ ?v3 ?v4 ))))):named a101 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ )(?v3 A_stream$ ))(= (= (fun_app$h (fun_app$q (smap2$ ?v0 )?v1 )?v2 )?v3 )(forall ((?v4 Nat$ ))(= (fun_app$ag (fun_app$an ?v0 (snth$a ?v1 ?v4 ))(snth$a ?v2 ?v4 ))(snth$a ?v3 ?v4 ))))):named a102 ))
(assert (! (forall ((?v0 A_a_prod_stream$ )(?v1 A_a_prod_stream$ ))(= (shd$d (fun_app$g (sinterleave$c ?v0 )?v1 ))(shd$d ?v0 ))):named a103 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (shd$ (fun_app$h (sinterleave$d ?v0 )?v1 ))(shd$ ?v0 ))):named a104 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_prod_a_a_prod_prod_stream$ )(?v2 A_a_prod_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$u ?v0 ?v1 )(fun_app$u (fun_app$v (suntil$ ?v0 )?v2 )(stl$a ?v1 )))(fun_app$u (fun_app$v (suntil$ ?v0 )?v2 )?v1 ))):named a105 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream_bool_fun$ )(?v1 A_a_prod_a_prod_stream$ )(?v2 A_a_prod_a_prod_stream_bool_fun$ ))(=> (and (fun_app$w ?v0 ?v1 )(fun_app$w (fun_app$x (suntil$a ?v0 )?v2 )(stl$b ?v1 )))(fun_app$w (fun_app$x (suntil$a ?v0 )?v2 )?v1 ))):named a106 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_a_prod_prod_stream$ )(?v2 A_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$y ?v0 ?v1 )(fun_app$y (fun_app$z (suntil$b ?v0 )?v2 )(stl$c ?v1 )))(fun_app$y (fun_app$z (suntil$b ?v0 )?v2 )?v1 ))):named a107 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod_stream_bool_fun$ ))(=> (and (fun_app$aa ?v0 ?v1 )(fun_app$aa (fun_app$ab (suntil$c ?v0 )?v2 )(stl$d ?v1 )))(fun_app$aa (fun_app$ab (suntil$c ?v0 )?v2 )?v1 ))):named a108 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream$ )(?v2 A_stream_bool_fun$ ))(=> (and (fun_app$ac ?v0 ?v1 )(fun_app$ac (fun_app$ad (suntil$d ?v0 )?v2 )(stl$ ?v1 )))(fun_app$ac (fun_app$ad (suntil$d ?v0 )?v2 )?v1 ))):named a109 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_prod_a_a_prod_prod_stream$ ))(=> (and (fun_app$u (fun_app$v (suntil$ ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_prod_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$u ?v1 ?v3 ))false ))(forall ((?v3 A_a_prod_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$u ?v0 ?v3 )(fun_app$u (fun_app$v (suntil$ ?v0 )?v1 )(stl$a ?v3 ))))false ))))false )):named a110 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream_bool_fun$ )(?v1 A_a_prod_a_prod_stream_bool_fun$ )(?v2 A_a_prod_a_prod_stream$ ))(=> (and (fun_app$w (fun_app$x (suntil$a ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_prod_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$w ?v1 ?v3 ))false ))(forall ((?v3 A_a_prod_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$w ?v0 ?v3 )(fun_app$w (fun_app$x (suntil$a ?v0 )?v1 )(stl$b ?v3 ))))false ))))false )):named a111 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_a_prod_prod_stream$ ))(=> (and (fun_app$y (fun_app$z (suntil$b ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$y ?v1 ?v3 ))false ))(forall ((?v3 A_a_a_prod_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$y ?v0 ?v3 )(fun_app$y (fun_app$z (suntil$b ?v0 )?v1 )(stl$c ?v3 ))))false ))))false )):named a112 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod_stream$ ))(=> (and (fun_app$aa (fun_app$ab (suntil$c ?v0 )?v1 )?v2 )(and (forall ((?v3 A_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$aa ?v1 ?v3 ))false ))(forall ((?v3 A_a_prod_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$aa ?v0 ?v3 )(fun_app$aa (fun_app$ab (suntil$c ?v0 )?v1 )(stl$d ?v3 ))))false ))))false )):named a113 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A_stream$ ))(=> (and (fun_app$ac (fun_app$ad (suntil$d ?v0 )?v1 )?v2 )(and (forall ((?v3 A_stream$ ))(=> (and (= ?v2 ?v3 )(fun_app$ac ?v1 ?v3 ))false ))(forall ((?v3 A_stream$ ))(=> (and (= ?v2 ?v3 )(and (fun_app$ac ?v0 ?v3 )(fun_app$ac (fun_app$ad (suntil$d ?v0 )?v1 )(stl$ ?v3 ))))false ))))false )):named a114 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_prod_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_prod_a_a_prod_prod_stream$ )(?v3 A_a_prod_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$u (fun_app$v (suntil$ ?v0 )?v1 )?v2 )(and (forall ((?v4 A_a_prod_a_a_prod_prod_stream$ ))(=> (fun_app$u ?v1 ?v4 )(fun_app$u ?v3 ?v4 )))(forall ((?v4 A_a_prod_a_a_prod_prod_stream$ ))(=> (and (fun_app$u ?v0 ?v4 )(and (not (fun_app$u ?v1 ?v4 ))(and (fun_app$u (fun_app$v (suntil$ ?v0 )?v1 )(stl$a ?v4 ))(fun_app$u ?v3 (stl$a ?v4 )))))(fun_app$u ?v3 ?v4 )))))(fun_app$u ?v3 ?v2 ))):named a115 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream_bool_fun$ )(?v1 A_a_prod_a_prod_stream_bool_fun$ )(?v2 A_a_prod_a_prod_stream$ )(?v3 A_a_prod_a_prod_stream_bool_fun$ ))(=> (and (fun_app$w (fun_app$x (suntil$a ?v0 )?v1 )?v2 )(and (forall ((?v4 A_a_prod_a_prod_stream$ ))(=> (fun_app$w ?v1 ?v4 )(fun_app$w ?v3 ?v4 )))(forall ((?v4 A_a_prod_a_prod_stream$ ))(=> (and (fun_app$w ?v0 ?v4 )(and (not (fun_app$w ?v1 ?v4 ))(and (fun_app$w (fun_app$x (suntil$a ?v0 )?v1 )(stl$b ?v4 ))(fun_app$w ?v3 (stl$b ?v4 )))))(fun_app$w ?v3 ?v4 )))))(fun_app$w ?v3 ?v2 ))):named a116 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream_bool_fun$ )(?v1 A_a_a_prod_prod_stream_bool_fun$ )(?v2 A_a_a_prod_prod_stream$ )(?v3 A_a_a_prod_prod_stream_bool_fun$ ))(=> (and (fun_app$y (fun_app$z (suntil$b ?v0 )?v1 )?v2 )(and (forall ((?v4 A_a_a_prod_prod_stream$ ))(=> (fun_app$y ?v1 ?v4 )(fun_app$y ?v3 ?v4 )))(forall ((?v4 A_a_a_prod_prod_stream$ ))(=> (and (fun_app$y ?v0 ?v4 )(and (not (fun_app$y ?v1 ?v4 ))(and (fun_app$y (fun_app$z (suntil$b ?v0 )?v1 )(stl$c ?v4 ))(fun_app$y ?v3 (stl$c ?v4 )))))(fun_app$y ?v3 ?v4 )))))(fun_app$y ?v3 ?v2 ))):named a117 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod_stream$ )(?v3 A_a_prod_stream_bool_fun$ ))(=> (and (fun_app$aa (fun_app$ab (suntil$c ?v0 )?v1 )?v2 )(and (forall ((?v4 A_a_prod_stream$ ))(=> (fun_app$aa ?v1 ?v4 )(fun_app$aa ?v3 ?v4 )))(forall ((?v4 A_a_prod_stream$ ))(=> (and (fun_app$aa ?v0 ?v4 )(and (not (fun_app$aa ?v1 ?v4 ))(and (fun_app$aa (fun_app$ab (suntil$c ?v0 )?v1 )(stl$d ?v4 ))(fun_app$aa ?v3 (stl$d ?v4 )))))(fun_app$aa ?v3 ?v4 )))))(fun_app$aa ?v3 ?v2 ))):named a118 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A_stream$ )(?v3 A_stream_bool_fun$ ))(=> (and (fun_app$ac (fun_app$ad (suntil$d ?v0 )?v1 )?v2 )(and (forall ((?v4 A_stream$ ))(=> (fun_app$ac ?v1 ?v4 )(fun_app$ac ?v3 ?v4 )))(forall ((?v4 A_stream$ ))(=> (and (fun_app$ac ?v0 ?v4 )(and (not (fun_app$ac ?v1 ?v4 ))(and (fun_app$ac (fun_app$ad (suntil$d ?v0 )?v1 )(stl$ ?v4 ))(fun_app$ac ?v3 (stl$ ?v4 )))))(fun_app$ac ?v3 ?v4 )))))(fun_app$ac ?v3 ?v2 ))):named a119 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_a_a_prod_a_a_prod_prod_fun$ )(?v1 A_a_prod_a_a_prod_prod$ ))(= (stl$a (siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$ao ?v0 ?v1 )))):named a120 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_a_a_prod_a_prod_fun$ )(?v1 A_a_prod_a_prod$ ))(= (stl$b (siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$ap ?v0 ?v1 )))):named a121 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_a_a_a_prod_prod_fun$ )(?v1 A_a_a_prod_prod$ ))(= (stl$c (siterate$b ?v0 ?v1 ))(siterate$b ?v0 (fun_app$aq ?v0 ?v1 )))):named a122 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_prod$ ))(= (stl$d (siterate$c ?v0 ?v1 ))(siterate$c ?v0 (fun_app$ai ?v0 ?v1 )))):named a123 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (stl$ (siterate$d ?v0 ?v1 ))(siterate$d ?v0 (fun_app$ag ?v0 ?v1 )))):named a124 ))
(assert (! (forall ((?v0 A_a_prod$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod$ )(?v3 A_a_prod_stream$ ))(= (= (sCons$d ?v0 ?v1 )(sCons$d ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a125 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ )(?v2 A$ )(?v3 A_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a126 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream$ ))(= (unfold_stream$d uud$ uue$ ?v0 )?v0 )):named a127 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream$ ))(= (unfold_stream$e uuf$ uug$ ?v0 )?v0 )):named a128 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream$ ))(= (unfold_stream$f uuh$ uui$ ?v0 )?v0 )):named a129 ))
(assert (! (forall ((?v0 A_a_prod_stream$ ))(= (fun_app$g (fun_app$o (unfold_stream$b uuj$ )uuk$ )?v0 )?v0 )):named a130 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$h (fun_app$p (unfold_stream$c uul$ )uum$ )?v0 )?v0 )):named a131 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ )(?v2 A_a_prod_stream$ ))(= (sdrop$b ?v0 (szip$a ?v1 ?v2 ))(szip$a (fun_app$h (sdrop$ ?v0 )?v1 )(fun_app$g (sdrop$a ?v0 )?v2 )))):named a132 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_prod_stream$ )(?v2 A_stream$ ))(= (sdrop$c ?v0 (szip$b ?v1 ?v2 ))(szip$b (fun_app$g (sdrop$a ?v0 )?v1 )(fun_app$h (sdrop$ ?v0 )?v2 )))):named a133 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_prod_stream$ )(?v2 A_a_prod_stream$ ))(= (sdrop$d ?v0 (szip$c ?v1 ?v2 ))(szip$c (fun_app$g (sdrop$a ?v0 )?v1 )(fun_app$g (sdrop$a ?v0 )?v2 )))):named a134 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (fun_app$g (sdrop$a ?v0 )(szip$ ?v1 ?v2 ))(szip$ (fun_app$h (sdrop$ ?v0 )?v1 )(fun_app$h (sdrop$ ?v0 )?v2 )))):named a135 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_prod_stream$ ))(= (sCons$a (shd$a ?v0 )(stl$a ?v0 ))?v0 )):named a136 ))
(assert (! (forall ((?v0 A_a_prod_a_prod_stream$ ))(= (sCons$b (shd$b ?v0 )(stl$b ?v0 ))?v0 )):named a137 ))
(assert (! (forall ((?v0 A_a_a_prod_prod_stream$ ))(= (sCons$c (shd$c ?v0 )(stl$c ?v0 ))?v0 )):named a138 ))
(assert (! (forall ((?v0 A_a_prod_stream$ ))(= (sCons$d (shd$d ?v0 )(stl$d ?v0 ))?v0 )):named a139 ))
(assert (! (forall ((?v0 A_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a140 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_a_prod_stream$ ))(= (shd$d (fun_app$g (sdrop$a ?v0 )?v1 ))(snth$ ?v1 ?v0 ))):named a141 ))
(assert (! (forall ((?v0 Nat$ )(?v1 A_stream$ ))(= (shd$ (fun_app$h (sdrop$ ?v0 )?v1 ))(snth$a ?v1 ?v0 ))):named a142 ))
(assert (! (forall ((?v0 A_a_prod_stream_bool_fun$ )(?v1 A_a_prod_stream_bool_fun$ )(?v2 A_a_prod$ )(?v3 A_a_prod_stream$ ))(! (= (fun_app$aa (fun_app$ab (suntil$c ?v0 )?v1 )(sCons$d ?v2 ?v3 ))(or (fun_app$aa ?v1 (sCons$d ?v2 ?v3 ))(and (fun_app$aa ?v0 (sCons$d ?v2 ?v3 ))(fun_app$aa (fun_app$ab (suntil$c ?v0 )?v1 )?v3 )))):pattern ((fun_app$aa (fun_app$ab (suntil$c ?v0 )?v1 )(sCons$d ?v2 ?v3 ))))):named a143 ))
(assert (! (forall ((?v0 A_stream_bool_fun$ )(?v1 A_stream_bool_fun$ )(?v2 A$ )(?v3 A_stream$ ))(! (= (fun_app$ac (fun_app$ad (suntil$d ?v0 )?v1 )(sCons$ ?v2 ?v3 ))(or (fun_app$ac ?v1 (sCons$ ?v2 ?v3 ))(and (fun_app$ac ?v0 (sCons$ ?v2 ?v3 ))(fun_app$ac (fun_app$ad (suntil$d ?v0 )?v1 )?v3 )))):pattern ((fun_app$ac (fun_app$ad (suntil$d ?v0 )?v1 )(sCons$ ?v2 ?v3 ))))):named a144 ))
(assert (! (forall ((?v0 A_a_prod_a_a_prod_fun$ )(?v1 A_a_prod$ ))(= (siterate$c ?v0 ?v1 )(sCons$d ?v1 (siterate$c ?v0 (fun_app$ai ?v0 ?v1 ))))):named a145 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (siterate$d ?v0 ?v1 )(sCons$ ?v1 (siterate$d ?v0 (fun_app$ag ?v0 ?v1 ))))):named a146 ))
(check-sat )
;(get-unsat-core )
