;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))))
(declare-fun xs$ ()A_stream$ )
(declare-fun sset$ (A_stream$ )A_set$ )
(declare-fun member$ (A$ A_set$ )Bool )
(declare-fun collect$ (A_bool_fun$ )A_set$ )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun less_eq$ (A_set$ A_set$ )Bool )
(assert (! (not (less_eq$ (sset$ (stl$ xs$ ))(sset$ xs$ ))):named a0 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (forall ((?v2 A$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a1 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a2 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$ ?v0 ?v0 )):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A_stream$ ))(=> (member$ ?v0 (sset$ (stl$ ?v1 )))(member$ ?v0 (sset$ ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (= ?v0 ?v1 )(and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 )))):named a5 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 A$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a6 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 A$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a7 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(=> (forall ((?v2 A$ ))(=> (fun_app$ ?v0 ?v2 )(fun_app$ ?v1 ?v2 )))(less_eq$ (collect$ ?v0 )(collect$ ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (and (= ?v0 ?v1 )(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))false ))false )):named a9 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (= ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))):named a10 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(=> (= ?v0 ?v1 )(less_eq$ ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (member$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(member$ ?v0 ?v2 ))):named a12 ))
(assert (! (forall ((?v0 A_set$ ))(less_eq$ ?v0 ?v0 )):named a13 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ ))(! (=> (less_eq$ ?v0 ?v1 )(= (less_eq$ ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$ ?v1 ?v0 )))):named a14 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A_set$ )(?v2 A_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less_eq$ ?v0 ?v2 ))):named a15 ))
(check-sat )
;(get-unsat-core )
