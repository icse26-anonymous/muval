;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Node$ 0 )
(declare-sort Node_set$ 0 )
(declare-sort Node_node_bool_fun_fun$ 0 )
(declare-codatatypes ()((Node_llist$ (lNil$ )(lCons$ (lhd$ Node$ )(ltl$ Node_llist$ )))))
(declare-sort Node_node_set_prod$ 0)
(declare-fun fst$ (Node_node_set_prod$)Node$)
(declare-fun snd$ (Node_node_set_prod$)Node_set$)
(declare-fun pair$ (Node$ Node_set$ )Node_node_set_prod$)
(declare-fun f$ (Node_node_set_prod$ )Node_llist$ )
(declare-fun x$ ()Node$ )
(declare-fun na$ ()Node$ )
(declare-fun nb$ ()Node$ )
(declare-fun ns$ ()Node_set$ )
(declare-fun x$a ()Node$ )
(declare-fun xs$ ()Node_llist$ )
(declare-fun bot$ ()Node_set$ )
(declare-fun nsa$ ()Node_set$ )
(declare-fun nsb$ ()Node_set$ )
(declare-fun top$ ()Node_set$ )
(declare-fun lset$ (Node_llist$ )Node_set$ )
(declare-fun graph$ ()Node_node_bool_fun_fun$ )
(declare-fun finite$ (Node_set$ )Bool )
(declare-fun insert$ (Node$ Node_set$ )Node_set$ )
(declare-fun member$ (Node$ Node_set$ )Bool )
(declare-fun uminus$ (Node_set$ )Node_set$ )
(declare-fun connected$ (Node_node_bool_fun_fun$ )Bool )
(declare-fun reachable_via$ (Node_node_bool_fun_fun$ Node_set$ Node$ )Node_set$ )
(assert (! (not (= x$ nb$ )):named a0 ))
(assert (! (not (member$ nb$ nsb$ )):named a1 ))
(assert (! (not (= x$a x$ )):named a2 ))
(assert (! (not (member$ na$ nsa$ )):named a3 ))
(assert (! (and (not (= (f$ (pair$ nb$ nsb$ ))lNil$ ))(and (= (lhd$ (f$ (pair$ nb$ nsb$ )))x$ )(= (ltl$ (f$ (pair$ nb$ nsb$ )))xs$ ))):named a4 ))
(assert (! (finite$ nsb$ ):named a5 ))
(assert (! (= ns$ bot$ ):named a6 ))
(assert (! (= (lCons$ x$ xs$ )(f$ (pair$ nb$ nsb$ ))):named a7 ))
(assert (! (connected$ graph$ ):named a8 ))
(assert (! (finite$ nsa$ ):named a9 ))
(assert (! (not (finite$ (reachable_via$ graph$ (uminus$ (insert$ nb$ nsb$ ))nb$ ))):named a10 ))
(assert (! (forall ((?v0 Node$ )(?v1 Node_set$ ))(= (lhd$ (f$ (pair$ ?v0 ?v1 )))?v0 )):named a11 ))
(assert (! (member$ x$a (lset$ xs$ )):named a12 ))
(assert (! (not (finite$ top$ )):named a13 ))
(assert (! (not (finite$ (reachable_via$ graph$ (uminus$ (insert$ na$ nsa$ ))na$ ))):named a14 ))
(assert (! (member$ x$a (lset$ (f$ (pair$ na$ nsa$ )))):named a15 ))
(assert (! (forall ((?v0 Node$ )(?v1 Node_set$ ))(=> (and (= xs$ (f$ (pair$ ?v0 ?v1 )))(and (not (member$ ?v0 ?v1 ))(and (finite$ ?v1 )(not (finite$ (reachable_via$ graph$ (uminus$ (insert$ ?v0 ?v1 ))?v0 ))))))(not (member$ x$a ?v1 )))):named a16 ))
(assert (! (forall ((?v0 Node$ )(?v1 Node_llist$ ))(! (= (lset$ (lCons$ ?v0 ?v1 ))(insert$ ?v0 (lset$ ?v1 ))):pattern ((lCons$ ?v0 ?v1 )))):named a17 ))
(check-sat )
;(get-unsat-core )
