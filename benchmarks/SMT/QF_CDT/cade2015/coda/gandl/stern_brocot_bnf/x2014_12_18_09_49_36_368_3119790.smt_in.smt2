;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_nat_fun_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_nat_fun_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_nat_fun_fun_fun$ 0 )
(declare-sort Nat_nat_nat_nat_fun_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_nat_nat_fun_fun_fun$ 0 )
(declare-codatatypes ()((Nat_stream$ (sCons$ (shd$ Nat$ )(stl$ Nat_stream$ )))(Nat_tree$ (node$ (root$ Nat$ )(left$ Nat_tree$ )(right$ Nat_tree$ )))(Nat_tree_tree$ (node$a (root$a Nat_tree$ )(left$a Nat_tree_tree$ )(right$a Nat_tree_tree$ )))(Nat_nat_fun_stream$ (sCons$a (select$ Nat_nat_fun$ )(selecta$ Nat_nat_fun_stream$ )))(Nat_nat_nat_fun_fun_stream$ (sCons$b (selectb$ Nat_nat_nat_fun_fun$ )(selectc$ Nat_nat_nat_fun_fun_stream$ )))(Nat_nat_fun_nat_fun_stream$ (sCons$c (selectd$ Nat_nat_fun_nat_fun$ )(selecte$ Nat_nat_fun_nat_fun_stream$ )))(Nat_nat_fun_nat_nat_fun_fun_stream$ (sCons$d (selectf$ Nat_nat_fun_nat_nat_fun_fun$ )(selectg$ Nat_nat_fun_nat_nat_fun_fun_stream$ )))(Nat_nat_nat_fun_fun_nat_fun_stream$ (sCons$e (selecth$ Nat_nat_nat_fun_fun_nat_fun$ )(selecti$ Nat_nat_nat_fun_fun_nat_fun_stream$ )))(Nat_nat_fun_nat_fun_nat_fun_stream$ (sCons$f (selectj$ Nat_nat_fun_nat_fun_nat_fun$ )(selectk$ Nat_nat_fun_nat_fun_nat_fun_stream$ )))(Nat_nat_nat_nat_fun_fun_fun_stream$ (sCons$g (selectl$ Nat_nat_nat_nat_fun_fun_fun$ )(selectm$ Nat_nat_nat_nat_fun_fun_fun_stream$ )))(Nat_nat_nat_fun_nat_fun_fun_stream$ (sCons$h (selectn$ Nat_nat_nat_fun_nat_fun_fun$ )(selecto$ Nat_nat_nat_fun_nat_fun_fun_stream$ )))(Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ (sCons$i (selectp$ Nat_nat_fun_nat_nat_fun_fun_nat_fun$ )(selectq$ Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ )))(Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ (sCons$j (selectr$ Nat_nat_nat_fun_fun_nat_nat_fun_fun$ )(selects$ Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ )))(Nat_tree_tree_tree$ (node$b (root$b Nat_tree_tree$ )(left$b Nat_tree_tree_tree$ )(right$b Nat_tree_tree_tree$ )))))
(declare-sort Nat_nat_prod$ 0)
(declare-sort Nat_nat_prod_nat_nat_prod_prod$ 0)
(declare-fun fst$ (Nat_nat_prod$)Nat$)
(declare-fun snd$ (Nat_nat_prod$)Nat$)
(declare-fun pair$ (Nat$ Nat$ )Nat_nat_prod$)
(declare-fun fst$a (Nat_nat_prod_nat_nat_prod_prod$)Nat_nat_prod$)
(declare-fun snd$a (Nat_nat_prod_nat_nat_prod_prod$)Nat_nat_prod$)
(declare-fun pair$a (Nat_nat_prod$ Nat_nat_prod$ )Nat_nat_prod_nat_nat_prod_prod$)
(declare-codatatypes ()((Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ (sCons$k (selectt$ Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )(selectu$ Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ )))(Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ (sCons$l (selectv$ Nat_nat_fun_nat_nat_fun_nat_fun_fun$ )(selectw$ Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ )))))
(declare-fun det$ (Nat_nat_prod_nat_nat_prod_prod$ )Nat$ )
(declare-fun one$ ()Nat$ )
(declare-fun fusc$ ()Nat_stream$ )
(declare-fun imat$ ()Nat_nat_prod_nat_nat_prod_prod$ )
(declare-fun one$a ()Nat_tree_tree$ )
(declare-fun one$b ()Nat_tree$ )
(declare-fun one$c ()Nat_tree_tree_tree$ )
(declare-fun shd$a (Nat_nat_fun_stream$ )Nat_nat_fun$ )
(declare-fun shd$b (Nat_nat_nat_fun_fun_stream$ )Nat_nat_nat_fun_fun$ )
(declare-fun shd$c (Nat_nat_fun_nat_fun_stream$ )Nat_nat_fun_nat_fun$ )
(declare-fun shd$d (Nat_nat_fun_nat_nat_fun_fun_stream$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun shd$e (Nat_nat_nat_fun_fun_nat_fun_stream$ )Nat_nat_nat_fun_fun_nat_fun$ )
(declare-fun shd$f (Nat_nat_fun_nat_fun_nat_fun_stream$ )Nat_nat_fun_nat_fun_nat_fun$ )
(declare-fun shd$g (Nat_nat_nat_nat_fun_fun_fun_stream$ )Nat_nat_nat_nat_fun_fun_fun$ )
(declare-fun shd$h (Nat_nat_nat_fun_nat_fun_fun_stream$ )Nat_nat_nat_fun_nat_fun_fun$ )
(declare-fun shd$i (Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_fun_nat_nat_fun_fun$ )Nat$ )
(declare-fun shd$j (Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ )Nat_nat_nat_fun_fun_nat_nat_fun_fun$ )
(declare-fun fusc$a ()Nat_stream$ )
(declare-fun lLmat$ ()Nat_nat_prod_nat_nat_prod_prod$ )
(declare-fun st_ap$ (Nat_nat_fun_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun of_nat$ (Nat$ )Nat_tree_tree$ )
(declare-fun st_ap$a (Nat_nat_fun_nat_fun_stream$ Nat_nat_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$b (Nat_nat_nat_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$c (Nat_nat_fun_nat_nat_fun_fun_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$d (Nat_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_nat_fun_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$e (Nat_nat_fun_nat_fun_nat_fun_stream$ Nat_nat_fun_nat_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$f (Nat_nat_nat_nat_fun_fun_fun_stream$ Nat_stream$ )Nat_nat_nat_fun_fun_stream$ )
(declare-fun st_ap$g (Nat_nat_nat_fun_nat_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun st_ap$h (Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_fun_nat_nat_fun_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$i (Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ Nat_nat_nat_fun_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$j (Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_nat_nat_fun_fun_stream$ )
(declare-fun st_ap$k (Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun fun_app$ (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun of_bool$ (Bool )Nat_tree_tree$ )
(declare-fun of_nat$a (Nat$ )Nat_tree$ )
(declare-fun of_nat$b (Nat$ )Nat$ )
(declare-fun fun_app$a (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$b (Nat_nat_fun_nat_fun$ Nat_nat_fun$ )Nat$ )
(declare-fun fun_app$c (Nat_nat_nat_fun_nat_fun_fun$ Nat$ )Nat_nat_fun_nat_fun$ )
(declare-fun fun_app$d (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun$ )
(declare-fun fun_app$e (Nat_nat_nat_nat_fun_fun_fun$ Nat$ )Nat_nat_nat_fun_fun$ )
(declare-fun fun_app$f (Nat_nat_fun_nat_nat_fun_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun_nat_fun$ )
(declare-fun fun_app$g (Nat_nat_nat_fun_nat_nat_fun_fun_fun$ Nat$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun fun_app$h (Nat_nat_fun_nat_nat_nat_fun_fun_fun$ Nat_nat_fun$ )Nat_nat_nat_fun_fun$ )
(declare-fun fun_app$i (Nat_nat_fun_nat_nat_fun_nat_nat_fun_fun_fun$ Nat_nat_fun$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun fun_app$j (Nat_nat_nat_fun_fun_nat_fun$ Nat_nat_nat_fun_fun$ )Nat$ )
(declare-fun fun_app$k (Nat_nat_nat_nat_fun_fun_nat_fun_fun$ Nat$ )Nat_nat_nat_fun_fun_nat_fun$ )
(declare-fun fun_app$l (Nat_nat_fun_nat_fun_nat_fun$ Nat_nat_fun_nat_fun$ )Nat$ )
(declare-fun fun_app$m (Nat_nat_nat_fun_nat_fun_nat_fun_fun$ Nat$ )Nat_nat_fun_nat_fun_nat_fun$ )
(declare-fun fun_app$n (Nat_nat_nat_fun_fun_nat_nat_fun_fun$ Nat_nat_nat_fun_fun$ )Nat_nat_fun$ )
(declare-fun of_bool$a (Bool )Nat_tree$ )
(declare-fun of_bool$b (Bool )Nat$ )
(declare-fun szip_with$ (Nat_nat_nat_fun_fun$ Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun tree_pure$ (Nat_tree_tree$ )Nat_tree_tree_tree$ )
(declare-fun szip_with$a (Nat_nat_nat_fun_nat_fun_fun$ Nat_stream$ Nat_nat_fun_stream$ )Nat_stream$ )
(declare-fun szip_with$b (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun szip_with$c (Nat_nat_nat_nat_fun_fun_fun$ Nat_stream$ Nat_stream$ )Nat_nat_fun_stream$ )
(declare-fun szip_with$d (Nat_nat_fun_nat_nat_fun_nat_fun_fun$ Nat_nat_fun_stream$ Nat_nat_fun_stream$ )Nat_stream$ )
(declare-fun szip_with$e (Nat_nat_nat_fun_nat_nat_fun_fun_fun$ Nat_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun szip_with$f (Nat_nat_fun_nat_nat_nat_fun_fun_fun$ Nat_nat_fun_stream$ Nat_stream$ )Nat_nat_fun_stream$ )
(declare-fun szip_with$g (Nat_nat_fun_nat_nat_fun_nat_nat_fun_fun_fun$ Nat_nat_fun_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun szip_with$h (Nat_nat_nat_nat_fun_fun_nat_fun_fun$ Nat_stream$ Nat_nat_nat_fun_fun_stream$ )Nat_stream$ )
(declare-fun szip_with$i (Nat_nat_nat_fun_nat_fun_nat_fun_fun$ Nat_stream$ Nat_nat_fun_nat_fun_stream$ )Nat_stream$ )
(declare-fun tree_pure$a (Nat_tree$ )Nat_tree_tree$ )
(declare-fun tree_pure$b (Nat$ )Nat_tree$ )
(assert (! (not (= (shd$ fusc$ )one$ )):named a0 ))
(assert (! (= one$ one$ ):named a1 ))
(assert (! (forall ((?v0 Nat_tree_tree$ ))(= (= one$a ?v0 )(= ?v0 one$a ))):named a2 ))
(assert (! (forall ((?v0 Nat_tree$ ))(= (= one$b ?v0 )(= ?v0 one$b ))):named a3 ))
(assert (! (forall ((?v0 Nat$ ))(= (= one$ ?v0 )(= ?v0 one$ ))):named a4 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (shd$ (szip_with$ ?v0 ?v1 ?v2 ))(fun_app$ (fun_app$a ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a5 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_nat_fun_stream$ ))(= (shd$ (szip_with$a ?v0 ?v1 ?v2 ))(fun_app$b (fun_app$c ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat_stream$ ))(= (shd$ (szip_with$b ?v0 ?v1 ?v2 ))(fun_app$ (fun_app$d ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a7 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (shd$a (szip_with$c ?v0 ?v1 ?v2 ))(fun_app$a (fun_app$e ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a8 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat_nat_fun_stream$ ))(= (shd$ (szip_with$d ?v0 ?v1 ?v2 ))(fun_app$b (fun_app$f ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_nat_fun_stream$ ))(= (shd$a (szip_with$e ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$g ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat_stream$ ))(= (shd$a (szip_with$f ?v0 ?v1 ?v2 ))(fun_app$a (fun_app$h ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a11 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat_nat_fun_stream$ ))(= (shd$a (szip_with$g ?v0 ?v1 ?v2 ))(fun_app$d (fun_app$i ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a12 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_nat_nat_fun_fun_stream$ ))(= (shd$ (szip_with$h ?v0 ?v1 ?v2 ))(fun_app$j (fun_app$k ?v0 (shd$ ?v1 ))(shd$b ?v2 )))):named a13 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_nat_fun_nat_fun_stream$ ))(= (shd$ (szip_with$i ?v0 ?v1 ?v2 ))(fun_app$l (fun_app$m ?v0 (shd$ ?v1 ))(shd$c ?v2 )))):named a14 ))
(assert (! (= fusc$ (sCons$ one$ fusc$a )):named a15 ))
(assert (! (forall ((?v0 Nat_nat_fun_stream$ )(?v1 Nat_stream$ ))(= (shd$ (st_ap$ ?v0 ?v1 ))(fun_app$ (shd$a ?v0 )(shd$ ?v1 )))):named a16 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_stream$ )(?v1 Nat_nat_fun_stream$ ))(= (shd$ (st_ap$a ?v0 ?v1 ))(fun_app$b (shd$c ?v0 )(shd$a ?v1 )))):named a17 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_stream$ )(?v1 Nat_stream$ ))(= (shd$a (st_ap$b ?v0 ?v1 ))(fun_app$a (shd$b ?v0 )(shd$ ?v1 )))):named a18 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_stream$ )(?v1 Nat_nat_fun_stream$ ))(= (shd$a (st_ap$c ?v0 ?v1 ))(fun_app$d (shd$d ?v0 )(shd$a ?v1 )))):named a19 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun_stream$ )(?v1 Nat_nat_nat_fun_fun_stream$ ))(= (shd$ (st_ap$d ?v0 ?v1 ))(fun_app$j (shd$e ?v0 )(shd$b ?v1 )))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun_stream$ )(?v1 Nat_nat_fun_nat_fun_stream$ ))(= (shd$ (st_ap$e ?v0 ?v1 ))(fun_app$l (shd$f ?v0 )(shd$c ?v1 )))):named a21 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun_stream$ )(?v1 Nat_stream$ ))(= (shd$b (st_ap$f ?v0 ?v1 ))(fun_app$e (shd$g ?v0 )(shd$ ?v1 )))):named a22 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun_stream$ )(?v1 Nat_stream$ ))(= (shd$c (st_ap$g ?v0 ?v1 ))(fun_app$c (shd$h ?v0 )(shd$ ?v1 )))):named a23 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ )(?v1 Nat_nat_fun_nat_nat_fun_fun_stream$ ))(= (shd$ (st_ap$h ?v0 ?v1 ))(shd$i ?v0 (shd$d ?v1 )))):named a24 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ )(?v1 Nat_nat_nat_fun_fun_stream$ ))(= (shd$a (st_ap$i ?v0 ?v1 ))(fun_app$n (shd$j ?v0 )(shd$b ?v1 )))):named a25 ))
(assert (! (= (of_nat$ one$ )one$a ):named a26 ))
(assert (! (= (of_nat$a one$ )one$b ):named a27 ))
(assert (! (= (of_nat$b one$ )one$ ):named a28 ))
(assert (! (= one$c (tree_pure$ one$a )):named a29 ))
(assert (! (= one$a (tree_pure$a one$b )):named a30 ))
(assert (! (= one$b (tree_pure$b one$ )):named a31 ))
(assert (! (= (of_bool$ true )one$a ):named a32 ))
(assert (! (= (of_bool$a true )one$b ):named a33 ))
(assert (! (= (of_bool$b true )one$ ):named a34 ))
(assert (! (= (det$ imat$ )one$ ):named a35 ))
(assert (! (= (det$ lLmat$ )one$ ):named a36 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$a ?v0 )(of_nat$a ?v1 ))(= ?v0 ?v1 ))):named a37 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (of_nat$b ?v0 )(of_nat$b ?v1 ))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$ (sCons$a ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$ (fun_app$ ?v0 ?v2 )(st_ap$ ?v1 ?v3 ))):pattern ((st_ap$ (sCons$a ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a39 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$b (sCons$b ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$a (fun_app$a ?v0 ?v2 )(st_ap$b ?v1 ?v3 ))):pattern ((st_ap$b (sCons$b ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a40 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$a (sCons$c ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(sCons$ (fun_app$b ?v0 ?v2 )(st_ap$a ?v1 ?v3 ))):pattern ((st_ap$a (sCons$c ?v0 ?v1 )(sCons$a ?v2 ?v3 ))))):named a41 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$c (sCons$d ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(sCons$a (fun_app$d ?v0 ?v2 )(st_ap$c ?v1 ?v3 ))):pattern ((st_ap$c (sCons$d ?v0 ?v1 )(sCons$a ?v2 ?v3 ))))):named a42 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_nat_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$g (sCons$h ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$c (fun_app$c ?v0 ?v2 )(st_ap$g ?v1 ?v3 ))):pattern ((st_ap$g (sCons$h ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a43 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_nat_nat_fun_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$f (sCons$g ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$b (fun_app$e ?v0 ?v2 )(st_ap$f ?v1 ?v3 ))):pattern ((st_ap$f (sCons$g ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a44 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun_nat_fun_stream$ )(?v2 Nat_nat_fun_nat_fun$ )(?v3 Nat_nat_fun_nat_fun_stream$ ))(! (= (st_ap$e (sCons$f ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(sCons$ (fun_app$l ?v0 ?v2 )(st_ap$e ?v1 ?v3 ))):pattern ((st_ap$e (sCons$f ?v0 ?v1 )(sCons$c ?v2 ?v3 ))))):named a45 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun$ )(?v1 Nat_nat_nat_fun_fun_nat_fun_stream$ )(?v2 Nat_nat_nat_fun_fun$ )(?v3 Nat_nat_nat_fun_fun_stream$ ))(! (= (st_ap$d (sCons$e ?v0 ?v1 )(sCons$b ?v2 ?v3 ))(sCons$ (fun_app$j ?v0 ?v2 )(st_ap$d ?v1 ?v3 ))):pattern ((st_ap$d (sCons$e ?v0 ?v1 )(sCons$b ?v2 ?v3 ))))):named a46 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$j (sCons$k ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$d (fun_app$g ?v0 ?v2 )(st_ap$j ?v1 ?v3 ))):pattern ((st_ap$j (sCons$k ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a47 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$k (sCons$l ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(sCons$c (fun_app$f ?v0 ?v2 )(st_ap$k ?v1 ?v3 ))):pattern ((st_ap$k (sCons$l ?v0 ?v1 )(sCons$a ?v2 ?v3 ))))):named a48 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (of_bool$a ?v0 )(of_bool$a ?v1 ))(= ?v0 ?v1 ))):named a49 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (of_bool$b ?v0 )(of_bool$b ?v1 ))(= ?v0 ?v1 ))):named a50 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a51 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a52 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$ ?v0 )(tree_pure$a (of_nat$a ?v0 ))):pattern ((of_nat$ ?v0 )))):named a53 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (of_nat$a ?v0 )(tree_pure$b (of_nat$b ?v0 ))):pattern ((of_nat$a ?v0 )))):named a54 ))
(check-sat )
;(get-unsat-core )
