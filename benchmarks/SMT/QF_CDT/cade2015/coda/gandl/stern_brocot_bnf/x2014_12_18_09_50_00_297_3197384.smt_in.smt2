;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_nat_fun_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_nat_fun_nat_nat_fun_fun_fun$ 0 )
(declare-codatatypes ()((Nat_stream$ (sCons$ (shd$ Nat$ )(stl$ Nat_stream$ )))(Nat_tree$ (node$ (root$ Nat$ )(left$ Nat_tree$ )(right$ Nat_tree$ )))(Nat_nat_fun_tree$ (node$a (select$ Nat_nat_fun$ )(selecta$ Nat_nat_fun_tree$ )(selectb$ Nat_nat_fun_tree$ )))(Nat_nat_fun_stream$ (sCons$a (selectc$ Nat_nat_fun$ )(selectd$ Nat_nat_fun_stream$ )))(Nat_nat_fun_nat_fun_tree$ (node$b (selecte$ Nat_nat_fun_nat_fun$ )(selectf$ Nat_nat_fun_nat_fun_tree$ )(selectg$ Nat_nat_fun_nat_fun_tree$ )))(Nat_nat_fun_nat_fun_stream$ (sCons$b (selecth$ Nat_nat_fun_nat_fun$ )(selecti$ Nat_nat_fun_nat_fun_stream$ )))(Nat_nat_nat_fun_fun_tree$ (node$c (selectj$ Nat_nat_nat_fun_fun$ )(selectk$ Nat_nat_nat_fun_fun_tree$ )(selectl$ Nat_nat_nat_fun_fun_tree$ )))(Nat_nat_nat_fun_fun_stream$ (sCons$c (selectm$ Nat_nat_nat_fun_fun$ )(selectn$ Nat_nat_nat_fun_fun_stream$ )))(Nat_nat_fun_nat_nat_fun_fun_tree$ (node$d (selecto$ Nat_nat_fun_nat_nat_fun_fun$ )(selectp$ Nat_nat_fun_nat_nat_fun_fun_tree$ )(selectq$ Nat_nat_fun_nat_nat_fun_fun_tree$ )))(Nat_nat_fun_nat_nat_fun_fun_stream$ (sCons$d (selectr$ Nat_nat_fun_nat_nat_fun_fun$ )(selects$ Nat_nat_fun_nat_nat_fun_fun_stream$ )))(Nat_nat_nat_fun_fun_nat_fun_tree$ (node$e (selectt$ Nat_nat_nat_fun_fun_nat_fun$ )(selectu$ Nat_nat_nat_fun_fun_nat_fun_tree$ )(selectv$ Nat_nat_nat_fun_fun_nat_fun_tree$ )))(Nat_nat_nat_fun_fun_nat_fun_stream$ (sCons$e (selectw$ Nat_nat_nat_fun_fun_nat_fun$ )(selectx$ Nat_nat_nat_fun_fun_nat_fun_stream$ )))(Nat_nat_fun_nat_fun_nat_fun_tree$ (node$f (selecty$ Nat_nat_fun_nat_fun_nat_fun$ )(selectz$ Nat_nat_fun_nat_fun_nat_fun_tree$ )(selecua$ Nat_nat_fun_nat_fun_nat_fun_tree$ )))(Nat_nat_fun_nat_fun_nat_fun_stream$ (sCons$f (selecub$ Nat_nat_fun_nat_fun_nat_fun$ )(selecuc$ Nat_nat_fun_nat_fun_nat_fun_stream$ )))(Nat_nat_nat_nat_fun_fun_fun_tree$ (node$g (selecud$ Nat_nat_nat_nat_fun_fun_fun$ )(selecue$ Nat_nat_nat_nat_fun_fun_fun_tree$ )(selecuf$ Nat_nat_nat_nat_fun_fun_fun_tree$ )))(Nat_nat_nat_nat_fun_fun_fun_stream$ (sCons$g (selecug$ Nat_nat_nat_nat_fun_fun_fun$ )(selecuh$ Nat_nat_nat_nat_fun_fun_fun_stream$ )))(Nat_nat_nat_fun_nat_fun_fun_tree$ (node$h (selecui$ Nat_nat_nat_fun_nat_fun_fun$ )(selecuj$ Nat_nat_nat_fun_nat_fun_fun_tree$ )(selecuk$ Nat_nat_nat_fun_nat_fun_fun_tree$ )))(Nat_nat_nat_fun_nat_fun_fun_stream$ (sCons$h (selecul$ Nat_nat_nat_fun_nat_fun_fun$ )(selecum$ Nat_nat_nat_fun_nat_fun_fun_stream$ )))(Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ (node$i (selecun$ Nat_nat_fun_nat_nat_fun_fun_nat_fun$ )(selecuo$ Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ )(selecup$ Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ )))(Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ (sCons$i (selecuq$ Nat_nat_fun_nat_nat_fun_fun_nat_fun$ )(selecur$ Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ )))(Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ (node$j (selecus$ Nat_nat_nat_fun_fun_nat_nat_fun_fun$ )(selecut$ Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ )(selecuu$ Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ )))(Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ (sCons$j (selecuv$ Nat_nat_nat_fun_fun_nat_nat_fun_fun$ )(selecuw$ Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ )))))
(declare-sort Num$ 0)
(declare-fun one$ ()Num$)
(declare-fun selecux$ (Num$)Num$)
(declare-fun bit0$ (Num$ )Num$)
(declare-fun selecuy$ (Num$)Num$)
(declare-fun bit1$ (Num$ )Num$)
(declare-codatatypes ()((Nat_stream_stream$ (sCons$k (shd$a Nat_stream$ )(stl$a Nat_stream_stream$ )))(Nat_stream_stream_stream$ (sCons$l (shd$b Nat_stream_stream$ )(stl$b Nat_stream_stream_stream$ )))(Nat_tree_stream$ (sCons$m (shd$c Nat_tree$ )(stl$c Nat_tree_stream$ )))(Nat_tree_stream_stream$ (sCons$n (shd$d Nat_tree_stream$ )(stl$d Nat_tree_stream_stream$ )))(Nat_tree_stream_stream_stream$ (sCons$o (shd$e Nat_tree_stream_stream$ )(stl$e Nat_tree_stream_stream_stream$ )))(Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ (sCons$p (selecuz$ Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )(selecva$ Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ )))(Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ (sCons$q (selecvb$ Nat_nat_fun_nat_nat_fun_nat_fun_fun$ )(selecvc$ Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ )))))
(declare-fun den$ ()Nat_tree$ )
(declare-fun mod$ (Nat_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun num$ ()Nat_tree$ )
(declare-fun fusc$ ()Nat_stream$ )
(declare-fun mod$a (Nat_stream_stream_stream$ Nat_stream_stream_stream$ )Nat_stream_stream_stream$ )
(declare-fun mod$b (Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun mod$c (Nat_tree_stream_stream_stream$ Nat_tree_stream_stream_stream$ )Nat_tree_stream_stream_stream$ )
(declare-fun mod$d (Nat_tree_stream_stream$ Nat_tree_stream_stream$ )Nat_tree_stream_stream$ )
(declare-fun mod$e (Nat_tree_stream$ Nat_tree_stream$ )Nat_tree_stream$ )
(declare-fun mod$f (Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun mod$g (Nat$ )Nat_nat_fun$ )
(declare-fun one$a ()Nat$ )
(declare-fun one$b ()Nat_tree$ )
(declare-fun one$c ()Nat_stream$ )
(declare-fun stl$f (Nat_nat_fun_nat_nat_fun_fun_stream$ )Nat_nat_fun_nat_nat_fun_fun_stream$ )
(declare-fun stl$g (Nat_nat_nat_fun_fun_stream$ )Nat_nat_nat_fun_fun_stream$ )
(declare-fun stl$h (Nat_nat_fun_nat_fun_stream$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun stl$i (Nat_nat_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun fusc$a ()Nat_stream$ )
(declare-fun st_ap$ (Nat_nat_fun_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun st_ap$a (Nat_nat_fun_nat_fun_stream$ Nat_nat_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$b (Nat_nat_nat_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$c (Nat_nat_fun_nat_nat_fun_fun_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$d (Nat_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_nat_fun_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$e (Nat_nat_fun_nat_fun_nat_fun_stream$ Nat_nat_fun_nat_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$f (Nat_nat_nat_nat_fun_fun_fun_stream$ Nat_stream$ )Nat_nat_nat_fun_fun_stream$ )
(declare-fun st_ap$g (Nat_nat_nat_fun_nat_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun st_ap$h (Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ Nat_nat_fun_nat_nat_fun_fun_stream$ )Nat_stream$ )
(declare-fun st_ap$i (Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ Nat_nat_nat_fun_fun_stream$ )Nat_nat_fun_stream$ )
(declare-fun st_ap$j (Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ Nat_stream$ )Nat_nat_fun_nat_nat_fun_fun_stream$ )
(declare-fun st_ap$k (Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ Nat_nat_fun_stream$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun stream$ (Nat_tree$ )Nat_stream$ )
(declare-fun fIXME_x$ ()Nat_tree$ )
(declare-fun fun_app$ (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun numeral$ (Num$ )Nat_tree$ )
(declare-fun stream$a (Nat_nat_fun_tree$ )Nat_nat_fun_stream$ )
(declare-fun stream$b (Nat_nat_fun_nat_fun_tree$ )Nat_nat_fun_nat_fun_stream$ )
(declare-fun stream$c (Nat_nat_nat_fun_fun_tree$ )Nat_nat_nat_fun_fun_stream$ )
(declare-fun stream$d (Nat_nat_fun_nat_nat_fun_fun_tree$ )Nat_nat_fun_nat_nat_fun_fun_stream$ )
(declare-fun stream$e (Nat_nat_nat_fun_fun_nat_fun_tree$ )Nat_nat_nat_fun_fun_nat_fun_stream$ )
(declare-fun stream$f (Nat_nat_fun_nat_fun_nat_fun_tree$ )Nat_nat_fun_nat_fun_nat_fun_stream$ )
(declare-fun stream$g (Nat_nat_nat_nat_fun_fun_fun_tree$ )Nat_nat_nat_nat_fun_fun_fun_stream$ )
(declare-fun stream$h (Nat_nat_nat_fun_nat_fun_fun_tree$ )Nat_nat_nat_fun_nat_fun_fun_stream$ )
(declare-fun stream$i (Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ )Nat_nat_fun_nat_nat_fun_fun_nat_fun_stream$ )
(declare-fun stream$j (Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ )Nat_nat_nat_fun_fun_nat_nat_fun_fun_stream$ )
(declare-fun tree_ap$ (Nat_nat_fun_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun fun_app$a (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$b (Nat_nat_fun_nat_fun$ Nat_nat_fun$ )Nat$ )
(declare-fun fun_app$c (Nat_nat_fun_nat_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun$ )
(declare-fun fun_app$d (Nat_nat_nat_fun_nat_fun_fun$ Nat$ )Nat_nat_fun_nat_fun$ )
(declare-fun fun_app$e (Nat_nat_nat_nat_fun_fun_fun$ Nat$ )Nat_nat_nat_fun_fun$ )
(declare-fun fun_app$f (Nat_nat_fun_nat_fun_nat_fun$ Nat_nat_fun_nat_fun$ )Nat$ )
(declare-fun fun_app$g (Nat_nat_nat_fun_fun_nat_fun$ Nat_nat_nat_fun_fun$ )Nat$ )
(declare-fun fun_app$h (Nat_nat_nat_fun_nat_nat_fun_fun_fun$ Nat$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun fun_app$i (Nat_nat_fun_nat_nat_fun_nat_fun_fun$ Nat_nat_fun$ )Nat_nat_fun_nat_fun$ )
(declare-fun numeral$a (Num$ )Nat_stream$ )
(declare-fun tree_ap$a (Nat_nat_fun_nat_fun_tree$ Nat_nat_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$b (Nat_nat_nat_fun_fun_tree$ Nat_tree$ )Nat_nat_fun_tree$ )
(declare-fun tree_ap$c (Nat_nat_fun_nat_nat_fun_fun_tree$ Nat_nat_fun_tree$ )Nat_nat_fun_tree$ )
(declare-fun tree_ap$d (Nat_nat_nat_fun_fun_nat_fun_tree$ Nat_nat_nat_fun_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$e (Nat_nat_fun_nat_fun_nat_fun_tree$ Nat_nat_fun_nat_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$f (Nat_nat_nat_nat_fun_fun_fun_tree$ Nat_tree$ )Nat_nat_nat_fun_fun_tree$ )
(declare-fun tree_ap$g (Nat_nat_nat_fun_nat_fun_fun_tree$ Nat_tree$ )Nat_nat_fun_nat_fun_tree$ )
(declare-fun tree_ap$h (Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ Nat_nat_fun_nat_nat_fun_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$i (Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ Nat_nat_nat_fun_fun_tree$ )Nat_nat_fun_tree$ )
(declare-fun tree_chop$ (Nat_tree$ )Nat_tree$ )
(declare-fun tree_chop$a (Nat_nat_fun_nat_nat_fun_fun_tree$ )Nat_nat_fun_nat_nat_fun_fun_tree$ )
(declare-fun tree_chop$b (Nat_nat_nat_fun_fun_tree$ )Nat_nat_nat_fun_fun_tree$ )
(declare-fun tree_chop$c (Nat_nat_fun_nat_fun_tree$ )Nat_nat_fun_nat_fun_tree$ )
(declare-fun tree_chop$d (Nat_nat_fun_tree$ )Nat_nat_fun_tree$ )
(declare-fun tree_chop$e (Nat_nat_nat_fun_fun_nat_fun_tree$ )Nat_nat_nat_fun_fun_nat_fun_tree$ )
(declare-fun tree_chop$f (Nat_nat_fun_nat_fun_nat_fun_tree$ )Nat_nat_fun_nat_fun_nat_fun_tree$ )
(declare-fun tree_chop$g (Nat_nat_nat_nat_fun_fun_fun_tree$ )Nat_nat_nat_nat_fun_fun_fun_tree$ )
(declare-fun tree_chop$h (Nat_nat_nat_fun_nat_fun_fun_tree$ )Nat_nat_nat_fun_nat_fun_fun_tree$ )
(declare-fun tree_chop$i (Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ )Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ )
(declare-fun tree_chop$j (Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ )Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ )
(assert (! (not (= fusc$ (stream$ num$ ))):named a0 ))
(assert (! (and (= (stream$ num$ )fusc$ )(= (stream$ den$ )fusc$a )):named a1 ))
(assert (! (= (left$ num$ )num$ ):named a2 ))
(assert (! (= den$ (tree_chop$ num$ )):named a3 ))
(assert (! (= (stl$ fusc$ )fusc$a ):named a4 ))
(assert (! (= (left$ fIXME_x$ )num$ ):named a5 ))
(assert (! (forall ((?v0 Nat_nat_fun_tree$ )(?v1 Nat_tree$ ))(= (stream$ (tree_ap$ ?v0 ?v1 ))(st_ap$ (stream$a ?v0 )(stream$ ?v1 )))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(= (stream$ (tree_ap$a ?v0 ?v1 ))(st_ap$a (stream$b ?v0 )(stream$a ?v1 )))):named a7 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (stream$a (tree_ap$b ?v0 ?v1 ))(st_ap$b (stream$c ?v0 )(stream$ ?v1 )))):named a8 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(= (stream$a (tree_ap$c ?v0 ?v1 ))(st_ap$c (stream$d ?v0 )(stream$a ?v1 )))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun_tree$ )(?v1 Nat_nat_nat_fun_fun_tree$ ))(= (stream$ (tree_ap$d ?v0 ?v1 ))(st_ap$d (stream$e ?v0 )(stream$c ?v1 )))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_fun_nat_fun_tree$ ))(= (stream$ (tree_ap$e ?v0 ?v1 ))(st_ap$e (stream$f ?v0 )(stream$b ?v1 )))):named a11 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (stream$c (tree_ap$f ?v0 ?v1 ))(st_ap$f (stream$g ?v0 )(stream$ ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (stream$b (tree_ap$g ?v0 ?v1 ))(st_ap$g (stream$h ?v0 )(stream$ ?v1 )))):named a13 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ )(?v1 Nat_nat_fun_nat_nat_fun_fun_tree$ ))(= (stream$ (tree_ap$h ?v0 ?v1 ))(st_ap$h (stream$i ?v0 )(stream$d ?v1 )))):named a14 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ )(?v1 Nat_nat_nat_fun_fun_tree$ ))(= (stream$a (tree_ap$i ?v0 ?v1 ))(st_ap$i (stream$j ?v0 )(stream$c ?v1 )))):named a15 ))
(assert (! (= (shd$ fusc$ )one$a ):named a16 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$ ))(= (stl$f (stream$d ?v0 ))(stream$d (tree_chop$a ?v0 )))):named a17 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$ ))(= (stl$g (stream$c ?v0 ))(stream$c (tree_chop$b ?v0 )))):named a18 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$ ))(= (stl$h (stream$b ?v0 ))(stream$b (tree_chop$c ?v0 )))):named a19 ))
(assert (! (forall ((?v0 Nat_nat_fun_tree$ ))(= (stl$i (stream$a ?v0 ))(stream$a (tree_chop$d ?v0 )))):named a20 ))
(assert (! (forall ((?v0 Nat_tree$ ))(= (stl$ (stream$ ?v0 ))(stream$ (tree_chop$ ?v0 )))):named a21 ))
(assert (! (= (mod$ num$ den$ )fIXME_x$ ):named a22 ))
(assert (! (= (root$ num$ )one$a ):named a23 ))
(assert (! (= (stream$ one$b )one$c ):named a24 ))
(assert (! (forall ((?v0 Num$ ))(= (stream$ (numeral$ ?v0 ))(numeral$a ?v0 ))):named a25 ))
(assert (! (= fusc$ (sCons$ one$a fusc$a )):named a26 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_stream$ ))(= (shd$b (mod$a ?v0 ?v1 ))(mod$b (shd$b ?v0 )(shd$b ?v1 )))):named a27 ))
(assert (! (forall ((?v0 Nat_tree_stream_stream_stream$ )(?v1 Nat_tree_stream_stream_stream$ ))(= (shd$e (mod$c ?v0 ?v1 ))(mod$d (shd$e ?v0 )(shd$e ?v1 )))):named a28 ))
(assert (! (forall ((?v0 Nat_tree_stream_stream$ )(?v1 Nat_tree_stream_stream$ ))(= (shd$d (mod$d ?v0 ?v1 ))(mod$e (shd$d ?v0 )(shd$d ?v1 )))):named a29 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (shd$a (mod$b ?v0 ?v1 ))(mod$f (shd$a ?v0 )(shd$a ?v1 )))):named a30 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (mod$f ?v0 ?v1 ))(fun_app$ (mod$g (shd$ ?v0 ))(shd$ ?v1 )))):named a31 ))
(assert (! (forall ((?v0 Nat_tree_stream$ )(?v1 Nat_tree_stream$ ))(= (shd$c (mod$e ?v0 ?v1 ))(mod$ (shd$c ?v0 )(shd$c ?v1 )))):named a32 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat_nat_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$ (sCons$a ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$ (fun_app$ ?v0 ?v2 )(st_ap$ ?v1 ?v3 ))):pattern ((st_ap$ (sCons$a ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a33 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$b (sCons$c ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$a (fun_app$a ?v0 ?v2 )(st_ap$b ?v1 ?v3 ))):pattern ((st_ap$b (sCons$c ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a34 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$a (sCons$b ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(sCons$ (fun_app$b ?v0 ?v2 )(st_ap$a ?v1 ?v3 ))):pattern ((st_ap$a (sCons$b ?v0 ?v1 )(sCons$a ?v2 ?v3 ))))):named a35 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$c (sCons$d ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(sCons$a (fun_app$c ?v0 ?v2 )(st_ap$c ?v1 ?v3 ))):pattern ((st_ap$c (sCons$d ?v0 ?v1 )(sCons$a ?v2 ?v3 ))))):named a36 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_nat_fun_nat_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$g (sCons$h ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$b (fun_app$d ?v0 ?v2 )(st_ap$g ?v1 ?v3 ))):pattern ((st_ap$g (sCons$h ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a37 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_nat_nat_fun_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$f (sCons$g ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$c (fun_app$e ?v0 ?v2 )(st_ap$f ?v1 ?v3 ))):pattern ((st_ap$f (sCons$g ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a38 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun$ )(?v1 Nat_nat_fun_nat_fun_nat_fun_stream$ )(?v2 Nat_nat_fun_nat_fun$ )(?v3 Nat_nat_fun_nat_fun_stream$ ))(! (= (st_ap$e (sCons$f ?v0 ?v1 )(sCons$b ?v2 ?v3 ))(sCons$ (fun_app$f ?v0 ?v2 )(st_ap$e ?v1 ?v3 ))):pattern ((st_ap$e (sCons$f ?v0 ?v1 )(sCons$b ?v2 ?v3 ))))):named a39 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun$ )(?v1 Nat_nat_nat_fun_fun_nat_fun_stream$ )(?v2 Nat_nat_nat_fun_fun$ )(?v3 Nat_nat_nat_fun_fun_stream$ ))(! (= (st_ap$d (sCons$e ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(sCons$ (fun_app$g ?v0 ?v2 )(st_ap$d ?v1 ?v3 ))):pattern ((st_ap$d (sCons$e ?v0 ?v1 )(sCons$c ?v2 ?v3 ))))):named a40 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_nat_fun_fun_fun$ )(?v1 Nat_nat_nat_fun_nat_nat_fun_fun_fun_stream$ )(?v2 Nat$ )(?v3 Nat_stream$ ))(! (= (st_ap$j (sCons$p ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(sCons$d (fun_app$h ?v0 ?v2 )(st_ap$j ?v1 ?v3 ))):pattern ((st_ap$j (sCons$p ?v0 ?v1 )(sCons$ ?v2 ?v3 ))))):named a41 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_fun_nat_nat_fun_nat_fun_fun_stream$ )(?v2 Nat_nat_fun$ )(?v3 Nat_nat_fun_stream$ ))(! (= (st_ap$k (sCons$q ?v0 ?v1 )(sCons$a ?v2 ?v3 ))(sCons$b (fun_app$i ?v0 ?v2 )(st_ap$k ?v1 ?v3 ))):pattern ((st_ap$k (sCons$q ?v0 ?v1 )(sCons$a ?v2 ?v3 ))))):named a42 ))
(assert (! (forall ((?v0 Nat_nat_fun_tree$ )(?v1 Nat_tree$ ))(= (tree_chop$ (tree_ap$ ?v0 ?v1 ))(tree_ap$ (tree_chop$d ?v0 )(tree_chop$ ?v1 )))):named a43 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(= (tree_chop$ (tree_ap$a ?v0 ?v1 ))(tree_ap$a (tree_chop$c ?v0 )(tree_chop$d ?v1 )))):named a44 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (tree_chop$d (tree_ap$b ?v0 ?v1 ))(tree_ap$b (tree_chop$b ?v0 )(tree_chop$ ?v1 )))):named a45 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(= (tree_chop$d (tree_ap$c ?v0 ?v1 ))(tree_ap$c (tree_chop$a ?v0 )(tree_chop$d ?v1 )))):named a46 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_fun_tree$ )(?v1 Nat_nat_nat_fun_fun_tree$ ))(= (tree_chop$ (tree_ap$d ?v0 ?v1 ))(tree_ap$d (tree_chop$e ?v0 )(tree_chop$b ?v1 )))):named a47 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_fun_nat_fun_tree$ ))(= (tree_chop$ (tree_ap$e ?v0 ?v1 ))(tree_ap$e (tree_chop$f ?v0 )(tree_chop$c ?v1 )))):named a48 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_fun_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (tree_chop$b (tree_ap$f ?v0 ?v1 ))(tree_ap$f (tree_chop$g ?v0 )(tree_chop$ ?v1 )))):named a49 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_nat_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (tree_chop$c (tree_ap$g ?v0 ?v1 ))(tree_ap$g (tree_chop$h ?v0 )(tree_chop$ ?v1 )))):named a50 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun_nat_fun_tree$ )(?v1 Nat_nat_fun_nat_nat_fun_fun_tree$ ))(= (tree_chop$ (tree_ap$h ?v0 ?v1 ))(tree_ap$h (tree_chop$i ?v0 )(tree_chop$a ?v1 )))):named a51 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_nat_nat_fun_fun_tree$ )(?v1 Nat_nat_nat_fun_fun_tree$ ))(= (tree_chop$d (tree_ap$i ?v0 ?v1 ))(tree_ap$i (tree_chop$j ?v0 )(tree_chop$b ?v1 )))):named a52 ))
(assert (! (forall ((?v0 Nat_tree$ )(?v1 Nat_tree$ ))(= (left$ (mod$ ?v0 ?v1 ))(mod$ (left$ ?v0 )(left$ ?v1 )))):named a53 ))
(check-sat )
;(get-unsat-core )
