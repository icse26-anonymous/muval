;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_a_tree_fun$ 0 )
(declare-sort A_tree_a_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_a_stream_fun$ 0 )
(declare-sort A_stream_a_fun$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_fun$ 0 )
(declare-sort A_stream_a_tree_fun$ 0 )
(declare-sort A_tree_a_stream_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_fun$ 0 )
(declare-sort A_a_tree_fun_a_a_tree_fun_fun$ 0 )
(declare-sort A_tree_a_fun_a_tree_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_stream_tree_a_stream_tree_fun$ 0 )
(declare-sort A_tree_stream_a_tree_stream_fun$ 0 )
(declare-sort A_a_stream_fun_a_a_stream_fun_fun$ 0 )
(declare-sort A_stream_a_fun_a_stream_a_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_fun$ 0 )
(declare-sort A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ 0 )
(declare-sort A_tree_tree_stream_a_tree_tree_stream_fun$ 0 )
(declare-sort A_stream_a_tree_fun_a_stream_a_tree_fun_fun$ 0 )
(declare-sort A_tree_a_stream_fun_a_tree_a_stream_fun_fun$ 0 )
(declare-sort A_stream_stream_tree_a_stream_stream_tree_fun$ 0 )
(declare-sort A_stream_tree_stream_a_stream_tree_stream_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))(A_tree$ (node$ (root$ A$ )(left$ A_tree$ )(right$ A_tree$ )))(A_tree_tree$ (node$a (root$a A_tree$ )(left$a A_tree_tree$ )(right$a A_tree_tree$ )))(A_stream_tree$ (node$b (root$b A_stream$ )(left$b A_stream_tree$ )(right$b A_stream_tree$ )))(A_stream_tree_tree$ (node$c (root$c A_stream_tree$ )(left$c A_stream_tree_tree$ )(right$c A_stream_tree_tree$ )))(A_tree_tree_tree$ (node$d (root$d A_tree_tree$ )(left$d A_tree_tree_tree$ )(right$d A_tree_tree_tree$ )))(A_stream_stream$ (sCons$a (shd$a A_stream$ )(stl$a A_stream_stream$ )))(A_stream_stream_tree$ (node$e (root$e A_stream_stream$ )(left$e A_stream_stream_tree$ )(right$e A_stream_stream_tree$ )))(A_tree_stream$ (sCons$b (shd$b A_tree$ )(stl$b A_tree_stream$ )))(A_tree_stream_tree$ (node$f (root$f A_tree_stream$ )(left$f A_tree_stream_tree$ )(right$f A_tree_stream_tree$ )))(A_stream_stream_tree_tree$ (node$g (root$g A_stream_stream_tree$ )(left$g A_stream_stream_tree_tree$ )(right$g A_stream_stream_tree_tree$ )))(A_tree_tree_stream$ (sCons$c (shd$c A_tree_tree$ )(stl$c A_tree_tree_stream$ )))(A_tree_tree_stream_tree$ (node$h (root$h A_tree_tree_stream$ )(left$h A_tree_tree_stream_tree$ )(right$h A_tree_tree_stream_tree$ )))(A_stream_tree_stream$ (sCons$d (shd$d A_stream_tree$ )(stl$d A_stream_tree_stream$ )))(A_stream_tree_stream_tree$ (node$i (root$i A_stream_tree_stream$ )(left$i A_stream_tree_stream_tree$ )(right$i A_stream_tree_stream_tree$ )))(A_stream_stream_stream$ (sCons$e (shd$e A_stream_stream$ )(stl$e A_stream_stream_stream$ )))(A_tree_stream_stream$ (sCons$f (shd$f A_tree_stream$ )(stl$f A_tree_stream_stream$ )))(A_stream_stream_tree_stream$ (sCons$g (shd$g A_stream_stream_tree$ )(stl$g A_stream_stream_tree_stream$ )))(A_tree_tree_stream_stream$ (sCons$h (shd$h A_tree_tree_stream$ )(stl$h A_tree_tree_stream_stream$ )))(A_stream_tree_stream_stream$ (sCons$i (shd$i A_stream_tree_stream$ )(stl$i A_stream_tree_stream_stream$ )))(A_a_fun_tree$ (node$j (select$ A_a_fun$ )(selecta$ A_a_fun_tree$ )(selectb$ A_a_fun_tree$ )))(A_a_fun_stream$ (sCons$j (selectc$ A_a_fun$ )(selectd$ A_a_fun_stream$ )))(A_a_fun_a_fun_tree$ (node$k (selecte$ A_a_fun_a_fun$ )(selectf$ A_a_fun_a_fun_tree$ )(selectg$ A_a_fun_a_fun_tree$ )))(A_a_fun_a_fun_stream$ (sCons$k (selecth$ A_a_fun_a_fun$ )(selecti$ A_a_fun_a_fun_stream$ )))(A_a_a_fun_fun_tree$ (node$l (selectj$ A_a_a_fun_fun$ )(selectk$ A_a_a_fun_fun_tree$ )(selectl$ A_a_a_fun_fun_tree$ )))(A_a_a_fun_fun_stream$ (sCons$l (selectm$ A_a_a_fun_fun$ )(selectn$ A_a_a_fun_fun_stream$ )))(A_a_fun_a_a_fun_fun_tree$ (node$m (selecto$ A_a_fun_a_a_fun_fun$ )(selectp$ A_a_fun_a_a_fun_fun_tree$ )(selectq$ A_a_fun_a_a_fun_fun_tree$ )))(A_a_fun_a_a_fun_fun_stream$ (sCons$m (selectr$ A_a_fun_a_a_fun_fun$ )(selects$ A_a_fun_a_a_fun_fun_stream$ )))(A_a_tree_fun_tree$ (node$n (selectt$ A_a_tree_fun$ )(selectu$ A_a_tree_fun_tree$ )(selectv$ A_a_tree_fun_tree$ )))(A_a_tree_fun_stream$ (sCons$n (selectw$ A_a_tree_fun$ )(selectx$ A_a_tree_fun_stream$ )))(A_a_stream_fun_tree$ (node$o (selecty$ A_a_stream_fun$ )(selectz$ A_a_stream_fun_tree$ )(selecua$ A_a_stream_fun_tree$ )))(A_a_stream_fun_stream$ (sCons$o (selecub$ A_a_stream_fun$ )(selecuc$ A_a_stream_fun_stream$ )))(A_a_a_fun_fun_a_fun_tree$ (node$p (selecud$ A_a_a_fun_fun_a_fun$ )(selecue$ A_a_a_fun_fun_a_fun_tree$ )(selecuf$ A_a_a_fun_fun_a_fun_tree$ )))(A_a_a_fun_fun_a_fun_stream$ (sCons$p (selecug$ A_a_a_fun_fun_a_fun$ )(selecuh$ A_a_a_fun_fun_a_fun_stream$ )))(A_a_fun_a_fun_a_fun_tree$ (node$q (selecui$ A_a_fun_a_fun_a_fun$ )(selecuj$ A_a_fun_a_fun_a_fun_tree$ )(selecuk$ A_a_fun_a_fun_a_fun_tree$ )))(A_a_fun_a_fun_a_fun_stream$ (sCons$q (selecul$ A_a_fun_a_fun_a_fun$ )(selecum$ A_a_fun_a_fun_a_fun_stream$ )))(A_a_a_a_fun_fun_fun_tree$ (node$r (selecun$ A_a_a_a_fun_fun_fun$ )(selecuo$ A_a_a_a_fun_fun_fun_tree$ )(selecup$ A_a_a_a_fun_fun_fun_tree$ )))(A_a_a_a_fun_fun_fun_stream$ (sCons$r (selecuq$ A_a_a_a_fun_fun_fun$ )(selecur$ A_a_a_a_fun_fun_fun_stream$ )))(A_a_a_fun_a_fun_fun_tree$ (node$s (selecus$ A_a_a_fun_a_fun_fun$ )(selecut$ A_a_a_fun_a_fun_fun_tree$ )(selecuu$ A_a_a_fun_a_fun_fun_tree$ )))(A_a_a_fun_a_fun_fun_stream$ (sCons$s (selecuv$ A_a_a_fun_a_fun_fun$ )(selecuw$ A_a_a_fun_a_fun_fun_stream$ )))(A_stream_a_stream_fun_stream$ (sCons$t (selecux$ A_stream_a_stream_fun$ )(selecuy$ A_stream_a_stream_fun_stream$ )))(A_stream_a_fun_stream$ (sCons$u (selecuz$ A_stream_a_fun$ )(selecva$ A_stream_a_fun_stream$ )))(A_stream_a_fun_tree$ (node$t (selecvb$ A_stream_a_fun$ )(selecvc$ A_stream_a_fun_tree$ )(selecvd$ A_stream_a_fun_tree$ )))(A_tree_a_fun_tree$ (node$u (selecve$ A_tree_a_fun$ )(selecvf$ A_tree_a_fun_tree$ )(selecvg$ A_tree_a_fun_tree$ )))(A_stream_a_stream_fun_tree$ (node$v (selecvh$ A_stream_a_stream_fun$ )(selecvi$ A_stream_a_stream_fun_tree$ )(selecvj$ A_stream_a_stream_fun_tree$ )))(A_stream_a_tree_fun_tree$ (node$w (selecvk$ A_stream_a_tree_fun$ )(selecvl$ A_stream_a_tree_fun_tree$ )(selecvm$ A_stream_a_tree_fun_tree$ )))(A_tree_a_stream_fun_tree$ (node$x (selecvn$ A_tree_a_stream_fun$ )(selecvo$ A_tree_a_stream_fun_tree$ )(selecvp$ A_tree_a_stream_fun_tree$ )))(A_tree_a_tree_fun_tree$ (node$y (selecvq$ A_tree_a_tree_fun$ )(selecvr$ A_tree_a_tree_fun_tree$ )(selecvs$ A_tree_a_tree_fun_tree$ )))(A_tree_a_fun_stream$ (sCons$v (selecvt$ A_tree_a_fun$ )(selecvu$ A_tree_a_fun_stream$ )))(A_stream_a_tree_fun_stream$ (sCons$w (selecvv$ A_stream_a_tree_fun$ )(selecvw$ A_stream_a_tree_fun_stream$ )))(A_tree_a_stream_fun_stream$ (sCons$x (selecvx$ A_tree_a_stream_fun$ )(selecvy$ A_tree_a_stream_fun_stream$ )))(A_tree_a_tree_fun_stream$ (sCons$y (selecvz$ A_tree_a_tree_fun$ )(selecwa$ A_tree_a_tree_fun_stream$ )))))
(declare-fun id$ ()A_a_fun$ )
(declare-fun id$a ()A_tree_a_tree_fun$ )
(declare-fun id$b ()A_stream_a_stream_fun$ )
(declare-fun id$c ()A_stream_tree_a_stream_tree_fun$ )
(declare-fun id$d ()A_tree_tree_a_tree_tree_fun$ )
(declare-fun id$e ()A_stream_stream_a_stream_stream_fun$ )
(declare-fun id$f ()A_tree_stream_a_tree_stream_fun$ )
(declare-fun id$g ()A_stream_stream_tree_a_stream_stream_tree_fun$ )
(declare-fun id$h ()A_tree_tree_stream_a_tree_tree_stream_fun$ )
(declare-fun id$i ()A_stream_tree_stream_a_stream_tree_stream_fun$ )
(declare-fun id$j ()A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun id$k ()A_stream_a_fun_a_stream_a_fun_fun$ )
(declare-fun id$l ()A_a_tree_fun_a_a_tree_fun_fun$ )
(declare-fun id$m ()A_a_stream_fun_a_a_stream_fun_fun$ )
(declare-fun id$n ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$o ()A_tree_a_fun_a_tree_a_fun_fun$ )
(declare-fun id$p ()A_stream_a_tree_fun_a_stream_a_tree_fun_fun$ )
(declare-fun id$q ()A_tree_a_stream_fun_a_tree_a_stream_fun_fun$ )
(declare-fun id$r ()A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ )
(declare-fun id$s ()A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun one$ ()A_tree$ )
(declare-fun one$a ()A_stream$ )
(declare-fun one$b ()A$ )
(declare-fun one$c ()A_tree_tree$ )
(declare-fun one$d ()A_stream_tree$ )
(declare-fun one$e ()A_stream_tree_tree$ )
(declare-fun one$f ()A_tree_tree_tree$ )
(declare-fun one$g ()A_stream_stream_tree$ )
(declare-fun one$h ()A_stream_stream$ )
(declare-fun one$i ()A_tree_stream_tree$ )
(declare-fun one$j ()A_tree_stream$ )
(declare-fun one$k ()A_stream_stream_tree_tree$ )
(declare-fun one$l ()A_tree_tree_stream_tree$ )
(declare-fun one$m ()A_tree_tree_stream$ )
(declare-fun one$n ()A_stream_tree_stream_tree$ )
(declare-fun one$o ()A_stream_tree_stream$ )
(declare-fun one$p ()A_stream_stream_stream$ )
(declare-fun one$q ()A_tree_stream_stream$ )
(declare-fun one$r ()A_stream_stream_tree_stream$ )
(declare-fun one$s ()A_tree_tree_stream_stream$ )
(declare-fun one$t ()A_stream_tree_stream_stream$ )
(declare-fun stl$j (A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun stl$k (A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun stl$l (A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun stl$m (A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$ (A_a_fun_stream$ )A_stream_a_stream_fun$ )
(declare-fun st_ap$a (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$b (A_a_a_fun_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$c (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$d (A_a_tree_fun_stream$ A_stream$ )A_tree_stream$ )
(declare-fun st_ap$e (A_a_stream_fun_stream$ A_stream$ )A_stream_stream$ )
(declare-fun st_ap$f (A_a_a_fun_fun_a_fun_stream$ A_a_a_fun_fun_stream$ )A_stream$ )
(declare-fun st_ap$g (A_a_fun_a_fun_a_fun_stream$ A_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$h (A_a_a_a_fun_fun_fun_stream$ A_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun st_ap$i (A_a_a_fun_a_fun_fun_stream$ A_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun st_ap$j (A_stream_a_fun_stream$ A_stream_stream$ )A_stream$ )
(declare-fun st_ap$k (A_tree_a_fun_stream$ A_tree_stream$ )A_stream$ )
(declare-fun st_ap$l (A_stream_a_stream_fun_stream$ A_stream_stream$ )A_stream_stream$ )
(declare-fun st_ap$m (A_stream_a_tree_fun_stream$ A_stream_stream$ )A_tree_stream$ )
(declare-fun st_ap$n (A_tree_a_stream_fun_stream$ A_tree_stream$ )A_stream_stream$ )
(declare-fun st_ap$o (A_tree_a_tree_fun_stream$ A_tree_stream$ )A_tree_stream$ )
(declare-fun stream$ (A_tree$ )A_stream$ )
(declare-fun fun_app$ (A_a_stream_fun$ A$ )A_stream$ )
(declare-fun stream$a (A_a_fun_tree$ )A_a_fun_stream$ )
(declare-fun stream$b (A_a_fun_a_fun_tree$ )A_a_fun_a_fun_stream$ )
(declare-fun stream$c (A_a_a_fun_fun_tree$ )A_a_a_fun_fun_stream$ )
(declare-fun stream$d (A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun stream$e (A_tree_tree$ )A_tree_stream$ )
(declare-fun stream$f (A_a_tree_fun_tree$ )A_a_tree_fun_stream$ )
(declare-fun stream$g (A_stream_tree$ )A_stream_stream$ )
(declare-fun stream$h (A_a_stream_fun_tree$ )A_a_stream_fun_stream$ )
(declare-fun stream$i (A_a_a_fun_fun_a_fun_tree$ )A_a_a_fun_fun_a_fun_stream$ )
(declare-fun stream$j (A_a_fun_a_fun_a_fun_tree$ )A_a_fun_a_fun_a_fun_stream$ )
(declare-fun stream$k (A_a_a_a_fun_fun_fun_tree$ )A_a_a_a_fun_fun_fun_stream$ )
(declare-fun stream$l (A_a_a_fun_a_fun_fun_tree$ )A_a_a_fun_a_fun_fun_stream$ )
(declare-fun tree_ap$ (A_a_fun_tree$ )A_tree_a_tree_fun$ )
(declare-fun fun_app$a (A_tree_a_tree_fun$ A_tree$ )A_tree$ )
(declare-fun fun_app$b (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$c (A_a_fun$ A$ )A$ )
(declare-fun fun_app$d (A_a_tree_fun$ A$ )A_tree$ )
(declare-fun fun_app$e (A_stream_a_fun$ A_stream$ )A$ )
(declare-fun fun_app$f (A_tree_a_fun$ A_tree$ )A$ )
(declare-fun fun_app$g (A_stream_a_tree_fun$ A_stream$ )A_tree$ )
(declare-fun fun_app$h (A_tree_a_stream_fun$ A_tree$ )A_stream$ )
(declare-fun fun_app$i (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$j (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun siterate$ (A_a_fun$ )A_a_stream_fun$ )
(declare-fun tree_ap$a (A_a_fun_a_fun_tree$ A_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$b (A_a_a_fun_fun_tree$ A_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$c (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$d (A_a_tree_fun_tree$ A_tree$ )A_tree_tree$ )
(declare-fun tree_ap$e (A_a_stream_fun_tree$ A_tree$ )A_stream_tree$ )
(declare-fun tree_ap$f (A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_tree$ )A_tree$ )
(declare-fun tree_ap$g (A_a_fun_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$h (A_a_a_a_fun_fun_fun_tree$ A_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_ap$i (A_a_a_fun_a_fun_fun_tree$ A_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_ap$j (A_stream_a_fun_tree$ A_stream_tree$ )A_tree$ )
(declare-fun tree_ap$k (A_tree_a_fun_tree$ A_tree_tree$ )A_tree$ )
(declare-fun tree_ap$l (A_stream_a_stream_fun_tree$ A_stream_tree$ )A_stream_tree$ )
(declare-fun tree_ap$m (A_stream_a_tree_fun_tree$ A_stream_tree$ )A_tree_tree$ )
(declare-fun tree_ap$n (A_tree_a_stream_fun_tree$ A_tree_tree$ )A_stream_tree$ )
(declare-fun tree_ap$o (A_tree_a_tree_fun_tree$ A_tree_tree$ )A_tree_tree$ )
(declare-fun siterate$a (A_tree_a_tree_fun$ A_tree$ )A_tree_stream$ )
(declare-fun siterate$b (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun siterate$c (A_stream_tree_a_stream_tree_fun$ A_stream_tree$ )A_stream_tree_stream$ )
(declare-fun siterate$d (A_tree_tree_a_tree_tree_fun$ A_tree_tree$ )A_tree_tree_stream$ )
(declare-fun siterate$e (A_stream_stream_a_stream_stream_fun$ A_stream_stream$ )A_stream_stream_stream$ )
(declare-fun siterate$f (A_tree_stream_a_tree_stream_fun$ A_tree_stream$ )A_tree_stream_stream$ )
(declare-fun siterate$g (A_stream_stream_tree_a_stream_stream_tree_fun$ A_stream_stream_tree$ )A_stream_stream_tree_stream$ )
(declare-fun siterate$h (A_tree_tree_stream_a_tree_tree_stream_fun$ A_tree_tree_stream$ )A_tree_tree_stream_stream$ )
(declare-fun siterate$i (A_stream_tree_stream_a_stream_tree_stream_fun$ A_stream_tree_stream$ )A_stream_tree_stream_stream$ )
(declare-fun siterate$j (A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_a_stream_fun_stream$ )
(declare-fun siterate$k (A_stream_a_fun_a_stream_a_fun_fun$ A_stream_a_fun$ )A_stream_a_fun_stream$ )
(declare-fun siterate$l (A_a_tree_fun_a_a_tree_fun_fun$ A_a_tree_fun$ )A_a_tree_fun_stream$ )
(declare-fun siterate$m (A_a_stream_fun_a_a_stream_fun_fun$ A_a_stream_fun$ )A_a_stream_fun_stream$ )
(declare-fun siterate$n (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$o (A_tree_a_fun_a_tree_a_fun_fun$ A_tree_a_fun$ )A_tree_a_fun_stream$ )
(declare-fun siterate$p (A_stream_a_tree_fun_a_stream_a_tree_fun_fun$ A_stream_a_tree_fun$ )A_stream_a_tree_fun_stream$ )
(declare-fun siterate$q (A_tree_a_stream_fun_a_tree_a_stream_fun_fun$ A_tree_a_stream_fun$ )A_tree_a_stream_fun_stream$ )
(declare-fun siterate$r (A_tree_a_tree_fun_a_tree_a_tree_fun_fun$ A_tree_a_tree_fun$ )A_tree_a_tree_fun_stream$ )
(declare-fun siterate$s (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun_stream$ )
(declare-fun tree_chop$ (A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_pure$ (A$ )A_tree$ )
(declare-fun tree_chop$a (A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_chop$b (A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_chop$c (A_tree_tree$ )A_tree_tree$ )
(declare-fun tree_chop$d (A_stream_tree$ )A_stream_tree$ )
(declare-fun tree_chop$e (A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_chop$f (A_tree$ )A_tree$ )
(declare-fun tree_chop$g (A_tree_a_fun_tree$ )A_tree_a_fun_tree$ )
(declare-fun tree_chop$h (A_stream_a_fun_tree$ )A_stream_a_fun_tree$ )
(declare-fun tree_chop$i (A_a_tree_fun_tree$ )A_a_tree_fun_tree$ )
(declare-fun tree_chop$j (A_a_stream_fun_tree$ )A_a_stream_fun_tree$ )
(declare-fun tree_chop$k (A_tree_a_tree_fun_tree$ )A_tree_a_tree_fun_tree$ )
(declare-fun tree_chop$l (A_stream_a_tree_fun_tree$ )A_stream_a_tree_fun_tree$ )
(declare-fun tree_chop$m (A_tree_a_stream_fun_tree$ )A_tree_a_stream_fun_tree$ )
(declare-fun tree_chop$n (A_stream_a_stream_fun_tree$ )A_stream_a_stream_fun_tree$ )
(declare-fun tree_pure$a (A_tree$ )A_tree_tree$ )
(declare-fun tree_pure$b (A_stream$ )A_stream_tree$ )
(declare-fun tree_pure$c (A_stream_tree$ )A_stream_tree_tree$ )
(declare-fun tree_pure$d (A_tree_tree$ )A_tree_tree_tree$ )
(declare-fun tree_pure$e (A_stream_stream$ )A_stream_stream_tree$ )
(declare-fun tree_pure$f (A_tree_stream$ )A_tree_stream_tree$ )
(declare-fun tree_pure$g (A_stream_stream_tree$ )A_stream_stream_tree_tree$ )
(declare-fun tree_pure$h (A_tree_tree_stream$ )A_tree_tree_stream_tree$ )
(declare-fun tree_pure$i (A_stream_tree_stream$ )A_stream_tree_stream_tree$ )
(declare-fun tree_pure$j (A_a_fun$ )A_a_fun_tree$ )
(declare-fun tree_pure$k (A_a_stream_fun$ )A_a_stream_fun_tree$ )
(declare-fun tree_pure$l (A_a_tree_fun$ )A_a_tree_fun_tree$ )
(declare-fun tree_pure$m (A_stream_a_fun$ )A_stream_a_fun_tree$ )
(declare-fun tree_pure$n (A_tree_a_fun$ )A_tree_a_fun_tree$ )
(declare-fun tree_pure$o (A_stream_a_stream_fun$ )A_stream_a_stream_fun_tree$ )
(declare-fun tree_pure$p (A_stream_a_tree_fun$ )A_stream_a_tree_fun_tree$ )
(declare-fun tree_pure$q (A_tree_a_stream_fun$ )A_tree_a_stream_fun_tree$ )
(declare-fun tree_pure$r (A_tree_a_tree_fun$ )A_tree_a_tree_fun_tree$ )
(declare-fun tree_pure$s (A_a_a_fun_fun$ )A_a_a_fun_fun_tree$ )
(assert (! (not (= (stream$ one$ )one$a )):named a0 ))
(assert (! (= one$ (tree_pure$ one$b )):named a1 ))
(assert (! (= one$c (tree_pure$a one$ )):named a2 ))
(assert (! (= one$d (tree_pure$b one$a )):named a3 ))
(assert (! (= one$e (tree_pure$c one$d )):named a4 ))
(assert (! (= one$f (tree_pure$d one$c )):named a5 ))
(assert (! (= one$g (tree_pure$e one$h )):named a6 ))
(assert (! (= one$i (tree_pure$f one$j )):named a7 ))
(assert (! (= one$k (tree_pure$g one$g )):named a8 ))
(assert (! (= one$l (tree_pure$h one$m )):named a9 ))
(assert (! (= one$n (tree_pure$i one$o )):named a10 ))
(assert (! (forall ((?v0 A_tree$ ))(= (= one$ ?v0 )(= ?v0 one$ ))):named a11 ))
(assert (! (forall ((?v0 A_stream$ ))(= (= one$a ?v0 )(= ?v0 one$a ))):named a12 ))
(assert (! (forall ((?v0 A$ ))(= (= one$b ?v0 )(= ?v0 one$b ))):named a13 ))
(assert (! (forall ((?v0 A_stream_tree$ ))(= (= one$d ?v0 )(= ?v0 one$d ))):named a14 ))
(assert (! (forall ((?v0 A_tree_tree$ ))(= (= one$c ?v0 )(= ?v0 one$c ))):named a15 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(= (= one$h ?v0 )(= ?v0 one$h ))):named a16 ))
(assert (! (forall ((?v0 A_tree_stream$ ))(= (= one$j ?v0 )(= ?v0 one$j ))):named a17 ))
(assert (! (forall ((?v0 A_stream_stream_tree$ ))(= (= one$g ?v0 )(= ?v0 one$g ))):named a18 ))
(assert (! (forall ((?v0 A_tree_tree_stream$ ))(= (= one$m ?v0 )(= ?v0 one$m ))):named a19 ))
(assert (! (forall ((?v0 A_stream_tree_stream$ ))(= (= one$o ?v0 )(= ?v0 one$o ))):named a20 ))
(assert (! (= one$a (fun_app$ (siterate$ id$ )one$b )):named a21 ))
(assert (! (= one$j (siterate$a id$a one$ )):named a22 ))
(assert (! (= one$h (siterate$b id$b one$a )):named a23 ))
(assert (! (= one$o (siterate$c id$c one$d )):named a24 ))
(assert (! (= one$m (siterate$d id$d one$c )):named a25 ))
(assert (! (= one$p (siterate$e id$e one$h )):named a26 ))
(assert (! (= one$q (siterate$f id$f one$j )):named a27 ))
(assert (! (= one$r (siterate$g id$g one$g )):named a28 ))
(assert (! (= one$s (siterate$h id$h one$m )):named a29 ))
(assert (! (= one$t (siterate$i id$i one$o )):named a30 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (stream$ (fun_app$a (tree_ap$ ?v0 )?v1 ))(fun_app$b (st_ap$ (stream$a ?v0 ))(stream$ ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (stream$ (tree_ap$a ?v0 ?v1 ))(st_ap$a (stream$b ?v0 )(stream$a ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (stream$a (tree_ap$b ?v0 ?v1 ))(st_ap$b (stream$c ?v0 )(stream$ ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (stream$a (tree_ap$c ?v0 ?v1 ))(st_ap$c (stream$d ?v0 )(stream$a ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_a_tree_fun_tree$ )(?v1 A_tree$ ))(= (stream$e (tree_ap$d ?v0 ?v1 ))(st_ap$d (stream$f ?v0 )(stream$ ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_a_stream_fun_tree$ )(?v1 A_tree$ ))(= (stream$g (tree_ap$e ?v0 ?v1 ))(st_ap$e (stream$h ?v0 )(stream$ ?v1 )))):named a36 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun_tree$ )(?v1 A_a_a_fun_fun_tree$ ))(= (stream$ (tree_ap$f ?v0 ?v1 ))(st_ap$f (stream$i ?v0 )(stream$c ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun_tree$ )(?v1 A_a_fun_a_fun_tree$ ))(= (stream$ (tree_ap$g ?v0 ?v1 ))(st_ap$g (stream$j ?v0 )(stream$b ?v1 )))):named a38 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$ )(?v1 A_tree$ ))(= (stream$c (tree_ap$h ?v0 ?v1 ))(st_ap$h (stream$k ?v0 )(stream$ ?v1 )))):named a39 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (stream$b (tree_ap$i ?v0 ?v1 ))(st_ap$i (stream$l ?v0 )(stream$ ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ ))(= (stl$j (stream$d ?v0 ))(stream$d (tree_chop$ ?v0 )))):named a41 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ ))(= (stl$k (stream$c ?v0 ))(stream$c (tree_chop$a ?v0 )))):named a42 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ ))(= (stl$l (stream$b ?v0 ))(stream$b (tree_chop$b ?v0 )))):named a43 ))
(assert (! (forall ((?v0 A_tree_tree$ ))(= (stl$b (stream$e ?v0 ))(stream$e (tree_chop$c ?v0 )))):named a44 ))
(assert (! (forall ((?v0 A_stream_tree$ ))(= (stl$a (stream$g ?v0 ))(stream$g (tree_chop$d ?v0 )))):named a45 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(= (stl$m (stream$a ?v0 ))(stream$a (tree_chop$e ?v0 )))):named a46 ))
(assert (! (forall ((?v0 A_tree$ ))(= (stl$ (stream$ ?v0 ))(stream$ (tree_chop$f ?v0 )))):named a47 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream_a_stream_fun$ ))(= (= (siterate$j id$j ?v0 )(siterate$j id$j ?v1 ))(= ?v0 ?v1 ))):named a48 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream_a_fun$ ))(= (= (siterate$k id$k ?v0 )(siterate$k id$k ?v1 ))(= ?v0 ?v1 ))):named a49 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A_a_tree_fun$ ))(= (= (siterate$l id$l ?v0 )(siterate$l id$l ?v1 ))(= ?v0 ?v1 ))):named a50 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A_a_stream_fun$ ))(= (= (siterate$m id$m ?v0 )(siterate$m id$m ?v1 ))(= ?v0 ?v1 ))):named a51 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(= (= (siterate$n id$n ?v0 )(siterate$n id$n ?v1 ))(= ?v0 ?v1 ))):named a52 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (fun_app$ (siterate$ id$ )?v0 )(fun_app$ (siterate$ id$ )?v1 ))(= ?v0 ?v1 ))):named a53 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (= (siterate$b id$b ?v0 )(siterate$b id$b ?v1 ))(= ?v0 ?v1 ))):named a54 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(= (= (siterate$a id$a ?v0 )(siterate$a id$a ?v1 ))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$a (tree_ap$ (tree_pure$j ?v0 ))(tree_pure$ ?v1 ))(tree_pure$ (fun_app$c ?v0 ?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A$ ))(= (tree_ap$e (tree_pure$k ?v0 )(tree_pure$ ?v1 ))(tree_pure$b (fun_app$ ?v0 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A$ ))(= (tree_ap$d (tree_pure$l ?v0 )(tree_pure$ ?v1 ))(tree_pure$a (fun_app$d ?v0 ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream$ ))(= (tree_ap$j (tree_pure$m ?v0 )(tree_pure$b ?v1 ))(tree_pure$ (fun_app$e ?v0 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_tree_a_fun$ )(?v1 A_tree$ ))(= (tree_ap$k (tree_pure$n ?v0 )(tree_pure$a ?v1 ))(tree_pure$ (fun_app$f ?v0 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ ))(= (tree_ap$l (tree_pure$o ?v0 )(tree_pure$b ?v1 ))(tree_pure$b (fun_app$b ?v0 ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_stream_a_tree_fun$ )(?v1 A_stream$ ))(= (tree_ap$m (tree_pure$p ?v0 )(tree_pure$b ?v1 ))(tree_pure$a (fun_app$g ?v0 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_tree_a_stream_fun$ )(?v1 A_tree$ ))(= (tree_ap$n (tree_pure$q ?v0 )(tree_pure$a ?v1 ))(tree_pure$b (fun_app$h ?v0 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree$ ))(= (tree_ap$o (tree_pure$r ?v0 )(tree_pure$a ?v1 ))(tree_pure$a (fun_app$a ?v0 ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (tree_ap$b (tree_pure$s ?v0 )(tree_pure$ ?v1 ))(tree_pure$j (fun_app$i ?v0 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$f (fun_app$a (tree_ap$ ?v0 )?v1 ))(fun_app$a (tree_ap$ (tree_chop$e ?v0 ))(tree_chop$f ?v1 )))):named a66 ))
(assert (! (forall ((?v0 A_tree_a_fun_tree$ )(?v1 A_tree_tree$ ))(= (tree_chop$f (tree_ap$k ?v0 ?v1 ))(tree_ap$k (tree_chop$g ?v0 )(tree_chop$c ?v1 )))):named a67 ))
(assert (! (forall ((?v0 A_stream_a_fun_tree$ )(?v1 A_stream_tree$ ))(= (tree_chop$f (tree_ap$j ?v0 ?v1 ))(tree_ap$j (tree_chop$h ?v0 )(tree_chop$d ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_a_tree_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$c (tree_ap$d ?v0 ?v1 ))(tree_ap$d (tree_chop$i ?v0 )(tree_chop$f ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_a_stream_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$d (tree_ap$e ?v0 ?v1 ))(tree_ap$e (tree_chop$j ?v0 )(tree_chop$f ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (tree_chop$f (tree_ap$a ?v0 ?v1 ))(tree_ap$a (tree_chop$b ?v0 )(tree_chop$e ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$e (tree_ap$b ?v0 ?v1 ))(tree_ap$b (tree_chop$a ?v0 )(tree_chop$f ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun_tree$ )(?v1 A_tree_tree$ ))(= (tree_chop$c (tree_ap$o ?v0 ?v1 ))(tree_ap$o (tree_chop$k ?v0 )(tree_chop$c ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_stream_a_tree_fun_tree$ )(?v1 A_stream_tree$ ))(= (tree_chop$c (tree_ap$m ?v0 ?v1 ))(tree_ap$m (tree_chop$l ?v0 )(tree_chop$d ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_tree_a_stream_fun_tree$ )(?v1 A_tree_tree$ ))(= (tree_chop$d (tree_ap$n ?v0 ?v1 ))(tree_ap$n (tree_chop$m ?v0 )(tree_chop$c ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ ))(= (tree_chop$n (tree_pure$o ?v0 ))(tree_pure$o ?v0 ))):named a76 ))
(assert (! (forall ((?v0 A_stream_a_fun$ ))(= (tree_chop$h (tree_pure$m ?v0 ))(tree_pure$m ?v0 ))):named a77 ))
(assert (! (forall ((?v0 A_a_tree_fun$ ))(= (tree_chop$i (tree_pure$l ?v0 ))(tree_pure$l ?v0 ))):named a78 ))
(assert (! (forall ((?v0 A_a_stream_fun$ ))(= (tree_chop$j (tree_pure$k ?v0 ))(tree_pure$k ?v0 ))):named a79 ))
(assert (! (forall ((?v0 A_a_fun$ ))(= (tree_chop$e (tree_pure$j ?v0 ))(tree_pure$j ?v0 ))):named a80 ))
(assert (! (forall ((?v0 A$ ))(= (tree_chop$f (tree_pure$ ?v0 ))(tree_pure$ ?v0 ))):named a81 ))
(assert (! (forall ((?v0 A_stream$ ))(= (tree_chop$d (tree_pure$b ?v0 ))(tree_pure$b ?v0 ))):named a82 ))
(assert (! (forall ((?v0 A_tree$ ))(= (tree_chop$c (tree_pure$a ?v0 ))(tree_pure$a ?v0 ))):named a83 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$b (st_ap$ (siterate$n id$n ?v0 ))(fun_app$ (siterate$ id$ )?v1 ))(fun_app$ (siterate$ id$ )(fun_app$c ?v0 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_a_stream_fun$ )(?v1 A$ ))(= (st_ap$e (siterate$m id$m ?v0 )(fun_app$ (siterate$ id$ )?v1 ))(siterate$b id$b (fun_app$ ?v0 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_a_tree_fun$ )(?v1 A$ ))(= (st_ap$d (siterate$l id$l ?v0 )(fun_app$ (siterate$ id$ )?v1 ))(siterate$a id$a (fun_app$d ?v0 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_stream_a_fun$ )(?v1 A_stream$ ))(= (st_ap$j (siterate$k id$k ?v0 )(siterate$b id$b ?v1 ))(fun_app$ (siterate$ id$ )(fun_app$e ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_tree_a_fun$ )(?v1 A_tree$ ))(= (st_ap$k (siterate$o id$o ?v0 )(siterate$a id$a ?v1 ))(fun_app$ (siterate$ id$ )(fun_app$f ?v0 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ ))(= (st_ap$l (siterate$j id$j ?v0 )(siterate$b id$b ?v1 ))(siterate$b id$b (fun_app$b ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_stream_a_tree_fun$ )(?v1 A_stream$ ))(= (st_ap$m (siterate$p id$p ?v0 )(siterate$b id$b ?v1 ))(siterate$a id$a (fun_app$g ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_tree_a_stream_fun$ )(?v1 A_tree$ ))(= (st_ap$n (siterate$q id$q ?v0 )(siterate$a id$a ?v1 ))(siterate$b id$b (fun_app$h ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A_tree_a_tree_fun$ )(?v1 A_tree$ ))(= (st_ap$o (siterate$r id$r ?v0 )(siterate$a id$a ?v1 ))(siterate$a id$a (fun_app$a ?v0 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (st_ap$a (siterate$s id$s ?v0 )(siterate$n id$n ?v1 ))(fun_app$ (siterate$ id$ )(fun_app$j ?v0 ?v1 )))):named a93 ))
(check-sat )
;(get-unsat-core )
