;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort A_c_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_c_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort A_b_fun_b_fun$ 0 )
(declare-sort A_c_b_fun_fun$ 0 )
(declare-sort A_c_fun_a_fun$ 0 )
(declare-sort A_c_fun_b_fun$ 0 )
(declare-sort A_c_fun_c_fun$ 0 )
(declare-sort B_a_b_fun_fun$ 0 )
(declare-sort B_c_b_fun_fun$ 0 )
(declare-sort C_a_c_fun_fun$ 0 )
(declare-sort C_b_b_fun_fun$ 0 )
(declare-sort C_b_fun_b_fun$ 0 )
(declare-sort C_c_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_c_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_fun_fun$ 0 )
(declare-sort B_a_fun_b_b_fun_fun$ 0 )
(declare-sort C_a_fun_c_b_fun_fun$ 0 )
(declare-sort C_b_fun_c_b_fun_fun$ 0 )
(declare-sort C_c_fun_c_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_c_b_fun_fun_fun$ 0 )
(declare-sort A_b_fun_b_a_b_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_b_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_c_b_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_b_fun_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun_a_b_fun_fun$ 0 )
(declare-sort C_b_fun_a_c_b_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_c_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_b_fun_c_a_fun_c_b_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_b_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_fun_a_b_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_fun_a_c_fun_b_fun_fun$ 0 )
(declare-sort B_b_fun_c_b_fun_c_b_fun_fun_fun$ 0 )
(declare-sort B_c_fun_a_b_fun_a_c_fun_fun_fun$ 0 )
(declare-sort C_b_fun_a_c_fun_a_b_fun_fun_fun$ 0 )
(declare-sort C_b_fun_c_c_fun_c_b_fun_fun_fun$ 0 )
(declare-sort C_c_fun_a_c_fun_a_c_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun_b_a_fun_b_b_fun_fun_fun$ 0 )
(declare-sort C_b_b_fun_fun_c_b_fun_c_b_fun_fun_fun$ 0 )
(declare-sort C_c_b_fun_fun_c_c_fun_c_b_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_b_fun_tree$ (node$ (select$ A_b_fun$ )(selecta$ A_b_fun_tree$ )(selectb$ A_b_fun_tree$ )))(A_c_fun_a_b_fun_fun_tree$ (node$a (selectc$ A_c_fun_a_b_fun_fun$ )(selectd$ A_c_fun_a_b_fun_fun_tree$ )(selecte$ A_c_fun_a_b_fun_fun_tree$ )))(A_c_fun_tree$ (node$b (selectf$ A_c_fun$ )(selectg$ A_c_fun_tree$ )(selecth$ A_c_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ (node$c (selecti$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )(selectj$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(selectk$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )))(A_c_b_fun_fun_tree$ (node$d (selectl$ A_c_b_fun_fun$ )(selectm$ A_c_b_fun_fun_tree$ )(selectn$ A_c_b_fun_fun_tree$ )))(A_tree$ (node$e (root$ A$ )(left$ A_tree$ )(right$ A_tree$ )))(B_tree$ (node$f (root$a B$ )(left$a B_tree$ )(right$a B_tree$ )))(C_b_fun_tree$ (node$g (selecto$ C_b_fun$ )(selectp$ C_b_fun_tree$ )(selectq$ C_b_fun_tree$ )))(C_tree$ (node$h (root$b C$ )(left$b C_tree$ )(right$b C_tree$ )))(A_c_fun_a_fun_tree$ (node$i (selectr$ A_c_fun_a_fun$ )(selects$ A_c_fun_a_fun_tree$ )(selectt$ A_c_fun_a_fun_tree$ )))(A_c_fun_b_fun_tree$ (node$j (selectu$ A_c_fun_b_fun$ )(selectv$ A_c_fun_b_fun_tree$ )(selectw$ A_c_fun_b_fun_tree$ )))(A_c_fun_a_fun_a_c_fun_b_fun_fun_tree$ (node$k (selectx$ A_c_fun_a_fun_a_c_fun_b_fun_fun$ )(selecty$ A_c_fun_a_fun_a_c_fun_b_fun_fun_tree$ )(selectz$ A_c_fun_a_fun_a_c_fun_b_fun_fun_tree$ )))(A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun_tree$ (node$l (selecua$ A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun$ )(selecub$ A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun_tree$ )(selecuc$ A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun_tree$ )))(A_c_fun_a_b_fun_a_b_fun_fun_fun_tree$ (node$m (selecud$ A_c_fun_a_b_fun_a_b_fun_fun_fun$ )(selecue$ A_c_fun_a_b_fun_a_b_fun_fun_fun_tree$ )(selecuf$ A_c_fun_a_b_fun_a_b_fun_fun_fun_tree$ )))(A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ (node$n (selecug$ A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )(selecuh$ A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(selecui$ A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )))(A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$o (selecuj$ A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(selecuk$ A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(selecul$ A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_fun_tree$ (node$p (selecum$ A_b_fun_a_b_fun_fun$ )(selecun$ A_b_fun_a_b_fun_fun_tree$ )(selecuo$ A_b_fun_a_b_fun_fun_tree$ )))(A_c_fun_a_c_fun_a_b_fun_fun_fun_tree$ (node$q (selecup$ A_c_fun_a_c_fun_a_b_fun_fun_fun$ )(selecuq$ A_c_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(selecur$ A_c_fun_a_c_fun_a_b_fun_fun_fun_tree$ )))(A_c_fun_a_c_fun_fun_tree$ (node$r (selecus$ A_c_fun_a_c_fun_fun$ )(selecut$ A_c_fun_a_c_fun_fun_tree$ )(selecuu$ A_c_fun_a_c_fun_fun_tree$ )))(A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ (node$s (selecuv$ A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun$ )(selecuw$ A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(selecux$ A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )))(A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$t (selecuy$ A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(selecuz$ A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(selecva$ A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_fun_tree$ (node$u (selecvb$ A_c_b_fun_fun_a_c_fun_fun$ )(selecvc$ A_c_b_fun_fun_a_c_fun_fun_tree$ )(selecvd$ A_c_b_fun_fun_a_c_fun_fun_tree$ )))(A_c_b_fun_fun_a_b_fun_fun_tree$ (node$v (selecve$ A_c_b_fun_fun_a_b_fun_fun$ )(selecvf$ A_c_b_fun_fun_a_b_fun_fun_tree$ )(selecvg$ A_c_b_fun_fun_a_b_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_tree$ (node$w (selecvh$ A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun$ )(selecvi$ A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_tree$ )(selecvj$ A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun_tree$ (node$x (selecvk$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun$ )(selecvl$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun_tree$ )(selecvm$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$y (selecvn$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(selecvo$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(selecvp$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_b_fun_fun_fun_tree$ (node$z (selecvq$ A_c_b_fun_fun_a_c_b_fun_fun_fun$ )(selecvr$ A_c_b_fun_fun_a_c_b_fun_fun_fun_tree$ )(selecvs$ A_c_b_fun_fun_a_c_b_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$aa (selecvt$ A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(selecvu$ A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(selecvv$ A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ (node$ab (selecvw$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )(selecvx$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )(selecvy$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$ac (selecvz$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(selecwa$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(selecwb$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$ad (selecwc$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(selecwd$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(selecwe$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ (node$ae (selecwf$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )(selecwg$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )(selecwh$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )))(B_a_b_fun_fun_tree$ (node$af (selecwi$ B_a_b_fun_fun$ )(selecwj$ B_a_b_fun_fun_tree$ )(selecwk$ B_a_b_fun_fun_tree$ )))(B_a_fun_tree$ (node$ag (selecwl$ B_a_fun$ )(selecwm$ B_a_fun_tree$ )(selecwn$ B_a_fun_tree$ )))(B_b_fun_tree$ (node$ah (selecwo$ B_b_fun$ )(selecwp$ B_b_fun_tree$ )(selecwq$ B_b_fun_tree$ )))(B_a_fun_b_b_fun_fun_tree$ (node$ai (selecwr$ B_a_fun_b_b_fun_fun$ )(selecws$ B_a_fun_b_b_fun_fun_tree$ )(selecwt$ B_a_fun_b_b_fun_fun_tree$ )))(B_a_b_fun_fun_b_a_fun_b_b_fun_fun_fun_tree$ (node$aj (selecwu$ B_a_b_fun_fun_b_a_fun_b_b_fun_fun_fun$ )(selecwv$ B_a_b_fun_fun_b_a_fun_b_b_fun_fun_fun_tree$ )(selecww$ B_a_b_fun_fun_b_a_fun_b_b_fun_fun_fun_tree$ )))(C_b_b_fun_fun_tree$ (node$ak (selecwx$ C_b_b_fun_fun$ )(selecwy$ C_b_b_fun_fun_tree$ )(selecwz$ C_b_b_fun_fun_tree$ )))(C_b_fun_c_b_fun_fun_tree$ (node$al (selecxa$ C_b_fun_c_b_fun_fun$ )(selecxb$ C_b_fun_c_b_fun_fun_tree$ )(selecxc$ C_b_fun_c_b_fun_fun_tree$ )))(C_b_b_fun_fun_c_b_fun_c_b_fun_fun_fun_tree$ (node$am (selecxd$ C_b_b_fun_fun_c_b_fun_c_b_fun_fun_fun$ )(selecxe$ C_b_b_fun_fun_c_b_fun_c_b_fun_fun_fun_tree$ )(selecxf$ C_b_b_fun_fun_c_b_fun_c_b_fun_fun_fun_tree$ )))(C_c_b_fun_fun_tree$ (node$an (selecxg$ C_c_b_fun_fun$ )(selecxh$ C_c_b_fun_fun_tree$ )(selecxi$ C_c_b_fun_fun_tree$ )))(C_c_fun_tree$ (node$ao (selecxj$ C_c_fun$ )(selecxk$ C_c_fun_tree$ )(selecxl$ C_c_fun_tree$ )))(C_c_fun_c_b_fun_fun_tree$ (node$ap (selecxm$ C_c_fun_c_b_fun_fun$ )(selecxn$ C_c_fun_c_b_fun_fun_tree$ )(selecxo$ C_c_fun_c_b_fun_fun_tree$ )))(C_c_b_fun_fun_c_c_fun_c_b_fun_fun_fun_tree$ (node$aq (selecxp$ C_c_b_fun_fun_c_c_fun_c_b_fun_fun_fun$ )(selecxq$ C_c_b_fun_fun_c_c_fun_c_b_fun_fun_fun_tree$ )(selecxr$ C_c_b_fun_fun_c_c_fun_c_b_fun_fun_fun_tree$ )))(C_b_fun_b_fun_tree$ (node$ar (selecxs$ C_b_fun_b_fun$ )(selecxt$ C_b_fun_b_fun_tree$ )(selecxu$ C_b_fun_b_fun_tree$ )))(B_a_b_fun_fun_a_b_fun_fun_tree$ (node$as (selecxv$ B_a_b_fun_fun_a_b_fun_fun$ )(selecxw$ B_a_b_fun_fun_a_b_fun_fun_tree$ )(selecxx$ B_a_b_fun_fun_a_b_fun_fun_tree$ )))(A_c_b_fun_fun_c_b_fun_fun_tree$ (node$at (selecxy$ A_c_b_fun_fun_c_b_fun_fun$ )(selecxz$ A_c_b_fun_fun_c_b_fun_fun_tree$ )(selecya$ A_c_b_fun_fun_c_b_fun_fun_tree$ )))(A_c_fun_c_fun_tree$ (node$au (selecyb$ A_c_fun_c_fun$ )(selecyc$ A_c_fun_c_fun_tree$ )(selecyd$ A_c_fun_c_fun_tree$ )))(A_b_fun_b_fun_tree$ (node$av (selecye$ A_b_fun_b_fun$ )(selecyf$ A_b_fun_b_fun_tree$ )(selecyg$ A_b_fun_b_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ (node$aw (selecyh$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun$ )(selecyi$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(selecyj$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )))(A_c_fun_a_b_fun_fun_a_b_fun_fun_tree$ (node$ax (selecyk$ A_c_fun_a_b_fun_fun_a_b_fun_fun$ )(selecyl$ A_c_fun_a_b_fun_fun_a_b_fun_fun_tree$ )(selecym$ A_c_fun_a_b_fun_fun_a_b_fun_fun_tree$ )))(A_b_fun_a_c_fun_fun_tree$ (node$ay (selecyn$ A_b_fun_a_c_fun_fun$ )(selecyo$ A_b_fun_a_c_fun_fun_tree$ )(selecyp$ A_b_fun_a_c_fun_fun_tree$ )))(A_b_fun_a_c_b_fun_fun_fun_tree$ (node$az (selecyq$ A_b_fun_a_c_b_fun_fun_fun$ )(selecyr$ A_b_fun_a_c_b_fun_fun_fun_tree$ )(selecys$ A_b_fun_a_c_b_fun_fun_fun_tree$ )))(A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$ba (selecyt$ A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(selecyu$ A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(selecyv$ A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ (node$bb (selecyw$ A_b_fun_a_c_fun_a_b_fun_fun_fun$ )(selecyx$ A_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(selecyy$ A_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_b_fun_fun_fun_tree$ (node$bc (selecyz$ A_b_fun_a_b_fun_a_b_fun_fun_fun$ )(selecza$ A_b_fun_a_b_fun_a_b_fun_fun_fun_tree$ )(seleczb$ A_b_fun_a_b_fun_a_b_fun_fun_fun_tree$ )))(B_c_b_fun_fun_tree$ (node$bd (seleczc$ B_c_b_fun_fun$ )(seleczd$ B_c_b_fun_fun_tree$ )(selecze$ B_c_b_fun_fun_tree$ )))(C_b_fun_a_c_b_fun_fun_fun_tree$ (node$be (seleczf$ C_b_fun_a_c_b_fun_fun_fun$ )(seleczg$ C_b_fun_a_c_b_fun_fun_fun_tree$ )(seleczh$ C_b_fun_a_c_b_fun_fun_fun_tree$ )))(C_a_c_fun_fun_tree$ (node$bf (seleczi$ C_a_c_fun_fun$ )(seleczj$ C_a_c_fun_fun_tree$ )(seleczk$ C_a_c_fun_fun_tree$ )))(A_b_fun_b_a_b_fun_fun_fun_tree$ (node$bg (seleczl$ A_b_fun_b_a_b_fun_fun_fun$ )(seleczm$ A_b_fun_b_a_b_fun_fun_fun_tree$ )(seleczn$ A_b_fun_b_a_b_fun_fun_fun_tree$ )))(C_a_fun_tree$ (node$bh (seleczo$ C_a_fun$ )(seleczp$ C_a_fun_tree$ )(seleczq$ C_a_fun_tree$ )))(B_c_fun_tree$ (node$bi (seleczr$ B_c_fun$ )(seleczs$ B_c_fun_tree$ )(seleczt$ B_c_fun_tree$ )))(C_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ (node$bj (seleczu$ C_b_fun_a_c_fun_a_b_fun_fun_fun$ )(seleczv$ C_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(seleczw$ C_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$bk (seleczx$ A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(seleczy$ A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(seleczz$ A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ (node$bl (seledaa$ A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(seledab$ A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(seledac$ A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )))(A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ (node$bm (seledad$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )(seledae$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )(seledaf$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )))(A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ (node$bn (seledag$ A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )(seledah$ A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )(seledai$ A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )))(B_b_fun_c_b_fun_c_b_fun_fun_fun_tree$ (node$bo (seledaj$ B_b_fun_c_b_fun_c_b_fun_fun_fun$ )(seledak$ B_b_fun_c_b_fun_c_b_fun_fun_fun_tree$ )(seledal$ B_b_fun_c_b_fun_c_b_fun_fun_fun_tree$ )))(C_b_fun_c_c_fun_c_b_fun_fun_fun_tree$ (node$bp (seledam$ C_b_fun_c_c_fun_c_b_fun_fun_fun$ )(seledan$ C_b_fun_c_c_fun_c_b_fun_fun_fun_tree$ )(seledao$ C_b_fun_c_c_fun_c_b_fun_fun_fun_tree$ )))(C_a_fun_c_b_fun_fun_tree$ (node$bq (seledap$ C_a_fun_c_b_fun_fun$ )(seledaq$ C_a_fun_c_b_fun_fun_tree$ )(seledar$ C_a_fun_c_b_fun_fun_tree$ )))(A_b_fun_c_a_fun_c_b_fun_fun_fun_tree$ (node$br (seledas$ A_b_fun_c_a_fun_c_b_fun_fun_fun$ )(seledat$ A_b_fun_c_a_fun_c_b_fun_fun_fun_tree$ )(seledau$ A_b_fun_c_a_fun_c_b_fun_fun_fun_tree$ )))(C_c_fun_a_c_fun_a_c_fun_fun_fun_tree$ (node$bs (seledav$ C_c_fun_a_c_fun_a_c_fun_fun_fun$ )(seledaw$ C_c_fun_a_c_fun_a_c_fun_fun_fun_tree$ )(seledax$ C_c_fun_a_c_fun_a_c_fun_fun_fun_tree$ )))(B_c_fun_a_b_fun_a_c_fun_fun_fun_tree$ (node$bt (seleday$ B_c_fun_a_b_fun_a_c_fun_fun_fun$ )(seledaz$ B_c_fun_a_b_fun_a_c_fun_fun_fun_tree$ )(seledba$ B_c_fun_a_b_fun_a_c_fun_fun_fun_tree$ )))))
(declare-fun f$ ()A_c_b_fun_fun$ )
(declare-fun g$ ()A_c_fun$ )
(declare-fun id$ ()A_b_fun_a_b_fun_fun$ )
(declare-fun uu$ ()A_b_fun$ )
(declare-fun uua$ (C$ )C_b_fun_b_fun$ )
(declare-fun uub$ (B$ )B_a_b_fun_fun_a_b_fun_fun$ )
(declare-fun uuc$ (A$ )A_c_b_fun_fun_c_b_fun_fun$ )
(declare-fun uud$ (A$ )A_c_fun_c_fun$ )
(declare-fun uue$ (A$ )A_b_fun_b_fun$ )
(declare-fun uuf$ (A_c_b_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun uug$ (A_c_fun$ )A_c_fun_a_b_fun_fun_a_b_fun_fun$ )
(declare-fun uuh$ ()A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )
(declare-fun uui$ ()A_b_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun uuj$ (A_b_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun uuk$ (B$ )C_b_fun$ )
(declare-fun uul$ ()B_a_b_fun_fun$ )
(declare-fun uum$ ()C_b_fun_a_c_b_fun_fun_fun$ )
(declare-fun uun$ ()C_a_c_fun_fun$ )
(declare-fun uuo$ ()A_b_fun_a_b_fun_fun$ )
(declare-fun uup$ ()A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )
(declare-fun uuq$ ()A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun$ )
(declare-fun uur$ ()A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )
(declare-fun uus$ ()A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )
(declare-fun uut$ ()A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun$ )
(declare-fun uuu$ ()A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun comp$ ()C_b_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun comp$a ()A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )
(declare-fun comp$b ()A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )
(declare-fun comp$c ()A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )
(declare-fun comp$d ()A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )
(declare-fun comp$e ()B_b_fun_c_b_fun_c_b_fun_fun_fun$ )
(declare-fun comp$f ()C_b_fun_c_c_fun_c_b_fun_fun_fun$ )
(declare-fun comp$g ()A_b_fun_c_a_fun_c_b_fun_fun_fun$ )
(declare-fun comp$h ()C_c_fun_a_c_fun_a_c_fun_fun_fun$ )
(declare-fun comp$i ()B_c_fun_a_b_fun_a_c_fun_fun_fun$ )
(declare-fun left$c (A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun left$d (A_c_b_fun_fun_tree$ )A_c_b_fun_fun_tree$ )
(declare-fun left$e (A_c_fun_tree$ )A_c_fun_tree$ )
(declare-fun root$c (C_b_fun_tree$ )C_b_fun$ )
(declare-fun root$d (A_b_fun_tree$ )A_b_fun$ )
(declare-fun root$e (A_c_b_fun_fun_tree$ )A_c_b_fun_fun$ )
(declare-fun root$f (A_c_fun_tree$ )A_c_fun$ )
(declare-fun tree_I$ ()A_b_fun_a_b_fun_fun_tree$ )
(declare-fun tree_K$ ()A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$ ()A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun fun_app$ (A_b_fun$ A$ )B$ )
(declare-fun tree_K$a ()A_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_K$b ()A_b_fun_a_b_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_K$c ()B_c_b_fun_fun_tree$ )
(declare-fun tree_K$d ()B_a_b_fun_fun_tree$ )
(declare-fun tree_K$e ()C_b_fun_a_c_b_fun_fun_fun_tree$ )
(declare-fun tree_K$f ()C_a_c_fun_fun_tree$ )
(declare-fun tree_K$g ()A_b_fun_b_a_b_fun_fun_fun_tree$ )
(declare-fun tree_S$a ()A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun_tree$ )
(declare-fun tree_S$b ()A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$c ()A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$d ()A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$e ()A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$f ()A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$g ()B_a_b_fun_fun_b_a_fun_b_b_fun_fun_fun_tree$ )
(declare-fun tree_S$h ()C_b_b_fun_fun_c_b_fun_c_b_fun_fun_fun_tree$ )
(declare-fun tree_S$i ()C_c_b_fun_fun_c_c_fun_c_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$ (A_c_fun_a_b_fun_fun_tree$ A_c_fun_tree$ )A_b_fun_tree$ )
(declare-fun fun_app$a (C_b_fun$ C$ )B$ )
(declare-fun fun_app$b (A_c_b_fun_fun$ A$ )C_b_fun$ )
(declare-fun fun_app$c (A_c_fun$ A$ )C$ )
(declare-fun fun_app$d (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )A_c_fun_a_b_fun_fun$ )
(declare-fun fun_app$e (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ A_c_b_fun_fun$ )A_c_fun_a_b_fun_fun$ )
(declare-fun fun_app$f (A_c_fun_a_b_fun_fun_a_b_fun_fun$ A_c_fun_a_b_fun_fun$ )A_b_fun$ )
(declare-fun fun_app$g (A_c_fun_a_b_fun_fun$ A_c_fun$ )A_b_fun$ )
(declare-fun fun_app$h (C_b_fun_b_fun$ C_b_fun$ )B$ )
(declare-fun fun_app$i (B_a_b_fun_fun_a_b_fun_fun$ B_a_b_fun_fun$ )A_b_fun$ )
(declare-fun fun_app$j (B_a_b_fun_fun$ B$ )A_b_fun$ )
(declare-fun fun_app$k (A_c_b_fun_fun_c_b_fun_fun$ A_c_b_fun_fun$ )C_b_fun$ )
(declare-fun fun_app$l (A_c_fun_c_fun$ A_c_fun$ )C$ )
(declare-fun fun_app$m (A_b_fun_b_fun$ A_b_fun$ )B$ )
(declare-fun fun_app$n (A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ A_c_b_fun_fun_a_c_b_fun_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun fun_app$o (A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )
(declare-fun fun_app$p (A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ A_c_b_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun fun_app$q (A_c_b_fun_fun_a_c_b_fun_fun_fun$ A_c_b_fun_fun$ )A_c_b_fun_fun$ )
(declare-fun fun_app$r (A_c_b_fun_fun_a_b_fun_fun$ A_c_b_fun_fun$ )A_b_fun$ )
(declare-fun fun_app$s (A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun$ A_c_b_fun_fun_a_c_fun_fun$ )A_c_b_fun_fun_a_b_fun_fun$ )
(declare-fun fun_app$t (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun$ )
(declare-fun fun_app$u (A_c_b_fun_fun_a_c_fun_fun$ A_c_b_fun_fun$ )A_c_fun$ )
(declare-fun fun_app$v (A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun$ A_c_fun_a_c_fun_fun$ )A_c_fun_a_b_fun_fun$ )
(declare-fun fun_app$w (A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ A_c_fun_a_c_fun_a_b_fun_fun_fun$ )A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun fun_app$x (A_c_fun_a_c_fun_a_b_fun_fun_fun$ A_c_fun$ )A_c_fun_a_b_fun_fun$ )
(declare-fun fun_app$y (A_c_fun_a_c_fun_fun$ A_c_fun$ )A_c_fun$ )
(declare-fun fun_app$z (A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ A_c_fun_a_b_fun_fun$ )A_c_fun_a_b_fun_fun$ )
(declare-fun map_tree$ (B_a_b_fun_fun$ B_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$a (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ A_c_b_fun_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$b (A_b_fun_tree$ A_tree$ )B_tree$ )
(declare-fun tree_ap$c (C_b_fun_tree$ C_tree$ )B_tree$ )
(declare-fun tree_ap$d (A_c_b_fun_fun_tree$ A_tree$ )C_b_fun_tree$ )
(declare-fun tree_ap$e (A_c_fun_tree$ A_tree$ )C_tree$ )
(declare-fun tree_ap$f (A_c_fun_b_fun_tree$ A_c_fun_tree$ )B_tree$ )
(declare-fun tree_ap$g (A_c_fun_a_fun_a_c_fun_b_fun_fun_tree$ A_c_fun_a_fun_tree$ )A_c_fun_b_fun_tree$ )
(declare-fun tree_ap$h (A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun_tree$ A_c_fun_a_b_fun_fun_tree$ )A_c_fun_a_fun_a_c_fun_b_fun_fun_tree$ )
(declare-fun tree_ap$i (A_c_fun_a_fun_tree$ A_c_fun_tree$ )A_tree$ )
(declare-fun tree_ap$j (A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ A_c_fun_a_b_fun_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$k (A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_fun_a_b_fun_a_b_fun_fun_fun_tree$ )A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$l (A_b_fun_a_b_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$m (A_c_fun_a_b_fun_a_b_fun_fun_fun_tree$ A_c_fun_tree$ )A_b_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$n (A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ A_c_fun_a_c_fun_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$o (A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_fun_a_c_fun_a_b_fun_fun_fun_tree$ )A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$p (A_c_fun_a_c_fun_a_b_fun_fun_fun_tree$ A_c_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$q (A_c_fun_a_c_fun_fun_tree$ A_c_fun_tree$ )A_c_fun_tree$ )
(declare-fun tree_ap$r (A_c_b_fun_fun_a_b_fun_fun_tree$ A_c_b_fun_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$s (A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_fun_fun_tree$ )A_c_b_fun_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$t (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )A_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$u (A_c_b_fun_fun_a_c_fun_fun_tree$ A_c_b_fun_fun_tree$ )A_c_fun_tree$ )
(declare-fun tree_ap$v (A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_b_fun_fun_fun_tree$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$w (A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$x (A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_b_fun_fun_tree$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$y (A_c_b_fun_fun_a_c_b_fun_fun_fun_tree$ A_c_b_fun_fun_tree$ )A_c_b_fun_fun_tree$ )
(declare-fun tree_ap$z (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun fun_app$aa (A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ A_c_fun_a_b_fun_a_b_fun_fun_fun$ )A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun fun_app$ab (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun$ )
(declare-fun fun_app$ac (A_c_fun_a_b_fun_a_b_fun_fun_fun$ A_c_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun fun_app$ad (A_c_fun_b_fun$ A_c_fun$ )B$ )
(declare-fun fun_app$ae (A_c_fun_a_fun_a_c_fun_b_fun_fun$ A_c_fun_a_fun$ )A_c_fun_b_fun$ )
(declare-fun fun_app$af (A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun$ A_c_fun_a_b_fun_fun$ )A_c_fun_a_fun_a_c_fun_b_fun_fun$ )
(declare-fun fun_app$ag (A_c_fun_a_fun$ A_c_fun$ )A$ )
(declare-fun fun_app$ah (A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ A_c_fun_a_b_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )
(declare-fun fun_app$ai (C_b_fun_a_c_b_fun_fun_fun$ C_b_fun$ )A_c_b_fun_fun$ )
(declare-fun fun_app$aj (A_b_fun_a_c_fun_a_b_fun_fun_fun$ A_b_fun$ )A_c_fun_a_b_fun_fun$ )
(declare-fun fun_app$ak (C_a_c_fun_fun$ C$ )A_c_fun$ )
(declare-fun fun_app$al (A_b_fun_a_c_fun_fun$ A_b_fun$ )A_c_fun$ )
(declare-fun fun_app$am (A_b_fun_a_c_b_fun_fun_fun$ A_b_fun$ )A_c_b_fun_fun$ )
(declare-fun fun_app$an (C_c_fun$ C$ )C$ )
(declare-fun fun_app$ao (C_a_fun$ C$ )A$ )
(declare-fun fun_app$ap (B_c_fun$ B$ )C$ )
(declare-fun fun_app$aq (B_b_fun$ B$ )B$ )
(declare-fun fun_app$ar (B_a_fun$ B$ )A$ )
(declare-fun fun_app$as (A_c_fun_a_c_b_fun_fun_fun$ A_c_fun$ )A_c_b_fun_fun$ )
(declare-fun map_tree$a (C_b_fun$ C_tree$ )B_tree$ )
(declare-fun map_tree$b (A_b_fun_a_c_fun_fun$ A_b_fun_tree$ )A_c_fun_tree$ )
(declare-fun map_tree$c (A_b_fun_a_b_fun_fun$ A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun map_tree$d (A_c_fun_a_b_fun_fun$ A_c_fun_tree$ )A_b_fun_tree$ )
(declare-fun map_tree$e (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ A_c_b_fun_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun map_tree$f (A_b_fun$ A_tree$ )B_tree$ )
(declare-fun map_tree$g (A_c_b_fun_fun$ A_tree$ )C_b_fun_tree$ )
(declare-fun map_tree$h (A_c_fun$ A_tree$ )C_tree$ )
(declare-fun map_tree$i (A_c_fun_a_c_fun_fun$ A_c_fun_tree$ )A_c_fun_tree$ )
(declare-fun map_tree$j (A_b_fun_a_c_b_fun_fun_fun$ A_b_fun_tree$ )A_c_b_fun_fun_tree$ )
(declare-fun map_tree$k (A_c_b_fun_fun_a_b_fun_fun$ A_c_b_fun_fun_tree$ )A_b_fun_tree$ )
(declare-fun map_tree$l (A_c_b_fun_fun_a_c_fun_fun$ A_c_b_fun_fun_tree$ )A_c_fun_tree$ )
(declare-fun map_tree$m (A_c_fun_a_c_b_fun_fun_fun$ A_c_fun_tree$ )A_c_b_fun_fun_tree$ )
(declare-fun map_tree$n (A_c_b_fun_fun_a_c_b_fun_fun_fun$ A_c_b_fun_fun_tree$ )A_c_b_fun_fun_tree$ )
(declare-fun map_tree$o (C_c_fun$ C_tree$ )C_tree$ )
(declare-fun tree_ap$aa (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$ab (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_b_fun_fun_tree$ )A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$ac (B_b_fun_tree$ B_tree$ )B_tree$ )
(declare-fun tree_ap$ad (B_a_fun_b_b_fun_fun_tree$ B_a_fun_tree$ )B_b_fun_tree$ )
(declare-fun tree_ap$ae (B_a_b_fun_fun_b_a_fun_b_b_fun_fun_fun_tree$ B_a_b_fun_fun_tree$ )B_a_fun_b_b_fun_fun_tree$ )
(declare-fun tree_ap$af (B_a_b_fun_fun_tree$ B_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$ag (B_a_fun_tree$ B_tree$ )A_tree$ )
(declare-fun tree_ap$ah (C_b_fun_c_b_fun_fun_tree$ C_b_fun_tree$ )C_b_fun_tree$ )
(declare-fun tree_ap$ai (C_b_b_fun_fun_c_b_fun_c_b_fun_fun_fun_tree$ C_b_b_fun_fun_tree$ )C_b_fun_c_b_fun_fun_tree$ )
(declare-fun tree_ap$aj (C_b_b_fun_fun_tree$ C_tree$ )B_b_fun_tree$ )
(declare-fun tree_ap$ak (C_c_fun_c_b_fun_fun_tree$ C_c_fun_tree$ )C_b_fun_tree$ )
(declare-fun tree_ap$al (C_c_b_fun_fun_c_c_fun_c_b_fun_fun_fun_tree$ C_c_b_fun_fun_tree$ )C_c_fun_c_b_fun_fun_tree$ )
(declare-fun tree_ap$am (C_c_b_fun_fun_tree$ C_tree$ )C_b_fun_tree$ )
(declare-fun tree_ap$an (C_c_fun_tree$ C_tree$ )C_tree$ )
(declare-fun tree_ap$ao (C_b_fun_b_fun_tree$ C_b_fun_tree$ )B_tree$ )
(declare-fun tree_ap$ap (B_a_b_fun_fun_a_b_fun_fun_tree$ B_a_b_fun_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$aq (A_c_b_fun_fun_c_b_fun_fun_tree$ A_c_b_fun_fun_tree$ )C_b_fun_tree$ )
(declare-fun tree_ap$ar (A_c_fun_c_fun_tree$ A_c_fun_tree$ )C_tree$ )
(declare-fun tree_ap$as (A_b_fun_b_fun_tree$ A_b_fun_tree$ )B_tree$ )
(declare-fun tree_ap$at (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$au (A_c_fun_a_b_fun_fun_a_b_fun_fun_tree$ A_c_fun_a_b_fun_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$av (A_b_fun_a_c_fun_fun_tree$ A_b_fun_tree$ )A_c_fun_tree$ )
(declare-fun tree_ap$aw (A_b_fun_a_c_b_fun_fun_fun_tree$ A_b_fun_tree$ )A_c_b_fun_fun_tree$ )
(declare-fun tree_ap$ax (A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_fun_a_b_fun_fun_tree$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$ay (A_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ A_b_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$az (A_b_fun_a_b_fun_a_b_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$ba (B_c_b_fun_fun_tree$ B_tree$ )C_b_fun_tree$ )
(declare-fun tree_ap$bb (C_b_fun_a_c_b_fun_fun_fun_tree$ C_b_fun_tree$ )A_c_b_fun_fun_tree$ )
(declare-fun tree_ap$bc (C_a_c_fun_fun_tree$ C_tree$ )A_c_fun_tree$ )
(declare-fun tree_ap$bd (A_b_fun_b_a_b_fun_fun_fun_tree$ A_b_fun_tree$ )B_a_b_fun_fun_tree$ )
(declare-fun tree_ap$be (C_a_fun_tree$ C_tree$ )A_tree$ )
(declare-fun tree_ap$bf (B_c_fun_tree$ B_tree$ )C_tree$ )
(declare-fun tree_ap$bg (C_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ C_b_fun_tree$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$bh (A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_fun_tree$ )A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$bi (A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ A_c_fun_a_b_fun_fun_tree$ )A_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_ap$bj (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )A_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$bk (A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$bl (B_b_fun_c_b_fun_c_b_fun_fun_fun_tree$ B_b_fun_tree$ )C_b_fun_c_b_fun_fun_tree$ )
(declare-fun tree_ap$bm (C_b_fun_c_c_fun_c_b_fun_fun_fun_tree$ C_b_fun_tree$ )C_c_fun_c_b_fun_fun_tree$ )
(declare-fun tree_ap$bn (C_a_fun_c_b_fun_fun_tree$ C_a_fun_tree$ )C_b_fun_tree$ )
(declare-fun tree_ap$bo (A_b_fun_c_a_fun_c_b_fun_fun_fun_tree$ A_b_fun_tree$ )C_a_fun_c_b_fun_fun_tree$ )
(declare-fun tree_ap$bp (C_c_fun_a_c_fun_a_c_fun_fun_fun_tree$ C_c_fun_tree$ )A_c_fun_a_c_fun_fun_tree$ )
(declare-fun tree_ap$bq (B_c_fun_a_b_fun_a_c_fun_fun_fun_tree$ B_c_fun_tree$ )A_b_fun_a_c_fun_fun_tree$ )
(declare-fun tree_pure$ (A_b_fun$ )A_b_fun_tree$ )
(declare-fun tree_pure$a (A_c_b_fun_fun$ )A_c_b_fun_fun_tree$ )
(declare-fun tree_pure$b (A_c_fun$ )A_c_fun_tree$ )
(declare-fun tree_pure$c (C$ )C_tree$ )
(declare-fun tree_pure$d (C_b_fun_b_fun$ )C_b_fun_b_fun_tree$ )
(declare-fun tree_pure$e (B$ )B_tree$ )
(declare-fun tree_pure$f (B_a_b_fun_fun_a_b_fun_fun$ )B_a_b_fun_fun_a_b_fun_fun_tree$ )
(declare-fun tree_pure$g (A$ )A_tree$ )
(declare-fun tree_pure$h (A_c_b_fun_fun_c_b_fun_fun$ )A_c_b_fun_fun_c_b_fun_fun_tree$ )
(declare-fun tree_pure$i (A_c_fun_c_fun$ )A_c_fun_c_fun_tree$ )
(declare-fun tree_pure$j (A_b_fun_b_fun$ )A_b_fun_b_fun_tree$ )
(declare-fun tree_pure$k (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$l (A_c_fun_a_b_fun_fun_a_b_fun_fun$ )A_c_fun_a_b_fun_fun_a_b_fun_fun_tree$ )
(declare-fun tree_pure$m (C_b_fun$ )C_b_fun_tree$ )
(declare-fun tree_pure$n (A_b_fun_a_b_fun_fun$ )A_b_fun_a_b_fun_fun_tree$ )
(declare-fun tree_pure$o (A_b_fun_a_c_fun_fun$ )A_b_fun_a_c_fun_fun_tree$ )
(declare-fun tree_pure$p (A_c_fun_a_b_fun_fun$ )A_c_fun_a_b_fun_fun_tree$ )
(declare-fun tree_pure$q (A_c_fun_a_c_fun_fun$ )A_c_fun_a_c_fun_fun_tree$ )
(declare-fun tree_pure$r (A_b_fun_a_c_b_fun_fun_fun$ )A_b_fun_a_c_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$s (A_c_b_fun_fun_a_b_fun_fun$ )A_c_b_fun_fun_a_b_fun_fun_tree$ )
(declare-fun tree_pure$t (A_c_b_fun_fun_a_c_fun_fun$ )A_c_b_fun_fun_a_c_fun_fun_tree$ )
(declare-fun tree_pure$u (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$v (C_a_c_fun_fun$ )C_a_c_fun_fun_tree$ )
(declare-fun tree_pure$w (C_b_fun_a_c_b_fun_fun_fun$ )C_b_fun_a_c_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$x (B_a_b_fun_fun$ )B_a_b_fun_fun_tree$ )
(declare-fun tree_pure$y (A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )A_c_fun_a_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$z (A_b_fun_a_c_fun_a_b_fun_fun_fun$ )A_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$aa (C_c_fun$ )C_c_fun_tree$ )
(declare-fun tree_pure$ab (C_a_fun$ )C_a_fun_tree$ )
(declare-fun tree_pure$ac (B_c_fun$ )B_c_fun_tree$ )
(declare-fun tree_pure$ad (B_b_fun$ )B_b_fun_tree$ )
(declare-fun tree_pure$ae (B_a_fun$ )B_a_fun_tree$ )
(declare-fun tree_pure$af (A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$ag (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_fun_a_c_b_fun_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$ah (A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )A_c_fun_a_c_fun_a_b_fun_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$ai (A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )A_c_fun_a_b_fun_a_b_fun_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$aj (A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun$ )A_c_fun_a_b_fun_fun_a_c_fun_a_fun_a_c_fun_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$ak (C_b_fun_a_c_fun_a_b_fun_fun_fun$ )C_b_fun_a_c_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$al (A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )A_b_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$am (A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )A_c_fun_a_b_fun_fun_a_c_fun_a_c_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$an (A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$ao (A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun$ )A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$ap (B_b_fun_c_b_fun_c_b_fun_fun_fun$ )B_b_fun_c_b_fun_c_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$aq (C_b_fun_c_c_fun_c_b_fun_fun_fun$ )C_b_fun_c_c_fun_c_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$ar (A_b_fun_c_a_fun_c_b_fun_fun_fun$ )A_b_fun_c_a_fun_c_b_fun_fun_fun_tree$ )
(declare-fun tree_pure$as (C_c_fun_a_c_fun_a_c_fun_fun_fun$ )C_c_fun_a_c_fun_a_c_fun_fun_fun_tree$ )
(declare-fun tree_pure$at (B_c_fun_a_b_fun_a_c_fun_fun_fun$ )B_c_fun_a_b_fun_a_c_fun_fun_fun_tree$ )
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$ uu$ ?v0 )(fun_app$a (fun_app$b f$ ?v0 )(fun_app$c g$ ?v0 ))):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_c_b_fun_fun$ )(?v1 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ ))(! (= (fun_app$d (uuf$ ?v0 )?v1 )(fun_app$e ?v1 ?v0 )):pattern ((fun_app$d (uuf$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 A_c_fun_a_b_fun_fun$ ))(! (= (fun_app$f (uug$ ?v0 )?v1 )(fun_app$g ?v1 ?v0 )):pattern ((fun_app$f (uug$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C$ )(?v1 C_b_fun$ ))(! (= (fun_app$h (uua$ ?v0 )?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$h (uua$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_b_fun_fun$ ))(! (= (fun_app$i (uub$ ?v0 )?v1 )(fun_app$j ?v1 ?v0 )):pattern ((fun_app$i (uub$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_b_fun_fun$ ))(! (= (fun_app$k (uuc$ ?v0 )?v1 )(fun_app$b ?v1 ?v0 )):pattern ((fun_app$k (uuc$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A_c_fun$ ))(! (= (fun_app$l (uud$ ?v0 )?v1 )(fun_app$c ?v1 ?v0 )):pattern ((fun_app$l (uud$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_fun$ ))(! (= (fun_app$m (uue$ ?v0 )?v1 )(fun_app$ ?v1 ?v0 )):pattern ((fun_app$m (uue$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun$ )(?v1 A_c_b_fun_fun_a_c_b_fun_fun_fun$ )(?v2 A_c_b_fun_fun$ ))(! (= (fun_app$e (fun_app$n (fun_app$o uup$ ?v0 )?v1 )?v2 )(fun_app$e (fun_app$p ?v0 ?v2 )(fun_app$q ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$n (fun_app$o uup$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )(?v1 A_c_b_fun_fun_a_c_fun_fun$ )(?v2 A_c_b_fun_fun$ ))(! (= (fun_app$r (fun_app$s (fun_app$t uuq$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$e ?v0 ?v2 )(fun_app$u ?v1 ?v2 ))):pattern ((fun_app$r (fun_app$s (fun_app$t uuq$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_c_fun_a_c_fun_a_b_fun_fun_fun$ )(?v1 A_c_fun_a_c_fun_fun$ )(?v2 A_c_fun$ ))(! (= (fun_app$g (fun_app$v (fun_app$w uur$ ?v0 )?v1 )?v2 )(fun_app$g (fun_app$x ?v0 ?v2 )(fun_app$y ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$v (fun_app$w uur$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_a_b_fun_fun_fun$ )(?v1 A_c_fun_a_b_fun_fun$ )(?v2 A_c_fun$ ))(! (= (fun_app$g (fun_app$z (fun_app$aa uus$ ?v0 )?v1 )?v2 )(fun_app$ab (fun_app$ac ?v0 ?v2 )(fun_app$g ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$z (fun_app$aa uus$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun$ )(?v1 A_c_fun_a_fun$ )(?v2 A_c_fun$ ))(! (= (fun_app$ad (fun_app$ae (fun_app$af uut$ ?v0 )?v1 )?v2 )(fun_app$ (fun_app$g ?v0 ?v2 )(fun_app$ag ?v1 ?v2 ))):pattern ((fun_app$ad (fun_app$ae (fun_app$af uut$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_c_b_fun_fun$ )(?v1 A_c_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$g (fun_app$e uuu$ ?v0 )?v1 )?v2 )(fun_app$a (fun_app$b ?v0 ?v2 )(fun_app$c ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$g (fun_app$e uuu$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun$ )(?v1 A_c_b_fun_fun$ ))(! (= (fun_app$e (fun_app$ah uuh$ ?v0 )?v1 )?v0 ):pattern ((fun_app$e (fun_app$ah uuh$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 C_b_fun$ )(?v1 A$ ))(! (= (fun_app$b (fun_app$ai uum$ ?v0 )?v1 )?v0 ):pattern ((fun_app$b (fun_app$ai uum$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_c_fun$ ))(! (= (fun_app$g (fun_app$aj uui$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (fun_app$aj uui$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ ))(! (= (fun_app$ab (uuj$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ab (uuj$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 C$ )(?v1 A$ ))(! (= (fun_app$c (fun_app$ak uun$ ?v0 )?v1 )?v0 ):pattern ((fun_app$c (fun_app$ak uun$ ?v0 )?v1 )))):named a18 ))
(assert (! (forall ((?v0 B$ )(?v1 C$ ))(! (= (fun_app$a (uuk$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (uuk$ ?v0 )?v1 )))):named a19 ))
(assert (! (forall ((?v0 B$ )(?v1 A$ ))(! (= (fun_app$ (fun_app$j uul$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (fun_app$j uul$ ?v0 )?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_b_fun$ ))(! (= (fun_app$ab uuo$ ?v0 )?v0 ):pattern ((fun_app$ab uuo$ ?v0 )))):named a21 ))
(assert (! (not (= (tree_pure$ uu$ )(tree_ap$ (tree_ap$a tree_S$ (tree_pure$a f$ ))(tree_pure$b g$ )))):named a22 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_tree$ )(?v1 A_c_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$b (tree_ap$ (tree_ap$a tree_S$ ?v0 )?v1 )?v2 )(tree_ap$c (tree_ap$d ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))):named a23 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun_tree$ )(?v1 A_c_fun_a_fun_tree$ )(?v2 A_c_fun_tree$ ))(= (tree_ap$f (tree_ap$g (tree_ap$h tree_S$a ?v0 )?v1 )?v2 )(tree_ap$b (tree_ap$ ?v0 ?v2 )(tree_ap$i ?v1 ?v2 )))):named a24 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_fun_a_b_fun_fun_tree$ )(?v2 A_c_fun_tree$ ))(= (tree_ap$ (tree_ap$j (tree_ap$k tree_S$b ?v0 )?v1 )?v2 )(tree_ap$l (tree_ap$m ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a25 ))
(assert (! (forall ((?v0 A_c_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_fun_a_c_fun_fun_tree$ )(?v2 A_c_fun_tree$ ))(= (tree_ap$ (tree_ap$n (tree_ap$o tree_S$c ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$p ?v0 ?v2 )(tree_ap$q ?v1 ?v2 )))):named a26 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun_a_c_fun_fun_tree$ )(?v2 A_c_b_fun_fun_tree$ ))(= (tree_ap$r (tree_ap$s (tree_ap$t tree_S$d ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$a ?v0 ?v2 )(tree_ap$u ?v1 ?v2 )))):named a27 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun_a_c_b_fun_fun_fun_tree$ )(?v2 A_c_b_fun_fun_tree$ ))(= (tree_ap$a (tree_ap$v (tree_ap$w tree_S$e ?v0 )?v1 )?v2 )(tree_ap$a (tree_ap$x ?v0 ?v2 )(tree_ap$y ?v1 ?v2 )))):named a28 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v2 A_c_b_fun_fun_tree$ ))(= (tree_ap$a (tree_ap$z (tree_ap$aa tree_S$f ?v0 )?v1 )?v2 )(tree_ap$j (tree_ap$ab ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))):named a29 ))
(assert (! (forall ((?v0 B_a_b_fun_fun_tree$ )(?v1 B_a_fun_tree$ )(?v2 B_tree$ ))(= (tree_ap$ac (tree_ap$ad (tree_ap$ae tree_S$g ?v0 )?v1 )?v2 )(tree_ap$b (tree_ap$af ?v0 ?v2 )(tree_ap$ag ?v1 ?v2 )))):named a30 ))
(assert (! (forall ((?v0 C_b_b_fun_fun_tree$ )(?v1 C_b_fun_tree$ )(?v2 C_tree$ ))(= (tree_ap$c (tree_ap$ah (tree_ap$ai tree_S$h ?v0 )?v1 )?v2 )(tree_ap$ac (tree_ap$aj ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))):named a31 ))
(assert (! (forall ((?v0 C_c_b_fun_fun_tree$ )(?v1 C_c_fun_tree$ )(?v2 C_tree$ ))(= (tree_ap$c (tree_ap$ak (tree_ap$al tree_S$i ?v0 )?v1 )?v2 )(tree_ap$c (tree_ap$am ?v0 ?v2 )(tree_ap$an ?v1 ?v2 )))):named a32 ))
(assert (! (forall ((?v0 C_b_fun_tree$ )(?v1 C$ ))(= (tree_ap$c ?v0 (tree_pure$c ?v1 ))(tree_ap$ao (tree_pure$d (uua$ ?v1 ))?v0 ))):named a33 ))
(assert (! (forall ((?v0 B_a_b_fun_fun_tree$ )(?v1 B$ ))(= (tree_ap$af ?v0 (tree_pure$e ?v1 ))(tree_ap$ap (tree_pure$f (uub$ ?v1 ))?v0 ))):named a34 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_tree$ )(?v1 A$ ))(= (tree_ap$d ?v0 (tree_pure$g ?v1 ))(tree_ap$aq (tree_pure$h (uuc$ ?v1 ))?v0 ))):named a35 ))
(assert (! (forall ((?v0 A_c_fun_tree$ )(?v1 A$ ))(= (tree_ap$e ?v0 (tree_pure$g ?v1 ))(tree_ap$ar (tree_pure$i (uud$ ?v1 ))?v0 ))):named a36 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A$ ))(= (tree_ap$b ?v0 (tree_pure$g ?v1 ))(tree_ap$as (tree_pure$j (uue$ ?v1 ))?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun$ ))(= (tree_ap$a ?v0 (tree_pure$a ?v1 ))(tree_ap$at (tree_pure$k (uuf$ ?v1 ))?v0 ))):named a38 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun_tree$ )(?v1 A_c_fun$ ))(= (tree_ap$ ?v0 (tree_pure$b ?v1 ))(tree_ap$au (tree_pure$l (uug$ ?v1 ))?v0 ))):named a39 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (tree_ap$b (tree_pure$ ?v0 )(tree_pure$g ?v1 ))(tree_pure$e (fun_app$ ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 A$ ))(= (tree_ap$e (tree_pure$b ?v0 )(tree_pure$g ?v1 ))(tree_pure$c (fun_app$c ?v0 ?v1 )))):named a41 ))
(assert (! (forall ((?v0 A_c_b_fun_fun$ )(?v1 A$ ))(= (tree_ap$d (tree_pure$a ?v0 )(tree_pure$g ?v1 ))(tree_pure$m (fun_app$b ?v0 ?v1 )))):named a42 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$l (tree_pure$n ?v0 )(tree_pure$ ?v1 ))(tree_pure$ (fun_app$ab ?v0 ?v1 )))):named a43 ))
(assert (! (forall ((?v0 A_b_fun_a_c_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$av (tree_pure$o ?v0 )(tree_pure$ ?v1 ))(tree_pure$b (fun_app$al ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun$ )(?v1 A_c_fun$ ))(= (tree_ap$ (tree_pure$p ?v0 )(tree_pure$b ?v1 ))(tree_pure$ (fun_app$g ?v0 ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_c_fun_a_c_fun_fun$ )(?v1 A_c_fun$ ))(= (tree_ap$q (tree_pure$q ?v0 )(tree_pure$b ?v1 ))(tree_pure$b (fun_app$y ?v0 ?v1 )))):named a46 ))
(assert (! (forall ((?v0 A_b_fun_a_c_b_fun_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$aw (tree_pure$r ?v0 )(tree_pure$ ?v1 ))(tree_pure$a (fun_app$am ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_b_fun_fun$ )(?v1 A_c_b_fun_fun$ ))(= (tree_ap$r (tree_pure$s ?v0 )(tree_pure$a ?v1 ))(tree_pure$ (fun_app$r ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_fun$ )(?v1 A_c_b_fun_fun$ ))(= (tree_ap$u (tree_pure$t ?v0 )(tree_pure$a ?v1 ))(tree_pure$b (fun_app$u ?v0 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 C_b_fun_tree$ )(?v1 C_b_fun_tree$ ))(=> (forall ((?v2 C$ ))(= (tree_ap$c ?v0 (tree_pure$c ?v2 ))(tree_ap$c ?v1 (tree_pure$c ?v2 ))))(= ?v0 ?v1 ))):named a50 ))
(assert (! (forall ((?v0 B_a_b_fun_fun_tree$ )(?v1 B_a_b_fun_fun_tree$ ))(=> (forall ((?v2 B$ ))(= (tree_ap$af ?v0 (tree_pure$e ?v2 ))(tree_ap$af ?v1 (tree_pure$e ?v2 ))))(= ?v0 ?v1 ))):named a51 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_tree$ )(?v1 A_c_b_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$d ?v0 (tree_pure$g ?v2 ))(tree_ap$d ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a52 ))
(assert (! (forall ((?v0 A_c_fun_tree$ )(?v1 A_c_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$e ?v0 (tree_pure$g ?v2 ))(tree_ap$e ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a53 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$b ?v0 (tree_pure$g ?v2 ))(tree_ap$b ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a54 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_c_b_fun_fun$ ))(= (tree_ap$a ?v0 (tree_pure$a ?v2 ))(tree_ap$a ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun_tree$ )(?v1 A_c_fun_a_b_fun_fun_tree$ ))(=> (forall ((?v2 A_c_fun$ ))(= (tree_ap$ ?v0 (tree_pure$b ?v2 ))(tree_ap$ ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a56 ))
(assert (! (forall ((?v0 C_b_fun_tree$ )(?v1 C_b_fun_tree$ ))(=> (forall ((?v2 C_tree$ ))(= (tree_ap$c ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))(= ?v0 ?v1 ))):named a57 ))
(assert (! (forall ((?v0 B_a_b_fun_fun_tree$ )(?v1 B_a_b_fun_fun_tree$ ))(=> (forall ((?v2 B_tree$ ))(= (tree_ap$af ?v0 ?v2 )(tree_ap$af ?v1 ?v2 )))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_tree$ )(?v1 A_c_b_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$d ?v0 ?v2 )(tree_ap$d ?v1 ?v2 )))(= ?v0 ?v1 ))):named a59 ))
(assert (! (forall ((?v0 A_c_fun_tree$ )(?v1 A_c_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$e ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))(= ?v0 ?v1 ))):named a60 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$b ?v0 ?v2 )(tree_ap$b ?v1 ?v2 )))(= ?v0 ?v1 ))):named a61 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun_tree$ )(?v1 A_c_fun_a_b_fun_fun_tree$ ))(=> (forall ((?v2 A_c_fun_tree$ ))(= (tree_ap$ ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))(= ?v0 ?v1 ))):named a62 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_c_b_fun_fun_tree$ ))(= (tree_ap$a ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))(= ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun$ ))(= (tree_pure$u (fun_app$ah uuh$ ?v0 ))(tree_ap$ax tree_K$ (tree_pure$p ?v0 )))):named a64 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (tree_pure$p (fun_app$aj uui$ ?v0 ))(tree_ap$ay tree_K$a (tree_pure$ ?v0 )))):named a65 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (tree_pure$n (uuj$ ?v0 ))(tree_ap$az tree_K$b (tree_pure$ ?v0 )))):named a66 ))
(assert (! (forall ((?v0 B$ ))(= (tree_pure$m (uuk$ ?v0 ))(tree_ap$ba tree_K$c (tree_pure$e ?v0 )))):named a67 ))
(assert (! (forall ((?v0 B$ ))(= (tree_pure$ (fun_app$j uul$ ?v0 ))(tree_ap$af tree_K$d (tree_pure$e ?v0 )))):named a68 ))
(assert (! (forall ((?v0 C_b_fun$ ))(= (tree_pure$a (fun_app$ai uum$ ?v0 ))(tree_ap$bb tree_K$e (tree_pure$m ?v0 )))):named a69 ))
(assert (! (forall ((?v0 C$ ))(= (tree_pure$b (fun_app$ak uun$ ?v0 ))(tree_ap$bc tree_K$f (tree_pure$c ?v0 )))):named a70 ))
(assert (! (forall ((?v0 B_tree$ )(?v1 C_tree$ ))(= (tree_ap$c (tree_ap$ba tree_K$c ?v0 )?v1 )?v0 )):named a71 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 B_tree$ ))(= (tree_ap$af (tree_ap$bd tree_K$g ?v0 )?v1 )?v0 )):named a72 ))
(assert (! (forall ((?v0 C_b_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$d (tree_ap$bb tree_K$e ?v0 )?v1 )?v0 )):named a73 ))
(assert (! (forall ((?v0 C_tree$ )(?v1 A_tree$ ))(= (tree_ap$e (tree_ap$bc tree_K$f ?v0 )?v1 )?v0 )):named a74 ))
(assert (! (forall ((?v0 B_tree$ )(?v1 A_tree$ ))(= (tree_ap$b (tree_ap$af tree_K$d ?v0 )?v1 )?v0 )):named a75 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_c_fun_tree$ ))(= (tree_ap$ (tree_ap$ay tree_K$a ?v0 )?v1 )?v0 )):named a76 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun_tree$ )(?v1 A_c_b_fun_fun_tree$ ))(= (tree_ap$a (tree_ap$ax tree_K$ ?v0 )?v1 )?v0 )):named a77 ))
(assert (! (= tree_K$f (tree_pure$v uun$ )):named a78 ))
(assert (! (= tree_K$e (tree_pure$w uum$ )):named a79 ))
(assert (! (= tree_K$d (tree_pure$x uul$ )):named a80 ))
(assert (! (= tree_K$ (tree_pure$y uuh$ )):named a81 ))
(assert (! (= tree_K$a (tree_pure$z uui$ )):named a82 ))
(assert (! (= (tree_pure$n uuo$ )tree_I$ ):named a83 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$b (tree_pure$ ?v0 )(node$e ?v1 ?v2 ?v3 ))(node$f (fun_app$ ?v0 ?v1 )(tree_ap$b (tree_pure$ ?v0 )?v2 )(tree_ap$b (tree_pure$ ?v0 )?v3 )))):named a84 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$e (tree_pure$b ?v0 )(node$e ?v1 ?v2 ?v3 ))(node$h (fun_app$c ?v0 ?v1 )(tree_ap$e (tree_pure$b ?v0 )?v2 )(tree_ap$e (tree_pure$b ?v0 )?v3 )))):named a85 ))
(assert (! (forall ((?v0 A_c_b_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$d (tree_pure$a ?v0 )(node$e ?v1 ?v2 ?v3 ))(node$g (fun_app$b ?v0 ?v1 )(tree_ap$d (tree_pure$a ?v0 )?v2 )(tree_ap$d (tree_pure$a ?v0 )?v3 )))):named a86 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun$ )(?v1 A_c_fun$ )(?v2 A_c_fun_tree$ )(?v3 A_c_fun_tree$ ))(= (tree_ap$ (tree_pure$p ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$ (fun_app$g ?v0 ?v1 )(tree_ap$ (tree_pure$p ?v0 )?v2 )(tree_ap$ (tree_pure$p ?v0 )?v3 )))):named a87 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )(?v1 A_c_b_fun_fun$ )(?v2 A_c_b_fun_fun_tree$ )(?v3 A_c_b_fun_fun_tree$ ))(= (tree_ap$a (tree_pure$u ?v0 )(node$d ?v1 ?v2 ?v3 ))(node$a (fun_app$e ?v0 ?v1 )(tree_ap$a (tree_pure$u ?v0 )?v2 )(tree_ap$a (tree_pure$u ?v0 )?v3 )))):named a88 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ )(?v2 C_tree$ )(?v3 C_tree$ ))(= (tree_ap$an (tree_pure$aa ?v0 )(node$h ?v1 ?v2 ?v3 ))(node$h (fun_app$an ?v0 ?v1 )(tree_ap$an (tree_pure$aa ?v0 )?v2 )(tree_ap$an (tree_pure$aa ?v0 )?v3 )))):named a89 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C$ )(?v2 C_tree$ )(?v3 C_tree$ ))(= (tree_ap$be (tree_pure$ab ?v0 )(node$h ?v1 ?v2 ?v3 ))(node$e (fun_app$ao ?v0 ?v1 )(tree_ap$be (tree_pure$ab ?v0 )?v2 )(tree_ap$be (tree_pure$ab ?v0 )?v3 )))):named a90 ))
(assert (! (forall ((?v0 B_c_fun$ )(?v1 B$ )(?v2 B_tree$ )(?v3 B_tree$ ))(= (tree_ap$bf (tree_pure$ac ?v0 )(node$f ?v1 ?v2 ?v3 ))(node$h (fun_app$ap ?v0 ?v1 )(tree_ap$bf (tree_pure$ac ?v0 )?v2 )(tree_ap$bf (tree_pure$ac ?v0 )?v3 )))):named a91 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 B_tree$ )(?v3 B_tree$ ))(= (tree_ap$ac (tree_pure$ad ?v0 )(node$f ?v1 ?v2 ?v3 ))(node$f (fun_app$aq ?v0 ?v1 )(tree_ap$ac (tree_pure$ad ?v0 )?v2 )(tree_ap$ac (tree_pure$ad ?v0 )?v3 )))):named a92 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ )(?v2 B_tree$ )(?v3 B_tree$ ))(= (tree_ap$ag (tree_pure$ae ?v0 )(node$f ?v1 ?v2 ?v3 ))(node$e (fun_app$ar ?v0 ?v1 )(tree_ap$ag (tree_pure$ae ?v0 )?v2 )(tree_ap$ag (tree_pure$ae ?v0 )?v3 )))):named a93 ))
(assert (! (= tree_S$e (tree_pure$af uup$ )):named a94 ))
(assert (! (= tree_S$d (tree_pure$ag uuq$ )):named a95 ))
(assert (! (= tree_S$c (tree_pure$ah uur$ )):named a96 ))
(assert (! (= tree_S$b (tree_pure$ai uus$ )):named a97 ))
(assert (! (= tree_S$a (tree_pure$aj uut$ )):named a98 ))
(assert (! (= tree_S$ (tree_pure$u uuu$ )):named a99 ))
(assert (! (forall ((?v0 B_a_b_fun_fun$ )(?v1 B_tree$ ))(= (tree_ap$af (tree_pure$x ?v0 )?v1 )(map_tree$ ?v0 ?v1 ))):named a100 ))
(assert (! (forall ((?v0 C_b_fun$ )(?v1 C_tree$ ))(= (tree_ap$c (tree_pure$m ?v0 )?v1 )(map_tree$a ?v0 ?v1 ))):named a101 ))
(assert (! (forall ((?v0 A_b_fun_a_c_fun_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$av (tree_pure$o ?v0 )?v1 )(map_tree$b ?v0 ?v1 ))):named a102 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$l (tree_pure$n ?v0 )?v1 )(map_tree$c ?v0 ?v1 ))):named a103 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun$ )(?v1 A_c_fun_tree$ ))(= (tree_ap$ (tree_pure$p ?v0 )?v1 )(map_tree$d ?v0 ?v1 ))):named a104 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun$ )(?v1 A_c_b_fun_fun_tree$ ))(= (tree_ap$a (tree_pure$u ?v0 )?v1 )(map_tree$e ?v0 ?v1 ))):named a105 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_tree$ ))(= (tree_ap$b (tree_pure$ ?v0 )?v1 )(map_tree$f ?v0 ?v1 ))):named a106 ))
(assert (! (forall ((?v0 A_c_b_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$d (tree_pure$a ?v0 )?v1 )(map_tree$g ?v0 ?v1 ))):named a107 ))
(assert (! (forall ((?v0 A_c_fun$ )(?v1 A_tree$ ))(= (tree_ap$e (tree_pure$b ?v0 )?v1 )(map_tree$h ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 A_b_fun_tree$ ))(= (tree_ap$l (tree_pure$n id$ )?v0 )?v0 )):named a109 ))
(assert (! (forall ((?v0 C_b_fun_tree$ )(?v1 A_c_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$b (tree_ap$ (tree_ap$bg (tree_pure$ak comp$ )?v0 )?v1 )?v2 )(tree_ap$c ?v0 (tree_ap$e ?v1 ?v2 )))):named a110 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun_tree$ )(?v1 A_c_fun_a_b_fun_fun_tree$ )(?v2 A_c_fun_tree$ ))(= (tree_ap$ (tree_ap$j (tree_ap$bh (tree_pure$al comp$a )?v0 )?v1 )?v2 )(tree_ap$l ?v0 (tree_ap$ ?v1 ?v2 )))):named a111 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun_tree$ )(?v1 A_c_fun_a_c_fun_fun_tree$ )(?v2 A_c_fun_tree$ ))(= (tree_ap$ (tree_ap$n (tree_ap$bi (tree_pure$am comp$b )?v0 )?v1 )?v2 )(tree_ap$ ?v0 (tree_ap$q ?v1 ?v2 )))):named a112 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun_a_c_b_fun_fun_fun_tree$ )(?v2 A_c_b_fun_fun_tree$ ))(= (tree_ap$a (tree_ap$v (tree_ap$bj (tree_pure$an comp$c )?v0 )?v1 )?v2 )(tree_ap$a ?v0 (tree_ap$y ?v1 ?v2 )))):named a113 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v1 A_c_b_fun_fun_a_c_fun_a_b_fun_fun_fun_tree$ )(?v2 A_c_b_fun_fun_tree$ ))(= (tree_ap$a (tree_ap$z (tree_ap$bk (tree_pure$ao comp$d )?v0 )?v1 )?v2 )(tree_ap$j ?v0 (tree_ap$a ?v1 ?v2 )))):named a114 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 C_b_fun_tree$ )(?v2 C_tree$ ))(= (tree_ap$c (tree_ap$ah (tree_ap$bl (tree_pure$ap comp$e )?v0 )?v1 )?v2 )(tree_ap$ac ?v0 (tree_ap$c ?v1 ?v2 )))):named a115 ))
(assert (! (forall ((?v0 C_b_fun_tree$ )(?v1 C_c_fun_tree$ )(?v2 C_tree$ ))(= (tree_ap$c (tree_ap$ak (tree_ap$bm (tree_pure$aq comp$f )?v0 )?v1 )?v2 )(tree_ap$c ?v0 (tree_ap$an ?v1 ?v2 )))):named a116 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 C_a_fun_tree$ )(?v2 C_tree$ ))(= (tree_ap$c (tree_ap$bn (tree_ap$bo (tree_pure$ar comp$g )?v0 )?v1 )?v2 )(tree_ap$b ?v0 (tree_ap$be ?v1 ?v2 )))):named a117 ))
(assert (! (forall ((?v0 C_c_fun_tree$ )(?v1 A_c_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$e (tree_ap$q (tree_ap$bp (tree_pure$as comp$h )?v0 )?v1 )?v2 )(tree_ap$an ?v0 (tree_ap$e ?v1 ?v2 )))):named a118 ))
(assert (! (forall ((?v0 B_c_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$e (tree_ap$av (tree_ap$bq (tree_pure$at comp$i )?v0 )?v1 )?v2 )(tree_ap$bf ?v0 (tree_ap$b ?v1 ?v2 )))):named a119 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun$ ))(= (map_tree$c ?v0 (tree_pure$ ?v1 ))(tree_pure$ (fun_app$ab ?v0 ?v1 )))):named a120 ))
(assert (! (forall ((?v0 A_b_fun_a_c_fun_fun$ )(?v1 A_b_fun$ ))(= (map_tree$b ?v0 (tree_pure$ ?v1 ))(tree_pure$b (fun_app$al ?v0 ?v1 )))):named a121 ))
(assert (! (forall ((?v0 A_c_fun_a_b_fun_fun$ )(?v1 A_c_fun$ ))(= (map_tree$d ?v0 (tree_pure$b ?v1 ))(tree_pure$ (fun_app$g ?v0 ?v1 )))):named a122 ))
(assert (! (forall ((?v0 A_c_fun_a_c_fun_fun$ )(?v1 A_c_fun$ ))(= (map_tree$i ?v0 (tree_pure$b ?v1 ))(tree_pure$b (fun_app$y ?v0 ?v1 )))):named a123 ))
(assert (! (forall ((?v0 A_b_fun_a_c_b_fun_fun_fun$ )(?v1 A_b_fun$ ))(= (map_tree$j ?v0 (tree_pure$ ?v1 ))(tree_pure$a (fun_app$am ?v0 ?v1 )))):named a124 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_b_fun_fun$ )(?v1 A_c_b_fun_fun$ ))(= (map_tree$k ?v0 (tree_pure$a ?v1 ))(tree_pure$ (fun_app$r ?v0 ?v1 )))):named a125 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_fun_fun$ )(?v1 A_c_b_fun_fun$ ))(= (map_tree$l ?v0 (tree_pure$a ?v1 ))(tree_pure$b (fun_app$u ?v0 ?v1 )))):named a126 ))
(assert (! (forall ((?v0 A_c_fun_a_c_b_fun_fun_fun$ )(?v1 A_c_fun$ ))(= (map_tree$m ?v0 (tree_pure$b ?v1 ))(tree_pure$a (fun_app$as ?v0 ?v1 )))):named a127 ))
(assert (! (forall ((?v0 A_c_b_fun_fun_a_c_b_fun_fun_fun$ )(?v1 A_c_b_fun_fun$ ))(= (map_tree$n ?v0 (tree_pure$a ?v1 ))(tree_pure$a (fun_app$q ?v0 ?v1 )))):named a128 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(= (map_tree$o ?v0 (tree_pure$c ?v1 ))(tree_pure$c (fun_app$an ?v0 ?v1 )))):named a129 ))
(assert (! (forall ((?v0 C_b_fun$ ))(= (root$c (tree_pure$m ?v0 ))?v0 )):named a130 ))
(assert (! (forall ((?v0 C$ ))(= (root$b (tree_pure$c ?v0 ))?v0 )):named a131 ))
(assert (! (forall ((?v0 B$ ))(= (root$a (tree_pure$e ?v0 ))?v0 )):named a132 ))
(assert (! (forall ((?v0 A$ ))(= (root$ (tree_pure$g ?v0 ))?v0 )):named a133 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (root$d (tree_pure$ ?v0 ))?v0 )):named a134 ))
(assert (! (forall ((?v0 A_c_b_fun_fun$ ))(= (root$e (tree_pure$a ?v0 ))?v0 )):named a135 ))
(assert (! (forall ((?v0 A_c_fun$ ))(= (root$f (tree_pure$b ?v0 ))?v0 )):named a136 ))
(assert (! (forall ((?v0 A_b_fun$ ))(= (left$c (tree_pure$ ?v0 ))(tree_pure$ ?v0 ))):named a137 ))
(assert (! (forall ((?v0 A_c_b_fun_fun$ ))(= (left$d (tree_pure$a ?v0 ))(tree_pure$a ?v0 ))):named a138 ))
(assert (! (forall ((?v0 A_c_fun$ ))(= (left$e (tree_pure$b ?v0 ))(tree_pure$b ?v0 ))):named a139 ))
(check-sat )
;(get-unsat-core )
