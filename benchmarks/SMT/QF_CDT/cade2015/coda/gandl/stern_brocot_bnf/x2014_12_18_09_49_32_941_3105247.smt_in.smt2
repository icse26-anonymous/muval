;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun$ 0 )
(declare-sort B_a_fun_b_fun$ 0 )
(declare-sort B_b_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort A_b_a_fun_stream_fun$ 0 )
(declare-sort B_a_fun_stream_b_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort B_stream_b_stream_fun$ 0 )
(declare-sort A_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_fun_b_a_fun_b_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun_b_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_b_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_stream_b_a_fun_stream_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ 0 )
(declare-sort B_a_fun_stream_b_fun_b_a_fun_stream_b_fun_fun$ 0 )
(declare-sort B_b_a_fun_stream_fun_b_b_a_fun_stream_fun_fun$ 0 )
(declare-sort B_a_fun_stream_stream_b_a_fun_stream_stream_fun$ 0 )
(declare-sort A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_stream_b_a_fun_b_a_fun_fun_stream_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_stream_b_a_fun_stream_fun_b_a_fun_stream_b_a_fun_stream_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_a_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))(B_stream$ (sCons$a (shd$a B$ )(stl$a B_stream$ )))(B_a_fun_stream$ (sCons$b (select$ B_a_fun$ )(selecta$ B_a_fun_stream$ )))(A_b_a_fun_stream_fun_stream$ (sCons$c (selectb$ A_b_a_fun_stream_fun$ )(selectc$ A_b_a_fun_stream_fun_stream$ )))(A_b_a_fun_b_a_fun_fun_fun_stream$ (sCons$d (selectd$ A_b_a_fun_b_a_fun_fun_fun$ )(selecte$ A_b_a_fun_b_a_fun_fun_fun_stream$ )))(A_b_a_fun_fun_stream$ (sCons$e (selectf$ A_b_a_fun_fun$ )(selectg$ A_b_a_fun_fun_stream$ )))(A_b_fun_stream$ (sCons$f (selecth$ A_b_fun$ )(selecti$ A_b_fun_stream$ )))(A_a_fun_stream$ (sCons$g (selectj$ A_a_fun$ )(selectk$ A_a_fun_stream$ )))(B_a_fun_stream_stream$ (sCons$h (shd$b B_a_fun_stream$ )(stl$b B_a_fun_stream_stream$ )))(B_a_fun_b_a_fun_fun_stream$ (sCons$i (selectl$ B_a_fun_b_a_fun_fun$ )(selectm$ B_a_fun_b_a_fun_fun_stream$ )))(B_b_fun_stream$ (sCons$j (selectn$ B_b_fun$ )(selecto$ B_b_fun_stream$ )))(B_a_fun_b_fun_stream$ (sCons$k (selectp$ B_a_fun_b_fun$ )(selectq$ B_a_fun_b_fun_stream$ )))(B_a_fun_a_fun_stream$ (sCons$l (selectr$ B_a_fun_a_fun$ )(selects$ B_a_fun_a_fun_stream$ )))(B_b_a_fun_fun_stream$ (sCons$m (selectt$ B_b_a_fun_fun$ )(selectu$ B_b_a_fun_fun_stream$ )))(B_a_fun_stream_b_fun_stream$ (sCons$n (selectv$ B_a_fun_stream_b_fun$ )(selectw$ B_a_fun_stream_b_fun_stream$ )))(A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_stream$ (sCons$o (selectx$ A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ )(selecty$ A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_stream$ )))(A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ (sCons$p (selectz$ A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )(selecua$ A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ )))(A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ (sCons$q (selecub$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(selecuc$ A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )))(A_b_fun_a_b_fun_fun_stream$ (sCons$r (selecud$ A_b_fun_a_b_fun_fun$ )(selecue$ A_b_fun_a_b_fun_fun_stream$ )))(A_a_fun_a_a_fun_fun_stream$ (sCons$s (selecuf$ A_a_fun_a_a_fun_fun$ )(selecug$ A_a_fun_a_a_fun_fun_stream$ )))(B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ (sCons$t (selecuh$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(selecui$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ )))(B_a_fun_stream_b_a_fun_stream_fun_stream$ (sCons$u (selecuj$ B_a_fun_stream_b_a_fun_stream_fun$ )(selecuk$ B_a_fun_stream_b_a_fun_stream_fun_stream$ )))))
(declare-fun f$ ()B_a_fun$ )
(declare-fun id$ ()B_a_fun_b_a_fun_fun$ )
(declare-fun uu$ (B_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun xs$ ()B_stream$ )
(declare-fun id$a ()A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ )
(declare-fun id$b ()A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun id$c ()A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun id$d ()A_b_fun_a_b_fun_fun$ )
(declare-fun id$e ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$f ()B_a_fun_stream_b_a_fun_stream_fun$ )
(declare-fun id$g ()B_b_fun$ )
(declare-fun id$h ()A_a_fun$ )
(declare-fun id$i ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun id$j ()B_b_fun_b_b_fun_fun$ )
(declare-fun id$k ()B_a_fun_b_fun_b_a_fun_b_fun_fun$ )
(declare-fun id$l ()B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun id$m ()B_b_a_fun_fun_b_b_a_fun_fun_fun$ )
(declare-fun id$n ()B_a_fun_stream_b_fun_b_a_fun_stream_b_fun_fun$ )
(declare-fun id$o ()A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_a_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_fun$ )
(declare-fun id$p ()A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_fun$ )
(declare-fun id$q ()A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun id$r ()A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun id$s ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun id$t ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun id$u ()B_a_fun_stream_b_a_fun_stream_fun_b_a_fun_stream_b_a_fun_stream_fun_fun$ )
(declare-fun id$v ()B_stream_b_stream_fun$ )
(declare-fun id$w ()A_stream_a_stream_fun$ )
(declare-fun id$x ()B_a_fun_b_a_fun_fun_stream_b_a_fun_b_a_fun_fun_stream_fun$ )
(declare-fun id$y ()B_a_fun_stream_stream_b_a_fun_stream_stream_fun$ )
(declare-fun id$z ()B_b_a_fun_stream_fun_b_b_a_fun_stream_fun_fun$ )
(declare-fun uua$ (A$ )B_a_fun$ )
(declare-fun smap$ (B_a_fun$ B_stream$ )A_stream$ )
(declare-fun smap$a (A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ A_b_a_fun_stream_fun_stream$ )A_b_a_fun_stream_fun_stream$ )
(declare-fun smap$b (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_stream$ )A_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun smap$c (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun smap$d (A_b_fun_a_b_fun_fun$ A_b_fun_stream$ )A_b_fun_stream$ )
(declare-fun smap$e (A_a_fun_a_a_fun_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap$f (B_b_fun$ )B_stream_b_stream_fun$ )
(declare-fun smap$g (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun smap$h (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )B_a_fun_b_a_fun_fun_stream_b_a_fun_b_a_fun_fun_stream_fun$ )
(declare-fun smap$i (B_a_fun_b_a_fun_fun$ )B_a_fun_stream_b_a_fun_stream_fun$ )
(declare-fun smap$j (A_b_fun$ A_stream$ )B_stream$ )
(declare-fun smap$k (B_a_fun_b_fun$ B_a_fun_stream$ )B_stream$ )
(declare-fun smap$l (B_a_fun_a_fun$ B_a_fun_stream$ )A_stream$ )
(declare-fun smap$m (B_b_a_fun_fun$ B_stream$ )B_a_fun_stream$ )
(declare-fun smap$n (A_b_a_fun_fun$ A_stream$ )B_a_fun_stream$ )
(declare-fun smap$o (B_a_fun_stream_b_fun$ B_a_fun_stream_stream$ )B_stream$ )
(declare-fun smap$p (B_a_fun_stream_b_a_fun_stream_fun$ )B_a_fun_stream_stream_b_a_fun_stream_stream_fun$ )
(declare-fun st_ap$ (B_a_fun_stream$ B_stream$ )A_stream$ )
(declare-fun st_ap$a (B_a_fun_b_a_fun_fun_stream$ )B_a_fun_stream_b_a_fun_stream_fun$ )
(declare-fun st_ap$b (B_b_fun_stream$ B_stream$ )B_stream$ )
(declare-fun st_ap$c (A_b_fun_stream$ A_stream$ )B_stream$ )
(declare-fun st_ap$d (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun st_ap$e (B_a_fun_b_fun_stream$ B_a_fun_stream$ )B_stream$ )
(declare-fun st_ap$f (B_a_fun_a_fun_stream$ B_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$g (B_b_a_fun_fun_stream$ B_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$h (A_b_a_fun_fun_stream$ A_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$i (B_a_fun_stream_b_fun_stream$ B_a_fun_stream_stream$ )B_stream$ )
(declare-fun st_ap$j (A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_stream$ A_b_a_fun_stream_fun_stream$ )A_b_a_fun_stream_fun_stream$ )
(declare-fun st_ap$k (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ A_b_a_fun_b_a_fun_fun_fun_stream$ )A_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun st_ap$l (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun st_ap$m (A_b_fun_a_b_fun_fun_stream$ A_b_fun_stream$ )A_b_fun_stream$ )
(declare-fun st_ap$n (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$o (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun st_ap$p (B_a_fun_stream_b_a_fun_stream_fun_stream$ B_a_fun_stream_stream$ )B_a_fun_stream_stream$ )
(declare-fun fun_app$ (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun map_fun$ (B_b_fun$ )A_a_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun fun_app$a (B_a_fun$ B$ )A$ )
(declare-fun fun_app$b (B_a_fun_stream_b_a_fun_stream_fun$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun fun_app$c (B_b_fun$ B$ )B$ )
(declare-fun fun_app$d (A_b_fun$ A$ )B$ )
(declare-fun fun_app$e (A_a_fun$ A$ )A$ )
(declare-fun fun_app$f (B_a_fun_b_fun$ B_a_fun$ )B$ )
(declare-fun fun_app$g (B_a_fun_a_fun$ B_a_fun$ )A$ )
(declare-fun fun_app$h (B_b_a_fun_fun$ B$ )B_a_fun$ )
(declare-fun fun_app$i (A_b_a_fun_fun$ A$ )B_a_fun$ )
(declare-fun fun_app$j (B_a_fun_stream_b_fun$ B_a_fun_stream$ )B$ )
(declare-fun fun_app$k (A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ A_b_a_fun_stream_fun$ )A_b_a_fun_stream_fun$ )
(declare-fun fun_app$l (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun$ )A_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun fun_app$m (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun$ )
(declare-fun fun_app$n (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun$ )
(declare-fun fun_app$o (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$p (B_stream_b_stream_fun$ B_stream$ )B_stream$ )
(declare-fun fun_app$q (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun fun_app$r (B_a_fun_b_a_fun_fun_stream_b_a_fun_b_a_fun_fun_stream_fun$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun fun_app$s (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$t (B_a_fun_stream_stream_b_a_fun_stream_stream_fun$ B_a_fun_stream_stream$ )B_a_fun_stream_stream$ )
(declare-fun fun_app$u (A_a_fun_b_a_fun_b_a_fun_fun_fun$ A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$v (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun fun_app$w (B_b_fun_b_b_fun_b_b_fun_fun_fun$ B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun fun_app$x (B_b_fun_a_b_fun_a_b_fun_fun_fun$ B_b_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun fun_app$y (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$z (B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ B_b_fun$ )B_a_fun_b_fun_b_a_fun_b_fun_fun$ )
(declare-fun map_fun$a (B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$b (B_b_fun$ )B_b_fun_b_b_fun_b_b_fun_fun_fun$ )
(declare-fun map_fun$c (A_a_fun$ )B_b_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun map_fun$d (A_a_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun map_fun$e (B_a_fun_b_a_fun_fun$ )B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ )
(declare-fun map_fun$f (B_a_fun_b_a_fun_fun$ )A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ )
(declare-fun map_fun$g (B_b_fun$ )B_a_fun_b_a_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$h (A_a_fun$ )B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$i (B_b_fun$ B_a_fun_stream_b_a_fun_stream_fun$ )B_b_a_fun_stream_fun_b_b_a_fun_stream_fun_fun$ )
(declare-fun siterate$ (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun_stream$ )
(declare-fun fun_app$aa (A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ A_a_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun fun_app$ab (B_a_fun_b_a_fun_fun_b_b_a_fun_fun_b_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_b_a_fun_fun_b_b_a_fun_fun_fun$ )
(declare-fun fun_app$ac (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun siterate$a (A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ A_b_a_fun_stream_fun$ )A_b_a_fun_stream_fun_stream$ )
(declare-fun siterate$b (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun$ )A_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$c (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun_stream$ )
(declare-fun siterate$d (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun_stream$ )
(declare-fun siterate$e (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$f (B_a_fun_stream_b_a_fun_stream_fun$ B_a_fun_stream$ )B_a_fun_stream_stream$ )
(declare-fun siterate$g (B_b_fun$ B$ )B_stream$ )
(declare-fun siterate$h (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$i (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$j (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun_stream$ )
(declare-fun siterate$k (B_a_fun_b_fun_b_a_fun_b_fun_fun$ B_a_fun_b_fun$ )B_a_fun_b_fun_stream$ )
(declare-fun siterate$l (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ )B_a_fun_a_fun_stream$ )
(declare-fun siterate$m (B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun$ )B_b_a_fun_fun_stream$ )
(declare-fun siterate$n (B_a_fun_stream_b_fun_b_a_fun_stream_b_fun_fun$ B_a_fun_stream_b_fun$ )B_a_fun_stream_b_fun_stream$ )
(declare-fun siterate$o (A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_a_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_fun$ A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ )A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun_stream$ )
(declare-fun siterate$p (A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_fun$ A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun_stream$ )
(declare-fun siterate$q (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$r (A_b_fun_a_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ A_b_fun_a_b_fun_fun$ )A_b_fun_a_b_fun_fun_stream$ )
(declare-fun siterate$s (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$t (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$u (B_a_fun_stream_b_a_fun_stream_fun_b_a_fun_stream_b_a_fun_stream_fun_fun$ B_a_fun_stream_b_a_fun_stream_fun$ )B_a_fun_stream_b_a_fun_stream_fun_stream$ )
(declare-fun iso_tuple_update_accessor_eq_assist$ (B_b_fun_b_b_fun_fun$ B_b_fun$ B$ B_b_fun$ B$ B$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$a (A_a_fun_a_a_fun_fun$ A_a_fun$ A$ A_a_fun$ A$ A$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$b (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$c (B_a_fun_stream_b_a_fun_stream_fun_b_a_fun_stream_b_a_fun_stream_fun_fun$ B_a_fun_stream_b_a_fun_stream_fun$ B_a_fun_stream$ B_a_fun_stream_b_a_fun_stream_fun$ B_a_fun_stream$ B_a_fun_stream$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$d (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$ (B_b_fun_b_b_fun_fun$ B_b_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$a (A_a_fun_a_a_fun_fun$ A_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$b (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$c (B_a_fun_stream_b_a_fun_stream_fun_b_a_fun_stream_b_a_fun_stream_fun_fun$ B_a_fun_stream_b_a_fun_stream_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$d (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )Bool )
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ ))(! (= (fun_app$ (uu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uu$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$a (uua$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (uua$ ?v0 )?v1 )))):named a1 ))
(assert (! (not (= (smap$ f$ xs$ )(st_ap$ (siterate$ id$ f$ )xs$ ))):named a2 ))
(assert (! (forall ((?v0 A_b_a_fun_stream_fun$ )(?v1 A_b_a_fun_stream_fun$ ))(= (= (siterate$a id$a ?v0 )(siterate$a id$a ?v1 ))(= ?v0 ?v1 ))):named a3 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun$ )(?v1 A_b_a_fun_b_a_fun_fun_fun$ ))(= (= (siterate$b id$b ?v0 )(siterate$b id$b ?v1 ))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_a_fun_fun$ ))(= (= (siterate$c id$c ?v0 )(siterate$c id$c ?v1 ))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ ))(= (= (siterate$d id$d ?v0 )(siterate$d id$d ?v1 ))(= ?v0 ?v1 ))):named a6 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(= (= (siterate$e id$e ?v0 )(siterate$e id$e ?v1 ))(= ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 B_a_fun_stream$ )(?v1 B_a_fun_stream$ ))(= (= (siterate$f id$f ?v0 )(siterate$f id$f ?v1 ))(= ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (siterate$g id$g ?v0 )(siterate$g id$g ?v1 ))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (siterate$h id$h ?v0 )(siterate$h id$h ?v1 ))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ ))(= (= (siterate$i id$i ?v0 )(siterate$i id$i ?v1 ))(= ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun$ ))(= (= (siterate$ id$ ?v0 )(siterate$ id$ ?v1 ))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (st_ap$ (siterate$ id$ ?v0 )(siterate$g id$g ?v1 ))(siterate$h id$h (fun_app$a ?v0 ?v1 )))):named a13 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (fun_app$b (st_ap$a (siterate$i id$i ?v0 ))(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$ ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (st_ap$b (siterate$j id$j ?v0 )(siterate$g id$g ?v1 ))(siterate$g id$g (fun_app$c ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (st_ap$c (siterate$d id$d ?v0 )(siterate$h id$h ?v1 ))(siterate$g id$g (fun_app$d ?v0 ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (st_ap$d (siterate$e id$e ?v0 )(siterate$h id$h ?v1 ))(siterate$h id$h (fun_app$e ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 B_a_fun_b_fun$ )(?v1 B_a_fun$ ))(= (st_ap$e (siterate$k id$k ?v0 )(siterate$ id$ ?v1 ))(siterate$g id$g (fun_app$f ?v0 ?v1 )))):named a18 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun$ ))(= (st_ap$f (siterate$l id$l ?v0 )(siterate$ id$ ?v1 ))(siterate$h id$h (fun_app$g ?v0 ?v1 )))):named a19 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ ))(= (st_ap$g (siterate$m id$m ?v0 )(siterate$g id$g ?v1 ))(siterate$ id$ (fun_app$h ?v0 ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A$ ))(= (st_ap$h (siterate$c id$c ?v0 )(siterate$h id$h ?v1 ))(siterate$ id$ (fun_app$i ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 B_a_fun_stream_b_fun$ )(?v1 B_a_fun_stream$ ))(= (st_ap$i (siterate$n id$n ?v0 )(siterate$f id$f ?v1 ))(siterate$g id$g (fun_app$j ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_b_a_fun_stream_fun_a_b_a_fun_stream_fun_fun$ )(?v1 A_b_a_fun_stream_fun$ ))(= (smap$a ?v0 (siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$k ?v0 ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun_a_b_a_fun_b_a_fun_fun_fun_fun$ )(?v1 A_b_a_fun_b_a_fun_fun_fun$ ))(= (smap$b ?v0 (siterate$b ?v0 ?v1 ))(siterate$b ?v0 (fun_app$l ?v0 ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(?v1 A_b_a_fun_fun$ ))(= (smap$c ?v0 (siterate$c ?v0 ?v1 ))(siterate$c ?v0 (fun_app$m ?v0 ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun$ ))(= (smap$d ?v0 (siterate$d ?v0 ?v1 ))(siterate$d ?v0 (fun_app$n ?v0 ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (smap$e ?v0 (siterate$e ?v0 ?v1 ))(siterate$e ?v0 (fun_app$o ?v0 ?v1 )))):named a27 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (fun_app$p (smap$f ?v0 )(siterate$g ?v0 ?v1 ))(siterate$g ?v0 (fun_app$c ?v0 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$q (smap$g ?v0 )(siterate$h ?v0 ?v1 ))(siterate$h ?v0 (fun_app$e ?v0 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ ))(= (fun_app$r (smap$h ?v0 )(siterate$i ?v0 ?v1 ))(siterate$i ?v0 (fun_app$s ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (fun_app$b (smap$i ?v0 )(siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$ ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_b_a_fun_stream_fun_stream$ ))(= (st_ap$j (siterate$o id$o id$a )?v0 )?v0 )):named a32 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun_stream$ ))(= (st_ap$k (siterate$p id$p id$b )?v0 )?v0 )):named a33 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream$ ))(= (st_ap$l (siterate$q id$q id$c )?v0 )?v0 )):named a34 ))
(assert (! (forall ((?v0 A_b_fun_stream$ ))(= (st_ap$m (siterate$r id$r id$d )?v0 )?v0 )):named a35 ))
(assert (! (forall ((?v0 A_a_fun_stream$ ))(= (st_ap$n (siterate$s id$s id$e )?v0 )?v0 )):named a36 ))
(assert (! (forall ((?v0 B_stream$ ))(= (st_ap$b (siterate$j id$j id$g )?v0 )?v0 )):named a37 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$d (siterate$e id$e id$h )?v0 )?v0 )):named a38 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ ))(= (st_ap$o (siterate$t id$t id$i )?v0 )?v0 )):named a39 ))
(assert (! (forall ((?v0 B_a_fun_stream_stream$ ))(= (st_ap$p (siterate$u id$u id$f )?v0 )?v0 )):named a40 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(= (fun_app$b (st_ap$a (siterate$i id$i id$ ))?v0 )?v0 )):named a41 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (smap$ ?v0 (siterate$g id$g ?v1 ))(siterate$h id$h (fun_app$a ?v0 ?v1 )))):named a42 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (fun_app$b (smap$i ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$ ?v0 ?v1 )))):named a43 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (fun_app$p (smap$f ?v0 )(siterate$g id$g ?v1 ))(siterate$g id$g (fun_app$c ?v0 ?v1 )))):named a44 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (smap$j ?v0 (siterate$h id$h ?v1 ))(siterate$g id$g (fun_app$d ?v0 ?v1 )))):named a45 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$q (smap$g ?v0 )(siterate$h id$h ?v1 ))(siterate$h id$h (fun_app$e ?v0 ?v1 )))):named a46 ))
(assert (! (forall ((?v0 B_a_fun_b_fun$ )(?v1 B_a_fun$ ))(= (smap$k ?v0 (siterate$ id$ ?v1 ))(siterate$g id$g (fun_app$f ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun$ ))(= (smap$l ?v0 (siterate$ id$ ?v1 ))(siterate$h id$h (fun_app$g ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ ))(= (smap$m ?v0 (siterate$g id$g ?v1 ))(siterate$ id$ (fun_app$h ?v0 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A$ ))(= (smap$n ?v0 (siterate$h id$h ?v1 ))(siterate$ id$ (fun_app$i ?v0 ?v1 )))):named a50 ))
(assert (! (forall ((?v0 B_a_fun_stream_b_fun$ )(?v1 B_a_fun_stream$ ))(= (smap$o ?v0 (siterate$f id$f ?v1 ))(siterate$g id$g (fun_app$j ?v0 ?v1 )))):named a51 ))
(assert (! (forall ((?v0 A_b_a_fun_stream_fun$ ))(! (= (fun_app$k id$a ?v0 )?v0 ):pattern ((fun_app$k id$a ?v0 )))):named a52 ))
(assert (! (forall ((?v0 A_b_a_fun_b_a_fun_fun_fun$ ))(! (= (fun_app$l id$b ?v0 )?v0 ):pattern ((fun_app$l id$b ?v0 )))):named a53 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ ))(! (= (fun_app$m id$c ?v0 )?v0 ):pattern ((fun_app$m id$c ?v0 )))):named a54 ))
(assert (! (forall ((?v0 A_b_fun$ ))(! (= (fun_app$n id$d ?v0 )?v0 ):pattern ((fun_app$n id$d ?v0 )))):named a55 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$o id$e ?v0 )?v0 ):pattern ((fun_app$o id$e ?v0 )))):named a56 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$c id$g ?v0 )?v0 ):pattern ((fun_app$c id$g ?v0 )))):named a57 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$e id$h ?v0 )?v0 ):pattern ((fun_app$e id$h ?v0 )))):named a58 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ ))(! (= (fun_app$s id$i ?v0 )?v0 ):pattern ((fun_app$s id$i ?v0 )))):named a59 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(! (= (fun_app$b id$f ?v0 )?v0 ):pattern ((fun_app$b id$f ?v0 )))):named a60 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$ id$ ?v0 )?v0 ):pattern ((fun_app$ id$ ?v0 )))):named a61 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_fun$ )(?v1 A_b_fun$ ))(= (smap$d ?v0 (siterate$d ?v0 ?v1 ))(siterate$d ?v0 (fun_app$n ?v0 ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (smap$e ?v0 (siterate$e ?v0 ?v1 ))(siterate$e ?v0 (fun_app$o ?v0 ?v1 )))):named a63 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (fun_app$p (smap$f ?v0 )(siterate$g ?v0 ?v1 ))(siterate$g ?v0 (fun_app$c ?v0 ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$q (smap$g ?v0 )(siterate$h ?v0 ?v1 ))(siterate$h ?v0 (fun_app$e ?v0 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ ))(= (fun_app$r (smap$h ?v0 )(siterate$i ?v0 ?v1 ))(siterate$i ?v0 (fun_app$s ?v0 ?v1 )))):named a66 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (fun_app$b (smap$i ?v0 )(siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$ ?v0 ?v1 )))):named a67 ))
(assert (! (forall ((?v0 B_stream$ ))(= (fun_app$p (smap$f id$g )?v0 )?v0 )):named a68 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$q (smap$g id$h )?v0 )?v0 )):named a69 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ ))(= (fun_app$r (smap$h id$i )?v0 )?v0 )):named a70 ))
(assert (! (forall ((?v0 B_a_fun_stream_stream$ ))(= (fun_app$t (smap$p id$f )?v0 )?v0 )):named a71 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(= (fun_app$b (smap$i id$ )?v0 )?v0 )):named a72 ))
(assert (! (= (smap$f id$g )id$v ):named a73 ))
(assert (! (= (smap$g id$h )id$w ):named a74 ))
(assert (! (= (smap$h id$i )id$x ):named a75 ))
(assert (! (= (smap$p id$f )id$y ):named a76 ))
(assert (! (= (smap$i id$ )id$f ):named a77 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 B_stream$ ))(= (st_ap$b (siterate$j id$j ?v0 )(sCons$a ?v1 ?v2 ))(sCons$a (fun_app$c ?v0 ?v1 )(st_ap$b (siterate$j id$j ?v0 )?v2 )))):named a78 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ )(?v2 B_stream$ ))(= (st_ap$g (siterate$m id$m ?v0 )(sCons$a ?v1 ?v2 ))(sCons$b (fun_app$h ?v0 ?v1 )(st_ap$g (siterate$m id$m ?v0 )?v2 )))):named a79 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (st_ap$c (siterate$d id$d ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a (fun_app$d ?v0 ?v1 )(st_ap$c (siterate$d id$d ?v0 )?v2 )))):named a80 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (st_ap$d (siterate$e id$e ?v0 )(sCons$ ?v1 ?v2 ))(sCons$ (fun_app$e ?v0 ?v1 )(st_ap$d (siterate$e id$e ?v0 )?v2 )))):named a81 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (st_ap$h (siterate$c id$c ?v0 )(sCons$ ?v1 ?v2 ))(sCons$b (fun_app$i ?v0 ?v1 )(st_ap$h (siterate$c id$c ?v0 )?v2 )))):named a82 ))
(assert (! (forall ((?v0 B_a_fun_b_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(= (st_ap$e (siterate$k id$k ?v0 )(sCons$b ?v1 ?v2 ))(sCons$a (fun_app$f ?v0 ?v1 )(st_ap$e (siterate$k id$k ?v0 )?v2 )))):named a83 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(= (st_ap$f (siterate$l id$l ?v0 )(sCons$b ?v1 ?v2 ))(sCons$ (fun_app$g ?v0 ?v1 )(st_ap$f (siterate$l id$l ?v0 )?v2 )))):named a84 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ )(?v2 B_a_fun_stream$ ))(= (fun_app$b (st_ap$a (siterate$i id$i ?v0 ))(sCons$b ?v1 ?v2 ))(sCons$b (fun_app$ ?v0 ?v1 )(fun_app$b (st_ap$a (siterate$i id$i ?v0 ))?v2 )))):named a85 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ )(?v2 B_stream$ ))(= (st_ap$ (siterate$ id$ ?v0 )(sCons$a ?v1 ?v2 ))(sCons$ (fun_app$a ?v0 ?v1 )(st_ap$ (siterate$ id$ ?v0 )?v2 )))):named a86 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$c id$g ?v0 )?v0 ):pattern ((fun_app$c id$g ?v0 )))):named a87 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$e id$h ?v0 )?v0 ):pattern ((fun_app$e id$h ?v0 )))):named a88 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ ))(! (= (fun_app$s id$i ?v0 )?v0 ):pattern ((fun_app$s id$i ?v0 )))):named a89 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(! (= (fun_app$b id$f ?v0 )?v0 ):pattern ((fun_app$b id$f ?v0 )))):named a90 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$ id$ ?v0 )?v0 ):pattern ((fun_app$ id$ ?v0 )))):named a91 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_stream$ ))(= (fun_app$b (st_ap$a (siterate$i id$i (uu$ ?v0 )))?v1 )(siterate$ id$ ?v0 ))):named a92 ))
(assert (! (forall ((?v0 A$ )(?v1 B_stream$ ))(= (st_ap$ (siterate$ id$ (uua$ ?v0 ))?v1 )(siterate$h id$h ?v0 ))):named a93 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ ))(=> (= ?v0 (sCons$i ?v1 (fun_app$r (smap$h ?v2 )?v0 )))(= ?v0 (siterate$i ?v2 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B$ )(?v2 B_b_fun$ ))(=> (= ?v0 (sCons$a ?v1 (fun_app$p (smap$f ?v2 )?v0 )))(= ?v0 (siterate$g ?v2 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A$ )(?v2 A_a_fun$ ))(=> (= ?v0 (sCons$ ?v1 (fun_app$q (smap$g ?v2 )?v0 )))(= ?v0 (siterate$h ?v2 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 B_a_fun_stream$ )(?v1 B_a_fun$ )(?v2 B_a_fun_b_a_fun_fun$ ))(=> (= ?v0 (sCons$b ?v1 (fun_app$b (smap$i ?v2 )?v0 )))(= ?v0 (siterate$ ?v2 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ )(?v2 B$ ))(=> (= ?v0 (fun_app$c ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$ id$j id$g ?v2 ?v1 ?v0 ?v2 ))):named a98 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ ))(=> (= ?v0 (fun_app$e ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$a id$e id$h ?v2 ?v1 ?v0 ?v2 ))):named a99 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun$ ))(=> (= ?v0 (fun_app$s ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$b id$t id$i ?v2 ?v1 ?v0 ?v2 ))):named a100 ))
(assert (! (forall ((?v0 B_a_fun_stream$ )(?v1 B_a_fun_stream_b_a_fun_stream_fun$ )(?v2 B_a_fun_stream$ ))(=> (= ?v0 (fun_app$b ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$c id$u id$f ?v2 ?v1 ?v0 ?v2 ))):named a101 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun$ ))(=> (= ?v0 (fun_app$ ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$d id$i id$ ?v2 ?v1 ?v0 ?v2 ))):named a102 ))
(assert (! (iso_tuple_update_accessor_cong_assist$ id$j id$g ):named a103 ))
(assert (! (iso_tuple_update_accessor_cong_assist$a id$e id$h ):named a104 ))
(assert (! (iso_tuple_update_accessor_cong_assist$b id$t id$i ):named a105 ))
(assert (! (iso_tuple_update_accessor_cong_assist$c id$u id$f ):named a106 ))
(assert (! (iso_tuple_update_accessor_cong_assist$d id$i id$ ):named a107 ))
(assert (! (= (fun_app$u (map_fun$ id$g )id$h )id$ ):named a108 ))
(assert (! (= (fun_app$v (map_fun$a id$ )id$ )id$i ):named a109 ))
(assert (! (= (fun_app$w (map_fun$b id$g )id$g )id$j ):named a110 ))
(assert (! (= (fun_app$x (map_fun$c id$h )id$g )id$d ):named a111 ))
(assert (! (= (fun_app$y (map_fun$d id$h )id$h )id$e ):named a112 ))
(assert (! (= (fun_app$z (map_fun$e id$ )id$g )id$k ):named a113 ))
(assert (! (= (fun_app$aa (map_fun$f id$ )id$h )id$l ):named a114 ))
(assert (! (= (fun_app$ab (map_fun$g id$g )id$ )id$m ):named a115 ))
(assert (! (= (fun_app$ac (map_fun$h id$h )id$ )id$c ):named a116 ))
(assert (! (= (map_fun$i id$g id$f )id$z ):named a117 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun$ )(?v3 B_a_fun$ ))(! (= (fun_app$ (fun_app$s (fun_app$v (map_fun$a ?v0 )?v1 )?v2 )?v3 )(fun_app$ ?v1 (fun_app$ ?v2 (fun_app$ ?v0 ?v3 )))):pattern ((fun_app$ (fun_app$s (fun_app$v (map_fun$a ?v0 )?v1 )?v2 )?v3 )))):named a118 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 A_a_fun$ )(?v2 B_a_fun$ )(?v3 B$ ))(! (= (fun_app$a (fun_app$ (fun_app$u (map_fun$ ?v0 )?v1 )?v2 )?v3 )(fun_app$e ?v1 (fun_app$a ?v2 (fun_app$c ?v0 ?v3 )))):pattern ((fun_app$a (fun_app$ (fun_app$u (map_fun$ ?v0 )?v1 )?v2 )?v3 )))):named a119 ))
(check-sat )
;(get-unsat-core )
