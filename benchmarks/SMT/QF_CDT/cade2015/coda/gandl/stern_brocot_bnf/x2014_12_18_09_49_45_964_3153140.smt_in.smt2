;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Nat_nat_stream_fun$ 0 )
(declare-sort Nat_stream_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_fun$ 0 )
(declare-sort Nat_stream_stream_nat_fun$ 0 )
(declare-sort Nat_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_nat_stream_nat_fun_fun$ 0 )
(declare-sort Nat_stream_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_stream_nat_stream_fun_fun$ 0 )
(declare-sort Nat_nat_stream_stream_nat_fun_fun$ 0 )
(declare-sort Nat_stream_nat_nat_stream_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_nat_fun_fun$ 0 )
(declare-sort Nat_stream_stream_nat_nat_fun_fun$ 0 )
(declare-sort Nat_stream_nat_stream_nat_stream_fun_fun$ 0 )
(declare-codatatypes ()((Nat_stream$ (sCons$ (shd$ Nat$ )(stl$ Nat_stream$ )))))
(declare-sort Num$ 0)
(declare-fun one$ ()Num$)
(declare-fun select$ (Num$)Num$)
(declare-fun bit0$ (Num$ )Num$)
(declare-fun selecta$ (Num$)Num$)
(declare-fun bit1$ (Num$ )Num$)
(declare-codatatypes ()((Nat_stream_stream$ (sCons$a (shd$a Nat_stream$ )(stl$a Nat_stream_stream$ )))(Nat_stream_stream_stream$ (sCons$b (shd$b Nat_stream_stream$ )(stl$b Nat_stream_stream_stream$ )))(Nat_stream_stream_stream_stream$ (sCons$c (shd$c Nat_stream_stream_stream$ )(stl$c Nat_stream_stream_stream_stream$ )))))
(declare-fun xs$ ()Nat_stream$ )
(declare-fun mod$ (Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun xs$a ()Nat_stream$ )
(declare-fun fusc$ ()Nat_stream$ )
(declare-fun mod$a (Nat_stream_stream_stream_stream$ Nat_stream_stream_stream_stream$ )Nat_stream_stream_stream_stream$ )
(declare-fun mod$b (Nat_stream_stream_stream$ Nat_stream_stream_stream$ )Nat_stream_stream_stream$ )
(declare-fun mod$c (Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun mod$d (Nat$ Nat$ )Nat$ )
(declare-fun one$a ()Nat$ )
(declare-fun one$b ()Nat_stream_stream$ )
(declare-fun one$c ()Nat_stream$ )
(declare-fun one$d ()Nat_stream_stream_stream$ )
(declare-fun plus$ (Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun fusc$a ()Nat_stream$ )
(declare-fun minus$ (Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun plus$a (Nat_stream_stream_stream_stream$ Nat_stream_stream_stream_stream$ )Nat_stream_stream_stream_stream$ )
(declare-fun plus$b (Nat_stream_stream_stream$ Nat_stream_stream_stream$ )Nat_stream_stream_stream$ )
(declare-fun plus$c (Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun plus$d (Nat$ Nat$ )Nat$ )
(declare-fun times$ (Nat_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun minus$a (Nat_stream_stream_stream_stream$ Nat_stream_stream_stream_stream$ )Nat_stream_stream_stream_stream$ )
(declare-fun minus$b (Nat_stream_stream_stream$ Nat_stream_stream_stream$ )Nat_stream_stream_stream$ )
(declare-fun minus$c (Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun minus$d (Nat$ Nat$ )Nat$ )
(declare-fun times$a (Nat_stream_stream_stream_stream$ Nat_stream_stream_stream_stream$ )Nat_stream_stream_stream_stream$ )
(declare-fun times$b (Nat_stream_stream_stream$ Nat_stream_stream_stream$ )Nat_stream_stream_stream$ )
(declare-fun times$c (Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun times$d (Nat$ Nat$ )Nat$ )
(declare-fun fun_app$ (Nat_stream_nat_stream_fun$ Nat_stream$ )Nat_stream$ )
(declare-fun numeral$ (Num$ )Nat_stream$ )
(declare-fun fun_app$a (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$b (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$c (Nat_stream_nat_fun$ Nat_stream$ )Nat$ )
(declare-fun fun_app$d (Nat_nat_stream_nat_fun_fun$ Nat$ )Nat_stream_nat_fun$ )
(declare-fun fun_app$e (Nat_stream_nat_nat_fun_fun$ Nat_stream$ )Nat_nat_fun$ )
(declare-fun fun_app$f (Nat_nat_stream_fun$ Nat$ )Nat_stream$ )
(declare-fun fun_app$g (Nat_nat_nat_stream_fun_fun$ Nat$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$h (Nat_stream_nat_stream_nat_fun_fun$ Nat_stream$ )Nat_stream_nat_fun$ )
(declare-fun fun_app$i (Nat_nat_stream_nat_stream_fun_fun$ Nat$ )Nat_stream_nat_stream_fun$ )
(declare-fun fun_app$j (Nat_stream_nat_nat_stream_fun_fun$ Nat_stream$ )Nat_nat_stream_fun$ )
(declare-fun fun_app$k (Nat_stream_nat_stream_nat_stream_fun_fun$ Nat_stream$ )Nat_stream_nat_stream_fun$ )
(declare-fun fun_app$l (Nat_stream_stream_nat_fun$ Nat_stream_stream$ )Nat$ )
(declare-fun fun_app$m (Nat_nat_stream_stream_nat_fun_fun$ Nat$ )Nat_stream_stream_nat_fun$ )
(declare-fun fun_app$n (Nat_stream_stream_nat_nat_fun_fun$ Nat_stream_stream$ )Nat_nat_fun$ )
(declare-fun numeral$a (Num$ )Nat_stream_stream_stream_stream$ )
(declare-fun numeral$b (Num$ )Nat_stream_stream_stream$ )
(declare-fun numeral$c (Num$ )Nat_stream_stream$ )
(declare-fun numeral$d (Num$ )Nat$ )
(declare-fun szip_with$ (Nat_nat_nat_fun_fun$ Nat_stream$ )Nat_stream_nat_stream_fun$ )
(declare-fun szip_with$a (Nat_nat_stream_nat_fun_fun$ Nat_stream$ Nat_stream_stream$ )Nat_stream$ )
(declare-fun szip_with$b (Nat_stream_nat_nat_fun_fun$ Nat_stream_stream$ Nat_stream$ )Nat_stream$ )
(declare-fun szip_with$c (Nat_nat_nat_stream_fun_fun$ Nat_stream$ Nat_stream$ )Nat_stream_stream$ )
(declare-fun szip_with$d (Nat_stream_nat_stream_nat_fun_fun$ Nat_stream_stream$ Nat_stream_stream$ )Nat_stream$ )
(declare-fun szip_with$e (Nat_nat_stream_nat_stream_fun_fun$ Nat_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun szip_with$f (Nat_stream_nat_nat_stream_fun_fun$ Nat_stream_stream$ Nat_stream$ )Nat_stream_stream$ )
(declare-fun szip_with$g (Nat_stream_nat_stream_nat_stream_fun_fun$ Nat_stream_stream$ Nat_stream_stream$ )Nat_stream_stream$ )
(declare-fun szip_with$h (Nat_nat_stream_stream_nat_fun_fun$ Nat_stream$ Nat_stream_stream_stream$ )Nat_stream$ )
(declare-fun szip_with$i (Nat_stream_stream_nat_nat_fun_fun$ Nat_stream_stream_stream$ Nat_stream$ )Nat_stream$ )
(assert (! (not (= (shd$ xs$ )one$a )):named a0 ))
(assert (! (= xs$ (sCons$ one$a xs$a )):named a1 ))
(assert (! (= (shd$ fusc$ )one$a ):named a2 ))
(assert (! (= (shd$ fusc$a )one$a ):named a3 ))
(assert (! (= xs$a (sCons$ one$a (minus$ (plus$ xs$ xs$a )(times$ (numeral$ (bit0$ one$ ))(mod$ xs$ xs$a ))))):named a4 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream_stream$ )(?v1 Nat_stream_stream_stream_stream$ ))(= (shd$c (times$a ?v0 ?v1 ))(times$b (shd$c ?v0 )(shd$c ?v1 )))):named a5 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_stream$ ))(= (shd$b (times$b ?v0 ?v1 ))(times$c (shd$b ?v0 )(shd$b ?v1 )))):named a6 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (shd$a (times$c ?v0 ?v1 ))(times$ (shd$a ?v0 )(shd$a ?v1 )))):named a7 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (times$ ?v0 ?v1 ))(times$d (shd$ ?v0 )(shd$ ?v1 )))):named a8 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream_stream$ )(?v1 Nat_stream_stream_stream_stream$ ))(= (shd$c (plus$a ?v0 ?v1 ))(plus$b (shd$c ?v0 )(shd$c ?v1 )))):named a9 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_stream$ ))(= (shd$b (plus$b ?v0 ?v1 ))(plus$c (shd$b ?v0 )(shd$b ?v1 )))):named a10 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (shd$a (plus$c ?v0 ?v1 ))(plus$ (shd$a ?v0 )(shd$a ?v1 )))):named a11 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (plus$ ?v0 ?v1 ))(plus$d (shd$ ?v0 )(shd$ ?v1 )))):named a12 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$c (numeral$a ?v0 ))(numeral$b ?v0 ))):named a13 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$b (numeral$b ?v0 ))(numeral$c ?v0 ))):named a14 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$a (numeral$c ?v0 ))(numeral$ ?v0 ))):named a15 ))
(assert (! (forall ((?v0 Num$ ))(= (shd$ (numeral$ ?v0 ))(numeral$d ?v0 ))):named a16 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream_stream$ )(?v1 Nat_stream_stream_stream_stream$ ))(= (shd$c (minus$a ?v0 ?v1 ))(minus$b (shd$c ?v0 )(shd$c ?v1 )))):named a17 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_stream$ ))(= (shd$b (minus$b ?v0 ?v1 ))(minus$c (shd$b ?v0 )(shd$b ?v1 )))):named a18 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (shd$a (minus$c ?v0 ?v1 ))(minus$ (shd$a ?v0 )(shd$a ?v1 )))):named a19 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (minus$ ?v0 ?v1 ))(minus$d (shd$ ?v0 )(shd$ ?v1 )))):named a20 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream_stream$ )(?v1 Nat_stream_stream_stream_stream$ ))(= (shd$c (mod$a ?v0 ?v1 ))(mod$b (shd$c ?v0 )(shd$c ?v1 )))):named a21 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_stream$ ))(= (shd$b (mod$b ?v0 ?v1 ))(mod$c (shd$b ?v0 )(shd$b ?v1 )))):named a22 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ ))(= (shd$a (mod$c ?v0 ?v1 ))(mod$ (shd$a ?v0 )(shd$a ?v1 )))):named a23 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ ))(= (shd$ (mod$ ?v0 ?v1 ))(mod$d (shd$ ?v0 )(shd$ ?v1 )))):named a24 ))
(assert (! (= one$a one$a ):named a25 ))
(assert (! (forall ((?v0 Nat_stream_stream$ ))(= (= one$b ?v0 )(= ?v0 one$b ))):named a26 ))
(assert (! (forall ((?v0 Nat_stream$ ))(= (= one$c ?v0 )(= ?v0 one$c ))):named a27 ))
(assert (! (forall ((?v0 Nat$ ))(= (= one$a ?v0 )(= ?v0 one$a ))):named a28 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (shd$ (fun_app$ (szip_with$ ?v0 ?v1 )?v2 ))(fun_app$a (fun_app$b ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a29 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$ (szip_with$a ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$d ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a30 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (shd$ (szip_with$b ?v0 ?v1 ?v2 ))(fun_app$a (fun_app$e ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a31 ))
(assert (! (forall ((?v0 Nat_nat_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (shd$a (szip_with$c ?v0 ?v1 ?v2 ))(fun_app$f (fun_app$g ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a32 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$ (szip_with$d ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$h ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a33 ))
(assert (! (forall ((?v0 Nat_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$a (szip_with$e ?v0 ?v1 ?v2 ))(fun_app$ (fun_app$i ?v0 (shd$ ?v1 ))(shd$a ?v2 )))):named a34 ))
(assert (! (forall ((?v0 Nat_stream_nat_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream$ ))(= (shd$a (szip_with$f ?v0 ?v1 ?v2 ))(fun_app$f (fun_app$j ?v0 (shd$a ?v1 ))(shd$ ?v2 )))):named a35 ))
(assert (! (forall ((?v0 Nat_stream_nat_stream_nat_stream_fun_fun$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (shd$a (szip_with$g ?v0 ?v1 ?v2 ))(fun_app$ (fun_app$k ?v0 (shd$a ?v1 ))(shd$a ?v2 )))):named a36 ))
(assert (! (forall ((?v0 Nat_nat_stream_stream_nat_fun_fun$ )(?v1 Nat_stream$ )(?v2 Nat_stream_stream_stream$ ))(= (shd$ (szip_with$h ?v0 ?v1 ?v2 ))(fun_app$l (fun_app$m ?v0 (shd$ ?v1 ))(shd$b ?v2 )))):named a37 ))
(assert (! (forall ((?v0 Nat_stream_stream_nat_nat_fun_fun$ )(?v1 Nat_stream_stream_stream$ )(?v2 Nat_stream$ ))(= (shd$ (szip_with$i ?v0 ?v1 ?v2 ))(fun_app$a (fun_app$n ?v0 (shd$b ?v1 ))(shd$ ?v2 )))):named a38 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_stream$ )(?v2 Nat_stream_stream_stream$ ))(= (= (plus$b ?v0 ?v1 )(plus$b ?v2 ?v1 ))(= ?v0 ?v2 ))):named a39 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$d ?v0 ?v1 )(plus$d ?v2 ?v1 ))(= ?v0 ?v2 ))):named a40 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (= (plus$c ?v0 ?v1 )(plus$c ?v2 ?v1 ))(= ?v0 ?v2 ))):named a41 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v2 ?v1 ))(= ?v0 ?v2 ))):named a42 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ )(?v1 Nat_stream_stream_stream$ )(?v2 Nat_stream_stream_stream$ ))(= (= (plus$b ?v0 ?v1 )(plus$b ?v0 ?v2 ))(= ?v1 ?v2 ))):named a43 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ )(?v2 Nat$ ))(= (= (plus$d ?v0 ?v1 )(plus$d ?v0 ?v2 ))(= ?v1 ?v2 ))):named a44 ))
(assert (! (forall ((?v0 Nat_stream_stream$ )(?v1 Nat_stream_stream$ )(?v2 Nat_stream_stream$ ))(= (= (plus$c ?v0 ?v1 )(plus$c ?v0 ?v2 ))(= ?v1 ?v2 ))):named a45 ))
(assert (! (forall ((?v0 Nat_stream$ )(?v1 Nat_stream$ )(?v2 Nat_stream$ ))(= (= (plus$ ?v0 ?v1 )(plus$ ?v0 ?v2 ))(= ?v1 ?v2 ))):named a46 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ ))(= (times$b one$d ?v0 )?v0 )):named a47 ))
(assert (! (forall ((?v0 Nat_stream_stream$ ))(= (times$c one$b ?v0 )?v0 )):named a48 ))
(assert (! (forall ((?v0 Nat$ ))(= (times$d one$a ?v0 )?v0 )):named a49 ))
(assert (! (forall ((?v0 Nat_stream$ ))(= (times$ one$c ?v0 )?v0 )):named a50 ))
(assert (! (forall ((?v0 Nat_stream_stream_stream$ ))(= (times$b one$d ?v0 )?v0 )):named a51 ))
(assert (! (forall ((?v0 Nat_stream_stream$ ))(= (times$c one$b ?v0 )?v0 )):named a52 ))
(assert (! (forall ((?v0 Nat$ ))(= (times$d one$a ?v0 )?v0 )):named a53 ))
(assert (! (forall ((?v0 Nat_stream$ ))(= (times$ one$c ?v0 )?v0 )):named a54 ))
(check-sat )
;(get-unsat-core )
