;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_a_fun_set$ 0 )
(declare-sort B_a_fun_set$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort B_stream_set$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_b_a_fun_fun$ 0 )
(declare-sort A_b_fun_b_fun$ 0 )
(declare-sort B_a_fun_a_fun$ 0 )
(declare-sort B_a_fun_b_fun$ 0 )
(declare-sort B_b_a_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_set$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort B_a_fun_a_fun_set$ 0 )
(declare-sort B_tree_b_tree_fun$ 0 )
(declare-sort A_a_fun_stream_set$ 0 )
(declare-sort B_a_fun_stream_set$ 0 )
(declare-sort A_a_b_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_a_fun_a_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort B_a_fun_a_fun_a_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_set$ 0 )
(declare-sort A_b_a_fun_fun_stream_set$ 0 )
(declare-sort B_a_fun_a_fun_stream_set$ 0 )
(declare-sort A_a_a_fun_fun_a_a_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_stream_stream_set$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_tree_fun$ 0 )
(declare-sort B_a_fun_tree_b_a_fun_tree_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_stream_set$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun$ 0 )
(declare-sort A_b_fun_b_fun_a_b_fun_b_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_fun_b_a_fun_b_fun_fun$ 0 )
(declare-sort B_b_a_fun_fun_b_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_b_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_stream_b_a_fun_stream_fun$ 0 )
(declare-sort A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$ 0 )
(declare-sort B_a_fun_a_fun_tree_b_a_fun_a_fun_tree_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_a_fun_b_a_fun_a_fun_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_tree_b_a_fun_b_a_fun_fun_tree_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_b_a_fun_fun_a_b_a_fun_fun_b_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_fun_fun$ 0 )
(declare-sort A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_fun$ 0 )
(declare-sort A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))(B_a_fun_stream$ (sCons$a (select$ B_a_fun$ )(selecta$ B_a_fun_stream$ )))(B_stream$ (sCons$b (shd$a B$ )(stl$a B_stream$ )))(A_a_fun_stream$ (sCons$c (selectb$ A_a_fun$ )(selectc$ A_a_fun_stream$ )))(B_a_fun_a_fun_stream$ (sCons$d (selectd$ B_a_fun_a_fun$ )(selecte$ B_a_fun_a_fun_stream$ )))(A_b_a_fun_fun_stream$ (sCons$e (selectf$ A_b_a_fun_fun$ )(selectg$ A_b_a_fun_fun_stream$ )))(B_a_fun_b_a_fun_fun_stream$ (sCons$f (selecth$ B_a_fun_b_a_fun_fun$ )(selecti$ B_a_fun_b_a_fun_fun_stream$ )))(A_b_fun_stream$ (sCons$g (selectj$ A_b_fun$ )(selectk$ A_b_fun_stream$ )))(B_b_fun_stream$ (sCons$h (selectl$ B_b_fun$ )(selectm$ B_b_fun_stream$ )))(B_a_fun_b_fun_stream$ (sCons$i (selectn$ B_a_fun_b_fun$ )(selecto$ B_a_fun_b_fun_stream$ )))(A_a_a_fun_fun_stream$ (sCons$j (selectp$ A_a_a_fun_fun$ )(selectq$ A_a_a_fun_fun_stream$ )))(B_b_a_fun_fun_stream$ (sCons$k (selectr$ B_b_a_fun_fun$ )(selects$ B_b_a_fun_fun_stream$ )))(A_b_a_fun_a_fun_fun_stream$ (sCons$l (selectt$ A_b_a_fun_a_fun_fun$ )(selectu$ A_b_a_fun_a_fun_fun_stream$ )))(A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_stream$ (sCons$m (selectv$ A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun$ )(selectw$ A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_stream$ )))(A_a_b_a_fun_fun_fun_stream$ (sCons$n (selectx$ A_a_b_a_fun_fun_fun$ )(selecty$ A_a_b_a_fun_fun_fun_stream$ )))(A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_stream$ (sCons$o (selectz$ A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ )(selecua$ A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_stream$ )))(A_a_a_fun_fun_a_a_fun_fun_stream$ (sCons$p (selecub$ A_a_a_fun_fun_a_a_fun_fun$ )(selecuc$ A_a_a_fun_fun_a_a_fun_fun_stream$ )))(A_b_fun_b_fun_stream$ (sCons$q (selecud$ A_b_fun_b_fun$ )(selecue$ A_b_fun_b_fun_stream$ )))(A_a_fun_a_fun_stream$ (sCons$r (selecuf$ A_a_fun_a_fun$ )(selecug$ A_a_fun_a_fun_stream$ )))(A_b_a_fun_fun_b_a_fun_fun_stream$ (sCons$s (selecuh$ A_b_a_fun_fun_b_a_fun_fun$ )(selecui$ A_b_a_fun_fun_b_a_fun_fun_stream$ )))(B_a_fun_a_fun_a_fun_stream$ (sCons$t (selecuj$ B_a_fun_a_fun_a_fun$ )(selecuk$ B_a_fun_a_fun_a_fun_stream$ )))(B_a_fun_b_a_fun_fun_b_a_fun_fun_stream$ (sCons$u (selecul$ B_a_fun_b_a_fun_fun_b_a_fun_fun$ )(selecum$ B_a_fun_b_a_fun_fun_b_a_fun_fun_stream$ )))(B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ (sCons$v (selecun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(selecuo$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ )))(B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ (sCons$w (selecup$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ )(selecuq$ B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ )))(A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ (sCons$x (selecur$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(selecus$ A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )))(A_a_fun_a_a_fun_fun_stream$ (sCons$y (selecut$ A_a_fun_a_a_fun_fun$ )(selecuu$ A_a_fun_a_a_fun_fun_stream$ )))(A_stream_stream$ (sCons$z (shd$b A_stream$ )(stl$b A_stream_stream$ )))(B_a_fun_stream_stream$ (sCons$aa (shd$c B_a_fun_stream$ )(stl$c B_a_fun_stream_stream$ )))(B_a_fun_b_a_fun_fun_tree$ (node$ (selecuv$ B_a_fun_b_a_fun_fun$ )(selecuw$ B_a_fun_b_a_fun_fun_tree$ )(selecux$ B_a_fun_b_a_fun_fun_tree$ )))(B_a_fun_a_fun_tree$ (node$a (selecuy$ B_a_fun_a_fun$ )(selecuz$ B_a_fun_a_fun_tree$ )(selecva$ B_a_fun_a_fun_tree$ )))(A_b_a_fun_fun_tree$ (node$b (selecvb$ A_b_a_fun_fun$ )(selecvc$ A_b_a_fun_fun_tree$ )(selecvd$ A_b_a_fun_fun_tree$ )))(A_a_fun_tree$ (node$c (selecve$ A_a_fun$ )(selecvf$ A_a_fun_tree$ )(selecvg$ A_a_fun_tree$ )))(B_tree$ (node$d (root$ B$ )(left$ B_tree$ )(right$ B_tree$ )))(B_a_fun_tree$ (node$e (selecvh$ B_a_fun$ )(selecvi$ B_a_fun_tree$ )(selecvj$ B_a_fun_tree$ )))(A_tree$ (node$f (root$a A$ )(left$a A_tree$ )(right$a A_tree$ )))))
(declare-fun c$ ()A$ )
(declare-fun x$ ()B_stream$ )
(declare-fun id$ ()B_a_fun_b_a_fun_fun$ )
(declare-fun uu$ ()B_a_fun$ )
(declare-fun id$a ()A_a_fun$ )
(declare-fun id$b ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$c ()B_b_fun$ )
(declare-fun id$d ()B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun id$e ()A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun id$f ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun id$g ()A_b_fun_a_b_fun_fun$ )
(declare-fun id$h ()B_b_fun_b_b_fun_fun$ )
(declare-fun id$i ()B_a_fun_b_fun_b_a_fun_b_fun_fun$ )
(declare-fun id$j ()A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun id$k ()B_b_a_fun_fun_b_b_a_fun_fun_fun$ )
(declare-fun id$l ()A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_fun$ )
(declare-fun id$m ()A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun id$n ()A_a_a_fun_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ )
(declare-fun id$o ()A_b_fun_b_fun_a_b_fun_b_fun_fun$ )
(declare-fun id$p ()A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun id$q ()A_b_a_fun_fun_b_a_fun_fun_a_b_a_fun_fun_b_a_fun_fun_fun$ )
(declare-fun id$r ()B_a_fun_a_fun_a_fun_b_a_fun_a_fun_a_fun_fun$ )
(declare-fun id$s ()B_a_fun_b_a_fun_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_fun_fun$ )
(declare-fun id$t ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun id$u ()B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ )
(declare-fun id$v ()A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun id$w ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun id$x ()A_stream_a_stream_fun$ )
(declare-fun id$y ()B_a_fun_stream_b_a_fun_stream_fun$ )
(declare-fun id$z ()B_a_fun_b_a_fun_fun_tree_b_a_fun_b_a_fun_fun_tree_fun$ )
(declare-fun uua$ (A$ )A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun$ )
(declare-fun uub$ (A$ )A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun uuc$ (A$ )A_a_a_fun_fun_a_a_fun_fun$ )
(declare-fun uud$ (A$ )A_b_fun_b_fun$ )
(declare-fun uue$ (A$ )A_a_fun_a_fun$ )
(declare-fun uuf$ (A$ )A_b_a_fun_fun_b_a_fun_fun$ )
(declare-fun uug$ (B_a_fun$ )B_a_fun_a_fun_a_fun$ )
(declare-fun uuh$ (B_a_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_fun$ )
(declare-fun uui$ (B$ )B_a_fun_a_fun$ )
(declare-fun uuj$ ()A_a_fun$ )
(declare-fun uuk$ ()B_a_fun_b_a_fun_fun$ )
(declare-fun uul$ ()B_b_fun$ )
(declare-fun comp$ (B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun id$aa ()B_a_fun_a_fun_tree_b_a_fun_a_fun_tree_fun$ )
(declare-fun id$ab ()A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$ )
(declare-fun id$ac ()A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun id$ad ()B_tree_b_tree_fun$ )
(declare-fun id$ae ()B_a_fun_tree_b_a_fun_tree_fun$ )
(declare-fun id$af ()A_tree_a_tree_fun$ )
(declare-fun smap$ (A_a_fun$ A_stream$ )A_stream$ )
(declare-fun comp$a (B_a_fun_b_a_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun comp$b (A_a_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun comp$c (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun comp$d (A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun smap$a (B_a_fun_a_fun$ B_a_fun_stream$ )A_stream$ )
(declare-fun smap$b (A_b_a_fun_fun$ A_stream$ )B_a_fun_stream$ )
(declare-fun smap$c (B_a_fun_b_a_fun_fun$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun smap$d (A_b_fun$ A_stream$ )B_stream$ )
(declare-fun smap$e (B_a_fun$ B_stream$ )A_stream$ )
(declare-fun smap$f (B_b_fun$ B_stream$ )B_stream$ )
(declare-fun smap$g (B_a_fun_b_fun$ B_a_fun_stream$ )B_stream$ )
(declare-fun smap$h (A_a_a_fun_fun$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap$i (B_b_a_fun_fun$ B_stream$ )B_a_fun_stream$ )
(declare-fun smap$j (A_a_fun_a_a_fun_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap$k (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun smap$l (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun_stream$ )B_a_fun_a_fun_stream$ )
(declare-fun smap$m (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun st_ap$ (B_a_fun_stream$ B_stream$ )A_stream$ )
(declare-fun member$ (A_stream$ A_stream_set$ )Bool )
(declare-fun st_ap$a (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun st_ap$b (B_a_fun_a_fun_stream$ B_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$c (A_b_a_fun_fun_stream$ A_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$d (B_a_fun_b_a_fun_fun_stream$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$e (A_b_fun_stream$ A_stream$ )B_stream$ )
(declare-fun st_ap$f (B_b_fun_stream$ B_stream$ )B_stream$ )
(declare-fun st_ap$g (B_a_fun_b_fun_stream$ B_a_fun_stream$ )B_stream$ )
(declare-fun st_ap$h (A_a_a_fun_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$i (B_b_a_fun_fun_stream$ B_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$j (A_b_a_fun_a_fun_fun_stream$ A_stream$ )B_a_fun_a_fun_stream$ )
(declare-fun st_ap$k (A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_stream$ A_b_a_fun_a_fun_fun_stream$ )B_a_fun_a_fun_stream$ )
(declare-fun st_ap$l (A_a_b_a_fun_fun_fun_stream$ A_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun st_ap$m (A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_stream$ A_a_b_a_fun_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun st_ap$n (A_a_a_fun_fun_a_a_fun_fun_stream$ A_a_a_fun_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$o (A_b_fun_b_fun_stream$ A_b_fun_stream$ )B_stream$ )
(declare-fun st_ap$p (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$q (A_b_a_fun_fun_b_a_fun_fun_stream$ A_b_a_fun_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$r (B_a_fun_a_fun_a_fun_stream$ B_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$s (B_a_fun_b_a_fun_fun_b_a_fun_fun_stream$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$t (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ B_a_fun_b_a_fun_fun_stream$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun st_ap$u (B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ B_a_fun_a_fun_stream$ )B_a_fun_a_fun_stream$ )
(declare-fun st_ap$v (A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ A_b_a_fun_fun_stream$ )A_b_a_fun_fun_stream$ )
(declare-fun st_ap$w (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun fun_app$ (B_a_fun_b_a_fun_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun$ )
(declare-fun map_fun$ (B_b_fun$ )A_a_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun member$a (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$b (B_a_fun_stream$ B_a_fun_stream_set$ )Bool )
(declare-fun member$c (B_a_fun_stream_stream$ B_a_fun_stream_stream_set$ )Bool )
(declare-fun member$d (B$ B_set$ )Bool )
(declare-fun member$e (B_stream$ B_stream_set$ )Bool )
(declare-fun member$f (A_a_fun$ A_a_fun_set$ )Bool )
(declare-fun member$g (A_a_fun_stream$ A_a_fun_stream_set$ )Bool )
(declare-fun member$h (A_b_a_fun_fun$ A_b_a_fun_fun_set$ )Bool )
(declare-fun member$i (A_b_a_fun_fun_stream$ A_b_a_fun_fun_stream_set$ )Bool )
(declare-fun member$j (B_a_fun_a_fun$ B_a_fun_a_fun_set$ )Bool )
(declare-fun member$k (B_a_fun_a_fun_stream$ B_a_fun_a_fun_stream_set$ )Bool )
(declare-fun member$l (B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_set$ )Bool )
(declare-fun member$m (B_a_fun_b_a_fun_fun_stream$ B_a_fun_b_a_fun_fun_stream_set$ )Bool )
(declare-fun member$n (B_a_fun$ B_a_fun_set$ )Bool )
(declare-fun member$o (A$ A_set$ )Bool )
(declare-fun streams$ (A_stream_set$ )A_stream_stream_set$ )
(declare-fun fun_app$a (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun fun_app$b (B_a_fun_a_fun_a_fun$ B_a_fun_a_fun$ )A$ )
(declare-fun fun_app$c (B_a_fun_a_fun$ B_a_fun$ )A$ )
(declare-fun fun_app$d (B_a_fun$ B$ )A$ )
(declare-fun fun_app$e (A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun$ A_b_a_fun_a_fun_fun$ )B_a_fun_a_fun$ )
(declare-fun fun_app$f (A_b_a_fun_a_fun_fun$ A$ )B_a_fun_a_fun$ )
(declare-fun fun_app$g (A_b_a_fun_fun_b_a_fun_fun$ A_b_a_fun_fun$ )B_a_fun$ )
(declare-fun fun_app$h (A_b_a_fun_fun$ A$ )B_a_fun$ )
(declare-fun fun_app$i (A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ A_a_b_a_fun_fun_fun$ )A_b_a_fun_fun$ )
(declare-fun fun_app$j (A_a_b_a_fun_fun_fun$ A$ )A_b_a_fun_fun$ )
(declare-fun fun_app$k (A_a_a_fun_fun_a_a_fun_fun$ A_a_a_fun_fun$ )A_a_fun$ )
(declare-fun fun_app$l (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$m (A_b_fun_b_fun$ A_b_fun$ )B$ )
(declare-fun fun_app$n (A_b_fun$ A$ )B$ )
(declare-fun fun_app$o (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$p (A_a_fun$ A$ )A$ )
(declare-fun fun_app$q (B_b_fun$ B$ )B$ )
(declare-fun fun_app$r (B_a_fun_b_fun$ B_a_fun$ )B$ )
(declare-fun fun_app$s (B_b_a_fun_fun$ B$ )B_a_fun$ )
(declare-fun fun_app$t (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$u (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ )B_a_fun_a_fun$ )
(declare-fun fun_app$v (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun$ )
(declare-fun fun_app$w (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$x (A_a_fun_b_a_fun_b_a_fun_fun_fun$ A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$y (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$z (A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ A_a_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun map_fun$a (A_a_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun map_fun$b (B_a_fun_b_a_fun_fun$ )A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ )
(declare-fun map_fun$c (A_a_fun$ )B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$d (B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$e (A_a_fun$ )B_b_fun_a_b_fun_a_b_fun_fun_fun$ )
(declare-fun map_fun$f (B_b_fun$ )B_b_fun_b_b_fun_b_b_fun_fun_fun$ )
(declare-fun map_fun$g (B_a_fun_b_a_fun_fun$ )B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ )
(declare-fun map_fun$h (A_a_fun$ )A_a_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )
(declare-fun map_fun$i (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun map_tree$ (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )B_a_fun_b_a_fun_fun_tree_b_a_fun_b_a_fun_fun_tree_fun$ )
(declare-fun siterate$ (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun_stream$ )
(declare-fun streams$a (B_a_fun_stream_set$ )B_a_fun_stream_stream_set$ )
(declare-fun streams$b (B_set$ )B_stream_set$ )
(declare-fun streams$c (A_a_fun_set$ )A_a_fun_stream_set$ )
(declare-fun streams$d (A_b_a_fun_fun_set$ )A_b_a_fun_fun_stream_set$ )
(declare-fun streams$e (B_a_fun_a_fun_set$ )B_a_fun_a_fun_stream_set$ )
(declare-fun streams$f (B_a_fun_b_a_fun_fun_set$ )B_a_fun_b_a_fun_fun_stream_set$ )
(declare-fun streams$g (B_a_fun_set$ )B_a_fun_stream_set$ )
(declare-fun streams$h (A_set$ )A_stream_set$ )
(declare-fun fun_app$aa (B_a_fun_b_a_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun$ )
(declare-fun fun_app$ab (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun fun_app$ac (B_b_fun_a_b_fun_a_b_fun_fun_fun$ B_b_fun$ )A_b_fun_a_b_fun_fun$ )
(declare-fun fun_app$ad (B_b_fun_b_b_fun_b_b_fun_fun_fun$ B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun fun_app$ae (B_b_fun_b_a_fun_b_fun_b_a_fun_b_fun_fun_fun$ B_b_fun$ )B_a_fun_b_fun_b_a_fun_b_fun_fun$ )
(declare-fun fun_app$af (A_a_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun fun_app$ag (B_a_fun_b_a_fun_fun_tree_b_a_fun_b_a_fun_fun_tree_fun$ B_a_fun_b_a_fun_fun_tree$ )B_a_fun_b_a_fun_fun_tree$ )
(declare-fun fun_app$ah (B_a_fun_a_fun_tree_b_a_fun_a_fun_tree_fun$ B_a_fun_a_fun_tree$ )B_a_fun_a_fun_tree$ )
(declare-fun fun_app$ai (A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$ A_b_a_fun_fun_tree$ )A_b_a_fun_fun_tree$ )
(declare-fun fun_app$aj (A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun fun_app$ak (B_tree_b_tree_fun$ B_tree$ )B_tree$ )
(declare-fun fun_app$al (B_a_fun_tree_b_a_fun_tree_fun$ B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun fun_app$am (A_tree_a_tree_fun$ A_tree$ )A_tree$ )
(declare-fun map_tree$a (B_a_fun_a_fun_b_a_fun_a_fun_fun$ )B_a_fun_a_fun_tree_b_a_fun_a_fun_tree_fun$ )
(declare-fun map_tree$b (A_b_a_fun_fun_a_b_a_fun_fun_fun$ )A_b_a_fun_fun_tree_a_b_a_fun_fun_tree_fun$ )
(declare-fun map_tree$c (A_a_fun_a_a_fun_fun$ )A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun map_tree$d (B_b_fun$ )B_tree_b_tree_fun$ )
(declare-fun map_tree$e (B_a_fun_b_a_fun_fun$ )B_a_fun_tree_b_a_fun_tree_fun$ )
(declare-fun map_tree$f (A_a_fun$ )A_tree_a_tree_fun$ )
(declare-fun siterate$a (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$b (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$c (B_b_fun$ B$ )B_stream$ )
(declare-fun siterate$d (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ )B_a_fun_a_fun_stream$ )
(declare-fun siterate$e (A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ )A_b_a_fun_fun_stream$ )
(declare-fun siterate$f (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$g (A_b_fun_a_b_fun_fun$ A_b_fun$ )A_b_fun_stream$ )
(declare-fun siterate$h (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun_stream$ )
(declare-fun siterate$i (B_a_fun_b_fun_b_a_fun_b_fun_fun$ B_a_fun_b_fun$ )B_a_fun_b_fun_stream$ )
(declare-fun siterate$j (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun_stream$ )
(declare-fun siterate$k (B_b_a_fun_fun_b_b_a_fun_fun_fun$ B_b_a_fun_fun$ )B_b_a_fun_fun_stream$ )
(declare-fun siterate$l (A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_a_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_fun$ A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun$ )A_b_a_fun_a_fun_fun_b_a_fun_a_fun_fun_stream$ )
(declare-fun siterate$m (A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_a_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_fun$ A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun$ )A_a_b_a_fun_fun_fun_a_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$n (A_a_a_fun_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ A_a_a_fun_fun_a_a_fun_fun$ )A_a_a_fun_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$o (A_b_fun_b_fun_a_b_fun_b_fun_fun$ A_b_fun_b_fun$ )A_b_fun_b_fun_stream$ )
(declare-fun siterate$p (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun_stream$ )
(declare-fun siterate$q (A_b_a_fun_fun_b_a_fun_fun_a_b_a_fun_fun_b_a_fun_fun_fun$ A_b_a_fun_fun_b_a_fun_fun$ )A_b_a_fun_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$r (B_a_fun_a_fun_a_fun_b_a_fun_a_fun_a_fun_fun$ B_a_fun_a_fun_a_fun$ )B_a_fun_a_fun_a_fun_stream$ )
(declare-fun siterate$s (B_a_fun_b_a_fun_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$t (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$u (B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ )
(declare-fun siterate$v (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ )A_b_a_fun_fun_a_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$w (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$x (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun siterate$y (B_a_fun_stream_b_a_fun_stream_fun$ B_a_fun_stream$ )B_a_fun_stream_stream$ )
(declare-fun iso_tuple_update_accessor_eq_assist$ (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$a (B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ B_a_fun_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$b (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ A_b_a_fun_fun$ A_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$c (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ A_a_fun$ A_a_fun_a_a_fun_fun$ A_a_fun$ A_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$d (B_b_fun_b_b_fun_fun$ B_b_fun$ B$ B_b_fun$ B$ B$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$e (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$f (A_a_fun_a_a_fun_fun$ A_a_fun$ A$ A_a_fun$ A$ A$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$ (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_b_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$a (B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$b (A_b_a_fun_fun_a_b_a_fun_fun_fun_a_b_a_fun_fun_a_b_a_fun_fun_fun_fun$ A_b_a_fun_fun_a_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$c (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$d (B_b_fun_b_b_fun_fun$ B_b_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$e (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$f (A_a_fun_a_a_fun_fun$ A_a_fun$ )Bool )
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_b_a_fun_fun$ ))(! (= (fun_app$ (uuh$ ?v0 )?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$ (uuh$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_a_fun$ ))(! (= (fun_app$b (uug$ ?v0 )?v1 )(fun_app$c ?v1 ?v0 )):pattern ((fun_app$b (uug$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_fun$ ))(! (= (fun_app$c (uui$ ?v0 )?v1 )(fun_app$d ?v1 ?v0 )):pattern ((fun_app$c (uui$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_a_fun_a_fun_fun$ ))(! (= (fun_app$e (uua$ ?v0 )?v1 )(fun_app$f ?v1 ?v0 )):pattern ((fun_app$e (uua$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_a_fun_fun$ ))(! (= (fun_app$g (uuf$ ?v0 )?v1 )(fun_app$h ?v1 ?v0 )):pattern ((fun_app$g (uuf$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_b_a_fun_fun_fun$ ))(! (= (fun_app$i (uub$ ?v0 )?v1 )(fun_app$j ?v1 ?v0 )):pattern ((fun_app$i (uub$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_a_fun_fun$ ))(! (= (fun_app$k (uuc$ ?v0 )?v1 )(fun_app$l ?v1 ?v0 )):pattern ((fun_app$k (uuc$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A_b_fun$ ))(! (= (fun_app$m (uud$ ?v0 )?v1 )(fun_app$n ?v1 ?v0 )):pattern ((fun_app$m (uud$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ ))(! (= (fun_app$o (uue$ ?v0 )?v1 )(fun_app$p ?v1 ?v0 )):pattern ((fun_app$o (uue$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$a uuk$ ?v0 )?v0 ):pattern ((fun_app$a uuk$ ?v0 )))):named a9 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$q uul$ ?v0 )?v0 ):pattern ((fun_app$q uul$ ?v0 )))):named a10 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$p uuj$ ?v0 )?v0 ):pattern ((fun_app$p uuj$ ?v0 )))):named a11 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$d uu$ ?v0 )c$ ):pattern ((fun_app$d uu$ ?v0 )))):named a12 ))
(assert (! (not (= (st_ap$ (siterate$ id$ uu$ )x$ )(siterate$a id$a c$ ))):named a13 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (st_ap$a (siterate$b id$b ?v0 )(siterate$a id$a ?v1 ))(siterate$a id$a (fun_app$p ?v0 ?v1 )))):named a14 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (st_ap$ (siterate$ id$ ?v0 )(siterate$c id$c ?v1 ))(siterate$a id$a (fun_app$d ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun$ ))(= (st_ap$b (siterate$d id$d ?v0 )(siterate$ id$ ?v1 ))(siterate$a id$a (fun_app$c ?v0 ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A$ ))(= (st_ap$c (siterate$e id$e ?v0 )(siterate$a id$a ?v1 ))(siterate$ id$ (fun_app$h ?v0 ?v1 )))):named a17 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (st_ap$d (siterate$f id$f ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$a ?v0 ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (st_ap$e (siterate$g id$g ?v0 )(siterate$a id$a ?v1 ))(siterate$c id$c (fun_app$n ?v0 ?v1 )))):named a19 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (st_ap$f (siterate$h id$h ?v0 )(siterate$c id$c ?v1 ))(siterate$c id$c (fun_app$q ?v0 ?v1 )))):named a20 ))
(assert (! (forall ((?v0 B_a_fun_b_fun$ )(?v1 B_a_fun$ ))(= (st_ap$g (siterate$i id$i ?v0 )(siterate$ id$ ?v1 ))(siterate$c id$c (fun_app$r ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (st_ap$h (siterate$j id$j ?v0 )(siterate$a id$a ?v1 ))(siterate$b id$b (fun_app$l ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ ))(= (st_ap$i (siterate$k id$k ?v0 )(siterate$c id$c ?v1 ))(siterate$ id$ (fun_app$s ?v0 ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_b_a_fun_a_fun_fun_stream$ )(?v1 A$ ))(= (st_ap$j ?v0 (siterate$a id$a ?v1 ))(st_ap$k (siterate$l id$l (uua$ ?v1 ))?v0 ))):named a24 ))
(assert (! (forall ((?v0 A_a_b_a_fun_fun_fun_stream$ )(?v1 A$ ))(= (st_ap$l ?v0 (siterate$a id$a ?v1 ))(st_ap$m (siterate$m id$m (uub$ ?v1 ))?v0 ))):named a25 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A$ ))(= (st_ap$h ?v0 (siterate$a id$a ?v1 ))(st_ap$n (siterate$n id$n (uuc$ ?v1 ))?v0 ))):named a26 ))
(assert (! (forall ((?v0 A_b_fun_stream$ )(?v1 A$ ))(= (st_ap$e ?v0 (siterate$a id$a ?v1 ))(st_ap$o (siterate$o id$o (uud$ ?v1 ))?v0 ))):named a27 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A$ ))(= (st_ap$a ?v0 (siterate$a id$a ?v1 ))(st_ap$p (siterate$p id$p (uue$ ?v1 ))?v0 ))):named a28 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream$ )(?v1 A$ ))(= (st_ap$c ?v0 (siterate$a id$a ?v1 ))(st_ap$q (siterate$q id$q (uuf$ ?v1 ))?v0 ))):named a29 ))
(assert (! (forall ((?v0 B_a_fun_a_fun_stream$ )(?v1 B_a_fun$ ))(= (st_ap$b ?v0 (siterate$ id$ ?v1 ))(st_ap$r (siterate$r id$r (uug$ ?v1 ))?v0 ))):named a30 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ )(?v1 B_a_fun$ ))(= (st_ap$d ?v0 (siterate$ id$ ?v1 ))(st_ap$s (siterate$s id$s (uuh$ ?v1 ))?v0 ))):named a31 ))
(assert (! (forall ((?v0 B_a_fun_stream$ )(?v1 B$ ))(= (st_ap$ ?v0 (siterate$c id$c ?v1 ))(st_ap$b (siterate$d id$d (uui$ ?v1 ))?v0 ))):named a32 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$a (siterate$b id$b uuj$ )?v0 )?v0 )):named a33 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(= (st_ap$d (siterate$f id$f uuk$ )?v0 )?v0 )):named a34 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_stream$ ))(= (st_ap$t (siterate$t id$t id$f )?v0 )?v0 )):named a35 ))
(assert (! (forall ((?v0 B_a_fun_a_fun_stream$ ))(= (st_ap$u (siterate$u id$u id$d )?v0 )?v0 )):named a36 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_stream$ ))(= (st_ap$v (siterate$v id$v id$e )?v0 )?v0 )):named a37 ))
(assert (! (forall ((?v0 A_a_fun_stream$ ))(= (st_ap$w (siterate$w id$w id$b )?v0 )?v0 )):named a38 ))
(assert (! (forall ((?v0 B_stream$ ))(= (st_ap$f (siterate$h id$h id$c )?v0 )?v0 )):named a39 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(= (st_ap$d (siterate$f id$f id$ )?v0 )?v0 )):named a40 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$a (siterate$b id$b id$a )?v0 )?v0 )):named a41 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ ))(! (= (fun_app$t id$f ?v0 )?v0 ):pattern ((fun_app$t id$f ?v0 )))):named a42 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ ))(! (= (fun_app$u id$d ?v0 )?v0 ):pattern ((fun_app$u id$d ?v0 )))):named a43 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ ))(! (= (fun_app$v id$e ?v0 )?v0 ):pattern ((fun_app$v id$e ?v0 )))):named a44 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$w id$b ?v0 )?v0 ):pattern ((fun_app$w id$b ?v0 )))):named a45 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$q id$c ?v0 )?v0 ):pattern ((fun_app$q id$c ?v0 )))):named a46 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$a id$ ?v0 )?v0 ):pattern ((fun_app$a id$ ?v0 )))):named a47 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$p id$a ?v0 )?v0 ):pattern ((fun_app$p id$a ?v0 )))):named a48 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ ))(! (= (fun_app$t id$f ?v0 )?v0 ):pattern ((fun_app$t id$f ?v0 )))):named a49 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ ))(! (= (fun_app$u id$d ?v0 )?v0 ):pattern ((fun_app$u id$d ?v0 )))):named a50 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ ))(! (= (fun_app$v id$e ?v0 )?v0 ):pattern ((fun_app$v id$e ?v0 )))):named a51 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$w id$b ?v0 )?v0 ):pattern ((fun_app$w id$b ?v0 )))):named a52 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$q id$c ?v0 )?v0 ):pattern ((fun_app$q id$c ?v0 )))):named a53 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$a id$ ?v0 )?v0 ):pattern ((fun_app$a id$ ?v0 )))):named a54 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$p id$a ?v0 )?v0 ):pattern ((fun_app$p id$a ?v0 )))):named a55 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v2 B_a_fun_b_a_fun_fun$ ))(=> (= ?v0 (fun_app$t ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$ id$t id$f ?v2 ?v1 ?v0 ?v2 ))):named a56 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun_a_fun_b_a_fun_a_fun_fun$ )(?v2 B_a_fun_a_fun$ ))(=> (= ?v0 (fun_app$u ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$a id$u id$d ?v2 ?v1 ?v0 ?v2 ))):named a57 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(?v2 A_b_a_fun_fun$ ))(=> (= ?v0 (fun_app$v ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$b id$v id$e ?v2 ?v1 ?v0 ?v2 ))):named a58 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_a_a_fun_fun$ )(?v2 A_a_fun$ ))(=> (= ?v0 (fun_app$w ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$c id$w id$b ?v2 ?v1 ?v0 ?v2 ))):named a59 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ )(?v2 B$ ))(=> (= ?v0 (fun_app$q ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$d id$h id$c ?v2 ?v1 ?v0 ?v2 ))):named a60 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun$ ))(=> (= ?v0 (fun_app$a ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$e id$f id$ ?v2 ?v1 ?v0 ?v2 ))):named a61 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ ))(=> (= ?v0 (fun_app$p ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$f id$b id$a ?v2 ?v1 ?v0 ?v2 ))):named a62 ))
(assert (! (iso_tuple_update_accessor_cong_assist$ id$t id$f ):named a63 ))
(assert (! (iso_tuple_update_accessor_cong_assist$a id$u id$d ):named a64 ))
(assert (! (iso_tuple_update_accessor_cong_assist$b id$v id$e ):named a65 ))
(assert (! (iso_tuple_update_accessor_cong_assist$c id$w id$b ):named a66 ))
(assert (! (iso_tuple_update_accessor_cong_assist$d id$h id$c ):named a67 ))
(assert (! (iso_tuple_update_accessor_cong_assist$e id$f id$ ):named a68 ))
(assert (! (iso_tuple_update_accessor_cong_assist$f id$b id$a ):named a69 ))
(assert (! (= (fun_app$x (map_fun$ id$c )id$a )id$ ):named a70 ))
(assert (! (= (fun_app$y (map_fun$a id$a )id$a )id$b ):named a71 ))
(assert (! (= (fun_app$z (map_fun$b id$ )id$a )id$d ):named a72 ))
(assert (! (= (fun_app$aa (map_fun$c id$a )id$ )id$e ):named a73 ))
(assert (! (= (fun_app$ab (map_fun$d id$ )id$ )id$f ):named a74 ))
(assert (! (= (fun_app$ac (map_fun$e id$a )id$c )id$g ):named a75 ))
(assert (! (= (fun_app$ad (map_fun$f id$c )id$c )id$h ):named a76 ))
(assert (! (= (fun_app$ae (map_fun$g id$ )id$c )id$i ):named a77 ))
(assert (! (= (fun_app$af (map_fun$h id$a )id$b )id$j ):named a78 ))
(assert (! (= (map_fun$i id$b id$a )id$p ):named a79 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_set$ ))(=> (member$ ?v0 ?v1 )(member$a (siterate$x id$x ?v0 )(streams$ ?v1 )))):named a80 ))
(assert (! (forall ((?v0 B_a_fun_stream$ )(?v1 B_a_fun_stream_set$ ))(=> (member$b ?v0 ?v1 )(member$c (siterate$y id$y ?v0 )(streams$a ?v1 )))):named a81 ))
(assert (! (forall ((?v0 B$ )(?v1 B_set$ ))(=> (member$d ?v0 ?v1 )(member$e (siterate$c id$c ?v0 )(streams$b ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_set$ ))(=> (member$f ?v0 ?v1 )(member$g (siterate$b id$b ?v0 )(streams$c ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A_b_a_fun_fun_set$ ))(=> (member$h ?v0 ?v1 )(member$i (siterate$e id$e ?v0 )(streams$d ?v1 )))):named a84 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun_a_fun_set$ ))(=> (member$j ?v0 ?v1 )(member$k (siterate$d id$d ?v0 )(streams$e ?v1 )))):named a85 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun_set$ ))(=> (member$l ?v0 ?v1 )(member$m (siterate$f id$f ?v0 )(streams$f ?v1 )))):named a86 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_set$ ))(=> (member$n ?v0 ?v1 )(member$b (siterate$ id$ ?v0 )(streams$g ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ ))(=> (member$o ?v0 ?v1 )(member$ (siterate$a id$a ?v0 )(streams$h ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (smap$ ?v0 (siterate$a id$a ?v1 ))(siterate$a id$a (fun_app$p ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun$ ))(= (smap$a ?v0 (siterate$ id$ ?v1 ))(siterate$a id$a (fun_app$c ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_b_a_fun_fun$ )(?v1 A$ ))(= (smap$b ?v0 (siterate$a id$a ?v1 ))(siterate$ id$ (fun_app$h ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (smap$c ?v0 (siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$a ?v0 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (smap$d ?v0 (siterate$a id$a ?v1 ))(siterate$c id$c (fun_app$n ?v0 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (smap$e ?v0 (siterate$c id$c ?v1 ))(siterate$a id$a (fun_app$d ?v0 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (smap$f ?v0 (siterate$c id$c ?v1 ))(siterate$c id$c (fun_app$q ?v0 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 B_a_fun_b_fun$ )(?v1 B_a_fun$ ))(= (smap$g ?v0 (siterate$ id$ ?v1 ))(siterate$c id$c (fun_app$r ?v0 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (smap$h ?v0 (siterate$a id$a ?v1 ))(siterate$b id$b (fun_app$l ?v0 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 B_b_a_fun_fun$ )(?v1 B$ ))(= (smap$i ?v0 (siterate$c id$c ?v1 ))(siterate$ id$ (fun_app$s ?v0 ?v1 )))):named a98 ))
(assert (! (= (comp$ id$ )id$f ):named a99 ))
(assert (! (= (comp$a id$ )id$e ):named a100 ))
(assert (! (= (comp$b id$a )id$d ):named a101 ))
(assert (! (= (comp$c id$a )id$b ):named a102 ))
(assert (! (= (comp$d id$a )id$ ):named a103 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (smap$f ?v0 (siterate$c ?v0 ?v1 ))(siterate$c ?v0 (fun_app$q ?v0 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (smap$j ?v0 (siterate$b ?v0 ?v1 ))(siterate$b ?v0 (fun_app$w ?v0 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_a_b_a_fun_fun_fun$ )(?v1 A_b_a_fun_fun$ ))(= (smap$k ?v0 (siterate$e ?v0 ?v1 ))(siterate$e ?v0 (fun_app$v ?v0 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 B_a_fun_a_fun_b_a_fun_a_fun_fun$ )(?v1 B_a_fun_a_fun$ ))(= (smap$l ?v0 (siterate$d ?v0 ?v1 ))(siterate$d ?v0 (fun_app$u ?v0 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )(?v1 B_a_fun_b_a_fun_fun$ ))(= (smap$m ?v0 (siterate$f ?v0 ?v1 ))(siterate$f ?v0 (fun_app$t ?v0 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (smap$c ?v0 (siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$a ?v0 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (smap$ ?v0 (siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$p ?v0 ?v1 )))):named a110 ))
(assert (! (= (fun_app$y (map_fun$a uuj$ )uuj$ )id$b ):named a111 ))
(assert (! (= (fun_app$aa (map_fun$c uuj$ )uuk$ )id$e ):named a112 ))
(assert (! (= (fun_app$z (map_fun$b uuk$ )uuj$ )id$d ):named a113 ))
(assert (! (= (fun_app$ab (map_fun$d uuk$ )uuk$ )id$f ):named a114 ))
(assert (! (= (fun_app$x (map_fun$ uul$ )uuj$ )id$ ):named a115 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun_tree$ ))(= (fun_app$ag (map_tree$ id$f )?v0 )?v0 )):named a116 ))
(assert (! (forall ((?v0 B_a_fun_a_fun_tree$ ))(= (fun_app$ah (map_tree$a id$d )?v0 )?v0 )):named a117 ))
(assert (! (forall ((?v0 A_b_a_fun_fun_tree$ ))(= (fun_app$ai (map_tree$b id$e )?v0 )?v0 )):named a118 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(= (fun_app$aj (map_tree$c id$b )?v0 )?v0 )):named a119 ))
(assert (! (forall ((?v0 B_tree$ ))(= (fun_app$ak (map_tree$d id$c )?v0 )?v0 )):named a120 ))
(assert (! (forall ((?v0 B_a_fun_tree$ ))(= (fun_app$al (map_tree$e id$ )?v0 )?v0 )):named a121 ))
(assert (! (forall ((?v0 A_tree$ ))(= (fun_app$am (map_tree$f id$a )?v0 )?v0 )):named a122 ))
(assert (! (= (map_tree$ id$f )id$z ):named a123 ))
(assert (! (= (map_tree$a id$d )id$aa ):named a124 ))
(assert (! (= (map_tree$b id$e )id$ab ):named a125 ))
(assert (! (= (map_tree$c id$b )id$ac ):named a126 ))
(assert (! (= (map_tree$d id$c )id$ad ):named a127 ))
(assert (! (= (map_tree$e id$ )id$ae ):named a128 ))
(assert (! (= (map_tree$f id$a )id$af ):named a129 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 B_a_fun$ )(?v2 B$ ))(! (= (fun_app$d (fun_app$a (comp$d ?v0 )?v1 )?v2 )(fun_app$p ?v0 (fun_app$d ?v1 ?v2 ))):pattern ((fun_app$d (fun_app$a (comp$d ?v0 )?v1 )?v2 )))):named a130 ))
(check-sat )
;(get-unsat-core )
