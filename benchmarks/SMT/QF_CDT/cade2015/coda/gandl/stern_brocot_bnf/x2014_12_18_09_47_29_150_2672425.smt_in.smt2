;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort A_set$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort B_c_fun$ 0 )
(declare-sort C_a_fun$ 0 )
(declare-sort C_b_fun$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort B_a_fun_set$ 0 )
(declare-sort C_a_fun_set$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort B_stream_set$ 0 )
(declare-sort C_stream_set$ 0 )
(declare-sort B_a_fun_a_fun$ 0 )
(declare-sort C_a_fun_a_fun$ 0 )
(declare-sort C_b_a_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_set$ 0 )
(declare-sort C_b_a_fun_fun_set$ 0 )
(declare-sort B_a_fun_stream_set$ 0 )
(declare-sort C_a_fun_stream_set$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_a_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_fun$ 0 )
(declare-sort B_c_fun_b_c_fun_fun$ 0 )
(declare-sort C_a_fun_a_fun_a_fun$ 0 )
(declare-sort C_a_fun_c_a_fun_fun$ 0 )
(declare-sort C_b_fun_c_b_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_stream_set$ 0 )
(declare-sort C_b_a_fun_fun_stream_set$ 0 )
(declare-sort C_a_fun_c_b_a_fun_fun_fun$ 0 )
(declare-sort C_a_fun_stream_stream_set$ 0 )
(declare-sort C_b_a_fun_fun_b_a_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_c_a_fun_fun$ 0 )
(declare-sort C_a_fun_tree_c_a_fun_tree_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_c_a_fun_c_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun$ 0 )
(declare-sort B_b_fun_b_b_fun_b_b_fun_fun_fun$ 0 )
(declare-sort B_b_fun_c_b_fun_c_b_fun_fun_fun$ 0 )
(declare-sort C_a_fun_a_fun_c_a_fun_a_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_fun_fun_c_a_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_c_b_a_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_stream_stream_set$ 0 )
(declare-sort C_c_fun_b_c_fun_b_c_fun_fun_fun$ 0 )
(declare-sort C_c_fun_c_c_fun_c_c_fun_fun_fun$ 0 )
(declare-sort C_a_fun_stream_c_a_fun_stream_fun$ 0 )
(declare-sort C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_tree_c_b_a_fun_fun_tree_fun$ 0 )
(declare-sort A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_a_fun_b_a_fun_a_fun_a_fun_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ 0 )
(declare-sort C_a_fun_a_fun_a_fun_c_a_fun_a_fun_a_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun$ 0 )
(declare-sort C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_stream_c_b_a_fun_fun_stream_fun$ 0 )
(declare-sort B_a_fun_b_a_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ 0 )
(declare-sort C_a_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_b_a_fun_fun_c_b_a_fun_fun_b_a_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_fun$ 0 )
(declare-sort B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_fun_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_c_a_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ 0 )
(declare-sort C_a_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_c_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_fun$ 0 )
(declare-sort C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))(B_a_fun_stream$ (sCons$a (select$ B_a_fun$ )(selecta$ B_a_fun_stream$ )))(B_stream$ (sCons$b (shd$a B$ )(stl$a B_stream$ )))(C_b_a_fun_fun_stream$ (sCons$c (selectb$ C_b_a_fun_fun$ )(selectc$ C_b_a_fun_fun_stream$ )))(C_stream$ (sCons$d (shd$b C$ )(stl$b C_stream$ )))(C_a_fun_stream$ (sCons$e (selectd$ C_a_fun$ )(selecte$ C_a_fun_stream$ )))(C_b_a_fun_fun_b_a_fun_fun_stream$ (sCons$f (selectf$ C_b_a_fun_fun_b_a_fun_fun$ )(selectg$ C_b_a_fun_fun_b_a_fun_fun_stream$ )))(C_a_fun_c_b_a_fun_fun_fun_stream$ (sCons$g (selecth$ C_a_fun_c_b_a_fun_fun_fun$ )(selecti$ C_a_fun_c_b_a_fun_fun_fun_stream$ )))(C_a_fun_c_a_fun_fun_stream$ (sCons$h (selectj$ C_a_fun_c_a_fun_fun$ )(selectk$ C_a_fun_c_a_fun_fun_stream$ )))(C_a_fun_a_fun_stream$ (sCons$i (selectl$ C_a_fun_a_fun$ )(selectm$ C_a_fun_a_fun_stream$ )))(B_a_fun_a_fun_stream$ (sCons$j (selectn$ B_a_fun_a_fun$ )(selecto$ B_a_fun_a_fun_stream$ )))(C_b_a_fun_fun_c_a_fun_fun_stream$ (sCons$k (selectp$ C_b_a_fun_fun_c_a_fun_fun$ )(selectq$ C_b_a_fun_fun_c_a_fun_fun_stream$ )))(C_b_a_fun_fun_c_b_a_fun_fun_fun_stream$ (sCons$l (selectr$ C_b_a_fun_fun_c_b_a_fun_fun_fun$ )(selects$ C_b_a_fun_fun_c_b_a_fun_fun_fun_stream$ )))(C_c_fun_stream$ (sCons$m (selectt$ C_c_fun$ )(selectu$ C_c_fun_stream$ )))(C_b_fun_stream$ (sCons$n (selectv$ C_b_fun$ )(selectw$ C_b_fun_stream$ )))(B_c_fun_stream$ (sCons$o (selectx$ B_c_fun$ )(selecty$ B_c_fun_stream$ )))(C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_stream$ (sCons$p (selectz$ C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun$ )(selecua$ C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_stream$ )))(C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_stream$ (sCons$q (selecub$ C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun$ )(selecuc$ C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_stream$ )))(C_a_fun_c_a_fun_fun_c_a_fun_fun_stream$ (sCons$r (selecud$ C_a_fun_c_a_fun_fun_c_a_fun_fun$ )(selecue$ C_a_fun_c_a_fun_fun_c_a_fun_fun_stream$ )))(C_a_fun_a_fun_a_fun_stream$ (sCons$s (selecuf$ C_a_fun_a_fun_a_fun$ )(selecug$ C_a_fun_a_fun_a_fun_stream$ )))(B_a_fun_a_fun_a_fun_stream$ (sCons$t (selecuh$ B_a_fun_a_fun_a_fun$ )(selecui$ B_a_fun_a_fun_a_fun_stream$ )))(B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ (sCons$u (selecuj$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ )(selecuk$ B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ )))(B_a_fun_b_a_fun_fun_stream$ (sCons$v (selecul$ B_a_fun_b_a_fun_fun$ )(selecum$ B_a_fun_b_a_fun_fun_stream$ )))(B_b_fun_stream$ (sCons$w (selecun$ B_b_fun$ )(selecuo$ B_b_fun_stream$ )))(A_a_fun_stream$ (sCons$x (selecup$ A_a_fun$ )(selecuq$ A_a_fun_stream$ )))(C_a_fun_stream_stream$ (sCons$y (shd$c C_a_fun_stream$ )(stl$c C_a_fun_stream_stream$ )))(C_b_a_fun_fun_stream_stream$ (sCons$z (shd$d C_b_a_fun_fun_stream$ )(stl$d C_b_a_fun_fun_stream_stream$ )))(B_a_fun_tree$ (node$ (selecur$ B_a_fun$ )(selecus$ B_a_fun_tree$ )(selecut$ B_a_fun_tree$ )))(C_tree$ (node$a (root$ C$ )(left$ C_tree$ )(right$ C_tree$ )))(B_tree$ (node$b (root$a B$ )(left$a B_tree$ )(right$a B_tree$ )))(A_tree$ (node$c (root$b A$ )(left$b A_tree$ )(right$b A_tree$ )))(C_b_a_fun_fun_tree$ (node$d (selecuu$ C_b_a_fun_fun$ )(selecuv$ C_b_a_fun_fun_tree$ )(selecuw$ C_b_a_fun_fun_tree$ )))(C_a_fun_tree$ (node$e (selecux$ C_a_fun$ )(selecuy$ C_a_fun_tree$ )(selecuz$ C_a_fun_tree$ )))))
(declare-fun f$ ()C_a_fun$ )
(declare-fun x$ ()C_stream$ )
(declare-fun y$ ()B_stream$ )
(declare-fun id$ ()C_b_a_fun_fun_c_b_a_fun_fun_fun$ )
(declare-fun uu$ ()C_b_a_fun_fun$ )
(declare-fun id$a ()C_a_fun_c_a_fun_fun$ )
(declare-fun id$b ()C_b_a_fun_fun_b_a_fun_fun_c_b_a_fun_fun_b_a_fun_fun_fun$ )
(declare-fun id$c ()B_a_fun_b_a_fun_fun$ )
(declare-fun id$d ()C_a_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_fun$ )
(declare-fun id$e ()C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun$ )
(declare-fun id$f ()C_a_fun_a_fun_c_a_fun_a_fun_fun$ )
(declare-fun id$g ()A_a_fun$ )
(declare-fun id$h ()B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun id$i ()B_b_fun$ )
(declare-fun id$j ()C_c_fun$ )
(declare-fun id$k ()C_b_a_fun_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_fun$ )
(declare-fun id$l ()C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ )
(declare-fun id$m ()C_c_fun_c_c_fun_fun$ )
(declare-fun id$n ()C_b_fun_c_b_fun_fun$ )
(declare-fun id$o ()B_c_fun_b_c_fun_fun$ )
(declare-fun id$p ()C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_c_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_fun$ )
(declare-fun id$q ()C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_fun$ )
(declare-fun id$r ()C_a_fun_c_a_fun_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_c_a_fun_fun_fun$ )
(declare-fun id$s ()C_a_fun_a_fun_a_fun_c_a_fun_a_fun_a_fun_fun$ )
(declare-fun id$t ()B_a_fun_a_fun_a_fun_b_a_fun_a_fun_a_fun_fun$ )
(declare-fun id$u ()B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ )
(declare-fun id$v ()B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun id$w ()B_b_fun_b_b_fun_fun$ )
(declare-fun id$x ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$y ()C_a_fun_stream_c_a_fun_stream_fun$ )
(declare-fun id$z ()C_b_a_fun_fun_stream_c_b_a_fun_fun_stream_fun$ )
(declare-fun uua$ (B_a_fun$ )C_b_a_fun_fun_b_a_fun_fun$ )
(declare-fun uub$ (C_b_a_fun_fun$ )C_a_fun_c_b_a_fun_fun_fun$ )
(declare-fun uuc$ (C_a_fun$ )C_a_fun_c_a_fun_fun$ )
(declare-fun uud$ (A$ )C_a_fun_a_fun$ )
(declare-fun uue$ (A$ )B_a_fun_a_fun$ )
(declare-fun uuf$ (A$ )B_a_fun$ )
(declare-fun uug$ (B_a_fun$ )C_b_a_fun_fun$ )
(declare-fun uuh$ (A$ )C_a_fun$ )
(declare-fun uui$ (C_b_a_fun_fun$ )C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun$ )
(declare-fun uuj$ (C_a_fun$ )C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun$ )
(declare-fun uuk$ (C_a_fun$ )C_a_fun_c_a_fun_fun_c_a_fun_fun$ )
(declare-fun uul$ (C_a_fun$ )C_a_fun_a_fun_a_fun$ )
(declare-fun uum$ (B_a_fun$ )B_a_fun_a_fun_a_fun$ )
(declare-fun uun$ (B$ )B_a_fun_a_fun$ )
(declare-fun uuo$ (C$ )C_b_a_fun_fun_b_a_fun_fun$ )
(declare-fun uup$ (C$ )C_a_fun_a_fun$ )
(declare-fun uuq$ ()C_a_fun_c_a_fun_fun$ )
(declare-fun uur$ ()B_a_fun_b_a_fun_fun$ )
(declare-fun uus$ ()A_a_fun$ )
(declare-fun uut$ ()B_b_fun$ )
(declare-fun uuu$ ()C_b_a_fun_fun_c_b_a_fun_fun_fun$ )
(declare-fun uuv$ ()C_c_fun$ )
(declare-fun comp$ (A_a_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun id$aa ()C_b_a_fun_fun_tree_c_b_a_fun_fun_tree_fun$ )
(declare-fun id$ab ()C_a_fun_tree_c_a_fun_tree_fun$ )
(declare-fun smap$ (C_a_fun_c_a_fun_fun$ C_a_fun_stream$ )C_a_fun_stream$ )
(declare-fun comp$a (A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun comp$b (B_a_fun_b_a_fun_fun$ )C_b_a_fun_fun_c_b_a_fun_fun_fun$ )
(declare-fun comp$c (A_a_fun$ )C_a_fun_c_a_fun_fun$ )
(declare-fun smap$a (C_b_a_fun_fun_c_a_fun_fun$ C_b_a_fun_fun_stream$ )C_a_fun_stream$ )
(declare-fun smap$b (C_a_fun_c_b_a_fun_fun_fun$ C_a_fun_stream$ )C_b_a_fun_fun_stream$ )
(declare-fun smap$c (C_b_a_fun_fun_c_b_a_fun_fun_fun$ C_b_a_fun_fun_stream$ )C_b_a_fun_fun_stream$ )
(declare-fun smap$d (C_c_fun$ C_stream$ )C_stream$ )
(declare-fun smap$e (C_b_fun$ C_stream$ )B_stream$ )
(declare-fun smap$f (C_a_fun$ C_stream$ )A_stream$ )
(declare-fun smap$g (B_c_fun$ B_stream$ )C_stream$ )
(declare-fun smap$h (B_b_fun$ B_stream$ )B_stream$ )
(declare-fun smap$i (B_a_fun$ B_stream$ )A_stream$ )
(declare-fun smap$j (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun_stream$ )B_a_fun_a_fun_stream$ )
(declare-fun smap$k (B_a_fun_b_a_fun_fun$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun smap$l (A_a_fun$ A_stream$ )A_stream$ )
(declare-fun st_ap$ (B_a_fun_stream$ B_stream$ )A_stream$ )
(declare-fun member$ (C_a_fun_stream$ C_a_fun_stream_set$ )Bool )
(declare-fun st_ap$a (C_b_a_fun_fun_stream$ C_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$b (C_a_fun_stream$ C_stream$ )A_stream$ )
(declare-fun st_ap$c (C_b_a_fun_fun_b_a_fun_fun_stream$ C_b_a_fun_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$d (C_a_fun_c_b_a_fun_fun_fun_stream$ C_a_fun_stream$ )C_b_a_fun_fun_stream$ )
(declare-fun st_ap$e (C_a_fun_c_a_fun_fun_stream$ C_a_fun_stream$ )C_a_fun_stream$ )
(declare-fun st_ap$f (C_a_fun_a_fun_stream$ C_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$g (B_a_fun_a_fun_stream$ B_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$h (C_b_a_fun_fun_c_a_fun_fun_stream$ C_b_a_fun_fun_stream$ )C_a_fun_stream$ )
(declare-fun st_ap$i (C_b_a_fun_fun_c_b_a_fun_fun_fun_stream$ C_b_a_fun_fun_stream$ )C_b_a_fun_fun_stream$ )
(declare-fun st_ap$j (C_c_fun_stream$ C_stream$ )C_stream$ )
(declare-fun st_ap$k (C_b_fun_stream$ C_stream$ )B_stream$ )
(declare-fun st_ap$l (B_c_fun_stream$ B_stream$ )C_stream$ )
(declare-fun st_ap$m (C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_stream$ C_b_a_fun_fun_b_a_fun_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$n (C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_stream$ C_a_fun_c_b_a_fun_fun_fun_stream$ )C_b_a_fun_fun_stream$ )
(declare-fun st_ap$o (C_a_fun_c_a_fun_fun_c_a_fun_fun_stream$ C_a_fun_c_a_fun_fun_stream$ )C_a_fun_stream$ )
(declare-fun st_ap$p (C_a_fun_a_fun_a_fun_stream$ C_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$q (B_a_fun_a_fun_a_fun_stream$ B_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$r (B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ B_a_fun_a_fun_stream$ )B_a_fun_a_fun_stream$ )
(declare-fun st_ap$s (B_a_fun_b_a_fun_fun_stream$ B_a_fun_stream$ )B_a_fun_stream$ )
(declare-fun st_ap$t (B_b_fun_stream$ B_stream$ )B_stream$ )
(declare-fun st_ap$u (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun fun_app$ (C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun$ C_b_a_fun_fun_b_a_fun_fun$ )B_a_fun$ )
(declare-fun map_fun$ (C_c_fun$ )A_a_fun_c_a_fun_c_a_fun_fun_fun$ )
(declare-fun member$a (C_a_fun_stream_stream$ C_a_fun_stream_stream_set$ )Bool )
(declare-fun member$b (C_b_a_fun_fun_stream$ C_b_a_fun_fun_stream_set$ )Bool )
(declare-fun member$c (C_b_a_fun_fun_stream_stream$ C_b_a_fun_fun_stream_stream_set$ )Bool )
(declare-fun member$d (B_a_fun_a_fun$ B_a_fun_a_fun_set$ )Bool )
(declare-fun member$e (B_a_fun_a_fun_stream$ B_a_fun_a_fun_stream_set$ )Bool )
(declare-fun member$f (B_a_fun$ B_a_fun_set$ )Bool )
(declare-fun member$g (B_a_fun_stream$ B_a_fun_stream_set$ )Bool )
(declare-fun member$h (C$ C_set$ )Bool )
(declare-fun member$i (C_stream$ C_stream_set$ )Bool )
(declare-fun member$j (B$ B_set$ )Bool )
(declare-fun member$k (B_stream$ B_stream_set$ )Bool )
(declare-fun member$l (A$ A_set$ )Bool )
(declare-fun member$m (A_stream$ A_stream_set$ )Bool )
(declare-fun member$n (C_b_a_fun_fun$ C_b_a_fun_fun_set$ )Bool )
(declare-fun member$o (C_a_fun$ C_a_fun_set$ )Bool )
(declare-fun streams$ (C_a_fun_stream_set$ )C_a_fun_stream_stream_set$ )
(declare-fun fun_app$a (C_b_a_fun_fun_b_a_fun_fun$ C_b_a_fun_fun$ )B_a_fun$ )
(declare-fun fun_app$b (C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun$ C_a_fun_c_b_a_fun_fun_fun$ )C_b_a_fun_fun$ )
(declare-fun fun_app$c (C_a_fun_c_b_a_fun_fun_fun$ C_a_fun$ )C_b_a_fun_fun$ )
(declare-fun fun_app$d (C_a_fun_c_a_fun_fun_c_a_fun_fun$ C_a_fun_c_a_fun_fun$ )C_a_fun$ )
(declare-fun fun_app$e (C_a_fun_c_a_fun_fun$ C_a_fun$ )C_a_fun$ )
(declare-fun fun_app$f (C_a_fun_a_fun_a_fun$ C_a_fun_a_fun$ )A$ )
(declare-fun fun_app$g (C_a_fun_a_fun$ C_a_fun$ )A$ )
(declare-fun fun_app$h (B_a_fun_a_fun_a_fun$ B_a_fun_a_fun$ )A$ )
(declare-fun fun_app$i (B_a_fun_a_fun$ B_a_fun$ )A$ )
(declare-fun fun_app$j (C_b_a_fun_fun$ C$ )B_a_fun$ )
(declare-fun fun_app$k (C_a_fun$ C$ )A$ )
(declare-fun fun_app$l (B_a_fun$ B$ )A$ )
(declare-fun fun_app$m (C_b_a_fun_fun_c_b_a_fun_fun_fun$ C_b_a_fun_fun$ )C_b_a_fun_fun$ )
(declare-fun fun_app$n (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun$ )
(declare-fun fun_app$o (C_c_fun$ C$ )C$ )
(declare-fun fun_app$p (B_b_fun$ B$ )B$ )
(declare-fun fun_app$q (A_a_fun$ A$ )A$ )
(declare-fun fun_app$r (C_b_a_fun_fun_c_a_fun_fun$ C_b_a_fun_fun$ )C_a_fun$ )
(declare-fun fun_app$s (C_b_fun$ C$ )B$ )
(declare-fun fun_app$t (B_c_fun$ B$ )C$ )
(declare-fun fun_app$u (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ )B_a_fun_a_fun$ )
(declare-fun fun_app$v (A_a_fun_c_a_fun_c_a_fun_fun_fun$ A_a_fun$ )C_a_fun_c_a_fun_fun$ )
(declare-fun fun_app$w (B_a_fun_b_a_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )C_b_a_fun_fun_c_b_a_fun_fun_fun$ )
(declare-fun fun_app$x (C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun_fun$ C_a_fun_c_a_fun_fun$ )C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun$ )
(declare-fun fun_app$y (C_a_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_fun_fun$ C_a_fun_c_a_fun_fun$ )C_b_a_fun_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_fun$ )
(declare-fun fun_app$z (C_b_a_fun_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_fun_fun$ C_b_a_fun_fun_c_b_a_fun_fun_fun$ )C_a_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$a (C_c_fun$ )B_a_fun_b_a_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ )
(declare-fun map_fun$b (C_a_fun_c_a_fun_fun$ )C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun_fun$ )
(declare-fun map_fun$c (C_b_a_fun_fun_c_b_a_fun_fun_fun$ )C_a_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_fun_fun$ )
(declare-fun map_fun$d (C_a_fun_c_a_fun_fun$ )C_b_a_fun_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_fun_fun$ )
(declare-fun map_fun$e (C_b_a_fun_fun_c_b_a_fun_fun_fun$ )C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun_fun$ )
(declare-fun map_fun$f (C_c_fun$ )C_c_fun_c_c_fun_c_c_fun_fun_fun$ )
(declare-fun map_fun$g (C_c_fun$ )B_b_fun_c_b_fun_c_b_fun_fun_fun$ )
(declare-fun map_fun$h (B_b_fun$ )C_c_fun_b_c_fun_b_c_fun_fun_fun$ )
(declare-fun map_fun$i (B_b_fun$ )B_b_fun_b_b_fun_b_b_fun_fun_fun$ )
(declare-fun map_fun$j (B_a_fun_b_a_fun_fun$ )A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ )
(declare-fun map_fun$k (B_b_fun$ )A_a_fun_b_a_fun_b_a_fun_fun_fun$ )
(declare-fun map_tree$ (B_a_fun_b_a_fun_fun$ B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun siterate$ (C_b_a_fun_fun_c_b_a_fun_fun_fun$ C_b_a_fun_fun$ )C_b_a_fun_fun_stream$ )
(declare-fun streams$a (C_b_a_fun_fun_stream_set$ )C_b_a_fun_fun_stream_stream_set$ )
(declare-fun streams$b (B_a_fun_a_fun_set$ )B_a_fun_a_fun_stream_set$ )
(declare-fun streams$c (B_a_fun_set$ )B_a_fun_stream_set$ )
(declare-fun streams$d (C_set$ )C_stream_set$ )
(declare-fun streams$e (B_set$ )B_stream_set$ )
(declare-fun streams$f (A_set$ )A_stream_set$ )
(declare-fun streams$g (C_b_a_fun_fun_set$ )C_b_a_fun_fun_stream_set$ )
(declare-fun streams$h (C_a_fun_set$ )C_a_fun_stream_set$ )
(declare-fun fun_app$aa (C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun_fun$ C_b_a_fun_fun_c_b_a_fun_fun_fun$ )C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ )
(declare-fun fun_app$ab (C_c_fun_c_c_fun_c_c_fun_fun_fun$ C_c_fun$ )C_c_fun_c_c_fun_fun$ )
(declare-fun fun_app$ac (B_b_fun_c_b_fun_c_b_fun_fun_fun$ B_b_fun$ )C_b_fun_c_b_fun_fun$ )
(declare-fun fun_app$ad (C_c_fun_b_c_fun_b_c_fun_fun_fun$ C_c_fun$ )B_c_fun_b_c_fun_fun$ )
(declare-fun fun_app$ae (B_b_fun_b_b_fun_b_b_fun_fun_fun$ B_b_fun$ )B_b_fun_b_b_fun_fun$ )
(declare-fun fun_app$af (A_a_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ A_a_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun$ )
(declare-fun fun_app$ag (A_a_fun_b_a_fun_b_a_fun_fun_fun$ A_a_fun$ )B_a_fun_b_a_fun_fun$ )
(declare-fun fun_app$ah (C_b_a_fun_fun_tree_c_b_a_fun_fun_tree_fun$ C_b_a_fun_fun_tree$ )C_b_a_fun_fun_tree$ )
(declare-fun fun_app$ai (C_a_fun_tree_c_a_fun_tree_fun$ C_a_fun_tree$ )C_a_fun_tree$ )
(declare-fun map_tree$a (C_c_fun$ C_tree$ )C_tree$ )
(declare-fun map_tree$b (B_b_fun$ B_tree$ )B_tree$ )
(declare-fun map_tree$c (A_a_fun$ A_tree$ )A_tree$ )
(declare-fun map_tree$d (C_b_a_fun_fun_c_b_a_fun_fun_fun$ )C_b_a_fun_fun_tree_c_b_a_fun_fun_tree_fun$ )
(declare-fun map_tree$e (C_a_fun_c_a_fun_fun$ )C_a_fun_tree_c_a_fun_tree_fun$ )
(declare-fun siterate$a (C_a_fun_c_a_fun_fun$ C_a_fun$ )C_a_fun_stream$ )
(declare-fun siterate$b (C_b_a_fun_fun_b_a_fun_fun_c_b_a_fun_fun_b_a_fun_fun_fun$ C_b_a_fun_fun_b_a_fun_fun$ )C_b_a_fun_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$c (B_a_fun_b_a_fun_fun$ B_a_fun$ )B_a_fun_stream$ )
(declare-fun siterate$d (C_a_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_fun$ C_a_fun_c_b_a_fun_fun_fun$ )C_a_fun_c_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$e (C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun$ C_a_fun_c_a_fun_fun$ )C_a_fun_c_a_fun_fun_stream$ )
(declare-fun siterate$f (C_a_fun_a_fun_c_a_fun_a_fun_fun$ C_a_fun_a_fun$ )C_a_fun_a_fun_stream$ )
(declare-fun siterate$g (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$h (B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ )B_a_fun_a_fun_stream$ )
(declare-fun siterate$i (B_b_fun$ B$ )B_stream$ )
(declare-fun siterate$j (C_c_fun$ C$ )C_stream$ )
(declare-fun siterate$k (C_b_a_fun_fun_c_a_fun_fun_c_b_a_fun_fun_c_a_fun_fun_fun$ C_b_a_fun_fun_c_a_fun_fun$ )C_b_a_fun_fun_c_a_fun_fun_stream$ )
(declare-fun siterate$l (C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ C_b_a_fun_fun_c_b_a_fun_fun_fun$ )C_b_a_fun_fun_c_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$m (C_c_fun_c_c_fun_fun$ C_c_fun$ )C_c_fun_stream$ )
(declare-fun siterate$n (C_b_fun_c_b_fun_fun$ C_b_fun$ )C_b_fun_stream$ )
(declare-fun siterate$o (B_c_fun_b_c_fun_fun$ B_c_fun$ )B_c_fun_stream$ )
(declare-fun siterate$p (C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_c_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_fun$ C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun$ )C_b_a_fun_fun_b_a_fun_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$q (C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_c_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_fun$ C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun$ )C_a_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_fun_stream$ )
(declare-fun siterate$r (C_a_fun_c_a_fun_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_c_a_fun_fun_fun$ C_a_fun_c_a_fun_fun_c_a_fun_fun$ )C_a_fun_c_a_fun_fun_c_a_fun_fun_stream$ )
(declare-fun siterate$s (C_a_fun_a_fun_a_fun_c_a_fun_a_fun_a_fun_fun$ C_a_fun_a_fun_a_fun$ )C_a_fun_a_fun_a_fun_stream$ )
(declare-fun siterate$t (B_a_fun_a_fun_a_fun_b_a_fun_a_fun_a_fun_fun$ B_a_fun_a_fun_a_fun$ )B_a_fun_a_fun_a_fun_stream$ )
(declare-fun siterate$u (B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ )B_a_fun_a_fun_b_a_fun_a_fun_fun_stream$ )
(declare-fun siterate$v (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )B_a_fun_b_a_fun_fun_stream$ )
(declare-fun siterate$w (B_b_fun_b_b_fun_fun$ B_b_fun$ )B_b_fun_stream$ )
(declare-fun siterate$x (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$y (C_a_fun_stream_c_a_fun_stream_fun$ C_a_fun_stream$ )C_a_fun_stream_stream$ )
(declare-fun siterate$z (C_b_a_fun_fun_stream_c_b_a_fun_fun_stream_fun$ C_b_a_fun_fun_stream$ )C_b_a_fun_fun_stream_stream$ )
(declare-fun iso_tuple_update_accessor_eq_assist$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ B_a_fun_a_fun$ B_a_fun_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$a (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun_b_a_fun_fun$ B_a_fun$ B_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$b (C_c_fun_c_c_fun_fun$ C_c_fun$ C$ C_c_fun$ C$ C$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$c (B_b_fun_b_b_fun_fun$ B_b_fun$ B$ B_b_fun$ B$ B$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$d (A_a_fun_a_a_fun_fun$ A_a_fun$ A$ A_a_fun$ A$ A$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$e (C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ C_b_a_fun_fun_c_b_a_fun_fun_fun$ C_b_a_fun_fun$ C_b_a_fun_fun_c_b_a_fun_fun_fun$ C_b_a_fun_fun$ C_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$f (C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun$ C_a_fun_c_a_fun_fun$ C_a_fun$ C_a_fun_c_a_fun_fun$ C_a_fun$ C_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$ (B_a_fun_a_fun_b_a_fun_a_fun_fun_b_a_fun_a_fun_b_a_fun_a_fun_fun_fun$ B_a_fun_a_fun_b_a_fun_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$a (B_a_fun_b_a_fun_fun_b_a_fun_b_a_fun_fun_fun$ B_a_fun_b_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$b (C_c_fun_c_c_fun_fun$ C_c_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$c (B_b_fun_b_b_fun_fun$ B_b_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$d (A_a_fun_a_a_fun_fun$ A_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$e (C_b_a_fun_fun_c_b_a_fun_fun_fun_c_b_a_fun_fun_c_b_a_fun_fun_fun_fun$ C_b_a_fun_fun_c_b_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$f (C_a_fun_c_a_fun_fun_c_a_fun_c_a_fun_fun_fun$ C_a_fun_c_a_fun_fun$ )Bool )
(assert (! (forall ((?v0 C_b_a_fun_fun$ )(?v1 C_b_a_fun_fun_b_a_fun_fun$ ))(! (= (fun_app$ (uui$ ?v0 )?v1 )(fun_app$a ?v1 ?v0 )):pattern ((fun_app$ (uui$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_a_fun_c_b_a_fun_fun_fun$ ))(! (= (fun_app$b (uuj$ ?v0 )?v1 )(fun_app$c ?v1 ?v0 )):pattern ((fun_app$b (uuj$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_a_fun_c_a_fun_fun$ ))(! (= (fun_app$d (uuk$ ?v0 )?v1 )(fun_app$e ?v1 ?v0 )):pattern ((fun_app$d (uuk$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_a_fun_a_fun$ ))(! (= (fun_app$f (uul$ ?v0 )?v1 )(fun_app$g ?v1 ?v0 )):pattern ((fun_app$f (uul$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_a_fun$ ))(! (= (fun_app$h (uum$ ?v0 )?v1 )(fun_app$i ?v1 ?v0 )):pattern ((fun_app$h (uum$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 C$ )(?v1 C_b_a_fun_fun$ ))(! (= (fun_app$a (uuo$ ?v0 )?v1 )(fun_app$j ?v1 ?v0 )):pattern ((fun_app$a (uuo$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 C$ )(?v1 C_a_fun$ ))(! (= (fun_app$g (uup$ ?v0 )?v1 )(fun_app$k ?v1 ?v0 )):pattern ((fun_app$g (uup$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 B$ )(?v1 B_a_fun$ ))(! (= (fun_app$i (uun$ ?v0 )?v1 )(fun_app$l ?v1 ?v0 )):pattern ((fun_app$i (uun$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 C$ )(?v1 B$ ))(! (= (fun_app$l (fun_app$j uu$ ?v0 )?v1 )(fun_app$k f$ ?v0 )):pattern ((fun_app$l (fun_app$j uu$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ )(?v1 C_a_fun$ ))(! (= (fun_app$c (uub$ ?v0 )?v1 )?v0 ):pattern ((fun_app$c (uub$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_a_fun$ ))(! (= (fun_app$e (uuc$ ?v0 )?v1 )?v0 ):pattern ((fun_app$e (uuc$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 C_b_a_fun_fun$ ))(! (= (fun_app$a (uua$ ?v0 )?v1 )?v0 ):pattern ((fun_app$a (uua$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 C$ ))(! (= (fun_app$j (uug$ ?v0 )?v1 )?v0 ):pattern ((fun_app$j (uug$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 C_a_fun$ ))(! (= (fun_app$g (uud$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (uud$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_fun$ ))(! (= (fun_app$i (uue$ ?v0 )?v1 )?v0 ):pattern ((fun_app$i (uue$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 C$ ))(! (= (fun_app$k (uuh$ ?v0 )?v1 )?v0 ):pattern ((fun_app$k (uuh$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 A$ )(?v1 B$ ))(! (= (fun_app$l (uuf$ ?v0 )?v1 )?v0 ):pattern ((fun_app$l (uuf$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ ))(! (= (fun_app$m uuu$ ?v0 )?v0 ):pattern ((fun_app$m uuu$ ?v0 )))):named a17 ))
(assert (! (forall ((?v0 C_a_fun$ ))(! (= (fun_app$e uuq$ ?v0 )?v0 ):pattern ((fun_app$e uuq$ ?v0 )))):named a18 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$n uur$ ?v0 )?v0 ):pattern ((fun_app$n uur$ ?v0 )))):named a19 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$o uuv$ ?v0 )?v0 ):pattern ((fun_app$o uuv$ ?v0 )))):named a20 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$p uut$ ?v0 )?v0 ):pattern ((fun_app$p uut$ ?v0 )))):named a21 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$q uus$ ?v0 )?v0 ):pattern ((fun_app$q uus$ ?v0 )))):named a22 ))
(assert (! (not (= (st_ap$ (st_ap$a (siterate$ id$ uu$ )x$ )y$ )(st_ap$b (siterate$a id$a f$ )x$ ))):named a23 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 C_b_a_fun_fun_stream$ ))(= (st_ap$c (siterate$b id$b (uua$ ?v0 ))?v1 )(siterate$c id$c ?v0 ))):named a24 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ )(?v1 C_a_fun_stream$ ))(= (st_ap$d (siterate$d id$d (uub$ ?v0 ))?v1 )(siterate$ id$ ?v0 ))):named a25 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_a_fun_stream$ ))(= (st_ap$e (siterate$e id$e (uuc$ ?v0 ))?v1 )(siterate$a id$a ?v0 ))):named a26 ))
(assert (! (forall ((?v0 A$ )(?v1 C_a_fun_stream$ ))(= (st_ap$f (siterate$f id$f (uud$ ?v0 ))?v1 )(siterate$g id$g ?v0 ))):named a27 ))
(assert (! (forall ((?v0 A$ )(?v1 B_a_fun_stream$ ))(= (st_ap$g (siterate$h id$h (uue$ ?v0 ))?v1 )(siterate$g id$g ?v0 ))):named a28 ))
(assert (! (forall ((?v0 A$ )(?v1 B_stream$ ))(= (st_ap$ (siterate$c id$c (uuf$ ?v0 ))?v1 )(siterate$g id$g ?v0 ))):named a29 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 C_stream$ ))(= (st_ap$a (siterate$ id$ (uug$ ?v0 ))?v1 )(siterate$c id$c ?v0 ))):named a30 ))
(assert (! (forall ((?v0 A$ )(?v1 C_stream$ ))(= (st_ap$b (siterate$a id$a (uuh$ ?v0 ))?v1 )(siterate$g id$g ?v0 ))):named a31 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (st_ap$ (siterate$c id$c ?v0 )(siterate$i id$i ?v1 ))(siterate$g id$g (fun_app$l ?v0 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C$ ))(= (st_ap$b (siterate$a id$a ?v0 )(siterate$j id$j ?v1 ))(siterate$g id$g (fun_app$k ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ )(?v1 C$ ))(= (st_ap$a (siterate$ id$ ?v0 )(siterate$j id$j ?v1 ))(siterate$c id$c (fun_app$j ?v0 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 C_a_fun_c_a_fun_fun$ )(?v1 C_a_fun$ ))(= (st_ap$e (siterate$e id$e ?v0 )(siterate$a id$a ?v1 ))(siterate$a id$a (fun_app$e ?v0 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_c_a_fun_fun$ )(?v1 C_b_a_fun_fun$ ))(= (st_ap$h (siterate$k id$k ?v0 )(siterate$ id$ ?v1 ))(siterate$a id$a (fun_app$r ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 C_a_fun_c_b_a_fun_fun_fun$ )(?v1 C_a_fun$ ))(= (st_ap$d (siterate$d id$d ?v0 )(siterate$a id$a ?v1 ))(siterate$ id$ (fun_app$c ?v0 ?v1 )))):named a37 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_c_b_a_fun_fun_fun$ )(?v1 C_b_a_fun_fun$ ))(= (st_ap$i (siterate$l id$l ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$m ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(= (st_ap$j (siterate$m id$m ?v0 )(siterate$j id$j ?v1 ))(siterate$j id$j (fun_app$o ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 C_b_fun$ )(?v1 C$ ))(= (st_ap$k (siterate$n id$n ?v0 )(siterate$j id$j ?v1 ))(siterate$i id$i (fun_app$s ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 B_c_fun$ )(?v1 B$ ))(= (st_ap$l (siterate$o id$o ?v0 )(siterate$i id$i ?v1 ))(siterate$j id$j (fun_app$t ?v0 ?v1 )))):named a41 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_b_a_fun_fun_stream$ )(?v1 C_b_a_fun_fun$ ))(= (st_ap$c ?v0 (siterate$ id$ ?v1 ))(st_ap$m (siterate$p id$p (uui$ ?v1 ))?v0 ))):named a42 ))
(assert (! (forall ((?v0 C_a_fun_c_b_a_fun_fun_fun_stream$ )(?v1 C_a_fun$ ))(= (st_ap$d ?v0 (siterate$a id$a ?v1 ))(st_ap$n (siterate$q id$q (uuj$ ?v1 ))?v0 ))):named a43 ))
(assert (! (forall ((?v0 C_a_fun_c_a_fun_fun_stream$ )(?v1 C_a_fun$ ))(= (st_ap$e ?v0 (siterate$a id$a ?v1 ))(st_ap$o (siterate$r id$r (uuk$ ?v1 ))?v0 ))):named a44 ))
(assert (! (forall ((?v0 C_a_fun_a_fun_stream$ )(?v1 C_a_fun$ ))(= (st_ap$f ?v0 (siterate$a id$a ?v1 ))(st_ap$p (siterate$s id$s (uul$ ?v1 ))?v0 ))):named a45 ))
(assert (! (forall ((?v0 B_a_fun_a_fun_stream$ )(?v1 B_a_fun$ ))(= (st_ap$g ?v0 (siterate$c id$c ?v1 ))(st_ap$q (siterate$t id$t (uum$ ?v1 ))?v0 ))):named a46 ))
(assert (! (forall ((?v0 B_a_fun_stream$ )(?v1 B$ ))(= (st_ap$ ?v0 (siterate$i id$i ?v1 ))(st_ap$g (siterate$h id$h (uun$ ?v1 ))?v0 ))):named a47 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_stream$ )(?v1 C$ ))(= (st_ap$a ?v0 (siterate$j id$j ?v1 ))(st_ap$c (siterate$b id$b (uuo$ ?v1 ))?v0 ))):named a48 ))
(assert (! (forall ((?v0 C_a_fun_stream$ )(?v1 C$ ))(= (st_ap$b ?v0 (siterate$j id$j ?v1 ))(st_ap$f (siterate$f id$f (uup$ ?v1 ))?v0 ))):named a49 ))
(assert (! (forall ((?v0 C_a_fun_stream$ ))(= (st_ap$e (siterate$e id$e uuq$ )?v0 )?v0 )):named a50 ))
(assert (! (forall ((?v0 B_a_fun_a_fun_stream$ ))(= (st_ap$r (siterate$u id$u id$h )?v0 )?v0 )):named a51 ))
(assert (! (forall ((?v0 B_a_fun_stream$ ))(= (st_ap$s (siterate$v id$v id$c )?v0 )?v0 )):named a52 ))
(assert (! (forall ((?v0 C_stream$ ))(= (st_ap$j (siterate$m id$m id$j )?v0 )?v0 )):named a53 ))
(assert (! (forall ((?v0 B_stream$ ))(= (st_ap$t (siterate$w id$w id$i )?v0 )?v0 )):named a54 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$u (siterate$x id$x id$g )?v0 )?v0 )):named a55 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_stream$ ))(= (st_ap$i (siterate$l id$l id$ )?v0 )?v0 )):named a56 ))
(assert (! (forall ((?v0 C_a_fun_stream$ ))(= (st_ap$e (siterate$e id$e id$a )?v0 )?v0 )):named a57 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ ))(! (= (fun_app$u id$h ?v0 )?v0 ):pattern ((fun_app$u id$h ?v0 )))):named a58 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$n id$c ?v0 )?v0 ):pattern ((fun_app$n id$c ?v0 )))):named a59 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$o id$j ?v0 )?v0 ):pattern ((fun_app$o id$j ?v0 )))):named a60 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$p id$i ?v0 )?v0 ):pattern ((fun_app$p id$i ?v0 )))):named a61 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$q id$g ?v0 )?v0 ):pattern ((fun_app$q id$g ?v0 )))):named a62 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ ))(! (= (fun_app$m id$ ?v0 )?v0 ):pattern ((fun_app$m id$ ?v0 )))):named a63 ))
(assert (! (forall ((?v0 C_a_fun$ ))(! (= (fun_app$e id$a ?v0 )?v0 ):pattern ((fun_app$e id$a ?v0 )))):named a64 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ ))(! (= (fun_app$u id$h ?v0 )?v0 ):pattern ((fun_app$u id$h ?v0 )))):named a65 ))
(assert (! (forall ((?v0 B_a_fun$ ))(! (= (fun_app$n id$c ?v0 )?v0 ):pattern ((fun_app$n id$c ?v0 )))):named a66 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$o id$j ?v0 )?v0 ):pattern ((fun_app$o id$j ?v0 )))):named a67 ))
(assert (! (forall ((?v0 B$ ))(! (= (fun_app$p id$i ?v0 )?v0 ):pattern ((fun_app$p id$i ?v0 )))):named a68 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$q id$g ?v0 )?v0 ):pattern ((fun_app$q id$g ?v0 )))):named a69 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ ))(! (= (fun_app$m id$ ?v0 )?v0 ):pattern ((fun_app$m id$ ?v0 )))):named a70 ))
(assert (! (forall ((?v0 C_a_fun$ ))(! (= (fun_app$e id$a ?v0 )?v0 ):pattern ((fun_app$e id$a ?v0 )))):named a71 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun_a_fun_b_a_fun_a_fun_fun$ )(?v2 B_a_fun_a_fun$ ))(=> (= ?v0 (fun_app$u ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$ id$u id$h ?v2 ?v1 ?v0 ?v2 ))):named a72 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_b_a_fun_fun$ )(?v2 B_a_fun$ ))(=> (= ?v0 (fun_app$n ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$a id$v id$c ?v2 ?v1 ?v0 ?v2 ))):named a73 ))
(assert (! (forall ((?v0 C$ )(?v1 C_c_fun$ )(?v2 C$ ))(=> (= ?v0 (fun_app$o ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$b id$m id$j ?v2 ?v1 ?v0 ?v2 ))):named a74 ))
(assert (! (forall ((?v0 B$ )(?v1 B_b_fun$ )(?v2 B$ ))(=> (= ?v0 (fun_app$p ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$c id$w id$i ?v2 ?v1 ?v0 ?v2 ))):named a75 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ ))(=> (= ?v0 (fun_app$q ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$d id$x id$g ?v2 ?v1 ?v0 ?v2 ))):named a76 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ )(?v1 C_b_a_fun_fun_c_b_a_fun_fun_fun$ )(?v2 C_b_a_fun_fun$ ))(=> (= ?v0 (fun_app$m ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$e id$l id$ ?v2 ?v1 ?v0 ?v2 ))):named a77 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_a_fun_c_a_fun_fun$ )(?v2 C_a_fun$ ))(=> (= ?v0 (fun_app$e ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$f id$e id$a ?v2 ?v1 ?v0 ?v2 ))):named a78 ))
(assert (! (iso_tuple_update_accessor_cong_assist$ id$u id$h ):named a79 ))
(assert (! (iso_tuple_update_accessor_cong_assist$a id$v id$c ):named a80 ))
(assert (! (iso_tuple_update_accessor_cong_assist$b id$m id$j ):named a81 ))
(assert (! (iso_tuple_update_accessor_cong_assist$c id$w id$i ):named a82 ))
(assert (! (iso_tuple_update_accessor_cong_assist$d id$x id$g ):named a83 ))
(assert (! (iso_tuple_update_accessor_cong_assist$e id$l id$ ):named a84 ))
(assert (! (iso_tuple_update_accessor_cong_assist$f id$e id$a ):named a85 ))
(assert (! (= (fun_app$v (map_fun$ id$j )id$g )id$a ):named a86 ))
(assert (! (= (fun_app$w (map_fun$a id$j )id$c )id$ ):named a87 ))
(assert (! (= (fun_app$x (map_fun$b id$a )id$a )id$e ):named a88 ))
(assert (! (= (fun_app$y (map_fun$c id$ )id$a )id$k ):named a89 ))
(assert (! (= (fun_app$z (map_fun$d id$a )id$ )id$d ):named a90 ))
(assert (! (= (fun_app$aa (map_fun$e id$ )id$ )id$l ):named a91 ))
(assert (! (= (fun_app$ab (map_fun$f id$j )id$j )id$m ):named a92 ))
(assert (! (= (fun_app$ac (map_fun$g id$j )id$i )id$n ):named a93 ))
(assert (! (= (fun_app$ad (map_fun$h id$i )id$j )id$o ):named a94 ))
(assert (! (= (fun_app$ae (map_fun$i id$i )id$i )id$w ):named a95 ))
(assert (! (forall ((?v0 C_a_fun_stream$ )(?v1 C_a_fun_stream_set$ ))(=> (member$ ?v0 ?v1 )(member$a (siterate$y id$y ?v0 )(streams$ ?v1 )))):named a96 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_stream$ )(?v1 C_b_a_fun_fun_stream_set$ ))(=> (member$b ?v0 ?v1 )(member$c (siterate$z id$z ?v0 )(streams$a ?v1 )))):named a97 ))
(assert (! (forall ((?v0 B_a_fun_a_fun$ )(?v1 B_a_fun_a_fun_set$ ))(=> (member$d ?v0 ?v1 )(member$e (siterate$h id$h ?v0 )(streams$b ?v1 )))):named a98 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B_a_fun_set$ ))(=> (member$f ?v0 ?v1 )(member$g (siterate$c id$c ?v0 )(streams$c ?v1 )))):named a99 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ ))(=> (member$h ?v0 ?v1 )(member$i (siterate$j id$j ?v0 )(streams$d ?v1 )))):named a100 ))
(assert (! (forall ((?v0 B$ )(?v1 B_set$ ))(=> (member$j ?v0 ?v1 )(member$k (siterate$i id$i ?v0 )(streams$e ?v1 )))):named a101 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ ))(=> (member$l ?v0 ?v1 )(member$m (siterate$g id$g ?v0 )(streams$f ?v1 )))):named a102 ))
(assert (! (forall ((?v0 C_b_a_fun_fun$ )(?v1 C_b_a_fun_fun_set$ ))(=> (member$n ?v0 ?v1 )(member$b (siterate$ id$ ?v0 )(streams$g ?v1 )))):named a103 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C_a_fun_set$ ))(=> (member$o ?v0 ?v1 )(member$ (siterate$a id$a ?v0 )(streams$h ?v1 )))):named a104 ))
(assert (! (forall ((?v0 C_a_fun_c_a_fun_fun$ )(?v1 C_a_fun$ ))(= (smap$ ?v0 (siterate$a id$a ?v1 ))(siterate$a id$a (fun_app$e ?v0 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_c_a_fun_fun$ )(?v1 C_b_a_fun_fun$ ))(= (smap$a ?v0 (siterate$ id$ ?v1 ))(siterate$a id$a (fun_app$r ?v0 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 C_a_fun_c_b_a_fun_fun_fun$ )(?v1 C_a_fun$ ))(= (smap$b ?v0 (siterate$a id$a ?v1 ))(siterate$ id$ (fun_app$c ?v0 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_c_b_a_fun_fun_fun$ )(?v1 C_b_a_fun_fun$ ))(= (smap$c ?v0 (siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$m ?v0 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(= (smap$d ?v0 (siterate$j id$j ?v1 ))(siterate$j id$j (fun_app$o ?v0 ?v1 )))):named a109 ))
(assert (! (forall ((?v0 C_b_fun$ )(?v1 C$ ))(= (smap$e ?v0 (siterate$j id$j ?v1 ))(siterate$i id$i (fun_app$s ?v0 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 C_a_fun$ )(?v1 C$ ))(= (smap$f ?v0 (siterate$j id$j ?v1 ))(siterate$g id$g (fun_app$k ?v0 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 B_c_fun$ )(?v1 B$ ))(= (smap$g ?v0 (siterate$i id$i ?v1 ))(siterate$j id$j (fun_app$t ?v0 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (smap$h ?v0 (siterate$i id$i ?v1 ))(siterate$i id$i (fun_app$p ?v0 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ ))(= (smap$i ?v0 (siterate$i id$i ?v1 ))(siterate$g id$g (fun_app$l ?v0 ?v1 )))):named a114 ))
(assert (! (= (comp$ id$g )id$h ):named a115 ))
(assert (! (= (comp$a id$g )id$c ):named a116 ))
(assert (! (= (comp$b id$c )id$ ):named a117 ))
(assert (! (= (comp$c id$g )id$a ):named a118 ))
(assert (! (forall ((?v0 B_a_fun_a_fun_b_a_fun_a_fun_fun$ )(?v1 B_a_fun_a_fun$ ))(= (smap$j ?v0 (siterate$h ?v0 ?v1 ))(siterate$h ?v0 (fun_app$u ?v0 ?v1 )))):named a119 ))
(assert (! (forall ((?v0 B_a_fun_b_a_fun_fun$ )(?v1 B_a_fun$ ))(= (smap$k ?v0 (siterate$c ?v0 ?v1 ))(siterate$c ?v0 (fun_app$n ?v0 ?v1 )))):named a120 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(= (smap$d ?v0 (siterate$j ?v0 ?v1 ))(siterate$j ?v0 (fun_app$o ?v0 ?v1 )))):named a121 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ ))(= (smap$h ?v0 (siterate$i ?v0 ?v1 ))(siterate$i ?v0 (fun_app$p ?v0 ?v1 )))):named a122 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (smap$l ?v0 (siterate$g ?v0 ?v1 ))(siterate$g ?v0 (fun_app$q ?v0 ?v1 )))):named a123 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_c_b_a_fun_fun_fun$ )(?v1 C_b_a_fun_fun$ ))(= (smap$c ?v0 (siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$m ?v0 ?v1 )))):named a124 ))
(assert (! (forall ((?v0 C_a_fun_c_a_fun_fun$ )(?v1 C_a_fun$ ))(= (smap$ ?v0 (siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$e ?v0 ?v1 )))):named a125 ))
(assert (! (= (fun_app$af (map_fun$j uur$ )uus$ )id$h ):named a126 ))
(assert (! (= (fun_app$ag (map_fun$k uut$ )uus$ )id$c ):named a127 ))
(assert (! (= (fun_app$y (map_fun$c uuu$ )uuq$ )id$k ):named a128 ))
(assert (! (= (fun_app$z (map_fun$d uuq$ )uuu$ )id$d ):named a129 ))
(assert (! (= (fun_app$x (map_fun$b uuq$ )uuq$ )id$e ):named a130 ))
(assert (! (= (fun_app$w (map_fun$a uuv$ )uur$ )id$ ):named a131 ))
(assert (! (= (fun_app$v (map_fun$ uuv$ )uus$ )id$a ):named a132 ))
(assert (! (forall ((?v0 B_a_fun_tree$ ))(= (map_tree$ id$c ?v0 )?v0 )):named a133 ))
(assert (! (forall ((?v0 C_tree$ ))(= (map_tree$a id$j ?v0 )?v0 )):named a134 ))
(assert (! (forall ((?v0 B_tree$ ))(= (map_tree$b id$i ?v0 )?v0 )):named a135 ))
(assert (! (forall ((?v0 A_tree$ ))(= (map_tree$c id$g ?v0 )?v0 )):named a136 ))
(assert (! (forall ((?v0 C_b_a_fun_fun_tree$ ))(= (fun_app$ah (map_tree$d id$ )?v0 )?v0 )):named a137 ))
(assert (! (forall ((?v0 C_a_fun_tree$ ))(= (fun_app$ai (map_tree$e id$a )?v0 )?v0 )):named a138 ))
(assert (! (= (map_tree$d id$ )id$aa ):named a139 ))
(assert (! (= (map_tree$e id$a )id$ab ):named a140 ))
(check-sat )
;(get-unsat-core )
