;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_fun$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_stream_tree_a_stream_tree_fun$ 0 )
(declare-sort A_tree_stream_a_tree_stream_fun$ 0 )
(declare-sort A_a_stream_a_stream_fun_a_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_fun$ 0 )
(declare-sort A_a_fun_stream_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_a_stream_a_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun_a_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_stream_a_a_a_fun_fun_stream_fun$ 0 )
(declare-sort A_stream_stream_tree_a_stream_stream_tree_fun$ 0 )
(declare-sort A_stream_tree_stream_a_stream_tree_stream_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ 0 )
(declare-sort A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$ 0 )
(declare-sort A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$ 0 )
(declare-sort A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ 0 )
(declare-sort A_a_stream_a_stream_a_stream_fun_fun_fun_a_a_stream_a_stream_a_stream_fun_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun_a_fun_a_stream_a_stream_a_stream_fun_fun_a_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun_stream_a_stream_a_stream_a_stream_fun_fun_stream_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_a_tree_tree_a_tree_tree_a_tree_tree_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_a_stream_fun_fun_fun_a_stream_a_stream_a_stream_a_stream_fun_fun_fun_fun$ 0 )
(declare-sort A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_a_stream_tree_a_stream_tree_a_stream_tree_fun_fun_fun$ 0 )
(declare-sort A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_a_tree_stream_a_tree_stream_a_tree_stream_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_a_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_fun$ 0 )
(declare-sort A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_a_stream_stream_a_stream_stream_a_stream_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_a_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_fun$ 0 )
(declare-sort A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_a_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_fun$ 0 )
(declare-sort A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_a_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))(A_a_fun_stream$ (sCons$a (select$ A_a_fun$ )(selecta$ A_a_fun_stream$ )))(A_stream_a_stream_fun_stream$ (sCons$b (selectb$ A_stream_a_stream_fun$ )(selectc$ A_stream_a_stream_fun_stream$ )))(A_a_fun_a_fun_stream$ (sCons$c (selectd$ A_a_fun_a_fun$ )(selecte$ A_a_fun_a_fun_stream$ )))(A_a_a_fun_fun_stream$ (sCons$d (selectf$ A_a_a_fun_fun$ )(selectg$ A_a_a_fun_fun_stream$ )))(A_stream_stream$ (sCons$e (shd$a A_stream$ )(stl$a A_stream_stream$ )))(A_a_fun_a_a_fun_fun_stream$ (sCons$f (selecth$ A_a_fun_a_a_fun_fun$ )(selecti$ A_a_fun_a_a_fun_fun_stream$ )))(A_stream_a_stream_a_stream_fun_fun_stream$ (sCons$g (selectj$ A_stream_a_stream_a_stream_fun_fun$ )(selectk$ A_stream_a_stream_a_stream_fun_fun_stream$ )))(A_stream_a_stream_fun_a_fun_stream$ (sCons$h (selectl$ A_stream_a_stream_fun_a_fun$ )(selectm$ A_stream_a_stream_fun_a_fun_stream$ )))(A_a_fun_a_fun_a_fun_stream$ (sCons$i (selectn$ A_a_fun_a_fun_a_fun$ )(selecto$ A_a_fun_a_fun_a_fun_stream$ )))(A_a_stream_a_stream_fun_fun_stream$ (sCons$j (selectp$ A_a_stream_a_stream_fun_fun$ )(selectq$ A_a_stream_a_stream_fun_fun_stream$ )))(A_a_a_fun_a_fun_fun_stream$ (sCons$k (selectr$ A_a_a_fun_a_fun_fun$ )(selects$ A_a_a_fun_a_fun_fun_stream$ )))(A_tree$ (node$ (root$ A$ )(left$ A_tree$ )(right$ A_tree$ )))(A_tree_tree$ (node$a (root$a A_tree$ )(left$a A_tree_tree$ )(right$a A_tree_tree$ )))(A_tree_tree_tree$ (node$b (root$b A_tree_tree$ )(left$b A_tree_tree_tree$ )(right$b A_tree_tree_tree$ )))(A_stream_stream_tree$ (node$c (root$c A_stream_stream$ )(left$c A_stream_stream_tree$ )(right$c A_stream_stream_tree$ )))(A_stream_stream_tree_tree$ (node$d (root$d A_stream_stream_tree$ )(left$d A_stream_stream_tree_tree$ )(right$d A_stream_stream_tree_tree$ )))(A_stream_tree$ (node$e (root$e A_stream$ )(left$e A_stream_tree$ )(right$e A_stream_tree$ )))(A_stream_tree_stream$ (sCons$l (shd$b A_stream_tree$ )(stl$b A_stream_tree_stream$ )))(A_stream_tree_stream_tree$ (node$f (root$f A_stream_tree_stream$ )(left$f A_stream_tree_stream_tree$ )(right$f A_stream_tree_stream_tree$ )))(A_tree_stream$ (sCons$m (shd$c A_tree$ )(stl$c A_tree_stream$ )))(A_tree_stream_tree$ (node$g (root$g A_tree_stream$ )(left$g A_tree_stream_tree$ )(right$g A_tree_stream_tree$ )))(A_stream_stream_stream$ (sCons$n (shd$d A_stream_stream$ )(stl$d A_stream_stream_stream$ )))(A_stream_stream_stream_tree$ (node$h (root$h A_stream_stream_stream$ )(left$h A_stream_stream_stream_tree$ )(right$h A_stream_stream_stream_tree$ )))(A_stream_tree_tree$ (node$i (root$i A_stream_tree$ )(left$i A_stream_tree_tree$ )(right$i A_stream_tree_tree$ )))(A_tree_a_tree_fun_stream$ (sCons$o (selectt$ A_tree_a_tree_fun$ )(selectu$ A_tree_a_tree_fun_stream$ )))(A_tree_a_tree_a_tree_fun_fun_stream$ (sCons$p (selectv$ A_tree_a_tree_a_tree_fun_fun$ )(selectw$ A_tree_a_tree_a_tree_fun_fun_stream$ )))(A_stream_tree_a_stream_tree_fun_stream$ (sCons$q (selectx$ A_stream_tree_a_stream_tree_fun$ )(selecty$ A_stream_tree_a_stream_tree_fun_stream$ )))(A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_stream$ (sCons$r (selectz$ A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$ )(selecua$ A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_stream$ )))(A_stream_stream_a_stream_stream_fun_stream$ (sCons$s (selecub$ A_stream_stream_a_stream_stream_fun$ )(selecuc$ A_stream_stream_a_stream_stream_fun_stream$ )))(A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$ (sCons$t (selecud$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ )(selecue$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$ )))(A_tree_tree_stream$ (sCons$u (shd$e A_tree_tree$ )(stl$e A_tree_tree_stream$ )))(A_tree_tree_a_tree_tree_fun_stream$ (sCons$v (selecuf$ A_tree_tree_a_tree_tree_fun$ )(selecug$ A_tree_tree_a_tree_tree_fun_stream$ )))(A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_stream$ (sCons$w (selecuh$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )(selecui$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_stream$ )))(A_tree_stream_stream$ (sCons$x (shd$f A_tree_stream$ )(stl$f A_tree_stream_stream$ )))(A_tree_stream_a_tree_stream_fun_stream$ (sCons$y (selecuj$ A_tree_stream_a_tree_stream_fun$ )(selecuk$ A_tree_stream_a_tree_stream_fun_stream$ )))(A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_stream$ (sCons$z (selecul$ A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$ )(selecum$ A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_stream$ )))(A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ (sCons$aa (selecun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(selecuo$ A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ )))(A_stream_stream_tree_stream$ (sCons$ab (shd$g A_stream_stream_tree$ )(stl$g A_stream_stream_tree_stream$ )))(A_stream_stream_tree_a_stream_stream_tree_fun_stream$ (sCons$ac (selecup$ A_stream_stream_tree_a_stream_stream_tree_fun$ )(selecuq$ A_stream_stream_tree_a_stream_stream_tree_fun_stream$ )))(A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_stream$ (sCons$ad (selecur$ A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$ )(selecus$ A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_stream$ )))(A_stream_tree_stream_stream$ (sCons$ae (shd$h A_stream_tree_stream$ )(stl$h A_stream_tree_stream_stream$ )))(A_stream_tree_stream_a_stream_tree_stream_fun_stream$ (sCons$af (selecut$ A_stream_tree_stream_a_stream_tree_stream_fun$ )(selecuu$ A_stream_tree_stream_a_stream_tree_stream_fun_stream$ )))(A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_stream$ (sCons$ag (selecuv$ A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$ )(selecuw$ A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_stream$ )))(A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ (sCons$ah (selecux$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(selecuy$ A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )))(A_a_a_fun_fun_a_fun_stream$ (sCons$ai (selecuz$ A_a_a_fun_fun_a_fun$ )(selecva$ A_a_a_fun_fun_a_fun_stream$ )))(A_a_stream_a_stream_a_stream_fun_fun_fun_stream$ (sCons$aj (selecvb$ A_a_stream_a_stream_a_stream_fun_fun_fun$ )(selecvc$ A_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )))(A_a_a_a_fun_fun_fun_stream$ (sCons$ak (selecvd$ A_a_a_a_fun_fun_fun$ )(selecve$ A_a_a_a_fun_fun_fun_stream$ )))(A_stream_a_stream_a_stream_fun_fun_a_fun_stream$ (sCons$al (selecvf$ A_stream_a_stream_a_stream_fun_fun_a_fun$ )(selecvg$ A_stream_a_stream_a_stream_fun_fun_a_fun_stream$ )))(A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ (sCons$am (selecvh$ A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(selecvi$ A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )))(A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ (sCons$an (selecvj$ A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(selecvk$ A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )))(A_stream_a_stream_a_stream_a_stream_fun_fun_fun_stream$ (sCons$ao (selecvl$ A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ )(selecvm$ A_stream_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )))))
(declare-fun t$ ()A_stream$ )
(declare-fun id$ ()A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun t$a ()A_stream$ )
(declare-fun uu$ (A_a_a_fun_fun$ )A_a_fun$ )
(declare-fun id$a ()A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )
(declare-fun id$b ()A_tree_a_tree_a_tree_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ )
(declare-fun id$c ()A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_a_stream_tree_a_stream_tree_a_stream_tree_fun_fun_fun$ )
(declare-fun id$d ()A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_a_stream_stream_a_stream_stream_a_stream_stream_fun_fun_fun$ )
(declare-fun id$e ()A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_a_tree_tree_a_tree_tree_a_tree_tree_fun_fun_fun$ )
(declare-fun id$f ()A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_a_tree_stream_a_tree_stream_a_tree_stream_fun_fun_fun$ )
(declare-fun id$g ()A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun id$h ()A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_a_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_fun$ )
(declare-fun id$i ()A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_a_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_fun$ )
(declare-fun id$j ()A_a_fun$ )
(declare-fun id$k ()A_a_fun_a_a_fun_fun$ )
(declare-fun id$l ()A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ )
(declare-fun id$m ()A_stream_a_stream_fun$ )
(declare-fun id$n ()A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ )
(declare-fun id$o ()A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ )
(declare-fun id$p ()A_stream_a_stream_a_stream_fun_fun_a_fun_a_stream_a_stream_a_stream_fun_fun_a_fun_fun$ )
(declare-fun id$q ()A_a_stream_a_stream_a_stream_fun_fun_fun_a_a_stream_a_stream_a_stream_fun_fun_fun_fun$ )
(declare-fun id$r ()A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )
(declare-fun id$s ()A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_a_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_fun$ )
(declare-fun id$t ()A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_a_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_fun$ )
(declare-fun id$u ()A_a_a_fun_fun_stream_a_a_a_fun_fun_stream_fun$ )
(declare-fun id$v ()A_stream_a_stream_a_stream_fun_fun_stream_a_stream_a_stream_a_stream_fun_fun_stream_fun$ )
(declare-fun id$w ()A_stream_a_stream_a_stream_a_stream_fun_fun_fun_a_stream_a_stream_a_stream_a_stream_fun_fun_fun_fun$ )
(declare-fun uua$ (A_a_a_a_fun_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun uub$ (A_stream_a_stream_a_stream_fun_fun$ )A_stream_a_stream_fun$ )
(declare-fun uuc$ (A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun shd$i (A_a_fun_stream$ )A_a_fun$ )
(declare-fun shd$j (A_stream_a_stream_fun_stream$ )A_stream_a_stream_fun$ )
(declare-fun shd$k (A_a_fun_a_fun_stream$ )A_a_fun_a_fun$ )
(declare-fun shd$l (A_a_a_fun_fun_stream$ )A_a_a_fun_fun$ )
(declare-fun shd$m (A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun$ )
(declare-fun shd$n (A_stream_a_stream_a_stream_fun_fun_stream$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun shd$o (A_stream_a_stream_fun_a_fun_stream$ )A_stream_a_stream_fun_a_fun$ )
(declare-fun shd$p (A_a_fun_a_fun_a_fun_stream$ )A_a_fun_a_fun_a_fun$ )
(declare-fun shd$q (A_a_stream_a_stream_fun_fun_stream$ )A_a_stream_a_stream_fun_fun$ )
(declare-fun shd$r (A_a_a_fun_a_fun_fun_stream$ )A_a_a_fun_a_fun_fun$ )
(declare-fun smap$ (A_a_fun$ )A_stream_a_stream_fun$ )
(declare-fun minus$ ()A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun smap$a (A_a_fun_a_fun$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap$b (A_a_a_fun_fun$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap$c (A_a_fun_a_a_fun_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap$d (A_stream_a_stream_fun_a_fun$ A_stream_a_stream_fun_stream$ )A_stream$ )
(declare-fun smap$e (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun smap$f (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun_stream$ )A_stream$ )
(declare-fun smap$g (A_a_stream_a_stream_fun_fun$ A_stream$ )A_stream_a_stream_fun_stream$ )
(declare-fun smap$h (A_a_a_fun_a_fun_fun$ A_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun smap$i (A_a_a_a_fun_fun_fun$ A_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun smap$j (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )
(declare-fun smap$k (A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ A_a_a_fun_fun_a_fun_stream$ )A_a_a_fun_fun_a_fun_stream$ )
(declare-fun smap$l (A_a_stream_a_stream_a_stream_fun_fun_fun_a_a_stream_a_stream_a_stream_fun_fun_fun_fun$ A_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )A_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )
(declare-fun smap$m (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ A_a_a_a_fun_fun_fun_stream$ )A_a_a_a_fun_fun_fun_stream$ )
(declare-fun smap$n (A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_stream_a_a_a_fun_fun_stream_fun$ )
(declare-fun smap$o (A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )A_stream_a_stream_a_stream_fun_fun_stream_a_stream_a_stream_a_stream_fun_fun_stream_fun$ )
(declare-fun smap$p (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ A_a_a_fun_fun_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun smap$q (A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$ A_stream_a_stream_a_stream_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun smap$r (A_stream_a_stream_a_stream_fun_fun_a_fun$ A_stream_a_stream_a_stream_fun_fun_stream$ )A_stream$ )
(declare-fun smap$s (A_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun smap2$ (A_a_a_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun st_ap$ (A_a_fun_stream$ )A_stream_a_stream_fun$ )
(declare-fun minus$a ()A_a_a_fun_fun$ )
(declare-fun minus$b (A_tree_tree_tree$ A_tree_tree_tree$ )A_tree_tree_tree$ )
(declare-fun minus$c ()A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )
(declare-fun minus$d (A_stream_stream_tree_tree$ A_stream_stream_tree_tree$ )A_stream_stream_tree_tree$ )
(declare-fun minus$e ()A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$ )
(declare-fun minus$f (A_stream_tree_stream_tree$ A_stream_tree_stream_tree$ )A_stream_tree_stream_tree$ )
(declare-fun minus$g ()A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$ )
(declare-fun minus$h (A_tree_stream_tree$ A_tree_stream_tree$ )A_tree_stream_tree$ )
(declare-fun minus$i ()A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$ )
(declare-fun minus$j (A_stream_stream_stream_tree$ A_stream_stream_stream_tree$ )A_stream_stream_stream_tree$ )
(declare-fun minus$k (A_stream_stream_stream$ A_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun minus$l ()A_tree_a_tree_a_tree_fun_fun$ )
(declare-fun minus$m (A_stream_tree_tree$ A_stream_tree_tree$ )A_stream_tree_tree$ )
(declare-fun minus$n ()A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$ )
(declare-fun minus$o ()A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ )
(declare-fun minus$p (A_tree_tree_stream$ A_tree_tree_stream$ )A_tree_tree_stream$ )
(declare-fun minus$q (A_tree_stream_stream$ A_tree_stream_stream$ )A_tree_stream_stream$ )
(declare-fun minus$r (A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun minus$s ()A_a_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun minus$t (A_stream_stream_tree_stream$ A_stream_stream_tree_stream$ )A_stream_stream_tree_stream$ )
(declare-fun minus$u (A_stream_tree_stream_stream$ A_stream_tree_stream_stream$ )A_stream_tree_stream_stream$ )
(declare-fun smap2$a (A_a_a_fun_a_fun_fun$ A_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap2$b (A_a_fun_a_a_fun_fun$ )A_a_fun_stream_a_stream_a_stream_fun_fun$ )
(declare-fun smap2$c (A_a_a_a_fun_fun_fun$ A_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap2$d (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap2$e (A_a_a_fun_a_a_fun_fun_fun$ A_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap2$f (A_a_fun_a_a_a_fun_fun_fun$ A_a_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap2$g (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun smap2$h (A_a_stream_a_stream_fun_a_fun_fun$ A_stream$ A_stream_a_stream_fun_stream$ )A_stream$ )
(declare-fun smap2$i (A_a_a_fun_a_fun_a_fun_fun$ A_stream$ A_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$a (A_a_fun_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$b (A_a_a_fun_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$c (A_stream_a_stream_fun_stream$ A_stream_stream$ )A_stream_stream$ )
(declare-fun st_ap$d (A_a_fun_a_a_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun st_ap$e (A_stream_a_stream_a_stream_fun_fun_stream$ A_stream_stream$ )A_stream_a_stream_fun_stream$ )
(declare-fun st_ap$f (A_stream_a_stream_fun_a_fun_stream$ A_stream_a_stream_fun_stream$ )A_stream$ )
(declare-fun st_ap$g (A_a_fun_a_fun_a_fun_stream$ A_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun st_ap$h (A_a_stream_a_stream_fun_fun_stream$ A_stream$ )A_stream_a_stream_fun_stream$ )
(declare-fun st_ap$i (A_a_a_fun_a_fun_fun_stream$ A_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun st_ap$j (A_tree_a_tree_fun_stream$ A_tree_stream$ )A_tree_stream$ )
(declare-fun st_ap$k (A_tree_a_tree_a_tree_fun_fun_stream$ A_tree_stream$ )A_tree_a_tree_fun_stream$ )
(declare-fun st_ap$l (A_stream_tree_a_stream_tree_fun_stream$ A_stream_tree_stream$ )A_stream_tree_stream$ )
(declare-fun st_ap$m (A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_stream$ A_stream_tree_stream$ )A_stream_tree_a_stream_tree_fun_stream$ )
(declare-fun st_ap$n (A_stream_stream_a_stream_stream_fun_stream$ A_stream_stream_stream$ )A_stream_stream_stream$ )
(declare-fun st_ap$o (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$ A_stream_stream_stream$ )A_stream_stream_a_stream_stream_fun_stream$ )
(declare-fun st_ap$p (A_tree_tree_a_tree_tree_fun_stream$ A_tree_tree_stream$ )A_tree_tree_stream$ )
(declare-fun st_ap$q (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_stream$ A_tree_tree_stream$ )A_tree_tree_a_tree_tree_fun_stream$ )
(declare-fun st_ap$r (A_tree_stream_a_tree_stream_fun_stream$ A_tree_stream_stream$ )A_tree_stream_stream$ )
(declare-fun st_ap$s (A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_stream$ A_tree_stream_stream$ )A_tree_stream_a_tree_stream_fun_stream$ )
(declare-fun st_ap$t (A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ A_a_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun st_ap$u (A_stream_stream_tree_a_stream_stream_tree_fun_stream$ A_stream_stream_tree_stream$ )A_stream_stream_tree_stream$ )
(declare-fun st_ap$v (A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_stream$ A_stream_stream_tree_stream$ )A_stream_stream_tree_a_stream_stream_tree_fun_stream$ )
(declare-fun st_ap$w (A_stream_tree_stream_a_stream_tree_stream_fun_stream$ A_stream_tree_stream_stream$ )A_stream_tree_stream_stream$ )
(declare-fun st_ap$x (A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_stream$ A_stream_tree_stream_stream$ )A_stream_tree_stream_a_stream_tree_stream_fun_stream$ )
(declare-fun st_ap$y (A_a_a_fun_fun_a_fun_stream$ A_a_a_fun_fun_stream$ )A_stream$ )
(declare-fun st_ap$z (A_a_a_a_fun_fun_fun_stream$ A_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun fun_app$ (A_stream_a_stream_fun$ A_stream$ )A_stream$ )
(declare-fun st_ap$aa (A_stream_a_stream_a_stream_fun_fun_a_fun_stream$ A_stream_a_stream_a_stream_fun_fun_stream$ )A_stream$ )
(declare-fun st_ap$ab (A_a_stream_a_stream_a_stream_fun_fun_fun_stream$ A_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun st_ap$ac (A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun st_ap$ad (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ A_a_a_fun_fun_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun st_ap$ae (A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ A_stream_a_stream_a_stream_fun_fun_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun st_ap$af (A_stream_a_stream_a_stream_a_stream_fun_fun_fun_stream$ A_stream_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun fun_app$a (A_stream_a_stream_a_stream_fun_fun$ A_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$b (A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun fun_app$c (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$d (A_a_a_a_fun_fun_fun$ A$ )A_a_a_fun_fun$ )
(declare-fun fun_app$e (A_a_fun$ A$ )A$ )
(declare-fun fun_app$f (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$g (A_a_a_fun_a_fun_fun$ A$ )A_a_fun_a_fun$ )
(declare-fun fun_app$h (A_a_fun_stream_a_stream_a_stream_fun_fun$ A_a_fun_stream$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$i (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$j (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun$ )A_a_fun_a_fun$ )
(declare-fun fun_app$k (A_a_a_fun_a_a_fun_fun_fun$ A$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$l (A_a_fun_a_a_a_fun_fun_fun$ A_a_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$m (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$n (A_stream_a_stream_fun_a_fun$ A_stream_a_stream_fun$ )A$ )
(declare-fun fun_app$o (A_a_stream_a_stream_fun_a_fun_fun$ A$ )A_stream_a_stream_fun_a_fun$ )
(declare-fun fun_app$p (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun$ )A$ )
(declare-fun fun_app$q (A_a_a_fun_a_fun_a_fun_fun$ A$ )A_a_fun_a_fun_a_fun$ )
(declare-fun fun_app$r (A_a_stream_a_stream_fun_fun$ A$ )A_stream_a_stream_fun$ )
(declare-fun fun_app$s (A_tree_tree_a_tree_tree_fun$ A_tree_tree$ )A_tree_tree$ )
(declare-fun fun_app$t (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ A_tree_tree$ )A_tree_tree_a_tree_tree_fun$ )
(declare-fun fun_app$u (A_stream_stream_tree_a_stream_stream_tree_fun$ A_stream_stream_tree$ )A_stream_stream_tree$ )
(declare-fun fun_app$v (A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$ A_stream_stream_tree$ )A_stream_stream_tree_a_stream_stream_tree_fun$ )
(declare-fun fun_app$w (A_stream_tree_stream_a_stream_tree_stream_fun$ A_stream_tree_stream$ )A_stream_tree_stream$ )
(declare-fun fun_app$x (A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$ A_stream_tree_stream$ )A_stream_tree_stream_a_stream_tree_stream_fun$ )
(declare-fun fun_app$y (A_tree_stream_a_tree_stream_fun$ A_tree_stream$ )A_tree_stream$ )
(declare-fun fun_app$z (A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$ A_tree_stream$ )A_tree_stream_a_tree_stream_fun$ )
(declare-fun siterate$ (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun_stream$ )
(declare-fun fun_app$aa (A_tree_a_tree_fun$ A_tree$ )A_tree$ )
(declare-fun fun_app$ab (A_tree_a_tree_a_tree_fun_fun$ A_tree$ )A_tree_a_tree_fun$ )
(declare-fun fun_app$ac (A_stream_tree_a_stream_tree_fun$ A_stream_tree$ )A_stream_tree$ )
(declare-fun fun_app$ad (A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$ A_stream_tree$ )A_stream_tree_a_stream_tree_fun$ )
(declare-fun fun_app$ae (A_stream_stream_a_stream_stream_fun$ A_stream_stream$ )A_stream_stream$ )
(declare-fun fun_app$af (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ A_stream_stream$ )A_stream_stream_a_stream_stream_fun$ )
(declare-fun fun_app$ag (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun$ )A$ )
(declare-fun fun_app$ah (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun fun_app$ai (A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ A_a_a_fun_fun_a_fun$ )A_a_a_fun_fun_a_fun$ )
(declare-fun fun_app$aj (A_a_stream_a_stream_a_stream_fun_fun_fun_a_a_stream_a_stream_a_stream_fun_fun_fun_fun$ A_a_stream_a_stream_a_stream_fun_fun_fun$ )A_a_stream_a_stream_a_stream_fun_fun_fun$ )
(declare-fun fun_app$ak (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ A_a_a_a_fun_fun_fun$ )A_a_a_a_fun_fun_fun$ )
(declare-fun fun_app$al (A_a_a_fun_fun_stream_a_a_a_fun_fun_stream_fun$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun fun_app$am (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$an (A_stream_a_stream_a_stream_fun_fun_stream_a_stream_a_stream_a_stream_fun_fun_stream_fun$ A_stream_a_stream_a_stream_fun_fun_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun fun_app$ao (A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream_a_stream_a_stream_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun fun_app$ap (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ A_a_a_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun fun_app$aq (A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$ A_stream_a_stream_a_stream_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$ar (A_stream_a_stream_a_stream_fun_fun_a_fun$ A_stream_a_stream_a_stream_fun_fun$ )A$ )
(declare-fun fun_app$as (A_a_stream_a_stream_a_stream_fun_fun_fun$ A$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun siterate$a (A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ A_stream_a_stream_a_stream_fun_fun$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun siterate$b (A_tree_a_tree_a_tree_fun_fun_a_tree_a_tree_a_tree_fun_fun_fun$ A_tree_a_tree_a_tree_fun_fun$ )A_tree_a_tree_a_tree_fun_fun_stream$ )
(declare-fun siterate$c (A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_a_stream_tree_a_stream_tree_a_stream_tree_fun_fun_fun$ A_stream_tree_a_stream_tree_a_stream_tree_fun_fun$ )A_stream_tree_a_stream_tree_a_stream_tree_fun_fun_stream$ )
(declare-fun siterate$d (A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_a_stream_stream_a_stream_stream_a_stream_stream_fun_fun_fun$ A_stream_stream_a_stream_stream_a_stream_stream_fun_fun$ )A_stream_stream_a_stream_stream_a_stream_stream_fun_fun_stream$ )
(declare-fun siterate$e (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_a_tree_tree_a_tree_tree_a_tree_tree_fun_fun_fun$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_stream$ )
(declare-fun siterate$f (A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_a_tree_stream_a_tree_stream_a_tree_stream_fun_fun_fun$ A_tree_stream_a_tree_stream_a_tree_stream_fun_fun$ )A_tree_stream_a_tree_stream_a_tree_stream_fun_fun_stream$ )
(declare-fun siterate$g (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$h (A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_a_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_fun$ A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun$ )A_stream_stream_tree_a_stream_stream_tree_a_stream_stream_tree_fun_fun_stream$ )
(declare-fun siterate$i (A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_a_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_fun$ A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun$ )A_stream_tree_stream_a_stream_tree_stream_a_stream_tree_stream_fun_fun_stream$ )
(declare-fun siterate$j (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$k (A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ A_a_a_fun_fun_a_fun$ )A_a_a_fun_fun_a_fun_stream$ )
(declare-fun siterate$l (A_a_stream_a_stream_a_stream_fun_fun_fun_a_a_stream_a_stream_a_stream_fun_fun_fun_fun$ A_a_stream_a_stream_a_stream_fun_fun_fun$ )A_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )
(declare-fun siterate$m (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ A_a_a_a_fun_fun_fun$ )A_a_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$n (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun siterate$o (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$p (A_stream_a_stream_fun_a_stream_a_stream_fun_fun$ A_stream_a_stream_fun$ )A_stream_a_stream_fun_stream$ )
(declare-fun siterate$q (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun siterate$r (A_stream_a_stream_a_stream_fun_fun_a_fun_a_stream_a_stream_a_stream_fun_fun_a_fun_fun$ A_stream_a_stream_a_stream_fun_fun_a_fun$ )A_stream_a_stream_a_stream_fun_fun_a_fun_stream$ )
(declare-fun siterate$s (A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_a_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_fun$ A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )
(declare-fun siterate$t (A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_a_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_fun$ A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )
(declare-fun siterate$u (A_stream_a_stream_a_stream_a_stream_fun_fun_fun_a_stream_a_stream_a_stream_a_stream_fun_fun_fun_fun$ A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ )A_stream_a_stream_a_stream_a_stream_fun_fun_fun_stream$ )
(declare-fun szip_with$ (A_a_a_fun_fun$ )A_stream_a_stream_a_stream_fun_fun$ )
(declare-fun szip_with$a (A_a_a_fun_a_fun_fun$ A_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun szip_with$b (A_a_fun_a_a_fun_fun$ )A_a_fun_stream_a_stream_a_stream_fun_fun$ )
(declare-fun szip_with$c (A_a_a_a_fun_fun_fun$ A_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$d (A_a_fun_a_a_fun_a_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_stream$ )
(declare-fun szip_with$e (A_a_a_fun_a_a_fun_fun_fun$ A_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$f (A_a_fun_a_a_a_fun_fun_fun$ A_a_fun_stream$ A_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$g (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun szip_with$h (A_a_stream_a_stream_fun_a_fun_fun$ A_stream$ A_stream_a_stream_fun_stream$ )A_stream$ )
(declare-fun szip_with$i (A_a_a_fun_a_fun_a_fun_fun$ A_stream$ A_a_fun_a_fun_stream$ )A_stream$ )
(declare-fun sinterleave$ (A_stream_a_stream_fun_stream$ A_stream_a_stream_fun_stream$ )A_stream_a_stream_fun_stream$ )
(declare-fun sinterleave$a (A_stream_a_stream_a_stream_fun_fun_stream$ A_stream_a_stream_a_stream_fun_fun_stream$ )A_stream_a_stream_a_stream_fun_fun_stream$ )
(declare-fun sinterleave$b (A_a_fun_a_a_fun_fun_stream$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun sinterleave$c (A_a_fun_a_fun_stream$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun sinterleave$d (A_a_a_fun_fun_stream$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun sinterleave$e (A_a_fun_stream$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun sinterleave$f (A_stream$ )A_stream_a_stream_fun$ )
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$ )(?v1 A_stream$ ))(! (= (fun_app$ (uub$ ?v0 )?v1 )(fun_app$ (fun_app$a ?v0 ?v1 )?v1 )):pattern ((fun_app$ (uub$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_stream$ ))(! (= (fun_app$a (uuc$ ?v0 )?v1 )(fun_app$a (fun_app$b ?v0 ?v1 )?v1 )):pattern ((fun_app$a (uuc$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A$ ))(! (= (fun_app$c (uua$ ?v0 )?v1 )(fun_app$c (fun_app$d ?v0 ?v1 )?v1 )):pattern ((fun_app$c (uua$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(! (= (fun_app$e (uu$ ?v0 )?v1 )(fun_app$e (fun_app$c ?v0 ?v1 )?v1 )):pattern ((fun_app$e (uu$ ?v0 )?v1 )))):named a3 ))
(assert (! (not (= (shd$ (fun_app$ (fun_app$a minus$ t$ )t$a ))(fun_app$e (fun_app$c minus$a (shd$ t$ ))(shd$ t$a )))):named a4 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$a (szip_with$ ?v0 )?v1 )?v2 ))(fun_app$e (fun_app$c ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a5 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (szip_with$a ?v0 ?v1 ?v2 ))(fun_app$f (fun_app$g ?v0 (shd$ ?v1 ))(shd$i ?v2 )))):named a6 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$h (szip_with$b ?v0 )?v1 )?v2 ))(fun_app$e (fun_app$i ?v0 (shd$i ?v1 ))(shd$ ?v2 )))):named a7 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$i (szip_with$c ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$d ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a8 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (szip_with$d ?v0 ?v1 ?v2 ))(fun_app$f (fun_app$j ?v0 (shd$i ?v1 ))(shd$i ?v2 )))):named a9 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$i (szip_with$e ?v0 ?v1 ?v2 ))(fun_app$i (fun_app$k ?v0 (shd$ ?v1 ))(shd$i ?v2 )))):named a10 ))
(assert (! (forall ((?v0 A_a_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$i (szip_with$f ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$l ?v0 (shd$i ?v1 ))(shd$ ?v2 )))):named a11 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$i (szip_with$g ?v0 ?v1 ?v2 ))(fun_app$i (fun_app$m ?v0 (shd$i ?v1 ))(shd$i ?v2 )))):named a12 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_a_stream_fun_stream$ ))(= (shd$ (szip_with$h ?v0 ?v1 ?v2 ))(fun_app$n (fun_app$o ?v0 (shd$ ?v1 ))(shd$j ?v2 )))):named a13 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_a_fun_stream$ ))(= (shd$ (szip_with$i ?v0 ?v1 ?v2 ))(fun_app$p (fun_app$q ?v0 (shd$ ?v1 ))(shd$k ?v2 )))):named a14 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_stream$ ))(= (shd$ (fun_app$ (st_ap$ ?v0 )?v1 ))(fun_app$e (shd$i ?v0 )(shd$ ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$ (st_ap$a ?v0 ?v1 ))(fun_app$f (shd$k ?v0 )(shd$i ?v1 )))):named a16 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A_stream$ ))(= (shd$i (st_ap$b ?v0 ?v1 ))(fun_app$c (shd$l ?v0 )(shd$ ?v1 )))):named a17 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$a (st_ap$c ?v0 ?v1 ))(fun_app$ (shd$j ?v0 )(shd$a ?v1 )))):named a18 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$i (st_ap$d ?v0 ?v1 ))(fun_app$i (shd$m ?v0 )(shd$i ?v1 )))):named a19 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_stream$ )(?v1 A_stream_stream$ ))(= (shd$j (st_ap$e ?v0 ?v1 ))(fun_app$a (shd$n ?v0 )(shd$a ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_a_fun_stream$ )(?v1 A_stream_a_stream_fun_stream$ ))(= (shd$ (st_ap$f ?v0 ?v1 ))(fun_app$n (shd$o ?v0 )(shd$j ?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun_stream$ )(?v1 A_a_fun_a_fun_stream$ ))(= (shd$ (st_ap$g ?v0 ?v1 ))(fun_app$p (shd$p ?v0 )(shd$k ?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_fun_fun_stream$ )(?v1 A_stream$ ))(= (shd$j (st_ap$h ?v0 ?v1 ))(fun_app$r (shd$q ?v0 )(shd$ ?v1 )))):named a23 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_stream$ )(?v1 A_stream$ ))(= (shd$k (st_ap$i ?v0 ?v1 ))(fun_app$g (shd$r ?v0 )(shd$ ?v1 )))):named a24 ))
(assert (! (forall ((?v0 A_tree_tree_tree$ )(?v1 A_tree_tree_tree$ ))(= (root$b (minus$b ?v0 ?v1 ))(fun_app$s (fun_app$t minus$c (root$b ?v0 ))(root$b ?v1 )))):named a25 ))
(assert (! (forall ((?v0 A_stream_stream_tree_tree$ )(?v1 A_stream_stream_tree_tree$ ))(= (root$d (minus$d ?v0 ?v1 ))(fun_app$u (fun_app$v minus$e (root$d ?v0 ))(root$d ?v1 )))):named a26 ))
(assert (! (forall ((?v0 A_stream_tree_stream_tree$ )(?v1 A_stream_tree_stream_tree$ ))(= (root$f (minus$f ?v0 ?v1 ))(fun_app$w (fun_app$x minus$g (root$f ?v0 ))(root$f ?v1 )))):named a27 ))
(assert (! (forall ((?v0 A_tree_stream_tree$ )(?v1 A_tree_stream_tree$ ))(= (root$g (minus$h ?v0 ?v1 ))(fun_app$y (fun_app$z minus$i (root$g ?v0 ))(root$g ?v1 )))):named a28 ))
(assert (! (forall ((?v0 A_stream_stream_stream_tree$ )(?v1 A_stream_stream_stream_tree$ ))(= (root$h (minus$j ?v0 ?v1 ))(minus$k (root$h ?v0 )(root$h ?v1 )))):named a29 ))
(assert (! (forall ((?v0 A_tree_tree$ )(?v1 A_tree_tree$ ))(= (root$a (fun_app$s (fun_app$t minus$c ?v0 )?v1 ))(fun_app$aa (fun_app$ab minus$l (root$a ?v0 ))(root$a ?v1 )))):named a30 ))
(assert (! (forall ((?v0 A_stream_tree_tree$ )(?v1 A_stream_tree_tree$ ))(= (root$i (minus$m ?v0 ?v1 ))(fun_app$ac (fun_app$ad minus$n (root$i ?v0 ))(root$i ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_stream_stream_tree$ )(?v1 A_stream_stream_tree$ ))(= (root$c (fun_app$u (fun_app$v minus$e ?v0 )?v1 ))(fun_app$ae (fun_app$af minus$o (root$c ?v0 ))(root$c ?v1 )))):named a32 ))
(assert (! (forall ((?v0 A_stream_tree$ )(?v1 A_stream_tree$ ))(= (root$e (fun_app$ac (fun_app$ad minus$n ?v0 )?v1 ))(fun_app$ (fun_app$a minus$ (root$e ?v0 ))(root$e ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(= (root$ (fun_app$aa (fun_app$ab minus$l ?v0 )?v1 ))(fun_app$e (fun_app$c minus$a (root$ ?v0 ))(root$ ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_stream$ )(?v1 A_stream_a_stream_fun_stream$ ))(= (shd$j (sinterleave$ ?v0 ?v1 ))(shd$j ?v0 ))):named a35 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_stream$ )(?v1 A_stream_a_stream_a_stream_fun_fun_stream$ ))(= (shd$n (sinterleave$a ?v0 ?v1 ))(shd$n ?v0 ))):named a36 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ )(?v1 A_a_fun_a_a_fun_fun_stream$ ))(= (shd$m (sinterleave$b ?v0 ?v1 ))(shd$m ?v0 ))):named a37 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ )(?v1 A_a_fun_a_fun_stream$ ))(= (shd$k (sinterleave$c ?v0 ?v1 ))(shd$k ?v0 ))):named a38 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ )(?v1 A_a_a_fun_fun_stream$ ))(= (shd$l (sinterleave$d ?v0 ?v1 ))(shd$l ?v0 ))):named a39 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_stream$ ))(= (shd$i (sinterleave$e ?v0 ?v1 ))(shd$i ?v0 ))):named a40 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(= (shd$ (fun_app$ (sinterleave$f ?v0 )?v1 ))(shd$ ?v0 ))):named a41 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$a (smap2$ ?v0 )?v1 )?v2 ))(fun_app$e (fun_app$c ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (smap2$a ?v0 ?v1 ?v2 ))(fun_app$f (fun_app$g ?v0 (shd$ ?v1 ))(shd$i ?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$ (fun_app$ (fun_app$h (smap2$b ?v0 )?v1 )?v2 ))(fun_app$e (fun_app$i ?v0 (shd$i ?v1 ))(shd$ ?v2 )))):named a44 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream$ ))(= (shd$i (smap2$c ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$d ?v0 (shd$ ?v1 ))(shd$ ?v2 )))):named a45 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$ (smap2$d ?v0 ?v1 ?v2 ))(fun_app$f (fun_app$j ?v0 (shd$i ?v1 ))(shd$i ?v2 )))):named a46 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$i (smap2$e ?v0 ?v1 ?v2 ))(fun_app$i (fun_app$k ?v0 (shd$ ?v1 ))(shd$i ?v2 )))):named a47 ))
(assert (! (forall ((?v0 A_a_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_stream$ ))(= (shd$i (smap2$f ?v0 ?v1 ?v2 ))(fun_app$c (fun_app$l ?v0 (shd$i ?v1 ))(shd$ ?v2 )))):named a48 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_stream$ )(?v2 A_a_fun_stream$ ))(= (shd$i (smap2$g ?v0 ?v1 ?v2 ))(fun_app$i (fun_app$m ?v0 (shd$i ?v1 ))(shd$i ?v2 )))):named a49 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_a_stream_fun_stream$ ))(= (shd$ (smap2$h ?v0 ?v1 ?v2 ))(fun_app$n (fun_app$o ?v0 (shd$ ?v1 ))(shd$j ?v2 )))):named a50 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_a_fun_fun$ )(?v1 A_stream$ )(?v2 A_a_fun_a_fun_stream$ ))(= (shd$ (smap2$i ?v0 ?v1 ?v2 ))(fun_app$p (fun_app$q ?v0 (shd$ ?v1 ))(shd$k ?v2 )))):named a51 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream$ ))(! (= (fun_app$ (fun_app$a minus$ ?v0 )?v1 )(fun_app$ (st_ap$ (st_ap$b (siterate$ id$ minus$a )?v0 ))?v1 )):pattern ((fun_app$ (fun_app$a minus$ ?v0 )?v1 )))):named a52 ))
(assert (! (forall ((?v0 A_stream_stream$ )(?v1 A_stream_stream$ ))(! (= (fun_app$ae (fun_app$af minus$o ?v0 )?v1 )(st_ap$c (st_ap$e (siterate$a id$a minus$ )?v0 )?v1 )):pattern ((fun_app$ae (fun_app$af minus$o ?v0 )?v1 )))):named a53 ))
(assert (! (forall ((?v0 A_tree_stream$ )(?v1 A_tree_stream$ ))(! (= (fun_app$y (fun_app$z minus$i ?v0 )?v1 )(st_ap$j (st_ap$k (siterate$b id$b minus$l )?v0 )?v1 )):pattern ((fun_app$y (fun_app$z minus$i ?v0 )?v1 )))):named a54 ))
(assert (! (forall ((?v0 A_stream_tree_stream$ )(?v1 A_stream_tree_stream$ ))(! (= (fun_app$w (fun_app$x minus$g ?v0 )?v1 )(st_ap$l (st_ap$m (siterate$c id$c minus$n )?v0 )?v1 )):pattern ((fun_app$w (fun_app$x minus$g ?v0 )?v1 )))):named a55 ))
(assert (! (forall ((?v0 A_stream_stream_stream$ )(?v1 A_stream_stream_stream$ ))(! (= (minus$k ?v0 ?v1 )(st_ap$n (st_ap$o (siterate$d id$d minus$o )?v0 )?v1 )):pattern ((minus$k ?v0 ?v1 )))):named a56 ))
(assert (! (forall ((?v0 A_tree_tree_stream$ )(?v1 A_tree_tree_stream$ ))(! (= (minus$p ?v0 ?v1 )(st_ap$p (st_ap$q (siterate$e id$e minus$c )?v0 )?v1 )):pattern ((minus$p ?v0 ?v1 )))):named a57 ))
(assert (! (forall ((?v0 A_tree_stream_stream$ )(?v1 A_tree_stream_stream$ ))(! (= (minus$q ?v0 ?v1 )(st_ap$r (st_ap$s (siterate$f id$f minus$i )?v0 )?v1 )):pattern ((minus$q ?v0 ?v1 )))):named a58 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_stream$ ))(! (= (minus$r ?v0 ?v1 )(st_ap$d (st_ap$t (siterate$g id$g minus$s )?v0 )?v1 )):pattern ((minus$r ?v0 ?v1 )))):named a59 ))
(assert (! (forall ((?v0 A_stream_stream_tree_stream$ )(?v1 A_stream_stream_tree_stream$ ))(! (= (minus$t ?v0 ?v1 )(st_ap$u (st_ap$v (siterate$h id$h minus$e )?v0 )?v1 )):pattern ((minus$t ?v0 ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A_stream_tree_stream_stream$ )(?v1 A_stream_tree_stream_stream$ ))(! (= (minus$u ?v0 ?v1 )(st_ap$w (st_ap$x (siterate$i id$i minus$g )?v0 )?v1 )):pattern ((minus$u ?v0 ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_stream$ ))(= (shd$ (fun_app$ (smap$ ?v0 )?v1 ))(fun_app$e ?v0 (shd$ ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_stream$ ))(= (shd$ (smap$a ?v0 ?v1 ))(fun_app$f ?v0 (shd$i ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ ))(= (shd$i (smap$b ?v0 ?v1 ))(fun_app$c ?v0 (shd$ ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_stream$ ))(= (shd$i (smap$c ?v0 ?v1 ))(fun_app$i ?v0 (shd$i ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun_a_fun$ )(?v1 A_stream_a_stream_fun_stream$ ))(= (shd$ (smap$d ?v0 ?v1 ))(fun_app$n ?v0 (shd$j ?v1 )))):named a66 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_stream$ ))(= (shd$ (smap$e ?v0 ?v1 ))(fun_app$p ?v0 (shd$k ?v1 )))):named a67 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun_stream$ ))(= (shd$ (smap$f ?v0 ?v1 ))(fun_app$ag ?v0 (shd$l ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_fun_fun$ )(?v1 A_stream$ ))(= (shd$j (smap$g ?v0 ?v1 ))(fun_app$r ?v0 (shd$ ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_stream$ ))(= (shd$k (smap$h ?v0 ?v1 ))(fun_app$g ?v0 (shd$ ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_stream$ ))(= (shd$l (smap$i ?v0 ?v1 ))(fun_app$d ?v0 (shd$ ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )(?v1 A_a_a_fun_fun_a_a_a_fun_fun_fun$ ))(= (smap$j ?v0 (siterate$j ?v0 ?v1 ))(siterate$j ?v0 (fun_app$ah ?v0 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun_a_a_a_fun_fun_a_fun_fun$ )(?v1 A_a_a_fun_fun_a_fun$ ))(= (smap$k ?v0 (siterate$k ?v0 ?v1 ))(siterate$k ?v0 (fun_app$ai ?v0 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_a_stream_fun_fun_fun_a_a_stream_a_stream_a_stream_fun_fun_fun_fun$ )(?v1 A_a_stream_a_stream_a_stream_fun_fun_fun$ ))(= (smap$l ?v0 (siterate$l ?v0 ?v1 ))(siterate$l ?v0 (fun_app$aj ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ )(?v1 A_a_a_a_fun_fun_fun$ ))(= (smap$m ?v0 (siterate$m ?v0 ?v1 ))(siterate$m ?v0 (fun_app$ak ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (smap$c ?v0 (siterate$n ?v0 ?v1 ))(siterate$n ?v0 (fun_app$i ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (fun_app$al (smap$n ?v0 )(siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$am ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_stream_a_stream_a_stream_fun_fun$ ))(= (fun_app$an (smap$o ?v0 )(siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$ao ?v0 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$ (smap$ ?v0 )(siterate$o ?v0 ?v1 ))(siterate$o ?v0 (fun_app$e ?v0 ?v1 )))):named a79 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_a_stream_fun_fun_fun_a_a_stream_a_stream_a_stream_fun_fun_fun_fun$ )(?v1 A_a_stream_a_stream_a_stream_fun_fun_fun$ ))(= (smap$l ?v0 (siterate$l ?v0 ?v1 ))(siterate$l ?v0 (fun_app$aj ?v0 ?v1 )))):named a80 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ )(?v1 A_a_a_a_fun_fun_fun$ ))(= (smap$m ?v0 (siterate$m ?v0 ?v1 ))(siterate$m ?v0 (fun_app$ak ?v0 ?v1 )))):named a81 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (smap$c ?v0 (siterate$n ?v0 ?v1 ))(siterate$n ?v0 (fun_app$i ?v0 ?v1 )))):named a82 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (fun_app$al (smap$n ?v0 )(siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$am ?v0 ?v1 )))):named a83 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_stream_a_stream_a_stream_fun_fun$ ))(= (fun_app$an (smap$o ?v0 )(siterate$a ?v0 ?v1 ))(siterate$a ?v0 (fun_app$ao ?v0 ?v1 )))):named a84 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$ (smap$ ?v0 )(siterate$o ?v0 ?v1 ))(siterate$o ?v0 (fun_app$e ?v0 ?v1 )))):named a85 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (fun_app$al (smap$n ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$am ?v0 ?v1 )))):named a86 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (smap$p ?v0 (siterate$ id$ ?v1 ))(siterate$a id$a (fun_app$ap ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun$ ))(= (smap$f ?v0 (siterate$ id$ ?v1 ))(siterate$o id$j (fun_app$ag ?v0 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_stream_a_stream_a_stream_fun_fun$ ))(= (smap$q ?v0 (siterate$a id$a ?v1 ))(siterate$ id$ (fun_app$aq ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_stream_a_stream_a_stream_fun_fun$ ))(= (fun_app$an (smap$o ?v0 )(siterate$a id$a ?v1 ))(siterate$a id$a (fun_app$ao ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_fun$ )(?v1 A_stream_a_stream_a_stream_fun_fun$ ))(= (smap$r ?v0 (siterate$a id$a ?v1 ))(siterate$o id$j (fun_app$ar ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A$ ))(= (smap$i ?v0 (siterate$o id$j ?v1 ))(siterate$ id$ (fun_app$d ?v0 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A$ ))(= (smap$s ?v0 (siterate$o id$j ?v1 ))(siterate$a id$a (fun_app$as ?v0 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$ (smap$ ?v0 )(siterate$o id$j ?v1 ))(siterate$o id$j (fun_app$e ?v0 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (fun_app$ (st_ap$ (siterate$n id$k ?v0 ))(siterate$o id$j ?v1 ))(siterate$o id$j (fun_app$e ?v0 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (st_ap$b (siterate$ id$ ?v0 )(siterate$o id$j ?v1 ))(siterate$n id$k (fun_app$c ?v0 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ ))(= (st_ap$c (siterate$p id$l ?v0 )(siterate$q id$m ?v1 ))(siterate$q id$m (fun_app$ ?v0 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun$ ))(= (st_ap$y (siterate$k id$n ?v0 )(siterate$ id$ ?v1 ))(siterate$o id$j (fun_app$ag ?v0 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A$ ))(= (st_ap$z (siterate$m id$o ?v0 )(siterate$o id$j ?v1 ))(siterate$ id$ (fun_app$d ?v0 ?v1 )))):named a99 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$ )(?v1 A_stream$ ))(= (st_ap$e (siterate$a id$a ?v0 )(siterate$q id$m ?v1 ))(siterate$p id$l (fun_app$a ?v0 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_fun$ )(?v1 A_stream_a_stream_a_stream_fun_fun$ ))(= (st_ap$aa (siterate$r id$p ?v0 )(siterate$a id$a ?v1 ))(siterate$o id$j (fun_app$ar ?v0 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 A_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A$ ))(= (st_ap$ab (siterate$l id$q ?v0 )(siterate$o id$j ?v1 ))(siterate$a id$a (fun_app$as ?v0 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (st_ap$ac (siterate$j id$r ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$am ?v0 ?v1 )))):named a103 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (st_ap$ad (siterate$s id$s ?v0 )(siterate$ id$ ?v1 ))(siterate$a id$a (fun_app$ap ?v0 ?v1 )))):named a104 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ ))(= (fun_app$al (smap$n id$ )?v0 )?v0 )):named a105 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_stream$ ))(= (fun_app$an (smap$o id$a )?v0 )?v0 )):named a106 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$ (smap$ id$j )?v0 )?v0 )):named a107 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ ))(= (st_ap$ac (siterate$j id$r id$ )?v0 )?v0 )):named a108 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_stream$ ))(= (st_ap$ae (siterate$t id$t id$a )?v0 )?v0 )):named a109 ))
(assert (! (forall ((?v0 A_stream$ ))(= (fun_app$ (st_ap$ (siterate$n id$k id$j ))?v0 )?v0 )):named a110 ))
(assert (! (forall ((?v0 A_stream_stream$ ))(= (st_ap$c (siterate$p id$l id$m )?v0 )?v0 )):named a111 ))
(assert (! (= (smap$n id$ )id$u ):named a112 ))
(assert (! (= (smap$o id$a )id$v ):named a113 ))
(assert (! (= (smap$ id$j )id$m ):named a114 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (shd$l (siterate$ ?v0 ?v1 ))?v1 )):named a115 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_stream_a_stream_a_stream_fun_fun$ ))(= (shd$n (siterate$a ?v0 ?v1 ))?v1 )):named a116 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (shd$i (siterate$n ?v0 ?v1 ))?v1 )):named a117 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (shd$ (siterate$o ?v0 ?v1 ))?v1 )):named a118 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$am id$ ?v0 )?v0 ):pattern ((fun_app$am id$ ?v0 )))):named a119 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$ ))(! (= (fun_app$ao id$a ?v0 )?v0 ):pattern ((fun_app$ao id$a ?v0 )))):named a120 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (fun_app$ (st_ap$ (siterate$n id$k ?v0 ))(sCons$ ?v1 ?v2 ))(sCons$ (fun_app$e ?v0 ?v1 )(fun_app$ (st_ap$ (siterate$n id$k ?v0 ))?v2 )))):named a121 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ )(?v2 A_stream$ ))(= (st_ap$b (siterate$ id$ ?v0 )(sCons$ ?v1 ?v2 ))(sCons$a (fun_app$c ?v0 ?v1 )(st_ap$b (siterate$ id$ ?v0 )?v2 )))):named a122 ))
(assert (! (forall ((?v0 A_stream_a_stream_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(= (st_ap$c (siterate$p id$l ?v0 )(sCons$e ?v1 ?v2 ))(sCons$e (fun_app$ ?v0 ?v1 )(st_ap$c (siterate$p id$l ?v0 )?v2 )))):named a123 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$ )(?v1 A_stream$ )(?v2 A_stream_stream$ ))(= (st_ap$e (siterate$a id$a ?v0 )(sCons$e ?v1 ?v2 ))(sCons$b (fun_app$a ?v0 ?v1 )(st_ap$e (siterate$a id$a ?v0 )?v2 )))):named a124 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_stream$ ))(= (fun_app$ (st_ap$ (st_ap$b (siterate$ id$ ?v0 )?v1 ))?v1 )(fun_app$ (st_ap$ (siterate$n id$k (uu$ ?v0 )))?v1 ))):named a125 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_stream$ ))(= (st_ap$b (st_ap$z (siterate$m id$o ?v0 )?v1 )?v1 )(st_ap$b (siterate$ id$ (uua$ ?v0 ))?v1 ))):named a126 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_fun_fun$ )(?v1 A_stream_stream$ ))(= (st_ap$c (st_ap$e (siterate$a id$a ?v0 )?v1 )?v1 )(st_ap$c (siterate$p id$l (uub$ ?v0 ))?v1 ))):named a127 ))
(assert (! (forall ((?v0 A_stream_a_stream_a_stream_a_stream_fun_fun_fun$ )(?v1 A_stream_stream$ ))(= (st_ap$e (st_ap$af (siterate$u id$w ?v0 )?v1 )?v1 )(st_ap$e (siterate$a id$a (uuc$ ?v0 ))?v1 ))):named a128 ))
(check-sat )
;(get-unsat-core )
