;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_fun$ 0 )
(declare-sort A_a_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_fun$ 0 )
(declare-sort A_tree_a_tree_a_tree_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun_a_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_a_fun_fun_fun_a_a_fun_a_a_a_fun_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_a_fun_fun_a_fun_fun_a_a_a_a_fun_fun_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun_a_a_a_fun_a_a_fun_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_tree$ (node$ (root$ A$ )(left$ A_tree$ )(right$ A_tree$ )))(A_a_fun_tree$ (node$a (select$ A_a_fun$ )(selecta$ A_a_fun_tree$ )(selectb$ A_a_fun_tree$ )))(A_a_a_fun_fun_tree$ (node$b (selectc$ A_a_a_fun_fun$ )(selectd$ A_a_a_fun_fun_tree$ )(selecte$ A_a_a_fun_fun_tree$ )))(A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ (node$c (selectf$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(selectg$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ )(selecth$ A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_fun_tree$ (node$d (selecti$ A_a_fun_a_fun$ )(selectj$ A_a_fun_a_fun_tree$ )(selectk$ A_a_fun_a_fun_tree$ )))(A_a_a_fun_fun_a_fun_tree$ (node$e (selectl$ A_a_a_fun_fun_a_fun$ )(selectm$ A_a_a_fun_fun_a_fun_tree$ )(selectn$ A_a_a_fun_fun_a_fun_tree$ )))(A_a_a_fun_a_fun_fun_tree$ (node$f (selecto$ A_a_a_fun_a_fun_fun$ )(selectp$ A_a_a_fun_a_fun_fun_tree$ )(selectq$ A_a_a_fun_a_fun_fun_tree$ )))(A_a_a_a_fun_fun_fun_tree$ (node$g (selectr$ A_a_a_a_fun_fun_fun$ )(selects$ A_a_a_a_fun_fun_fun_tree$ )(selectt$ A_a_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_fun_tree$ (node$h (selectu$ A_a_fun_a_a_fun_fun$ )(selectv$ A_a_fun_a_a_fun_fun_tree$ )(selectw$ A_a_fun_a_a_fun_fun_tree$ )))(A_a_a_fun_fun_a_a_fun_fun_tree$ (node$i (selectx$ A_a_a_fun_fun_a_a_fun_fun$ )(selecty$ A_a_a_fun_fun_a_a_fun_fun_tree$ )(selectz$ A_a_a_fun_fun_a_a_fun_fun_tree$ )))(A_a_a_fun_a_a_fun_fun_fun_tree$ (node$j (selecua$ A_a_a_fun_a_a_fun_fun_fun$ )(selecub$ A_a_a_fun_a_a_fun_fun_fun_tree$ )(selecuc$ A_a_a_fun_a_a_fun_fun_fun_tree$ )))(A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ (node$k (selecud$ A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )(selecue$ A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ )(selecuf$ A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ )))(A_tree_tree$ (node$l (root$a A_tree$ )(left$a A_tree_tree$ )(right$a A_tree_tree$ )))(A_tree_tree_tree$ (node$m (root$b A_tree_tree$ )(left$b A_tree_tree_tree$ )(right$b A_tree_tree_tree$ )))(A_tree_tree_a_tree_tree_fun_tree$ (node$n (selecug$ A_tree_tree_a_tree_tree_fun$ )(selecuh$ A_tree_tree_a_tree_tree_fun_tree$ )(selecui$ A_tree_tree_a_tree_tree_fun_tree$ )))(A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ (node$o (selecuj$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )(selecuk$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ )(selecul$ A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ )))(A_tree_a_tree_fun_tree$ (node$p (selecum$ A_tree_a_tree_fun$ )(selecun$ A_tree_a_tree_fun_tree$ )(selecuo$ A_tree_a_tree_fun_tree$ )))(A_tree_a_tree_a_tree_fun_fun_tree$ (node$q (selecup$ A_tree_a_tree_a_tree_fun_fun$ )(selecuq$ A_tree_a_tree_a_tree_fun_fun_tree$ )(selecur$ A_tree_a_tree_a_tree_fun_fun_tree$ )))(A_a_a_a_fun_a_fun_fun_fun_tree$ (node$r (selecus$ A_a_a_a_fun_a_fun_fun_fun$ )(selecut$ A_a_a_a_fun_a_fun_fun_fun_tree$ )(selecuu$ A_a_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_a_a_a_fun_fun_fun_fun_tree$ (node$s (selecuv$ A_a_a_a_a_fun_fun_fun_fun$ )(selecuw$ A_a_a_a_a_fun_fun_fun_fun_tree$ )(selecux$ A_a_a_a_a_fun_fun_fun_fun_tree$ )))(A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ (node$t (selecuy$ A_a_a_fun_a_a_fun_a_fun_fun_fun$ )(selecuz$ A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )(selecva$ A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_a_fun_fun_tree$ (node$u (selecvb$ A_a_fun_a_a_fun_a_fun_fun$ )(selecvc$ A_a_fun_a_a_fun_a_fun_fun_tree$ )(selecvd$ A_a_fun_a_a_fun_a_fun_fun_tree$ )))(A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ (node$v (selecve$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun$ )(selecvf$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ )(selecvg$ A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ )))(A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$w (selecvh$ A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )(selecvi$ A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ )(selecvj$ A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ (node$x (selecvk$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun$ )(selecvl$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ )(selecvm$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_fun_a_a_a_fun_fun_fun_tree$ (node$y (selecvn$ A_a_fun_a_a_a_fun_fun_fun$ )(selecvo$ A_a_fun_a_a_a_fun_fun_fun_tree$ )(selecvp$ A_a_fun_a_a_a_fun_fun_fun_tree$ )))(A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ (node$z (selecvq$ A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ )(selecvr$ A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ )(selecvs$ A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ )))(A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$aa (selecvt$ A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )(selecvu$ A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ )(selecvv$ A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ (node$ab (selecvw$ A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun$ )(selecvx$ A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )(selecvy$ A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ (node$ac (selecvz$ A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun$ )(selecwa$ A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ )(selecwb$ A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ )))(A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ (node$ad (selecwc$ A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun$ )(selecwd$ A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ )(selecwe$ A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$ae (selecwf$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(selecwg$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )(selecwh$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$af (selecwi$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )(selecwj$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ )(selecwk$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ )))(A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$ag (selecwl$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )(selecwm$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ )(selecwn$ A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ )))(A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ (node$ah (selecwo$ A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun$ )(selecwp$ A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ )(selecwq$ A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ )))(A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ (node$ai (selecwr$ A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun$ )(selecws$ A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ )(selecwt$ A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ )))(A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ (node$aj (selecwu$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )(selecwv$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ )(selecww$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ )))(A_a_fun_a_fun_a_a_fun_a_fun_fun_tree$ (node$ak (selecwx$ A_a_fun_a_fun_a_a_fun_a_fun_fun$ )(selecwy$ A_a_fun_a_fun_a_a_fun_a_fun_fun_tree$ )(selecwz$ A_a_fun_a_fun_a_a_fun_a_fun_fun_tree$ )))(A_a_fun_a_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun_tree$ (node$al (selecxa$ A_a_fun_a_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ )(selecxb$ A_a_fun_a_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun_tree$ )(selecxc$ A_a_fun_a_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_a_fun_a_fun_a_fun_fun_tree$ (node$am (selecxd$ A_a_a_fun_a_fun_a_fun_fun$ )(selecxe$ A_a_a_fun_a_fun_a_fun_fun_tree$ )(selecxf$ A_a_a_fun_a_fun_a_fun_fun_tree$ )))(A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$ (node$an (selecxg$ A_a_a_fun_a_fun_fun_a_a_fun_fun$ )(selecxh$ A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$ )(selecxi$ A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$ )))(A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$ (node$ao (selecxj$ A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun$ )(selecxk$ A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$ )(selecxl$ A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_fun_a_fun_tree$ (node$ap (selecxm$ A_a_fun_a_fun_a_fun$ )(selecxn$ A_a_fun_a_fun_a_fun_tree$ )(selecxo$ A_a_fun_a_fun_a_fun_tree$ )))(A_a_a_a_fun_fun_a_fun_fun_tree$ (node$aq (selecxp$ A_a_a_a_fun_fun_a_fun_fun$ )(selecxq$ A_a_a_a_fun_fun_a_fun_fun_tree$ )(selecxr$ A_a_a_a_fun_fun_a_fun_fun_tree$ )))(A_a_a_a_fun_fun_fun_a_a_fun_fun_tree$ (node$ar (selecxs$ A_a_a_a_fun_fun_fun_a_a_fun_fun$ )(selecxt$ A_a_a_a_fun_fun_fun_a_a_fun_fun_tree$ )(selecxu$ A_a_a_a_fun_fun_fun_a_a_fun_fun_tree$ )))(A_a_a_a_fun_fun_a_fun_fun_a_a_a_a_fun_fun_fun_a_a_fun_fun_fun_tree$ (node$as (selecxv$ A_a_a_a_fun_fun_a_fun_fun_a_a_a_a_fun_fun_fun_a_a_fun_fun_fun$ )(selecxw$ A_a_a_a_fun_fun_a_fun_fun_a_a_a_a_fun_fun_fun_a_a_fun_fun_fun_tree$ )(selecxx$ A_a_a_a_fun_fun_a_fun_fun_a_a_a_a_fun_fun_fun_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$at (selecxy$ A_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun$ )(selecxz$ A_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )(selecya$ A_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$au (selecyb$ A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )(selecyc$ A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ )(selecyd$ A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_tree$ (node$av (selecye$ A_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun$ )(selecyf$ A_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_tree$ )(selecyg$ A_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_tree$ )))(A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_fun_tree$ (node$aw (selecyh$ A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_fun$ )(selecyi$ A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_fun_tree$ )(selecyj$ A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ (node$ax (selecyk$ A_a_fun_a_a_a_fun_a_fun_fun_fun$ )(selecyl$ A_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ )(selecym$ A_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_a_a_fun_a_fun_fun_fun_a_a_fun_a_a_a_fun_a_fun_fun_fun_fun_tree$ (node$ay (selecyn$ A_a_a_a_fun_a_fun_fun_fun_a_a_fun_a_a_a_fun_a_fun_fun_fun_fun$ )(selecyo$ A_a_a_a_fun_a_fun_fun_fun_a_a_fun_a_a_a_fun_a_fun_fun_fun_fun_tree$ )(selecyp$ A_a_a_a_fun_a_fun_fun_fun_a_a_fun_a_a_a_fun_a_fun_fun_fun_fun_tree$ )))(A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ (node$az (selecyq$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun$ )(selecyr$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ )(selecys$ A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ )))(A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ (node$ba (selecyt$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun$ )(selecyu$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ )(selecyv$ A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ (node$bb (selecyw$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )(selecyx$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ )(selecyy$ A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ )))(A_a_a_fun_a_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ (node$bc (selecyz$ A_a_a_fun_a_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun$ )(selecza$ A_a_a_fun_a_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ )(seleczb$ A_a_a_fun_a_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ )))(A_a_a_a_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ (node$bd (seleczc$ A_a_a_a_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun$ )(seleczd$ A_a_a_a_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ )(selecze$ A_a_a_a_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ )))(A_a_fun_a_a_fun_a_fun_fun_a_a_a_fun_a_a_fun_a_fun_fun_fun_fun_tree$ (node$be (seleczf$ A_a_fun_a_a_fun_a_fun_fun_a_a_a_fun_a_a_fun_a_fun_fun_fun_fun$ )(seleczg$ A_a_fun_a_a_fun_a_fun_fun_a_a_a_fun_a_a_fun_a_fun_fun_fun_fun_tree$ )(seleczh$ A_a_fun_a_a_fun_a_fun_fun_a_a_a_fun_a_a_fun_a_fun_fun_fun_fun_tree$ )))))
(declare-fun t$ ()A_tree$ )
(declare-fun t$a ()A_tree$ )
(declare-fun plus$ ()A_a_a_fun_fun$ )
(declare-fun plus$a (A_tree_tree_tree$ A_tree_tree_tree$ )A_tree_tree_tree$ )
(declare-fun plus$b ()A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )
(declare-fun plus$c ()A_tree_a_tree_a_tree_fun_fun$ )
(declare-fun tree_C$ ()A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_K$ ()A_a_a_fun_fun_tree$ )
(declare-fun tree_S$ ()A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun fun_app$ (A_a_fun$ A$ )A$ )
(declare-fun tree_C$a ()A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$b ()A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_C$c ()A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_C$d ()A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$e ()A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$f ()A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_C$g ()A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$h ()A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$i ()A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_K$a ()A_a_fun_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_K$b ()A_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_K$c ()A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_K$d ()A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_K$e ()A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_K$f ()A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_K$g ()A_a_a_fun_a_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_K$h ()A_a_a_a_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_K$i ()A_a_fun_a_a_fun_a_fun_fun_a_a_a_fun_a_a_fun_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$a ()A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_S$b ()A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$c ()A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$d ()A_a_fun_a_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_S$e ()A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_S$f ()A_a_a_a_fun_fun_a_fun_fun_a_a_a_a_fun_fun_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_S$g ()A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$h ()A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_S$i ()A_a_a_a_fun_a_fun_fun_fun_a_a_fun_a_a_a_fun_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$ (A_a_fun_tree$ A_tree$ )A_tree$ )
(declare-fun fun_app$a (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$b (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$c (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$d (A_a_a_fun_fun_a_fun$ A_a_a_fun_fun$ )A$ )
(declare-fun fun_app$e (A_a_a_fun_a_fun_fun$ A$ )A_a_fun_a_fun$ )
(declare-fun fun_app$f (A_a_a_a_fun_fun_fun$ A$ )A_a_a_fun_fun$ )
(declare-fun fun_app$g (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$h (A_a_a_fun_fun_a_a_fun_fun$ A_a_a_fun_fun$ )A_a_fun$ )
(declare-fun fun_app$i (A_a_a_fun_a_a_fun_fun_fun$ A$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$j (A_tree_tree_a_tree_tree_fun$ A_tree_tree$ )A_tree_tree$ )
(declare-fun fun_app$k (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ A_tree_tree$ )A_tree_tree_a_tree_tree_fun$ )
(declare-fun fun_app$l (A_tree_a_tree_fun$ A_tree$ )A_tree$ )
(declare-fun fun_app$m (A_tree_a_tree_a_tree_fun_fun$ A_tree$ )A_tree_a_tree_fun$ )
(declare-fun fun_app$n (A_a_fun_a_fun_a_fun$ A_a_fun_a_fun$ )A$ )
(declare-fun tree_ap$a (A_a_a_fun_fun_tree$ A_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$b (A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_ap$c (A_a_fun_a_fun_tree$ A_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$d (A_a_a_fun_fun_a_fun_tree$ A_a_a_fun_fun_tree$ )A_tree$ )
(declare-fun tree_ap$e (A_a_a_fun_a_fun_fun_tree$ A_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_ap$f (A_a_a_a_fun_fun_fun_tree$ A_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_ap$g (A_a_fun_a_a_fun_fun_tree$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$h (A_a_a_fun_fun_a_a_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$i (A_a_a_fun_a_a_fun_fun_fun_tree$ A_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$j (A_tree_tree_a_tree_tree_fun_tree$ A_tree_tree_tree$ )A_tree_tree_tree$ )
(declare-fun tree_ap$k (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ A_tree_tree_tree$ )A_tree_tree_a_tree_tree_fun_tree$ )
(declare-fun tree_ap$l (A_tree_a_tree_fun_tree$ A_tree_tree$ )A_tree_tree$ )
(declare-fun tree_ap$m (A_tree_a_tree_a_tree_fun_fun_tree$ A_tree_tree$ )A_tree_a_tree_fun_tree$ )
(declare-fun tree_ap$n (A_a_a_a_fun_a_fun_fun_fun_tree$ A_tree$ )A_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$o (A_a_a_a_a_fun_fun_fun_fun_tree$ A_tree$ )A_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$p (A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ A_tree$ )A_a_fun_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$q (A_a_a_a_fun_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$ )A_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$r (A_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$s (A_a_fun_a_a_fun_fun_a_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$ )A_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$t (A_a_fun_a_a_a_fun_fun_fun_tree$ A_a_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_ap$u (A_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ A_a_a_fun_a_a_fun_fun_fun_tree$ )A_a_fun_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$v (A_a_fun_a_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_a_fun_fun_fun_tree$ )A_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$w (A_a_fun_a_a_fun_a_fun_fun_tree$ A_a_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_ap$x (A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_fun_fun_tree$ )A_a_fun_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$y (A_a_a_a_fun_a_fun_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_a_fun_fun_fun_tree$ )A_a_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$z (A_a_a_a_a_fun_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ A_a_a_a_a_fun_fun_fun_fun_tree$ )A_a_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$aa (A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$ab (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$ac (A_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$ad (A_a_a_fun_a_fun_fun_a_a_a_fun_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$ )A_a_a_fun_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$ae (A_a_a_a_fun_fun_fun_a_a_fun_a_a_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$ )A_a_fun_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$af (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ A_a_a_fun_a_a_fun_fun_fun_tree$ )A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$ag (A_a_fun_a_fun_a_a_fun_a_fun_fun_tree$ A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_ap$ah (A_a_fun_a_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_fun_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$ai (A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$aj (A_a_a_fun_a_fun_a_fun_fun_a_a_a_fun_a_fun_fun_a_a_fun_fun_fun_tree$ A_a_a_fun_a_fun_a_fun_fun_tree$ )A_a_a_fun_a_fun_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$ak (A_a_fun_a_fun_a_fun_tree$ A_a_fun_a_fun_tree$ )A_tree$ )
(declare-fun tree_ap$al (A_a_a_fun_a_fun_a_fun_fun_tree$ A_tree$ )A_a_fun_a_fun_a_fun_tree$ )
(declare-fun tree_ap$am (A_a_a_a_fun_fun_fun_a_a_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$an (A_a_a_a_fun_fun_a_fun_fun_a_a_a_a_fun_fun_fun_a_a_fun_fun_fun_tree$ A_a_a_a_fun_fun_a_fun_fun_tree$ )A_a_a_a_fun_fun_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$ao (A_a_a_a_fun_fun_a_fun_fun_tree$ A_tree$ )A_a_a_fun_fun_a_fun_tree$ )
(declare-fun tree_ap$ap (A_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ A_a_fun_a_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_ap$aq (A_a_fun_a_a_a_fun_fun_fun_a_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_a_fun_fun_fun_tree$ )A_a_fun_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$ar (A_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_ap$as (A_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$at (A_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_tree$ )A_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$au (A_a_a_a_fun_a_fun_fun_fun_a_a_fun_a_a_a_fun_a_fun_fun_fun_fun_tree$ A_a_a_a_fun_a_fun_fun_fun_tree$ )A_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$av (A_a_fun_a_fun_a_a_a_fun_a_fun_fun_fun_tree$ A_a_fun_a_fun_tree$ )A_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_ap$aw (A_a_a_fun_fun_a_a_a_a_fun_fun_fun_fun_tree$ A_a_a_fun_fun_tree$ )A_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$ax (A_a_fun_a_a_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_fun_tree$ )A_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$ay (A_a_a_fun_a_fun_fun_a_a_a_a_fun_a_fun_fun_fun_fun_tree$ A_a_a_fun_a_fun_fun_tree$ )A_a_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_ap$az (A_a_a_a_fun_fun_fun_a_a_a_a_a_fun_fun_fun_fun_fun_tree$ A_a_a_a_fun_fun_fun_tree$ )A_a_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$ba (A_a_fun_a_a_fun_a_fun_fun_a_a_a_fun_a_a_fun_a_fun_fun_fun_fun_tree$ A_a_fun_a_a_fun_a_fun_fun_tree$ )A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )
(declare-fun tree_pure$ (A_a_a_fun_fun$ )A_a_a_fun_fun_tree$ )
(declare-fun tree_pure$a (A_a_fun$ )A_a_fun_tree$ )
(declare-fun tree_pure$b (A$ )A_tree$ )
(declare-fun tree_pure$c (A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_pure$d (A_a_fun_a_fun$ )A_a_fun_a_fun_tree$ )
(declare-fun tree_pure$e (A_a_a_fun_fun_a_fun$ )A_a_a_fun_fun_a_fun_tree$ )
(declare-fun tree_pure$f (A_a_a_fun_a_fun_fun$ )A_a_a_fun_a_fun_fun_tree$ )
(declare-fun tree_pure$g (A_a_a_a_fun_fun_fun$ )A_a_a_a_fun_fun_fun_tree$ )
(declare-fun tree_pure$h (A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun tree_pure$i (A_a_a_fun_fun_a_a_fun_fun$ )A_a_a_fun_fun_a_a_fun_fun_tree$ )
(declare-fun tree_pure$j (A_a_a_fun_a_a_fun_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun tree_pure$k (A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$l (A_tree_tree_a_tree_tree_a_tree_tree_fun_fun$ )A_tree_tree_a_tree_tree_a_tree_tree_fun_fun_tree$ )
(declare-fun tree_pure$m (A_tree_a_tree_a_tree_fun_fun$ )A_tree_a_tree_a_tree_fun_fun_tree$ )
(declare-fun tree_pure$n (A_a_fun_a_fun_a_fun$ )A_a_fun_a_fun_a_fun_tree$ )
(assert (! (not (= (tree_ap$ (tree_ap$a (tree_pure$ plus$ )t$ )t$a )(tree_ap$ (tree_ap$a (tree_pure$ plus$ )t$a )t$ ))):named a0 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (tree_ap$ (tree_pure$a ?v0 )(tree_pure$b ?v1 ))(tree_pure$b (fun_app$ ?v0 ?v1 )))):named a1 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (tree_ap$a (tree_pure$ ?v0 )(tree_pure$b ?v1 ))(tree_pure$a (fun_app$a ?v0 ?v1 )))):named a2 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (tree_ap$b (tree_pure$c ?v0 )(tree_pure$ ?v1 ))(tree_pure$ (fun_app$b ?v0 ?v1 )))):named a3 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (tree_ap$c (tree_pure$d ?v0 )(tree_pure$a ?v1 ))(tree_pure$b (fun_app$c ?v0 ?v1 )))):named a4 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun$ ))(= (tree_ap$d (tree_pure$e ?v0 )(tree_pure$ ?v1 ))(tree_pure$b (fun_app$d ?v0 ?v1 )))):named a5 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A$ ))(= (tree_ap$e (tree_pure$f ?v0 )(tree_pure$b ?v1 ))(tree_pure$d (fun_app$e ?v0 ?v1 )))):named a6 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A$ ))(= (tree_ap$f (tree_pure$g ?v0 )(tree_pure$b ?v1 ))(tree_pure$ (fun_app$f ?v0 ?v1 )))):named a7 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (tree_ap$g (tree_pure$h ?v0 )(tree_pure$a ?v1 ))(tree_pure$a (fun_app$g ?v0 ?v1 )))):named a8 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (tree_ap$h (tree_pure$i ?v0 )(tree_pure$ ?v1 ))(tree_pure$a (fun_app$h ?v0 ?v1 )))):named a9 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A$ ))(= (tree_ap$i (tree_pure$j ?v0 )(tree_pure$b ?v1 ))(tree_pure$h (fun_app$i ?v0 ?v1 )))):named a10 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun$ ))(= (= (tree_pure$d ?v0 )(tree_pure$d ?v1 ))(= ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )(?v1 A_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ ))(= (= (tree_pure$k ?v0 )(tree_pure$k ?v1 ))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_a_a_fun_fun_fun$ ))(= (= (tree_pure$j ?v0 )(tree_pure$j ?v1 ))(= ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A_a_a_fun_a_fun_fun$ ))(= (= (tree_pure$f ?v0 )(tree_pure$f ?v1 ))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A_a_a_a_fun_fun_fun$ ))(= (= (tree_pure$g ?v0 )(tree_pure$g ?v1 ))(= ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun_a_a_a_fun_fun_fun$ ))(= (= (tree_pure$c ?v0 )(tree_pure$c ?v1 ))(= ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun$ ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_tree_tree_tree$ )(?v1 A_tree_tree_tree$ ))(! (= (plus$a ?v0 ?v1 )(tree_ap$j (tree_ap$k (tree_pure$l plus$b )?v0 )?v1 )):pattern ((plus$a ?v0 ?v1 )))):named a20 ))
(assert (! (forall ((?v0 A_tree_tree$ )(?v1 A_tree_tree$ ))(! (= (fun_app$j (fun_app$k plus$b ?v0 )?v1 )(tree_ap$l (tree_ap$m (tree_pure$m plus$c )?v0 )?v1 )):pattern ((fun_app$j (fun_app$k plus$b ?v0 )?v1 )))):named a21 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(! (= (fun_app$l (fun_app$m plus$c ?v0 )?v1 )(tree_ap$ (tree_ap$a (tree_pure$ plus$ )?v0 )?v1 )):pattern ((fun_app$l (fun_app$m plus$c ?v0 )?v1 )))):named a22 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$ ?v0 (tree_pure$b ?v2 ))(tree_ap$ ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a23 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_a_a_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$a ?v0 (tree_pure$b ?v2 ))(tree_ap$a ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_a_fun_tree$ ))(=> (forall ((?v2 A_a_fun$ ))(= (tree_ap$c ?v0 (tree_pure$a ?v2 ))(tree_ap$c ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a25 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$ )(?v1 A_a_a_fun_a_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$e ?v0 (tree_pure$b ?v2 ))(tree_ap$e ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a26 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$ )(?v1 A_a_a_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$f ?v0 (tree_pure$b ?v2 ))(tree_ap$f ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a27 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_a_fun_a_a_fun_fun_tree$ ))(=> (forall ((?v2 A_a_fun$ ))(= (tree_ap$g ?v0 (tree_pure$a ?v2 ))(tree_ap$g ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$ )(?v1 A_a_a_fun_a_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$i ?v0 (tree_pure$b ?v2 ))(tree_ap$i ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_a_a_a_fun_a_fun_fun_fun_tree$ )(?v1 A_a_a_a_fun_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$n ?v0 (tree_pure$b ?v2 ))(tree_ap$n ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_a_a_a_a_fun_fun_fun_fun_tree$ )(?v1 A_a_a_a_a_fun_fun_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$o ?v0 (tree_pure$b ?v2 ))(tree_ap$o ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a31 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )(?v1 A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$p ?v0 (tree_pure$b ?v2 ))(tree_ap$p ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a32 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$ ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))(= ?v0 ?v1 ))):named a33 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_a_a_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$a ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))(= ?v0 ?v1 ))):named a34 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_a_fun_a_fun_tree$ ))(=> (forall ((?v2 A_a_fun_tree$ ))(= (tree_ap$c ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))(= ?v0 ?v1 ))):named a35 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_a_fun_a_a_fun_fun_tree$ ))(=> (forall ((?v2 A_a_fun_tree$ ))(= (tree_ap$g ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))(= ?v0 ?v1 ))):named a36 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$ )(?v1 A_a_a_fun_a_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$e ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))(= ?v0 ?v1 ))):named a37 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$ )(?v1 A_a_a_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$f ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))(= ?v0 ?v1 ))):named a38 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$ )(?v1 A_a_a_fun_a_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$i ?v0 ?v2 )(tree_ap$i ?v1 ?v2 )))(= ?v0 ?v1 ))):named a39 ))
(assert (! (forall ((?v0 A_a_a_a_fun_a_fun_fun_fun_tree$ )(?v1 A_a_a_a_fun_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$n ?v0 ?v2 )(tree_ap$n ?v1 ?v2 )))(= ?v0 ?v1 ))):named a40 ))
(assert (! (forall ((?v0 A_a_a_a_a_fun_fun_fun_fun_tree$ )(?v1 A_a_a_a_a_fun_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$o ?v0 ?v2 )(tree_ap$o ?v1 ?v2 )))(= ?v0 ?v1 ))):named a41 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ )(?v1 A_a_a_fun_a_a_fun_a_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$p ?v0 ?v2 )(tree_ap$p ?v1 ?v2 )))(= ?v0 ?v1 ))):named a42 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$a (tree_ap$b tree_C$ ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$a ?v0 ?v2 )?v1 ))):named a43 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$a (tree_ap$f (tree_ap$q tree_C$a ?v0 )?v1 )?v2 )(tree_ap$a (tree_ap$f ?v0 ?v2 )?v1 ))):named a44 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$g (tree_ap$r tree_C$b ?v0 )?v1 )?v2 )(tree_ap$c (tree_ap$e ?v0 ?v2 )?v1 ))):named a45 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_a_fun_tree$ ))(= (tree_ap$c (tree_ap$e (tree_ap$s tree_C$c ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$g ?v0 ?v2 )?v1 ))):named a46 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$a (tree_ap$t (tree_ap$u tree_C$d ?v0 )?v1 )?v2 )(tree_ap$g (tree_ap$i ?v0 ?v2 )?v1 ))):named a47 ))
(assert (! (forall ((?v0 A_a_fun_a_a_a_fun_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_a_fun_tree$ ))(= (tree_ap$g (tree_ap$i (tree_ap$v tree_C$e ?v0 )?v1 )?v2 )(tree_ap$a (tree_ap$t ?v0 ?v2 )?v1 ))):named a48 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_a_fun_tree$ ))(= (tree_ap$c (tree_ap$w (tree_ap$x tree_C$f ?v0 )?v1 )?v2 )(tree_ap$c (tree_ap$w ?v0 ?v2 )?v1 ))):named a49 ))
(assert (! (forall ((?v0 A_a_a_a_fun_a_fun_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$e (tree_ap$n (tree_ap$y tree_C$g ?v0 )?v1 )?v2 )(tree_ap$e (tree_ap$n ?v0 ?v2 )?v1 ))):named a50 ))
(assert (! (forall ((?v0 A_a_a_a_a_fun_fun_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$o (tree_ap$z tree_C$h ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$o ?v0 ?v2 )?v1 ))):named a51 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_a_fun_tree$ ))(= (tree_ap$g (tree_ap$aa (tree_ap$ab tree_C$i ?v0 )?v1 )?v2 )(tree_ap$g (tree_ap$aa ?v0 ?v2 )?v1 ))):named a52 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$g (tree_ap$ac tree_S$ ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$a ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a53 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$ )(?v1 A_a_a_fun_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$h (tree_ap$ad tree_S$a ?v0 )?v1 )?v2 )(tree_ap$c (tree_ap$e ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))):named a54 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$a (tree_ap$t (tree_ap$ae tree_S$b ?v0 )?v1 )?v2 )(tree_ap$a (tree_ap$f ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a55 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$ )(?v1 A_a_a_fun_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$a (tree_ap$b (tree_ap$af tree_S$c ?v0 )?v1 )?v2 )(tree_ap$g (tree_ap$i ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))):named a56 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_a_fun_a_fun_tree$ )(?v2 A_a_fun_tree$ ))(= (tree_ap$c (tree_ap$ag (tree_ap$ah tree_S$d ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$g ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))):named a57 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_a_fun_fun_tree$ )(?v1 A_a_a_fun_a_fun_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$ai (tree_ap$aj tree_S$e ?v0 )?v1 )?v2 )(tree_ap$ak (tree_ap$al ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))):named a58 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_a_fun_fun_tree$ )(?v1 A_a_a_a_fun_fun_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$am (tree_ap$an tree_S$f ?v0 )?v1 )?v2 )(tree_ap$d (tree_ap$ao ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))):named a59 ))
(assert (! (forall ((?v0 A_a_fun_a_a_a_fun_fun_fun_tree$ )(?v1 A_a_fun_a_fun_tree$ )(?v2 A_a_fun_tree$ ))(= (tree_ap$g (tree_ap$ap (tree_ap$aq tree_S$g ?v0 )?v1 )?v2 )(tree_ap$a (tree_ap$t ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))):named a60 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun_tree$ )(?v1 A_a_fun_a_a_fun_fun_tree$ )(?v2 A_a_fun_tree$ ))(= (tree_ap$c (tree_ap$ar (tree_ap$as tree_S$h ?v0 )?v1 )?v2 )(tree_ap$c (tree_ap$w ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))):named a61 ))
(assert (! (forall ((?v0 A_a_a_a_fun_a_fun_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$e (tree_ap$at (tree_ap$au tree_S$i ?v0 )?v1 )?v2 )(tree_ap$e (tree_ap$n ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a62 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(= (tree_ap$ (tree_ap$a tree_K$ ?v0 )?v1 )?v0 )):named a63 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$a (tree_ap$t tree_K$a ?v0 )?v1 )?v0 )):named a64 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_a_fun_tree$ ))(= (tree_ap$c (tree_ap$e tree_K$b ?v0 )?v1 )?v0 )):named a65 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(= (tree_ap$g (tree_ap$aa tree_K$c ?v0 )?v1 )?v0 )):named a66 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$e (tree_ap$av tree_K$d ?v0 )?v1 )?v0 )):named a67 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$f (tree_ap$aw tree_K$e ?v0 )?v1 )?v0 )):named a68 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$i (tree_ap$ax tree_K$f ?v0 )?v1 )?v0 )):named a69 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$n (tree_ap$ay tree_K$g ?v0 )?v1 )?v0 )):named a70 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$o (tree_ap$az tree_K$h ?v0 )?v1 )?v0 )):named a71 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$p (tree_ap$ba tree_K$i ?v0 )?v1 )?v0 )):named a72 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$ (tree_pure$a ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$ (fun_app$ ?v0 ?v1 )(tree_ap$ (tree_pure$a ?v0 )?v2 )(tree_ap$ (tree_pure$a ?v0 )?v3 )))):named a73 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$a (tree_pure$ ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$a (fun_app$a ?v0 ?v1 )(tree_ap$a (tree_pure$ ?v0 )?v2 )(tree_ap$a (tree_pure$ ?v0 )?v3 )))):named a74 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_tree$ )(?v3 A_a_fun_tree$ ))(= (tree_ap$c (tree_pure$d ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$ (fun_app$c ?v0 ?v1 )(tree_ap$c (tree_pure$d ?v0 )?v2 )(tree_ap$c (tree_pure$d ?v0 )?v3 )))):named a75 ))
(assert (! (forall ((?v0 A_a_a_fun_a_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$e (tree_pure$f ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$d (fun_app$e ?v0 ?v1 )(tree_ap$e (tree_pure$f ?v0 )?v2 )(tree_ap$e (tree_pure$f ?v0 )?v3 )))):named a76 ))
(assert (! (forall ((?v0 A_a_a_a_fun_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$f (tree_pure$g ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$b (fun_app$f ?v0 ?v1 )(tree_ap$f (tree_pure$g ?v0 )?v2 )(tree_ap$f (tree_pure$g ?v0 )?v3 )))):named a77 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun_tree$ )(?v3 A_a_fun_tree$ ))(= (tree_ap$g (tree_pure$h ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$a (fun_app$g ?v0 ?v1 )(tree_ap$g (tree_pure$h ?v0 )?v2 )(tree_ap$g (tree_pure$h ?v0 )?v3 )))):named a78 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$i (tree_pure$j ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$h (fun_app$i ?v0 ?v1 )(tree_ap$i (tree_pure$j ?v0 )?v2 )(tree_ap$i (tree_pure$j ?v0 )?v3 )))):named a79 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_fun$ )(?v2 A_a_a_fun_fun_tree$ )(?v3 A_a_a_fun_fun_tree$ ))(= (tree_ap$b (tree_pure$c ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$b (fun_app$b ?v0 ?v1 )(tree_ap$b (tree_pure$c ?v0 )?v2 )(tree_ap$b (tree_pure$c ?v0 )?v3 )))):named a80 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_a_fun$ )(?v1 A_a_a_fun_fun$ )(?v2 A_a_a_fun_fun_tree$ )(?v3 A_a_a_fun_fun_tree$ ))(= (tree_ap$d (tree_pure$e ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$ (fun_app$d ?v0 ?v1 )(tree_ap$d (tree_pure$e ?v0 )?v2 )(tree_ap$d (tree_pure$e ?v0 )?v3 )))):named a81 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_a_fun$ )(?v1 A_a_fun_a_fun$ )(?v2 A_a_fun_a_fun_tree$ )(?v3 A_a_fun_a_fun_tree$ ))(= (tree_ap$ak (tree_pure$n ?v0 )(node$d ?v1 ?v2 ?v3 ))(node$ (fun_app$n ?v0 ?v1 )(tree_ap$ak (tree_pure$n ?v0 )?v2 )(tree_ap$ak (tree_pure$n ?v0 )?v3 )))):named a82 ))
(assert (! (forall ((?v0 A_tree_tree$ )(?v1 A_tree_tree$ )(?v2 A_tree_tree$ ))(= (fun_app$j (fun_app$k plus$b (fun_app$j (fun_app$k plus$b ?v0 )?v1 ))?v2 )(fun_app$j (fun_app$k plus$b ?v0 )(fun_app$j (fun_app$k plus$b ?v1 )?v2 )))):named a83 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (fun_app$l (fun_app$m plus$c (fun_app$l (fun_app$m plus$c ?v0 )?v1 ))?v2 )(fun_app$l (fun_app$m plus$c ?v0 )(fun_app$l (fun_app$m plus$c ?v1 )?v2 )))):named a84 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(= (fun_app$ (fun_app$a plus$ (fun_app$ (fun_app$a plus$ ?v0 )?v1 ))?v2 )(fun_app$ (fun_app$a plus$ ?v0 )(fun_app$ (fun_app$a plus$ ?v1 )?v2 )))):named a85 ))
(check-sat )
;(get-unsat-core )
