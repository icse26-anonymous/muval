;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_a_fun_set$ 0 )
(declare-sort A_stream_set$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun$ 0 )
(declare-sort A_a_fun_tree_set$ 0 )
(declare-sort A_a_a_fun_fun_set$ 0 )
(declare-sort A_a_fun_a_fun_set$ 0 )
(declare-sort A_tree_a_tree_fun$ 0 )
(declare-sort A_a_a_fun_tree_fun$ 0 )
(declare-sort A_a_fun_stream_set$ 0 )
(declare-sort A_a_fun_tree_a_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun$ 0 )
(declare-sort A_stream_stream_set$ 0 )
(declare-sort A_stream_a_stream_fun$ 0 )
(declare-sort A_a_a_fun_tree_fun_set$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_set$ 0 )
(declare-sort A_a_fun_tree_stream_set$ 0 )
(declare-sort A_a_a_fun_fun_stream_set$ 0 )
(declare-sort A_a_fun_a_a_fun_tree_fun$ 0 )
(declare-sort A_a_fun_a_fun_stream_set$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_stream_stream_set$ 0 )
(declare-sort A_a_a_fun_tree_fun_stream_set$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_tree_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_stream_set$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_stream_stream_stream_set$ 0 )
(declare-sort A_a_fun_stream_a_a_fun_stream_fun$ 0 )
(declare-sort A_a_fun_tree_tree_a_a_fun_tree_tree_fun$ 0 )
(declare-sort A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ 0 )
(declare-sort A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ 0 )
(declare-sort A_a_fun_tree_a_fun_a_a_fun_tree_a_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_stream_stream_a_a_fun_stream_stream_fun$ 0 )
(declare-sort A_a_a_fun_tree_fun_tree_a_a_a_fun_tree_fun_tree_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_tree_a_fun_a_a_fun_tree_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_fun$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_fun_a_a_fun_a_a_fun_fun_a_fun_fun$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun_tree_a_a_a_fun_a_a_fun_fun_fun_tree_fun$ 0 )
(declare-sort A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_tree_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ 0 )
(declare-sort A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ 0 )
(declare-codatatypes ()((A_stream$ (sCons$ (shd$ A$ )(stl$ A_stream$ )))(A_a_fun_stream$ (sCons$a (select$ A_a_fun$ )(selecta$ A_a_fun_stream$ )))(A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ (sCons$b (selectb$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(selectc$ A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ )))(A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_stream$ (sCons$c (selectd$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )(selecte$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_stream$ )))(A_a_fun_a_fun_stream$ (sCons$d (selectf$ A_a_fun_a_fun$ )(selectg$ A_a_fun_a_fun_stream$ )))(A_a_fun_a_fun_a_a_fun_a_fun_fun_stream$ (sCons$e (selecth$ A_a_fun_a_fun_a_a_fun_a_fun_fun$ )(selecti$ A_a_fun_a_fun_a_a_fun_a_fun_fun_stream$ )))(A_a_a_fun_tree_fun_stream$ (sCons$f (selectj$ A_a_a_fun_tree_fun$ )(selectk$ A_a_a_fun_tree_fun_stream$ )))(A_a_fun_tree$ (node$ (selectl$ A_a_fun$ )(selectm$ A_a_fun_tree$ )(selectn$ A_a_fun_tree$ )))(A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_stream$ (sCons$g (selecto$ A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )(selectp$ A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_stream$ )))(A_a_a_fun_a_a_fun_fun_fun_stream$ (sCons$h (selectq$ A_a_a_fun_a_a_fun_fun_fun$ )(selectr$ A_a_a_fun_a_a_fun_fun_fun_stream$ )))(A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_stream$ (sCons$i (selects$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )(selectt$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_stream$ )))(A_a_a_fun_fun_stream$ (sCons$j (selectu$ A_a_a_fun_fun$ )(selectv$ A_a_a_fun_fun_stream$ )))(A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ (sCons$k (selectw$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(selectx$ A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )))(A_a_fun_a_a_fun_fun_stream$ (sCons$l (selecty$ A_a_fun_a_a_fun_fun$ )(selectz$ A_a_fun_a_a_fun_fun_stream$ )))(A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_stream$ (sCons$m (selecua$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )(selecub$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_stream$ )))(A_a_fun_tree_stream$ (sCons$n (shd$a A_a_fun_tree$ )(stl$a A_a_fun_tree_stream$ )))(A_a_fun_tree_a_a_fun_tree_fun_stream$ (sCons$o (selecuc$ A_a_fun_tree_a_a_fun_tree_fun$ )(selecud$ A_a_fun_tree_a_a_fun_tree_fun_stream$ )))(A_a_fun_stream_stream$ (sCons$p (shd$b A_a_fun_stream$ )(stl$b A_a_fun_stream_stream$ )))(A_stream_stream$ (sCons$q (shd$c A_stream$ )(stl$c A_stream_stream$ )))(A_a_fun_stream_stream_stream$ (sCons$r (shd$d A_a_fun_stream_stream$ )(stl$d A_a_fun_stream_stream_stream$ )))(A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ (node$a (selecue$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(selecuf$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )(selecug$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )))(A_a_fun_a_fun_tree$ (node$b (selecuh$ A_a_fun_a_fun$ )(selecui$ A_a_fun_a_fun_tree$ )(selecuj$ A_a_fun_a_fun_tree$ )))(A_a_a_fun_tree_fun_tree$ (node$c (selecuk$ A_a_a_fun_tree_fun$ )(selecul$ A_a_a_fun_tree_fun_tree$ )(selecum$ A_a_a_fun_tree_fun_tree$ )))(A_a_a_fun_a_a_fun_fun_fun_tree$ (node$d (selecun$ A_a_a_fun_a_a_fun_fun_fun$ )(selecuo$ A_a_a_fun_a_a_fun_fun_fun_tree$ )(selecup$ A_a_a_fun_a_a_fun_fun_fun_tree$ )))(A_a_a_fun_fun_tree$ (node$e (selecuq$ A_a_a_fun_fun$ )(selecur$ A_a_a_fun_fun_tree$ )(selecus$ A_a_a_fun_fun_tree$ )))(A_tree$ (node$f (root$ A$ )(left$ A_tree$ )(right$ A_tree$ )))(A_a_fun_a_a_fun_fun_tree$ (node$g (selecut$ A_a_fun_a_a_fun_fun$ )(selecuu$ A_a_fun_a_a_fun_fun_tree$ )(selecuv$ A_a_fun_a_a_fun_fun_tree$ )))(A_a_fun_tree_tree$ (node$h (root$a A_a_fun_tree$ )(left$a A_a_fun_tree_tree$ )(right$a A_a_fun_tree_tree$ )))))
(declare-fun t$ ()A_stream$ )
(declare-fun id$ ()A_a_fun_a_a_fun_fun$ )
(declare-fun uu$ ()A_a_fun$ )
(declare-fun id$a ()A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ )
(declare-fun id$b ()A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun id$c ()A_a_fun_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ )
(declare-fun id$d ()A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun id$e ()A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ )
(declare-fun id$f ()A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )
(declare-fun id$g ()A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ )
(declare-fun id$h ()A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun id$i ()A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )
(declare-fun id$j ()A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun id$k ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun id$l ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun id$m ()A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ )
(declare-fun id$n ()A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun id$o ()A_a_fun$ )
(declare-fun id$p ()A_a_fun_tree_a_fun_a_a_fun_tree_a_fun_fun$ )
(declare-fun id$q ()A_a_fun_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_fun$ )
(declare-fun id$r ()A_a_fun_tree_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_fun$ )
(declare-fun id$s ()A_a_fun_a_a_fun_fun_a_fun_a_a_fun_a_a_fun_fun_a_fun_fun$ )
(declare-fun id$t ()A_a_fun_stream_a_a_fun_stream_fun$ )
(declare-fun id$u ()A_stream_a_stream_fun$ )
(declare-fun id$v ()A_a_fun_stream_stream_a_a_fun_stream_stream_fun$ )
(declare-fun id$w ()A_a_a_fun_tree_fun_tree_a_a_a_fun_tree_fun_tree_fun$ )
(declare-fun id$x ()A_a_a_fun_a_a_fun_fun_fun_tree_a_a_a_fun_a_a_fun_fun_fun_tree_fun$ )
(declare-fun id$y ()A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ )
(declare-fun id$z ()A_tree_a_tree_fun$ )
(declare-fun uua$ ()A_a_fun_a_a_fun_fun$ )
(declare-fun uub$ ()A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun uuc$ ()A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun comp$ (A_a_fun_a_a_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun id$aa ()A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ )
(declare-fun id$ab ()A_a_fun_tree_tree_a_a_fun_tree_tree_fun$ )
(declare-fun smap$ (A_a_fun_a_a_fun_fun$ )A_a_fun_stream_a_a_fun_stream_fun$ )
(declare-fun comp$a (A_a_fun$ )A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun comp$b (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun comp$c (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun comp$d (A_a_fun_tree_a_a_fun_tree_fun$ )A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )
(declare-fun comp$e (A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun comp$f (A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun smap$a (A_a_fun$ A_stream$ )A_stream$ )
(declare-fun smap$b (A_a_a_fun_fun$ A_stream$ )A_a_fun_stream$ )
(declare-fun smap$c (A_a_fun_a_fun$ A_a_fun_stream$ )A_stream$ )
(declare-fun smap$d (A_a_a_fun_tree_fun$ A_stream$ )A_a_fun_tree_stream$ )
(declare-fun smap$e (A_a_fun_tree_a_fun$ A_a_fun_tree_stream$ )A_stream$ )
(declare-fun smap$f (A_a_fun_tree_a_a_fun_fun$ A_a_fun_tree_stream$ )A_a_fun_stream$ )
(declare-fun smap$g (A_a_fun_a_a_fun_tree_fun$ A_a_fun_stream$ )A_a_fun_tree_stream$ )
(declare-fun smap$h (A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree_stream$ )A_a_fun_tree_stream$ )
(declare-fun smap$i (A_a_a_fun_a_a_fun_fun_fun$ A_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun smap$j (A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ A_a_fun_tree_a_a_fun_tree_fun_stream$ )A_a_fun_tree_a_a_fun_tree_fun_stream$ )
(declare-fun smap$k (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_stream$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_stream$ )
(declare-fun smap$l (A_a_fun_stream_a_a_fun_stream_fun$ A_a_fun_stream_stream$ )A_a_fun_stream_stream$ )
(declare-fun smap$m (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun st_ap$ (A_a_fun_stream$ A_stream$ )A_stream$ )
(declare-fun member$ (A_a_fun$ A_a_fun_set$ )Bool )
(declare-fun st_ap$a (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_stream$ A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ )
(declare-fun st_ap$b (A_a_fun_a_fun_a_a_fun_a_fun_fun_stream$ A_a_fun_a_fun_stream$ )A_a_fun_a_fun_stream$ )
(declare-fun st_ap$c (A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_stream$ A_a_a_fun_tree_fun_stream$ )A_a_a_fun_tree_fun_stream$ )
(declare-fun st_ap$d (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_stream$ A_a_a_fun_a_a_fun_fun_fun_stream$ )A_a_a_fun_a_a_fun_fun_fun_stream$ )
(declare-fun st_ap$e (A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ A_a_a_fun_fun_stream$ )A_a_a_fun_fun_stream$ )
(declare-fun st_ap$f (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_stream$ A_a_fun_a_a_fun_fun_stream$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun st_ap$g (A_a_fun_tree_a_a_fun_tree_fun_stream$ A_a_fun_tree_stream$ )A_a_fun_tree_stream$ )
(declare-fun st_ap$h (A_a_fun_a_a_fun_fun_stream$ )A_a_fun_stream_a_a_fun_stream_fun$ )
(declare-fun fun_app$ (A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun map_fun$ (A_a_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun member$a (A_a_fun_stream$ A_a_fun_stream_set$ )Bool )
(declare-fun member$b (A$ A_set$ )Bool )
(declare-fun member$c (A_stream$ A_stream_set$ )Bool )
(declare-fun member$d (A_a_fun_tree$ A_a_fun_tree_set$ )Bool )
(declare-fun member$e (A_a_fun_tree_stream$ A_a_fun_tree_stream_set$ )Bool )
(declare-fun member$f (A_a_fun_stream_stream$ A_a_fun_stream_stream_set$ )Bool )
(declare-fun member$g (A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_set$ )Bool )
(declare-fun member$h (A_a_fun_a_a_fun_fun_stream$ A_a_fun_a_a_fun_fun_stream_set$ )Bool )
(declare-fun member$i (A_stream_stream$ A_stream_stream_set$ )Bool )
(declare-fun member$j (A_a_fun_a_fun$ A_a_fun_a_fun_set$ )Bool )
(declare-fun member$k (A_a_fun_a_fun_stream$ A_a_fun_a_fun_stream_set$ )Bool )
(declare-fun member$l (A_a_a_fun_fun$ A_a_a_fun_fun_set$ )Bool )
(declare-fun member$m (A_a_a_fun_fun_stream$ A_a_a_fun_fun_stream_set$ )Bool )
(declare-fun member$n (A_a_fun_stream_stream_stream$ A_a_fun_stream_stream_stream_set$ )Bool )
(declare-fun member$o (A_a_a_fun_tree_fun$ A_a_a_fun_tree_fun_set$ )Bool )
(declare-fun member$p (A_a_a_fun_tree_fun_stream$ A_a_a_fun_tree_fun_stream_set$ )Bool )
(declare-fun streams$ (A_a_fun_set$ )A_a_fun_stream_set$ )
(declare-fun fun_app$a (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$b (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun$ )
(declare-fun fun_app$c (A_a_fun$ A$ )A$ )
(declare-fun fun_app$d (A_a_fun_stream_a_a_fun_stream_fun$ A_a_fun_stream$ )A_a_fun_stream$ )
(declare-fun fun_app$e (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun fun_app$f (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun$ )
(declare-fun fun_app$g (A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ A_a_a_fun_tree_fun$ )A_a_a_fun_tree_fun$ )
(declare-fun fun_app$h (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun fun_app$i (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun$ )
(declare-fun fun_app$j (A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$k (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun fun_app$l (A_a_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_fun_a_a_fun_a_fun_fun$ )
(declare-fun fun_app$m (A_a_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun$ )
(declare-fun fun_app$n (A_a_fun_tree_a_a_fun_tree_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ A_a_fun_tree_a_a_fun_tree_fun$ )A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )
(declare-fun fun_app$o (A_a_fun_a_a_fun_tree_a_fun_a_a_fun_tree_a_fun_fun_fun$ A_a_fun$ )A_a_fun_tree_a_fun_a_a_fun_tree_a_fun_fun$ )
(declare-fun fun_app$p (A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_fun_fun$ A_a_fun_tree_a_a_fun_tree_fun$ )A_a_fun_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_fun$ )
(declare-fun fun_app$q (A_a_fun_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_tree_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_fun$ )
(declare-fun fun_app$r (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun fun_app$s (A_a_a_fun_fun$ A$ )A_a_fun$ )
(declare-fun fun_app$t (A_a_fun_a_fun$ A_a_fun$ )A$ )
(declare-fun fun_app$u (A_a_a_fun_tree_fun$ A$ )A_a_fun_tree$ )
(declare-fun fun_app$v (A_a_fun_tree_a_fun$ A_a_fun_tree$ )A$ )
(declare-fun fun_app$w (A_a_fun_tree_a_a_fun_fun$ A_a_fun_tree$ )A_a_fun$ )
(declare-fun fun_app$x (A_a_fun_a_a_fun_tree_fun$ A_a_fun$ )A_a_fun_tree$ )
(declare-fun fun_app$y (A_a_a_fun_a_a_fun_fun_fun$ A$ )A_a_fun_a_a_fun_fun$ )
(declare-fun fun_app$z (A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ A_a_fun_tree_a_a_fun_tree_fun$ )A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun map_fun$a (A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun map_fun$b (A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ )
(declare-fun map_fun$c (A_a_fun$ )A_a_fun_a_a_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ )
(declare-fun map_fun$d (A_a_fun$ )A_a_fun_tree_a_a_fun_tree_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ )
(declare-fun map_fun$e (A_a_fun_tree_a_a_fun_tree_fun$ )A_a_fun_a_a_fun_tree_a_fun_a_a_fun_tree_a_fun_fun_fun$ )
(declare-fun map_fun$f (A_a_fun_a_a_fun_fun$ )A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_a_a_fun_a_a_fun_tree_fun_fun_fun$ )
(declare-fun map_fun$g (A_a_fun_tree_a_a_fun_tree_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_a_a_fun_tree_a_a_fun_fun_fun_fun$ )
(declare-fun map_fun$h (A_a_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ )
(declare-fun map_fun$i (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun$ )A_a_fun_a_a_fun_fun_a_fun_a_a_fun_a_a_fun_fun_a_fun_fun$ )
(declare-fun map_fun$j (A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ )
(declare-fun map_tree$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun siterate$ (A_a_fun_a_a_fun_fun$ A_a_fun$ )A_a_fun_stream$ )
(declare-fun streams$a (A_set$ )A_stream_set$ )
(declare-fun streams$b (A_a_fun_tree_set$ )A_a_fun_tree_stream_set$ )
(declare-fun streams$c (A_a_fun_stream_set$ )A_a_fun_stream_stream_set$ )
(declare-fun streams$d (A_a_fun_a_a_fun_fun_set$ )A_a_fun_a_a_fun_fun_stream_set$ )
(declare-fun streams$e (A_stream_set$ )A_stream_stream_set$ )
(declare-fun streams$f (A_a_fun_a_fun_set$ )A_a_fun_a_fun_stream_set$ )
(declare-fun streams$g (A_a_a_fun_fun_set$ )A_a_a_fun_fun_stream_set$ )
(declare-fun streams$h (A_a_fun_stream_stream_set$ )A_a_fun_stream_stream_stream_set$ )
(declare-fun streams$i (A_a_a_fun_tree_fun_set$ )A_a_a_fun_tree_fun_stream_set$ )
(declare-fun fun_app$aa (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )
(declare-fun fun_app$ab (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )
(declare-fun fun_app$ac (A_a_a_fun_tree_fun_tree_a_a_a_fun_tree_fun_tree_fun$ A_a_a_fun_tree_fun_tree$ )A_a_a_fun_tree_fun_tree$ )
(declare-fun fun_app$ad (A_a_a_fun_a_a_fun_fun_fun_tree_a_a_a_fun_a_a_fun_fun_fun_tree_fun$ A_a_a_fun_a_a_fun_fun_fun_tree$ )A_a_a_fun_a_a_fun_fun_fun_tree$ )
(declare-fun fun_app$ae (A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ A_a_a_fun_fun_tree$ )A_a_a_fun_fun_tree$ )
(declare-fun fun_app$af (A_tree_a_tree_fun$ A_tree$ )A_tree$ )
(declare-fun fun_app$ag (A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ A_a_fun_a_a_fun_fun_tree$ )A_a_fun_a_a_fun_fun_tree$ )
(declare-fun fun_app$ah (A_a_fun_tree_tree_a_a_fun_tree_tree_fun$ A_a_fun_tree_tree$ )A_a_fun_tree_tree$ )
(declare-fun map_tree$a (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun_tree$ )A_a_fun_a_fun_tree$ )
(declare-fun map_tree$b (A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )A_a_a_fun_tree_fun_tree_a_a_a_fun_tree_fun_tree_fun$ )
(declare-fun map_tree$c (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun_tree_a_a_a_fun_a_a_fun_fun_fun_tree_fun$ )
(declare-fun map_tree$d (A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_tree_a_a_a_fun_fun_tree_fun$ )
(declare-fun map_tree$e (A_a_fun$ )A_tree_a_tree_fun$ )
(declare-fun map_tree$f (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_fun_tree_a_a_fun_a_a_fun_fun_tree_fun$ )
(declare-fun map_tree$g (A_a_fun_tree_a_a_fun_tree_fun$ )A_a_fun_tree_tree_a_a_fun_tree_tree_fun$ )
(declare-fun map_tree$h (A_a_fun_a_a_fun_fun$ )A_a_fun_tree_a_a_fun_tree_fun$ )
(declare-fun siterate$a (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_stream$ )
(declare-fun siterate$b (A_a_fun_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ A_a_fun_a_fun_a_a_fun_a_fun_fun$ )A_a_fun_a_fun_a_a_fun_a_fun_fun_stream$ )
(declare-fun siterate$c (A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_stream$ )
(declare-fun siterate$d (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_stream$ )
(declare-fun siterate$e (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )A_a_a_fun_fun_a_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$f (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_stream$ )
(declare-fun siterate$g (A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ A_a_fun_tree_a_a_fun_tree_fun$ )A_a_fun_tree_a_a_fun_tree_fun_stream$ )
(declare-fun siterate$h (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )A_a_fun_a_a_fun_fun_stream$ )
(declare-fun siterate$i (A_a_fun$ A$ )A_stream$ )
(declare-fun siterate$j (A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree$ )A_a_fun_tree_stream$ )
(declare-fun siterate$k (A_a_fun_stream_a_a_fun_stream_fun$ A_a_fun_stream$ )A_a_fun_stream_stream$ )
(declare-fun siterate$l (A_stream_a_stream_fun$ A_stream$ )A_stream_stream$ )
(declare-fun siterate$m (A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ )A_a_fun_a_fun_stream$ )
(declare-fun siterate$n (A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ )A_a_a_fun_fun_stream$ )
(declare-fun siterate$o (A_a_fun_stream_stream_a_a_fun_stream_stream_fun$ A_a_fun_stream_stream$ )A_a_fun_stream_stream_stream$ )
(declare-fun siterate$p (A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ A_a_a_fun_tree_fun$ )A_a_a_fun_tree_fun_stream$ )
(declare-fun iso_tuple_update_accessor_eq_assist$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$a (A_a_fun_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ A_a_fun_a_fun_a_a_fun_a_fun_fun$ A_a_fun_a_fun$ A_a_fun_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$b (A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ A_a_a_fun_tree_fun$ A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ A_a_a_fun_tree_fun$ A_a_a_fun_tree_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$c (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$d (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ A_a_a_fun_fun$ A_a_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$e (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ A_a_fun_a_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$f (A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree$ A_a_fun_tree_a_a_fun_tree_fun$ A_a_fun_tree$ A_a_fun_tree$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$g (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ A_a_fun$ A_a_fun_a_a_fun_fun$ A_a_fun$ A_a_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_eq_assist$h (A_a_fun_a_a_fun_fun$ A_a_fun$ A$ A_a_fun$ A$ A$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$ (A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$a (A_a_fun_a_fun_a_a_fun_a_fun_fun_a_a_fun_a_fun_a_a_fun_a_fun_fun_fun$ A_a_fun_a_fun_a_a_fun_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$b (A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_a_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun_fun$ A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$c (A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun_fun$ A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$d (A_a_a_fun_fun_a_a_a_fun_fun_fun_a_a_a_fun_fun_a_a_a_fun_fun_fun_fun$ A_a_a_fun_fun_a_a_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$e (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$f (A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ A_a_fun_tree_a_a_fun_tree_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$g (A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ A_a_fun_a_a_fun_fun$ )Bool )
(declare-fun iso_tuple_update_accessor_cong_assist$h (A_a_fun_a_a_fun_fun$ A_a_fun$ )Bool )
(assert (! (forall ((?v0 A_a_fun_tree$ ))(! (= (fun_app$ uuc$ ?v0 )?v0 ):pattern ((fun_app$ uuc$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(! (= (fun_app$a uub$ ?v0 )?v0 ):pattern ((fun_app$a uub$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$b uua$ ?v0 )?v0 ):pattern ((fun_app$b uua$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$c uu$ ?v0 )?v0 ):pattern ((fun_app$c uu$ ?v0 )))):named a3 ))
(assert (! (not (= (st_ap$ (siterate$ id$ uu$ )t$ )t$ )):named a4 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun_stream$ ))(= (st_ap$a (siterate$a id$a id$b )?v0 )?v0 )):named a5 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_stream$ ))(= (st_ap$b (siterate$b id$c id$d )?v0 )?v0 )):named a6 ))
(assert (! (forall ((?v0 A_a_a_fun_tree_fun_stream$ ))(= (st_ap$c (siterate$c id$e id$f )?v0 )?v0 )):named a7 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_stream$ ))(= (st_ap$d (siterate$d id$g id$h )?v0 )?v0 )):named a8 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_stream$ ))(= (st_ap$e (siterate$e id$i id$j )?v0 )?v0 )):named a9 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_stream$ ))(= (st_ap$f (siterate$f id$k id$l )?v0 )?v0 )):named a10 ))
(assert (! (forall ((?v0 A_a_fun_tree_stream$ ))(= (st_ap$g (siterate$g id$m id$n )?v0 )?v0 )):named a11 ))
(assert (! (forall ((?v0 A_a_fun_stream$ ))(= (fun_app$d (st_ap$h (siterate$h id$l id$ ))?v0 )?v0 )):named a12 ))
(assert (! (forall ((?v0 A_stream$ ))(= (st_ap$ (siterate$ id$ id$o )?v0 )?v0 )):named a13 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ ))(! (= (fun_app$e id$b ?v0 )?v0 ):pattern ((fun_app$e id$b ?v0 )))):named a14 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ ))(! (= (fun_app$f id$d ?v0 )?v0 ):pattern ((fun_app$f id$d ?v0 )))):named a15 ))
(assert (! (forall ((?v0 A_a_a_fun_tree_fun$ ))(! (= (fun_app$g id$f ?v0 )?v0 ):pattern ((fun_app$g id$f ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ ))(! (= (fun_app$h id$h ?v0 )?v0 ):pattern ((fun_app$h id$h ?v0 )))):named a17 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$i id$j ?v0 )?v0 ):pattern ((fun_app$i id$j ?v0 )))):named a18 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$c id$o ?v0 )?v0 ):pattern ((fun_app$c id$o ?v0 )))):named a19 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(! (= (fun_app$a id$l ?v0 )?v0 ):pattern ((fun_app$a id$l ?v0 )))):named a20 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(! (= (fun_app$ id$n ?v0 )?v0 ):pattern ((fun_app$ id$n ?v0 )))):named a21 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$b id$ ?v0 )?v0 ):pattern ((fun_app$b id$ ?v0 )))):named a22 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ ))(! (= (fun_app$e id$b ?v0 )?v0 ):pattern ((fun_app$e id$b ?v0 )))):named a23 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ ))(! (= (fun_app$f id$d ?v0 )?v0 ):pattern ((fun_app$f id$d ?v0 )))):named a24 ))
(assert (! (forall ((?v0 A_a_a_fun_tree_fun$ ))(! (= (fun_app$g id$f ?v0 )?v0 ):pattern ((fun_app$g id$f ?v0 )))):named a25 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ ))(! (= (fun_app$h id$h ?v0 )?v0 ):pattern ((fun_app$h id$h ?v0 )))):named a26 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ ))(! (= (fun_app$i id$j ?v0 )?v0 ):pattern ((fun_app$i id$j ?v0 )))):named a27 ))
(assert (! (forall ((?v0 A$ ))(! (= (fun_app$c id$o ?v0 )?v0 ):pattern ((fun_app$c id$o ?v0 )))):named a28 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ ))(! (= (fun_app$a id$l ?v0 )?v0 ):pattern ((fun_app$a id$l ?v0 )))):named a29 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(! (= (fun_app$ id$n ?v0 )?v0 ):pattern ((fun_app$ id$n ?v0 )))):named a30 ))
(assert (! (forall ((?v0 A_a_fun$ ))(! (= (fun_app$b id$ ?v0 )?v0 ):pattern ((fun_app$b id$ ?v0 )))):named a31 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_a_a_fun_fun_fun_fun$ )(?v2 A_a_fun_a_a_fun_a_a_fun_fun_fun$ ))(=> (= ?v0 (fun_app$e ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$ id$a id$b ?v2 ?v1 ?v0 ?v2 ))):named a32 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_a_a_fun_a_fun_fun$ )(?v2 A_a_fun_a_fun$ ))(=> (= ?v0 (fun_app$f ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$a id$c id$d ?v2 ?v1 ?v0 ?v2 ))):named a33 ))
(assert (! (forall ((?v0 A_a_a_fun_tree_fun$ )(?v1 A_a_a_fun_tree_fun_a_a_a_fun_tree_fun_fun$ )(?v2 A_a_a_fun_tree_fun$ ))(=> (= ?v0 (fun_app$g ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$b id$e id$f ?v2 ?v1 ?v0 ?v2 ))):named a34 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_a_fun_a_a_fun_fun_fun_a_a_a_fun_a_a_fun_fun_fun_fun$ )(?v2 A_a_a_fun_a_a_fun_fun_fun$ ))(=> (= ?v0 (fun_app$h ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$c id$g id$h ?v2 ?v1 ?v0 ?v2 ))):named a35 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun_a_a_a_fun_fun_fun$ )(?v2 A_a_a_fun_fun$ ))(=> (= ?v0 (fun_app$i ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$d id$i id$j ?v2 ?v1 ?v0 ?v2 ))):named a36 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )(?v2 A_a_fun_a_a_fun_fun$ ))(=> (= ?v0 (fun_app$a ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$e id$k id$l ?v2 ?v1 ?v0 ?v2 ))):named a37 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree_a_a_fun_tree_fun$ )(?v2 A_a_fun_tree$ ))(=> (= ?v0 (fun_app$ ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$f id$m id$n ?v2 ?v1 ?v0 ?v2 ))):named a38 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_a_a_fun_fun$ )(?v2 A_a_fun$ ))(=> (= ?v0 (fun_app$b ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$g id$l id$ ?v2 ?v1 ?v0 ?v2 ))):named a39 ))
(assert (! (forall ((?v0 A$ )(?v1 A_a_fun$ )(?v2 A$ ))(=> (= ?v0 (fun_app$c ?v1 ?v2 ))(iso_tuple_update_accessor_eq_assist$h id$ id$o ?v2 ?v1 ?v0 ?v2 ))):named a40 ))
(assert (! (iso_tuple_update_accessor_cong_assist$ id$a id$b ):named a41 ))
(assert (! (iso_tuple_update_accessor_cong_assist$a id$c id$d ):named a42 ))
(assert (! (iso_tuple_update_accessor_cong_assist$b id$e id$f ):named a43 ))
(assert (! (iso_tuple_update_accessor_cong_assist$c id$g id$h ):named a44 ))
(assert (! (iso_tuple_update_accessor_cong_assist$d id$i id$j ):named a45 ))
(assert (! (iso_tuple_update_accessor_cong_assist$e id$k id$l ):named a46 ))
(assert (! (iso_tuple_update_accessor_cong_assist$f id$m id$n ):named a47 ))
(assert (! (iso_tuple_update_accessor_cong_assist$g id$l id$ ):named a48 ))
(assert (! (iso_tuple_update_accessor_cong_assist$h id$ id$o ):named a49 ))
(assert (! (= (fun_app$j (map_fun$ id$o )id$o )id$ ):named a50 ))
(assert (! (= (fun_app$k (map_fun$a id$ )id$ )id$l ):named a51 ))
(assert (! (= (fun_app$l (map_fun$b id$ )id$o )id$d ):named a52 ))
(assert (! (= (fun_app$m (map_fun$c id$o )id$ )id$j ):named a53 ))
(assert (! (= (fun_app$n (map_fun$d id$o )id$n )id$f ):named a54 ))
(assert (! (= (fun_app$o (map_fun$e id$n )id$o )id$p ):named a55 ))
(assert (! (= (fun_app$p (map_fun$f id$ )id$n )id$q ):named a56 ))
(assert (! (= (fun_app$q (map_fun$g id$n )id$ )id$r ):named a57 ))
(assert (! (= (fun_app$r (map_fun$h id$o )id$l )id$h ):named a58 ))
(assert (! (= (map_fun$i id$l id$o )id$s ):named a59 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun_set$ ))(=> (member$ ?v0 ?v1 )(member$a (siterate$ id$ ?v0 )(streams$ ?v1 )))):named a60 ))
(assert (! (forall ((?v0 A$ )(?v1 A_set$ ))(=> (member$b ?v0 ?v1 )(member$c (siterate$i id$o ?v0 )(streams$a ?v1 )))):named a61 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree_set$ ))(=> (member$d ?v0 ?v1 )(member$e (siterate$j id$n ?v0 )(streams$b ?v1 )))):named a62 ))
(assert (! (forall ((?v0 A_a_fun_stream$ )(?v1 A_a_fun_stream_set$ ))(=> (member$a ?v0 ?v1 )(member$f (siterate$k id$t ?v0 )(streams$c ?v1 )))):named a63 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun_set$ ))(=> (member$g ?v0 ?v1 )(member$h (siterate$h id$l ?v0 )(streams$d ?v1 )))):named a64 ))
(assert (! (forall ((?v0 A_stream$ )(?v1 A_stream_set$ ))(=> (member$c ?v0 ?v1 )(member$i (siterate$l id$u ?v0 )(streams$e ?v1 )))):named a65 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun_a_fun_set$ ))(=> (member$j ?v0 ?v1 )(member$k (siterate$m id$d ?v0 )(streams$f ?v1 )))):named a66 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A_a_a_fun_fun_set$ ))(=> (member$l ?v0 ?v1 )(member$m (siterate$n id$j ?v0 )(streams$g ?v1 )))):named a67 ))
(assert (! (forall ((?v0 A_a_fun_stream_stream$ )(?v1 A_a_fun_stream_stream_set$ ))(=> (member$f ?v0 ?v1 )(member$n (siterate$o id$v ?v0 )(streams$h ?v1 )))):named a68 ))
(assert (! (forall ((?v0 A_a_a_fun_tree_fun$ )(?v1 A_a_a_fun_tree_fun_set$ ))(=> (member$o ?v0 ?v1 )(member$p (siterate$p id$f ?v0 )(streams$i ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (fun_app$d (smap$ ?v0 )(siterate$ id$ ?v1 ))(siterate$ id$ (fun_app$b ?v0 ?v1 )))):named a70 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (smap$a ?v0 (siterate$i id$o ?v1 ))(siterate$i id$o (fun_app$c ?v0 ?v1 )))):named a71 ))
(assert (! (forall ((?v0 A_a_a_fun_fun$ )(?v1 A$ ))(= (smap$b ?v0 (siterate$i id$o ?v1 ))(siterate$ id$ (fun_app$s ?v0 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 A_a_fun_a_fun$ )(?v1 A_a_fun$ ))(= (smap$c ?v0 (siterate$ id$ ?v1 ))(siterate$i id$o (fun_app$t ?v0 ?v1 )))):named a73 ))
(assert (! (forall ((?v0 A_a_a_fun_tree_fun$ )(?v1 A$ ))(= (smap$d ?v0 (siterate$i id$o ?v1 ))(siterate$j id$n (fun_app$u ?v0 ?v1 )))):named a74 ))
(assert (! (forall ((?v0 A_a_fun_tree_a_fun$ )(?v1 A_a_fun_tree$ ))(= (smap$e ?v0 (siterate$j id$n ?v1 ))(siterate$i id$o (fun_app$v ?v0 ?v1 )))):named a75 ))
(assert (! (forall ((?v0 A_a_fun_tree_a_a_fun_fun$ )(?v1 A_a_fun_tree$ ))(= (smap$f ?v0 (siterate$j id$n ?v1 ))(siterate$ id$ (fun_app$w ?v0 ?v1 )))):named a76 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_tree_fun$ )(?v1 A_a_fun$ ))(= (smap$g ?v0 (siterate$ id$ ?v1 ))(siterate$j id$n (fun_app$x ?v0 ?v1 )))):named a77 ))
(assert (! (forall ((?v0 A_a_fun_tree_a_a_fun_tree_fun$ )(?v1 A_a_fun_tree$ ))(= (smap$h ?v0 (siterate$j id$n ?v1 ))(siterate$j id$n (fun_app$ ?v0 ?v1 )))):named a78 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun$ )(?v1 A$ ))(= (smap$i ?v0 (siterate$i id$o ?v1 ))(siterate$h id$l (fun_app$y ?v0 ?v1 )))):named a79 ))
(assert (! (= (comp$ id$ )id$j ):named a80 ))
(assert (! (= (comp$a id$o )id$d ):named a81 ))
(assert (! (= (comp$b id$l )id$b ):named a82 ))
(assert (! (= (comp$c id$l )id$h ):named a83 ))
(assert (! (= (comp$d id$n )id$f ):named a84 ))
(assert (! (= (comp$e id$ )id$l ):named a85 ))
(assert (! (= (comp$f id$o )id$ ):named a86 ))
(assert (! (forall ((?v0 A_a_fun_tree_a_a_fun_tree_fun_a_a_fun_tree_a_a_fun_tree_fun_fun$ )(?v1 A_a_fun_tree_a_a_fun_tree_fun$ ))(= (smap$j ?v0 (siterate$g ?v0 ?v1 ))(siterate$g ?v0 (fun_app$z ?v0 ?v1 )))):named a87 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_a_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ ))(= (smap$k ?v0 (siterate$f ?v0 ?v1 ))(siterate$f ?v0 (fun_app$aa ?v0 ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_a_fun_stream_a_a_fun_stream_fun$ )(?v1 A_a_fun_stream$ ))(= (smap$l ?v0 (siterate$k ?v0 ?v1 ))(siterate$k ?v0 (fun_app$d ?v0 ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_a_fun_tree_a_a_fun_tree_fun$ )(?v1 A_a_fun_tree$ ))(= (smap$h ?v0 (siterate$j ?v0 ?v1 ))(siterate$j ?v0 (fun_app$ ?v0 ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ ))(= (smap$a ?v0 (siterate$i ?v0 ?v1 ))(siterate$i ?v0 (fun_app$c ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_a_a_fun_a_a_fun_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun$ ))(= (smap$m ?v0 (siterate$h ?v0 ?v1 ))(siterate$h ?v0 (fun_app$a ?v0 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun$ ))(= (fun_app$d (smap$ ?v0 )(siterate$ ?v0 ?v1 ))(siterate$ ?v0 (fun_app$b ?v0 ?v1 )))):named a93 ))
(assert (! (= (fun_app$ab (map_fun$j uua$ )uub$ )id$b ):named a94 ))
(assert (! (= (fun_app$l (map_fun$b uua$ )uu$ )id$d ):named a95 ))
(assert (! (= (fun_app$n (map_fun$d uu$ )uuc$ )id$f ):named a96 ))
(assert (! (= (fun_app$r (map_fun$h uu$ )uub$ )id$h ):named a97 ))
(assert (! (= (fun_app$m (map_fun$c uu$ )uua$ )id$j ):named a98 ))
(assert (! (= (fun_app$k (map_fun$a uua$ )uua$ )id$l ):named a99 ))
(assert (! (= (fun_app$j (map_fun$ uu$ )uu$ )id$ ):named a100 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_a_a_fun_fun_fun_tree$ ))(= (map_tree$ id$b ?v0 )?v0 )):named a101 ))
(assert (! (forall ((?v0 A_a_fun_a_fun_tree$ ))(= (map_tree$a id$d ?v0 )?v0 )):named a102 ))
(assert (! (forall ((?v0 A_a_a_fun_tree_fun_tree$ ))(= (fun_app$ac (map_tree$b id$f )?v0 )?v0 )):named a103 ))
(assert (! (forall ((?v0 A_a_a_fun_a_a_fun_fun_fun_tree$ ))(= (fun_app$ad (map_tree$c id$h )?v0 )?v0 )):named a104 ))
(assert (! (forall ((?v0 A_a_a_fun_fun_tree$ ))(= (fun_app$ae (map_tree$d id$j )?v0 )?v0 )):named a105 ))
(assert (! (forall ((?v0 A_tree$ ))(= (fun_app$af (map_tree$e id$o )?v0 )?v0 )):named a106 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun_tree$ ))(= (fun_app$ag (map_tree$f id$l )?v0 )?v0 )):named a107 ))
(assert (! (forall ((?v0 A_a_fun_tree_tree$ ))(= (fun_app$ah (map_tree$g id$n )?v0 )?v0 )):named a108 ))
(assert (! (forall ((?v0 A_a_fun_tree$ ))(= (fun_app$ (map_tree$h id$ )?v0 )?v0 )):named a109 ))
(assert (! (= (map_tree$b id$f )id$w ):named a110 ))
(assert (! (= (map_tree$c id$h )id$x ):named a111 ))
(assert (! (= (map_tree$d id$j )id$y ):named a112 ))
(assert (! (= (map_tree$e id$o )id$z ):named a113 ))
(assert (! (= (map_tree$f id$l )id$aa ):named a114 ))
(assert (! (= (map_tree$g id$n )id$ab ):named a115 ))
(assert (! (= (map_tree$h id$ )id$n ):named a116 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (fun_app$c (fun_app$b (comp$f ?v0 )?v1 )?v2 )(fun_app$c ?v0 (fun_app$c ?v1 ?v2 ))):pattern ((fun_app$c (fun_app$b (comp$f ?v0 )?v1 )?v2 )))):named a117 ))
(assert (! (forall ((?v0 A_a_fun_a_a_fun_fun$ )(?v1 A_a_fun_a_a_fun_fun$ )(?v2 A_a_fun_a_a_fun_fun$ )(?v3 A_a_fun$ ))(! (= (fun_app$b (fun_app$a (fun_app$k (map_fun$a ?v0 )?v1 )?v2 )?v3 )(fun_app$b ?v1 (fun_app$b ?v2 (fun_app$b ?v0 ?v3 )))):pattern ((fun_app$b (fun_app$a (fun_app$k (map_fun$a ?v0 )?v1 )?v2 )?v3 )))):named a118 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_a_fun$ )(?v2 A_a_fun$ )(?v3 A$ ))(! (= (fun_app$c (fun_app$b (fun_app$j (map_fun$ ?v0 )?v1 )?v2 )?v3 )(fun_app$c ?v1 (fun_app$c ?v2 (fun_app$c ?v0 ?v3 )))):pattern ((fun_app$c (fun_app$b (fun_app$j (map_fun$ ?v0 )?v1 )?v2 )?v3 )))):named a119 ))
(assert (! (forall ((?v0 A_a_fun$ ))(= (fun_app$b (comp$f id$o )?v0 )?v0 )):named a120 ))
(assert (! (forall ((?v0 A_a_fun$ ))(= (fun_app$b (comp$f id$o )?v0 )?v0 )):named a121 ))
(check-sat )
;(get-unsat-core )
