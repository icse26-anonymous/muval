;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort Nat$ 0 )
(declare-sort Nat_nat_fun$ 0 )
(declare-sort Nat_bool_fun$ 0 )
(declare-sort Nat_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_bool_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_fun_fun$ 0 )
(declare-sort Nat_nat_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_nat_nat_prod_fun_fun$ 0 )
(declare-sort Nat_nat_nat_prod_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_prod_nat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_nat_prod_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_nat_prod_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_nat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ 0 )
(declare-sort Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ 0 )
(declare-codatatypes ()((Nat_tree$ (node$ (root$ Nat$ )(left$ Nat_tree$ )(right$ Nat_tree$ )))))
(declare-sort Dir$ 0)
(declare-sort Dir_list$ 0)
(declare-fun l$ ()Dir$)
(declare-fun r$ ()Dir$)
(declare-fun nil$ ()Dir_list$)
(declare-fun hd$ (Dir_list$)Dir$)
(declare-fun tl$ (Dir_list$)Dir_list$)
(declare-fun cons$ (Dir$ Dir_list$ )Dir_list$)
(declare-codatatypes ()((Nat_nat_prod_nat_fun_tree$ (node$a (select$ Nat_nat_prod_nat_fun$ )(selecta$ Nat_nat_prod_nat_fun_tree$ )(selectb$ Nat_nat_prod_nat_fun_tree$ )))))
(declare-sort Nat_nat_prod$ 0)
(declare-fun fst$ (Nat_nat_prod$)Nat$)
(declare-fun snd$ (Nat_nat_prod$)Nat$)
(declare-fun pair$ (Nat$ Nat$ )Nat_nat_prod$)
(declare-codatatypes ()((Nat_nat_prod_tree$ (node$b (root$a Nat_nat_prod$ )(left$a Nat_nat_prod_tree$ )(right$a Nat_nat_prod_tree$ )))(Nat_nat_fun_tree$ (node$c (selectc$ Nat_nat_fun$ )(selectd$ Nat_nat_fun_tree$ )(selecte$ Nat_nat_fun_tree$ )))(Nat_nat_nat_prod_fun_tree$ (node$d (selectf$ Nat_nat_nat_prod_fun$ )(selectg$ Nat_nat_nat_prod_fun_tree$ )(selecth$ Nat_nat_nat_prod_fun_tree$ )))(Nat_nat_prod_nat_nat_prod_fun_tree$ (node$e (selecti$ Nat_nat_prod_nat_nat_prod_fun$ )(selectj$ Nat_nat_prod_nat_nat_prod_fun_tree$ )(selectk$ Nat_nat_prod_nat_nat_prod_fun_tree$ )))(Nat_nat_fun_nat_fun_tree$ (node$f (selectl$ Nat_nat_fun_nat_fun$ )(selectm$ Nat_nat_fun_nat_fun_tree$ )(selectn$ Nat_nat_fun_nat_fun_tree$ )))(Nat_nat_nat_fun_fun_tree$ (node$g (selecto$ Nat_nat_nat_fun_fun$ )(selectp$ Nat_nat_nat_fun_fun_tree$ )(selectq$ Nat_nat_nat_fun_fun_tree$ )))(Nat_nat_nat_prod_fun_nat_fun_tree$ (node$h (selectr$ Nat_nat_nat_prod_fun_nat_fun$ )(selects$ Nat_nat_nat_prod_fun_nat_fun_tree$ )(selectt$ Nat_nat_nat_prod_fun_nat_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_fun_tree$ (node$i (selectu$ Nat_nat_prod_nat_fun_nat_fun$ )(selectv$ Nat_nat_prod_nat_fun_nat_fun_tree$ )(selectw$ Nat_nat_prod_nat_fun_nat_fun_tree$ )))(Nat_nat_fun_nat_nat_prod_fun_tree$ (node$j (selectx$ Nat_nat_fun_nat_nat_prod_fun$ )(selecty$ Nat_nat_fun_nat_nat_prod_fun_tree$ )(selectz$ Nat_nat_fun_nat_nat_prod_fun_tree$ )))(Nat_nat_nat_nat_prod_fun_fun_tree$ (node$k (selecua$ Nat_nat_nat_nat_prod_fun_fun$ )(selecub$ Nat_nat_nat_nat_prod_fun_fun_tree$ )(selecuc$ Nat_nat_nat_nat_prod_fun_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ (node$l (selecud$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )(selecue$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )(selecuf$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )))(Nat_nat_fun_nat_nat_fun_fun_tree$ (node$m (selecug$ Nat_nat_fun_nat_nat_fun_fun$ )(selecuh$ Nat_nat_fun_nat_nat_fun_fun_tree$ )(selecui$ Nat_nat_fun_nat_nat_fun_fun_tree$ )))(Nat_nat_nat_prod_nat_fun_fun_tree$ (node$n (selecuj$ Nat_nat_nat_prod_nat_fun_fun$ )(selecuk$ Nat_nat_nat_prod_nat_fun_fun_tree$ )(selecul$ Nat_nat_nat_prod_nat_fun_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$ (node$o (selecum$ Nat_nat_prod_nat_fun_nat_nat_prod_fun$ )(selecun$ Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$ )(selecuo$ Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$ )))(Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$ (node$p (selecup$ Nat_nat_prod_nat_nat_prod_nat_fun_fun$ )(selecuq$ Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$ )(selecur$ Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$ )))(Nat_nat_nat_prod_nat_fun_nat_fun_fun_tree$ (node$q (selecus$ Nat_nat_nat_prod_nat_fun_nat_fun_fun$ )(selecut$ Nat_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )(selecuu$ Nat_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ (node$r (selecuv$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ )(selecuw$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ )(selecux$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ (node$s (selecuy$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ )(selecuz$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ )(selecva$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ (node$t (selecvb$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )(selecvc$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )(selecvd$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ (node$u (selecve$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )(selecvf$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )(selecvg$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ (node$v (selecvh$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ )(selecvi$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ )(selecvj$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ )))(Nat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ (node$w (selecvk$ Nat_nat_nat_prod_fun_nat_nat_prod_fun$ )(selecvl$ Nat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )(selecvm$ Nat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_fun_nat_fun_tree$ (node$x (selecvn$ Nat_nat_prod_nat_fun_nat_fun_nat_fun$ )(selecvo$ Nat_nat_prod_nat_fun_nat_fun_nat_fun_tree$ )(selecvp$ Nat_nat_prod_nat_fun_nat_fun_nat_fun_tree$ )))(Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ (node$y (selecvq$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )(selecvr$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )(selecvs$ Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun_tree$ (node$z (selecvt$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun$ )(selecvu$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun_tree$ )(selecvv$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ (node$aa (selecvw$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun$ )(selecvx$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )(selecvy$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ (node$ab (selecvz$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )(selecwa$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )(selecwb$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )))(Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ (node$ac (selecwc$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )(selecwd$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )(selecwe$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )))(Nat_tree_tree$ (node$ad (root$b Nat_tree$ )(left$b Nat_tree_tree$ )(right$b Nat_tree_tree$ )))(Nat_tree_tree_tree$ (node$ae (root$c Nat_tree_tree$ )(left$c Nat_tree_tree_tree$ )(right$c Nat_tree_tree_tree$ )))))
(declare-fun p$ ()Dir_list$ )
(declare-fun uu$ ()Nat_nat_prod_nat_fun$ )
(declare-fun den$ ()Nat_tree$ )
(declare-fun uua$ ()Nat_nat_bool_fun_fun$ )
(declare-fun uub$ (Nat_nat_prod$ )Nat_nat_prod_nat_fun_nat_fun$ )
(declare-fun uuc$ (Nat$ )Nat_nat_fun_nat_fun$ )
(declare-fun uud$ (Nat$ )Nat_nat_nat_prod_fun_nat_nat_prod_fun$ )
(declare-fun uue$ (Nat_nat_prod_nat_fun$ )Nat_nat_prod_nat_fun_nat_fun_nat_fun$ )
(declare-fun uuf$ (Nat_nat_prod$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )
(declare-fun uug$ (Nat_nat_prod_nat_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )
(declare-fun uuh$ (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun$ )
(declare-fun uui$ (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun$ )
(declare-fun uuj$ (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )
(declare-fun uuk$ (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )
(declare-fun uul$ (Nat$ )Nat_nat_prod_nat_fun$ )
(declare-fun uum$ (Nat$ )Nat_nat_fun$ )
(declare-fun uun$ (Nat_nat_prod$ )Nat_nat_nat_prod_fun$ )
(declare-fun uuo$ (Nat_nat_prod$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun uup$ (Nat$ )Nat_nat_prod_nat_fun_nat_fun$ )
(declare-fun uuq$ (Nat_nat_prod_nat_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )
(declare-fun uur$ (Nat$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ )
(declare-fun uus$ (Nat_nat_prod$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ )
(declare-fun uut$ (Nat_nat_prod_nat_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )
(declare-fun uuu$ (Nat_nat_prod_nat_fun_nat_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )
(declare-fun uuv$ (Bool Nat_nat_bool_fun_fun$ )Nat_nat_bool_fun_fun$ )
(declare-fun less$ (Nat$ )Nat_bool_fun$ )
(declare-fun zero$ ()Nat$ )
(declare-fun root$d (Nat_nat_fun_tree$ )Nat_nat_fun$ )
(declare-fun root$e (Nat_nat_prod_nat_fun_tree$ )Nat_nat_prod_nat_fun$ )
(declare-fun root$f (Nat_nat_nat_prod_fun_tree$ )Nat_nat_nat_prod_fun$ )
(declare-fun root$g (Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun$ )
(declare-fun root$h (Nat_nat_fun_nat_fun_tree$ )Nat_nat_fun_nat_fun$ )
(declare-fun root$i (Nat_nat_nat_fun_fun_tree$ )Nat_nat_nat_fun_fun$ )
(declare-fun root$j (Nat_nat_nat_prod_fun_nat_fun_tree$ Nat_nat_nat_prod_fun$ )Nat$ )
(declare-fun root$k (Nat_nat_prod_nat_fun_nat_fun_tree$ )Nat_nat_prod_nat_fun_nat_fun$ )
(declare-fun root$l (Nat_nat_fun_nat_nat_prod_fun_tree$ Nat_nat_fun$ )Nat_nat_prod$ )
(declare-fun root$m (Nat_nat_nat_nat_prod_fun_fun_tree$ )Nat_nat_nat_nat_prod_fun_fun$ )
(declare-fun root$n (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )
(declare-fun root$o (Nat_nat_fun_nat_nat_fun_fun_tree$ )Nat_nat_fun_nat_nat_fun_fun$ )
(declare-fun zero$a ()Nat_tree_tree_tree$ )
(declare-fun zero$b ()Nat_tree_tree$ )
(declare-fun zero$c ()Nat_tree$ )
(declare-fun fun_app$ (Nat_nat_prod_nat_fun$ Nat_nat_prod$ )Nat$ )
(declare-fun tree_ap$ (Nat_nat_prod_nat_fun_tree$ Nat_nat_prod_tree$ )Nat_tree$ )
(declare-fun fun_app$a (Nat_bool_fun$ Nat$ )Bool )
(declare-fun fun_app$b (Nat_nat_bool_fun_fun$ Nat$ )Nat_bool_fun$ )
(declare-fun fun_app$c (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$d (Nat_nat_prod_nat_nat_prod_fun$ Nat_nat_prod$ )Nat_nat_prod$ )
(declare-fun fun_app$e (Nat_nat_prod_nat_fun_nat_fun$ Nat_nat_prod_nat_fun$ )Nat$ )
(declare-fun fun_app$f (Nat_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_nat_prod_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$g (Nat_nat_nat_prod_fun$ Nat$ )Nat_nat_prod$ )
(declare-fun fun_app$h (Nat_nat_fun_nat_fun$ Nat_nat_fun$ )Nat$ )
(declare-fun fun_app$i (Nat_nat_fun$ Nat$ )Nat$ )
(declare-fun fun_app$j (Nat_nat_prod_nat_fun_nat_fun_nat_fun$ Nat_nat_prod_nat_fun_nat_fun$ )Nat$ )
(declare-fun fun_app$k (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun$ )
(declare-fun fun_app$l (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ Nat_nat_prod_nat_fun$ )Nat_nat_prod_nat_fun$ )
(declare-fun fun_app$m (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$n (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$o (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ )Nat$ )
(declare-fun fun_app$p (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat$ )
(declare-fun fun_app$q (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun$ )
(declare-fun fun_app$r (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_fun$ )
(declare-fun fun_app$s (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_fun$ )
(declare-fun fun_app$t (Nat_nat_nat_prod_nat_fun_fun$ Nat$ )Nat_nat_prod_nat_fun$ )
(declare-fun fun_app$u (Nat_nat_prod_nat_fun_nat_nat_prod_fun$ Nat_nat_prod_nat_fun$ )Nat_nat_prod$ )
(declare-fun fun_app$v (Nat_nat_prod_nat_nat_prod_nat_fun_fun$ Nat_nat_prod$ )Nat_nat_prod_nat_fun$ )
(declare-fun fun_app$w (Nat_nat_nat_prod_nat_fun_nat_fun_fun$ Nat$ )Nat_nat_prod_nat_fun_nat_fun$ )
(declare-fun fun_app$x (Nat_nat_nat_fun_fun$ Nat$ )Nat_nat_fun$ )
(declare-fun fun_app$y (Nat_nat_nat_nat_prod_fun_fun$ Nat$ )Nat_nat_nat_prod_fun$ )
(declare-fun tree_ap$a (Nat_nat_fun_tree$ Nat_tree$ )Nat_tree$ )
(declare-fun tree_ap$b (Nat_nat_nat_prod_fun_tree$ Nat_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$c (Nat_nat_prod_nat_nat_prod_fun_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$d (Nat_nat_fun_nat_fun_tree$ Nat_nat_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$e (Nat_nat_nat_fun_fun_tree$ Nat_tree$ )Nat_nat_fun_tree$ )
(declare-fun tree_ap$f (Nat_nat_nat_prod_fun_nat_fun_tree$ Nat_nat_nat_prod_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$g (Nat_nat_prod_nat_fun_nat_fun_tree$ Nat_nat_prod_nat_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$h (Nat_nat_fun_nat_nat_prod_fun_tree$ Nat_nat_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$i (Nat_nat_nat_nat_prod_fun_fun_tree$ Nat_tree$ )Nat_nat_nat_prod_fun_tree$ )
(declare-fun tree_ap$j (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ Nat_nat_prod_nat_fun_tree$ )Nat_nat_prod_nat_fun_tree$ )
(declare-fun tree_ap$k (Nat_nat_nat_prod_nat_fun_fun_tree$ Nat_tree$ )Nat_nat_prod_nat_fun_tree$ )
(declare-fun tree_ap$l (Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$m (Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$ Nat_nat_prod_tree$ )Nat_nat_prod_nat_fun_tree$ )
(declare-fun tree_ap$n (Nat_nat_nat_prod_nat_fun_nat_fun_fun_tree$ Nat_tree$ )Nat_nat_prod_nat_fun_nat_fun_tree$ )
(declare-fun tree_ap$o (Nat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$p (Nat_nat_prod_nat_fun_nat_fun_nat_fun_tree$ Nat_nat_prod_nat_fun_nat_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$q (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$r (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )Nat_nat_prod_nat_fun_tree$ )
(declare-fun tree_ap$s (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$t (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ )Nat_tree$ )
(declare-fun tree_ap$u (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$v (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ )Nat_nat_prod_tree$ )
(declare-fun tree_ap$w (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )Nat_nat_prod_nat_fun_tree$ )
(declare-fun tree_ap$x (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )Nat_nat_prod_nat_fun_nat_fun_tree$ )
(declare-fun tree_ap$y (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )Nat_nat_prod_nat_fun_nat_fun_tree$ )
(declare-fun case_prod$ (Nat_nat_bool_fun_fun$ Nat_nat_prod$ )Bool )
(declare-fun tree_pure$ (Nat_nat_prod_nat_fun$ )Nat_nat_prod_nat_fun_tree$ )
(declare-fun tree_pure$a (Nat$ )Nat_tree$ )
(declare-fun tree_pure$b (Nat_nat_prod$ )Nat_nat_prod_tree$ )
(declare-fun tree_pure$c (Nat_nat_fun$ )Nat_nat_fun_tree$ )
(declare-fun tree_pure$d (Nat_nat_nat_prod_fun$ )Nat_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$e (Nat_nat_prod_nat_fun_nat_fun$ )Nat_nat_prod_nat_fun_nat_fun_tree$ )
(declare-fun tree_pure$f (Nat_nat_prod_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$g (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )
(declare-fun tree_pure$h (Nat_nat_fun_nat_fun$ )Nat_nat_fun_nat_fun_tree$ )
(declare-fun tree_pure$i (Nat_nat_fun_nat_nat_fun_fun$ )Nat_nat_fun_nat_nat_fun_fun_tree$ )
(declare-fun tree_pure$j (Nat_nat_nat_prod_nat_fun_fun$ )Nat_nat_nat_prod_nat_fun_fun_tree$ )
(declare-fun tree_pure$k (Nat_nat_prod_nat_fun_nat_nat_prod_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$l (Nat_nat_prod_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_nat_prod_nat_fun_fun_tree$ )
(declare-fun tree_pure$m (Nat_nat_nat_prod_nat_fun_nat_fun_fun$ )Nat_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )
(declare-fun tree_pure$n (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$o (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ )
(declare-fun tree_pure$p (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )
(declare-fun tree_pure$q (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )
(declare-fun tree_pure$r (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun_tree$ )
(declare-fun tree_pure$s (Nat_nat_nat_prod_fun_nat_nat_prod_fun$ )Nat_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$t (Nat_nat_prod_nat_fun_nat_fun_nat_fun$ )Nat_nat_prod_nat_fun_nat_fun_nat_fun_tree$ )
(declare-fun tree_pure$u (Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun$ )Nat_nat_prod_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$v (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_nat_fun_tree$ )
(declare-fun tree_pure$w (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_nat_nat_prod_fun_tree$ )
(declare-fun tree_pure$x (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )
(declare-fun tree_pure$y (Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )
(declare-fun tree_pure$z (Nat_tree_tree$ )Nat_tree_tree_tree$ )
(declare-fun tree_pure$aa (Nat_tree$ )Nat_tree_tree$ )
(declare-fun stern_brocot$ ()Nat_nat_prod_tree$ )
(declare-fun traverse_tree$ (Dir_list$ Nat_tree$ )Nat_tree$ )
(declare-fun traverse_tree$a (Dir_list$ Nat_nat_prod_tree$ )Nat_nat_prod_tree$ )
(declare-fun traverse_tree$b (Dir_list$ Nat_nat_fun_tree$ )Nat_nat_fun_tree$ )
(declare-fun traverse_tree$c (Dir_list$ Nat_nat_prod_nat_fun_tree$ )Nat_nat_prod_nat_fun_tree$ )
(declare-fun traverse_tree$d (Dir_list$ Nat_nat_nat_prod_fun_tree$ )Nat_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$e (Dir_list$ Nat_nat_prod_nat_nat_prod_fun_tree$ )Nat_nat_prod_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$f (Dir_list$ Nat_nat_fun_nat_fun_tree$ )Nat_nat_fun_nat_fun_tree$ )
(declare-fun traverse_tree$g (Dir_list$ Nat_nat_nat_fun_fun_tree$ )Nat_nat_nat_fun_fun_tree$ )
(declare-fun traverse_tree$h (Dir_list$ Nat_nat_nat_prod_fun_nat_fun_tree$ )Nat_nat_nat_prod_fun_nat_fun_tree$ )
(declare-fun traverse_tree$i (Dir_list$ Nat_nat_prod_nat_fun_nat_fun_tree$ )Nat_nat_prod_nat_fun_nat_fun_tree$ )
(declare-fun traverse_tree$j (Dir_list$ Nat_nat_fun_nat_nat_prod_fun_tree$ )Nat_nat_fun_nat_nat_prod_fun_tree$ )
(declare-fun traverse_tree$k (Dir_list$ Nat_nat_nat_nat_prod_fun_fun_tree$ )Nat_nat_nat_nat_prod_fun_fun_tree$ )
(declare-fun traverse_tree$l (Dir_list$ Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )
(declare-fun traverse_tree$m (Dir_list$ Nat_nat_fun_nat_nat_fun_fun_tree$ )Nat_nat_fun_nat_nat_fun_fun_tree$ )
(assert (! (forall ((?v0 Nat_nat_prod$ ))(! (= (fun_app$ uu$ ?v0 )(snd$ ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$a (fun_app$b uua$ ?v0 )?v1 )(and (fun_app$a (less$ zero$ )?v0 )(fun_app$a (less$ zero$ )?v1 ))):pattern ((fun_app$a (fun_app$b uua$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(! (= (fun_app$c (uuf$ ?v0 )?v1 )(fun_app$d ?v1 ?v0 )):pattern ((fun_app$c (uuf$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_nat_fun$ ))(! (= (fun_app$e (uub$ ?v0 )?v1 )(fun_app$ ?v1 ?v0 )):pattern ((fun_app$e (uub$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_nat_prod_fun$ ))(! (= (fun_app$f (uud$ ?v0 )?v1 )(fun_app$g ?v1 ?v0 )):pattern ((fun_app$f (uud$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_fun$ ))(! (= (fun_app$h (uuc$ ?v0 )?v1 )(fun_app$i ?v1 ?v0 )):pattern ((fun_app$h (uuc$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_fun$ ))(! (= (fun_app$j (uue$ ?v0 )?v1 )(fun_app$e ?v1 ?v0 )):pattern ((fun_app$j (uue$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(! (= (fun_app$k (uug$ ?v0 )?v1 )(fun_app$l ?v1 ?v0 )):pattern ((fun_app$k (uug$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ ))(! (= (fun_app$m (uui$ ?v0 )?v1 )(fun_app$n ?v1 ?v0 )):pattern ((fun_app$m (uui$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ ))(! (= (fun_app$o (uuh$ ?v0 )?v1 )(fun_app$p ?v1 ?v0 )):pattern ((fun_app$o (uuh$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ ))(! (= (fun_app$q (uuj$ ?v0 )?v1 )(fun_app$k ?v1 ?v0 )):pattern ((fun_app$q (uuj$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ ))(! (= (fun_app$r (uuk$ ?v0 )?v1 )(fun_app$s ?v1 ?v0 )):pattern ((fun_app$r (uuk$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 Bool )(?v1 Nat_nat_bool_fun_fun$ )(?v2 Nat$ )(?v3 Nat$ ))(! (= (fun_app$a (fun_app$b (uuv$ ?v0 ?v1 )?v2 )?v3 )(and ?v0 (fun_app$a (fun_app$b ?v1 ?v2 )?v3 ))):pattern ((fun_app$a (fun_app$b (uuv$ ?v0 ?v1 )?v2 )?v3 )))):named a12 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod$ ))(! (= (fun_app$d (uuo$ ?v0 )?v1 )?v0 ):pattern ((fun_app$d (uuo$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat$ ))(! (= (fun_app$g (uun$ ?v0 )?v1 )?v0 ):pattern ((fun_app$g (uun$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(! (= (fun_app$n (uus$ ?v0 )?v1 )?v0 ):pattern ((fun_app$n (uus$ ?v0 )?v1 )))):named a15 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_prod$ ))(! (= (fun_app$ (uul$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ (uul$ ?v0 )?v1 )))):named a16 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(! (= (fun_app$i (uum$ ?v0 )?v1 )?v0 ):pattern ((fun_app$i (uum$ ?v0 )?v1 )))):named a17 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_prod_nat_fun$ ))(! (= (fun_app$e (uup$ ?v0 )?v1 )?v0 ):pattern ((fun_app$e (uup$ ?v0 )?v1 )))):named a18 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(! (= (fun_app$p (uur$ ?v0 )?v1 )?v0 ):pattern ((fun_app$p (uur$ ?v0 )?v1 )))):named a19 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod_nat_fun$ ))(! (= (fun_app$l (uuq$ ?v0 )?v1 )?v0 ):pattern ((fun_app$l (uuq$ ?v0 )?v1 )))):named a20 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(! (= (fun_app$k (uut$ ?v0 )?v1 )?v0 ):pattern ((fun_app$k (uut$ ?v0 )?v1 )))):named a21 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(! (= (fun_app$s (uuu$ ?v0 )?v1 )?v0 ):pattern ((fun_app$s (uuu$ ?v0 )?v1 )))):named a22 ))
(assert (! (not (fun_app$a (less$ zero$ )(root$ (traverse_tree$ p$ (tree_ap$ (tree_pure$ uu$ )stern_brocot$ ))))):named a23 ))
(assert (! (case_prod$ uua$ (root$a (traverse_tree$a p$ stern_brocot$ ))):named a24 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_fun_tree$ )(?v2 Nat_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$a ?v1 ?v2 ))(tree_ap$a (traverse_tree$b ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a25 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_fun_tree$ )(?v2 Nat_nat_prod_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$ ?v1 ?v2 ))(tree_ap$ (traverse_tree$c ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a26 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_nat_prod_fun_tree$ )(?v2 Nat_tree$ ))(= (traverse_tree$a ?v0 (tree_ap$b ?v1 ?v2 ))(tree_ap$b (traverse_tree$d ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a27 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v2 Nat_nat_prod_tree$ ))(= (traverse_tree$a ?v0 (tree_ap$c ?v1 ?v2 ))(tree_ap$c (traverse_tree$e ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a28 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_fun_nat_fun_tree$ )(?v2 Nat_nat_fun_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$d ?v1 ?v2 ))(tree_ap$d (traverse_tree$f ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a29 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_nat_fun_fun_tree$ )(?v2 Nat_tree$ ))(= (traverse_tree$b ?v0 (tree_ap$e ?v1 ?v2 ))(tree_ap$e (traverse_tree$g ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a30 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_nat_prod_fun_nat_fun_tree$ )(?v2 Nat_nat_nat_prod_fun_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$f ?v1 ?v2 ))(tree_ap$f (traverse_tree$h ?v0 ?v1 )(traverse_tree$d ?v0 ?v2 )))):named a31 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_fun_nat_fun_tree$ )(?v2 Nat_nat_prod_nat_fun_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$g ?v1 ?v2 ))(tree_ap$g (traverse_tree$i ?v0 ?v1 )(traverse_tree$c ?v0 ?v2 )))):named a32 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_fun_nat_nat_prod_fun_tree$ )(?v2 Nat_nat_fun_tree$ ))(= (traverse_tree$a ?v0 (tree_ap$h ?v1 ?v2 ))(tree_ap$h (traverse_tree$j ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a33 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_nat_nat_prod_fun_fun_tree$ )(?v2 Nat_tree$ ))(= (traverse_tree$d ?v0 (tree_ap$i ?v1 ?v2 ))(tree_ap$i (traverse_tree$k ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a34 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat$ ))(= (traverse_tree$ ?v0 (tree_pure$a ?v1 ))(tree_pure$a ?v1 ))):named a35 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod$ ))(= (traverse_tree$a ?v0 (tree_pure$b ?v1 ))(tree_pure$b ?v1 ))):named a36 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_fun$ ))(= (traverse_tree$c ?v0 (tree_pure$ ?v1 ))(tree_pure$ ?v1 ))):named a37 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_fun$ ))(= (traverse_tree$b ?v0 (tree_pure$c ?v1 ))(tree_pure$c ?v1 ))):named a38 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_nat_prod_fun$ ))(= (traverse_tree$d ?v0 (tree_pure$d ?v1 ))(tree_pure$d ?v1 ))):named a39 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_fun_nat_fun$ ))(= (traverse_tree$i ?v0 (tree_pure$e ?v1 ))(tree_pure$e ?v1 ))):named a40 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_nat_prod_fun$ ))(= (traverse_tree$e ?v0 (tree_pure$f ?v1 ))(tree_pure$f ?v1 ))):named a41 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (traverse_tree$l ?v0 (tree_pure$g ?v1 ))(tree_pure$g ?v1 ))):named a42 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_fun_nat_fun$ ))(= (traverse_tree$f ?v0 (tree_pure$h ?v1 ))(tree_pure$h ?v1 ))):named a43 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 Nat_nat_fun_nat_nat_fun_fun$ ))(= (traverse_tree$m ?v0 (tree_pure$i ?v1 ))(tree_pure$i ?v1 ))):named a44 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$ (tree_pure$ ?v0 )(tree_pure$b ?v1 ))(tree_pure$a (fun_app$ ?v0 ?v1 )))):named a45 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun$ ))(= (tree_ap$j (tree_pure$g ?v0 )(tree_pure$ ?v1 ))(tree_pure$ (fun_app$l ?v0 ?v1 )))):named a46 ))
(assert (! (forall ((?v0 Nat_nat_fun$ )(?v1 Nat$ ))(= (tree_ap$a (tree_pure$c ?v0 )(tree_pure$a ?v1 ))(tree_pure$a (fun_app$i ?v0 ?v1 )))):named a47 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun$ )(?v1 Nat$ ))(= (tree_ap$b (tree_pure$d ?v0 )(tree_pure$a ?v1 ))(tree_pure$b (fun_app$g ?v0 ?v1 )))):named a48 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$c (tree_pure$f ?v0 )(tree_pure$b ?v1 ))(tree_pure$b (fun_app$d ?v0 ?v1 )))):named a49 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_nat_fun_fun$ )(?v1 Nat$ ))(= (tree_ap$k (tree_pure$j ?v0 )(tree_pure$a ?v1 ))(tree_pure$ (fun_app$t ?v0 ?v1 )))):named a50 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun$ )(?v1 Nat_nat_prod_nat_fun$ ))(= (tree_ap$g (tree_pure$e ?v0 )(tree_pure$ ?v1 ))(tree_pure$a (fun_app$e ?v0 ?v1 )))):named a51 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_fun$ ))(= (tree_ap$l (tree_pure$k ?v0 )(tree_pure$ ?v1 ))(tree_pure$b (fun_app$u ?v0 ?v1 )))):named a52 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$m (tree_pure$l ?v0 )(tree_pure$b ?v1 ))(tree_pure$ (fun_app$v ?v0 ?v1 )))):named a53 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_nat_fun_nat_fun_fun$ )(?v1 Nat$ ))(= (tree_ap$n (tree_pure$m ?v0 )(tree_pure$a ?v1 ))(tree_pure$e (fun_app$w ?v0 ?v1 )))):named a54 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun$ ))(= (= (tree_pure$n ?v0 )(tree_pure$n ?v1 ))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun$ ))(= (= (tree_pure$o ?v0 )(tree_pure$o ?v1 ))(= ?v0 ?v1 ))):named a56 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun$ ))(= (= (tree_pure$p ?v0 )(tree_pure$p ?v1 ))(= ?v0 ?v1 ))):named a57 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun$ ))(= (= (tree_pure$q ?v0 )(tree_pure$q ?v1 ))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_fun$ ))(= (= (tree_pure$r ?v0 )(tree_pure$r ?v1 ))(= ?v0 ?v1 ))):named a59 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a60 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat$ ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a61 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (= (tree_pure$g ?v0 )(tree_pure$g ?v1 ))(= ?v0 ?v1 ))):named a62 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_fun$ ))(= (= (tree_pure$e ?v0 )(tree_pure$e ?v1 ))(= ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod_nat_fun$ ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_tree$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$ ?v0 (tree_pure$b ?v1 ))(tree_ap$g (tree_pure$e (uub$ ?v1 ))?v0 ))):named a65 ))
(assert (! (forall ((?v0 Nat_nat_fun_tree$ )(?v1 Nat$ ))(= (tree_ap$a ?v0 (tree_pure$a ?v1 ))(tree_ap$d (tree_pure$h (uuc$ ?v1 ))?v0 ))):named a66 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun_tree$ )(?v1 Nat$ ))(= (tree_ap$b ?v0 (tree_pure$a ?v1 ))(tree_ap$o (tree_pure$s (uud$ ?v1 ))?v0 ))):named a67 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun$ ))(= (tree_ap$g ?v0 (tree_pure$ ?v1 ))(tree_ap$p (tree_pure$t (uue$ ?v1 ))?v0 ))):named a68 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod$ ))(= (tree_ap$c ?v0 (tree_pure$b ?v1 ))(tree_ap$q (tree_pure$u (uuf$ ?v1 ))?v0 ))):named a69 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun$ ))(= (tree_ap$j ?v0 (tree_pure$ ?v1 ))(tree_ap$r (tree_pure$p (uug$ ?v1 ))?v0 ))):named a70 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$s ?v0 (tree_pure$g ?v1 ))(tree_ap$t (tree_pure$v (uuh$ ?v1 ))?v0 ))):named a71 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$u ?v0 (tree_pure$g ?v1 ))(tree_ap$v (tree_pure$w (uui$ ?v1 ))?v0 ))):named a72 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$r ?v0 (tree_pure$g ?v1 ))(tree_ap$w (tree_pure$x (uuj$ ?v1 ))?v0 ))):named a73 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$x ?v0 (tree_pure$g ?v1 ))(tree_ap$y (tree_pure$y (uuk$ ?v1 ))?v0 ))):named a74 ))
(assert (! (forall ((?v0 Nat_nat_fun_tree$ )(?v1 Nat_tree$ ))(= (root$ (tree_ap$a ?v0 ?v1 ))(fun_app$i (root$d ?v0 )(root$ ?v1 )))):named a75 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (root$ (tree_ap$ ?v0 ?v1 ))(fun_app$ (root$e ?v0 )(root$a ?v1 )))):named a76 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun_tree$ )(?v1 Nat_tree$ ))(= (root$a (tree_ap$b ?v0 ?v1 ))(fun_app$g (root$f ?v0 )(root$ ?v1 )))):named a77 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_tree$ ))(= (root$a (tree_ap$c ?v0 ?v1 ))(fun_app$d (root$g ?v0 )(root$a ?v1 )))):named a78 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(= (root$ (tree_ap$d ?v0 ?v1 ))(fun_app$h (root$h ?v0 )(root$d ?v1 )))):named a79 ))
(assert (! (forall ((?v0 Nat_nat_nat_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (root$d (tree_ap$e ?v0 ?v1 ))(fun_app$x (root$i ?v0 )(root$ ?v1 )))):named a80 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun_nat_fun_tree$ )(?v1 Nat_nat_nat_prod_fun_tree$ ))(= (root$ (tree_ap$f ?v0 ?v1 ))(root$j ?v0 (root$f ?v1 )))):named a81 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_tree$ ))(= (root$ (tree_ap$g ?v0 ?v1 ))(fun_app$e (root$k ?v0 )(root$e ?v1 )))):named a82 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(= (root$a (tree_ap$h ?v0 ?v1 ))(root$l ?v0 (root$d ?v1 )))):named a83 ))
(assert (! (forall ((?v0 Nat_nat_nat_nat_prod_fun_fun_tree$ )(?v1 Nat_tree$ ))(= (root$f (tree_ap$i ?v0 ?v1 ))(fun_app$y (root$m ?v0 )(root$ ?v1 )))):named a84 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_prod_tree$ ))(= (tree_ap$ (tree_pure$ (uul$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a85 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_tree$ ))(= (tree_ap$a (tree_pure$c (uum$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a86 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_tree$ ))(= (tree_ap$b (tree_pure$d (uun$ ?v0 ))?v1 )(tree_pure$b ?v0 ))):named a87 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_tree$ ))(= (tree_ap$c (tree_pure$f (uuo$ ?v0 ))?v1 )(tree_pure$b ?v0 ))):named a88 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_prod_nat_fun_tree$ ))(= (tree_ap$g (tree_pure$e (uup$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a89 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_tree$ ))(= (tree_ap$j (tree_pure$g (uuq$ ?v0 ))?v1 )(tree_pure$ ?v0 ))):named a90 ))
(assert (! (forall ((?v0 Nat$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$s (tree_pure$o (uur$ ?v0 ))?v1 )(tree_pure$a ?v0 ))):named a91 ))
(assert (! (forall ((?v0 Nat_nat_prod$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$u (tree_pure$n (uus$ ?v0 ))?v1 )(tree_pure$b ?v0 ))):named a92 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$r (tree_pure$p (uut$ ?v0 ))?v1 )(tree_pure$ ?v0 ))):named a93 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$x (tree_pure$q (uuu$ ?v0 ))?v1 )(tree_pure$e ?v0 ))):named a94 ))
(assert (! (forall ((?v0 Nat$ ))(= (root$ (tree_pure$a ?v0 ))?v0 )):named a95 ))
(assert (! (forall ((?v0 Nat_nat_prod$ ))(= (root$a (tree_pure$b ?v0 ))?v0 )):named a96 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun$ ))(= (root$e (tree_pure$ ?v0 ))?v0 )):named a97 ))
(assert (! (forall ((?v0 Nat_nat_fun$ ))(= (root$d (tree_pure$c ?v0 ))?v0 )):named a98 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun$ ))(= (root$f (tree_pure$d ?v0 ))?v0 )):named a99 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun$ ))(= (root$g (tree_pure$f ?v0 ))?v0 )):named a100 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun$ ))(= (root$k (tree_pure$e ?v0 ))?v0 )):named a101 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (root$n (tree_pure$g ?v0 ))?v0 )):named a102 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_fun$ ))(= (root$h (tree_pure$h ?v0 ))?v0 )):named a103 ))
(assert (! (forall ((?v0 Nat_nat_fun_nat_nat_fun_fun$ ))(= (root$o (tree_pure$i ?v0 ))?v0 )):named a104 ))
(assert (! (= zero$a (tree_pure$z zero$b )):named a105 ))
(assert (! (= zero$b (tree_pure$aa zero$c )):named a106 ))
(assert (! (= zero$c (tree_pure$a zero$ )):named a107 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod$ ))(= (tree_ap$ ?v0 (tree_pure$b ?v2 ))(tree_ap$ ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a108 ))
(assert (! (forall ((?v0 Nat_nat_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(=> (forall ((?v2 Nat$ ))(= (tree_ap$a ?v0 (tree_pure$a ?v2 ))(tree_ap$a ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a109 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat$ ))(= (tree_ap$b ?v0 (tree_pure$a ?v2 ))(tree_ap$b ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a110 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun$ ))(= (tree_ap$g ?v0 (tree_pure$ ?v2 ))(tree_ap$g ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a111 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod$ ))(= (tree_ap$c ?v0 (tree_pure$b ?v2 ))(tree_ap$c ?v1 (tree_pure$b ?v2 ))))(= ?v0 ?v1 ))):named a112 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun$ ))(= (tree_ap$j ?v0 (tree_pure$ ?v2 ))(tree_ap$j ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a113 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$s ?v0 (tree_pure$g ?v2 ))(tree_ap$s ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a114 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$u ?v0 (tree_pure$g ?v2 ))(tree_ap$u ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a115 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$r ?v0 (tree_pure$g ?v2 ))(tree_ap$r ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a116 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun$ ))(= (tree_ap$x ?v0 (tree_pure$g ?v2 ))(tree_ap$x ?v1 (tree_pure$g ?v2 ))))(= ?v0 ?v1 ))):named a117 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_tree$ ))(= (tree_ap$ ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))(= ?v0 ?v1 ))):named a118 ))
(assert (! (forall ((?v0 Nat_nat_fun_tree$ )(?v1 Nat_nat_fun_tree$ ))(=> (forall ((?v2 Nat_tree$ ))(= (tree_ap$a ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))(= ?v0 ?v1 ))):named a119 ))
(assert (! (forall ((?v0 Nat_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat_tree$ ))(= (tree_ap$b ?v0 ?v2 )(tree_ap$b ?v1 ?v2 )))(= ?v0 ?v1 ))):named a120 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_tree$ ))(= (tree_ap$c ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))(= ?v0 ?v1 ))):named a121 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_tree$ ))(= (tree_ap$g ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))(= ?v0 ?v1 ))):named a122 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_tree$ ))(= (tree_ap$j ?v0 ?v2 )(tree_ap$j ?v1 ?v2 )))(= ?v0 ?v1 ))):named a123 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$s ?v0 ?v2 )(tree_ap$s ?v1 ?v2 )))(= ?v0 ?v1 ))):named a124 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$u ?v0 ?v2 )(tree_ap$u ?v1 ?v2 )))(= ?v0 ?v1 ))):named a125 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$r ?v0 ?v2 )(tree_ap$r ?v1 ?v2 )))(= ?v0 ?v1 ))):named a126 ))
(assert (! (forall ((?v0 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ )(?v1 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_nat_nat_prod_nat_fun_nat_fun_fun_tree$ ))(=> (forall ((?v2 Nat_nat_prod_nat_fun_nat_nat_prod_nat_fun_fun_tree$ ))(= (tree_ap$x ?v0 ?v2 )(tree_ap$x ?v1 ?v2 )))(= ?v0 ?v1 ))):named a127 ))
(assert (! (forall ((?v0 Dir_list$ ))(case_prod$ uua$ (root$a (traverse_tree$a ?v0 stern_brocot$ )))):named a128 ))
(assert (! (forall ((?v0 Nat$ ))(= (not (= ?v0 zero$ ))(fun_app$a (less$ zero$ )?v0 ))):named a129 ))
(assert (! (forall ((?v0 Nat$ ))(= (not (fun_app$a (less$ zero$ )?v0 ))(= ?v0 zero$ ))):named a130 ))
(assert (! (forall ((?v0 Nat$ ))(! (= (fun_app$a (less$ ?v0 )zero$ )false ):pattern ((less$ ?v0 )))):named a131 ))
(assert (! (forall ((?v0 Bool )(?v1 Nat_nat_bool_fun_fun$ )(?v2 Nat_nat_prod$ ))(= (case_prod$ (uuv$ ?v0 ?v1 )?v2 )(and ?v0 (case_prod$ ?v1 ?v2 )))):named a132 ))
(assert (! (= den$ (tree_ap$ (tree_pure$ uu$ )stern_brocot$ )):named a133 ))
(check-sat )
;(get-unsat-core )
