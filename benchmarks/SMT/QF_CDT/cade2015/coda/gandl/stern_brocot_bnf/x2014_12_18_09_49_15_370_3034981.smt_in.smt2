;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_b_fun$ 0 )
(declare-sort B_a_fun$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort Bool_tree$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort Bool_a_fun$ 0 )
(declare-sort Bool_b_fun$ 0 )
(declare-sort A_a_a_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_fun$ 0 )
(declare-sort A_b_fun_b_fun$ 0 )
(declare-sort B_a_b_fun_fun$ 0 )
(declare-sort Bool_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun$ 0 )
(declare-sort A_b_fun_bool_fun$ 0 )
(declare-sort A_bool_b_fun_fun$ 0 )
(declare-sort A_bool_fun_a_fun$ 0 )
(declare-sort A_bool_fun_b_fun$ 0 )
(declare-sort B_a_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun$ 0 )
(declare-sort A_bool_bool_fun_fun$ 0 )
(declare-sort Bool_a_bool_fun_fun$ 0 )
(declare-sort A_a_b_fun_bool_fun_fun$ 0 )
(declare-sort A_a_fun_a_bool_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_b_fun_fun$ 0 )
(declare-sort A_b_fun_a_a_b_fun_fun_fun$ 0 )
(declare-sort A_bool_fun_a_bool_fun_fun$ 0 )
(declare-sort B_b_fun_a_b_b_fun_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun_a_a_b_fun_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun_b_a_b_fun_fun_fun$ 0 )
(declare-sort A_bool_fun_a_a_bool_fun_fun_fun$ 0 )
(declare-sort B_a_b_fun_fun_a_b_b_fun_fun_fun$ 0 )
(declare-sort B_bool_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_fun_a_b_fun_bool_fun_fun$ 0 )
(declare-sort A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_b_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ 0 )
(declare-sort A_bool_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort B_a_bool_fun_fun_a_b_bool_fun_fun_fun$ 0 )
(declare-sort A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ 0 )
(declare-sort A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun$ 0 )
(declare-sort Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$ 0 )
(declare-sort A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ 0 )
(declare-codatatypes ()((B_tree$ (node$ (root$ B$ )(left$ B_tree$ )(right$ B_tree$ )))(A_b_fun_tree$ (node$a (select$ A_b_fun$ )(selecta$ A_b_fun_tree$ )(selectb$ A_b_fun_tree$ )))(A_tree$ (node$b (root$a A$ )(left$a A_tree$ )(right$a A_tree$ )))(A_b_bool_fun_fun_tree$ (node$c (selectc$ A_b_bool_fun_fun$ )(selectd$ A_b_bool_fun_fun_tree$ )(selecte$ A_b_bool_fun_fun_tree$ )))(B_bool_fun_tree$ (node$d (selectf$ B_bool_fun$ )(selectg$ B_bool_fun_tree$ )(selecth$ B_bool_fun_tree$ )))(A_b_b_fun_fun_tree$ (node$e (selecti$ A_b_b_fun_fun$ )(selectj$ A_b_b_fun_fun_tree$ )(selectk$ A_b_b_fun_fun_tree$ )))(B_b_fun_tree$ (node$f (selectl$ B_b_fun$ )(selectm$ B_b_fun_tree$ )(selectn$ B_b_fun_tree$ )))(A_a_bool_fun_fun_tree$ (node$g (selecto$ A_a_bool_fun_fun$ )(selectp$ A_a_bool_fun_fun_tree$ )(selectq$ A_a_bool_fun_fun_tree$ )))(A_bool_fun_tree$ (node$h (selectr$ A_bool_fun$ )(selects$ A_bool_fun_tree$ )(selectt$ A_bool_fun_tree$ )))(A_a_b_fun_fun_tree$ (node$i (selectu$ A_a_b_fun_fun$ )(selectv$ A_a_b_fun_fun_tree$ )(selectw$ A_a_b_fun_fun_tree$ )))(A_a_fun_tree$ (node$j (selectx$ A_a_fun$ )(selecty$ A_a_fun_tree$ )(selectz$ A_a_fun_tree$ )))(A_b_fun_a_bool_fun_fun_tree$ (node$k (selecua$ A_b_fun_a_bool_fun_fun$ )(selecub$ A_b_fun_a_bool_fun_fun_tree$ )(selecuc$ A_b_fun_a_bool_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$l (selecud$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(selecue$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(selecuf$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )))(A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ (node$m (selecug$ A_a_b_fun_fun_a_a_b_fun_fun_fun$ )(selecuh$ A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ )(selecui$ A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ )))(A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ (node$n (selecuj$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun$ )(selecuk$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ )(selecul$ A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ )))(A_b_fun_bool_fun_tree$ (node$o (selecum$ A_b_fun_bool_fun$ )(selecun$ A_b_fun_bool_fun_tree$ )(selecuo$ A_b_fun_bool_fun_tree$ )))(A_a_b_fun_bool_fun_fun_tree$ (node$p (selecup$ A_a_b_fun_bool_fun_fun$ )(selecuq$ A_a_b_fun_bool_fun_fun_tree$ )(selecur$ A_a_b_fun_bool_fun_fun_tree$ )))(A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ (node$q (selecus$ A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun$ )(selecut$ A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ )(selecuu$ A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ )))(A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$r (selecuv$ A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )(selecuw$ A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(selecux$ A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$s (selecuy$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(selecuz$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(selecva$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$t (selecvb$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(selecvc$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(selecvd$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ (node$u (selecve$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun$ )(selecvf$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ )(selecvg$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ )))(B_a_bool_fun_fun_tree$ (node$v (selecvh$ B_a_bool_fun_fun$ )(selecvi$ B_a_bool_fun_fun_tree$ )(selecvj$ B_a_bool_fun_fun_tree$ )))(B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ (node$w (selecvk$ B_a_bool_fun_fun_a_b_bool_fun_fun_fun$ )(selecvl$ B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ )(selecvm$ B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ )))(B_a_b_fun_fun_tree$ (node$x (selecvn$ B_a_b_fun_fun$ )(selecvo$ B_a_b_fun_fun_tree$ )(selecvp$ B_a_b_fun_fun_tree$ )))(B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ (node$y (selecvq$ B_a_b_fun_fun_a_b_b_fun_fun_fun$ )(selecvr$ B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ )(selecvs$ B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ )))(A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ (node$z (selecvt$ A_b_b_fun_fun_b_a_b_fun_fun_fun$ )(selecvu$ A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ )(selecvv$ A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ )))(A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ (node$aa (selecvw$ A_b_bool_fun_fun_b_a_bool_fun_fun_fun$ )(selecvx$ A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ )(selecvy$ A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ )))(Bool_bool_fun_tree$ (node$ab (selecvz$ Bool_bool_fun$ )(selecwa$ Bool_bool_fun_tree$ )(selecwb$ Bool_bool_fun_tree$ )))(A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ (node$ac (selecwc$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )(selecwd$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ )(selecwe$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ )))(Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$ad (selecwf$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(selecwg$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(selecwh$ Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )))(Bool_b_fun_tree$ (node$ae (selecwi$ Bool_b_fun$ )(selecwj$ Bool_b_fun_tree$ )(selecwk$ Bool_b_fun_tree$ )))(Bool_a_fun_tree$ (node$af (selecwl$ Bool_a_fun$ )(selecwm$ Bool_a_fun_tree$ )(selecwn$ Bool_a_fun_tree$ )))(A_b_fun_a_b_fun_fun_tree$ (node$ag (selecwo$ A_b_fun_a_b_fun_fun$ )(selecwp$ A_b_fun_a_b_fun_fun_tree$ )(selecwq$ A_b_fun_a_b_fun_fun_tree$ )))(A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ (node$ah (selecwr$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun$ )(selecws$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ )(selecwt$ A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ )))(A_bool_b_fun_fun_tree$ (node$ai (selecwu$ A_bool_b_fun_fun$ )(selecwv$ A_bool_b_fun_fun_tree$ )(selecww$ A_bool_b_fun_fun_tree$ )))(A_bool_fun_a_b_fun_fun_tree$ (node$aj (selecwx$ A_bool_fun_a_b_fun_fun$ )(selecwy$ A_bool_fun_a_b_fun_fun_tree$ )(selecwz$ A_bool_fun_a_b_fun_fun_tree$ )))(A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ (node$ak (selecxa$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun$ )(selecxb$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ )(selecxc$ A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ )))(A_a_fun_a_b_fun_fun_tree$ (node$al (selecxd$ A_a_fun_a_b_fun_fun$ )(selecxe$ A_a_fun_a_b_fun_fun_tree$ )(selecxf$ A_a_fun_a_b_fun_fun_tree$ )))(A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ (node$am (selecxg$ A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun$ )(selecxh$ A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ )(selecxi$ A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ )))(A_bool_bool_fun_fun_tree$ (node$an (selecxj$ A_bool_bool_fun_fun$ )(selecxk$ A_bool_bool_fun_fun_tree$ )(selecxl$ A_bool_bool_fun_fun_tree$ )))(A_bool_fun_a_bool_fun_fun_tree$ (node$ao (selecxm$ A_bool_fun_a_bool_fun_fun$ )(selecxn$ A_bool_fun_a_bool_fun_fun_tree$ )(selecxo$ A_bool_fun_a_bool_fun_fun_tree$ )))(A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$ap (selecxp$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun$ )(selecxq$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )(selecxr$ A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )))(A_a_fun_a_bool_fun_fun_tree$ (node$aq (selecxs$ A_a_fun_a_bool_fun_fun$ )(selecxt$ A_a_fun_a_bool_fun_fun_tree$ )(selecxu$ A_a_fun_a_bool_fun_fun_tree$ )))(A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ (node$ar (selecxv$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun$ )(selecxw$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ )(selecxx$ A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ )))(A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$as (selecxy$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )(selecxz$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(selecya$ A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_fun_tree$ (node$at (selecyb$ A_b_fun_a_fun$ )(selecyc$ A_b_fun_a_fun_tree$ )(selecyd$ A_b_fun_a_fun_tree$ )))(A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ (node$au (selecye$ A_b_fun_a_fun_a_b_fun_bool_fun_fun$ )(selecyf$ A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ )(selecyg$ A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ )))(A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ (node$av (selecyh$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun$ )(selecyi$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ )(selecyj$ A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ )))(A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ (node$aw (selecyk$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun$ )(selecyl$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )(selecym$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$ax (selecyn$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )(selecyo$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(selecyp$ A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$ay (selecyq$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(selecyr$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(selecys$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$az (selecyt$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )(selecyu$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(selecyv$ A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$ba (selecyw$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(selecyx$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(selecyy$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ (node$bb (selecyz$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun$ )(selecza$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ )(seleczb$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$bc (seleczc$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun$ )(seleczd$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(selecze$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$bd (seleczf$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(seleczg$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(seleczh$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )))(A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ (node$be (seleczi$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun$ )(seleczj$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )(seleczk$ A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )))(B_bool_fun_a_b_bool_fun_fun_fun_tree$ (node$bf (seleczl$ B_bool_fun_a_b_bool_fun_fun_fun$ )(seleczm$ B_bool_fun_a_b_bool_fun_fun_fun_tree$ )(seleczn$ B_bool_fun_a_b_bool_fun_fun_fun_tree$ )))(B_b_fun_a_b_b_fun_fun_fun_tree$ (node$bg (seleczo$ B_b_fun_a_b_b_fun_fun_fun$ )(seleczp$ B_b_fun_a_b_b_fun_fun_fun_tree$ )(seleczq$ B_b_fun_a_b_b_fun_fun_fun_tree$ )))(A_bool_fun_a_a_bool_fun_fun_fun_tree$ (node$bh (seleczr$ A_bool_fun_a_a_bool_fun_fun_fun$ )(seleczs$ A_bool_fun_a_a_bool_fun_fun_fun_tree$ )(seleczt$ A_bool_fun_a_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_a_b_fun_fun_fun_tree$ (node$bi (seleczu$ A_b_fun_a_a_b_fun_fun_fun$ )(seleczv$ A_b_fun_a_a_b_fun_fun_fun_tree$ )(seleczw$ A_b_fun_a_a_b_fun_fun_fun_tree$ )))(A_a_a_fun_fun_tree$ (node$bj (seleczx$ A_a_a_fun_fun$ )(seleczy$ A_a_a_fun_fun_tree$ )(seleczz$ A_a_a_fun_fun_tree$ )))(Bool_a_bool_fun_fun_tree$ (node$bk (seledaa$ Bool_a_bool_fun_fun$ )(seledab$ Bool_a_bool_fun_fun_tree$ )(seledac$ Bool_a_bool_fun_fun_tree$ )))(A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ (node$bl (seledad$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun$ )(seledae$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(seledaf$ A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )))(A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ (node$bm (seledag$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(seledah$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(seledai$ A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )))(B_a_fun_tree$ (node$bn (seledaj$ B_a_fun$ )(seledak$ B_a_fun_tree$ )(seledal$ B_a_fun_tree$ )))(A_bool_fun_b_fun_tree$ (node$bo (seledam$ A_bool_fun_b_fun$ )(seledan$ A_bool_fun_b_fun_tree$ )(seledao$ A_bool_fun_b_fun_tree$ )))(A_bool_fun_a_fun_tree$ (node$bp (seledap$ A_bool_fun_a_fun$ )(seledaq$ A_bool_fun_a_fun_tree$ )(seledar$ A_bool_fun_a_fun_tree$ )))(A_b_fun_b_fun_tree$ (node$bq (seledas$ A_b_fun_b_fun$ )(seledat$ A_b_fun_b_fun_tree$ )(seledau$ A_b_fun_b_fun_tree$ )))))
(declare-sort Dir$ 0)
(declare-sort Dir_list$ 0)
(declare-fun l$ ()Dir$)
(declare-fun r$ ()Dir$)
(declare-fun nil$ ()Dir_list$)
(declare-fun hd$ (Dir_list$)Dir$)
(declare-fun tl$ (Dir_list$)Dir_list$)
(declare-fun cons$ (Dir$ Dir_list$ )Dir_list$)
(declare-fun f$ ()A_b_fun_tree$ )
(declare-fun g$ ()A_b_fun_tree$ )
(declare-fun x$ ()A_tree$ )
(declare-fun y$ ()A_tree$ )
(declare-fun id$ ()A_a_fun$ )
(declare-fun uu$ ()A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun node$br (Bool Bool_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun tree_C$ ()A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ )
(declare-fun tree_K$ ()B_bool_fun_a_b_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$ ()A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun tree_C$a ()A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$b ()A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$c ()A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$d ()A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$e ()A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ )
(declare-fun tree_C$f ()B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ )
(declare-fun tree_C$g ()B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ )
(declare-fun tree_C$h ()A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ )
(declare-fun tree_C$i ()A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_K$a ()B_b_fun_a_b_b_fun_fun_fun_tree$ )
(declare-fun tree_K$b ()A_bool_fun_a_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_K$c ()A_b_fun_a_a_b_fun_fun_fun_tree$ )
(declare-fun tree_K$d ()A_a_a_fun_fun_tree$ )
(declare-fun tree_K$e ()B_a_b_fun_fun_tree$ )
(declare-fun tree_K$f ()Bool_a_bool_fun_fun_tree$ )
(declare-fun tree_K$g ()A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_K$h ()A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$a ()A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_S$b ()A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ )
(declare-fun tree_S$c ()A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$d ()A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$e ()A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$f ()A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ )
(declare-fun tree_S$g ()A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$h ()A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_S$i ()A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$ (A_b_fun_tree$ A_tree$ )B_tree$ )
(declare-fun fun_app$a (A_b_fun_a_bool_fun_fun$ A_b_fun$ )A_bool_fun$ )
(declare-fun fun_app$b (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun$ )A_b_fun_a_bool_fun_fun$ )
(declare-fun fun_app$c (A_b_fun$ A$ )B$ )
(declare-fun fun_app$d (Bool_bool_fun$ Bool )Bool )
(declare-fun fun_app$e (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )Bool )
(declare-fun fun_app$f (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun fun_app$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )
(declare-fun fun_app$h (Bool_b_fun$ Bool )B$ )
(declare-fun fun_app$i (Bool_a_fun$ Bool )A$ )
(declare-fun fun_app$j (B_b_fun$ B$ )B$ )
(declare-fun fun_app$k (B_a_fun$ B$ )A$ )
(declare-fun fun_app$l (A_a_fun$ A$ )A$ )
(declare-fun fun_app$m (A_bool_fun_b_fun$ A_bool_fun$ )B$ )
(declare-fun fun_app$n (A_bool_fun_a_fun$ A_bool_fun$ )A$ )
(declare-fun fun_app$o (A_b_fun_b_fun$ A_b_fun$ )B$ )
(declare-fun map_tree$ (A_b_bool_fun_fun$ A_tree$ )B_bool_fun_tree$ )
(declare-fun tree_ap$a (A_b_bool_fun_fun_tree$ A_tree$ )B_bool_fun_tree$ )
(declare-fun tree_ap$b (A_b_b_fun_fun_tree$ A_tree$ )B_b_fun_tree$ )
(declare-fun tree_ap$c (A_a_bool_fun_fun_tree$ A_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$d (A_a_b_fun_fun_tree$ A_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$e (A_a_fun_tree$ A_tree$ )A_tree$ )
(declare-fun tree_ap$f (A_bool_fun_tree$ A_tree$ )Bool_tree$ )
(declare-fun tree_ap$g (A_b_fun_a_bool_fun_fun_tree$ A_b_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$h (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$i (A_a_b_fun_fun_a_a_b_fun_fun_fun_tree$ A_a_b_fun_fun_tree$ )A_a_b_fun_fun_tree$ )
(declare-fun tree_ap$j (A_a_bool_fun_fun_a_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$ )A_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$k (A_b_fun_bool_fun_tree$ A_b_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$l (A_a_b_fun_bool_fun_fun_tree$ A_tree$ )A_b_fun_bool_fun_tree$ )
(declare-fun tree_ap$m (A_b_fun_a_bool_fun_fun_a_a_b_fun_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_a_b_fun_bool_fun_fun_tree$ )
(declare-fun tree_ap$n (A_a_b_fun_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_a_b_fun_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$o (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$p (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$q (A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_a_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_ap$r (B_bool_fun_tree$ B_tree$ )Bool_tree$ )
(declare-fun tree_ap$s (B_a_bool_fun_fun_a_b_bool_fun_fun_fun_tree$ B_a_bool_fun_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_ap$t (B_a_bool_fun_fun_tree$ B_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$u (B_b_fun_tree$ B_tree$ )B_tree$ )
(declare-fun tree_ap$v (B_a_b_fun_fun_a_b_b_fun_fun_fun_tree$ B_a_b_fun_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_ap$w (B_a_b_fun_fun_tree$ B_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$x (A_b_b_fun_fun_b_a_b_fun_fun_fun_tree$ A_b_b_fun_fun_tree$ )B_a_b_fun_fun_tree$ )
(declare-fun tree_ap$y (A_b_bool_fun_fun_b_a_bool_fun_fun_fun_tree$ A_b_bool_fun_fun_tree$ )B_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$z (Bool_bool_fun_tree$ Bool_tree$ )Bool_tree$ )
(declare-fun map_tree$a (A_b_b_fun_fun$ A_tree$ )B_b_fun_tree$ )
(declare-fun map_tree$b (A_a_bool_fun_fun$ A_tree$ )A_bool_fun_tree$ )
(declare-fun map_tree$c (A_a_b_fun_fun$ A_tree$ )A_b_fun_tree$ )
(declare-fun map_tree$d (A_a_fun$ A_tree$ )A_tree$ )
(declare-fun map_tree$e (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun map_tree$f (A_b_fun$ A_tree$ )B_tree$ )
(declare-fun map_tree$g (A_bool_fun$ A_tree$ )Bool_tree$ )
(declare-fun map_tree$h (A_b_fun_a_bool_fun_fun$ A_b_fun_tree$ )A_bool_fun_tree$ )
(declare-fun map_tree$i (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ A_b_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun map_tree$j (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )Bool_tree$ )
(declare-fun map_tree$k (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ Bool_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun map_tree$l (Bool_bool_fun$ Bool_tree$ )Bool_tree$ )
(declare-fun tree_ap$aa (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )Bool_tree$ )
(declare-fun tree_ap$ab (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ Bool_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$ac (Bool_b_fun_tree$ Bool_tree$ )B_tree$ )
(declare-fun tree_ap$ad (Bool_a_fun_tree$ Bool_tree$ )A_tree$ )
(declare-fun tree_ap$ae (A_b_fun_a_b_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$af (A_b_b_fun_fun_a_b_fun_a_b_fun_fun_fun_tree$ A_b_b_fun_fun_tree$ )A_b_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$ag (A_bool_fun_a_b_fun_fun_tree$ A_bool_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$ah (A_bool_b_fun_fun_a_bool_fun_a_b_fun_fun_fun_tree$ A_bool_b_fun_fun_tree$ )A_bool_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$ai (A_bool_b_fun_fun_tree$ A_tree$ )Bool_b_fun_tree$ )
(declare-fun tree_ap$aj (A_a_fun_a_b_fun_fun_tree$ A_a_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_ap$ak (A_a_b_fun_fun_a_a_fun_a_b_fun_fun_fun_tree$ A_a_b_fun_fun_tree$ )A_a_fun_a_b_fun_fun_tree$ )
(declare-fun tree_ap$al (A_bool_fun_a_bool_fun_fun_tree$ A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$am (A_bool_bool_fun_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_bool_bool_fun_fun_tree$ )A_bool_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$an (A_bool_bool_fun_fun_tree$ A_tree$ )Bool_bool_fun_tree$ )
(declare-fun tree_ap$ao (A_a_fun_a_bool_fun_fun_tree$ A_a_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$ap (A_a_bool_fun_fun_a_a_fun_a_bool_fun_fun_fun_tree$ A_a_bool_fun_fun_tree$ )A_a_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$aq (A_b_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ar (A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ A_b_fun_a_fun_tree$ )A_b_fun_bool_fun_tree$ )
(declare-fun tree_ap$as (A_b_fun_a_bool_fun_fun_a_b_fun_a_fun_a_b_fun_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_fun_a_b_fun_bool_fun_fun_tree$ )
(declare-fun tree_ap$at (A_b_fun_a_fun_tree$ A_b_fun_tree$ )A_tree$ )
(declare-fun tree_ap$au (A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$av (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$aw (A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$ )A_bool_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ax (A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ay (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$az (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$ba (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$bb (A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$bc (A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ A_b_fun_tree$ )A_b_fun_a_bool_fun_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$bd (B_bool_fun_a_b_bool_fun_fun_fun_tree$ B_bool_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_ap$be (B_b_fun_a_b_b_fun_fun_fun_tree$ B_b_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_ap$bf (A_bool_fun_a_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$ )A_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$bg (A_b_fun_a_a_b_fun_fun_fun_tree$ A_b_fun_tree$ )A_a_b_fun_fun_tree$ )
(declare-fun tree_ap$bh (A_a_a_fun_fun_tree$ A_tree$ )A_a_fun_tree$ )
(declare-fun tree_ap$bi (Bool_a_bool_fun_fun_tree$ Bool_tree$ )A_bool_fun_tree$ )
(declare-fun tree_ap$bj (A_bool_fun_a_b_fun_a_bool_fun_fun_fun_tree$ A_bool_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_ap$bk (A_b_fun_a_bool_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_ap$bl (B_a_fun_tree$ B_tree$ )A_tree$ )
(declare-fun tree_ap$bm (A_bool_fun_b_fun_tree$ A_bool_fun_tree$ )B_tree$ )
(declare-fun tree_ap$bn (A_bool_fun_a_fun_tree$ A_bool_fun_tree$ )A_tree$ )
(declare-fun tree_ap$bo (A_b_fun_b_fun_tree$ A_b_fun_tree$ )B_tree$ )
(declare-fun tree_chop$ (B_tree$ )B_tree$ )
(declare-fun tree_pure$ (A$ )A_tree$ )
(declare-fun tree_chop$a (A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun tree_chop$b (A_tree$ )A_tree$ )
(declare-fun tree_chop$c (Bool_tree$ )Bool_tree$ )
(declare-fun tree_chop$d (A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun tree_chop$e (A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_chop$f (A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_chop$g (B_b_fun_tree$ )B_b_fun_tree$ )
(declare-fun tree_chop$h (B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun tree_chop$i (A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun tree_chop$j (B_bool_fun_tree$ )B_bool_fun_tree$ )
(declare-fun tree_chop$k (A_b_bool_fun_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_chop$l (A_b_b_fun_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_chop$m (B_a_bool_fun_fun_tree$ )B_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$a (A_b_fun$ )A_b_fun_tree$ )
(declare-fun tree_pure$b (B$ )B_tree$ )
(declare-fun tree_pure$c (A_bool_fun$ )A_bool_fun_tree$ )
(declare-fun tree_pure$d (Bool )Bool_tree$ )
(declare-fun tree_pure$e (Bool_bool_fun$ )Bool_bool_fun_tree$ )
(declare-fun tree_pure$f (A_b_fun_a_bool_fun_fun$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$g (A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun tree_pure$h (A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun_tree$ )
(declare-fun tree_pure$i (Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$j (A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )
(declare-fun tree_pure$k (Bool_b_fun$ )Bool_b_fun_tree$ )
(declare-fun tree_pure$l (Bool_a_fun$ )Bool_a_fun_tree$ )
(declare-fun tree_pure$m (B_b_fun$ )B_b_fun_tree$ )
(declare-fun tree_pure$n (B_a_fun$ )B_a_fun_tree$ )
(declare-fun tree_pure$o (A_a_fun$ )A_a_fun_tree$ )
(declare-fun tree_pure$p (A_bool_fun_b_fun$ )A_bool_fun_b_fun_tree$ )
(declare-fun tree_pure$q (A_bool_fun_a_fun$ )A_bool_fun_a_fun_tree$ )
(declare-fun tree_pure$r (A_b_fun_b_fun$ )A_b_fun_b_fun_tree$ )
(declare-fun tree_pure$s (A_b_bool_fun_fun$ )A_b_bool_fun_fun_tree$ )
(declare-fun tree_pure$t (A_b_b_fun_fun$ )A_b_b_fun_fun_tree$ )
(declare-fun tree_pure$u (A_a_bool_fun_fun$ )A_a_bool_fun_fun_tree$ )
(declare-fun tree_pure$v (A_a_b_fun_fun$ )A_a_b_fun_fun_tree$ )
(declare-fun traverse_tree$ (Dir_list$ B_tree$ )B_tree$ )
(declare-fun traverse_tree$a (Dir_list$ A_b_fun_tree$ )A_b_fun_tree$ )
(declare-fun traverse_tree$b (Dir_list$ A_tree$ )A_tree$ )
(declare-fun traverse_tree$c (Dir_list$ Bool_tree$ )Bool_tree$ )
(declare-fun traverse_tree$d (Dir_list$ A_bool_fun_tree$ )A_bool_fun_tree$ )
(declare-fun traverse_tree$e (Dir_list$ A_b_fun_a_bool_fun_fun_tree$ )A_b_fun_a_bool_fun_fun_tree$ )
(declare-fun traverse_tree$f (Dir_list$ A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )
(declare-fun traverse_tree$g (Dir_list$ B_b_fun_tree$ )B_b_fun_tree$ )
(declare-fun traverse_tree$h (Dir_list$ B_a_fun_tree$ )B_a_fun_tree$ )
(declare-fun traverse_tree$i (Dir_list$ A_a_fun_tree$ )A_a_fun_tree$ )
(declare-fun traverse_tree$j (Dir_list$ B_bool_fun_tree$ )B_bool_fun_tree$ )
(declare-fun traverse_tree$k (Dir_list$ A_b_bool_fun_fun_tree$ )A_b_bool_fun_fun_tree$ )
(declare-fun traverse_tree$l (Dir_list$ A_b_b_fun_fun_tree$ )A_b_b_fun_fun_tree$ )
(declare-fun traverse_tree$m (Dir_list$ B_a_bool_fun_fun_tree$ )B_a_bool_fun_fun_tree$ )
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ )(?v2 A$ ))(! (= (fun_app$ (fun_app$a (fun_app$b uu$ ?v0 )?v1 )?v2 )(= (fun_app$c ?v0 ?v2 )(fun_app$c ?v1 ?v2 ))):pattern ((fun_app$ (fun_app$a (fun_app$b uu$ ?v0 )?v1 )?v2 )))):named a0 ))
(assert (! (not (= (tree_ap$ f$ y$ )(tree_ap$ g$ y$ ))):named a1 ))
(assert (! (= x$ y$ ):named a2 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_b_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$a ?v0 ?v2 )(tree_ap$a ?v1 ?v2 )))(= ?v0 ?v1 ))):named a3 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_b_b_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$b ?v0 ?v2 )(tree_ap$b ?v1 ?v2 )))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$c ?v0 ?v2 )(tree_ap$c ?v1 ?v2 )))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_a_b_fun_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$d ?v0 ?v2 )(tree_ap$d ?v1 ?v2 )))(= ?v0 ?v1 ))):named a6 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$e ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))(= ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$ ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))(= ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(=> (forall ((?v2 A_tree$ ))(= (tree_ap$f ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))(= ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_tree$ ))(= (tree_ap$g ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))(= ?v0 ?v1 ))):named a10 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun_tree$ ))(= (tree_ap$h ?v0 ?v2 )(tree_ap$h ?v1 ?v2 )))(= ?v0 ?v1 ))):named a11 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_b_bool_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$a ?v0 (tree_pure$ ?v2 ))(tree_ap$a ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a12 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_b_b_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$b ?v0 (tree_pure$ ?v2 ))(tree_ap$b ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a13 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$c ?v0 (tree_pure$ ?v2 ))(tree_ap$c ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_a_b_fun_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$d ?v0 (tree_pure$ ?v2 ))(tree_ap$d ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a15 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_a_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$e ?v0 (tree_pure$ ?v2 ))(tree_ap$e ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_b_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$ ?v0 (tree_pure$ ?v2 ))(tree_ap$ ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a17 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_bool_fun_tree$ ))(=> (forall ((?v2 A$ ))(= (tree_ap$f ?v0 (tree_pure$ ?v2 ))(tree_ap$f ?v1 (tree_pure$ ?v2 ))))(= ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun$ ))(= (tree_ap$g ?v0 (tree_pure$a ?v2 ))(tree_ap$g ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a19 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(=> (forall ((?v2 A_b_fun$ ))(= (tree_ap$h ?v0 (tree_pure$a ?v2 ))(tree_ap$h ?v1 (tree_pure$a ?v2 ))))(= ?v0 ?v1 ))):named a20 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$d (tree_ap$i tree_C$ ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$d ?v0 ?v2 )?v1 ))):named a21 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$c (tree_ap$j tree_C$a ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$c ?v0 ?v2 )?v1 ))):named a22 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$k (tree_ap$l (tree_ap$m tree_C$b ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$g ?v0 ?v2 )?v1 ))):named a23 ))
(assert (! (forall ((?v0 A_a_b_fun_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$g (tree_ap$n tree_C$c ?v0 )?v1 )?v2 )(tree_ap$k (tree_ap$l ?v0 ?v2 )?v1 ))):named a24 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$h (tree_ap$o tree_C$d ?v0 )?v1 )?v2 )(tree_ap$g (tree_ap$h ?v0 ?v2 )?v1 ))):named a25 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$h (tree_ap$p (tree_ap$q tree_C$e ?v0 )?v1 )?v2 )(tree_ap$h (tree_ap$p ?v0 ?v2 )?v1 ))):named a26 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun_tree$ )(?v1 A_tree$ )(?v2 B_tree$ ))(= (tree_ap$r (tree_ap$a (tree_ap$s tree_C$f ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$t ?v0 ?v2 )?v1 ))):named a27 ))
(assert (! (forall ((?v0 B_a_b_fun_fun_tree$ )(?v1 A_tree$ )(?v2 B_tree$ ))(= (tree_ap$u (tree_ap$b (tree_ap$v tree_C$g ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$w ?v0 ?v2 )?v1 ))):named a28 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 B_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$w (tree_ap$x tree_C$h ?v0 )?v1 )?v2 )(tree_ap$u (tree_ap$b ?v0 ?v2 )?v1 ))):named a29 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 B_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$t (tree_ap$y tree_C$i ?v0 )?v1 )?v2 )(tree_ap$r (tree_ap$a ?v0 ?v2 )?v1 ))):named a30 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ ))(= (tree_ap$ (tree_pure$a ?v0 )(tree_pure$ ?v1 ))(tree_pure$b (fun_app$c ?v0 ?v1 )))):named a31 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ ))(= (tree_ap$f (tree_pure$c ?v0 )(tree_pure$ ?v1 ))(tree_pure$d (fun_app$ ?v0 ?v1 )))):named a32 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool ))(= (tree_ap$z (tree_pure$e ?v0 )(tree_pure$d ?v1 ))(tree_pure$d (fun_app$d ?v0 ?v1 )))):named a33 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$g (tree_pure$f ?v0 )(tree_pure$a ?v1 ))(tree_pure$c (fun_app$a ?v0 ?v1 )))):named a34 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun$ ))(= (tree_ap$h (tree_pure$g ?v0 )(tree_pure$a ?v1 ))(tree_pure$f (fun_app$b ?v0 ?v1 )))):named a35 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$aa (tree_pure$h ?v0 )(tree_pure$g ?v1 ))(tree_pure$d (fun_app$e ?v0 ?v1 )))):named a36 ))
(assert (! (forall ((?v0 Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 Bool ))(= (tree_ap$ab (tree_pure$i ?v0 )(tree_pure$d ?v1 ))(tree_pure$g (fun_app$f ?v0 ?v1 )))):named a37 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (tree_ap$o (tree_pure$j ?v0 )(tree_pure$g ?v1 ))(tree_pure$g (fun_app$g ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 Bool_b_fun$ )(?v1 Bool ))(= (tree_ap$ac (tree_pure$k ?v0 )(tree_pure$d ?v1 ))(tree_pure$b (fun_app$h ?v0 ?v1 )))):named a39 ))
(assert (! (forall ((?v0 Bool_a_fun$ )(?v1 Bool ))(= (tree_ap$ad (tree_pure$l ?v0 )(tree_pure$d ?v1 ))(tree_pure$ (fun_app$i ?v0 ?v1 )))):named a40 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$ae (tree_ap$af tree_S$ ?v0 )?v1 )?v2 )(tree_ap$u (tree_ap$b ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a41 ))
(assert (! (forall ((?v0 A_bool_b_fun_fun_tree$ )(?v1 A_bool_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$ag (tree_ap$ah tree_S$a ?v0 )?v1 )?v2 )(tree_ap$ac (tree_ap$ai ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))):named a42 ))
(assert (! (forall ((?v0 A_a_b_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$ (tree_ap$aj (tree_ap$ak tree_S$b ?v0 )?v1 )?v2 )(tree_ap$ (tree_ap$d ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 A_bool_bool_fun_fun_tree$ )(?v1 A_bool_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$al (tree_ap$am tree_S$c ?v0 )?v1 )?v2 )(tree_ap$z (tree_ap$an ?v0 ?v2 )(tree_ap$f ?v1 ?v2 )))):named a44 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun_tree$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$ao (tree_ap$ap tree_S$d ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$c ?v0 ?v2 )(tree_ap$e ?v1 ?v2 )))):named a45 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (tree_ap$f (tree_ap$g (tree_ap$aq tree_S$e ?v0 )?v1 )?v2 )(tree_ap$r (tree_ap$a ?v0 ?v2 )(tree_ap$ ?v1 ?v2 )))):named a46 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_a_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$k (tree_ap$ar (tree_ap$as tree_S$f ?v0 )?v1 )?v2 )(tree_ap$f (tree_ap$g ?v0 ?v2 )(tree_ap$at ?v1 ?v2 )))):named a47 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$au (tree_ap$av tree_S$g ?v0 )?v1 )?v2 )(tree_ap$al (tree_ap$aw ?v0 ?v2 )(tree_ap$g ?v1 ?v2 )))):named a48 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$ax (tree_ap$ay tree_S$h ?v0 )?v1 )?v2 )(tree_ap$g (tree_ap$h ?v0 ?v2 )(tree_ap$ae ?v1 ?v2 )))):named a49 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$az (tree_ap$ba tree_S$i ?v0 )?v1 )?v2 )(tree_ap$bb (tree_ap$bc ?v0 ?v2 )(tree_ap$h ?v1 ?v2 )))):named a50 ))
(assert (! (forall ((?v0 B_bool_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$a (tree_ap$bd tree_K$ ?v0 )?v1 )?v0 )):named a51 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$b (tree_ap$be tree_K$a ?v0 )?v1 )?v0 )):named a52 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$c (tree_ap$bf tree_K$b ?v0 )?v1 )?v0 )):named a53 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_tree$ ))(= (tree_ap$d (tree_ap$bg tree_K$c ?v0 )?v1 )?v0 )):named a54 ))
(assert (! (forall ((?v0 A_tree$ )(?v1 A_tree$ ))(= (tree_ap$e (tree_ap$bh tree_K$d ?v0 )?v1 )?v0 )):named a55 ))
(assert (! (forall ((?v0 B_tree$ )(?v1 A_tree$ ))(= (tree_ap$ (tree_ap$w tree_K$e ?v0 )?v1 )?v0 )):named a56 ))
(assert (! (forall ((?v0 Bool_tree$ )(?v1 A_tree$ ))(= (tree_ap$f (tree_ap$bi tree_K$f ?v0 )?v1 )?v0 )):named a57 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$g (tree_ap$bj tree_K$g ?v0 )?v1 )?v0 )):named a58 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$h (tree_ap$bk tree_K$h ?v0 )?v1 )?v0 )):named a59 ))
(assert (! (= (tree_ap$f (tree_ap$g (tree_ap$h (tree_pure$g uu$ )f$ )g$ )y$ )(tree_pure$d true )):named a60 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_a_bool_fun_fun$ ))(= (= (tree_pure$f ?v0 )(tree_pure$f ?v1 ))(= ?v0 ?v1 ))):named a61 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(= (= (tree_pure$c ?v0 )(tree_pure$c ?v1 ))(= ?v0 ?v1 ))):named a62 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun$ ))(= (= (tree_pure$a ?v0 )(tree_pure$a ?v1 ))(= ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 B$ )(?v1 B$ ))(= (= (tree_pure$b ?v0 )(tree_pure$b ?v1 ))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (tree_pure$ ?v0 )(tree_pure$ ?v1 ))(= ?v0 ?v1 ))):named a65 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (= (tree_pure$g ?v0 )(tree_pure$g ?v1 ))(= ?v0 ?v1 ))):named a66 ))
(assert (! (forall ((?v0 Bool )(?v1 Bool ))(= (= (tree_pure$d ?v0 )(tree_pure$d ?v1 ))(= ?v0 ?v1 ))):named a67 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$ (tree_pure$a ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$ (fun_app$c ?v0 ?v1 )(tree_ap$ (tree_pure$a ?v0 )?v2 )(tree_ap$ (tree_pure$a ?v0 )?v3 )))):named a68 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$f (tree_pure$c ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$br (fun_app$ ?v0 ?v1 )(tree_ap$f (tree_pure$c ?v0 )?v2 )(tree_ap$f (tree_pure$c ?v0 )?v3 )))):named a69 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_tree$ )(?v3 A_b_fun_tree$ ))(= (tree_ap$g (tree_pure$f ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$h (fun_app$a ?v0 ?v1 )(tree_ap$g (tree_pure$f ?v0 )?v2 )(tree_ap$g (tree_pure$f ?v0 )?v3 )))):named a70 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_tree$ )(?v3 A_b_fun_tree$ ))(= (tree_ap$h (tree_pure$g ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$k (fun_app$b ?v0 ?v1 )(tree_ap$h (tree_pure$g ?v0 )?v2 )(tree_ap$h (tree_pure$g ?v0 )?v3 )))):named a71 ))
(assert (! (forall ((?v0 B_b_fun$ )(?v1 B$ )(?v2 B_tree$ )(?v3 B_tree$ ))(= (tree_ap$u (tree_pure$m ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$ (fun_app$j ?v0 ?v1 )(tree_ap$u (tree_pure$m ?v0 )?v2 )(tree_ap$u (tree_pure$m ?v0 )?v3 )))):named a72 ))
(assert (! (forall ((?v0 B_a_fun$ )(?v1 B$ )(?v2 B_tree$ )(?v3 B_tree$ ))(= (tree_ap$bl (tree_pure$n ?v0 )(node$ ?v1 ?v2 ?v3 ))(node$b (fun_app$k ?v0 ?v1 )(tree_ap$bl (tree_pure$n ?v0 )?v2 )(tree_ap$bl (tree_pure$n ?v0 )?v3 )))):named a73 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A$ )(?v2 A_tree$ )(?v3 A_tree$ ))(= (tree_ap$e (tree_pure$o ?v0 )(node$b ?v1 ?v2 ?v3 ))(node$b (fun_app$l ?v0 ?v1 )(tree_ap$e (tree_pure$o ?v0 )?v2 )(tree_ap$e (tree_pure$o ?v0 )?v3 )))):named a74 ))
(assert (! (forall ((?v0 A_bool_fun_b_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun_tree$ )(?v3 A_bool_fun_tree$ ))(= (tree_ap$bm (tree_pure$p ?v0 )(node$h ?v1 ?v2 ?v3 ))(node$ (fun_app$m ?v0 ?v1 )(tree_ap$bm (tree_pure$p ?v0 )?v2 )(tree_ap$bm (tree_pure$p ?v0 )?v3 )))):named a75 ))
(assert (! (forall ((?v0 A_bool_fun_a_fun$ )(?v1 A_bool_fun$ )(?v2 A_bool_fun_tree$ )(?v3 A_bool_fun_tree$ ))(= (tree_ap$bn (tree_pure$q ?v0 )(node$h ?v1 ?v2 ?v3 ))(node$b (fun_app$n ?v0 ?v1 )(tree_ap$bn (tree_pure$q ?v0 )?v2 )(tree_ap$bn (tree_pure$q ?v0 )?v3 )))):named a76 ))
(assert (! (forall ((?v0 A_b_fun_b_fun$ )(?v1 A_b_fun$ )(?v2 A_b_fun_tree$ )(?v3 A_b_fun_tree$ ))(= (tree_ap$bo (tree_pure$r ?v0 )(node$a ?v1 ?v2 ?v3 ))(node$ (fun_app$o ?v0 ?v1 )(tree_ap$bo (tree_pure$r ?v0 )?v2 )(tree_ap$bo (tree_pure$r ?v0 )?v3 )))):named a77 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$ ?v1 ?v2 ))(tree_ap$ (traverse_tree$a ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a78 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_bool_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$c ?v0 (tree_ap$f ?v1 ?v2 ))(tree_ap$f (traverse_tree$d ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a79 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (traverse_tree$d ?v0 (tree_ap$g ?v1 ?v2 ))(tree_ap$g (traverse_tree$e ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a80 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v2 A_b_fun_tree$ ))(= (traverse_tree$e ?v0 (tree_ap$h ?v1 ?v2 ))(tree_ap$h (traverse_tree$f ?v0 ?v1 )(traverse_tree$a ?v0 ?v2 )))):named a81 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 B_b_fun_tree$ )(?v2 B_tree$ ))(= (traverse_tree$ ?v0 (tree_ap$u ?v1 ?v2 ))(tree_ap$u (traverse_tree$g ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a82 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 B_a_fun_tree$ )(?v2 B_tree$ ))(= (traverse_tree$b ?v0 (tree_ap$bl ?v1 ?v2 ))(tree_ap$bl (traverse_tree$h ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a83 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_a_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$b ?v0 (tree_ap$e ?v1 ?v2 ))(tree_ap$e (traverse_tree$i ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a84 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_bool_fun_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$j ?v0 (tree_ap$a ?v1 ?v2 ))(tree_ap$a (traverse_tree$k ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a85 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 A_b_b_fun_fun_tree$ )(?v2 A_tree$ ))(= (traverse_tree$g ?v0 (tree_ap$b ?v1 ?v2 ))(tree_ap$b (traverse_tree$l ?v0 ?v1 )(traverse_tree$b ?v0 ?v2 )))):named a86 ))
(assert (! (forall ((?v0 Dir_list$ )(?v1 B_a_bool_fun_fun_tree$ )(?v2 B_tree$ ))(= (traverse_tree$d ?v0 (tree_ap$t ?v1 ?v2 ))(tree_ap$t (traverse_tree$m ?v0 ?v1 )(traverse_tree$ ?v0 ?v2 )))):named a87 ))
(assert (! (forall ((?v0 A_b_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$ (tree_ap$ ?v0 ?v1 ))(tree_ap$ (tree_chop$a ?v0 )(tree_chop$b ?v1 )))):named a88 ))
(assert (! (forall ((?v0 A_bool_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$c (tree_ap$f ?v0 ?v1 ))(tree_ap$f (tree_chop$d ?v0 )(tree_chop$b ?v1 )))):named a89 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_chop$d (tree_ap$g ?v0 ?v1 ))(tree_ap$g (tree_chop$e ?v0 )(tree_chop$a ?v1 )))):named a90 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v1 A_b_fun_tree$ ))(= (tree_chop$e (tree_ap$h ?v0 ?v1 ))(tree_ap$h (tree_chop$f ?v0 )(tree_chop$a ?v1 )))):named a91 ))
(assert (! (forall ((?v0 B_b_fun_tree$ )(?v1 B_tree$ ))(= (tree_chop$ (tree_ap$u ?v0 ?v1 ))(tree_ap$u (tree_chop$g ?v0 )(tree_chop$ ?v1 )))):named a92 ))
(assert (! (forall ((?v0 B_a_fun_tree$ )(?v1 B_tree$ ))(= (tree_chop$b (tree_ap$bl ?v0 ?v1 ))(tree_ap$bl (tree_chop$h ?v0 )(tree_chop$ ?v1 )))):named a93 ))
(assert (! (forall ((?v0 A_a_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$b (tree_ap$e ?v0 ?v1 ))(tree_ap$e (tree_chop$i ?v0 )(tree_chop$b ?v1 )))):named a94 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$j (tree_ap$a ?v0 ?v1 ))(tree_ap$a (tree_chop$k ?v0 )(tree_chop$b ?v1 )))):named a95 ))
(assert (! (forall ((?v0 A_b_b_fun_fun_tree$ )(?v1 A_tree$ ))(= (tree_chop$g (tree_ap$b ?v0 ?v1 ))(tree_ap$b (tree_chop$l ?v0 )(tree_chop$b ?v1 )))):named a96 ))
(assert (! (forall ((?v0 B_a_bool_fun_fun_tree$ )(?v1 B_tree$ ))(= (tree_chop$d (tree_ap$t ?v0 ?v1 ))(tree_ap$t (tree_chop$m ?v0 )(tree_chop$ ?v1 )))):named a97 ))
(assert (! (forall ((?v0 A_b_bool_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$a (tree_pure$s ?v0 )?v1 )(map_tree$ ?v0 ?v1 ))):named a98 ))
(assert (! (forall ((?v0 A_b_b_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$b (tree_pure$t ?v0 )?v1 )(map_tree$a ?v0 ?v1 ))):named a99 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$c (tree_pure$u ?v0 )?v1 )(map_tree$b ?v0 ?v1 ))):named a100 ))
(assert (! (forall ((?v0 A_a_b_fun_fun$ )(?v1 A_tree$ ))(= (tree_ap$d (tree_pure$v ?v0 )?v1 )(map_tree$c ?v0 ?v1 ))):named a101 ))
(assert (! (forall ((?v0 A_a_fun$ )(?v1 A_tree$ ))(= (tree_ap$e (tree_pure$o ?v0 )?v1 )(map_tree$d ?v0 ?v1 ))):named a102 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ ))(= (tree_ap$o (tree_pure$j ?v0 )?v1 )(map_tree$e ?v0 ?v1 ))):named a103 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_tree$ ))(= (tree_ap$ (tree_pure$a ?v0 )?v1 )(map_tree$f ?v0 ?v1 ))):named a104 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_tree$ ))(= (tree_ap$f (tree_pure$c ?v0 )?v1 )(map_tree$g ?v0 ?v1 ))):named a105 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$g (tree_pure$f ?v0 )?v1 )(map_tree$h ?v0 ?v1 ))):named a106 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_tree$ ))(= (tree_ap$h (tree_pure$g ?v0 )?v1 )(map_tree$i ?v0 ?v1 ))):named a107 ))
(assert (! (forall ((?v0 A_tree$ ))(= (tree_ap$e (tree_pure$o id$ )?v0 )?v0 )):named a108 ))
(assert (! (forall ((?v0 B$ )(?v1 B_tree$ )(?v2 B_tree$ )(?v3 B$ )(?v4 B_tree$ )(?v5 B_tree$ ))(= (= (node$ ?v0 ?v1 ?v2 )(node$ ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a109 ))
(assert (! (forall ((?v0 A$ )(?v1 A_tree$ )(?v2 A_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(= (= (node$b ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))(and (= ?v0 ?v3 )(and (= ?v1 ?v4 )(= ?v2 ?v5 ))))):named a110 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (map_tree$e ?v0 (tree_pure$g ?v1 ))(tree_pure$g (fun_app$g ?v0 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun_bool_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ ))(= (map_tree$j ?v0 (tree_pure$g ?v1 ))(tree_pure$d (fun_app$e ?v0 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 Bool_a_b_fun_a_b_fun_a_bool_fun_fun_fun_fun$ )(?v1 Bool ))(= (map_tree$k ?v0 (tree_pure$d ?v1 ))(tree_pure$g (fun_app$f ?v0 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 Bool_bool_fun$ )(?v1 Bool ))(= (map_tree$l ?v0 (tree_pure$d ?v1 ))(tree_pure$d (fun_app$d ?v0 ?v1 )))):named a114 ))
(assert (! (forall ((?v0 A_b_fun$ )(?v1 A_b_fun_tree$ )(?v2 A_b_fun_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(! (= (tree_ap$ (node$a ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))(node$ (fun_app$c ?v0 ?v3 )(tree_ap$ ?v1 ?v4 )(tree_ap$ ?v2 ?v5 ))):pattern ((tree_ap$ (node$a ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))))):named a115 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun_tree$ )(?v2 A_bool_fun_tree$ )(?v3 A$ )(?v4 A_tree$ )(?v5 A_tree$ ))(! (= (tree_ap$f (node$h ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))(node$br (fun_app$ ?v0 ?v3 )(tree_ap$f ?v1 ?v4 )(tree_ap$f ?v2 ?v5 ))):pattern ((tree_ap$f (node$h ?v0 ?v1 ?v2 )(node$b ?v3 ?v4 ?v5 ))))):named a116 ))
(assert (! (forall ((?v0 A_b_fun_a_bool_fun_fun$ )(?v1 A_b_fun_a_bool_fun_fun_tree$ )(?v2 A_b_fun_a_bool_fun_fun_tree$ )(?v3 A_b_fun$ )(?v4 A_b_fun_tree$ )(?v5 A_b_fun_tree$ ))(! (= (tree_ap$g (node$k ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))(node$h (fun_app$a ?v0 ?v3 )(tree_ap$g ?v1 ?v4 )(tree_ap$g ?v2 ?v5 ))):pattern ((tree_ap$g (node$k ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))))):named a117 ))
(assert (! (forall ((?v0 A_b_fun_a_b_fun_a_bool_fun_fun_fun$ )(?v1 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v2 A_b_fun_a_b_fun_a_bool_fun_fun_fun_tree$ )(?v3 A_b_fun$ )(?v4 A_b_fun_tree$ )(?v5 A_b_fun_tree$ ))(! (= (tree_ap$h (node$l ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))(node$k (fun_app$b ?v0 ?v3 )(tree_ap$h ?v1 ?v4 )(tree_ap$h ?v2 ?v5 ))):pattern ((tree_ap$h (node$l ?v0 ?v1 ?v2 )(node$a ?v3 ?v4 ?v5 ))))):named a118 ))
(check-sat )
;(get-unsat-core )
