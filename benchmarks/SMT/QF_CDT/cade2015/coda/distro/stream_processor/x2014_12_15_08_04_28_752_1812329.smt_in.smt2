;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort C$ 0 )
(declare-sort B_set$ 0 )
(declare-sort C_set$ 0 )
(declare-sort C_c_fun$ 0 )
(declare-sort A_b_sp_nu$ 0 )
(declare-sort A_c_sp_nu$ 0 )
(declare-sort C_b_sp_nu$ 0 )
(declare-sort B_bool_fun$ 0 )
(declare-sort C_bool_fun$ 0 )
(declare-sort B_stream_set$ 0 )
(declare-sort C_stream_set$ 0 )
(declare-sort C_b_sp_nu_set$ 0 )
(declare-sort C_b_sp_nu_b_fun$ 0 )
(declare-sort C_b_sp_nu_c_fun$ 0 )
(declare-sort C_c_b_sp_nu_fun$ 0 )
(declare-sort B_stream_bool_fun$ 0 )
(declare-sort C_stream_bool_fun$ 0 )
(declare-sort B_stream_stream_set$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu$ 0 )
(declare-sort C_c_fun_c_c_fun_fun$ 0 )
(declare-sort C_stream_stream_set$ 0 )
(declare-sort C_b_sp_nu_stream_set$ 0 )
(declare-sort C_b_sp_nu_b_stream_fun$ 0 )
(declare-sort B_b_stream_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_set$ 0 )
(declare-sort C_b_sp_nu_c_b_sp_nu_fun$ 0 )
(declare-sort C_c_stream_bool_fun_fun$ 0 )
(declare-sort B_stream_stream_bool_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_fun$ 0 )
(declare-sort C_b_sp_nu_stream_bool_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_c_c_fun_c_c_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_bool_fun$ 0 )
(declare-sort B_stream_b_stream_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_stream_set$ 0 )
(declare-sort C_stream_c_stream_bool_fun_fun$ 0 )
(declare-sort C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_stream_bool_fun$ 0 )
(declare-sort B_stream_b_stream_stream_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_stream_stream_set$ 0 )
(declare-sort C_b_sp_nu_c_b_sp_nu_stream_bool_fun_fun$ 0 )
(declare-sort C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_stream_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ 0 )
(declare-sort C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ 0 )
(declare-sort C_c_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ 0 )
(declare-sort C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun_fun$ 0 )
(declare-codatatypes ()((B_stream$ (sCons$ (shd$ B$ )(stl$ B_stream$ )))(A_stream$ (sCons$a (shd$a A$ )(stl$a A_stream$ )))(C_stream$ (sCons$b (shd$b C$ )(stl$b C_stream$ )))(C_b_c_b_sp_nu_sp_mu_stream$ (sCons$c (shd$c C_b_c_b_sp_nu_sp_mu$ )(stl$c C_b_c_b_sp_nu_sp_mu_stream$ )))))
(declare-sort B_c_b_sp_nu_prod$ 0)
(declare-sort B_c_b_sp_nu_prod_c_stream_prod$ 0)
(declare-fun fst$ (B_c_b_sp_nu_prod$)B$)
(declare-fun snd$ (B_c_b_sp_nu_prod$)C_b_sp_nu$)
(declare-fun pair$ (B$ C_b_sp_nu$ )B_c_b_sp_nu_prod$)
(declare-fun fst$a (B_c_b_sp_nu_prod_c_stream_prod$)B_c_b_sp_nu_prod$)
(declare-fun snd$a (B_c_b_sp_nu_prod_c_stream_prod$)C_stream$)
(declare-fun pair$a (B_c_b_sp_nu_prod$ C_stream$ )B_c_b_sp_nu_prod_c_stream_prod$)
(declare-codatatypes ()((B_stream_stream$ (sCons$d (shd$d B_stream$ )(stl$d B_stream_stream$ )))(C_b_c_b_sp_nu_sp_mu_stream_stream$ (sCons$e (shd$e C_b_c_b_sp_nu_sp_mu_stream$ )(stl$e C_b_c_b_sp_nu_sp_mu_stream_stream$ )))(C_b_sp_nu_stream$ (sCons$f (shd$f C_b_sp_nu$ )(stl$f C_b_sp_nu_stream$ )))))
(declare-fun f$ ()C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun sb$ ()A_stream$ )
(declare-fun uu$ (C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_bool_fun$ )
(declare-fun get$ (C_c_b_c_b_sp_nu_sp_mu_fun$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun out$ (C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun spb$ ()C_b_sp_nu$ )
(declare-fun top$ ()C_set$ )
(declare-fun sp_b$ ()A_c_sp_nu$ )
(declare-fun sset$ (B_stream_stream$ )B_stream_set$ )
(declare-fun swap$ (C$ )C_c_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun_fun$ )
(declare-fun top$a ()B_set$ )
(declare-fun top$b ()B_stream_set$ )
(declare-fun top$c ()C_stream_set$ )
(declare-fun top$d ()C_stream_stream_set$ )
(declare-fun top$e ()C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun top$f ()C_b_c_b_sp_nu_sp_mu_stream_set$ )
(declare-fun top$g ()C_bool_fun$ )
(declare-fun top$h (C_b_c_b_sp_nu_sp_mu$ )Bool )
(declare-fun image$ (C_c_b_c_b_sp_nu_sp_mu_fun$ C_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun sset$a (C_b_c_b_sp_nu_sp_mu_stream_stream$ )C_b_c_b_sp_nu_sp_mu_stream_set$ )
(declare-fun sset$b (C_b_sp_nu_stream$ )C_b_sp_nu_set$ )
(declare-fun sset$c (C_stream$ )C_set$ )
(declare-fun sset$d (C_b_c_b_sp_nu_sp_mu_stream$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun sset$e (B_stream$ )B_set$ )
(declare-fun swap$a (C$ )C_c_c_fun_c_c_fun_fun_fun$ )
(declare-fun image$a (C_c_fun$ C_set$ )C_set$ )
(declare-fun image$b (C_c_b_sp_nu_fun$ C_set$ )C_b_sp_nu_set$ )
(declare-fun image$c (C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_sp_nu_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun image$d (C_b_sp_nu_b_stream_fun$ C_b_sp_nu_set$ )B_stream_set$ )
(declare-fun image$e (C_b_sp_nu_b_fun$ C_b_sp_nu_set$ )B_set$ )
(declare-fun image$f (C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_stream_fun$ C_b_sp_nu_set$ )C_b_c_b_sp_nu_sp_mu_stream_set$ )
(declare-fun image$g (C_b_sp_nu_c_fun$ C_b_sp_nu_set$ )C_set$ )
(declare-fun image$h (C_b_sp_nu_c_b_sp_nu_fun$ C_b_sp_nu_set$ )C_b_sp_nu_set$ )
(declare-fun image$i (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun member$ (C_b_c_b_sp_nu_sp_mu$ C_b_c_b_sp_nu_sp_mu_set$ )Bool )
(declare-fun run_mu$ (C_b_c_b_sp_nu_sp_mu$ C_stream$ )B_c_b_sp_nu_prod_c_stream_prod$ )
(declare-fun run_nu$ (A_b_sp_nu$ A_stream$ )B_stream$ )
(declare-fun collect$ (C_b_c_b_sp_nu_sp_mu_bool_fun$ )C_b_c_b_sp_nu_sp_mu_set$ )
(declare-fun fun_app$ (C_b_c_b_sp_nu_sp_mu_bool_fun$ C_b_c_b_sp_nu_sp_mu$ )Bool )
(declare-fun member$a (B_stream_stream$ B_stream_stream_set$ )Bool )
(declare-fun member$b (B_stream$ B_stream_set$ )Bool )
(declare-fun member$c (C_b_c_b_sp_nu_sp_mu_stream_stream$ C_b_c_b_sp_nu_sp_mu_stream_stream_set$ )Bool )
(declare-fun member$d (C_b_c_b_sp_nu_sp_mu_stream$ C_b_c_b_sp_nu_sp_mu_stream_set$ )Bool )
(declare-fun member$e (C_b_sp_nu_stream$ C_b_sp_nu_stream_set$ )Bool )
(declare-fun member$f (C_b_sp_nu$ C_b_sp_nu_set$ )Bool )
(declare-fun member$g (C_stream$ C_stream_set$ )Bool )
(declare-fun member$h (C$ C_set$ )Bool )
(declare-fun member$i (B$ B_set$ )Bool )
(declare-fun run_nu$a (C_b_sp_nu$ C_stream$ )B_stream$ )
(declare-fun run_nu$b (A_c_sp_nu$ A_stream$ )C_stream$ )
(declare-fun smember$ (C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_stream_bool_fun$ )
(declare-fun streams$ (B_stream_set$ )B_stream_stream_set$ )
(declare-fun collect$a (C_bool_fun$ )C_set$ )
(declare-fun fun_app$a (C_stream_bool_fun$ C_stream$ )Bool )
(declare-fun fun_app$b (C_stream_c_stream_bool_fun_fun$ C_stream$ )C_stream_bool_fun$ )
(declare-fun fun_app$c (C_b_c_b_sp_nu_sp_mu_stream_bool_fun$ C_b_c_b_sp_nu_sp_mu_stream$ )Bool )
(declare-fun fun_app$d (C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_stream$ )C_b_c_b_sp_nu_sp_mu_stream_bool_fun$ )
(declare-fun fun_app$e (B_stream_bool_fun$ B_stream$ )Bool )
(declare-fun fun_app$f (B_stream_b_stream_bool_fun_fun$ B_stream$ )B_stream_bool_fun$ )
(declare-fun fun_app$g (C_c_b_c_b_sp_nu_sp_mu_fun$ C$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$h (C_bool_fun$ C$ )Bool )
(declare-fun fun_app$i (B_bool_fun$ B$ )Bool )
(declare-fun fun_app$j (B_stream_stream_bool_fun$ B_stream_stream$ )Bool )
(declare-fun fun_app$k (B_stream_b_stream_stream_bool_fun_fun$ B_stream$ )B_stream_stream_bool_fun$ )
(declare-fun fun_app$l (C_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun$ C_b_c_b_sp_nu_sp_mu_stream_stream$ )Bool )
(declare-fun fun_app$m (C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu_stream$ )C_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun$ )
(declare-fun fun_app$n (C_b_sp_nu_stream_bool_fun$ C_b_sp_nu_stream$ )Bool )
(declare-fun fun_app$o (C_b_sp_nu_c_b_sp_nu_stream_bool_fun_fun$ C_b_sp_nu$ )C_b_sp_nu_stream_bool_fun$ )
(declare-fun fun_app$p (C_c_stream_bool_fun_fun$ C$ )C_stream_bool_fun$ )
(declare-fun fun_app$q (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu_stream_bool_fun$ )
(declare-fun fun_app$r (B_b_stream_bool_fun_fun$ B$ )B_stream_bool_fun$ )
(declare-fun fun_app$s (C_c_fun$ C$ )C$ )
(declare-fun fun_app$t (C_c_b_sp_nu_fun$ C$ )C_b_sp_nu$ )
(declare-fun fun_app$u (C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$v (C_b_sp_nu_b_stream_fun$ C_b_sp_nu$ )B_stream$ )
(declare-fun fun_app$w (C_b_sp_nu_b_fun$ C_b_sp_nu$ )B$ )
(declare-fun fun_app$x (C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_stream_fun$ C_b_sp_nu$ )C_b_c_b_sp_nu_sp_mu_stream$ )
(declare-fun fun_app$y (C_b_sp_nu_c_fun$ C_b_sp_nu$ )C$ )
(declare-fun fun_app$z (C_b_sp_nu_c_b_sp_nu_fun$ C_b_sp_nu$ )C_b_sp_nu$ )
(declare-fun streams$a (C_b_c_b_sp_nu_sp_mu_stream_set$ )C_b_c_b_sp_nu_sp_mu_stream_stream_set$ )
(declare-fun streams$b (C_b_sp_nu_set$ )C_b_sp_nu_stream_set$ )
(declare-fun streams$c (C_set$ )C_stream_set$ )
(declare-fun streams$d (C_b_c_b_sp_nu_sp_mu_set$ )C_b_c_b_sp_nu_sp_mu_stream_set$ )
(declare-fun streams$e (B_set$ )B_stream_set$ )
(declare-fun streams$f (C_stream_set$ )C_stream_stream_set$ )
(declare-fun fun_app$aa (C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ C_b_c_b_sp_nu_sp_mu$ )C_b_c_b_sp_nu_sp_mu$ )
(declare-fun fun_app$ab (C_b_c_b_sp_nu_sp_mu_c_fun$ C_b_c_b_sp_nu_sp_mu$ )C$ )
(declare-fun fun_app$ac (C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ C_c_b_c_b_sp_nu_sp_mu_fun$ )C_c_b_c_b_sp_nu_sp_mu_fun$ )
(declare-fun fun_app$ad (C_c_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun_fun$ C$ )C_c_b_c_b_sp_nu_sp_mu_fun_c_c_b_c_b_sp_nu_sp_mu_fun_fun$ )
(declare-fun fun_app$ae (C_c_fun_c_c_fun_fun$ C_c_fun$ )C_c_fun$ )
(declare-fun fun_app$af (C_c_c_fun_c_c_fun_fun_fun$ C$ )C_c_fun_c_c_fun_fun$ )
(declare-fun set1_sp_mu$ (C_b_c_b_sp_nu_sp_mu$ )B_set$ )
(declare-fun set2_sp_mu$ (C_b_c_b_sp_nu_sp_mu$ )C_b_sp_nu_set$ )
(declare-fun sdrop_while$ (C_bool_fun$ C_stream$ )C_stream$ )
(declare-fun sinterleave$ (B_stream$ B_stream$ )B_stream$ )
(declare-fun sp_nu_comp2$ (C_b_sp_nu$ A_c_sp_nu$ )A_b_sp_nu$ )
(declare-fun sdrop_while$a (C_b_c_b_sp_nu_sp_mu_bool_fun$ C_b_c_b_sp_nu_sp_mu_stream$ )C_b_c_b_sp_nu_sp_mu_stream$ )
(declare-fun sdrop_while$b (B_bool_fun$ B_stream$ )B_stream$ )
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(! (= (fun_app$ (uu$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$ (uu$ ?v0 )?v1 )))):named a0 ))
(assert (! (not (and (= (shd$ (run_nu$ (sp_nu_comp2$ spb$ sp_b$ )sb$ ))(shd$ (run_nu$a spb$ (run_nu$b sp_b$ sb$ ))))(exists ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ spb$ sp_b$ )sb$ ))(run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(= (stl$ (run_nu$a spb$ (run_nu$b sp_b$ sb$ )))(run_nu$a ?v0 (run_nu$b ?v1 ?v2 ))))))):named a1 ))
(assert (! (= (get$ f$ )(out$ spb$ )):named a2 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 A_c_sp_nu$ )(?v2 A_stream$ ))(=> (member$ (out$ ?v0 )(image$ f$ top$ ))(and (= (shd$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(shd$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 ))))(exists ((?v3 C_b_sp_nu$ )(?v4 A_c_sp_nu$ )(?v5 A_stream$ ))(and (= (stl$ (run_nu$ (sp_nu_comp2$ ?v0 ?v1 )?v2 ))(run_nu$ (sp_nu_comp2$ ?v3 ?v4 )?v5 ))(= (stl$ (run_nu$a ?v0 (run_nu$b ?v1 ?v2 )))(run_nu$a ?v3 (run_nu$b ?v4 ?v5 )))))))):named a3 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_stream$ ))(=> (and (= (shd$b ?v0 )(shd$b ?v1 ))(= (stl$b ?v0 )(stl$b ?v1 )))(= ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (= (shd$c ?v0 )(shd$c ?v1 ))(= (stl$c ?v0 )(stl$c ?v1 )))(= ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(=> (and (= (shd$ ?v0 )(shd$ ?v1 ))(= (stl$ ?v0 )(stl$ ?v1 )))(= ?v0 ?v1 ))):named a6 ))
(assert (! (forall ((?v0 C_stream_c_stream_bool_fun_fun$ )(?v1 C_stream$ )(?v2 C_stream$ ))(=> (and (fun_app$a (fun_app$b ?v0 ?v1 )?v2 )(forall ((?v3 C_stream$ )(?v4 C_stream$ ))(=> (fun_app$a (fun_app$b ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(or (fun_app$a (fun_app$b ?v0 (stl$b ?v3 ))(stl$b ?v4 ))(= (stl$b ?v3 )(stl$b ?v4 )))))))(= ?v1 ?v2 ))):named a7 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream$ )(?v4 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (fun_app$c (fun_app$d ?v0 ?v3 )?v4 )(and (= (shd$c ?v3 )(shd$c ?v4 ))(or (fun_app$c (fun_app$d ?v0 (stl$c ?v3 ))(stl$c ?v4 ))(= (stl$c ?v3 )(stl$c ?v4 )))))))(= ?v1 ?v2 ))):named a8 ))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(=> (and (fun_app$e (fun_app$f ?v0 ?v1 )?v2 )(forall ((?v3 B_stream$ )(?v4 B_stream$ ))(=> (fun_app$e (fun_app$f ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(or (fun_app$e (fun_app$f ?v0 (stl$ ?v3 ))(stl$ ?v4 ))(= (stl$ ?v3 )(stl$ ?v4 )))))))(= ?v1 ?v2 ))):named a9 ))
(assert (! (forall ((?v0 C_stream_c_stream_bool_fun_fun$ )(?v1 C_stream$ )(?v2 C_stream$ ))(=> (and (fun_app$a (fun_app$b ?v0 ?v1 )?v2 )(forall ((?v3 C_stream$ )(?v4 C_stream$ ))(=> (fun_app$a (fun_app$b ?v0 ?v3 )?v4 )(and (= (shd$b ?v3 )(shd$b ?v4 ))(fun_app$a (fun_app$b ?v0 (stl$b ?v3 ))(stl$b ?v4 ))))))(= ?v1 ?v2 ))):named a10 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (fun_app$c (fun_app$d ?v0 ?v1 )?v2 )(forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream$ )(?v4 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (fun_app$c (fun_app$d ?v0 ?v3 )?v4 )(and (= (shd$c ?v3 )(shd$c ?v4 ))(fun_app$c (fun_app$d ?v0 (stl$c ?v3 ))(stl$c ?v4 ))))))(= ?v1 ?v2 ))):named a11 ))
(assert (! (forall ((?v0 B_stream_b_stream_bool_fun_fun$ )(?v1 B_stream$ )(?v2 B_stream$ ))(=> (and (fun_app$e (fun_app$f ?v0 ?v1 )?v2 )(forall ((?v3 B_stream$ )(?v4 B_stream$ ))(=> (fun_app$e (fun_app$f ?v0 ?v3 )?v4 )(and (= (shd$ ?v3 )(shd$ ?v4 ))(fun_app$e (fun_app$f ?v0 (stl$ ?v3 ))(stl$ ?v4 ))))))(= ?v1 ?v2 ))):named a12 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_stream$ ))(! (= (run_mu$ (get$ ?v0 )?v1 )(run_mu$ (fun_app$g ?v0 (shd$b ?v1 ))(stl$b ?v1 ))):pattern ((run_mu$ (get$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (get$ ?v0 )(get$ ?v1 ))(= ?v0 ?v1 ))):named a14 ))
(assert (! (forall ((?v0 C_bool_fun$ )(?v1 C_stream$ ))(= (sdrop_while$ ?v0 ?v1 )(ite (fun_app$h ?v0 (shd$b ?v1 ))(sdrop_while$ ?v0 (stl$b ?v1 ))?v1 ))):named a15 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(= (sdrop_while$a ?v0 ?v1 )(ite (fun_app$ ?v0 (shd$c ?v1 ))(sdrop_while$a ?v0 (stl$c ?v1 ))?v1 ))):named a16 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B_stream$ ))(= (sdrop_while$b ?v0 ?v1 )(ite (fun_app$i ?v0 (shd$ ?v1 ))(sdrop_while$b ?v0 (stl$ ?v1 ))?v1 ))):named a17 ))
(assert (! (forall ((?v0 C_stream$ ))(= (sCons$b (shd$b ?v0 )(stl$b ?v0 ))?v0 )):named a18 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ ))(= (sCons$c (shd$c ?v0 )(stl$c ?v0 ))?v0 )):named a19 ))
(assert (! (forall ((?v0 B_stream$ ))(= (sCons$ (shd$ ?v0 )(stl$ ?v0 ))?v0 )):named a20 ))
(assert (! (forall ((?v0 B_stream_stream$ )(?v1 B_stream_set$ ))(=> (and (member$a (stl$d ?v0 )(streams$ ?v1 ))(member$b (shd$d ?v0 )?v1 ))(member$a ?v0 (streams$ ?v1 )))):named a21 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_set$ ))(=> (and (member$c (stl$e ?v0 )(streams$a ?v1 ))(member$d (shd$e ?v0 )?v1 ))(member$c ?v0 (streams$a ?v1 )))):named a22 ))
(assert (! (forall ((?v0 C_b_sp_nu_stream$ )(?v1 C_b_sp_nu_set$ ))(=> (and (member$e (stl$f ?v0 )(streams$b ?v1 ))(member$f (shd$f ?v0 )?v1 ))(member$e ?v0 (streams$b ?v1 )))):named a23 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_set$ ))(=> (and (member$g (stl$b ?v0 )(streams$c ?v1 ))(member$h (shd$b ?v0 )?v1 ))(member$g ?v0 (streams$c ?v1 )))):named a24 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (member$d (stl$c ?v0 )(streams$d ?v1 ))(member$ (shd$c ?v0 )?v1 ))(member$d ?v0 (streams$d ?v1 )))):named a25 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_set$ ))(=> (and (member$b (stl$ ?v0 )(streams$e ?v1 ))(member$i (shd$ ?v0 )?v1 ))(member$b ?v0 (streams$e ?v1 )))):named a26 ))
(assert (! (forall ((?v0 B_stream_stream$ )(?v1 B_stream_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(=> (and (member$b (shd$d ?v0 )?v1 )(member$a (stl$d ?v0 )(streams$ ?v1 )))false ))false )):named a27 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(=> (and (member$d (shd$e ?v0 )?v1 )(member$c (stl$e ?v0 )(streams$a ?v1 )))false ))false )):named a28 ))
(assert (! (forall ((?v0 C_b_sp_nu_stream$ )(?v1 C_b_sp_nu_set$ ))(=> (and (member$e ?v0 (streams$b ?v1 ))(=> (and (member$f (shd$f ?v0 )?v1 )(member$e (stl$f ?v0 )(streams$b ?v1 )))false ))false )):named a29 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_set$ ))(=> (and (member$g ?v0 (streams$c ?v1 ))(=> (and (member$h (shd$b ?v0 )?v1 )(member$g (stl$b ?v0 )(streams$c ?v1 )))false ))false )):named a30 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (member$d ?v0 (streams$d ?v1 ))(=> (and (member$ (shd$c ?v0 )?v1 )(member$d (stl$c ?v0 )(streams$d ?v1 )))false ))false )):named a31 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_set$ ))(=> (and (member$b ?v0 (streams$e ?v1 ))(=> (and (member$i (shd$ ?v0 )?v1 )(member$b (stl$ ?v0 )(streams$e ?v1 )))false ))false )):named a32 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream_stream$ )(?v2 B_stream_b_stream_stream_bool_fun_fun$ ))(=> (and (member$b ?v0 (sset$ ?v1 ))(and (forall ((?v3 B_stream_stream$ ))(fun_app$j (fun_app$k ?v2 (shd$d ?v3 ))?v3 ))(forall ((?v3 B_stream_stream$ )(?v4 B_stream$ ))(=> (and (member$b ?v4 (sset$ (stl$d ?v3 )))(fun_app$j (fun_app$k ?v2 ?v4 )(stl$d ?v3 )))(fun_app$j (fun_app$k ?v2 ?v4 )?v3 )))))(fun_app$j (fun_app$k ?v2 ?v0 )?v1 ))):named a33 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun_fun$ ))(=> (and (member$d ?v0 (sset$a ?v1 ))(and (forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(fun_app$l (fun_app$m ?v2 (shd$e ?v3 ))?v3 ))(forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v4 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (member$d ?v4 (sset$a (stl$e ?v3 )))(fun_app$l (fun_app$m ?v2 ?v4 )(stl$e ?v3 )))(fun_app$l (fun_app$m ?v2 ?v4 )?v3 )))))(fun_app$l (fun_app$m ?v2 ?v0 )?v1 ))):named a34 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_stream$ )(?v2 C_b_sp_nu_c_b_sp_nu_stream_bool_fun_fun$ ))(=> (and (member$f ?v0 (sset$b ?v1 ))(and (forall ((?v3 C_b_sp_nu_stream$ ))(fun_app$n (fun_app$o ?v2 (shd$f ?v3 ))?v3 ))(forall ((?v3 C_b_sp_nu_stream$ )(?v4 C_b_sp_nu$ ))(=> (and (member$f ?v4 (sset$b (stl$f ?v3 )))(fun_app$n (fun_app$o ?v2 ?v4 )(stl$f ?v3 )))(fun_app$n (fun_app$o ?v2 ?v4 )?v3 )))))(fun_app$n (fun_app$o ?v2 ?v0 )?v1 ))):named a35 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ )(?v2 C_c_stream_bool_fun_fun$ ))(=> (and (member$h ?v0 (sset$c ?v1 ))(and (forall ((?v3 C_stream$ ))(fun_app$a (fun_app$p ?v2 (shd$b ?v3 ))?v3 ))(forall ((?v3 C_stream$ )(?v4 C$ ))(=> (and (member$h ?v4 (sset$c (stl$b ?v3 )))(fun_app$a (fun_app$p ?v2 ?v4 )(stl$b ?v3 )))(fun_app$a (fun_app$p ?v2 ?v4 )?v3 )))))(fun_app$a (fun_app$p ?v2 ?v0 )?v1 ))):named a36 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ ))(=> (and (member$ ?v0 (sset$d ?v1 ))(and (forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream$ ))(fun_app$c (fun_app$q ?v2 (shd$c ?v3 ))?v3 ))(forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream$ )(?v4 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$ ?v4 (sset$d (stl$c ?v3 )))(fun_app$c (fun_app$q ?v2 ?v4 )(stl$c ?v3 )))(fun_app$c (fun_app$q ?v2 ?v4 )?v3 )))))(fun_app$c (fun_app$q ?v2 ?v0 )?v1 ))):named a37 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B_b_stream_bool_fun_fun$ ))(=> (and (member$i ?v0 (sset$e ?v1 ))(and (forall ((?v3 B_stream$ ))(fun_app$e (fun_app$r ?v2 (shd$ ?v3 ))?v3 ))(forall ((?v3 B_stream$ )(?v4 B$ ))(=> (and (member$i ?v4 (sset$e (stl$ ?v3 )))(fun_app$e (fun_app$r ?v2 ?v4 )(stl$ ?v3 )))(fun_app$e (fun_app$r ?v2 ?v4 )?v3 )))))(fun_app$e (fun_app$r ?v2 ?v0 )?v1 ))):named a38 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B$ )(?v3 B_stream$ ))(= (= (sCons$ ?v0 ?v1 )(sCons$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_stream$ ))(= (= (sCons$c ?v0 ?v1 )(sCons$c ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a40 ))
(assert (! (= (streams$e top$a )top$b ):named a41 ))
(assert (! (= (streams$f top$c )top$d ):named a42 ))
(assert (! (= (streams$d top$e )top$f ):named a43 ))
(assert (! (= (streams$c top$ )top$c ):named a44 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream_stream$ )(?v2 B_stream_set$ ))(= (member$a (sCons$d ?v0 ?v1 )(streams$ ?v2 ))(and (member$b ?v0 ?v2 )(member$a ?v1 (streams$ ?v2 ))))):named a45 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream_set$ ))(= (member$c (sCons$e ?v0 ?v1 )(streams$a ?v2 ))(and (member$d ?v0 ?v2 )(member$c ?v1 (streams$a ?v2 ))))):named a46 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_stream$ )(?v2 C_b_sp_nu_set$ ))(= (member$e (sCons$f ?v0 ?v1 )(streams$b ?v2 ))(and (member$f ?v0 ?v2 )(member$e ?v1 (streams$b ?v2 ))))):named a47 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ )(?v2 C_set$ ))(= (member$g (sCons$b ?v0 ?v1 )(streams$c ?v2 ))(and (member$h ?v0 ?v2 )(member$g ?v1 (streams$c ?v2 ))))):named a48 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B_set$ ))(= (member$b (sCons$ ?v0 ?v1 )(streams$e ?v2 ))(and (member$i ?v0 ?v2 )(member$b ?v1 (streams$e ?v2 ))))):named a49 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(= (member$d (sCons$c ?v0 ?v1 )(streams$d ?v2 ))(and (member$ ?v0 ?v2 )(member$d ?v1 (streams$d ?v2 ))))):named a50 ))
(assert (! (forall ((?v0 B_bool_fun$ )(?v1 B$ )(?v2 B_stream$ ))(! (= (sdrop_while$b ?v0 (sCons$ ?v1 ?v2 ))(ite (fun_app$i ?v0 ?v1 )(sdrop_while$b ?v0 ?v2 )(sCons$ ?v1 ?v2 ))):pattern ((sdrop_while$b ?v0 (sCons$ ?v1 ?v2 ))))):named a51 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_bool_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream$ ))(! (= (sdrop_while$a ?v0 (sCons$c ?v1 ?v2 ))(ite (fun_app$ ?v0 ?v1 )(sdrop_while$a ?v0 ?v2 )(sCons$c ?v1 ?v2 ))):pattern ((sdrop_while$a ?v0 (sCons$c ?v1 ?v2 ))))):named a52 ))
(assert (! (forall ((?v0 B_stream_stream$ )(?v1 B_stream_set$ ))(= (member$a ?v0 (streams$ ?v1 ))(exists ((?v2 B_stream$ )(?v3 B_stream_stream$ ))(and (= ?v0 (sCons$d ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$ ?v1 ))))))):named a53 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_set$ ))(= (member$c ?v0 (streams$a ?v1 ))(exists ((?v2 C_b_c_b_sp_nu_sp_mu_stream$ )(?v3 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(and (= ?v0 (sCons$e ?v2 ?v3 ))(and (member$d ?v2 ?v1 )(member$c ?v3 (streams$a ?v1 ))))))):named a54 ))
(assert (! (forall ((?v0 C_b_sp_nu_stream$ )(?v1 C_b_sp_nu_set$ ))(= (member$e ?v0 (streams$b ?v1 ))(exists ((?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_stream$ ))(and (= ?v0 (sCons$f ?v2 ?v3 ))(and (member$f ?v2 ?v1 )(member$e ?v3 (streams$b ?v1 ))))))):named a55 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_set$ ))(= (member$g ?v0 (streams$c ?v1 ))(exists ((?v2 C$ )(?v3 C_stream$ ))(and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$h ?v2 ?v1 )(member$g ?v3 (streams$c ?v1 ))))))):named a56 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_set$ ))(= (member$b ?v0 (streams$e ?v1 ))(exists ((?v2 B$ )(?v3 B_stream$ ))(and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$i ?v2 ?v1 )(member$b ?v3 (streams$e ?v1 ))))))):named a57 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ ))(= (member$d ?v0 (streams$d ?v1 ))(exists ((?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_stream$ ))(and (= ?v0 (sCons$c ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$d ?v3 (streams$d ?v1 ))))))):named a58 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (forall ((?v1 B$ )(?v2 B_stream$ ))(=> (= ?v0 (sCons$ ?v1 ?v2 ))false ))false )):named a59 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (forall ((?v1 C_b_c_b_sp_nu_sp_mu$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (= ?v0 (sCons$c ?v1 ?v2 ))false ))false )):named a60 ))
(assert (! (forall ((?v0 B_stream_stream$ )(?v1 B_stream_set$ ))(=> (and (member$a ?v0 (streams$ ?v1 ))(forall ((?v2 B_stream$ )(?v3 B_stream_stream$ ))(=> (and (= ?v0 (sCons$d ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$a ?v3 (streams$ ?v1 ))))false )))false )):named a61 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_set$ ))(=> (and (member$c ?v0 (streams$a ?v1 ))(forall ((?v2 C_b_c_b_sp_nu_sp_mu_stream$ )(?v3 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(=> (and (= ?v0 (sCons$e ?v2 ?v3 ))(and (member$d ?v2 ?v1 )(member$c ?v3 (streams$a ?v1 ))))false )))false )):named a62 ))
(assert (! (forall ((?v0 C_b_sp_nu_stream$ )(?v1 C_b_sp_nu_set$ ))(=> (and (member$e ?v0 (streams$b ?v1 ))(forall ((?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_stream$ ))(=> (and (= ?v0 (sCons$f ?v2 ?v3 ))(and (member$f ?v2 ?v1 )(member$e ?v3 (streams$b ?v1 ))))false )))false )):named a63 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_set$ ))(=> (and (member$g ?v0 (streams$c ?v1 ))(forall ((?v2 C$ )(?v3 C_stream$ ))(=> (and (= ?v0 (sCons$b ?v2 ?v3 ))(and (member$h ?v2 ?v1 )(member$g ?v3 (streams$c ?v1 ))))false )))false )):named a64 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_set$ ))(=> (and (member$b ?v0 (streams$e ?v1 ))(forall ((?v2 B$ )(?v3 B_stream$ ))(=> (and (= ?v0 (sCons$ ?v2 ?v3 ))(and (member$i ?v2 ?v1 )(member$b ?v3 (streams$e ?v1 ))))false )))false )):named a65 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (member$d ?v0 (streams$d ?v1 ))(forall ((?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (= ?v0 (sCons$c ?v2 ?v3 ))(and (member$ ?v2 ?v1 )(member$d ?v3 (streams$d ?v1 ))))false )))false )):named a66 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream_stream$ )(?v2 B_stream_b_stream_stream_bool_fun_fun$ ))(=> (and (member$b ?v0 (sset$ ?v1 ))(and (forall ((?v3 B_stream$ )(?v4 B_stream_stream$ ))(fun_app$j (fun_app$k ?v2 ?v3 )(sCons$d ?v3 ?v4 )))(forall ((?v3 B_stream$ )(?v4 B_stream_stream$ )(?v5 B_stream$ ))(=> (and (member$b ?v5 (sset$ ?v4 ))(fun_app$j (fun_app$k ?v2 ?v5 )?v4 ))(fun_app$j (fun_app$k ?v2 ?v5 )(sCons$d ?v3 ?v4 ))))))(fun_app$j (fun_app$k ?v2 ?v0 )?v1 ))):named a67 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream_c_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun_fun$ ))(=> (and (member$d ?v0 (sset$a ?v1 ))(and (forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream$ )(?v4 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(fun_app$l (fun_app$m ?v2 ?v3 )(sCons$e ?v3 ?v4 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream$ )(?v4 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v5 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (member$d ?v5 (sset$a ?v4 ))(fun_app$l (fun_app$m ?v2 ?v5 )?v4 ))(fun_app$l (fun_app$m ?v2 ?v5 )(sCons$e ?v3 ?v4 ))))))(fun_app$l (fun_app$m ?v2 ?v0 )?v1 ))):named a68 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ )(?v2 C_c_stream_bool_fun_fun$ ))(=> (and (member$h ?v0 (sset$c ?v1 ))(and (forall ((?v3 C$ )(?v4 C_stream$ ))(fun_app$a (fun_app$p ?v2 ?v3 )(sCons$b ?v3 ?v4 )))(forall ((?v3 C$ )(?v4 C_stream$ )(?v5 C$ ))(=> (and (member$h ?v5 (sset$c ?v4 ))(fun_app$a (fun_app$p ?v2 ?v5 )?v4 ))(fun_app$a (fun_app$p ?v2 ?v5 )(sCons$b ?v3 ?v4 ))))))(fun_app$a (fun_app$p ?v2 ?v0 )?v1 ))):named a69 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_stream$ )(?v2 C_b_sp_nu_c_b_sp_nu_stream_bool_fun_fun$ ))(=> (and (member$f ?v0 (sset$b ?v1 ))(and (forall ((?v3 C_b_sp_nu$ )(?v4 C_b_sp_nu_stream$ ))(fun_app$n (fun_app$o ?v2 ?v3 )(sCons$f ?v3 ?v4 )))(forall ((?v3 C_b_sp_nu$ )(?v4 C_b_sp_nu_stream$ )(?v5 C_b_sp_nu$ ))(=> (and (member$f ?v5 (sset$b ?v4 ))(fun_app$n (fun_app$o ?v2 ?v5 )?v4 ))(fun_app$n (fun_app$o ?v2 ?v5 )(sCons$f ?v3 ?v4 ))))))(fun_app$n (fun_app$o ?v2 ?v0 )?v1 ))):named a70 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B_b_stream_bool_fun_fun$ ))(=> (and (member$i ?v0 (sset$e ?v1 ))(and (forall ((?v3 B$ )(?v4 B_stream$ ))(fun_app$e (fun_app$r ?v2 ?v3 )(sCons$ ?v3 ?v4 )))(forall ((?v3 B$ )(?v4 B_stream$ )(?v5 B$ ))(=> (and (member$i ?v5 (sset$e ?v4 ))(fun_app$e (fun_app$r ?v2 ?v5 )?v4 ))(fun_app$e (fun_app$r ?v2 ?v5 )(sCons$ ?v3 ?v4 ))))))(fun_app$e (fun_app$r ?v2 ?v0 )?v1 ))):named a71 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_stream_bool_fun_fun$ ))(=> (and (member$ ?v0 (sset$d ?v1 ))(and (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ )(?v4 C_b_c_b_sp_nu_sp_mu_stream$ ))(fun_app$c (fun_app$q ?v2 ?v3 )(sCons$c ?v3 ?v4 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ )(?v4 C_b_c_b_sp_nu_sp_mu_stream$ )(?v5 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (member$ ?v5 (sset$d ?v4 ))(fun_app$c (fun_app$q ?v2 ?v5 )?v4 ))(fun_app$c (fun_app$q ?v2 ?v5 )(sCons$c ?v3 ?v4 ))))))(fun_app$c (fun_app$q ?v2 ?v0 )?v1 ))):named a72 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream_stream$ ))(=> (and (member$b ?v0 (sset$ ?v1 ))(and (forall ((?v2 B_stream_stream$ ))(=> (= ?v1 (sCons$d ?v0 ?v2 ))false ))(forall ((?v2 B_stream$ )(?v3 B_stream_stream$ ))(=> (and (= ?v1 (sCons$d ?v2 ?v3 ))(member$b ?v0 (sset$ ?v3 )))false ))))false )):named a73 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(=> (and (member$d ?v0 (sset$a ?v1 ))(and (forall ((?v2 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(=> (= ?v1 (sCons$e ?v0 ?v2 ))false ))(forall ((?v2 C_b_c_b_sp_nu_sp_mu_stream$ )(?v3 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(=> (and (= ?v1 (sCons$e ?v2 ?v3 ))(member$d ?v0 (sset$a ?v3 )))false ))))false )):named a74 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(=> (and (member$h ?v0 (sset$c ?v1 ))(and (forall ((?v2 C_stream$ ))(=> (= ?v1 (sCons$b ?v0 ?v2 ))false ))(forall ((?v2 C$ )(?v3 C_stream$ ))(=> (and (= ?v1 (sCons$b ?v2 ?v3 ))(member$h ?v0 (sset$c ?v3 )))false ))))false )):named a75 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_stream$ ))(=> (and (member$f ?v0 (sset$b ?v1 ))(and (forall ((?v2 C_b_sp_nu_stream$ ))(=> (= ?v1 (sCons$f ?v0 ?v2 ))false ))(forall ((?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_stream$ ))(=> (and (= ?v1 (sCons$f ?v2 ?v3 ))(member$f ?v0 (sset$b ?v3 )))false ))))false )):named a76 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(=> (and (member$i ?v0 (sset$e ?v1 ))(and (forall ((?v2 B_stream$ ))(=> (= ?v1 (sCons$ ?v0 ?v2 ))false ))(forall ((?v2 B$ )(?v3 B_stream$ ))(=> (and (= ?v1 (sCons$ ?v2 ?v3 ))(member$i ?v0 (sset$e ?v3 )))false ))))false )):named a77 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (member$ ?v0 (sset$d ?v1 ))(and (forall ((?v2 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (= ?v1 (sCons$c ?v0 ?v2 ))false ))(forall ((?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (and (= ?v1 (sCons$c ?v2 ?v3 ))(member$ ?v0 (sset$d ?v3 )))false ))))false )):named a78 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream_stream$ )(?v2 B_stream$ ))(=> (member$b ?v0 (sset$ ?v1 ))(member$b ?v0 (sset$ (sCons$d ?v2 ?v1 ))))):named a79 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (member$d ?v0 (sset$a ?v1 ))(member$d ?v0 (sset$a (sCons$e ?v2 ?v1 ))))):named a80 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ )(?v2 C$ ))(=> (member$h ?v0 (sset$c ?v1 ))(member$h ?v0 (sset$c (sCons$b ?v2 ?v1 ))))):named a81 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_stream$ )(?v2 C_b_sp_nu$ ))(=> (member$f ?v0 (sset$b ?v1 ))(member$f ?v0 (sset$b (sCons$f ?v2 ?v1 ))))):named a82 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ )(?v2 B$ ))(=> (member$i ?v0 (sset$e ?v1 ))(member$i ?v0 (sset$e (sCons$ ?v2 ?v1 ))))):named a83 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v0 (sset$d ?v1 ))(member$ ?v0 (sset$d (sCons$c ?v2 ?v1 ))))):named a84 ))
(assert (! (forall ((?v0 B_stream_stream_bool_fun$ )(?v1 B_stream_stream$ )(?v2 B_stream_set$ ))(=> (and (fun_app$j ?v0 ?v1 )(forall ((?v3 B_stream_stream$ ))(=> (fun_app$j ?v0 ?v3 )(exists ((?v4 B_stream$ )(?v5 B_stream_stream$ ))(and (= ?v3 (sCons$d ?v4 ?v5 ))(and (member$b ?v4 ?v2 )(or (fun_app$j ?v0 ?v5 )(member$a ?v5 (streams$ ?v2 )))))))))(member$a ?v1 (streams$ ?v2 )))):named a85 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_stream_bool_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_stream_set$ ))(=> (and (fun_app$l ?v0 ?v1 )(forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(=> (fun_app$l ?v0 ?v3 )(exists ((?v4 C_b_c_b_sp_nu_sp_mu_stream$ )(?v5 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(and (= ?v3 (sCons$e ?v4 ?v5 ))(and (member$d ?v4 ?v2 )(or (fun_app$l ?v0 ?v5 )(member$c ?v5 (streams$a ?v2 )))))))))(member$c ?v1 (streams$a ?v2 )))):named a86 ))
(assert (! (forall ((?v0 C_b_sp_nu_stream_bool_fun$ )(?v1 C_b_sp_nu_stream$ )(?v2 C_b_sp_nu_set$ ))(=> (and (fun_app$n ?v0 ?v1 )(forall ((?v3 C_b_sp_nu_stream$ ))(=> (fun_app$n ?v0 ?v3 )(exists ((?v4 C_b_sp_nu$ )(?v5 C_b_sp_nu_stream$ ))(and (= ?v3 (sCons$f ?v4 ?v5 ))(and (member$f ?v4 ?v2 )(or (fun_app$n ?v0 ?v5 )(member$e ?v5 (streams$b ?v2 )))))))))(member$e ?v1 (streams$b ?v2 )))):named a87 ))
(assert (! (forall ((?v0 C_stream_bool_fun$ )(?v1 C_stream$ )(?v2 C_set$ ))(=> (and (fun_app$a ?v0 ?v1 )(forall ((?v3 C_stream$ ))(=> (fun_app$a ?v0 ?v3 )(exists ((?v4 C$ )(?v5 C_stream$ ))(and (= ?v3 (sCons$b ?v4 ?v5 ))(and (member$h ?v4 ?v2 )(or (fun_app$a ?v0 ?v5 )(member$g ?v5 (streams$c ?v2 )))))))))(member$g ?v1 (streams$c ?v2 )))):named a88 ))
(assert (! (forall ((?v0 B_stream_bool_fun$ )(?v1 B_stream$ )(?v2 B_set$ ))(=> (and (fun_app$e ?v0 ?v1 )(forall ((?v3 B_stream$ ))(=> (fun_app$e ?v0 ?v3 )(exists ((?v4 B$ )(?v5 B_stream$ ))(and (= ?v3 (sCons$ ?v4 ?v5 ))(and (member$i ?v4 ?v2 )(or (fun_app$e ?v0 ?v5 )(member$b ?v5 (streams$e ?v2 )))))))))(member$b ?v1 (streams$e ?v2 )))):named a89 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_bool_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (fun_app$c ?v0 ?v1 )(forall ((?v3 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (fun_app$c ?v0 ?v3 )(exists ((?v4 C_b_c_b_sp_nu_sp_mu$ )(?v5 C_b_c_b_sp_nu_sp_mu_stream$ ))(and (= ?v3 (sCons$c ?v4 ?v5 ))(and (member$ ?v4 ?v2 )(or (fun_app$c ?v0 ?v5 )(member$d ?v5 (streams$d ?v2 )))))))))(member$d ?v1 (streams$d ?v2 )))):named a90 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream_stream$ ))(member$b ?v0 (sset$ (sCons$d ?v0 ?v1 )))):named a91 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(member$d ?v0 (sset$a (sCons$e ?v0 ?v1 )))):named a92 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(member$h ?v0 (sset$c (sCons$b ?v0 ?v1 )))):named a93 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_stream$ ))(member$f ?v0 (sset$b (sCons$f ?v0 ?v1 )))):named a94 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(member$i ?v0 (sset$e (sCons$ ?v0 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(member$ ?v0 (sset$d (sCons$c ?v0 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(! (= (stl$b (sCons$b ?v0 ?v1 ))?v1 ):pattern ((sCons$b ?v0 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(! (= (stl$c (sCons$c ?v0 ?v1 ))?v1 ):pattern ((sCons$c ?v0 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (stl$ (sCons$ ?v0 ?v1 ))?v1 ):pattern ((sCons$ ?v0 ?v1 )))):named a99 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(! (= (shd$b (sCons$b ?v0 ?v1 ))?v0 ):pattern ((sCons$b ?v0 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(! (= (shd$c (sCons$c ?v0 ?v1 ))?v0 ):pattern ((sCons$c ?v0 ?v1 )))):named a101 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(! (= (shd$ (sCons$ ?v0 ?v1 ))?v0 ):pattern ((sCons$ ?v0 ?v1 )))):named a102 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream_stream$ ))(=> (member$b ?v0 (sset$ (stl$d ?v1 )))(member$b ?v0 (sset$ ?v1 )))):named a103 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(=> (member$d ?v0 (sset$a (stl$e ?v1 )))(member$d ?v0 (sset$a ?v1 )))):named a104 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_stream$ ))(=> (member$f ?v0 (sset$b (stl$f ?v1 )))(member$f ?v0 (sset$b ?v1 )))):named a105 ))
(assert (! (forall ((?v0 C$ )(?v1 C_stream$ ))(=> (member$h ?v0 (sset$c (stl$b ?v1 )))(member$h ?v0 (sset$c ?v1 )))):named a106 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (member$ ?v0 (sset$d (stl$c ?v1 )))(member$ ?v0 (sset$d ?v1 )))):named a107 ))
(assert (! (forall ((?v0 B$ )(?v1 B_stream$ ))(=> (member$i ?v0 (sset$e (stl$ ?v1 )))(member$i ?v0 (sset$e ?v1 )))):named a108 ))
(assert (! (forall ((?v0 B_stream_stream$ ))(member$b (shd$d ?v0 )(sset$ ?v0 ))):named a109 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_stream$ ))(member$d (shd$e ?v0 )(sset$a ?v0 ))):named a110 ))
(assert (! (forall ((?v0 C_b_sp_nu_stream$ ))(member$f (shd$f ?v0 )(sset$b ?v0 ))):named a111 ))
(assert (! (forall ((?v0 C_stream$ ))(member$h (shd$b ?v0 )(sset$c ?v0 ))):named a112 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ ))(member$ (shd$c ?v0 )(sset$d ?v0 ))):named a113 ))
(assert (! (forall ((?v0 B_stream$ ))(member$i (shd$ ?v0 )(sset$e ?v0 ))):named a114 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_set$ ))(=> (member$g ?v0 (streams$c ?v1 ))(member$g (stl$b ?v0 )(streams$c ?v1 )))):named a115 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (member$d ?v0 (streams$d ?v1 ))(member$d (stl$c ?v0 )(streams$d ?v1 )))):named a116 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_set$ ))(=> (member$b ?v0 (streams$e ?v1 ))(member$b (stl$ ?v0 )(streams$e ?v1 )))):named a117 ))
(assert (! (forall ((?v0 B_stream_stream$ )(?v1 B_stream_set$ ))(=> (member$a ?v0 (streams$ ?v1 ))(member$b (shd$d ?v0 )?v1 ))):named a118 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream_set$ ))(=> (member$c ?v0 (streams$a ?v1 ))(member$d (shd$e ?v0 )?v1 ))):named a119 ))
(assert (! (forall ((?v0 C_b_sp_nu_stream$ )(?v1 C_b_sp_nu_set$ ))(=> (member$e ?v0 (streams$b ?v1 ))(member$f (shd$f ?v0 )?v1 ))):named a120 ))
(assert (! (forall ((?v0 C_stream$ )(?v1 C_set$ ))(=> (member$g ?v0 (streams$c ?v1 ))(member$h (shd$b ?v0 )?v1 ))):named a121 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (member$d ?v0 (streams$d ?v1 ))(member$ (shd$c ?v0 )?v1 ))):named a122 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_set$ ))(=> (member$b ?v0 (streams$e ?v1 ))(member$i (shd$ ?v0 )?v1 ))):named a123 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu$ ))(=> (= (out$ ?v0 )(out$ ?v1 ))(= ?v0 ?v1 ))):named a124 ))
(assert (! (forall ((?v0 C_stream$ ))(=> (=> (= ?v0 (sCons$b (shd$b ?v0 )(stl$b ?v0 )))false )false )):named a125 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ ))(=> (=> (= ?v0 (sCons$c (shd$c ?v0 )(stl$c ?v0 )))false )false )):named a126 ))
(assert (! (forall ((?v0 B_stream$ ))(=> (=> (= ?v0 (sCons$ (shd$ ?v0 )(stl$ ?v0 )))false )false )):named a127 ))
(assert (! (forall ((?v0 C$ )(?v1 C_c_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$s ?v1 ?v2 ))(member$h ?v2 ?v3 ))(member$h ?v0 (image$a ?v1 ?v3 )))):named a128 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_c_b_sp_nu_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$t ?v1 ?v2 ))(member$h ?v2 ?v3 ))(member$f ?v0 (image$b ?v1 ?v3 )))):named a129 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$u ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$ ?v0 (image$c ?v1 ?v3 )))):named a130 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 C_b_sp_nu_b_stream_fun$ )(?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$v ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$b ?v0 (image$d ?v1 ?v3 )))):named a131 ))
(assert (! (forall ((?v0 B$ )(?v1 C_b_sp_nu_b_fun$ )(?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$w ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$i ?v0 (image$e ?v1 ?v3 )))):named a132 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_stream$ )(?v1 C_b_sp_nu_c_b_c_b_sp_nu_sp_mu_stream_fun$ )(?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$x ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$d ?v0 (image$f ?v1 ?v3 )))):named a133 ))
(assert (! (forall ((?v0 C$ )(?v1 C_b_sp_nu_c_fun$ )(?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$y ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$h ?v0 (image$g ?v1 ?v3 )))):named a134 ))
(assert (! (forall ((?v0 C_b_sp_nu$ )(?v1 C_b_sp_nu_c_b_sp_nu_fun$ )(?v2 C_b_sp_nu$ )(?v3 C_b_sp_nu_set$ ))(=> (and (= ?v0 (fun_app$z ?v1 ?v2 ))(member$f ?v2 ?v3 ))(member$f ?v0 (image$h ?v1 ?v3 )))):named a135 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ )(?v3 C_set$ ))(=> (and (= ?v0 (fun_app$g ?v1 ?v2 ))(member$h ?v2 ?v3 ))(member$ ?v0 (image$ ?v1 ?v3 )))):named a136 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$i ?v1 ?v3 )))):named a137 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(= (member$ ?v0 top$e )true )):named a138 ))
(assert (! (forall ((?v0 C$ ))(= (member$h ?v0 top$ )true )):named a139 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(member$ ?v0 top$e )):named a140 ))
(assert (! (forall ((?v0 C$ ))(member$h ?v0 top$ )):named a141 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (image$ ?v0 top$ )top$e )(forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$g ?v0 ?v2 )))))):named a142 ))
(assert (! (forall ((?v0 C_c_fun$ ))(= (= (image$a ?v0 top$ )top$ )(forall ((?v1 C$ ))(exists ((?v2 C$ ))(= ?v1 (fun_app$s ?v0 ?v2 )))))):named a143 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_fun$ ))(=> (forall ((?v2 C_b_c_b_sp_nu_sp_mu$ ))(= (fun_app$g ?v0 (fun_app$ab ?v1 ?v2 ))?v2 ))(= (image$ ?v0 top$ )top$e ))):named a144 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C_c_fun$ ))(=> (forall ((?v2 C$ ))(= (fun_app$s ?v0 (fun_app$s ?v1 ?v2 ))?v2 ))(= (image$a ?v0 top$ )top$ ))):named a145 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (and (= (image$ ?v0 top$ )top$e )(forall ((?v2 C$ ))(=> (= ?v1 (fun_app$g ?v0 ?v2 ))false )))false )):named a146 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(=> (and (= (image$a ?v0 top$ )top$ )(forall ((?v2 C$ ))(=> (= ?v1 (fun_app$s ?v0 ?v2 ))false )))false )):named a147 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ ))(= (collect$ (uu$ ?v0 ))?v0 )):named a148 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$ ?v1 ?v0 ))):named a149 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu$ ))(=> (= (image$ ?v0 top$ )top$e )(exists ((?v2 C$ ))(= ?v1 (fun_app$g ?v0 ?v2 ))))):named a150 ))
(assert (! (forall ((?v0 C_c_fun$ )(?v1 C$ ))(=> (= (image$a ?v0 top$ )top$ )(exists ((?v2 C$ ))(= ?v1 (fun_app$s ?v0 ?v2 ))))):named a151 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C$ ))(=> (= ?v0 (fun_app$g ?v1 ?v2 ))(member$ ?v0 (image$ ?v1 top$ )))):named a152 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C$ ))(member$ (fun_app$g ?v0 ?v1 )(image$ ?v0 top$ ))):named a153 ))
(assert (! (= top$ (collect$a top$g )):named a154 ))
(assert (! (exists ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(member$ ?v0 top$e )):named a155 ))
(assert (! (exists ((?v0 C$ ))(member$h ?v0 top$ )):named a156 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_set$ ))(=> (forall ((?v1 C_b_c_b_sp_nu_sp_mu$ ))(member$ ?v1 ?v0 ))(= top$e ?v0 ))):named a157 ))
(assert (! (forall ((?v0 C_set$ ))(=> (forall ((?v1 C$ ))(member$h ?v1 ?v0 ))(= top$ ?v0 ))):named a158 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (member$h ?v0 ?v1 )(member$ (fun_app$g ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a159 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$aa ?v2 ?v0 )(image$i ?v2 ?v1 )))):named a160 ))
(assert (! (forall ((?v0 C$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$h ?v0 ?v1 )(= ?v2 (fun_app$g ?v3 ?v0 )))(member$ ?v2 (image$ ?v3 ?v1 )))):named a161 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu$ )(?v3 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$aa ?v3 ?v0 )))(member$ ?v2 (image$i ?v3 ?v1 )))):named a162 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 C$ ))(=> (member$h ?v3 ?v1 )(fun_app$ ?v2 (fun_app$g ?v0 ?v3 )))))):named a163 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 (image$i ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(forall ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(=> (member$ ?v3 ?v1 )(fun_app$ ?v2 (fun_app$aa ?v0 ?v3 )))))):named a164 ))
(assert (! (forall ((?v0 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (image$ ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 C$ ))(and (member$h ?v3 ?v1 )(fun_app$ ?v2 (fun_app$g ?v0 ?v3 )))))):named a165 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v1 C_b_c_b_sp_nu_sp_mu_set$ )(?v2 C_b_c_b_sp_nu_sp_mu_bool_fun$ ))(=> (exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 (image$i ?v0 ?v1 ))(fun_app$ ?v2 ?v3 )))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v1 )(fun_app$ ?v2 (fun_app$aa ?v0 ?v3 )))))):named a166 ))
(assert (! (forall ((?v0 C_set$ )(?v1 C_set$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v3 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 C$ ))(=> (member$h ?v4 ?v1 )(= (fun_app$g ?v2 ?v4 )(fun_app$g ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a167 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_set$ ))(= (member$ ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 C$ ))(and (member$h ?v3 ?v2 )(= ?v0 (fun_app$g ?v1 ?v3 )))))):named a168 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_c_b_sp_nu_sp_mu_set$ ))(= (member$ ?v0 (image$i ?v1 ?v2 ))(exists ((?v3 C_b_c_b_sp_nu_sp_mu$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$aa ?v1 ?v3 )))))):named a169 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_b_c_b_sp_nu_sp_mu_stream$ ))(! (= (fun_app$c (smember$ ?v0 )?v1 )(member$ ?v0 (sset$d ?v1 ))):pattern ((fun_app$c (smember$ ?v0 )?v1 )))):named a170 ))
(assert (! (forall ((?v0 B_stream$ )(?v1 B_stream$ ))(= (sinterleave$ ?v0 ?v1 )(sCons$ (shd$ ?v0 )(sinterleave$ ?v1 (stl$ ?v0 ))))):named a171 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 C_b_sp_nu$ ))(=> (and (member$ ?v0 (image$ ?v1 top$ ))(member$f ?v2 (set2_sp_mu$ ?v0 )))(member$f ?v2 (set2_sp_mu$ (get$ ?v1 ))))):named a172 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ )(?v1 C_c_b_c_b_sp_nu_sp_mu_fun$ )(?v2 B$ ))(=> (and (member$ ?v0 (image$ ?v1 top$ ))(member$i ?v2 (set1_sp_mu$ ?v0 )))(member$i ?v2 (set1_sp_mu$ (get$ ?v1 ))))):named a173 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C_c_b_c_b_sp_nu_sp_mu_fun$ ))(= (= (image$ (fun_app$ac (fun_app$ad (swap$ ?v0 )?v1 )?v2 )top$ )top$e )(= (image$ ?v2 top$ )top$e ))):named a174 ))
(assert (! (forall ((?v0 C$ )(?v1 C$ )(?v2 C_c_fun$ ))(= (= (image$a (fun_app$ae (fun_app$af (swap$a ?v0 )?v1 )?v2 )top$ )top$ )(= (image$a ?v2 top$ )top$ ))):named a175 ))
(assert (! (forall ((?v0 C_b_c_b_sp_nu_sp_mu$ ))(! (= (top$h ?v0 )(member$ ?v0 top$e )):pattern ((top$h ?v0 )))):named a176 ))
(assert (! (forall ((?v0 C$ ))(! (= (fun_app$h top$g ?v0 )(member$h ?v0 top$ )):pattern ((fun_app$h top$g ?v0 )))):named a177 ))
(check-sat )
;(get-unsat-core )
