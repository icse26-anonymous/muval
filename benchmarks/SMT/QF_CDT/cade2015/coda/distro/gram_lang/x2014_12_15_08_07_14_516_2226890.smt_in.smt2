;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort Dtree_N_bool_fun_fun$ 0 )
(declare-sort Dtree_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort Dtree_dtree_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort N_set_dtree_T_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum$ 0)
(declare-fun projl$ (T_dtree_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$)Dtree$)
(declare-fun inr$ (Dtree$ )T_dtree_sum$)
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun inFr$ ()N_set_dtree_T_bool_fun_fun_fun$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun inFr2$ ()N_set_dtree_T_bool_fun_fun_fun$ )
(declare-fun inItr$ (N_set$ )Dtree_N_bool_fun_fun$ )
(declare-fun inj_on$ (Dtree_N_fun$ Dtree_set$ )Bool )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (N$ N_set$ )Bool )
(declare-fun subtr2$ (N_set$ )Dtree_dtree_bool_fun_fun$ )
(declare-fun vimage$ (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun collect$ (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun fun_app$ (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun member$a (Dtree$ Dtree_set$ )Bool )
(declare-fun member$b (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun vimage$a (N_dtree_fun$ Dtree_set$ )N_set$ )
(declare-fun vimage$b (T_dtree_sum_dtree_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun vimage$c (Dtree_N_fun$ N_set$ )Dtree_set$ )
(declare-fun vimage$d (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun vimage$e (N_N_fun$ N_set$ )N_set$ )
(declare-fun vimage$f (N_T_dtree_sum_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun vimage$g (T_dtree_sum_N_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun vimage$h (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun collect$a (N_bool_fun$ )N_set$ )
(declare-fun collect$b (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun fun_app$a (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$b (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$c (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$d (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$e (N_N_fun$ N$ )N$ )
(declare-fun fun_app$f (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$g (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$h (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$i (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$j (Dtree_T_bool_fun_fun$ Dtree$ )T_bool_fun$ )
(declare-fun fun_app$k (N_set_dtree_T_bool_fun_fun_fun$ N_set$ )Dtree_T_bool_fun_fun$ )
(declare-fun fun_app$l (N_bool_fun$ N$ )Bool )
(declare-fun fun_app$m (Dtree_N_bool_fun_fun$ Dtree$ )N_bool_fun$ )
(declare-fun fun_app$n (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$o (Dtree_dtree_bool_fun_fun$ Dtree$ )Dtree_bool_fun$ )
(declare-fun fun_app$p (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$ uu$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$ uu$ ?v0 )))):named a0 ))
(assert (! (not (inj_on$ root$ (vimage$ uu$ (cont$ tr$ )))):named a1 ))
(assert (! (wf$ tr$ ):named a2 ))
(assert (! (forall ((?v0 N$ )(?v1 N_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$ ?v0 (vimage$a ?v1 ?v2 ))(member$a (fun_app$a ?v1 ?v0 )?v2 ))):named a3 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (vimage$b ?v1 ?v2 ))(member$a (fun_app$b ?v1 ?v0 )?v2 ))):named a4 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_N_fun$ )(?v2 N_set$ ))(= (member$a ?v0 (vimage$c ?v1 ?v2 ))(member$ (fun_app$c ?v1 ?v0 )?v2 ))):named a5 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$a ?v0 (vimage$d ?v1 ?v2 ))(member$a (fun_app$d ?v1 ?v0 )?v2 ))):named a6 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (vimage$e ?v1 ?v2 ))(member$ (fun_app$e ?v1 ?v0 )?v2 ))):named a7 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$f ?v1 ?v2 ))(member$b (fun_app$f ?v1 ?v0 )?v2 ))):named a8 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(= (member$b ?v0 (vimage$g ?v1 ?v2 ))(member$ (fun_app$g ?v1 ?v0 )?v2 ))):named a9 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b ?v0 (vimage$h ?v1 ?v2 ))(member$b (fun_app$h ?v1 ?v0 )?v2 ))):named a10 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (vimage$ ?v1 ?v2 ))(member$b (fun_app$ ?v1 ?v0 )?v2 ))):named a11 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$c ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$a ?v1 (vimage$c ?v0 ?v3 )))):named a12 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 N$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$a ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$ ?v1 (vimage$a ?v0 ?v3 )))):named a13 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$b ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$b ?v1 (vimage$b ?v0 ?v3 )))):named a14 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$d ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$a ?v1 (vimage$d ?v0 ?v3 )))):named a15 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$e ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (vimage$e ?v0 ?v3 )))):named a16 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$g ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$b ?v1 (vimage$g ?v0 ?v3 )))):named a17 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$f ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$ ?v1 (vimage$f ?v0 ?v3 )))):named a18 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$h ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$b ?v1 (vimage$h ?v0 ?v3 )))):named a19 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$ ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$a ?v1 (vimage$ ?v0 ?v3 )))):named a20 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a21 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a22 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (fun_app$c root$ ?v0 )(fun_app$c root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a23 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ )(?v3 Dtree$ ))(=> (and (fun_app$i (fun_app$j (fun_app$k inFr2$ ?v0 )?v1 )?v2 )(and (member$ (fun_app$c root$ ?v3 )?v0 )(member$b (inr$ ?v1 )(cont$ ?v3 ))))(fun_app$i (fun_app$j (fun_app$k inFr2$ ?v0 )?v3 )?v2 ))):named a24 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 N$ ))(= (fun_app$l (fun_app$m (inItr$ ?v0 )?v1 )?v2 )(or (exists ((?v3 Dtree$ )(?v4 N_set$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 (fun_app$c root$ ?v3 ))(member$ (fun_app$c root$ ?v3 )?v4 )))))(exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 N$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$ (fun_app$c root$ ?v3 )?v4 )(and (member$b (inr$ ?v5 )(cont$ ?v3 ))(fun_app$l (fun_app$m (inItr$ ?v4 )?v5 )?v6 )))))))))):named a25 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 N$ ))(=> (and (fun_app$l (fun_app$m (inItr$ ?v0 )?v1 )?v2 )(and (forall ((?v3 Dtree$ )(?v4 N_set$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 (fun_app$c root$ ?v3 ))(member$ (fun_app$c root$ ?v3 )?v4 ))))false ))(forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 N$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$ (fun_app$c root$ ?v3 )?v4 )(and (member$b (inr$ ?v5 )(cont$ ?v3 ))(fun_app$l (fun_app$m (inItr$ ?v4 )?v5 )?v6 ))))))false ))))false )):named a26 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 N$ ))(=> (and (member$ (fun_app$c root$ ?v0 )?v1 )(and (member$b (inr$ ?v2 )(cont$ ?v0 ))(fun_app$l (fun_app$m (inItr$ ?v1 )?v2 )?v3 )))(fun_app$l (fun_app$m (inItr$ ?v1 )?v0 )?v3 ))):named a27 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 T$ ))(=> (and (member$ (fun_app$c root$ ?v0 )?v1 )(and (member$b (inr$ ?v2 )(cont$ ?v0 ))(fun_app$i (fun_app$j (fun_app$k inFr$ ?v1 )?v2 )?v3 )))(fun_app$i (fun_app$j (fun_app$k inFr$ ?v1 )?v0 )?v3 ))):named a28 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 Dtree$ ))(= (fun_app$n (fun_app$o (subtr2$ ?v0 )?v1 )?v2 )(or (exists ((?v3 Dtree$ )(?v4 N_set$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v3 )(member$ (fun_app$c root$ ?v3 )?v4 )))))(exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 Dtree$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$ (fun_app$c root$ ?v3 )?v4 )(and (member$b (inr$ ?v3 )(cont$ ?v5 ))(fun_app$n (fun_app$o (subtr2$ ?v4 )?v5 )?v6 )))))))))):named a29 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (fun_app$n (fun_app$o (subtr2$ ?v0 )?v1 )?v2 )(and (forall ((?v3 Dtree$ )(?v4 N_set$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v3 )(member$ (fun_app$c root$ ?v3 )?v4 ))))false ))(forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 Dtree$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$ (fun_app$c root$ ?v3 )?v4 )(and (member$b (inr$ ?v3 )(cont$ ?v5 ))(fun_app$n (fun_app$o (subtr2$ ?v4 )?v5 )?v6 ))))))false ))))false )):named a30 ))
(assert (! (= inFr$ inFr2$ ):named a31 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (fun_app$n (fun_app$o (subtr2$ ?v0 )?v1 )?v2 )(fun_app$n (fun_app$o (subtr2$ ?v0 )?v2 )?v3 ))(fun_app$n (fun_app$o (subtr2$ ?v0 )?v1 )?v3 ))):named a32 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ ))(=> (member$ (fun_app$c root$ ?v0 )?v1 )(fun_app$n (fun_app$o (subtr2$ ?v1 )?v0 )?v0 ))):named a33 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (fun_app$n (fun_app$o (subtr2$ ?v0 )?v1 )?v2 )(member$ (fun_app$c root$ ?v1 )?v0 ))):named a34 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (fun_app$n (fun_app$o (subtr2$ ?v0 )?v1 )?v2 )(member$ (fun_app$c root$ ?v2 )?v0 ))):named a35 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (not (member$ (fun_app$c root$ ?v0 )?v1 ))(not (fun_app$i (fun_app$j (fun_app$k inFr$ ?v1 )?v0 )?v2 )))):named a36 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (fun_app$i (fun_app$j (fun_app$k inFr$ ?v0 )?v1 )?v2 )(member$ (fun_app$c root$ ?v1 )?v0 ))):named a37 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ ))(=> (member$ (fun_app$c root$ ?v0 )?v1 )(fun_app$l (fun_app$m (inItr$ ?v1 )?v0 )(fun_app$c root$ ?v0 )))):named a38 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 N$ ))(=> (fun_app$l (fun_app$m (inItr$ ?v0 )?v1 )?v2 )(member$ (fun_app$c root$ ?v1 )?v0 ))):named a39 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (fun_app$i (fun_app$j (fun_app$k inFr2$ ?v0 )?v1 )?v2 )(member$ (fun_app$c root$ ?v1 )?v0 ))):named a40 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a41 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree$ )(?v2 N_set$ ))(=> (member$ (fun_app$c ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$c ?v0 ?v2 )))):named a42 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 N$ )(?v2 Dtree_set$ ))(=> (member$a (fun_app$a ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$a ?v0 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree_set$ ))(=> (member$a (fun_app$b ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$b ?v0 ?v2 )))):named a44 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree_set$ ))(=> (member$a (fun_app$d ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$d ?v0 ?v2 )))):named a45 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N_set$ ))(=> (member$ (fun_app$e ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$e ?v0 ?v2 )))):named a46 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N_set$ ))(=> (member$ (fun_app$g ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$g ?v0 ?v2 )))):named a47 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (fun_app$f ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$f ?v0 ?v2 )))):named a48 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (fun_app$h ?v0 ?v1 )?v2 )(member$b ?v1 (vimage$h ?v0 ?v2 )))):named a49 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum_set$ ))(=> (member$b (fun_app$ ?v0 ?v1 )?v2 )(member$a ?v1 (vimage$ ?v0 ?v2 )))):named a50 ))
(assert (! (forall ((?v0 N$ )(?v1 N_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$ ?v0 (vimage$a ?v1 ?v2 ))(member$a (fun_app$a ?v1 ?v0 )?v2 ))):named a51 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$b ?v0 (vimage$b ?v1 ?v2 ))(member$a (fun_app$b ?v1 ?v0 )?v2 ))):named a52 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_N_fun$ )(?v2 N_set$ ))(=> (member$a ?v0 (vimage$c ?v1 ?v2 ))(member$ (fun_app$c ?v1 ?v0 )?v2 ))):named a53 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(=> (member$a ?v0 (vimage$d ?v1 ?v2 ))(member$a (fun_app$d ?v1 ?v0 )?v2 ))):named a54 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (member$ ?v0 (vimage$e ?v1 ?v2 ))(member$ (fun_app$e ?v1 ?v0 )?v2 ))):named a55 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ ?v0 (vimage$f ?v1 ?v2 ))(member$b (fun_app$f ?v1 ?v0 )?v2 ))):named a56 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (member$b ?v0 (vimage$g ?v1 ?v2 ))(member$ (fun_app$g ?v1 ?v0 )?v2 ))):named a57 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$b ?v0 (vimage$h ?v1 ?v2 ))(member$b (fun_app$h ?v1 ?v0 )?v2 ))):named a58 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$a ?v0 (vimage$ ?v1 ?v2 ))(member$b (fun_app$ ?v1 ?v0 )?v2 ))):named a59 ))
(assert (! (forall ((?v0 N$ )(?v1 N_dtree_fun$ )(?v2 Dtree_set$ ))(=> (and (member$ ?v0 (vimage$a ?v1 ?v2 ))(forall ((?v3 Dtree$ ))(=> (and (= (fun_app$a ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a60 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(=> (and (member$b ?v0 (vimage$b ?v1 ?v2 ))(forall ((?v3 Dtree$ ))(=> (and (= (fun_app$b ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a61 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_N_fun$ )(?v2 N_set$ ))(=> (and (member$a ?v0 (vimage$c ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$c ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a62 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(=> (and (member$a ?v0 (vimage$d ?v1 ?v2 ))(forall ((?v3 Dtree$ ))(=> (and (= (fun_app$d ?v1 ?v0 )?v3 )(member$a ?v3 ?v2 ))false )))false )):named a63 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (and (member$ ?v0 (vimage$e ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$e ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a64 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 (vimage$f ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$f ?v1 ?v0 )?v3 )(member$b ?v3 ?v2 ))false )))false )):named a65 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (and (member$b ?v0 (vimage$g ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$g ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a66 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$b ?v0 (vimage$h ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$h ?v1 ?v0 )?v3 )(member$b ?v3 ?v2 ))false )))false )):named a67 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$a ?v0 (vimage$ ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$ ?v1 ?v0 )?v3 )(member$b ?v3 ?v2 ))false )))false )):named a68 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 N_dtree_fun$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(= (fun_app$n ?v0 (fun_app$a ?v1 ?v3 ))(fun_app$l ?v2 ?v3 )))(= (vimage$a ?v1 (collect$ ?v0 ))(collect$a ?v2 )))):named a69 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 Dtree_N_fun$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(= (fun_app$l ?v0 (fun_app$c ?v1 ?v3 ))(fun_app$n ?v2 ?v3 )))(= (vimage$c ?v1 (collect$a ?v0 ))(collect$ ?v2 )))):named a70 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_N_fun$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(= (fun_app$l ?v0 (fun_app$e ?v1 ?v3 ))(fun_app$l ?v2 ?v3 )))(= (vimage$e ?v1 (collect$a ?v0 ))(collect$a ?v2 )))):named a71 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$l ?v0 (fun_app$g ?v1 ?v3 ))(fun_app$p ?v2 ?v3 )))(= (vimage$g ?v1 (collect$a ?v0 ))(collect$b ?v2 )))):named a72 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 N_T_dtree_sum_fun$ )(?v2 N_bool_fun$ ))(=> (forall ((?v3 N$ ))(= (fun_app$p ?v0 (fun_app$f ?v1 ?v3 ))(fun_app$l ?v2 ?v3 )))(= (vimage$f ?v1 (collect$b ?v0 ))(collect$a ?v2 )))):named a73 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$p ?v0 (fun_app$h ?v1 ?v3 ))(fun_app$p ?v2 ?v3 )))(= (vimage$h ?v1 (collect$b ?v0 ))(collect$b ?v2 )))):named a74 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(= (fun_app$n ?v0 (fun_app$b ?v1 ?v3 ))(fun_app$p ?v2 ?v3 )))(= (vimage$b ?v1 (collect$ ?v0 ))(collect$b ?v2 )))):named a75 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(= (fun_app$n ?v0 (fun_app$d ?v1 ?v3 ))(fun_app$n ?v2 ?v3 )))(= (vimage$d ?v1 (collect$ ?v0 ))(collect$ ?v2 )))):named a76 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(= (fun_app$p ?v0 (fun_app$ ?v1 ?v3 ))(fun_app$n ?v2 ?v3 )))(= (vimage$ ?v1 (collect$b ?v0 ))(collect$ ?v2 )))):named a77 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (member$ (fun_app$c root$ ?v0 )?v1 )(and (member$b (inr$ ?v0 )(cont$ ?v2 ))(fun_app$n (fun_app$o (subtr2$ ?v1 )?v2 )?v3 )))(fun_app$n (fun_app$o (subtr2$ ?v1 )?v0 )?v3 ))):named a78 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (member$ (fun_app$c root$ ?v0 )?v1 )(and (member$b (inr$ ?v2 )(cont$ ?v0 ))(fun_app$n (fun_app$o (subtr2$ ?v1 )?v3 )?v2 )))(fun_app$n (fun_app$o (subtr2$ ?v1 )?v3 )?v0 ))):named a79 ))
(assert (! (forall ((?v0 Dtree$ ))(= (node$ (fun_app$c root$ ?v0 )(cont$ ?v0 ))?v0 )):named a80 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 N_set$ )(?v3 T$ ))(=> (and (member$b (inr$ ?v0 )(cont$ ?v1 ))(fun_app$i (fun_app$j (fun_app$k inFr2$ ?v2 )?v0 )?v3 ))(fun_app$i (fun_app$j (fun_app$k inFr2$ (insert$ (fun_app$c root$ ?v1 )?v2 ))?v1 )?v3 ))):named a81 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ )(?v3 Dtree$ ))(=> (and (fun_app$i (fun_app$j (fun_app$k inFr$ ?v0 )?v1 )?v2 )(member$b (inr$ ?v1 )(cont$ ?v3 )))(fun_app$i (fun_app$j (fun_app$k inFr$ (insert$ (fun_app$c root$ ?v3 )?v0 ))?v3 )?v2 ))):named a82 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (and (fun_app$i (fun_app$j (fun_app$k inFr$ ?v0 )?v1 )?v2 )(and (forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$ (fun_app$c root$ ?v3 )?v4 )(member$b (inl$ ?v5 )(cont$ ?v3 ))))))false ))(forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 T$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$ (fun_app$c root$ ?v3 )?v4 )(and (member$b (inr$ ?v5 )(cont$ ?v3 ))(fun_app$i (fun_app$j (fun_app$k inFr$ ?v4 )?v5 )?v6 ))))))false ))))false )):named a83 ))
(check-sat )
;(get-unsat-core )
