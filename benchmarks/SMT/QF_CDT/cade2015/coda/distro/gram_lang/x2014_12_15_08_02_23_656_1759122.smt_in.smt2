;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort N_set_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort N_N_sum_set$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort N_set_bool_fun$ 0 )
(declare-sort N_set_N_set_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort N_N_bool_fun_fun$ 0 )
(declare-sort N_N_sum_bool_fun$ 0 )
(declare-sort N_T_bool_fun_fun$ 0 )
(declare-sort T_N_bool_fun_fun$ 0 )
(declare-sort T_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_fset$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_dtree_sum_set_set$ 0 )
(declare-sort T_set_N_set_set_fun$ 0 )
(declare-sort Dtree_T_bool_fun_fun$ 0 )
(declare-sort N_set_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort N_T_dtree_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_N_sum_set$ 0 )
(declare-sort T_dtree_sum_fset_N_fun$ 0 )
(declare-sort N_set_set_N_set_set_fun$ 0 )
(declare-sort Dtree_dtree_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_bool_fun$ 0 )
(declare-sort N_bool_fun_N_bool_fun_fun$ 0 )
(declare-sort T_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_fset_bool_fun$ 0 )
(declare-sort N_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort N_T_dtree_sum_sum_bool_fun$ 0 )
(declare-sort T_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_N_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_N_sum_bool_fun$ 0 )
(declare-sort T_dtree_sum_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort N_T_dtree_sum_fset_N_fun_fun$ 0 )
(declare-sort T_dtree_sum_set_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_bool_fun_N_set_set_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_sum_bool_fun$ 0 )
(declare-sort N_N_bool_fun_fun_N_N_bool_fun_fun_fun$ 0 )
(declare-sort T_N_bool_fun_fun_N_T_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_fun$ 0 )
(declare-sort N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_fset_T_dtree_sum_fset_bool_fun_fun$ 0 )
(declare-sort N_T_dtree_sum_bool_fun_fun_T_dtree_sum_N_bool_fun_fun_fun$ 0 )
(declare-sort T_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_N_bool_fun_fun_N_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort Dtree_dtree_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_sum_T_dtree_sum_T_dtree_sum_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_dtree_sum_sum_T_dtree_sum_T_dtree_sum_sum_bool_fun_fun_fun$ 0 )
(declare-sort T_dtree_sum$ 0)
(declare-sort T_dtree_sum_T_dtree_sum_sum$ 0)
(declare-sort T_dtree_sum_N_sum$ 0)
(declare-sort N_T_dtree_sum_sum$ 0)
(declare-sort N_N_sum$ 0)
(declare-fun projl$ (T_dtree_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$)Dtree$)
(declare-fun inr$ (Dtree$ )T_dtree_sum$)
(declare-fun projl$a (T_dtree_sum_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inl$a (T_dtree_sum$ )T_dtree_sum_T_dtree_sum_sum$)
(declare-fun projr$a (T_dtree_sum_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inr$a (T_dtree_sum$ )T_dtree_sum_T_dtree_sum_sum$)
(declare-fun projl$b (T_dtree_sum_N_sum$)T_dtree_sum$)
(declare-fun inl$b (T_dtree_sum$ )T_dtree_sum_N_sum$)
(declare-fun projr$b (T_dtree_sum_N_sum$)N$)
(declare-fun inr$b (N$ )T_dtree_sum_N_sum$)
(declare-fun projl$c (N_T_dtree_sum_sum$)N$)
(declare-fun inl$c (N$ )N_T_dtree_sum_sum$)
(declare-fun projr$c (N_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inr$c (T_dtree_sum$ )N_T_dtree_sum_sum$)
(declare-fun projl$d (N_N_sum$)N$)
(declare-fun inl$d (N$ )N_N_sum$)
(declare-fun projr$d (N_N_sum$)N$)
(declare-fun inr$d (N$ )N_N_sum$)
(declare-fun t$ ()T$ )
(declare-fun fr$ (N_set$ Dtree$ )T_set$ )
(declare-fun ns$ ()N_set$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ (N_N_sum_set$ )N_N_sum_bool_fun$ )
(declare-fun ns$a ()N_set$ )
(declare-fun pow$ (T_dtree_sum_set$ )T_dtree_sum_set_set$ )
(declare-fun sup$ (T_dtree_sum_set_set$ )T_dtree_sum_set$ )
(declare-fun uua$ (Dtree_set$ )Dtree_bool_fun$ )
(declare-fun uub$ (T_dtree_sum_set_set$ )T_dtree_sum_set_bool_fun$ )
(declare-fun uuc$ (T_set$ )T_bool_fun$ )
(declare-fun uud$ (N_set_set$ )N_set_bool_fun$ )
(declare-fun uue$ (T_dtree_sum_set$ )T_dtree_sum_bool_fun$ )
(declare-fun uuf$ (N_set$ )N_bool_fun$ )
(declare-fun uug$ (T_dtree_sum_set$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuh$ (T_set$ )T_bool_fun_T_bool_fun_fun$ )
(declare-fun uui$ (N_set$ )N_bool_fun_N_bool_fun_fun$ )
(declare-fun uuj$ (T_bool_fun$ )T_bool_fun_T_bool_fun_fun$ )
(declare-fun uuk$ (N_bool_fun$ )N_bool_fun_N_bool_fun_fun$ )
(declare-fun uul$ ()N_T_dtree_sum_fset_N_fun_fun$ )
(declare-fun uum$ ()N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ )
(declare-fun uun$ (T_dtree_sum_set$ )T_dtree_sum_set_bool_fun$ )
(declare-fun uuo$ (N_set$ )N_set_bool_fun$ )
(declare-fun uup$ (T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uuq$ (T_bool_fun$ )T_bool_fun_T_bool_fun_fun$ )
(declare-fun uur$ (T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uus$ (N_set$ )N_N_bool_fun_fun_N_N_bool_fun_fun_fun$ )
(declare-fun uut$ (T_set$ )T_N_bool_fun_fun_N_T_bool_fun_fun_fun$ )
(declare-fun uuu$ (N_set$ )N_T_dtree_sum_bool_fun_fun_T_dtree_sum_N_bool_fun_fun_fun$ )
(declare-fun uuv$ (T_set$ )T_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_bool_fun_fun_fun$ )
(declare-fun uuw$ (T_dtree_sum_set$ )T_dtree_sum_N_bool_fun_fun_N_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uux$ (T_dtree_sum_set$ )T_dtree_sum_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun uuy$ ()T_T_bool_fun_fun$ )
(declare-fun uuz$ (Dtree_dtree_bool_fun_fun$ )Dtree_dtree_bool_fun_fun$ )
(declare-fun uva$ ()T_dtree_sum_T_dtree_sum_T_dtree_sum_sum_fun$ )
(declare-fun uvb$ ()T_dtree_sum_T_dtree_sum_T_dtree_sum_sum_fun$ )
(declare-fun uvc$ ()T_T_dtree_sum_fun$ )
(declare-fun uvd$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun uve$ (T_T_fun$ )T_bool_fun_T_bool_fun_fun$ )
(declare-fun uvf$ (T_N_fun$ )N_set_T_bool_fun_fun$ )
(declare-fun uvg$ (T_T_dtree_sum_fun$ )T_dtree_sum_set_T_bool_fun_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun inFr$ (N_set$ )Dtree_T_bool_fun_fun$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun plus$ (T_dtree_sum_set$ T_dtree_sum_set$ )T_dtree_sum_T_dtree_sum_sum_set$ )
(declare-fun pow$a (N_set$ )N_set_set$ )
(declare-fun powp$ (N_bool_fun$ N_set$ )Bool )
(declare-fun root$ (Dtree$ )N$ )
(declare-fun sup$a (N_set_set$ )N_set$ )
(declare-fun ccont$ (Dtree$ )T_dtree_sum_fset$ )
(declare-fun nNode$ (N$ T_dtree_sum_fset$ )Dtree$ )
(declare-fun plus$a (T_set$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun plus$b (N_set$ N_set$ )N_N_sum_set$ )
(declare-fun plus$c (N_set$ T_dtree_sum_set$ )N_T_dtree_sum_sum_set$ )
(declare-fun plus$d (T_dtree_sum_set$ N_set$ )T_dtree_sum_N_sum_set$ )
(declare-fun powp$a (T_dtree_sum_bool_fun$ T_dtree_sum_set$ )Bool )
(declare-fun setlp$ (T_dtree_sum$ )T_bool_fun$ )
(declare-fun setrp$ (T_dtree_sum$ Dtree$ )Bool )
(declare-fun finite$ (T_dtree_sum_set$ )Bool )
(declare-fun member$ (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun vimage$ (T_dtree_sum_T_dtree_sum_T_dtree_sum_sum_fun$ T_dtree_sum_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun collect$ (T_bool_fun$ )T_set$ )
(declare-fun finite$a (T_dtree_sum_set_set$ )Bool )
(declare-fun finite$b (N_set$ )Bool )
(declare-fun finite$c (N_set_set$ )Bool )
(declare-fun finite$d (T_set$ )Bool )
(declare-fun finite$e (T_dtree_sum_T_dtree_sum_sum_set$ )Bool )
(declare-fun finite$f (Dtree_set$ )Bool )
(declare-fun fun_app$ (T_dtree_sum_T_dtree_sum_T_dtree_sum_sum_fun$ T_dtree_sum$ )T_dtree_sum_T_dtree_sum_sum$ )
(declare-fun less_eq$ (T_dtree_sum_set$ T_dtree_sum_set$ )Bool )
(declare-fun member$a (N_N_sum$ N_N_sum_set$ )Bool )
(declare-fun member$b (Dtree$ Dtree_set$ )Bool )
(declare-fun member$c (T_dtree_sum_set$ T_dtree_sum_set_set$ )Bool )
(declare-fun member$d (N_set$ N_set_set$ )Bool )
(declare-fun member$e (T$ T_set$ )Bool )
(declare-fun member$f (N$ N_set$ )Bool )
(declare-fun member$g (N_T_dtree_sum_sum$ N_T_dtree_sum_sum_set$ )Bool )
(declare-fun member$h (T_dtree_sum_N_sum$ T_dtree_sum_N_sum_set$ )Bool )
(declare-fun member$i (T_dtree_sum_T_dtree_sum_sum$ T_dtree_sum_T_dtree_sum_sum_set$ )Bool )
(declare-fun rel_set$ (T_dtree_sum_T_dtree_sum_bool_fun_fun$ T_dtree_sum_set$ T_dtree_sum_set$ )Bool )
(declare-fun rel_sum$ (T_T_bool_fun_fun$ )Dtree_dtree_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ )
(declare-fun vimage$a (T_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun vimage$b (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun vimage$c (N_N_fun$ )N_set_N_set_fun$ )
(declare-fun vimage$d (N_T_dtree_sum_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun vimage$e (T_dtree_sum_N_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun vimage$f (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$g (T_T_fun$ T_set$ )T_set$ )
(declare-fun vimage$h (T_N_fun$ N_set$ )T_set$ )
(declare-fun antimono$ (N_set_N_set_fun$ )Bool )
(declare-fun collect$a (N_bool_fun$ )N_set$ )
(declare-fun collect$b (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun collect$c (T_dtree_sum_set_bool_fun$ )T_dtree_sum_set_set$ )
(declare-fun collect$d (N_set_bool_fun$ )N_set_set$ )
(declare-fun fun_app$a (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$b (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun fun_app$c (T_dtree_sum_set_bool_fun$ T_dtree_sum_set$ )Bool )
(declare-fun fun_app$d (N_set_bool_fun$ N_set$ )Bool )
(declare-fun fun_app$e (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$f (N_N_sum_bool_fun$ N_N_sum$ )Bool )
(declare-fun fun_app$g (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$h (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$i (N_bool_fun$ N$ )Bool )
(declare-fun fun_app$j (T_T_bool_fun_fun$ T$ )T_bool_fun$ )
(declare-fun fun_app$k (Dtree_dtree_bool_fun_fun$ Dtree$ )Dtree_bool_fun$ )
(declare-fun fun_app$l (T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$m (T_bool_fun_T_bool_fun_fun$ T_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$n (N_bool_fun_N_bool_fun_fun$ N_bool_fun$ )N_bool_fun$ )
(declare-fun fun_app$o (T_dtree_sum_set_T_bool_fun_fun$ T_dtree_sum_set$ )T_bool_fun$ )
(declare-fun fun_app$p (N_set_T_bool_fun_fun$ N_set$ )T_bool_fun$ )
(declare-fun fun_app$q (T_N_fun$ T$ )N$ )
(declare-fun fun_app$r (T_T_fun$ T$ )T$ )
(declare-fun fun_app$s (T_dtree_sum_T_dtree_sum_bool_fun_fun$ T_dtree_sum$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$t (T_dtree_sum_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ T_dtree_sum_T_dtree_sum_bool_fun_fun$ )T_dtree_sum_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$u (N_T_dtree_sum_bool_fun_fun$ N$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$v (T_dtree_sum_N_bool_fun_fun_N_T_dtree_sum_bool_fun_fun_fun$ T_dtree_sum_N_bool_fun_fun$ )N_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$w (T_dtree_sum_N_bool_fun_fun$ T_dtree_sum$ )N_bool_fun$ )
(declare-fun fun_app$x (T_dtree_sum_T_bool_fun_fun$ T_dtree_sum$ )T_bool_fun$ )
(declare-fun fun_app$y (T_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_bool_fun_fun_fun$ T_T_dtree_sum_bool_fun_fun$ )T_dtree_sum_T_bool_fun_fun$ )
(declare-fun fun_app$z (T_T_dtree_sum_bool_fun_fun$ T$ )T_dtree_sum_bool_fun$ )
(declare-fun less_eq$a (N_set$ N_set$ )Bool )
(declare-fun less_eq$b (N_N_sum_set$ N_N_sum_set$ )Bool )
(declare-fun less_eq$c (Dtree_set$ Dtree_set$ )Bool )
(declare-fun less_eq$d (T_dtree_sum_set_set$ T_dtree_sum_set_set$ )Bool )
(declare-fun less_eq$e (T_set$ T_set$ )Bool )
(declare-fun less_eq$f (N_set_set$ N_set_set$ )Bool )
(declare-fun less_eq$g (N_bool_fun$ N_bool_fun$ )Bool )
(declare-fun less_eq$h (T_dtree_sum_bool_fun$ T_dtree_sum_bool_fun$ )Bool )
(declare-fun less_eq$i (N_N_sum_bool_fun$ N_N_sum_bool_fun$ )Bool )
(declare-fun less_eq$j (Dtree_bool_fun$ Dtree_bool_fun$ )Bool )
(declare-fun less_eq$k (T_dtree_sum_set_bool_fun$ T_dtree_sum_set_bool_fun$ )Bool )
(declare-fun less_eq$l (T_bool_fun$ T_bool_fun$ )Bool )
(declare-fun less_eq$m (N_set_bool_fun$ N_set_bool_fun$ )Bool )
(declare-fun less_eq$n (Bool Bool )Bool )
(declare-fun rel_fset$ (T_dtree_sum_T_dtree_sum_bool_fun_fun$ )T_dtree_sum_fset_T_dtree_sum_fset_bool_fun_fun$ )
(declare-fun rel_set$a (T_dtree_sum_T_dtree_sum_sum_T_dtree_sum_T_dtree_sum_sum_bool_fun_fun$ T_dtree_sum_T_dtree_sum_sum_set$ T_dtree_sum_T_dtree_sum_sum_set$ )Bool )
(declare-fun rel_set$b (T_T_bool_fun_fun$ T_set$ T_set$ )Bool )
(declare-fun rel_set$c (Dtree_dtree_bool_fun_fun$ Dtree_set$ Dtree_set$ )Bool )
(declare-fun rel_sum$a (T_dtree_sum_T_dtree_sum_bool_fun_fun$ )T_dtree_sum_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_dtree_sum_sum_T_dtree_sum_T_dtree_sum_sum_bool_fun_fun_fun$ )
(declare-fun fun_app$aa (N_T_bool_fun_fun$ N$ )T_bool_fun$ )
(declare-fun fun_app$ab (T_N_bool_fun_fun_N_T_bool_fun_fun_fun$ T_N_bool_fun_fun$ )N_T_bool_fun_fun$ )
(declare-fun fun_app$ac (T_N_bool_fun_fun$ T$ )N_bool_fun$ )
(declare-fun fun_app$ad (N_T_dtree_sum_bool_fun_fun_T_dtree_sum_N_bool_fun_fun_fun$ N_T_dtree_sum_bool_fun_fun$ )T_dtree_sum_N_bool_fun_fun$ )
(declare-fun fun_app$ae (N_N_bool_fun_fun$ N$ )N_bool_fun$ )
(declare-fun fun_app$af (N_N_bool_fun_fun_N_N_bool_fun_fun_fun$ N_N_bool_fun_fun$ )N_N_bool_fun_fun$ )
(declare-fun fun_app$ag (T_dtree_sum_fset_N_fun$ T_dtree_sum_fset$ )N$ )
(declare-fun fun_app$ah (N_T_dtree_sum_fset_N_fun_fun$ N$ )T_dtree_sum_fset_N_fun$ )
(declare-fun fun_app$ai (T_dtree_sum_fset_T_dtree_sum_fset_fun$ T_dtree_sum_fset$ )T_dtree_sum_fset$ )
(declare-fun fun_app$aj (N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ N$ )T_dtree_sum_fset_T_dtree_sum_fset_fun$ )
(declare-fun fun_app$ak (Dtree_T_bool_fun_fun$ Dtree$ )T_bool_fun$ )
(declare-fun fun_app$al (T_dtree_sum_T_dtree_sum_sum_bool_fun$ T_dtree_sum_T_dtree_sum_sum$ )Bool )
(declare-fun fun_app$am (T_dtree_sum_N_sum_bool_fun$ T_dtree_sum_N_sum$ )Bool )
(declare-fun fun_app$an (N_T_dtree_sum_sum_bool_fun$ N_T_dtree_sum_sum$ )Bool )
(declare-fun fun_app$ao (T_dtree_sum_bool_fun_N_set_set_fun$ T_dtree_sum_bool_fun$ )N_set_set$ )
(declare-fun fun_app$ap (T_set_N_set_set_fun$ T_set$ )N_set_set$ )
(declare-fun fun_app$aq (N_set_set_N_set_set_fun$ N_set_set$ )N_set_set$ )
(declare-fun fun_app$ar (N_set_N_set_fun$ N_set$ )N_set$ )
(declare-fun fun_app$as (T_dtree_sum_fset_bool_fun$ T_dtree_sum_fset$ )Bool )
(declare-fun fun_app$at (Dtree_dtree_bool_fun_fun_T_dtree_sum_T_dtree_sum_bool_fun_fun_fun$ Dtree_dtree_bool_fun_fun$ )T_dtree_sum_T_dtree_sum_bool_fun_fun$ )
(declare-fun fun_app$au (T_dtree_sum_fset_T_dtree_sum_fset_bool_fun_fun$ T_dtree_sum_fset$ )T_dtree_sum_fset_bool_fun$ )
(declare-fun fun_app$av (T_dtree_sum_T_dtree_sum_bool_fun_fun_T_dtree_sum_T_dtree_sum_sum_T_dtree_sum_T_dtree_sum_sum_bool_fun_fun_fun$ T_dtree_sum_T_dtree_sum_bool_fun_fun$ )T_dtree_sum_T_dtree_sum_sum_T_dtree_sum_T_dtree_sum_sum_bool_fun_fun$ )
(declare-fun fun_app$aw (N_N_fun$ N$ )N$ )
(declare-fun fun_app$ax (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun fun_app$ay (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$az (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun case_dtree$ (N_T_dtree_sum_fset_N_fun_fun$ Dtree$ )N$ )
(declare-fun case_dtree$a (N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ Dtree$ )T_dtree_sum_fset$ )
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ uvb$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$ uvb$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$a uvd$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$a uvd$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ uva$ ?v0 )(inl$a ?v0 )):pattern ((fun_app$ uva$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$b uvc$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$b uvc$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(! (= (fun_app$c (uun$ ?v0 )?v1 )(less_eq$ ?v1 ?v0 )):pattern ((fun_app$c (uun$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(! (= (fun_app$d (uuo$ ?v0 )?v1 )(less_eq$a ?v1 ?v0 )):pattern ((fun_app$d (uuo$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum$ ))(! (= (fun_app$e (uue$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$e (uue$ ?v0 )?v1 )))):named a6 ))
(assert (! (forall ((?v0 N_N_sum_set$ )(?v1 N_N_sum$ ))(! (= (fun_app$f (uu$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$f (uu$ ?v0 )?v1 )))):named a7 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree$ ))(! (= (fun_app$g (uua$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$g (uua$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_set$ ))(! (= (fun_app$c (uub$ ?v0 )?v1 )(member$c ?v1 ?v0 )):pattern ((fun_app$c (uub$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set$ ))(! (= (fun_app$d (uud$ ?v0 )?v1 )(member$d ?v1 ?v0 )):pattern ((fun_app$d (uud$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T$ ))(! (= (fun_app$h (uuc$ ?v0 )?v1 )(member$e ?v1 ?v0 )):pattern ((fun_app$h (uuc$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N$ ))(! (= (fun_app$i (uuf$ ?v0 )?v1 )(member$f ?v1 ?v0 )):pattern ((fun_app$i (uuf$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(! (= (fun_app$h (fun_app$j uuy$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$h (fun_app$j uuy$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 Dtree_dtree_bool_fun_fun$ )(?v1 Dtree$ )(?v2 Dtree$ ))(! (= (fun_app$g (fun_app$k (uuz$ ?v0 )?v1 )?v2 )(or (fun_app$g (fun_app$k ?v0 ?v1 )?v2 )(= ?v1 ?v2 ))):pattern ((fun_app$g (fun_app$k (uuz$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$l (uug$ ?v0 )?v1 )?v2 )(and (member$ ?v2 ?v0 )(fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$l (uug$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_bool_fun$ )(?v2 T$ ))(! (= (fun_app$h (fun_app$m (uuh$ ?v0 )?v1 )?v2 )(and (member$e ?v2 ?v0 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$m (uuh$ ?v0 )?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_bool_fun$ )(?v2 N$ ))(! (= (fun_app$i (fun_app$n (uui$ ?v0 )?v1 )?v2 )(and (member$f ?v2 ?v0 )(fun_app$i ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$n (uui$ ?v0 )?v1 )?v2 )))):named a17 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$l (uur$ ?v0 )?v1 )?v2 )(or (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$l (uur$ ?v0 )?v1 )?v2 )))):named a18 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_bool_fun$ )(?v2 T$ ))(! (= (fun_app$h (fun_app$m (uuq$ ?v0 )?v1 )?v2 )(or (fun_app$h ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$m (uuq$ ?v0 )?v1 )?v2 )))):named a19 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$l (uup$ ?v0 )?v1 )?v2 )(and (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 ))):pattern ((fun_app$e (fun_app$l (uup$ ?v0 )?v1 )?v2 )))):named a20 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_bool_fun$ )(?v2 T$ ))(! (= (fun_app$h (fun_app$m (uuj$ ?v0 )?v1 )?v2 )(and (fun_app$h ?v0 ?v2 )(fun_app$h ?v1 ?v2 ))):pattern ((fun_app$h (fun_app$m (uuj$ ?v0 )?v1 )?v2 )))):named a21 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ )(?v2 N$ ))(! (= (fun_app$i (fun_app$n (uuk$ ?v0 )?v1 )?v2 )(and (fun_app$i ?v0 ?v2 )(fun_app$i ?v1 ?v2 ))):pattern ((fun_app$i (fun_app$n (uuk$ ?v0 )?v1 )?v2 )))):named a22 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T$ ))(! (= (fun_app$h (fun_app$o (uvg$ ?v0 )?v1 )?v2 )(member$ (fun_app$b ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$o (uvg$ ?v0 )?v1 )?v2 )))):named a23 ))
(assert (! (forall ((?v0 T_N_fun$ )(?v1 N_set$ )(?v2 T$ ))(! (= (fun_app$h (fun_app$p (uvf$ ?v0 )?v1 )?v2 )(member$f (fun_app$q ?v0 ?v2 )?v1 )):pattern ((fun_app$h (fun_app$p (uvf$ ?v0 )?v1 )?v2 )))):named a24 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ )(?v2 T$ ))(! (= (fun_app$h (fun_app$m (uve$ ?v0 )?v1 )?v2 )(fun_app$h ?v1 (fun_app$r ?v0 ?v2 ))):pattern ((fun_app$h (fun_app$m (uve$ ?v0 )?v1 )?v2 )))):named a25 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_T_dtree_sum_bool_fun_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$s (fun_app$t (uux$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 ?v0 )(fun_app$e (fun_app$s ?v1 ?v3 )?v2 ))):pattern ((fun_app$e (fun_app$s (fun_app$t (uux$ ?v0 )?v1 )?v2 )?v3 )))):named a26 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_N_bool_fun_fun$ )(?v2 N$ )(?v3 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$u (fun_app$v (uuw$ ?v0 )?v1 )?v2 )?v3 )(and (member$ ?v3 ?v0 )(fun_app$i (fun_app$w ?v1 ?v3 )?v2 ))):pattern ((fun_app$e (fun_app$u (fun_app$v (uuw$ ?v0 )?v1 )?v2 )?v3 )))):named a27 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_T_dtree_sum_bool_fun_fun$ )(?v2 T_dtree_sum$ )(?v3 T$ ))(! (= (fun_app$h (fun_app$x (fun_app$y (uuv$ ?v0 )?v1 )?v2 )?v3 )(and (member$e ?v3 ?v0 )(fun_app$e (fun_app$z ?v1 ?v3 )?v2 ))):pattern ((fun_app$h (fun_app$x (fun_app$y (uuv$ ?v0 )?v1 )?v2 )?v3 )))):named a28 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_N_bool_fun_fun$ )(?v2 N$ )(?v3 T$ ))(! (= (fun_app$h (fun_app$aa (fun_app$ab (uut$ ?v0 )?v1 )?v2 )?v3 )(and (member$e ?v3 ?v0 )(fun_app$i (fun_app$ac ?v1 ?v3 )?v2 ))):pattern ((fun_app$h (fun_app$aa (fun_app$ab (uut$ ?v0 )?v1 )?v2 )?v3 )))):named a29 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_T_dtree_sum_bool_fun_fun$ )(?v2 T_dtree_sum$ )(?v3 N$ ))(! (= (fun_app$i (fun_app$w (fun_app$ad (uuu$ ?v0 )?v1 )?v2 )?v3 )(and (member$f ?v3 ?v0 )(fun_app$e (fun_app$u ?v1 ?v3 )?v2 ))):pattern ((fun_app$i (fun_app$w (fun_app$ad (uuu$ ?v0 )?v1 )?v2 )?v3 )))):named a30 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_N_bool_fun_fun$ )(?v2 N$ )(?v3 N$ ))(! (= (fun_app$i (fun_app$ae (fun_app$af (uus$ ?v0 )?v1 )?v2 )?v3 )(and (member$f ?v3 ?v0 )(fun_app$i (fun_app$ae ?v1 ?v3 )?v2 ))):pattern ((fun_app$i (fun_app$ae (fun_app$af (uus$ ?v0 )?v1 )?v2 )?v3 )))):named a31 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_fset$ ))(! (= (fun_app$ag (fun_app$ah uul$ ?v0 )?v1 )?v0 ):pattern ((fun_app$ag (fun_app$ah uul$ ?v0 )?v1 )))):named a32 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_fset$ ))(! (= (fun_app$ai (fun_app$aj uum$ ?v0 )?v1 )?v1 ):pattern ((fun_app$ai (fun_app$aj uum$ ?v0 )?v1 )))):named a33 ))
(assert (! (not (fun_app$h (fun_app$ak (inFr$ ns$ )tr$ )t$ )):named a34 ))
(assert (! (less_eq$a ns$a ns$ ):named a35 ))
(assert (! (fun_app$h (fun_app$ak (inFr$ ns$a )tr$ )t$ ):named a36 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (fun_app$h (fun_app$ak (inFr$ ?v0 )?v1 )?v2 )(member$f (root$ ?v1 )?v0 ))):named a37 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ ))(! (= (fr$ ?v0 ?v1 )(collect$ (fun_app$ak (inFr$ ?v0 )?v1 ))):pattern ((fr$ ?v0 ?v1 )))):named a38 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 T$ ))(=> (and (member$f (root$ ?v0 )?v1 )(member$ (inl$ ?v2 )(cont$ ?v0 )))(fun_app$h (fun_app$ak (inFr$ ?v1 )?v0 )?v2 ))):named a39 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_set$ )(?v2 Dtree$ )(?v3 T$ ))(=> (and (member$f (root$ ?v0 )?v1 )(and (member$ (inr$ ?v2 )(cont$ ?v0 ))(fun_app$h (fun_app$ak (inFr$ ?v1 )?v2 )?v3 )))(fun_app$h (fun_app$ak (inFr$ ?v1 )?v0 )?v3 ))):named a40 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(= (fun_app$h (fun_app$ak (inFr$ ?v0 )?v1 )?v2 )(or (exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$f (root$ ?v3 )?v4 )(member$ (inl$ ?v5 )(cont$ ?v3 )))))))(exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 T$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$f (root$ ?v3 )?v4 )(and (member$ (inr$ ?v5 )(cont$ ?v3 ))(fun_app$h (fun_app$ak (inFr$ ?v4 )?v5 )?v6 )))))))))):named a41 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(=> (and (fun_app$h (fun_app$ak (inFr$ ?v0 )?v1 )?v2 )(and (forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$f (root$ ?v3 )?v4 )(member$ (inl$ ?v5 )(cont$ ?v3 ))))))false ))(forall ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 T$ ))(=> (and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$f (root$ ?v3 )?v4 )(and (member$ (inr$ ?v5 )(cont$ ?v3 ))(fun_app$h (fun_app$ak (inFr$ ?v4 )?v5 )?v6 ))))))false ))))false )):named a42 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inl$a ?v0 )(inr$a ?v1 ))false )):named a43 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N$ ))(= (= (inl$b ?v0 )(inr$b ?v1 ))false )):named a44 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum$ ))(= (= (inl$c ?v0 )(inr$c ?v1 ))false )):named a45 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inl$d ?v0 )(inr$d ?v1 ))false )):named a46 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree$ ))(= (= (inl$ ?v0 )(inr$ ?v1 ))false )):named a47 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$a ?v0 )(inl$a ?v1 ))false )):named a48 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum$ ))(= (= (inr$b ?v0 )(inl$b ?v1 ))false )):named a49 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N$ ))(= (= (inr$c ?v0 )(inl$c ?v1 ))false )):named a50 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$d ?v0 )(inl$d ?v1 ))false )):named a51 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T$ ))(= (= (inr$ ?v0 )(inl$ ?v1 ))false )):named a52 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inl$a ?v0 )(inl$a ?v1 ))(= ?v0 ?v1 ))):named a53 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inl$b ?v0 )(inl$b ?v1 ))(= ?v0 ?v1 ))):named a54 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inl$c ?v0 )(inl$c ?v1 ))(= ?v0 ?v1 ))):named a55 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inl$d ?v0 )(inl$d ?v1 ))(= ?v0 ?v1 ))):named a56 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a57 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inl$a ?v0 )(inl$a ?v1 ))(= ?v0 ?v1 ))):named a58 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inl$b ?v0 )(inl$b ?v1 ))(= ?v0 ?v1 ))):named a59 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inl$c ?v0 )(inl$c ?v1 ))(= ?v0 ?v1 ))):named a60 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inl$d ?v0 )(inl$d ?v1 ))(= ?v0 ?v1 ))):named a61 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(= (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a62 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a63 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$b ?v0 )(inr$b ?v1 ))(= ?v0 ?v1 ))):named a64 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a65 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$d ?v0 )(inr$d ?v1 ))(= ?v0 ?v1 ))):named a66 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a67 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a68 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$b ?v0 )(inr$b ?v1 ))(= ?v0 ?v1 ))):named a69 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a70 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$d ?v0 )(inr$d ?v1 ))(= ?v0 ?v1 ))):named a71 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a72 ))
(assert (! (forall ((?v0 N_N_sum_set$ )(?v1 N_N_sum_set$ ))(=> (forall ((?v2 N_N_sum$ ))(=> (member$a ?v2 ?v0 )(member$a ?v2 ?v1 )))(less_eq$b ?v0 ?v1 ))):named a73 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_set$ ))(=> (forall ((?v2 Dtree$ ))(=> (member$b ?v2 ?v0 )(member$b ?v2 ?v1 )))(less_eq$c ?v0 ?v1 ))):named a74 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_set_set$ ))(=> (forall ((?v2 T_dtree_sum_set$ ))(=> (member$c ?v2 ?v0 )(member$c ?v2 ?v1 )))(less_eq$d ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(=> (forall ((?v2 T$ ))(=> (member$e ?v2 ?v0 )(member$e ?v2 ?v1 )))(less_eq$e ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v0 )(member$d ?v2 ?v1 )))(less_eq$f ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (forall ((?v2 T_dtree_sum$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a78 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (forall ((?v2 N$ ))(=> (member$f ?v2 ?v0 )(member$f ?v2 ?v1 )))(less_eq$a ?v0 ?v1 ))):named a79 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a80 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v0 ))(= ?v0 ?v1 ))):named a81 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (and (less_eq$f ?v0 ?v1 )(less_eq$f ?v1 ?v0 ))(= ?v0 ?v1 ))):named a82 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a83 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (root$ ?v0 )(root$ ?v1 ))(= (cont$ ?v0 )(cont$ ?v1 )))(= ?v0 ?v1 ))):named a84 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(less_eq$ ?v0 ?v0 )):named a85 ))
(assert (! (forall ((?v0 N_bool_fun$ ))(less_eq$g ?v0 ?v0 )):named a86 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ ))(less_eq$h ?v0 ?v0 )):named a87 ))
(assert (! (forall ((?v0 T_set$ ))(less_eq$e ?v0 ?v0 )):named a88 ))
(assert (! (forall ((?v0 N_set_set$ ))(less_eq$f ?v0 ?v0 )):named a89 ))
(assert (! (forall ((?v0 N_set$ ))(less_eq$a ?v0 ?v0 )):named a90 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_sum_bool_fun$ ))(= (exists ((?v1 T_dtree_sum_T_dtree_sum_sum$ ))(fun_app$al ?v0 ?v1 ))(or (exists ((?v1 T_dtree_sum$ ))(fun_app$al ?v0 (inl$a ?v1 )))(exists ((?v1 T_dtree_sum$ ))(fun_app$al ?v0 (inr$a ?v1 )))))):named a91 ))
(assert (! (forall ((?v0 T_dtree_sum_N_sum_bool_fun$ ))(= (exists ((?v1 T_dtree_sum_N_sum$ ))(fun_app$am ?v0 ?v1 ))(or (exists ((?v1 T_dtree_sum$ ))(fun_app$am ?v0 (inl$b ?v1 )))(exists ((?v1 N$ ))(fun_app$am ?v0 (inr$b ?v1 )))))):named a92 ))
(assert (! (forall ((?v0 N_T_dtree_sum_sum_bool_fun$ ))(= (exists ((?v1 N_T_dtree_sum_sum$ ))(fun_app$an ?v0 ?v1 ))(or (exists ((?v1 N$ ))(fun_app$an ?v0 (inl$c ?v1 )))(exists ((?v1 T_dtree_sum$ ))(fun_app$an ?v0 (inr$c ?v1 )))))):named a93 ))
(assert (! (forall ((?v0 N_N_sum_bool_fun$ ))(= (exists ((?v1 N_N_sum$ ))(fun_app$f ?v0 ?v1 ))(or (exists ((?v1 N$ ))(fun_app$f ?v0 (inl$d ?v1 )))(exists ((?v1 N$ ))(fun_app$f ?v0 (inr$d ?v1 )))))):named a94 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ ))(= (exists ((?v1 T_dtree_sum$ ))(fun_app$e ?v0 ?v1 ))(or (exists ((?v1 T$ ))(fun_app$e ?v0 (inl$ ?v1 )))(exists ((?v1 Dtree$ ))(fun_app$e ?v0 (inr$ ?v1 )))))):named a95 ))
(assert (! (forall ((?v0 N_N_sum_set$ )(?v1 N_N_sum_set$ ))(= (less_eq$b ?v0 ?v1 )(less_eq$i (uu$ ?v0 )(uu$ ?v1 )))):named a96 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_set$ ))(= (less_eq$c ?v0 ?v1 )(less_eq$j (uua$ ?v0 )(uua$ ?v1 )))):named a97 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ )(?v1 T_dtree_sum_set_set$ ))(= (less_eq$d ?v0 ?v1 )(less_eq$k (uub$ ?v0 )(uub$ ?v1 )))):named a98 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(= (less_eq$e ?v0 ?v1 )(less_eq$l (uuc$ ?v0 )(uuc$ ?v1 )))):named a99 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(= (less_eq$f ?v0 ?v1 )(less_eq$m (uud$ ?v0 )(uud$ ?v1 )))):named a100 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(= (less_eq$ ?v0 ?v1 )(less_eq$h (uue$ ?v0 )(uue$ ?v1 )))):named a101 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (less_eq$a ?v0 ?v1 )(less_eq$g (uuf$ ?v0 )(uuf$ ?v1 )))):named a102 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(less_eq$ ?v0 ?v0 )):named a103 ))
(assert (! (forall ((?v0 N_bool_fun$ ))(less_eq$g ?v0 ?v0 )):named a104 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ ))(less_eq$h ?v0 ?v0 )):named a105 ))
(assert (! (forall ((?v0 T_set$ ))(less_eq$e ?v0 ?v0 )):named a106 ))
(assert (! (forall ((?v0 N_set_set$ ))(less_eq$f ?v0 ?v0 )):named a107 ))
(assert (! (forall ((?v0 N_set$ ))(less_eq$a ?v0 ?v0 )):named a108 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ )(?v2 N$ ))(=> (less_eq$g ?v0 ?v1 )(less_eq$n (fun_app$i ?v0 ?v2 )(fun_app$i ?v1 ?v2 )))):named a109 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(=> (less_eq$h ?v0 ?v1 )(less_eq$n (fun_app$e ?v0 ?v2 )(fun_app$e ?v1 ?v2 )))):named a110 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(! (=> (less_eq$ ?v0 ?v1 )(= (less_eq$ ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$ ?v1 ?v0 )))):named a111 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ ))(! (=> (less_eq$g ?v0 ?v1 )(= (less_eq$g ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$g ?v1 ?v0 )))):named a112 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(! (=> (less_eq$h ?v0 ?v1 )(= (less_eq$h ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$h ?v1 ?v0 )))):named a113 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(! (=> (less_eq$e ?v0 ?v1 )(= (less_eq$e ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$e ?v1 ?v0 )))):named a114 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(! (=> (less_eq$f ?v0 ?v1 )(= (less_eq$f ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$f ?v1 ?v0 )))):named a115 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(! (=> (less_eq$a ?v0 ?v1 )(= (less_eq$a ?v1 ?v0 )(= ?v1 ?v0 ))):pattern ((less_eq$a ?v1 ?v0 )))):named a116 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less_eq$ ?v0 ?v2 ))):named a117 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ )(?v2 N_bool_fun$ ))(=> (and (less_eq$g ?v0 ?v1 )(less_eq$g ?v1 ?v2 ))(less_eq$g ?v0 ?v2 ))):named a118 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$h ?v0 ?v1 )(less_eq$h ?v1 ?v2 ))(less_eq$h ?v0 ?v2 ))):named a119 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v2 ))(less_eq$e ?v0 ?v2 ))):named a120 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ )(?v2 N_set_set$ ))(=> (and (less_eq$f ?v0 ?v1 )(less_eq$f ?v1 ?v2 ))(less_eq$f ?v0 ?v2 ))):named a121 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a122 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(less_eq$ ?v0 ?v2 ))):named a123 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ )(?v2 N_bool_fun$ ))(=> (and (less_eq$g ?v0 ?v1 )(less_eq$g ?v1 ?v2 ))(less_eq$g ?v0 ?v2 ))):named a124 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$h ?v0 ?v1 )(less_eq$h ?v1 ?v2 ))(less_eq$h ?v0 ?v2 ))):named a125 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v2 ))(less_eq$e ?v0 ?v2 ))):named a126 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ )(?v2 N_set_set$ ))(=> (and (less_eq$f ?v0 ?v1 )(less_eq$f ?v1 ?v2 ))(less_eq$f ?v0 ?v2 ))):named a127 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a128 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v2 ?v0 ))(less_eq$ ?v2 ?v1 ))):named a129 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ )(?v2 N_bool_fun$ ))(=> (and (less_eq$g ?v0 ?v1 )(less_eq$g ?v2 ?v0 ))(less_eq$g ?v2 ?v1 ))):named a130 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$h ?v0 ?v1 )(less_eq$h ?v2 ?v0 ))(less_eq$h ?v2 ?v1 ))):named a131 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v2 ?v0 ))(less_eq$e ?v2 ?v1 ))):named a132 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ )(?v2 N_set_set$ ))(=> (and (less_eq$f ?v0 ?v1 )(less_eq$f ?v2 ?v0 ))(less_eq$f ?v2 ?v1 ))):named a133 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v2 ?v0 ))(less_eq$a ?v2 ?v1 ))):named a134 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a135 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ ))(=> (and (less_eq$g ?v0 ?v1 )(less_eq$g ?v1 ?v0 ))(= ?v0 ?v1 ))):named a136 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$h ?v0 ?v1 )(less_eq$h ?v1 ?v0 ))(= ?v0 ?v1 ))):named a137 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v0 ))(= ?v0 ?v1 ))):named a138 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (and (less_eq$f ?v0 ?v1 )(less_eq$f ?v1 ?v0 ))(= ?v0 ?v1 ))):named a139 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a140 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a141 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ ))(=> (and (less_eq$g ?v0 ?v1 )(less_eq$g ?v1 ?v0 ))(= ?v0 ?v1 ))):named a142 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$h ?v0 ?v1 )(less_eq$h ?v1 ?v0 ))(= ?v0 ?v1 ))):named a143 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v0 ))(= ?v0 ?v1 ))):named a144 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (and (less_eq$f ?v0 ?v1 )(less_eq$f ?v1 ?v0 ))(= ?v0 ?v1 ))):named a145 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v0 ?v1 ))):named a146 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v1 ?v0 ))):named a147 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ ))(=> (and (less_eq$g ?v0 ?v1 )(less_eq$g ?v1 ?v0 ))(= ?v1 ?v0 ))):named a148 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$h ?v0 ?v1 )(less_eq$h ?v1 ?v0 ))(= ?v1 ?v0 ))):named a149 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(=> (and (less_eq$e ?v0 ?v1 )(less_eq$e ?v1 ?v0 ))(= ?v1 ?v0 ))):named a150 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (and (less_eq$f ?v0 ?v1 )(less_eq$f ?v1 ?v0 ))(= ?v1 ?v0 ))):named a151 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))(= ?v1 ?v0 ))):named a152 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 T_dtree_sum_bool_fun_N_set_set_fun$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$f ?v0 (fun_app$ao ?v1 ?v2 ))(and (less_eq$h ?v2 ?v3 )(forall ((?v4 T_dtree_sum_bool_fun$ )(?v5 T_dtree_sum_bool_fun$ ))(=> (less_eq$h ?v4 ?v5 )(less_eq$f (fun_app$ao ?v1 ?v4 )(fun_app$ao ?v1 ?v5 ))))))(less_eq$f ?v0 (fun_app$ao ?v1 ?v3 )))):named a153 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 T_set_N_set_set_fun$ )(?v2 T_set$ )(?v3 T_set$ ))(=> (and (less_eq$f ?v0 (fun_app$ap ?v1 ?v2 ))(and (less_eq$e ?v2 ?v3 )(forall ((?v4 T_set$ )(?v5 T_set$ ))(=> (less_eq$e ?v4 ?v5 )(less_eq$f (fun_app$ap ?v1 ?v4 )(fun_app$ap ?v1 ?v5 ))))))(less_eq$f ?v0 (fun_app$ap ?v1 ?v3 )))):named a154 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set_N_set_set_fun$ )(?v2 N_set_set$ )(?v3 N_set_set$ ))(=> (and (less_eq$f ?v0 (fun_app$aq ?v1 ?v2 ))(and (less_eq$f ?v2 ?v3 )(forall ((?v4 N_set_set$ )(?v5 N_set_set$ ))(=> (less_eq$f ?v4 ?v5 )(less_eq$f (fun_app$aq ?v1 ?v4 )(fun_app$aq ?v1 ?v5 ))))))(less_eq$f ?v0 (fun_app$aq ?v1 ?v3 )))):named a155 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_N_set_fun$ )(?v2 N_set$ )(?v3 N_set$ ))(=> (and (less_eq$a ?v0 (fun_app$ar ?v1 ?v2 ))(and (less_eq$a ?v2 ?v3 )(forall ((?v4 N_set$ )(?v5 N_set$ ))(=> (less_eq$a ?v4 ?v5 )(less_eq$a (fun_app$ar ?v1 ?v4 )(fun_app$ar ?v1 ?v5 ))))))(less_eq$a ?v0 (fun_app$ar ?v1 ?v3 )))):named a156 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set_N_set_fun$ )(?v3 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(and (less_eq$a (fun_app$ar ?v2 ?v1 )?v3 )(forall ((?v4 N_set$ )(?v5 N_set$ ))(=> (less_eq$a ?v4 ?v5 )(less_eq$a (fun_app$ar ?v2 ?v4 )(fun_app$ar ?v2 ?v5 ))))))(less_eq$a (fun_app$ar ?v2 ?v0 )?v3 ))):named a157 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(= ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a158 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set_N_set_fun$ )(?v3 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(and (= (fun_app$ar ?v2 ?v1 )?v3 )(forall ((?v4 N_set$ )(?v5 N_set$ ))(=> (less_eq$a ?v4 ?v5 )(less_eq$a (fun_app$ar ?v2 ?v4 )(fun_app$ar ?v2 ?v5 ))))))(less_eq$a (fun_app$ar ?v2 ?v0 )?v3 ))):named a159 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (= ?v0 ?v1 )(less_eq$a ?v0 ?v1 ))):named a160 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (= ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a161 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_N_set_fun$ )(?v2 N_set$ )(?v3 N_set$ ))(=> (and (= ?v0 (fun_app$ar ?v1 ?v2 ))(and (less_eq$a ?v2 ?v3 )(forall ((?v4 N_set$ )(?v5 N_set$ ))(=> (less_eq$a ?v4 ?v5 )(less_eq$a (fun_app$ar ?v1 ?v4 )(fun_app$ar ?v1 ?v5 ))))))(less_eq$a ?v0 (fun_app$ar ?v1 ?v3 )))):named a162 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (= ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 )))):named a163 ))
(assert (! (forall ((?v0 N_set$ ))(less_eq$a ?v0 ?v0 )):named a164 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ ))(=> (and (less_eq$ ?v0 ?v1 )(member$ ?v2 ?v0 ))(member$ ?v2 ?v1 ))):named a165 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N$ ))(=> (and (less_eq$a ?v0 ?v1 )(member$f ?v2 ?v0 ))(member$f ?v2 ?v1 ))):named a166 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_bool_fun$ ))(=> (forall ((?v2 T$ ))(= (fun_app$h ?v0 ?v2 )(fun_app$h ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a167 ))
(assert (! (forall ((?v0 N_set$ ))(= (collect$a (uuf$ ?v0 ))?v0 )):named a168 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (collect$b (uue$ ?v0 ))?v0 )):named a169 ))
(assert (! (forall ((?v0 T_set$ ))(= (collect$ (uuc$ ?v0 ))?v0 )):named a170 ))
(assert (! (forall ((?v0 N$ )(?v1 N_bool_fun$ ))(= (member$f ?v0 (collect$a ?v1 ))(fun_app$i ?v1 ?v0 ))):named a171 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_bool_fun$ ))(= (member$ ?v0 (collect$b ?v1 ))(fun_app$e ?v1 ?v0 ))):named a172 ))
(assert (! (forall ((?v0 T$ )(?v1 T_bool_fun$ ))(= (member$e ?v0 (collect$ ?v1 ))(fun_app$h ?v1 ?v0 ))):named a173 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ ))(=> (and (less_eq$ ?v0 ?v1 )(not (member$ ?v2 ?v1 )))(not (member$ ?v2 ?v0 )))):named a174 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N$ ))(=> (and (less_eq$a ?v0 ?v1 )(not (member$f ?v2 ?v1 )))(not (member$f ?v2 ?v0 )))):named a175 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(less_eq$a ?v0 ?v2 ))):named a176 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ ))(=> (and (less_eq$ ?v0 ?v1 )(member$ ?v2 ?v0 ))(member$ ?v2 ?v1 ))):named a177 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N$ ))(=> (and (less_eq$a ?v0 ?v1 )(member$f ?v2 ?v0 ))(member$f ?v2 ?v1 ))):named a178 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ ))(=> (and (less_eq$ ?v0 ?v1 )(member$ ?v2 ?v0 ))(member$ ?v2 ?v1 ))):named a179 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N$ ))(=> (and (less_eq$a ?v0 ?v1 )(member$f ?v2 ?v0 ))(member$f ?v2 ?v1 ))):named a180 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ ))(=> (and (less_eq$ ?v0 ?v1 )(and (=> (not (member$ ?v2 ?v0 ))false )(=> (member$ ?v2 ?v1 )false )))false )):named a181 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N$ ))(=> (and (less_eq$a ?v0 ?v1 )(and (=> (not (member$f ?v2 ?v0 ))false )(=> (member$f ?v2 ?v1 )false )))false )):named a182 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(member$ ?v0 ?v2 ))):named a183 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (member$f ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(member$f ?v0 ?v2 ))):named a184 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 ?v1 )(less_eq$ ?v1 ?v2 ))(member$ ?v0 ?v2 ))):named a185 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (member$f ?v0 ?v1 )(less_eq$a ?v1 ?v2 ))(member$f ?v0 ?v2 ))):named a186 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (= ?v0 ?v1 )(less_eq$a ?v0 ?v1 ))):named a187 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (= ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))):named a188 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (= ?v0 ?v1 )(=> (and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 ))false ))false )):named a189 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_bool_fun$ ))(=> (forall ((?v2 T$ ))(=> (fun_app$h ?v0 ?v2 )(fun_app$h ?v1 ?v2 )))(less_eq$e (collect$ ?v0 )(collect$ ?v1 )))):named a190 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_bool_fun$ ))(=> (forall ((?v2 N$ ))(=> (fun_app$i ?v0 ?v2 )(fun_app$i ?v1 ?v2 )))(less_eq$a (collect$a ?v0 )(collect$a ?v1 )))):named a191 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 T_dtree_sum$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a192 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (less_eq$a ?v0 ?v1 )(forall ((?v2 N$ ))(=> (member$f ?v2 ?v0 )(member$f ?v2 ?v1 ))))):named a193 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(= (less_eq$ ?v0 ?v1 )(forall ((?v2 T_dtree_sum$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 ))))):named a194 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (less_eq$a ?v0 ?v1 )(forall ((?v2 N$ ))(=> (member$f ?v2 ?v0 )(member$f ?v2 ?v1 ))))):named a195 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (= ?v0 ?v1 )(and (less_eq$a ?v0 ?v1 )(less_eq$a ?v1 ?v0 )))):named a196 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a197 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(=> (= (inl$ ?v0 )(inl$ ?v1 ))(= ?v0 ?v1 ))):named a198 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree$ ))(not (= (inl$ ?v0 )(inr$ ?v1 )))):named a199 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T$ ))(not (= (inr$ ?v0 )(inl$ ?v1 )))):named a200 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree$ ))(not (= (inl$ ?v0 )(inr$ ?v1 )))):named a201 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T$ ))(not (= (inr$ ?v0 )(inl$ ?v1 )))):named a202 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(=> (and (forall ((?v1 T$ ))(=> (= ?v0 (inl$ ?v1 ))false ))(forall ((?v1 Dtree$ ))(=> (= ?v0 (inr$ ?v1 ))false )))false )):named a203 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(=> (and (forall ((?v1 T$ ))(=> (= ?v0 (inl$ ?v1 ))false ))(forall ((?v1 Dtree$ ))(=> (= ?v0 (inr$ ?v1 ))false )))false )):named a204 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ ))(= (forall ((?v1 T_dtree_sum$ ))(fun_app$e ?v0 ?v1 ))(and (forall ((?v1 T$ ))(fun_app$e ?v0 (inl$ ?v1 )))(forall ((?v1 Dtree$ ))(fun_app$e ?v0 (inr$ ?v1 )))))):named a205 ))
(assert (! (forall ((?v0 Dtree$ ))(= (node$ (root$ ?v0 )(cont$ ?v0 ))?v0 )):named a206 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(=> (and (forall ((?v1 T$ ))(=> (= ?v0 (inl$ ?v1 ))false ))(forall ((?v1 Dtree$ ))(=> (= ?v0 (inr$ ?v1 ))false )))false )):named a207 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(= (less_eq$h (uue$ ?v0 )(uue$ ?v1 ))(less_eq$ ?v0 ?v1 ))):named a208 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (less_eq$g (uuf$ ?v0 )(uuf$ ?v1 ))(less_eq$a ?v0 ?v1 ))):named a209 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_bool_fun$ ))(less_eq$ (collect$b (fun_app$l (uug$ ?v0 )?v1 ))?v0 )):named a210 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_bool_fun$ ))(less_eq$e (collect$ (fun_app$m (uuh$ ?v0 )?v1 ))?v0 )):named a211 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_bool_fun$ ))(less_eq$a (collect$a (fun_app$n (uui$ ?v0 )?v1 ))?v0 )):named a212 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (less_eq$ ?v0 ?v1 )(= (less_eq$ ?v0 (collect$b (fun_app$l (uug$ ?v1 )?v2 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v0 )(fun_app$e ?v2 ?v3 )))))):named a213 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_bool_fun$ ))(=> (less_eq$e ?v0 ?v1 )(= (less_eq$e ?v0 (collect$ (fun_app$m (uuh$ ?v1 )?v2 )))(forall ((?v3 T$ ))(=> (member$e ?v3 ?v0 )(fun_app$h ?v2 ?v3 )))))):named a214 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_bool_fun$ ))(=> (less_eq$a ?v0 ?v1 )(= (less_eq$a ?v0 (collect$a (fun_app$n (uui$ ?v1 )?v2 )))(forall ((?v3 N$ ))(=> (member$f ?v3 ?v0 )(fun_app$i ?v2 ?v3 )))))):named a215 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ )(?v3 T_dtree_sum_bool_fun$ ))(=> (and (less_eq$ ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (and (member$ ?v4 ?v0 )(fun_app$e ?v2 ?v4 ))(fun_app$e ?v3 ?v4 ))))(less_eq$ (collect$b (fun_app$l (uug$ ?v0 )?v2 ))(collect$b (fun_app$l (uug$ ?v1 )?v3 ))))):named a216 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ )(?v2 T_bool_fun$ )(?v3 T_bool_fun$ ))(=> (and (less_eq$e ?v0 ?v1 )(forall ((?v4 T$ ))(=> (and (member$e ?v4 ?v0 )(fun_app$h ?v2 ?v4 ))(fun_app$h ?v3 ?v4 ))))(less_eq$e (collect$ (fun_app$m (uuh$ ?v0 )?v2 ))(collect$ (fun_app$m (uuh$ ?v1 )?v3 ))))):named a217 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_bool_fun$ )(?v3 N_bool_fun$ ))(=> (and (less_eq$a ?v0 ?v1 )(forall ((?v4 N$ ))(=> (and (member$f ?v4 ?v0 )(fun_app$i ?v2 ?v4 ))(fun_app$i ?v3 ?v4 ))))(less_eq$a (collect$a (fun_app$n (uui$ ?v0 )?v2 ))(collect$a (fun_app$n (uui$ ?v1 )?v3 ))))):named a218 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_bool_fun$ ))(=> (and (member$ ?v0 ?v1 )(less_eq$ ?v1 (collect$b (fun_app$l (uug$ ?v2 )?v3 ))))(fun_app$e ?v3 ?v0 ))):named a219 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_set$ )(?v3 T_bool_fun$ ))(=> (and (member$e ?v0 ?v1 )(less_eq$e ?v1 (collect$ (fun_app$m (uuh$ ?v2 )?v3 ))))(fun_app$h ?v3 ?v0 ))):named a220 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ )(?v3 N_bool_fun$ ))(=> (and (member$f ?v0 ?v1 )(less_eq$a ?v1 (collect$a (fun_app$n (uui$ ?v2 )?v3 ))))(fun_app$i ?v3 ?v0 ))):named a221 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_bool_fun$ )(?v2 T_bool_fun$ ))(= (less_eq$e ?v0 (collect$ (fun_app$m (uuj$ ?v1 )?v2 )))(and (less_eq$e ?v0 (collect$ ?v1 ))(less_eq$e ?v0 (collect$ ?v2 ))))):named a222 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_bool_fun$ )(?v2 N_bool_fun$ ))(= (less_eq$a ?v0 (collect$a (fun_app$n (uuk$ ?v1 )?v2 )))(and (less_eq$a ?v0 (collect$a ?v1 ))(less_eq$a ?v0 (collect$a ?v2 ))))):named a223 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_set$ ))(= (root$ (node$ ?v0 ?v1 ))?v0 )):named a224 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (not (= ?v0 ?v1 ))(not (= (inr$ ?v0 )(inr$ ?v1 ))))):named a225 ))
(assert (! (forall ((?v0 Dtree$ ))(= (root$ ?v0 )(case_dtree$ uul$ ?v0 ))):named a226 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fset_N_fun_fun$ )(?v1 Dtree$ ))(! (= (case_dtree$ ?v0 ?v1 )(fun_app$ag (fun_app$ah ?v0 (root$ ?v1 ))(ccont$ ?v1 ))):pattern ((case_dtree$ ?v0 ?v1 )))):named a227 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ )(?v1 Dtree$ ))(! (= (case_dtree$a ?v0 ?v1 )(fun_app$ai (fun_app$aj ?v0 (root$ ?v1 ))(ccont$ ?v1 ))):pattern ((case_dtree$a ?v0 ?v1 )))):named a228 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 N$ ))(=> (finite$ ?v0 )(= (cont$ (node$ ?v1 ?v0 ))?v0 ))):named a229 ))
(assert (! (forall ((?v0 N_set_N_set_fun$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (antimono$ ?v0 )(less_eq$a ?v1 ?v2 ))(less_eq$a (fun_app$ar ?v0 ?v2 )(fun_app$ar ?v0 ?v1 )))):named a230 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 N$ )(?v3 N$ ))(=> (and (finite$ ?v0 )(finite$ ?v1 ))(= (= (node$ ?v2 ?v0 )(node$ ?v3 ?v1 ))(and (= ?v2 ?v3 )(= ?v0 ?v1 ))))):named a231 ))
(assert (! (forall ((?v0 Dtree$ ))(= (ccont$ ?v0 )(case_dtree$a uum$ ?v0 ))):named a232 ))
(assert (! (forall ((?v0 Dtree$ ))(finite$ (cont$ ?v0 ))):named a233 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (forall ((?v1 N$ )(?v2 T_dtree_sum_set$ ))(=> (and (finite$ ?v2 )(= ?v0 (node$ ?v1 ?v2 )))false ))false )):named a234 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (= (root$ ?v0 )(root$ ?v1 ))(= (ccont$ ?v0 )(ccont$ ?v1 )))(= ?v0 ?v1 ))):named a235 ))
(assert (! (forall ((?v0 N_set_N_set_fun$ ))(= (antimono$ ?v0 )(forall ((?v1 N_set$ )(?v2 N_set$ ))(=> (less_eq$a ?v1 ?v2 )(less_eq$a (fun_app$ar ?v0 ?v2 )(fun_app$ar ?v0 ?v1 )))))):named a236 ))
(assert (! (forall ((?v0 N_set_N_set_fun$ ))(=> (forall ((?v1 N_set$ )(?v2 N_set$ ))(=> (less_eq$a ?v1 ?v2 )(less_eq$a (fun_app$ar ?v0 ?v2 )(fun_app$ar ?v0 ?v1 ))))(antimono$ ?v0 ))):named a237 ))
(assert (! (forall ((?v0 N_set_N_set_fun$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (antimono$ ?v0 )(and (less_eq$a ?v1 ?v2 )(=> (less_eq$a (fun_app$ar ?v0 ?v2 )(fun_app$ar ?v0 ?v1 ))false )))false )):named a238 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(=> (finite$ ?v0 )(finite$a (collect$c (uun$ ?v0 ))))):named a239 ))
(assert (! (forall ((?v0 N_set$ ))(=> (finite$b ?v0 )(finite$c (collect$d (uuo$ ?v0 ))))):named a240 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_bool_fun$ ))(=> (or (finite$d (collect$ ?v0 ))(finite$d (collect$ ?v1 )))(finite$d (collect$ (fun_app$m (uuj$ ?v0 )?v1 ))))):named a241 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(=> (or (finite$ (collect$b ?v0 ))(finite$ (collect$b ?v1 )))(finite$ (collect$b (fun_app$l (uup$ ?v0 )?v1 ))))):named a242 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_bool_fun$ ))(= (finite$d (collect$ (fun_app$m (uuq$ ?v0 )?v1 )))(and (finite$d (collect$ ?v0 ))(finite$d (collect$ ?v1 ))))):named a243 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (finite$ (collect$b (fun_app$l (uur$ ?v0 )?v1 )))(and (finite$ (collect$b ?v0 ))(finite$ (collect$b ?v1 ))))):named a244 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(not (finite$ ?v0 )))(not (finite$ ?v1 )))):named a245 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(not (finite$b ?v0 )))(not (finite$b ?v1 )))):named a246 ))
(assert (! (forall ((?v0 T_bool_fun$ ))(=> (not (finite$d (collect$ ?v0 )))(exists ((?v1 T$ ))(fun_app$h ?v0 ?v1 )))):named a247 ))
(assert (! (forall ((?v0 T_dtree_sum_bool_fun$ ))(=> (not (finite$ (collect$b ?v0 )))(exists ((?v1 T_dtree_sum$ ))(fun_app$e ?v0 ?v1 )))):named a248 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_N_bool_fun_fun$ ))(=> (and (not (finite$b ?v0 ))(and (finite$b ?v1 )(forall ((?v3 N$ ))(=> (member$f ?v3 ?v0 )(exists ((?v4 N$ ))(and (member$f ?v4 ?v1 )(fun_app$i (fun_app$ae ?v2 ?v3 )?v4 )))))))(exists ((?v3 N$ ))(and (member$f ?v3 ?v1 )(not (finite$b (collect$a (fun_app$ae (fun_app$af (uus$ ?v0 )?v2 )?v3 )))))))):named a249 ))
(assert (! (forall ((?v0 T_set$ )(?v1 N_set$ )(?v2 T_N_bool_fun_fun$ ))(=> (and (not (finite$d ?v0 ))(and (finite$b ?v1 )(forall ((?v3 T$ ))(=> (member$e ?v3 ?v0 )(exists ((?v4 N$ ))(and (member$f ?v4 ?v1 )(fun_app$i (fun_app$ac ?v2 ?v3 )?v4 )))))))(exists ((?v3 N$ ))(and (member$f ?v3 ?v1 )(not (finite$d (collect$ (fun_app$aa (fun_app$ab (uut$ ?v0 )?v2 )?v3 )))))))):named a250 ))
(assert (! (forall ((?v0 N_set$ )(?v1 T_dtree_sum_set$ )(?v2 N_T_dtree_sum_bool_fun_fun$ ))(=> (and (not (finite$b ?v0 ))(and (finite$ ?v1 )(forall ((?v3 N$ ))(=> (member$f ?v3 ?v0 )(exists ((?v4 T_dtree_sum$ ))(and (member$ ?v4 ?v1 )(fun_app$e (fun_app$u ?v2 ?v3 )?v4 )))))))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(not (finite$b (collect$a (fun_app$w (fun_app$ad (uuu$ ?v0 )?v2 )?v3 )))))))):named a251 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_T_dtree_sum_bool_fun_fun$ ))(=> (and (not (finite$d ?v0 ))(and (finite$ ?v1 )(forall ((?v3 T$ ))(=> (member$e ?v3 ?v0 )(exists ((?v4 T_dtree_sum$ ))(and (member$ ?v4 ?v1 )(fun_app$e (fun_app$z ?v2 ?v3 )?v4 )))))))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(not (finite$d (collect$ (fun_app$x (fun_app$y (uuv$ ?v0 )?v2 )?v3 )))))))):named a252 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 N_set$ )(?v2 T_dtree_sum_N_bool_fun_fun$ ))(=> (and (not (finite$ ?v0 ))(and (finite$b ?v1 )(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v0 )(exists ((?v4 N$ ))(and (member$f ?v4 ?v1 )(fun_app$i (fun_app$w ?v2 ?v3 )?v4 )))))))(exists ((?v3 N$ ))(and (member$f ?v3 ?v1 )(not (finite$ (collect$b (fun_app$u (fun_app$v (uuw$ ?v0 )?v2 )?v3 )))))))):named a253 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_bool_fun_fun$ ))(=> (and (not (finite$ ?v0 ))(and (finite$ ?v1 )(forall ((?v3 T_dtree_sum$ ))(=> (member$ ?v3 ?v0 )(exists ((?v4 T_dtree_sum$ ))(and (member$ ?v4 ?v1 )(fun_app$e (fun_app$s ?v2 ?v3 )?v4 )))))))(exists ((?v3 T_dtree_sum$ ))(and (member$ ?v3 ?v1 )(not (finite$ (collect$b (fun_app$s (fun_app$t (uux$ ?v0 )?v2 )?v3 )))))))):named a254 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (finite$ ?v0 )(less_eq$ ?v1 ?v0 ))(finite$ ?v1 ))):named a255 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (finite$b ?v0 )(less_eq$a ?v1 ?v0 ))(finite$b ?v1 ))):named a256 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(finite$ ?v1 ))(finite$ ?v0 ))):named a257 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (less_eq$a ?v0 ?v1 )(finite$b ?v1 ))(finite$b ?v0 ))):named a258 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_T_dtree_sum_fset_N_fun_fun$ )(?v2 Dtree$ ))(= (fun_app$i ?v0 (case_dtree$ ?v1 ?v2 ))(=> (= ?v2 (nNode$ (root$ ?v2 )(ccont$ ?v2 )))(fun_app$i ?v0 (fun_app$ag (fun_app$ah ?v1 (root$ ?v2 ))(ccont$ ?v2 )))))):named a259 ))
(assert (! (forall ((?v0 T_dtree_sum_fset_bool_fun$ )(?v1 N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ )(?v2 Dtree$ ))(= (fun_app$as ?v0 (case_dtree$a ?v1 ?v2 ))(=> (= ?v2 (nNode$ (root$ ?v2 )(ccont$ ?v2 )))(fun_app$as ?v0 (fun_app$ai (fun_app$aj ?v1 (root$ ?v2 ))(ccont$ ?v2 )))))):named a260 ))
(assert (! (forall ((?v0 N_bool_fun$ )(?v1 N_T_dtree_sum_fset_N_fun_fun$ )(?v2 Dtree$ ))(= (fun_app$i ?v0 (case_dtree$ ?v1 ?v2 ))(not (and (= ?v2 (nNode$ (root$ ?v2 )(ccont$ ?v2 )))(not (fun_app$i ?v0 (fun_app$ag (fun_app$ah ?v1 (root$ ?v2 ))(ccont$ ?v2 )))))))):named a261 ))
(assert (! (forall ((?v0 T_dtree_sum_fset_bool_fun$ )(?v1 N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ )(?v2 Dtree$ ))(= (fun_app$as ?v0 (case_dtree$a ?v1 ?v2 ))(not (and (= ?v2 (nNode$ (root$ ?v2 )(ccont$ ?v2 )))(not (fun_app$as ?v0 (fun_app$ai (fun_app$aj ?v1 (root$ ?v2 ))(ccont$ ?v2 )))))))):named a262 ))
(assert (! (forall ((?v0 Dtree$ ))(= (nNode$ (root$ ?v0 )(ccont$ ?v0 ))?v0 )):named a263 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_fset$ )(?v2 N$ )(?v3 T_dtree_sum_fset$ ))(= (= (nNode$ ?v0 ?v1 )(nNode$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a264 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (forall ((?v1 N$ )(?v2 T_dtree_sum_fset$ ))(=> (= ?v0 (nNode$ ?v1 ?v2 ))false ))false )):named a265 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_fset$ ))(! (= (root$ (nNode$ ?v0 ?v1 ))?v0 ):pattern ((nNode$ ?v0 ?v1 )))):named a266 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_fset$ ))(! (= (ccont$ (nNode$ ?v0 ?v1 ))?v1 ):pattern ((nNode$ ?v0 ?v1 )))):named a267 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fset_N_fun_fun$ )(?v1 N$ )(?v2 T_dtree_sum_fset$ ))(! (= (case_dtree$ ?v0 (nNode$ ?v1 ?v2 ))(fun_app$ag (fun_app$ah ?v0 ?v1 )?v2 )):pattern ((case_dtree$ ?v0 (nNode$ ?v1 ?v2 ))))):named a268 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fset_T_dtree_sum_fset_fun_fun$ )(?v1 N$ )(?v2 T_dtree_sum_fset$ ))(! (= (case_dtree$a ?v0 (nNode$ ?v1 ?v2 ))(fun_app$ai (fun_app$aj ?v0 ?v1 )?v2 )):pattern ((case_dtree$a ?v0 (nNode$ ?v1 ?v2 ))))):named a269 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (=> (= ?v0 (nNode$ (root$ ?v0 )(ccont$ ?v0 )))false )false )):named a270 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (finite$a (pow$ ?v0 ))(finite$ ?v0 ))):named a271 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(= (finite$e (plus$ ?v0 ?v1 ))(and (finite$ ?v0 )(finite$ ?v1 )))):named a272 ))
(assert (! (forall ((?v0 T_set$ )(?v1 Dtree_set$ ))(= (finite$ (plus$a ?v0 ?v1 ))(and (finite$d ?v0 )(finite$f ?v1 )))):named a273 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (less_eq$a ?v0 ?v1 )(member$d ?v0 (pow$a ?v1 )))):named a274 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (member$d ?v0 (pow$a ?v1 ))(less_eq$a ?v0 ?v1 ))):named a275 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 T_set$ ))(=> (member$b ?v0 ?v1 )(member$ (inr$ ?v0 )(plus$a ?v2 ?v1 )))):named a276 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 Dtree_set$ ))(=> (member$e ?v0 ?v1 )(member$ (inl$ ?v0 )(plus$a ?v1 ?v2 )))):named a277 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (member$d ?v0 (pow$a ?v1 ))(less_eq$a ?v0 ?v1 ))):named a278 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$f (pow$a ?v0 )(pow$a ?v1 )))):named a279 ))
(assert (! (forall ((?v0 N_set$ ))(= (pow$a ?v0 )(collect$d (uuo$ ?v0 )))):named a280 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(= (powp$ (uuf$ ?v0 )?v1 )(member$d ?v1 (pow$a ?v0 )))):named a281 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(= (powp$a (uue$ ?v0 )?v1 )(member$c ?v1 (pow$ ?v0 )))):named a282 ))
(assert (! (forall ((?v0 N_N_sum$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (and (member$a ?v0 (plus$b ?v1 ?v2 ))(and (forall ((?v3 N$ ))(=> (and (member$f ?v3 ?v1 )(= ?v0 (inl$d ?v3 )))false ))(forall ((?v3 N$ ))(=> (and (member$f ?v3 ?v2 )(= ?v0 (inr$d ?v3 )))false ))))false )):named a283 ))
(assert (! (forall ((?v0 N_T_dtree_sum_sum$ )(?v1 N_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$g ?v0 (plus$c ?v1 ?v2 ))(and (forall ((?v3 N$ ))(=> (and (member$f ?v3 ?v1 )(= ?v0 (inl$c ?v3 )))false ))(forall ((?v3 T_dtree_sum$ ))(=> (and (member$ ?v3 ?v2 )(= ?v0 (inr$c ?v3 )))false ))))false )):named a284 ))
(assert (! (forall ((?v0 T_dtree_sum_N_sum$ )(?v1 T_dtree_sum_set$ )(?v2 N_set$ ))(=> (and (member$h ?v0 (plus$d ?v1 ?v2 ))(and (forall ((?v3 T_dtree_sum$ ))(=> (and (member$ ?v3 ?v1 )(= ?v0 (inl$b ?v3 )))false ))(forall ((?v3 N$ ))(=> (and (member$f ?v3 ?v2 )(= ?v0 (inr$b ?v3 )))false ))))false )):named a285 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$i ?v0 (plus$ ?v1 ?v2 ))(and (forall ((?v3 T_dtree_sum$ ))(=> (and (member$ ?v3 ?v1 )(= ?v0 (inl$a ?v3 )))false ))(forall ((?v3 T_dtree_sum$ ))(=> (and (member$ ?v3 ?v2 )(= ?v0 (inr$a ?v3 )))false ))))false )):named a286 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_set$ )(?v2 Dtree_set$ ))(=> (and (member$ ?v0 (plus$a ?v1 ?v2 ))(and (forall ((?v3 T$ ))(=> (and (member$e ?v3 ?v1 )(= ?v0 (inl$ ?v3 )))false ))(forall ((?v3 Dtree$ ))(=> (and (member$b ?v3 ?v2 )(= ?v0 (inr$ ?v3 )))false ))))false )):named a287 ))
(assert (! (forall ((?v0 T_set$ )(?v1 Dtree_set$ ))(=> (and (finite$d ?v0 )(finite$f ?v1 ))(finite$ (plus$a ?v0 ?v1 )))):named a288 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (finite$ ?v0 )(finite$ ?v1 ))(finite$e (plus$ ?v0 ?v1 )))):named a289 ))
(assert (! (forall ((?v0 T_set$ )(?v1 Dtree_set$ ))(=> (finite$ (plus$a ?v0 ?v1 ))(finite$f ?v1 ))):named a290 ))
(assert (! (forall ((?v0 T_set$ )(?v1 Dtree_set$ ))(=> (finite$ (plus$a ?v0 ?v1 ))(finite$d ?v0 ))):named a291 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T$ ))(=> (and (fun_app$h (setlp$ ?v0 )?v1 )(forall ((?v2 T$ ))(=> (and (= ?v1 ?v2 )(= ?v0 (inl$ ?v2 )))false )))false )):named a292 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T$ ))(=> (= ?v0 (inl$ ?v1 ))(fun_app$h (setlp$ ?v0 )?v1 ))):named a293 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T$ ))(= (fun_app$h (setlp$ ?v0 )?v1 )(exists ((?v2 T$ ))(and (= ?v1 ?v2 )(= ?v0 (inl$ ?v2 )))))):named a294 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ ))(= (setrp$ ?v0 ?v1 )(exists ((?v2 Dtree$ ))(and (= ?v1 ?v2 )(= ?v0 (inr$ ?v2 )))))):named a295 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ ))(=> (= ?v0 (inr$ ?v1 ))(setrp$ ?v0 ?v1 ))):named a296 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree$ ))(=> (and (setrp$ ?v0 ?v1 )(forall ((?v2 Dtree$ ))(=> (and (= ?v1 ?v2 )(= ?v0 (inr$ ?v2 )))false )))false )):named a297 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 Dtree_dtree_bool_fun_fun$ )(?v2 T$ )(?v3 Dtree$ ))(! (= (fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inl$ ?v2 ))(inr$ ?v3 ))false ):pattern ((fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inl$ ?v2 ))(inr$ ?v3 ))))):named a298 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 Dtree_dtree_bool_fun_fun$ )(?v2 Dtree$ )(?v3 T$ ))(! (= (fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inr$ ?v2 ))(inl$ ?v3 ))false ):pattern ((fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inr$ ?v2 ))(inl$ ?v3 ))))):named a299 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ ))(=> (and (finite$a ?v0 )(forall ((?v1 T_dtree_sum_set$ ))(=> (member$c ?v1 ?v0 )(finite$ ?v1 ))))(finite$ (sup$ ?v0 )))):named a300 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 Dtree_dtree_bool_fun_fun$ )(?v2 Dtree$ )(?v3 Dtree$ ))(! (= (fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inr$ ?v2 ))(inr$ ?v3 ))(fun_app$g (fun_app$k ?v1 ?v2 )?v3 )):pattern ((fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inr$ ?v2 ))(inr$ ?v3 ))))):named a301 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 Dtree_dtree_bool_fun_fun$ )(?v2 T$ )(?v3 T$ ))(! (= (fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inl$ ?v2 ))(inl$ ?v3 ))(fun_app$h (fun_app$j ?v0 ?v2 )?v3 )):pattern ((fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )(inl$ ?v2 ))(inl$ ?v3 ))))):named a302 ))
(assert (! (forall ((?v0 Dtree_dtree_bool_fun_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 T_T_bool_fun_fun$ ))(=> (fun_app$g (fun_app$k ?v0 ?v1 )?v2 )(fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v3 )?v0 )(inr$ ?v1 ))(inr$ ?v2 )))):named a303 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 T$ )(?v2 T$ )(?v3 Dtree_dtree_bool_fun_fun$ ))(=> (fun_app$h (fun_app$j ?v0 ?v1 )?v2 )(fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v3 )(inl$ ?v1 ))(inl$ ?v2 )))):named a304 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 Dtree_dtree_bool_fun_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum$ ))(= (fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )?v2 )?v3 )(or (exists ((?v4 T$ )(?v5 T$ ))(and (= ?v2 (inl$ ?v4 ))(and (= ?v3 (inl$ ?v5 ))(fun_app$h (fun_app$j ?v0 ?v4 )?v5 ))))(exists ((?v4 Dtree$ )(?v5 Dtree$ ))(and (= ?v2 (inr$ ?v4 ))(and (= ?v3 (inr$ ?v5 ))(fun_app$g (fun_app$k ?v1 ?v4 )?v5 ))))))):named a305 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 Dtree_dtree_bool_fun_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum$ ))(=> (and (fun_app$e (fun_app$s (fun_app$at (rel_sum$ ?v0 )?v1 )?v2 )?v3 )(and (forall ((?v4 T$ )(?v5 T$ ))(=> (and (= ?v2 (inl$ ?v4 ))(and (= ?v3 (inl$ ?v5 ))(fun_app$h (fun_app$j ?v0 ?v4 )?v5 )))false ))(forall ((?v4 Dtree$ )(?v5 Dtree$ ))(=> (and (= ?v2 (inr$ ?v4 ))(and (= ?v3 (inr$ ?v5 ))(fun_app$g (fun_app$k ?v1 ?v4 )?v5 )))false ))))false )):named a306 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ ))(=> (finite$ (sup$ ?v0 ))(finite$a ?v0 ))):named a307 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (less_eq$f ?v0 ?v1 )(less_eq$a (sup$a ?v0 )(sup$a ?v1 )))):named a308 ))
(assert (! (forall ((?v0 T_dtree_sum_set_set$ ))(=> (exists ((?v1 T_dtree_sum_set$ ))(and (finite$ ?v1 )(forall ((?v2 T_dtree_sum_set$ ))(=> (member$c ?v2 ?v0 )(less_eq$ ?v2 ?v1 )))))(finite$ (sup$ ?v0 )))):named a309 ))
(assert (! (forall ((?v0 N_set_set$ ))(=> (exists ((?v1 N_set$ ))(and (finite$b ?v1 )(forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v0 )(less_eq$a ?v2 ?v1 )))))(finite$b (sup$a ?v0 )))):named a310 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (less_eq$f ?v0 ?v1 )(less_eq$a (sup$a ?v0 )(sup$a ?v1 )))):named a311 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ ))(=> (member$d ?v0 ?v1 )(less_eq$a ?v0 (sup$a ?v1 )))):named a312 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ )(?v2 N_set$ ))(=> (and (member$d ?v0 ?v1 )(less_eq$a ?v2 ?v0 ))(less_eq$a ?v2 (sup$a ?v1 )))):named a313 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set$ ))(=> (forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v0 )(less_eq$a ?v2 ?v1 )))(less_eq$a (sup$a ?v0 )?v1 ))):named a314 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(=> (forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v0 )(exists ((?v3 N_set$ ))(and (member$d ?v3 ?v1 )(less_eq$a ?v2 ?v3 )))))(less_eq$a (sup$a ?v0 )(sup$a ?v1 )))):named a315 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set$ ))(=> (and (forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v0 )(less_eq$a ?v2 ?v1 )))(forall ((?v2 N_set$ ))(=> (forall ((?v3 N_set$ ))(=> (member$d ?v3 ?v0 )(less_eq$a ?v3 ?v2 )))(less_eq$a ?v1 ?v2 ))))(= (sup$a ?v0 )?v1 ))):named a316 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set$ ))(= (less_eq$a (sup$a ?v0 )?v1 )(forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v0 )(less_eq$a ?v2 ?v1 ))))):named a317 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ ))(=> (member$d ?v0 ?v1 )(less_eq$a ?v0 (sup$a ?v1 )))):named a318 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set$ ))(=> (forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v0 )(less_eq$a ?v2 ?v1 )))(less_eq$a (sup$a ?v0 )?v1 ))):named a319 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set$ ))(=> (and (finite$c ?v0 )(member$d ?v1 ?v0 ))(less_eq$a ?v1 (sup$a ?v0 )))):named a320 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ ))(=> (and (member$d ?v0 ?v1 )(forall ((?v2 N_set$ ))(=> (member$d ?v2 ?v1 )(less_eq$a ?v2 ?v0 ))))(= (sup$a ?v1 )?v0 ))):named a321 ))
(assert (! (forall ((?v0 Dtree_dtree_bool_fun_fun$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (fun_app$g (fun_app$k ?v0 ?v1 )?v2 )(forall ((?v3 Dtree$ )(?v4 Dtree$ ))(=> (fun_app$g (fun_app$k ?v0 ?v3 )?v4 )(and (= (root$ ?v3 )(root$ ?v4 ))(fun_app$as (fun_app$au (rel_fset$ (fun_app$at (rel_sum$ uuy$ )(uuz$ ?v0 )))(ccont$ ?v3 ))(ccont$ ?v4 ))))))(= ?v1 ?v2 ))):named a322 ))
(assert (! (forall ((?v0 Dtree_dtree_bool_fun_fun$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (fun_app$g (fun_app$k ?v0 ?v1 )?v2 )(forall ((?v3 Dtree$ )(?v4 Dtree$ ))(=> (fun_app$g (fun_app$k ?v0 ?v3 )?v4 )(and (= (root$ ?v3 )(root$ ?v4 ))(fun_app$as (fun_app$au (rel_fset$ (fun_app$at (rel_sum$ uuy$ )?v0 ))(ccont$ ?v3 ))(ccont$ ?v4 ))))))(= ?v1 ?v2 ))):named a323 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_bool_fun_fun$ )(?v1 Dtree$ )(?v2 Dtree$ ))(= (rel_set$ ?v0 (cont$ ?v1 )(cont$ ?v2 ))(fun_app$as (fun_app$au (rel_fset$ ?v0 )(ccont$ ?v1 ))(ccont$ ?v2 )))):named a324 ))
(assert (! (forall ((?v0 Dtree_dtree_bool_fun_fun$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (fun_app$g (fun_app$k ?v0 ?v1 )?v2 )(forall ((?v3 Dtree$ )(?v4 Dtree$ ))(=> (fun_app$g (fun_app$k ?v0 ?v3 )?v4 )(and (= (root$ ?v3 )(root$ ?v4 ))(rel_set$ (fun_app$at (rel_sum$ uuy$ )?v0 )(cont$ ?v3 )(cont$ ?v4 ))))))(= ?v1 ?v2 ))):named a325 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_bool_fun_fun$ )(?v1 T_dtree_sum_T_dtree_sum_bool_fun_fun$ )(?v2 T_dtree_sum_T_dtree_sum_sum_set$ )(?v3 T_dtree_sum_T_dtree_sum_sum_set$ ))(= (rel_set$a (fun_app$av (rel_sum$a ?v0 )?v1 )?v2 ?v3 )(and (rel_set$ ?v0 (vimage$ uva$ ?v2 )(vimage$ uva$ ?v3 ))(rel_set$ ?v1 (vimage$ uvb$ ?v2 )(vimage$ uvb$ ?v3 ))))):named a326 ))
(assert (! (forall ((?v0 T_T_bool_fun_fun$ )(?v1 Dtree_dtree_bool_fun_fun$ )(?v2 T_dtree_sum_set$ )(?v3 T_dtree_sum_set$ ))(= (rel_set$ (fun_app$at (rel_sum$ ?v0 )?v1 )?v2 ?v3 )(and (rel_set$b ?v0 (vimage$a uvc$ ?v2 )(vimage$a uvc$ ?v3 ))(rel_set$c ?v1 (vimage$b uvd$ ?v2 )(vimage$b uvd$ ?v3 ))))):named a327 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(= (member$f ?v0 (fun_app$ar (vimage$c ?v1 )?v2 ))(member$f (fun_app$aw ?v1 ?v0 )?v2 ))):named a328 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$f ?v0 (vimage$d ?v1 ?v2 ))(member$ (fun_app$ax ?v1 ?v0 )?v2 ))):named a329 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(= (member$ ?v0 (vimage$e ?v1 ?v2 ))(member$f (fun_app$ay ?v1 ?v0 )?v2 ))):named a330 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$f ?v1 ?v2 ))(member$ (fun_app$az ?v1 ?v0 )?v2 ))):named a331 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$aw ?v0 ?v1 )?v2 )(member$f ?v2 ?v3 ))(member$f ?v1 (fun_app$ar (vimage$c ?v0 )?v3 )))):named a332 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N$ )(?v3 N_set$ ))(=> (and (= (fun_app$ay ?v0 ?v1 )?v2 )(member$f ?v2 ?v3 ))(member$ ?v1 (vimage$e ?v0 ?v3 )))):named a333 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$ax ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$f ?v1 (vimage$d ?v0 ?v3 )))):named a334 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$az ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (vimage$f ?v0 ?v3 )))):named a335 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ ))(= (vimage$g ?v0 (collect$ ?v1 ))(collect$ (fun_app$m (uve$ ?v0 )?v1 )))):named a336 ))
(assert (! (forall ((?v0 T_N_fun$ )(?v1 N_set$ ))(= (vimage$h ?v0 ?v1 )(collect$ (fun_app$p (uvf$ ?v0 )?v1 )))):named a337 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$a ?v0 ?v1 )(collect$ (fun_app$o (uvg$ ?v0 )?v1 )))):named a338 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ )(?v2 N_N_fun$ ))(=> (less_eq$a ?v0 ?v1 )(less_eq$a (fun_app$ar (vimage$c ?v2 )?v0 )(fun_app$ar (vimage$c ?v2 )?v1 )))):named a339 ))
(assert (! (forall ((?v0 T_bool_fun$ )(?v1 T_T_fun$ )(?v2 T_bool_fun$ ))(=> (forall ((?v3 T$ ))(= (fun_app$h ?v0 (fun_app$r ?v1 ?v3 ))(fun_app$h ?v2 ?v3 )))(= (vimage$g ?v1 (collect$ ?v0 ))(collect$ ?v2 )))):named a340 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (and (member$f ?v0 (fun_app$ar (vimage$c ?v1 )?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$aw ?v1 ?v0 )?v3 )(member$f ?v3 ?v2 ))false )))false )):named a341 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$f ?v0 (vimage$d ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$ax ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a342 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (and (member$ ?v0 (vimage$e ?v1 ?v2 ))(forall ((?v3 N$ ))(=> (and (= (fun_app$ay ?v1 ?v0 )?v3 )(member$f ?v3 ?v2 ))false )))false )):named a343 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (and (member$ ?v0 (vimage$f ?v1 ?v2 ))(forall ((?v3 T_dtree_sum$ ))(=> (and (= (fun_app$az ?v1 ?v0 )?v3 )(member$ ?v3 ?v2 ))false )))false )):named a344 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 N_set$ ))(=> (member$f ?v0 (fun_app$ar (vimage$c ?v1 )?v2 ))(member$f (fun_app$aw ?v1 ?v0 )?v2 ))):named a345 ))
(assert (! (forall ((?v0 N$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$f ?v0 (vimage$d ?v1 ?v2 ))(member$ (fun_app$ax ?v1 ?v0 )?v2 ))):named a346 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_fun$ )(?v2 N_set$ ))(=> (member$ ?v0 (vimage$e ?v1 ?v2 ))(member$f (fun_app$ay ?v1 ?v0 )?v2 ))):named a347 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$ ?v0 (vimage$f ?v1 ?v2 ))(member$ (fun_app$az ?v1 ?v0 )?v2 ))):named a348 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 N$ )(?v2 N_set$ ))(=> (member$f (fun_app$aw ?v0 ?v1 )?v2 )(member$f ?v1 (fun_app$ar (vimage$c ?v0 )?v2 )))):named a349 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_dtree_sum$ )(?v2 N_set$ ))(=> (member$f (fun_app$ay ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$e ?v0 ?v2 )))):named a350 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 N$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$ax ?v0 ?v1 )?v2 )(member$f ?v1 (vimage$d ?v0 ?v2 )))):named a351 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum_set$ ))(=> (member$ (fun_app$az ?v0 ?v1 )?v2 )(member$ ?v1 (vimage$f ?v0 ?v2 )))):named a352 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (= (vimage$a uvc$ ?v0 )(vimage$a uvc$ ?v1 ))(= (vimage$b uvd$ ?v0 )(vimage$b uvd$ ?v1 )))(= ?v0 ?v1 ))):named a353 ))
(check-sat )
;(get-unsat-core )
