;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort N_set_set$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort N_set_set_set$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort T_T_N_sum_fun$ 0 )
(declare-sort T_set_set_set$ 0 )
(declare-sort N_set_bool_fun$ 0 )
(declare-sort T_set_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort N_T_dtree_sum_fun$ 0 )
(declare-sort N_set_set_set_set$ 0 )
(declare-sort T_N_sum_dtree_fun$ 0 )
(declare-sort T_T_N_sum_sum_set$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_set_set_set_set$ 0 )
(declare-sort N_set_set_bool_fun$ 0 )
(declare-sort T_set_set_bool_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_T_N_sum_sum_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_N_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_N_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort T_N_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_T_dtree_sum_sum$ 0)
(declare-sort T_T_N_sum_sum$ 0)
(declare-fun projl$ (T_N_sum$)T$)
(declare-fun inl$ (T$ )T_N_sum$)
(declare-fun projr$ (T_N_sum$)N$)
(declare-fun inr$ (N$ )T_N_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun projl$b (T_T_dtree_sum_sum$)T$)
(declare-fun inl$b (T$ )T_T_dtree_sum_sum$)
(declare-fun projr$b (T_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inr$b (T_dtree_sum$ )T_T_dtree_sum_sum$)
(declare-fun projl$c (T_T_N_sum_sum$)T$)
(declare-fun inl$c (T$ )T_T_N_sum_sum$)
(declare-fun projr$c (T_T_N_sum_sum$)T_N_sum$)
(declare-fun inr$c (T_N_sum$ )T_T_N_sum_sum$)
(declare-fun k$ (N$ )T_set$ )
(declare-fun n$ ()N$ )
(declare-fun fr$ (N_set$ Dtree$ )T_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun ns$ ()N_set$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()T_T_N_sum_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun bot$ ()N_set$ )
(declare-fun ftr$ ()N_dtree_fun$ )
(declare-fun sup$ (T_set$ T_set$ )T_set$ )
(declare-fun tns$ ()T_N_sum_set$ )
(declare-fun tr$a ()Dtree$ )
(declare-fun uua$ ()T_set_bool_fun$ )
(declare-fun uub$ ()T_set_bool_fun$ )
(declare-fun uuc$ ()N_T_N_sum_fun$ )
(declare-fun uud$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun uue$ ()T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun uuf$ ()T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun uug$ ()T_T_dtree_sum_fun$ )
(declare-fun uuh$ ()T_T_T_dtree_sum_sum_fun$ )
(declare-fun uui$ ()T_T_T_N_sum_sum_fun$ )
(declare-fun uuj$ (N_set_set$ )N_set_set_bool_fun$ )
(declare-fun uuk$ (T_set_set$ )T_set_set_bool_fun$ )
(declare-fun uul$ (T$ )T_bool_fun$ )
(declare-fun uum$ (N_set$ )N_set_bool_fun$ )
(declare-fun uun$ (T_set$ )T_set_bool_fun$ )
(declare-fun uuo$ (N$ )N_bool_fun$ )
(declare-fun bot$a ()N_set_set_set$ )
(declare-fun bot$b ()T_set_set_set$ )
(declare-fun bot$c ()N_set_set$ )
(declare-fun bot$d ()T_set_set$ )
(declare-fun bot$e ()T_set$ )
(declare-fun bot$f ()N_set_set_set_set$ )
(declare-fun bot$g ()T_set_set_set_set$ )
(declare-fun node$ (N$ T_dtree_sum_set$ )Dtree$ )
(declare-fun root$ (Dtree$ )N$ )
(declare-fun sup$a (T_set_set$ )T_set$ )
(declare-fun sup$b (N_set_set_set$ )N_set_set$ )
(declare-fun sup$c (N_set_set$ N_set_set$ )N_set_set$ )
(declare-fun sup$d (T_set_set_set$ )T_set_set$ )
(declare-fun sup$e (T_set_set$ T_set_set$ )T_set_set$ )
(declare-fun sup$f (N_set_set$ )N_set$ )
(declare-fun sup$g (N_set$ N_set$ )N_set$ )
(declare-fun sup$h (N_set_set_set_set$ )N_set_set_set$ )
(declare-fun sup$i (T_set_set_set_set$ )T_set_set_set$ )
(declare-fun image$ (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun minus$ (N_set$ N_set$ )N_set$ )
(declare-fun hsubst$ (Dtree$ )Dtree_dtree_fun$ )
(declare-fun image$a (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$b (N_N_fun$ N_set$ )N_set$ )
(declare-fun image$c (N_dtree_fun$ N_set$ )Dtree_set$ )
(declare-fun image$d (T_T_N_sum_sum_T_T_dtree_sum_sum_fun$ T_T_N_sum_sum_set$ )T_T_dtree_sum_sum_set$ )
(declare-fun image$e (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun image$f (Dtree_N_fun$ Dtree_set$ )N_set$ )
(declare-fun image$g (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$h (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun image$i (T_T_dtree_sum_sum_T_N_sum_fun$ T_T_dtree_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$j (T_dtree_sum_N_fun$ T_dtree_sum_set$ )N_set$ )
(declare-fun image$k (T_T_N_sum_sum_T_N_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$l (T_N_sum_N_fun$ T_N_sum_set$ )N_set$ )
(declare-fun image$m (T_T_dtree_sum_sum_T_dtree_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$n (T_dtree_sum_dtree_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun image$o (T_T_N_sum_sum_T_dtree_sum_fun$ T_T_N_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$p (T_N_sum_dtree_fun$ T_N_sum_set$ )Dtree_set$ )
(declare-fun image$q (T_N_sum_T_T_dtree_sum_sum_fun$ T_N_sum_set$ )T_T_dtree_sum_sum_set$ )
(declare-fun image$r (N_T_dtree_sum_fun$ N_set$ )T_dtree_sum_set$ )
(declare-fun image$s (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum_set$ )T_T_dtree_sum_sum_set$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun minus$a (N_set_set_set$ N_set_set_set$ )N_set_set_set$ )
(declare-fun minus$b (T_set_set_set$ T_set_set_set$ )T_set_set_set$ )
(declare-fun minus$c (T_set_set$ T_set_set$ )T_set_set$ )
(declare-fun minus$d (T_set$ T_set$ )T_set$ )
(declare-fun minus$e (N_set_set$ N_set_set$ )N_set_set$ )
(declare-fun vimage$ (T_T_N_sum_fun$ T_N_sum_set$ )T_set$ )
(declare-fun collect$ (T_set_bool_fun$ )T_set_set$ )
(declare-fun fun_app$ (T_set_bool_fun$ T_set$ )Bool )
(declare-fun insert$a (N_set_set$ N_set_set_set$ )N_set_set_set$ )
(declare-fun insert$b (T_set_set$ T_set_set_set$ )T_set_set_set$ )
(declare-fun insert$c (N_set$ N_set_set$ )N_set_set$ )
(declare-fun insert$d (T_set$ T_set_set$ )T_set_set$ )
(declare-fun insert$e (T$ T_set$ )T_set$ )
(declare-fun map_sum$ (T_T_fun$ )N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ )
(declare-fun member$a (N$ N_set$ )Bool )
(declare-fun member$b (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$c (T_T_dtree_sum_sum$ T_T_dtree_sum_sum_set$ )Bool )
(declare-fun member$d (T_T_N_sum_sum$ T_T_N_sum_sum_set$ )Bool )
(declare-fun vimage$a (N_T_N_sum_fun$ T_N_sum_set$ )N_set$ )
(declare-fun vimage$b (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun vimage$c (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$d (T_N_sum_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun vimage$e (T_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun vimage$f (T_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_set$ )
(declare-fun vimage$g (T_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_set$ )
(declare-fun collect$a (N_set_set_bool_fun$ )N_set_set_set$ )
(declare-fun collect$b (T_set_set_bool_fun$ )T_set_set_set$ )
(declare-fun collect$c (T_bool_fun$ )T_set$ )
(declare-fun collect$d (N_set_bool_fun$ )N_set_set$ )
(declare-fun collect$e (N_bool_fun$ )N_set$ )
(declare-fun fun_app$a (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$b (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum$ )T_T_dtree_sum_sum$ )
(declare-fun fun_app$c (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum$ )T_T_N_sum_sum$ )
(declare-fun fun_app$d (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$e (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$f (T_T_T_dtree_sum_sum_fun$ T$ )T_T_dtree_sum_sum$ )
(declare-fun fun_app$g (T_T_T_N_sum_sum_fun$ T$ )T_T_N_sum_sum$ )
(declare-fun fun_app$h (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun fun_app$i (T_T_N_sum_fun$ T$ )T_N_sum$ )
(declare-fun fun_app$j (T_set_set_bool_fun$ T_set_set$ )Bool )
(declare-fun fun_app$k (N_set_set_bool_fun$ N_set_set$ )Bool )
(declare-fun fun_app$l (N_set_bool_fun$ N_set$ )Bool )
(declare-fun fun_app$m (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$n (N_bool_fun$ N$ )Bool )
(declare-fun fun_app$o (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$p (N_dtree_fun_T_N_sum_T_dtree_sum_fun_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$q (N_N_fun$ N$ )N$ )
(declare-fun fun_app$r (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$s (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$t (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$u (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$v (T_N_sum_dtree_fun$ T_N_sum$ )Dtree$ )
(declare-fun fun_app$w (N_T_dtree_sum_fun$ N$ )T_dtree_sum$ )
(declare-fun map_sum$a (T_T_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun map_sum$b (T_T_fun$ T_N_sum_T_dtree_sum_fun$ )T_T_N_sum_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun map_sum$c (T_T_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun map_sum$d (T_T_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$e (T_T_fun$ T_dtree_sum_N_fun$ )T_T_dtree_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$f (T_T_fun$ T_N_sum_N_fun$ )T_T_N_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$g (T_T_fun$ T_dtree_sum_dtree_fun$ )T_T_dtree_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$h (T_T_fun$ T_N_sum_dtree_fun$ )T_T_N_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$i (T_T_fun$ N_T_dtree_sum_fun$ )T_N_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun map_sum$j (T_T_fun$ Dtree_T_dtree_sum_fun$ )T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$ uua$ ?v0 )(exists ((?v1 N$ ))(and (= ?v0 (fr$ (minus$ ns$ (insert$ n$ bot$ ))(fun_app$a ftr$ ?v1 )))(member$ (inr$ ?v1 )tns$ )))):pattern ((fun_app$ uua$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T_set$ ))(! (= (fun_app$ uub$ ?v0 )(exists ((?v1 N$ ))(and (= ?v0 (k$ ?v1 ))(member$ (inr$ ?v1 )tns$ )))):pattern ((fun_app$ uub$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$b uue$ ?v0 )(inr$b ?v0 )):pattern ((fun_app$b uue$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 T_N_sum$ ))(! (= (fun_app$c uuf$ ?v0 )(inr$c ?v0 )):pattern ((fun_app$c uuf$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$d uud$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$d uud$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$e uuc$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$e uuc$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$f uuh$ ?v0 )(inl$b ?v0 )):pattern ((fun_app$f uuh$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$g uui$ ?v0 )(inl$c ?v0 )):pattern ((fun_app$g uui$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$h uug$ ?v0 )(inl$a ?v0 )):pattern ((fun_app$h uug$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$i uu$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$i uu$ ?v0 )))):named a9 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set$ ))(! (= (fun_app$j (uuk$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$j (uuk$ ?v0 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set$ ))(! (= (fun_app$k (uuj$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$k (uuj$ ?v0 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(! (= (fun_app$ (uun$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (uun$ ?v0 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(! (= (fun_app$l (uum$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$l (uum$ ?v0 )?v1 )))):named a13 ))
(assert (! (forall ((?v0 T$ )(?v1 T$ ))(! (= (fun_app$m (uul$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$m (uul$ ?v0 )?v1 )))):named a14 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(! (= (fun_app$n (uuo$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$n (uuo$ ?v0 )?v1 )))):named a15 ))
(assert (! (not (= (sup$ (vimage$ uu$ tns$ )(sup$a (collect$ uua$ )))(fr$ ns$ (fun_app$o (hsubst$ (node$ n$ (image$ (fun_app$p (map_sum$ id$ )ftr$ )tns$ )))(node$ n$ (image$ (fun_app$p (map_sum$ id$ )ftr$ )tns$ )))))):named a16 ))
(assert (! (member$a n$ ns$ ):named a17 ))
(assert (! (forall ((?v0 N$ ))(=> (member$ (inr$ ?v0 )tns$ )(and (= (k$ ?v0 )(fr$ (minus$ ns$ (insert$ n$ bot$ ))(fun_app$a ftr$ ?v0 )))(and (wf$ (fun_app$a ftr$ ?v0 ))(= (root$ (fun_app$a ftr$ ?v0 ))?v0 ))))):named a18 ))
(assert (! (= tr$ (fun_app$o (hsubst$ tr$a )tr$a )):named a19 ))
(assert (! (= tr$a (node$ n$ (image$ (fun_app$p (map_sum$ id$ )ftr$ )tns$ ))):named a20 ))
(assert (! (= (collect$ uub$ )(collect$ uua$ )):named a21 ))
(assert (! (wf$ tr$ ):named a22 ))
(assert (! (=> (forall ((?v0 N_dtree_fun$ ))(=> (forall ((?v1 N$ ))(=> (member$ (inr$ ?v1 )tns$ )(and (= (k$ ?v1 )(fr$ (minus$ ns$ (insert$ n$ bot$ ))(fun_app$a ?v0 ?v1 )))(and (wf$ (fun_app$a ?v0 ?v1 ))(= (root$ (fun_app$a ?v0 ?v1 ))?v1 )))))false ))false ):named a23 ))
(assert (! (forall ((?v0 N$ ))(=> (member$ (inr$ ?v0 )tns$ )(exists ((?v1 Dtree$ ))(and (= (k$ ?v0 )(fr$ (minus$ ns$ (insert$ n$ bot$ ))?v1 ))(and (wf$ ?v1 )(= (root$ ?v1 )?v0 )))))):named a24 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$a uuc$ (image$a (map_sum$a id$ ?v0 )?v1 ))(image$b ?v0 (vimage$a uuc$ ?v1 )))):named a25 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$b uud$ (image$ (fun_app$p (map_sum$ id$ )?v0 )?v1 ))(image$c ?v0 (vimage$a uuc$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$c uue$ (image$d (map_sum$b id$ ?v0 )?v1 ))(image$ ?v0 (vimage$d uuf$ ?v1 )))):named a27 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$a uuc$ (image$e (map_sum$c id$ ?v0 )?v1 ))(image$f ?v0 (vimage$b uud$ ?v1 )))):named a28 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$b uud$ (image$g (map_sum$d id$ ?v0 )?v1 ))(image$h ?v0 (vimage$b uud$ ?v1 )))):named a29 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$a uuc$ (image$i (map_sum$e id$ ?v0 )?v1 ))(image$j ?v0 (vimage$c uue$ ?v1 )))):named a30 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$a uuc$ (image$k (map_sum$f id$ ?v0 )?v1 ))(image$l ?v0 (vimage$d uuf$ ?v1 )))):named a31 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$b uud$ (image$m (map_sum$g id$ ?v0 )?v1 ))(image$n ?v0 (vimage$c uue$ ?v1 )))):named a32 ))
(assert (! (forall ((?v0 T_N_sum_dtree_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$b uud$ (image$o (map_sum$h id$ ?v0 )?v1 ))(image$p ?v0 (vimage$d uuf$ ?v1 )))):named a33 ))
(assert (! (forall ((?v0 N_T_dtree_sum_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$c uue$ (image$q (map_sum$i id$ ?v0 )?v1 ))(image$r ?v0 (vimage$a uuc$ ?v1 )))):named a34 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$ uu$ (image$a (map_sum$a id$ ?v0 )?v1 ))(vimage$ uu$ ?v1 ))):named a35 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$e uug$ (image$ (fun_app$p (map_sum$ id$ )?v0 )?v1 ))(vimage$ uu$ ?v1 ))):named a36 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$ uu$ (image$e (map_sum$c id$ ?v0 )?v1 ))(vimage$e uug$ ?v1 ))):named a37 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$e uug$ (image$g (map_sum$d id$ ?v0 )?v1 ))(vimage$e uug$ ?v1 ))):named a38 ))
(assert (! (forall ((?v0 T_N_sum_T_dtree_sum_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$f uuh$ (image$d (map_sum$b id$ ?v0 )?v1 ))(vimage$g uui$ ?v1 ))):named a39 ))
(assert (! (forall ((?v0 T_dtree_sum_N_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$ uu$ (image$i (map_sum$e id$ ?v0 )?v1 ))(vimage$f uuh$ ?v1 ))):named a40 ))
(assert (! (forall ((?v0 T_N_sum_N_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$ uu$ (image$k (map_sum$f id$ ?v0 )?v1 ))(vimage$g uui$ ?v1 ))):named a41 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$e uug$ (image$m (map_sum$g id$ ?v0 )?v1 ))(vimage$f uuh$ ?v1 ))):named a42 ))
(assert (! (forall ((?v0 T_N_sum_dtree_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$e uug$ (image$o (map_sum$h id$ ?v0 )?v1 ))(vimage$g uui$ ?v1 ))):named a43 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$f uuh$ (image$s (map_sum$j id$ ?v0 )?v1 ))(vimage$e uug$ ?v1 ))):named a44 ))
(assert (! (forall ((?v0 T$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$ (inl$ ?v0 )(image$a (map_sum$a id$ ?v1 )?v2 ))(member$ (inl$ ?v0 )?v2 ))):named a45 ))
(assert (! (forall ((?v0 T$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$b (inl$a ?v0 )(image$ (fun_app$p (map_sum$ id$ )?v1 )?v2 ))(member$ (inl$ ?v0 )?v2 ))):named a46 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ (inl$ ?v0 )(image$e (map_sum$c id$ ?v1 )?v2 ))(member$b (inl$a ?v0 )?v2 ))):named a47 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b (inl$a ?v0 )(image$g (map_sum$d id$ ?v1 )?v2 ))(member$b (inl$a ?v0 )?v2 ))):named a48 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_sum_T_dtree_sum_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$c (inl$b ?v0 )(image$d (map_sum$b id$ ?v1 )?v2 ))(member$d (inl$c ?v0 )?v2 ))):named a49 ))
(assert (! (forall ((?v0 T$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$ (inl$ ?v0 )(image$i (map_sum$e id$ ?v1 )?v2 ))(member$c (inl$b ?v0 )?v2 ))):named a50 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$ (inl$ ?v0 )(image$k (map_sum$f id$ ?v1 )?v2 ))(member$d (inl$c ?v0 )?v2 ))):named a51 ))
(assert (! (forall ((?v0 T$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$b (inl$a ?v0 )(image$m (map_sum$g id$ ?v1 )?v2 ))(member$c (inl$b ?v0 )?v2 ))):named a52 ))
(assert (! (forall ((?v0 T$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$b (inl$a ?v0 )(image$o (map_sum$h id$ ?v1 )?v2 ))(member$d (inl$c ?v0 )?v2 ))):named a53 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c (inl$b ?v0 )(image$s (map_sum$j id$ ?v1 )?v2 ))(member$b (inl$a ?v0 )?v2 ))):named a54 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$ (inr$ ?v0 )(image$a (map_sum$a id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$q ?v1 ?v3 )?v0 ))))):named a55 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$b (inr$a ?v0 )(image$ (fun_app$p (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$a ?v1 ?v3 )?v0 ))))):named a56 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ (inr$ ?v0 )(image$e (map_sum$c id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$r ?v1 ?v3 )?v0 ))))):named a57 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b (inr$a ?v0 )(image$g (map_sum$d id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$o ?v1 ?v3 )?v0 ))))):named a58 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$ (inr$ ?v0 )(image$i (map_sum$e id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$c (inr$b ?v3 )?v2 )(= (fun_app$s ?v1 ?v3 )?v0 ))))):named a59 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$ (inr$ ?v0 )(image$k (map_sum$f id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$c ?v3 )?v2 )(= (fun_app$t ?v1 ?v3 )?v0 ))))):named a60 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$b (inr$a ?v0 )(image$m (map_sum$g id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$c (inr$b ?v3 )?v2 )(= (fun_app$u ?v1 ?v3 )?v0 ))))):named a61 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$b (inr$a ?v0 )(image$o (map_sum$h id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$c ?v3 )?v2 )(= (fun_app$v ?v1 ?v3 )?v0 ))))):named a62 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_dtree_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$c (inr$b ?v0 )(image$q (map_sum$i id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$ (inr$ ?v3 )?v2 )(= (fun_app$w ?v1 ?v3 )?v0 ))))):named a63 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c (inr$b ?v0 )(image$s (map_sum$j id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b (inr$a ?v3 )?v2 )(= (fun_app$d ?v1 ?v3 )?v0 ))))):named a64 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set_set$ ))(= (sup$b (insert$a ?v0 ?v1 ))(sup$c ?v0 (sup$b ?v1 )))):named a65 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set$ ))(= (sup$d (insert$b ?v0 ?v1 ))(sup$e ?v0 (sup$d ?v1 )))):named a66 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ ))(= (sup$f (insert$c ?v0 ?v1 ))(sup$g ?v0 (sup$f ?v1 )))):named a67 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ ))(= (sup$a (insert$d ?v0 ?v1 ))(sup$ ?v0 (sup$a ?v1 )))):named a68 ))
(assert (! (forall ((?v0 N_set_set$ ))(= (sup$b (insert$a ?v0 bot$a ))?v0 )):named a69 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (sup$d (insert$b ?v0 bot$b ))?v0 )):named a70 ))
(assert (! (forall ((?v0 N_set$ ))(= (sup$f (insert$c ?v0 bot$c ))?v0 )):named a71 ))
(assert (! (forall ((?v0 T_set$ ))(= (sup$a (insert$d ?v0 bot$d ))?v0 )):named a72 ))
(assert (! (forall ((?v0 N_set_set$ )(?v1 N_set_set_set$ ))(= (insert$a ?v0 (minus$a ?v1 (insert$a ?v0 bot$a )))(insert$a ?v0 ?v1 ))):named a73 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set_set_set$ ))(= (insert$b ?v0 (minus$b ?v1 (insert$b ?v0 bot$b )))(insert$b ?v0 ?v1 ))):named a74 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ ))(= (insert$d ?v0 (minus$c ?v1 (insert$d ?v0 bot$d )))(insert$d ?v0 ?v1 ))):named a75 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ ))(= (insert$e ?v0 (minus$d ?v1 (insert$e ?v0 bot$e )))(insert$e ?v0 ?v1 ))):named a76 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set_set$ ))(= (insert$c ?v0 (minus$e ?v1 (insert$c ?v0 bot$c )))(insert$c ?v0 ?v1 ))):named a77 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(= (insert$ ?v0 (minus$ ?v1 (insert$ ?v0 bot$ )))(insert$ ?v0 ?v1 ))):named a78 ))
(assert (! (= (sup$h bot$f )bot$a ):named a79 ))
(assert (! (= (sup$i bot$g )bot$b ):named a80 ))
(assert (! (= (sup$d bot$b )bot$d ):named a81 ))
(assert (! (= (sup$b bot$a )bot$c ):named a82 ))
(assert (! (= (sup$f bot$c )bot$ ):named a83 ))
(assert (! (= (sup$a bot$d )bot$e ):named a84 ))
(assert (! (forall ((?v0 N_set_set$ ))(= (collect$a (uuj$ ?v0 ))(insert$a ?v0 bot$a ))):named a85 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (collect$b (uuk$ ?v0 ))(insert$b ?v0 bot$b ))):named a86 ))
(assert (! (forall ((?v0 T$ ))(= (collect$c (uul$ ?v0 ))(insert$e ?v0 bot$e ))):named a87 ))
(assert (! (forall ((?v0 N_set$ ))(= (collect$d (uum$ ?v0 ))(insert$c ?v0 bot$c ))):named a88 ))
(assert (! (forall ((?v0 T_set$ ))(= (collect$ (uun$ ?v0 ))(insert$d ?v0 bot$d ))):named a89 ))
(assert (! (forall ((?v0 N$ ))(= (collect$e (uuo$ ?v0 ))(insert$ ?v0 bot$ ))):named a90 ))
(check-sat )
;(get-unsat-core )
