;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort Nat$ 0 )
(declare-sort N_set$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort N_list$ 0)
(declare-fun nil$ ()N_list$)
(declare-fun hd$ (N_list$)N$)
(declare-fun tl$ (N_list$)N_list$)
(declare-fun cons$ (N$ N_list$ )N_list$)
(declare-fun f$ ()N_dtree_fun$ )
(declare-fun n$ ()N$ )
(declare-fun nl$ ()N_list$ )
(declare-fun bot$ ()N_set$ )
(declare-fun nl1$ ()N_list$ )
(declare-fun nla$ ()N_list$ )
(declare-fun set$ (N_list$ )N_set$ )
(declare-fun sup$ (N_set$ N_set$ )N_set$ )
(declare-fun last$ (N_list$ )N$ )
(declare-fun less$ (Nat$ Nat$ )Bool )
(declare-fun nl12$ ()N_list$ )
(declare-fun path$ (N_dtree_fun$ N_list$ )Bool )
(declare-fun size$ (N_list$ )Nat$ )
(declare-fun nl12$a ()N_list$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (N$ N_set$ )Bool )
(declare-fun less_eq$ (N_set$ N_set$ )Bool )
(declare-fun distinct$ (N_list$ )Bool )
(assert (! (not (exists ((?v0 N_list$ ))(and (path$ f$ ?v0 )(and (= (hd$ ?v0 )(hd$ nla$ ))(and (= (last$ ?v0 )(last$ nla$ ))(and (less_eq$ (set$ ?v0 )(set$ nla$ ))(distinct$ ?v0 ))))))):named a0 ))
(assert (! (distinct$ nl12$ ):named a1 ))
(assert (! (= (hd$ nl12$ )n$ ):named a2 ))
(assert (! (= (last$ nl12$ )(last$ (cons$ n$ nl12$a ))):named a3 ))
(assert (! (path$ f$ nl12$ ):named a4 ))
(assert (! (path$ f$ nl$ ):named a5 ))
(assert (! (path$ f$ nla$ ):named a6 ))
(assert (! (member$ n$ (set$ nl1$ )):named a7 ))
(assert (! (=> (forall ((?v0 N$ )(?v1 N_list$ ))(=> (= nla$ (cons$ ?v0 ?v1 ))false ))false ):named a8 ))
(assert (! (less_eq$ (set$ nl12$ )(sup$ (insert$ n$ bot$ )(set$ nl12$a ))):named a9 ))
(assert (! (path$ f$ nla$ ):named a10 ))
(assert (! (= nla$ (cons$ n$ nl1$ )):named a11 ))
(assert (! (path$ f$ (cons$ n$ nl12$a )):named a12 ))
(assert (! (path$ f$ nl1$ ):named a13 ))
(assert (! (forall ((?v0 N_list$ ))(=> (and (less$ (size$ ?v0 )(size$ nla$ ))(path$ f$ ?v0 ))(exists ((?v1 N_list$ ))(and (path$ f$ ?v1 )(and (= (hd$ ?v1 )(hd$ ?v0 ))(and (= (last$ ?v1 )(last$ ?v0 ))(and (less_eq$ (set$ ?v1 )(set$ ?v0 ))(distinct$ ?v1 )))))))):named a14 ))
(assert (! (=> (forall ((?v0 N_list$ ))(=> (and (path$ f$ ?v0 )(and (= (hd$ ?v0 )n$ )(and (= (last$ ?v0 )(last$ (cons$ n$ nl12$a )))(and (distinct$ ?v0 )(less_eq$ (set$ ?v0 )(sup$ (insert$ n$ bot$ )(set$ nl12$a )))))))false ))false ):named a15 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (forall ((?v2 N$ ))(=> (member$ ?v2 ?v0 )(member$ ?v2 ?v1 )))(less_eq$ ?v0 ?v1 ))):named a16 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N_set$ ))(=> (and (less_eq$ ?v0 ?v1 )(less_eq$ ?v1 ?v0 ))(= ?v0 ?v1 ))):named a17 ))
(check-sat )
;(get-unsat-core )
