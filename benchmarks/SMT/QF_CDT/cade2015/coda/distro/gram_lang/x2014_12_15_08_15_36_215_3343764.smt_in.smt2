;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort T_set_set$ 0 )
(declare-sort N_bool_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_set_bool_fun$ 0 )
(declare-sort N_set_N_set_fun$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_bool_fun$ 0 )
(declare-sort T_N_sum_set_T_N_sum_set_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ 0 )
(declare-sort T_N_sum$ 0)
(declare-sort N_T_N_sum_set_prod$ 0)
(declare-fun projl$ (T_N_sum$)T$)
(declare-fun inl$ (T$ )T_N_sum$)
(declare-fun projr$ (T_N_sum$)N$)
(declare-fun inr$ (N$ )T_N_sum$)
(declare-fun fst$ (N_T_N_sum_set_prod$)N$)
(declare-fun snd$ (N_T_N_sum_set_prod$)T_N_sum_set$)
(declare-fun pair$ (N$ T_N_sum_set$ )N_T_N_sum_set_prod$)
(declare-fun k$ (N$ )T_set$ )
(declare-fun l$ (N_set$ N$ )T_set_set$ )
(declare-fun n$ ()N$ )
(declare-fun p$ ()N_T_N_sum_set_prod_set$ )
(declare-fun fr$ (N_set$ Dtree$ )T_set$ )
(declare-fun ns$ ()N_set$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun bot$ ()N_set$ )
(declare-fun tns$ ()T_N_sum_set$ )
(declare-fun bot$a ()N_T_N_sum_set_prod_set$ )
(declare-fun bot$b ()T_set_set$ )
(declare-fun bot$c ()T_N_sum_set$ )
(declare-fun root$ (Dtree$ )N$ )
(declare-fun minus$ (N_set$ )N_set_N_set_fun$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun minus$a (N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ )
(declare-fun minus$b (T_set_set$ )T_set_set_T_set_set_fun$ )
(declare-fun minus$c (T_N_sum_set$ )T_N_sum_set_T_N_sum_set_fun$ )
(declare-fun thesis$ ()Bool )
(declare-fun collect$ (N_T_N_sum_set_prod_bool_fun$ )N_T_N_sum_set_prod_set$ )
(declare-fun fun_app$ (N_set_N_set_fun$ N_set$ )N_set$ )
(declare-fun insert$a (N_T_N_sum_set_prod$ N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun insert$b (T_set$ T_set_set$ )T_set_set$ )
(declare-fun insert$c (T_N_sum$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun member$a (N$ N_set$ )Bool )
(declare-fun member$b (T_set$ T_set_set$ )Bool )
(declare-fun member$c (N_T_N_sum_set_prod$ N_T_N_sum_set_prod_set$ )Bool )
(declare-fun collect$a (T_set_bool_fun$ )T_set_set$ )
(declare-fun collect$b (T_N_sum_bool_fun$ )T_N_sum_set$ )
(declare-fun collect$c (N_bool_fun$ )N_set$ )
(declare-fun fun_app$a (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$b (N_T_N_sum_set_prod_set_N_T_N_sum_set_prod_set_fun$ N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun fun_app$c (T_set_set_T_set_set_fun$ T_set_set$ )T_set_set$ )
(declare-fun fun_app$d (T_N_sum_set_T_N_sum_set_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun fun_app$e (N_T_N_sum_set_prod_bool_fun$ N_T_N_sum_set_prod$ )Bool )
(declare-fun fun_app$f (T_set_bool_fun$ T_set$ )Bool )
(declare-fun fun_app$g (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(declare-fun fun_app$h (N_bool_fun$ N$ )Bool )
(assert (! (not thesis$ ):named a0 ))
(assert (! (forall ((?v0 N_dtree_fun$ ))(=> (forall ((?v1 N$ ))(=> (member$ (inr$ ?v1 )tns$ )(and (= (k$ ?v1 )(fr$ (fun_app$ (minus$ ns$ )(insert$ n$ bot$ ))(fun_app$a ?v0 ?v1 )))(and (wf$ (fun_app$a ?v0 ?v1 ))(= (root$ (fun_app$a ?v0 ?v1 ))?v1 )))))thesis$ )):named a1 ))
(assert (! (member$a n$ ns$ ):named a2 ))
(assert (! (forall ((?v0 N$ ))(=> (member$ (inr$ ?v0 )tns$ )(exists ((?v1 Dtree$ ))(and (= (k$ ?v0 )(fr$ (fun_app$ (minus$ ns$ )(insert$ n$ bot$ ))?v1 ))(and (wf$ ?v1 )(= (root$ ?v1 )?v0 )))))):named a3 ))
(assert (! (forall ((?v0 N$ ))(=> (member$ (inr$ ?v0 )tns$ )(member$b (k$ ?v0 )(l$ (fun_app$ (minus$ ns$ )(insert$ n$ bot$ ))?v0 )))):named a4 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ ))(= (insert$a ?v0 (fun_app$b (minus$a ?v1 )(insert$a ?v0 bot$a )))(insert$a ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ ))(= (insert$b ?v0 (fun_app$c (minus$b ?v1 )(insert$b ?v0 bot$b )))(insert$b ?v0 ?v1 ))):named a6 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ ))(= (insert$c ?v0 (fun_app$d (minus$c ?v1 )(insert$c ?v0 bot$c )))(insert$c ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(= (insert$ ?v0 (fun_app$ (minus$ ?v1 )(insert$ ?v0 bot$ )))(insert$ ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_set$ ))(=> (member$ ?v0 ?v1 )(= (fun_app$d (minus$c (insert$c ?v0 ?v2 ))?v1 )(fun_app$d (minus$c ?v2 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ )(?v2 T_set_set$ ))(=> (member$b ?v0 ?v1 )(= (fun_app$c (minus$b (insert$b ?v0 ?v2 ))?v1 )(fun_app$c (minus$b ?v2 )?v1 )))):named a10 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_set$ ))(=> (member$c ?v0 ?v1 )(= (fun_app$b (minus$a (insert$a ?v0 ?v2 ))?v1 )(fun_app$b (minus$a ?v2 )?v1 )))):named a11 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (member$a ?v0 ?v1 )(= (fun_app$ (minus$ (insert$ ?v0 ?v2 ))?v1 )(fun_app$ (minus$ ?v2 )?v1 )))):named a12 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ )(?v2 T_N_sum_set$ ))(=> (not (member$ ?v0 ?v1 ))(= (fun_app$d (minus$c ?v1 )(insert$c ?v0 ?v2 ))(fun_app$d (minus$c ?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ )(?v2 T_set_set$ ))(=> (not (member$b ?v0 ?v1 ))(= (fun_app$c (minus$b ?v1 )(insert$b ?v0 ?v2 ))(fun_app$c (minus$b ?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_set$ ))(=> (not (member$c ?v0 ?v1 ))(= (fun_app$b (minus$a ?v1 )(insert$a ?v0 ?v2 ))(fun_app$b (minus$a ?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (not (member$a ?v0 ?v1 ))(= (fun_app$ (minus$ ?v1 )(insert$ ?v0 ?v2 ))(fun_app$ (minus$ ?v1 )?v2 )))):named a16 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(= (fun_app$b (minus$a ?v0 )bot$a )?v0 )):named a17 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (fun_app$c (minus$b ?v0 )bot$b )?v0 )):named a18 ))
(assert (! (forall ((?v0 T_N_sum_set$ ))(= (fun_app$d (minus$c ?v0 )bot$c )?v0 )):named a19 ))
(assert (! (forall ((?v0 N_set$ ))(= (fun_app$ (minus$ ?v0 )bot$ )?v0 )):named a20 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(! (= (fun_app$b (minus$a ?v0 )?v0 )bot$a ):pattern ((minus$a ?v0 )))):named a21 ))
(assert (! (forall ((?v0 T_set_set$ ))(! (= (fun_app$c (minus$b ?v0 )?v0 )bot$b ):pattern ((minus$b ?v0 )))):named a22 ))
(assert (! (forall ((?v0 T_N_sum_set$ ))(! (= (fun_app$d (minus$c ?v0 )?v0 )bot$c ):pattern ((minus$c ?v0 )))):named a23 ))
(assert (! (forall ((?v0 N_set$ ))(! (= (fun_app$ (minus$ ?v0 )?v0 )bot$ ):pattern ((minus$ ?v0 )))):named a24 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(= (fun_app$b (minus$a bot$a )?v0 )bot$a )):named a25 ))
(assert (! (forall ((?v0 T_set_set$ ))(= (fun_app$c (minus$b bot$b )?v0 )bot$b )):named a26 ))
(assert (! (forall ((?v0 T_N_sum_set$ ))(= (fun_app$d (minus$c bot$c )?v0 )bot$c )):named a27 ))
(assert (! (forall ((?v0 N_set$ ))(= (fun_app$ (minus$ bot$ )?v0 )bot$ )):named a28 ))
(assert (! (forall ((?v0 T_N_sum$ ))(member$ ?v0 (insert$c ?v0 bot$c ))):named a29 ))
(assert (! (forall ((?v0 T_set$ ))(member$b ?v0 (insert$b ?v0 bot$b ))):named a30 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(member$c ?v0 (insert$a ?v0 bot$a ))):named a31 ))
(assert (! (forall ((?v0 N$ ))(member$a ?v0 (insert$ ?v0 bot$ ))):named a32 ))
(assert (! (member$c (pair$ n$ tns$ )p$ ):named a33 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ )(?v1 N_T_N_sum_set_prod$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (fun_app$b (minus$a ?v0 )(insert$a ?v1 ?v2 ))(fun_app$b (minus$a (fun_app$b (minus$a ?v0 )(insert$a ?v1 bot$a )))?v2 ))):named a34 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set$ )(?v2 T_set_set$ ))(= (fun_app$c (minus$b ?v0 )(insert$b ?v1 ?v2 ))(fun_app$c (minus$b (fun_app$c (minus$b ?v0 )(insert$b ?v1 bot$b )))?v2 ))):named a35 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum$ )(?v2 T_N_sum_set$ ))(= (fun_app$d (minus$c ?v0 )(insert$c ?v1 ?v2 ))(fun_app$d (minus$c (fun_app$d (minus$c ?v0 )(insert$c ?v1 bot$c )))?v2 ))):named a36 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N$ )(?v2 N_set$ ))(= (fun_app$ (minus$ ?v0 )(insert$ ?v1 ?v2 ))(fun_app$ (minus$ (fun_app$ (minus$ ?v0 )(insert$ ?v1 bot$ )))?v2 ))):named a37 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ )(?v1 N_T_N_sum_set_prod$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (fun_app$b (minus$a ?v0 )(insert$a ?v1 ?v2 ))(fun_app$b (minus$a (fun_app$b (minus$a ?v0 )?v2 ))(insert$a ?v1 bot$a )))):named a38 ))
(assert (! (forall ((?v0 T_set_set$ )(?v1 T_set$ )(?v2 T_set_set$ ))(= (fun_app$c (minus$b ?v0 )(insert$b ?v1 ?v2 ))(fun_app$c (minus$b (fun_app$c (minus$b ?v0 )?v2 ))(insert$b ?v1 bot$b )))):named a39 ))
(assert (! (forall ((?v0 T_N_sum_set$ )(?v1 T_N_sum$ )(?v2 T_N_sum_set$ ))(= (fun_app$d (minus$c ?v0 )(insert$c ?v1 ?v2 ))(fun_app$d (minus$c (fun_app$d (minus$c ?v0 )?v2 ))(insert$c ?v1 bot$c )))):named a40 ))
(assert (! (forall ((?v0 N_set$ )(?v1 N$ )(?v2 N_set$ ))(= (fun_app$ (minus$ ?v0 )(insert$ ?v1 ?v2 ))(fun_app$ (minus$ (fun_app$ (minus$ ?v0 )?v2 ))(insert$ ?v1 bot$ )))):named a41 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ ))(=> (member$ ?v0 ?v1 )(= (insert$c ?v0 (fun_app$d (minus$c ?v1 )(insert$c ?v0 bot$c )))?v1 ))):named a42 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ ))(=> (member$b ?v0 ?v1 )(= (insert$b ?v0 (fun_app$c (minus$b ?v1 )(insert$b ?v0 bot$b )))?v1 ))):named a43 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ ))(=> (member$c ?v0 ?v1 )(= (insert$a ?v0 (fun_app$b (minus$a ?v1 )(insert$a ?v0 bot$a )))?v1 ))):named a44 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(=> (member$a ?v0 ?v1 )(= (insert$ ?v0 (fun_app$ (minus$ ?v1 )(insert$ ?v0 bot$ )))?v1 ))):named a45 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum_set$ ))(=> (not (member$ ?v0 ?v1 ))(= (fun_app$d (minus$c (insert$c ?v0 ?v1 ))(insert$c ?v0 bot$c ))?v1 ))):named a46 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set_set$ ))(=> (not (member$b ?v0 ?v1 ))(= (fun_app$c (minus$b (insert$b ?v0 ?v1 ))(insert$b ?v0 bot$b ))?v1 ))):named a47 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ ))(=> (not (member$c ?v0 ?v1 ))(= (fun_app$b (minus$a (insert$a ?v0 ?v1 ))(insert$a ?v0 bot$a ))?v1 ))):named a48 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(=> (not (member$a ?v0 ?v1 ))(= (fun_app$ (minus$ (insert$ ?v0 ?v1 ))(insert$ ?v0 bot$ ))?v1 ))):named a49 ))
(assert (! (forall ((?v0 T_N_sum$ ))(= (member$ ?v0 bot$c )false )):named a50 ))
(assert (! (forall ((?v0 T_set$ ))(= (member$b ?v0 bot$b )false )):named a51 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(= (member$c ?v0 bot$a )false )):named a52 ))
(assert (! (forall ((?v0 N$ ))(= (member$a ?v0 bot$ )false )):named a53 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_bool_fun$ ))(= (= bot$a (collect$ ?v0 ))(forall ((?v1 N_T_N_sum_set_prod$ ))(not (fun_app$e ?v0 ?v1 ))))):named a54 ))
(assert (! (forall ((?v0 T_set_bool_fun$ ))(= (= bot$b (collect$a ?v0 ))(forall ((?v1 T_set$ ))(not (fun_app$f ?v0 ?v1 ))))):named a55 ))
(assert (! (forall ((?v0 T_N_sum_bool_fun$ ))(= (= bot$c (collect$b ?v0 ))(forall ((?v1 T_N_sum$ ))(not (fun_app$g ?v0 ?v1 ))))):named a56 ))
(assert (! (forall ((?v0 N_bool_fun$ ))(= (= bot$ (collect$c ?v0 ))(forall ((?v1 N$ ))(not (fun_app$h ?v0 ?v1 ))))):named a57 ))
(check-sat )
;(get-unsat-core )
