;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_set$ 0 )
(declare-sort N_N_fun$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort Dtree_N_fun$ 0 )
(declare-sort N_dtree_fun$ 0 )
(declare-sort T_N_sum_set$ 0 )
(declare-sort T_T_sum_set$ 0 )
(declare-sort N_T_N_sum_fun$ 0 )
(declare-sort T_N_sum_N_fun$ 0 )
(declare-sort T_T_T_sum_fun$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_set_N_sum_set$ 0 )
(declare-sort T_set_T_set_fun$ 0 )
(declare-sort T_set_T_sum_set$ 0 )
(declare-sort T_N_sum_bool_fun$ 0 )
(declare-sort Dtree_T_N_sum_fun$ 0 )
(declare-sort N_T_set_N_sum_fun$ 0 )
(declare-sort T_N_sum_dtree_fun$ 0 )
(declare-sort T_T_N_sum_sum_set$ 0 )
(declare-sort T_T_set_T_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_fun$ 0 )
(declare-sort T_N_sum_T_N_sum_fun$ 0 )
(declare-sort T_T_sum_T_T_sum_fun$ 0 )
(declare-sort T_set_dtree_sum_set$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_set$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_set$ 0 )
(declare-sort Dtree_set_dtree_set_fun$ 0 )
(declare-sort T_N_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_N_sum_fun$ 0 )
(declare-sort T_set_set_T_set_set_fun$ 0 )
(declare-sort Dtree_T_set_dtree_sum_fun$ 0 )
(declare-sort T_N_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_N_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_bool_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_set_T_sum_T_set_T_sum_fun$ 0 )
(declare-sort Dtree_N_T_N_sum_set_prod_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_dtree_fun$ 0 )
(declare-sort T_T_N_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_N_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_set_dtree_sum_T_set_N_sum_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_T_dtree_sum_sum_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_N_T_N_sum_set_prod_fun$ 0 )
(declare-sort T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ 0 )
(declare-sort T_set_dtree_sum_T_set_dtree_sum_fun$ 0 )
(declare-sort Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ 0 )
(declare-sort N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ 0 )
(declare-sort Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ 0 )
(declare-sort N_T_N_sum_set_prod$ 0)
(declare-sort T_N_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_T_N_sum_sum$ 0)
(declare-sort T_T_dtree_sum_sum$ 0)
(declare-sort T_T_sum$ 0)
(declare-sort T_set_dtree_sum$ 0)
(declare-sort T_set_N_sum$ 0)
(declare-sort T_set_T_sum$ 0)
(declare-fun fst$ (N_T_N_sum_set_prod$)N$)
(declare-fun snd$ (N_T_N_sum_set_prod$)T_N_sum_set$)
(declare-fun pair$ (N$ T_N_sum_set$ )N_T_N_sum_set_prod$)
(declare-fun projl$ (T_N_sum$)T$)
(declare-fun inl$ (T$ )T_N_sum$)
(declare-fun projr$ (T_N_sum$)N$)
(declare-fun inr$ (N$ )T_N_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun projl$b (T_T_N_sum_sum$)T$)
(declare-fun inl$b (T$ )T_T_N_sum_sum$)
(declare-fun projr$b (T_T_N_sum_sum$)T_N_sum$)
(declare-fun inr$b (T_N_sum$ )T_T_N_sum_sum$)
(declare-fun projl$c (T_T_dtree_sum_sum$)T$)
(declare-fun inl$c (T$ )T_T_dtree_sum_sum$)
(declare-fun projr$c (T_T_dtree_sum_sum$)T_dtree_sum$)
(declare-fun inr$c (T_dtree_sum$ )T_T_dtree_sum_sum$)
(declare-fun projl$d (T_T_sum$)T$)
(declare-fun inl$d (T$ )T_T_sum$)
(declare-fun projr$d (T_T_sum$)T$)
(declare-fun inr$d (T$ )T_T_sum$)
(declare-fun projl$e (T_set_dtree_sum$)T_set$)
(declare-fun inl$e (T_set$ )T_set_dtree_sum$)
(declare-fun projr$e (T_set_dtree_sum$)Dtree$)
(declare-fun inr$e (Dtree$ )T_set_dtree_sum$)
(declare-fun projl$f (T_set_N_sum$)T_set$)
(declare-fun inl$f (T_set$ )T_set_N_sum$)
(declare-fun projr$f (T_set_N_sum$)N$)
(declare-fun inr$f (N$ )T_set_N_sum$)
(declare-fun projl$g (T_set_T_sum$)T_set$)
(declare-fun inl$g (T_set$ )T_set_T_sum$)
(declare-fun projr$g (T_set_T_sum$)T$)
(declare-fun inr$g (T$ )T_set_T_sum$)
(declare-fun p$ ()N_T_N_sum_set_prod_set$ )
(declare-fun id$ ()T_T_fun$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun uu$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun wf$ (Dtree$ )Bool )
(declare-fun id$a ()T_set_T_set_fun$ )
(declare-fun id$b ()T_set_set_T_set_set_fun$ )
(declare-fun id$c ()Dtree_dtree_fun$ )
(declare-fun id$d ()Dtree_set_dtree_set_fun$ )
(declare-fun phi$ (Dtree$ )Bool )
(declare-fun tra$ ()Dtree$ )
(declare-fun uua$ ()N_T_N_sum_fun$ )
(declare-fun uub$ ()T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun uuc$ ()T_dtree_sum_T_T_dtree_sum_sum_fun$ )
(declare-fun uud$ ()T_T_T_sum_fun$ )
(declare-fun uue$ ()Dtree_T_set_dtree_sum_fun$ )
(declare-fun uuf$ ()N_T_set_N_sum_fun$ )
(declare-fun uug$ ()T_T_set_T_sum_fun$ )
(declare-fun uuh$ (N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_bool_fun$ )
(declare-fun uui$ (Dtree_set$ )Dtree_bool_fun$ )
(declare-fun uuj$ (T_dtree_sum_set$ )T_dtree_sum_bool_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun root$ ()Dtree_N_fun$ )
(declare-fun image$ (T_dtree_sum_T_N_sum_fun$ T_dtree_sum_set$ )T_N_sum_set$ )
(declare-fun image$a (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$b (Dtree_dtree_fun$ )Dtree_set_dtree_set_fun$ )
(declare-fun image$c (Dtree_N_fun$ Dtree_set$ )N_set$ )
(declare-fun image$d (T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_T_N_sum_sum_set$ )
(declare-fun image$e (T_T_sum_T_T_sum_fun$ T_T_sum_set$ )T_T_sum_set$ )
(declare-fun image$f (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun image$g (T_N_sum_T_dtree_sum_fun$ T_N_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$h (N_dtree_fun$ N_set$ )Dtree_set$ )
(declare-fun image$i (T_N_sum_T_N_sum_fun$ T_N_sum_set$ )T_N_sum_set$ )
(declare-fun image$j (N_N_fun$ N_set$ )N_set$ )
(declare-fun image$k (T_set_dtree_sum_T_set_dtree_sum_fun$ T_set_dtree_sum_set$ )T_set_dtree_sum_set$ )
(declare-fun image$l (T_set_dtree_sum_T_set_N_sum_fun$ T_set_dtree_sum_set$ )T_set_N_sum_set$ )
(declare-fun image$m (T_set_T_sum_T_set_T_sum_fun$ T_set_T_sum_set$ )T_set_T_sum_set$ )
(declare-fun image$n (T_T_N_sum_sum_T_dtree_sum_fun$ T_T_N_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$o (T_N_sum_dtree_fun$ T_N_sum_set$ )Dtree_set$ )
(declare-fun image$p (T_T_dtree_sum_sum_T_dtree_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun image$q (T_T_N_sum_sum_T_N_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$r (T_T_dtree_sum_sum_T_N_sum_fun$ T_T_dtree_sum_sum_set$ )T_N_sum_set$ )
(declare-fun image$s (T_dtree_sum_T_T_N_sum_sum_fun$ T_dtree_sum_set$ )T_T_N_sum_sum_set$ )
(declare-fun image$t (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum_set$ )T_T_N_sum_sum_set$ )
(declare-fun image$u (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun image$v (N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun image$w (N_T_N_sum_set_prod_dtree_fun$ N_T_N_sum_set_prod_set$ )Dtree_set$ )
(declare-fun image$x (N_T_N_sum_set_prod_T_dtree_sum_fun$ N_T_N_sum_set_prod_set$ )T_dtree_sum_set$ )
(declare-fun image$y (Dtree_N_T_N_sum_set_prod_fun$ Dtree_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun image$z (Dtree_T_dtree_sum_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun inj_on$ (Dtree_N_fun$ Dtree_set$ )Bool )
(declare-fun member$ (N_T_N_sum_set_prod$ N_T_N_sum_set_prod_set$ )Bool )
(declare-fun vimage$ (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun collect$ (N_T_N_sum_set_prod_bool_fun$ )N_T_N_sum_set_prod_set$ )
(declare-fun fun_app$ (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_dtree_sum$ )T_T_dtree_sum_sum$ )
(declare-fun image$aa (T_dtree_sum_N_T_N_sum_set_prod_fun$ T_dtree_sum_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun image$ab (T_dtree_sum_dtree_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun map_sum$ (T_T_fun$ )Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ )
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$b (Dtree$ Dtree_set$ )Bool )
(declare-fun member$c (T_N_sum$ T_N_sum_set$ )Bool )
(declare-fun member$d (T_T_N_sum_sum$ T_T_N_sum_sum_set$ )Bool )
(declare-fun member$e (T_T_dtree_sum_sum$ T_T_dtree_sum_sum_set$ )Bool )
(declare-fun member$f (T$ T_set$ )Bool )
(declare-fun vimage$a (N_T_N_sum_fun$ T_N_sum_set$ )N_set$ )
(declare-fun vimage$b (T_N_sum_T_T_N_sum_sum_fun$ T_T_N_sum_sum_set$ )T_N_sum_set$ )
(declare-fun vimage$c (T_dtree_sum_T_T_dtree_sum_sum_fun$ T_T_dtree_sum_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$d (T_T_T_sum_fun$ T_T_sum_set$ )T_set$ )
(declare-fun vimage$e (Dtree_T_set_dtree_sum_fun$ T_set_dtree_sum_set$ )Dtree_set$ )
(declare-fun vimage$f (N_T_set_N_sum_fun$ T_set_N_sum_set$ )N_set$ )
(declare-fun vimage$g (T_T_set_T_sum_fun$ T_set_T_sum_set$ )T_set$ )
(declare-fun vimage$h (T_set_T_set_fun$ )T_set_set_T_set_set_fun$ )
(declare-fun vimage$i (Dtree_dtree_fun$ )Dtree_set_dtree_set_fun$ )
(declare-fun vimage$j (T_T_fun$ )T_set_T_set_fun$ )
(declare-fun vimage$k (T_dtree_sum_dtree_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun vimage$l (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$m (N_T_N_sum_set_prod_dtree_fun$ Dtree_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun vimage$n (Dtree_N_T_N_sum_set_prod_fun$ N_T_N_sum_set_prod_set$ )Dtree_set$ )
(declare-fun vimage$o (N_T_N_sum_set_prod_T_dtree_sum_fun$ T_dtree_sum_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun vimage$p (T_dtree_sum_N_T_N_sum_set_prod_fun$ N_T_N_sum_set_prod_set$ )T_dtree_sum_set$ )
(declare-fun vimage$q (N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ N_T_N_sum_set_prod_set$ )N_T_N_sum_set_prod_set$ )
(declare-fun collect$a (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun collect$b (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun fun_app$a (T_N_sum_T_T_N_sum_sum_fun$ T_N_sum$ )T_T_N_sum_sum$ )
(declare-fun fun_app$b (Dtree_T_set_dtree_sum_fun$ Dtree$ )T_set_dtree_sum$ )
(declare-fun fun_app$c (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$d (T_T_set_T_sum_fun$ T$ )T_set_T_sum$ )
(declare-fun fun_app$e (T_T_T_sum_fun$ T$ )T_T_sum$ )
(declare-fun fun_app$f (N_T_set_N_sum_fun$ N$ )T_set_N_sum$ )
(declare-fun fun_app$g (N_T_N_sum_fun$ N$ )T_N_sum$ )
(declare-fun fun_app$h (N_T_N_sum_set_prod_bool_fun$ N_T_N_sum_set_prod$ )Bool )
(declare-fun fun_app$i (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$j (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$k (Dtree_N_fun$ Dtree$ )N$ )
(declare-fun fun_app$l (Dtree_N_fun_T_dtree_sum_T_N_sum_fun_fun$ Dtree_N_fun$ )T_dtree_sum_T_N_sum_fun$ )
(declare-fun fun_app$m (Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ Dtree_dtree_fun$ )T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun fun_app$n (Dtree_set_dtree_set_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun fun_app$o (T_set_T_set_fun$ T_set$ )T_set$ )
(declare-fun fun_app$p (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$q (N_dtree_fun$ N$ )Dtree$ )
(declare-fun fun_app$r (N_N_fun$ N$ )N$ )
(declare-fun fun_app$s (T_N_sum_dtree_fun$ T_N_sum$ )Dtree$ )
(declare-fun fun_app$t (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$u (T_N_sum_N_fun$ T_N_sum$ )N$ )
(declare-fun fun_app$v (T_dtree_sum_N_fun$ T_dtree_sum$ )N$ )
(declare-fun fun_app$w (Dtree_T_N_sum_fun$ Dtree$ )T_N_sum$ )
(declare-fun fun_app$x (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$y (N_T_N_sum_set_prod_dtree_fun$ N_T_N_sum_set_prod$ )Dtree$ )
(declare-fun fun_app$z (Dtree_N_T_N_sum_set_prod_fun$ Dtree$ )N_T_N_sum_set_prod$ )
(declare-fun map_sum$a (T_T_fun$ )Dtree_dtree_fun_T_dtree_sum_T_dtree_sum_fun_fun$ )
(declare-fun map_sum$b (T_T_fun$ T_dtree_sum_T_N_sum_fun$ )T_T_dtree_sum_sum_T_T_N_sum_sum_fun$ )
(declare-fun map_sum$c (T_T_fun$ T_T_fun$ )T_T_sum_T_T_sum_fun$ )
(declare-fun map_sum$d (T_T_fun$ N_dtree_fun$ )T_N_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$e (T_T_fun$ N_N_fun$ )T_N_sum_T_N_sum_fun$ )
(declare-fun map_sum$f (T_set_T_set_fun$ Dtree_dtree_fun$ )T_set_dtree_sum_T_set_dtree_sum_fun$ )
(declare-fun map_sum$g (T_set_T_set_fun$ Dtree_N_fun$ )T_set_dtree_sum_T_set_N_sum_fun$ )
(declare-fun map_sum$h (T_set_T_set_fun$ T_T_fun$ )T_set_T_sum_T_set_T_sum_fun$ )
(declare-fun map_sum$i (T_T_fun$ T_N_sum_dtree_fun$ )T_T_N_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$j (T_T_fun$ T_dtree_sum_dtree_fun$ )T_T_dtree_sum_sum_T_dtree_sum_fun$ )
(declare-fun map_sum$k (T_T_fun$ T_N_sum_N_fun$ )T_T_N_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$l (T_T_fun$ T_dtree_sum_N_fun$ )T_T_dtree_sum_sum_T_N_sum_fun$ )
(declare-fun map_sum$m (T_T_fun$ Dtree_T_N_sum_fun$ )T_dtree_sum_T_T_N_sum_sum_fun$ )
(declare-fun map_sum$n (T_T_fun$ N_T_N_sum_fun$ )T_N_sum_T_T_N_sum_sum_fun$ )
(declare-fun fun_app$aa (N_T_N_sum_set_prod_T_dtree_sum_fun$ N_T_N_sum_set_prod$ )T_dtree_sum$ )
(declare-fun fun_app$ab (T_dtree_sum_N_T_N_sum_set_prod_fun$ T_dtree_sum$ )N_T_N_sum_set_prod$ )
(declare-fun fun_app$ac (N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ N_T_N_sum_set_prod$ )N_T_N_sum_set_prod$ )
(declare-fun fun_app$ad (T_T_fun$ T$ )T$ )
(declare-fun fun_app$ae (T_dtree_sum_T_N_sum_fun$ T_dtree_sum$ )T_N_sum$ )
(declare-fun fun_app$af (T_N_sum_bool_fun$ T_N_sum$ )Bool )
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$ uuc$ ?v0 )(inr$c ?v0 )):pattern ((fun_app$ uuc$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 T_N_sum$ ))(! (= (fun_app$a uub$ ?v0 )(inr$b ?v0 )):pattern ((fun_app$a uub$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uue$ ?v0 )(inr$e ?v0 )):pattern ((fun_app$b uue$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$c uu$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$c uu$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$d uug$ ?v0 )(inr$g ?v0 )):pattern ((fun_app$d uug$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$e uud$ ?v0 )(inr$d ?v0 )):pattern ((fun_app$e uud$ ?v0 )))):named a5 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$f uuf$ ?v0 )(inr$f ?v0 )):pattern ((fun_app$f uuf$ ?v0 )))):named a6 ))
(assert (! (forall ((?v0 N$ ))(! (= (fun_app$g uua$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$g uua$ ?v0 )))):named a7 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ )(?v1 N_T_N_sum_set_prod$ ))(! (= (fun_app$h (uuh$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$h (uuh$ ?v0 )?v1 )))):named a8 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum$ ))(! (= (fun_app$i (uuj$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$i (uuj$ ?v0 )?v1 )))):named a9 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree$ ))(! (= (fun_app$j (uui$ ?v0 )?v1 )(member$b ?v1 ?v0 )):pattern ((fun_app$j (uui$ ?v0 )?v1 )))):named a10 ))
(assert (! (not (and (member$ (pair$ (fun_app$k root$ tra$ )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ tra$ )))p$ )(and (inj_on$ root$ (vimage$ uu$ (cont$ tra$ )))(forall ((?v0 Dtree$ ))(=> (member$b ?v0 (vimage$ uu$ (cont$ tra$ )))(or (phi$ ?v0 )(wf$ ?v0 ))))))):named a11 ))
(assert (! (phi$ tra$ ):named a12 ))
(assert (! (phi$ tr$ ):named a13 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (phi$ ?v0 )(and (member$ (pair$ (fun_app$k root$ ?v0 )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ ?v0 )))p$ )(and (inj_on$ root$ (vimage$ uu$ (cont$ ?v0 )))(forall ((?v1 Dtree$ ))(=> (member$b ?v1 (vimage$ uu$ (cont$ ?v0 )))(phi$ ?v1 ))))))):named a14 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ )(?v2 Dtree$ ))(=> (and (wf$ ?v0 )(and (member$a (inr$a ?v1 )(cont$ ?v0 ))(member$a (inr$a ?v2 )(cont$ ?v0 ))))(= (= (fun_app$k root$ ?v1 )(fun_app$k root$ ?v2 ))(= ?v1 ?v2 )))):named a15 ))
(assert (! (forall ((?v0 Dtree$ ))(= (wf$ ?v0 )(exists ((?v1 Dtree$ ))(and (= ?v0 ?v1 )(and (member$ (pair$ (fun_app$k root$ ?v1 )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ ?v1 )))p$ )(and (inj_on$ root$ (vimage$ uu$ (cont$ ?v1 )))(forall ((?v2 Dtree$ ))(=> (member$b ?v2 (vimage$ uu$ (cont$ ?v1 )))(wf$ ?v2 ))))))))):named a16 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (and (member$ (pair$ (fun_app$k root$ ?v0 )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ ?v0 )))p$ )(and (inj_on$ root$ (vimage$ uu$ (cont$ ?v0 )))(forall ((?v1 Dtree$ ))(=> (member$b ?v1 (vimage$ uu$ (cont$ ?v0 )))(wf$ ?v1 )))))(wf$ ?v0 ))):named a17 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (and (wf$ ?v0 )(forall ((?v1 Dtree$ ))(=> (and (= ?v0 ?v1 )(and (member$ (pair$ (fun_app$k root$ ?v1 )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ ?v1 )))p$ )(and (inj_on$ root$ (vimage$ uu$ (cont$ ?v1 )))(forall ((?v2 Dtree$ ))(=> (member$b ?v2 (vimage$ uu$ (cont$ ?v1 )))(wf$ ?v2 ))))))false )))false )):named a18 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(=> (and (wf$ ?v0 )(member$a (inr$a ?v1 )(cont$ ?v0 )))(wf$ ?v1 ))):named a19 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (wf$ ?v0 )(inj_on$ root$ (vimage$ uu$ (cont$ ?v0 ))))):named a20 ))
(assert (! (forall ((?v0 Dtree$ ))(=> (wf$ ?v0 )(member$ (pair$ (fun_app$k root$ ?v0 )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ ?v0 )))p$ ))):named a21 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree$ ))(=> (and (fun_app$j ?v0 ?v1 )(forall ((?v2 Dtree$ ))(=> (fun_app$j ?v0 ?v2 )(exists ((?v3 Dtree$ ))(and (= ?v2 ?v3 )(and (member$ (pair$ (fun_app$k root$ ?v3 )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ ?v3 )))p$ )(and (inj_on$ root$ (vimage$ uu$ (cont$ ?v3 )))(forall ((?v4 Dtree$ ))(=> (member$b ?v4 (vimage$ uu$ (cont$ ?v3 )))(or (fun_app$j ?v0 ?v4 )(wf$ ?v4 )))))))))))(wf$ ?v1 ))):named a22 ))
(assert (! (forall ((?v0 Dtree_bool_fun$ )(?v1 Dtree$ ))(=> (and (fun_app$j ?v0 ?v1 )(forall ((?v2 Dtree$ ))(=> (fun_app$j ?v0 ?v2 )(and (member$ (pair$ (fun_app$k root$ ?v2 )(image$ (fun_app$l (map_sum$ id$ )root$ )(cont$ ?v2 )))p$ )(and (inj_on$ root$ (vimage$ uu$ (cont$ ?v2 )))(forall ((?v3 Dtree$ ))(=> (member$b ?v3 (vimage$ uu$ (cont$ ?v2 )))(or (fun_app$j ?v0 ?v3 )(wf$ ?v3 )))))))))(wf$ ?v1 ))):named a23 ))
(assert (! (forall ((?v0 N$ ))(exists ((?v1 T_N_sum_set$ ))(member$ (pair$ ?v0 ?v1 )p$ ))):named a24 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$ uu$ (image$a (fun_app$m (map_sum$a id$ )?v0 )?v1 ))(fun_app$n (image$b ?v0 )(vimage$ uu$ ?v1 )))):named a25 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_dtree_sum_set$ ))(= (vimage$a uua$ (image$ (fun_app$l (map_sum$ id$ )?v0 )?v1 ))(image$c ?v0 (vimage$ uu$ ?v1 )))):named a26 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_T_dtree_sum_sum_set$ ))(= (vimage$b uub$ (image$d (map_sum$b id$ ?v0 )?v1 ))(image$ ?v0 (vimage$c uuc$ ?v1 )))):named a27 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_T_sum_set$ ))(= (vimage$d uud$ (image$e (map_sum$c id$ ?v0 )?v1 ))(fun_app$o (image$f ?v0 )(vimage$d uud$ ?v1 )))):named a28 ))
(assert (! (forall ((?v0 N_dtree_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$ uu$ (image$g (map_sum$d id$ ?v0 )?v1 ))(image$h ?v0 (vimage$a uua$ ?v1 )))):named a29 ))
(assert (! (forall ((?v0 N_N_fun$ )(?v1 T_N_sum_set$ ))(= (vimage$a uua$ (image$i (map_sum$e id$ ?v0 )?v1 ))(image$j ?v0 (vimage$a uua$ ?v1 )))):named a30 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 T_set_dtree_sum_set$ ))(= (vimage$e uue$ (image$k (map_sum$f id$a ?v0 )?v1 ))(fun_app$n (image$b ?v0 )(vimage$e uue$ ?v1 )))):named a31 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 T_set_dtree_sum_set$ ))(= (vimage$f uuf$ (image$l (map_sum$g id$a ?v0 )?v1 ))(image$c ?v0 (vimage$e uue$ ?v1 )))):named a32 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set_T_sum_set$ ))(= (vimage$g uug$ (image$m (map_sum$h id$a ?v0 )?v1 ))(fun_app$o (image$f ?v0 )(vimage$g uug$ ?v1 )))):named a33 ))
(assert (! (forall ((?v0 T_N_sum_dtree_fun$ )(?v1 T_T_N_sum_sum_set$ ))(= (vimage$ uu$ (image$n (map_sum$i id$ ?v0 )?v1 ))(image$o ?v0 (vimage$b uub$ ?v1 )))):named a34 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a (inr$a ?v0 )(image$a (fun_app$m (map_sum$a id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$p ?v1 ?v3 )?v0 ))))):named a35 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c (inr$ ?v0 )(image$ (fun_app$l (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$k ?v1 ?v3 )?v0 ))))):named a36 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(= (member$a (inr$a ?v0 )(image$g (map_sum$d id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$c (inr$ ?v3 )?v2 )(= (fun_app$q ?v1 ?v3 )?v0 ))))):named a37 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(= (member$c (inr$ ?v0 )(image$i (map_sum$e id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$c (inr$ ?v3 )?v2 )(= (fun_app$r ?v1 ?v3 )?v0 ))))):named a38 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$a (inr$a ?v0 )(image$n (map_sum$i id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$b ?v3 )?v2 )(= (fun_app$s ?v1 ?v3 )?v0 ))))):named a39 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$a (inr$a ?v0 )(image$p (map_sum$j id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$e (inr$c ?v3 )?v2 )(= (fun_app$t ?v1 ?v3 )?v0 ))))):named a40 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(= (member$c (inr$ ?v0 )(image$q (map_sum$k id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$b ?v3 )?v2 )(= (fun_app$u ?v1 ?v3 )?v0 ))))):named a41 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(= (member$c (inr$ ?v0 )(image$r (map_sum$l id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$e (inr$c ?v3 )?v2 )(= (fun_app$v ?v1 ?v3 )?v0 ))))):named a42 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 Dtree_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$d (inr$b ?v0 )(image$s (map_sum$m id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$w ?v1 ?v3 )?v0 ))))):named a43 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(= (member$d (inr$b ?v0 )(image$t (map_sum$n id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$c (inr$ ?v3 )?v2 )(= (fun_app$g ?v1 ?v3 )?v0 ))))):named a44 ))
(assert (! (= (vimage$h id$a )id$b ):named a45 ))
(assert (! (= (vimage$i id$c )id$d ):named a46 ))
(assert (! (= (vimage$j id$ )id$a ):named a47 ))
(assert (! (= (image$u id$a )id$b ):named a48 ))
(assert (! (= (image$b id$c )id$d ):named a49 ))
(assert (! (= (image$f id$ )id$a ):named a50 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$a (fun_app$m (map_sum$a id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$p ?v1 ?v3 )?v0 ))))):named a51 ))
(assert (! (forall ((?v0 N$ )(?v1 Dtree_N_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$c (inr$ ?v0 )(image$ (fun_app$l (map_sum$ id$ )?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$k ?v1 ?v3 )?v0 ))))):named a52 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_dtree_fun$ )(?v2 T_N_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$g (map_sum$d id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$c (inr$ ?v3 )?v2 )(= (fun_app$q ?v1 ?v3 )?v0 ))))):named a53 ))
(assert (! (forall ((?v0 N$ )(?v1 N_N_fun$ )(?v2 T_N_sum_set$ ))(=> (member$c (inr$ ?v0 )(image$i (map_sum$e id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$c (inr$ ?v3 )?v2 )(= (fun_app$r ?v1 ?v3 )?v0 ))))):named a54 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_N_sum_dtree_fun$ )(?v2 T_T_N_sum_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$n (map_sum$i id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$b ?v3 )?v2 )(= (fun_app$s ?v1 ?v3 )?v0 ))))):named a55 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(=> (member$a (inr$a ?v0 )(image$p (map_sum$j id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$e (inr$c ?v3 )?v2 )(= (fun_app$t ?v1 ?v3 )?v0 ))))):named a56 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_N_fun$ )(?v2 T_T_N_sum_sum_set$ ))(=> (member$c (inr$ ?v0 )(image$q (map_sum$k id$ ?v1 )?v2 ))(exists ((?v3 T_N_sum$ ))(and (member$d (inr$b ?v3 )?v2 )(= (fun_app$u ?v1 ?v3 )?v0 ))))):named a57 ))
(assert (! (forall ((?v0 N$ )(?v1 T_dtree_sum_N_fun$ )(?v2 T_T_dtree_sum_sum_set$ ))(=> (member$c (inr$ ?v0 )(image$r (map_sum$l id$ ?v1 )?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$e (inr$c ?v3 )?v2 )(= (fun_app$v ?v1 ?v3 )?v0 ))))):named a58 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 Dtree_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(=> (member$d (inr$b ?v0 )(image$s (map_sum$m id$ ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$a (inr$a ?v3 )?v2 )(= (fun_app$w ?v1 ?v3 )?v0 ))))):named a59 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 N_T_N_sum_fun$ )(?v2 T_N_sum_set$ ))(=> (member$d (inr$b ?v0 )(image$t (map_sum$n id$ ?v1 )?v2 ))(exists ((?v3 N$ ))(and (member$c (inr$ ?v3 )?v2 )(= (fun_app$g ?v1 ?v3 )?v0 ))))):named a60 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (fun_app$n (vimage$i ?v1 )?v2 ))(member$b (fun_app$p ?v1 ?v0 )?v2 ))):named a61 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$a ?v0 (vimage$k ?v1 ?v2 ))(member$b (fun_app$t ?v1 ?v0 )?v2 ))):named a62 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b ?v0 (vimage$ ?v1 ?v2 ))(member$a (fun_app$c ?v1 ?v0 )?v2 ))):named a63 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (vimage$l ?v1 ?v2 ))(member$a (fun_app$x ?v1 ?v0 )?v2 ))):named a64 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$ ?v0 (vimage$m ?v1 ?v2 ))(member$b (fun_app$y ?v1 ?v0 )?v2 ))):named a65 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$b ?v0 (vimage$n ?v1 ?v2 ))(member$ (fun_app$z ?v1 ?v0 )?v2 ))):named a66 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (vimage$o ?v1 ?v2 ))(member$a (fun_app$aa ?v1 ?v0 )?v2 ))):named a67 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$a ?v0 (vimage$p ?v1 ?v2 ))(member$ (fun_app$ab ?v1 ?v0 )?v2 ))):named a68 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$ ?v0 (vimage$q ?v1 ?v2 ))(member$ (fun_app$ac ?v1 ?v0 )?v2 ))):named a69 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T_set$ ))(= (member$f ?v0 (fun_app$o (vimage$j ?v1 )?v2 ))(member$f (fun_app$ad ?v1 ?v0 )?v2 ))):named a70 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$p ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$b ?v1 (fun_app$n (vimage$i ?v0 )?v3 )))):named a71 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$t ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$a ?v1 (vimage$k ?v0 ?v3 )))):named a72 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$c ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$b ?v1 (vimage$ ?v0 ?v3 )))):named a73 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$x ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$a ?v1 (vimage$l ?v0 ?v3 )))):named a74 ))
(assert (! (forall ((?v0 Dtree_N_T_N_sum_set_prod_fun$ )(?v1 Dtree$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= (fun_app$z ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$b ?v1 (vimage$n ?v0 ?v3 )))):named a75 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_dtree_fun$ )(?v1 N_T_N_sum_set_prod$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$y ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$ ?v1 (vimage$m ?v0 ?v3 )))):named a76 ))
(assert (! (forall ((?v0 T_dtree_sum_N_T_N_sum_set_prod_fun$ )(?v1 T_dtree_sum$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= (fun_app$ab ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$a ?v1 (vimage$p ?v0 ?v3 )))):named a77 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_T_dtree_sum_fun$ )(?v1 N_T_N_sum_set_prod$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$aa ?v0 ?v1 )?v2 )(member$a ?v2 ?v3 ))(member$ ?v1 (vimage$o ?v0 ?v3 )))):named a78 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v1 N_T_N_sum_set_prod$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= (fun_app$ac ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (vimage$q ?v0 ?v3 )))):named a79 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$ad ?v0 ?v1 )?v2 )(member$f ?v2 ?v3 ))(member$f ?v1 (fun_app$o (vimage$j ?v0 )?v3 )))):named a80 ))
(assert (! (forall ((?v0 N$ )(?v1 N$ ))(= (= (inr$ ?v0 )(inr$ ?v1 ))(= ?v0 ?v1 ))):named a81 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_N_sum$ ))(= (= (inr$b ?v0 )(inr$b ?v1 ))(= ?v0 ?v1 ))):named a82 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a83 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a84 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum$ ))(= (= (inr$c ?v0 )(inr$c ?v1 ))(= ?v0 ?v1 ))):named a85 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(= (= (inr$a ?v0 )(inr$a ?v1 ))(= ?v0 ?v1 ))):named a86 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$ad id$ ?v0 )?v0 ):pattern ((fun_app$ad id$ ?v0 )))):named a87 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= ?v0 (fun_app$ac ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$v ?v1 ?v3 )))):named a88 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_T_N_sum_set_prod_dtree_fun$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= ?v0 (fun_app$y ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$w ?v1 ?v3 )))):named a89 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_N_sum_set_prod_T_dtree_sum_fun$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_set$ ))(=> (and (= ?v0 (fun_app$aa ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$a ?v0 (image$x ?v1 ?v3 )))):named a90 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 Dtree_N_T_N_sum_set_prod_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$z ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$y ?v1 ?v3 )))):named a91 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$b ?v0 (fun_app$n (image$b ?v1 )?v3 )))):named a92 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$a ?v0 (image$z ?v1 ?v3 )))):named a93 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$ae ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$c ?v0 (image$ ?v1 ?v3 )))):named a94 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 T_dtree_sum_N_T_N_sum_set_prod_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$ab ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$ ?v0 (image$aa ?v1 ?v3 )))):named a95 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$t ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$b ?v0 (image$ab ?v1 ?v3 )))):named a96 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= ?v0 (fun_app$x ?v1 ?v2 ))(member$a ?v2 ?v3 ))(member$a ?v0 (image$a ?v1 ?v3 )))):named a97 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a98 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(= (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a99 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(exists ((?v1 N$ )(?v2 T_N_sum_set$ ))(= ?v0 (pair$ ?v1 ?v2 )))):named a100 ))
(assert (! (forall ((?v0 N$ )(?v1 T_N_sum_set$ )(?v2 N$ )(?v3 T_N_sum_set$ ))(=> (and (= (pair$ ?v0 ?v1 )(pair$ ?v2 ?v3 ))(=> (and (= ?v0 ?v2 )(= ?v1 ?v3 ))false ))false )):named a101 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(=> (forall ((?v1 N$ )(?v2 T_N_sum_set$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a102 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_bool_fun$ )(?v1 N_T_N_sum_set_prod$ ))(=> (forall ((?v2 N$ )(?v3 T_N_sum_set$ ))(fun_app$h ?v0 (pair$ ?v2 ?v3 )))(fun_app$h ?v0 ?v1 ))):named a103 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ ))(=> (forall ((?v1 N$ )(?v2 T_N_sum_set$ ))(=> (= ?v0 (pair$ ?v1 ?v2 ))false ))false )):named a104 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ ))(=> (member$ ?v0 ?v1 )(member$ (fun_app$ac ?v2 ?v0 )(image$v ?v2 ?v1 )))):named a105 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_dtree_fun$ ))(=> (member$ ?v0 ?v1 )(member$b (fun_app$y ?v2 ?v0 )(image$w ?v2 ?v1 )))):named a106 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_T_dtree_sum_fun$ ))(=> (member$ ?v0 ?v1 )(member$a (fun_app$aa ?v2 ?v0 )(image$x ?v2 ?v1 )))):named a107 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_N_T_N_sum_set_prod_fun$ ))(=> (member$b ?v0 ?v1 )(member$ (fun_app$z ?v2 ?v0 )(image$y ?v2 ?v1 )))):named a108 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_dtree_fun$ ))(=> (member$b ?v0 ?v1 )(member$b (fun_app$p ?v2 ?v0 )(fun_app$n (image$b ?v2 )?v1 )))):named a109 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_T_dtree_sum_fun$ ))(=> (member$b ?v0 ?v1 )(member$a (fun_app$c ?v2 ?v0 )(image$z ?v2 ?v1 )))):named a110 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$c (fun_app$ae ?v2 ?v0 )(image$ ?v2 ?v1 )))):named a111 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_N_T_N_sum_set_prod_fun$ ))(=> (member$a ?v0 ?v1 )(member$ (fun_app$ab ?v2 ?v0 )(image$aa ?v2 ?v1 )))):named a112 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_dtree_fun$ ))(=> (member$a ?v0 ?v1 )(member$b (fun_app$t ?v2 ?v0 )(image$ab ?v2 ?v1 )))):named a113 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_dtree_sum_fun$ ))(=> (member$a ?v0 ?v1 )(member$a (fun_app$x ?v2 ?v0 )(image$a ?v2 ?v1 )))):named a114 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod$ )(?v3 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$ac ?v3 ?v0 )))(member$ ?v2 (image$v ?v3 ?v1 )))):named a115 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 Dtree$ )(?v3 N_T_N_sum_set_prod_dtree_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$y ?v3 ?v0 )))(member$b ?v2 (image$w ?v3 ?v1 )))):named a116 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 T_dtree_sum$ )(?v3 N_T_N_sum_set_prod_T_dtree_sum_fun$ ))(=> (and (member$ ?v0 ?v1 )(= ?v2 (fun_app$aa ?v3 ?v0 )))(member$a ?v2 (image$x ?v3 ?v1 )))):named a117 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 N_T_N_sum_set_prod$ )(?v3 Dtree_N_T_N_sum_set_prod_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$z ?v3 ?v0 )))(member$ ?v2 (image$y ?v3 ?v1 )))):named a118 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree_dtree_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$p ?v3 ?v0 )))(member$b ?v2 (fun_app$n (image$b ?v3 )?v1 )))):named a119 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum$ )(?v3 Dtree_T_dtree_sum_fun$ ))(=> (and (member$b ?v0 ?v1 )(= ?v2 (fun_app$c ?v3 ?v0 )))(member$a ?v2 (image$z ?v3 ?v1 )))):named a120 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$ae ?v3 ?v0 )))(member$c ?v2 (image$ ?v3 ?v1 )))):named a121 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 N_T_N_sum_set_prod$ )(?v3 T_dtree_sum_N_T_N_sum_set_prod_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$ab ?v3 ?v0 )))(member$ ?v2 (image$aa ?v3 ?v1 )))):named a122 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree$ )(?v3 T_dtree_sum_dtree_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$t ?v3 ?v0 )))(member$b ?v2 (image$ab ?v3 ?v1 )))):named a123 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_T_dtree_sum_fun$ ))(=> (and (member$a ?v0 ?v1 )(= ?v2 (fun_app$x ?v3 ?v0 )))(member$a ?v2 (image$a ?v3 ?v1 )))):named a124 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (forall ((?v3 T_N_sum$ ))(=> (member$c ?v3 (image$ ?v0 ?v1 ))(fun_app$af ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$af ?v2 (fun_app$ae ?v0 ?v3 )))))):named a125 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_bool_fun$ ))(=> (forall ((?v3 N_T_N_sum_set_prod$ ))(=> (member$ ?v3 (image$v ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 N_T_N_sum_set_prod$ ))(=> (member$ ?v3 ?v1 )(fun_app$h ?v2 (fun_app$ac ?v0 ?v3 )))))):named a126 ))
(assert (! (forall ((?v0 Dtree_N_T_N_sum_set_prod_fun$ )(?v1 Dtree_set$ )(?v2 N_T_N_sum_set_prod_bool_fun$ ))(=> (forall ((?v3 N_T_N_sum_set_prod$ ))(=> (member$ ?v3 (image$y ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$b ?v3 ?v1 )(fun_app$h ?v2 (fun_app$z ?v0 ?v3 )))))):named a127 ))
(assert (! (forall ((?v0 T_dtree_sum_N_T_N_sum_set_prod_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_T_N_sum_set_prod_bool_fun$ ))(=> (forall ((?v3 N_T_N_sum_set_prod$ ))(=> (member$ ?v3 (image$aa ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$h ?v2 (fun_app$ab ?v0 ?v3 )))))):named a128 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_dtree_fun$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(=> (member$b ?v3 (image$w ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 N_T_N_sum_set_prod$ ))(=> (member$ ?v3 ?v1 )(fun_app$j ?v2 (fun_app$y ?v0 ?v3 )))))):named a129 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(=> (member$b ?v3 (fun_app$n (image$b ?v0 )?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$b ?v3 ?v1 )(fun_app$j ?v2 (fun_app$p ?v0 ?v3 )))))):named a130 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree_bool_fun$ ))(=> (forall ((?v3 Dtree$ ))(=> (member$b ?v3 (image$ab ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$j ?v2 (fun_app$t ?v0 ?v3 )))))):named a131 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_T_dtree_sum_fun$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$x ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(forall ((?v3 N_T_N_sum_set_prod$ ))(=> (member$ ?v3 ?v1 )(fun_app$i ?v2 (fun_app$aa ?v0 ?v3 )))))):named a132 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$z ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(forall ((?v3 Dtree$ ))(=> (member$b ?v3 ?v1 )(fun_app$i ?v2 (fun_app$c ?v0 ?v3 )))))):named a133 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(forall ((?v3 T_dtree_sum$ ))(=> (member$a ?v3 ?v1 )(fun_app$i ?v2 (fun_app$x ?v0 ?v3 )))))):named a134 ))
(assert (! (forall ((?v0 T_dtree_sum_T_N_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_N_sum_bool_fun$ ))(=> (exists ((?v3 T_N_sum$ ))(and (member$c ?v3 (image$ ?v0 ?v1 ))(fun_app$af ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$af ?v2 (fun_app$ae ?v0 ?v3 )))))):named a135 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 N_T_N_sum_set_prod_bool_fun$ ))(=> (exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 (image$v ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 ?v1 )(fun_app$h ?v2 (fun_app$ac ?v0 ?v3 )))))):named a136 ))
(assert (! (forall ((?v0 Dtree_N_T_N_sum_set_prod_fun$ )(?v1 Dtree_set$ )(?v2 N_T_N_sum_set_prod_bool_fun$ ))(=> (exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 (image$y ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$b ?v3 ?v1 )(fun_app$h ?v2 (fun_app$z ?v0 ?v3 )))))):named a137 ))
(assert (! (forall ((?v0 T_dtree_sum_N_T_N_sum_set_prod_fun$ )(?v1 T_dtree_sum_set$ )(?v2 N_T_N_sum_set_prod_bool_fun$ ))(=> (exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 (image$aa ?v0 ?v1 ))(fun_app$h ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$h ?v2 (fun_app$ab ?v0 ?v3 )))))):named a138 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_dtree_fun$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 Dtree_bool_fun$ ))(=> (exists ((?v3 Dtree$ ))(and (member$b ?v3 (image$w ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 ?v1 )(fun_app$j ?v2 (fun_app$y ?v0 ?v3 )))))):named a139 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_bool_fun$ ))(=> (exists ((?v3 Dtree$ ))(and (member$b ?v3 (fun_app$n (image$b ?v0 )?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$b ?v3 ?v1 )(fun_app$j ?v2 (fun_app$p ?v0 ?v3 )))))):named a140 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum_set$ )(?v2 Dtree_bool_fun$ ))(=> (exists ((?v3 Dtree$ ))(and (member$b ?v3 (image$ab ?v0 ?v1 ))(fun_app$j ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$j ?v2 (fun_app$t ?v0 ?v3 )))))):named a141 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_T_dtree_sum_fun$ )(?v1 N_T_N_sum_set_prod_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$x ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 ?v1 )(fun_app$i ?v2 (fun_app$aa ?v0 ?v3 )))))):named a142 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$z ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(exists ((?v3 Dtree$ ))(and (member$b ?v3 ?v1 )(fun_app$i ?v2 (fun_app$c ?v0 ?v3 )))))):named a143 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_bool_fun$ ))(=> (exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 (image$a ?v0 ?v1 ))(fun_app$i ?v2 ?v3 )))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v1 )(fun_app$i ?v2 (fun_app$x ?v0 ?v3 )))))):named a144 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_T_N_sum_fun$ )(?v3 T_dtree_sum_T_N_sum_fun$ ))(=> (and (= ?v0 ?v1 )(forall ((?v4 T_dtree_sum$ ))(=> (member$a ?v4 ?v1 )(= (fun_app$ae ?v2 ?v4 )(fun_app$ae ?v3 ?v4 )))))(= (image$ ?v2 ?v0 )(image$ ?v3 ?v1 )))):named a145 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod_set$ ))(= (collect$ (uuh$ ?v0 ))?v0 )):named a146 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (collect$a (uui$ ?v0 ))?v0 )):named a147 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (collect$b (uuj$ ?v0 ))?v0 )):named a148 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_bool_fun$ ))(= (member$ ?v0 (collect$ ?v1 ))(fun_app$h ?v1 ?v0 ))):named a149 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_bool_fun$ ))(= (member$b ?v0 (collect$a ?v1 ))(fun_app$j ?v1 ?v0 ))):named a150 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_bool_fun$ ))(= (member$a ?v0 (collect$b ?v1 ))(fun_app$i ?v1 ?v0 ))):named a151 ))
(assert (! (forall ((?v0 T_N_sum$ )(?v1 T_dtree_sum_T_N_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$c ?v0 (image$ ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$ae ?v1 ?v3 )))))):named a152 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 N_T_N_sum_set_prod_N_T_N_sum_set_prod_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$ ?v0 (image$v ?v1 ?v2 ))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$ac ?v1 ?v3 )))))):named a153 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 Dtree_N_T_N_sum_set_prod_fun$ )(?v2 Dtree_set$ ))(= (member$ ?v0 (image$y ?v1 ?v2 ))(exists ((?v3 Dtree$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$z ?v1 ?v3 )))))):named a154 ))
(assert (! (forall ((?v0 N_T_N_sum_set_prod$ )(?v1 T_dtree_sum_N_T_N_sum_set_prod_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$ ?v0 (image$aa ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$ab ?v1 ?v3 )))))):named a155 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 N_T_N_sum_set_prod_dtree_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$b ?v0 (image$w ?v1 ?v2 ))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$y ?v1 ?v3 )))))):named a156 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree_set$ ))(= (member$b ?v0 (fun_app$n (image$b ?v1 )?v2 ))(exists ((?v3 Dtree$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$p ?v1 ?v3 )))))):named a157 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_sum_dtree_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$b ?v0 (image$ab ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$t ?v1 ?v3 )))))):named a158 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 N_T_N_sum_set_prod_T_dtree_sum_fun$ )(?v2 N_T_N_sum_set_prod_set$ ))(= (member$a ?v0 (image$x ?v1 ?v2 ))(exists ((?v3 N_T_N_sum_set_prod$ ))(and (member$ ?v3 ?v2 )(= ?v0 (fun_app$aa ?v1 ?v3 )))))):named a159 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree_set$ ))(= (member$a ?v0 (image$z ?v1 ?v2 ))(exists ((?v3 Dtree$ ))(and (member$b ?v3 ?v2 )(= ?v0 (fun_app$c ?v1 ?v3 )))))):named a160 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_T_dtree_sum_fun$ )(?v2 T_dtree_sum_set$ ))(= (member$a ?v0 (image$a ?v1 ?v2 ))(exists ((?v3 T_dtree_sum$ ))(and (member$a ?v3 ?v2 )(= ?v0 (fun_app$x ?v1 ?v3 )))))):named a161 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (inj_on$ ?v0 ?v1 )(and (not (= ?v2 ?v3 ))(and (member$b ?v2 ?v1 )(member$b ?v3 ?v1 ))))(not (= (fun_app$k ?v0 ?v2 )(fun_app$k ?v0 ?v3 ))))):named a162 ))
(assert (! (forall ((?v0 Dtree_N_fun$ )(?v1 Dtree_set$ )(?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (inj_on$ ?v0 ?v1 )(and (member$b ?v2 ?v1 )(member$b ?v3 ?v1 )))(= (= (fun_app$k ?v0 ?v2 )(fun_app$k ?v0 ?v3 ))(= ?v2 ?v3 )))):named a163 ))
(check-sat )
;(get-unsat-core )
