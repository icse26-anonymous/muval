;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort N$ 0 )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort N_set$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort T_dtree_sum$ 0)
(declare-fun projl$ (T_dtree_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_sum$)
(declare-fun projr$ (T_dtree_sum$)Dtree$)
(declare-fun inr$ (Dtree$ )T_dtree_sum$)
(declare-fun ns$ ()N_set$ )
(declare-fun ta$ ()T$ )
(declare-fun tr$ ()Dtree$ )
(declare-fun tra$ ()Dtree$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun inFr$ (N_set$ Dtree$ T$ )Bool )
(declare-fun root$ (Dtree$ )N$ )
(declare-fun minus$ (N_set$ N_set$ )N_set$ )
(declare-fun insert$ (N$ N_set$ )N_set$ )
(declare-fun member$ (N$ N_set$ )Bool )
(declare-fun minus$a (T_dtree_sum_set$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun insert$a (T_dtree_sum$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun member$a (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(assert (! (not (inFr$ (insert$ (root$ tr$ )ns$ )tr$ ta$ )):named a0 ))
(assert (! (member$ (root$ tra$ )ns$ ):named a1 ))
(assert (! (member$a (inl$ ta$ )(cont$ tra$ )):named a2 ))
(assert (! (member$a (inr$ tra$ )(cont$ tr$ )):named a3 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ )(?v2 N_set$ ))(=> (member$ ?v0 (minus$ ?v1 ?v2 ))(member$ ?v0 ?v1 ))):named a4 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (member$a ?v0 (minus$a ?v1 ?v2 ))(member$a ?v0 ?v1 ))):named a5 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(! (=> (member$ ?v0 ?v1 )(= (insert$ ?v0 ?v1 )?v1 )):pattern ((insert$ ?v0 ?v1 )))):named a6 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ ))(! (=> (member$a ?v0 ?v1 )(= (insert$a ?v0 ?v1 )?v1 )):pattern ((insert$a ?v0 ?v1 )))):named a7 ))
(assert (! (forall ((?v0 N$ )(?v1 N_set$ ))(member$ ?v0 (insert$ ?v0 ?v1 ))):named a8 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ ))(member$a ?v0 (insert$a ?v0 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 N_set$ )(?v1 Dtree$ )(?v2 T$ ))(= (inFr$ ?v0 ?v1 ?v2 )(or (exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 T$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v5 )(and (member$ (root$ ?v3 )?v4 )(member$a (inl$ ?v5 )(cont$ ?v3 )))))))(exists ((?v3 Dtree$ )(?v4 N_set$ )(?v5 Dtree$ )(?v6 T$ ))(and (= ?v0 ?v4 )(and (= ?v1 ?v3 )(and (= ?v2 ?v6 )(and (member$ (root$ ?v3 )?v4 )(and (member$a (inr$ ?v5 )(cont$ ?v3 ))(inFr$ ?v4 ?v5 ?v6 )))))))))):named a10 ))
(check-sat )
;(get-unsat-core )
