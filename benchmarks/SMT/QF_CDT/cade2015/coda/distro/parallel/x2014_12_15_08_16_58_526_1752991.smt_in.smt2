;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort T$ 0 )
(declare-sort Dtree$ 0 )
(declare-sort T_set$ 0 )
(declare-sort T_T_fun$ 0 )
(declare-sort Dtree_set$ 0 )
(declare-sort T_bool_fun$ 0 )
(declare-sort Dtree_T_fun$ 0 )
(declare-sort T_T_set_fun$ 0 )
(declare-sort T_dtree_fun$ 0 )
(declare-sort T_T_prod_set$ 0 )
(declare-sort Dtree_bool_fun$ 0 )
(declare-sort Dtree_T_set_fun$ 0 )
(declare-sort Dtree_dtree_fun$ 0 )
(declare-sort T_dtree_set_fun$ 0 )
(declare-sort T_dtree_sum_set$ 0 )
(declare-sort Dtree_T_prod_set$ 0 )
(declare-sort T_dtree_prod_set$ 0 )
(declare-sort T_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_fun$ 0 )
(declare-sort Dtree_dtree_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_set$ 0 )
(declare-sort T_dtree_sum_bool_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_dtree_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_fun$ 0 )
(declare-sort T_T_dtree_sum_prod_set$ 0 )
(declare-sort T_dtree_dtree_prod_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_set_fun$ 0 )
(declare-sort T_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_dtree_set_fun$ 0 )
(declare-sort Dtree_T_dtree_sum_prod_set$ 0 )
(declare-sort Dtree_dtree_dtree_prod_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_set$ 0 )
(declare-sort T_dtree_sum_dtree_prod_set$ 0 )
(declare-sort Dtree_dtree_prod_T_prod_set$ 0 )
(declare-sort T_dtree_dtree_prod_prod_set$ 0 )
(declare-sort T_dtree_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort Dtree_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_set_fun$ 0 )
(declare-sort Dtree_dtree_prod_dtree_set_fun$ 0 )
(declare-sort Dtree_dtree_dtree_prod_prod_set$ 0 )
(declare-sort Dtree_dtree_prod_dtree_prod_set$ 0 )
(declare-sort T_dtree_dtree_prod_sum_bool_fun$ 0 )
(declare-sort Dtree_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort T_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_sum_fun$ 0 )
(declare-sort T_dtree_sum_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_dtree_bool_fun_fun$ 0 )
(declare-sort Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_bool_fun_T_bool_fun_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ 0 )
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ 0 )
(declare-sort Dtree_dtree_prod$ 0)
(declare-sort T_dtree_dtree_prod_sum$ 0)
(declare-sort T_dtree_sum$ 0)
(declare-sort T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ 0)
(declare-fun fst$ (Dtree_dtree_prod$)Dtree$)
(declare-fun snd$ (Dtree_dtree_prod$)Dtree$)
(declare-fun pair$ (Dtree$ Dtree$ )Dtree_dtree_prod$)
(declare-fun projl$ (T_dtree_dtree_prod_sum$)T$)
(declare-fun inl$ (T$ )T_dtree_dtree_prod_sum$)
(declare-fun projr$ (T_dtree_dtree_prod_sum$)Dtree_dtree_prod$)
(declare-fun inr$ (Dtree_dtree_prod$ )T_dtree_dtree_prod_sum$)
(declare-fun projl$a (T_dtree_sum$)T$)
(declare-fun inl$a (T$ )T_dtree_sum$)
(declare-fun projr$a (T_dtree_sum$)Dtree$)
(declare-fun inr$a (Dtree$ )T_dtree_sum$)
(declare-fun fst$a (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$)T_dtree_dtree_prod_sum$)
(declare-fun snd$a (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$)T_dtree_dtree_prod_sum$)
(declare-fun pair$a (T_dtree_dtree_prod_sum$ T_dtree_dtree_prod_sum$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$)
(declare-fun uu$ ()T_T_dtree_dtree_prod_sum_fun$ )
(declare-fun sup$ (T_dtree_dtree_prod_sum_set$ T_dtree_dtree_prod_sum_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun tr1$ ()Dtree$ )
(declare-fun tr2$ ()Dtree$ )
(declare-fun uua$ ()T_T_dtree_sum_fun$ )
(declare-fun uub$ ()Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ )
(declare-fun uuc$ ()Dtree_T_dtree_sum_fun$ )
(declare-fun uud$ ()Dtree_dtree_set_fun$ )
(declare-fun uue$ (Dtree$ )Dtree_dtree_set_fun$ )
(declare-fun uuf$ (T_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_bool_fun_fun$ )
(declare-fun uug$ (Dtree_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uuh$ (Dtree_dtree_fun$ )Dtree_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uui$ (T_dtree_fun$ )Dtree_bool_fun_T_bool_fun_fun$ )
(declare-fun uuj$ (Dtree_T_fun$ )T_bool_fun_dtree_bool_fun_fun$ )
(declare-fun uuk$ (T_T_fun$ )T_bool_fun_T_bool_fun_fun$ )
(declare-fun uul$ (T_dtree_sum_dtree_fun$ )Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uum$ (T_dtree_sum_T_fun$ )T_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uun$ (T_T_dtree_dtree_prod_sum_fun$ )T_dtree_dtree_prod_sum_bool_fun_T_bool_fun_fun$ )
(declare-fun uuo$ (T_dtree_sum_T_dtree_sum_fun$ )T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ )
(declare-fun uup$ ()Dtree_dtree_fun$ )
(declare-fun uuq$ ()T_T_fun$ )
(declare-fun uur$ ()T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ )
(declare-fun uus$ ()T_dtree_sum_T_dtree_sum_fun$ )
(declare-fun cont$ (Dtree$ )T_dtree_sum_set$ )
(declare-fun sup$a (T_dtree_sum_set$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun sup$b (T_set$ T_set$ )T_set$ )
(declare-fun sup$c (Dtree_set$ Dtree_set$ )Dtree_set$ )
(declare-fun sup$d (Dtree_dtree_prod_set$ Dtree_dtree_prod_set$ )Dtree_dtree_prod_set$ )
(declare-fun sup$e (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun sup$f (T_dtree_prod_set$ T_dtree_prod_set$ )T_dtree_prod_set$ )
(declare-fun sup$g (T_T_prod_set$ T_T_prod_set$ )T_T_prod_set$ )
(declare-fun sup$h (T_dtree_dtree_prod_prod_set$ T_dtree_dtree_prod_prod_set$ )T_dtree_dtree_prod_prod_set$ )
(declare-fun sup$i (T_T_dtree_sum_prod_set$ T_T_dtree_sum_prod_set$ )T_T_dtree_sum_prod_set$ )
(declare-fun image$ (T_T_dtree_dtree_prod_sum_fun$ T_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun par_c$ (Dtree_dtree_prod$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun sigma$ (Dtree_set$ Dtree_dtree_set_fun$ )Dtree_dtree_prod_set$ )
(declare-fun finite$ (T_dtree_dtree_prod_sum_set$ )Bool )
(declare-fun image$a (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ Dtree_dtree_prod_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun image$b (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun image$c (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun image$d (Dtree_T_fun$ Dtree_set$ )T_set$ )
(declare-fun image$e (T_dtree_fun$ T_set$ )Dtree_set$ )
(declare-fun image$f (T_T_fun$ T_set$ )T_set$ )
(declare-fun image$g (Dtree_dtree_dtree_prod_fun$ Dtree_set$ )Dtree_dtree_prod_set$ )
(declare-fun image$h (Dtree_T_dtree_sum_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun image$i (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod_set$ )Dtree_set$ )
(declare-fun image$j (Dtree_dtree_prod_T_fun$ Dtree_dtree_prod_set$ )T_set$ )
(declare-fun member$ (Dtree$ Dtree_set$ )Bool )
(declare-fun sigma$a (T_dtree_dtree_prod_sum_set$ T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ )T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )
(declare-fun sigma$b (Dtree_set$ Dtree_T_set_fun$ )Dtree_T_prod_set$ )
(declare-fun sigma$c (T_set$ T_dtree_set_fun$ )T_dtree_prod_set$ )
(declare-fun sigma$d (T_set$ T_T_set_fun$ )T_T_prod_set$ )
(declare-fun sigma$e (Dtree_set$ Dtree_dtree_dtree_prod_set_fun$ )Dtree_dtree_dtree_prod_prod_set$ )
(declare-fun sigma$f (Dtree_set$ Dtree_T_dtree_sum_set_fun$ )Dtree_T_dtree_sum_prod_set$ )
(declare-fun sigma$g (Dtree_dtree_prod_set$ Dtree_dtree_prod_dtree_set_fun$ )Dtree_dtree_prod_dtree_prod_set$ )
(declare-fun sigma$h (Dtree_dtree_prod_set$ Dtree_dtree_prod_T_set_fun$ )Dtree_dtree_prod_T_prod_set$ )
(declare-fun sigma$i (T_dtree_sum_set$ T_dtree_sum_dtree_set_fun$ )T_dtree_sum_dtree_prod_set$ )
(declare-fun vimage$ (Dtree_T_dtree_sum_fun$ T_dtree_sum_set$ )Dtree_set$ )
(declare-fun collect$ (T_dtree_sum_bool_fun$ )T_dtree_sum_set$ )
(declare-fun finite$a (Dtree_set$ )Bool )
(declare-fun finite$b (Dtree_dtree_prod_set$ )Bool )
(declare-fun finite$c (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )Bool )
(declare-fun finite$d (T_set$ )Bool )
(declare-fun finite$e (Dtree_T_prod_set$ )Bool )
(declare-fun finite$f (T_dtree_prod_set$ )Bool )
(declare-fun finite$g (T_T_prod_set$ )Bool )
(declare-fun finite$h (Dtree_dtree_dtree_prod_prod_set$ )Bool )
(declare-fun finite$i (T_dtree_sum_set$ )Bool )
(declare-fun finite$j (Dtree_T_dtree_sum_prod_set$ )Bool )
(declare-fun finite$k (Dtree_dtree_prod_dtree_prod_set$ )Bool )
(declare-fun finite$l (Dtree_dtree_prod_T_prod_set$ )Bool )
(declare-fun finite$m (T_dtree_sum_dtree_prod_set$ )Bool )
(declare-fun finite$n (T_dtree_dtree_prod_prod_set$ )Bool )
(declare-fun finite$o (T_T_dtree_sum_prod_set$ )Bool )
(declare-fun fun_app$ (Dtree_dtree_set_fun$ Dtree$ )Dtree_set$ )
(declare-fun member$a (T_dtree_dtree_prod_sum$ T_dtree_dtree_prod_sum_set$ )Bool )
(declare-fun member$b (T$ T_set$ )Bool )
(declare-fun member$c (Dtree_dtree_prod$ Dtree_dtree_prod_set$ )Bool )
(declare-fun member$d (T_dtree_sum$ T_dtree_sum_set$ )Bool )
(declare-fun member$e (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )Bool )
(declare-fun vimage$a (T_T_dtree_sum_fun$ T_dtree_sum_set$ )T_set$ )
(declare-fun vimage$b (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$c (T_dtree_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )T_dtree_sum_set$ )
(declare-fun vimage$d (T_dtree_dtree_prod_sum_T_dtree_sum_fun$ T_dtree_sum_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun vimage$e (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun vimage$f (Dtree_dtree_fun$ Dtree_set$ )Dtree_set$ )
(declare-fun vimage$g (T_dtree_fun$ Dtree_set$ )T_set$ )
(declare-fun vimage$h (Dtree_T_fun$ T_set$ )Dtree_set$ )
(declare-fun vimage$i (T_T_fun$ T_set$ )T_set$ )
(declare-fun vimage$j (T_dtree_sum_dtree_fun$ Dtree_set$ )T_dtree_sum_set$ )
(declare-fun vimage$k (T_dtree_sum_T_fun$ T_set$ )T_dtree_sum_set$ )
(declare-fun vimage$l (T_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )T_set$ )
(declare-fun vimage$m (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum_set$ )Dtree_dtree_prod_set$ )
(declare-fun vimage$n (Dtree_dtree_prod_dtree_fun$ Dtree_set$ )Dtree_dtree_prod_set$ )
(declare-fun vimage$o (Dtree_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$ )Dtree_set$ )
(declare-fun vimage$p (T_dtree_dtree_prod_fun$ Dtree_dtree_prod_set$ )T_set$ )
(declare-fun collect$a (T_bool_fun$ )T_set$ )
(declare-fun collect$b (Dtree_bool_fun$ )Dtree_set$ )
(declare-fun collect$c (T_dtree_dtree_prod_sum_bool_fun$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun fun_app$a (Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ Dtree_dtree_prod$ )T_dtree_dtree_prod_sum$ )
(declare-fun fun_app$b (Dtree_T_dtree_sum_fun$ Dtree$ )T_dtree_sum$ )
(declare-fun fun_app$c (T_T_dtree_dtree_prod_sum_fun$ T$ )T_dtree_dtree_prod_sum$ )
(declare-fun fun_app$d (T_T_dtree_sum_fun$ T$ )T_dtree_sum$ )
(declare-fun fun_app$e (T_dtree_sum_bool_fun$ T_dtree_sum$ )Bool )
(declare-fun fun_app$f (T_dtree_sum_bool_fun_T_dtree_sum_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$g (T_dtree_sum_T_dtree_sum_fun$ T_dtree_sum$ )T_dtree_sum$ )
(declare-fun fun_app$h (Dtree_bool_fun_T_dtree_sum_bool_fun_fun$ Dtree_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$i (Dtree_bool_fun$ Dtree$ )Bool )
(declare-fun fun_app$j (T_dtree_sum_dtree_fun$ T_dtree_sum$ )Dtree$ )
(declare-fun fun_app$k (T_bool_fun_T_dtree_sum_bool_fun_fun$ T_bool_fun$ )T_dtree_sum_bool_fun$ )
(declare-fun fun_app$l (T_bool_fun$ T$ )Bool )
(declare-fun fun_app$m (T_dtree_sum_T_fun$ T_dtree_sum$ )T$ )
(declare-fun fun_app$n (T_dtree_sum_bool_fun_dtree_bool_fun_fun$ T_dtree_sum_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$o (Dtree_bool_fun_dtree_bool_fun_fun$ Dtree_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$p (Dtree_dtree_fun$ Dtree$ )Dtree$ )
(declare-fun fun_app$q (T_bool_fun_dtree_bool_fun_fun$ T_bool_fun$ )Dtree_bool_fun$ )
(declare-fun fun_app$r (Dtree_T_fun$ Dtree$ )T$ )
(declare-fun fun_app$s (T_dtree_dtree_prod_sum_bool_fun_T_bool_fun_fun$ T_dtree_dtree_prod_sum_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$t (T_dtree_dtree_prod_sum_bool_fun$ T_dtree_dtree_prod_sum$ )Bool )
(declare-fun fun_app$u (T_dtree_sum_bool_fun_T_bool_fun_fun$ T_dtree_sum_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$v (Dtree_bool_fun_T_bool_fun_fun$ Dtree_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$w (T_dtree_fun$ T$ )Dtree$ )
(declare-fun fun_app$x (T_bool_fun_T_bool_fun_fun$ T_bool_fun$ )T_bool_fun$ )
(declare-fun fun_app$y (T_T_fun$ T$ )T$ )
(declare-fun fun_app$z (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ T_dtree_dtree_prod_sum$ )T_dtree_dtree_prod_sum$ )
(declare-fun fun_app$aa (T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ T_dtree_dtree_prod_sum$ )T_dtree_dtree_prod_sum_set$ )
(declare-fun fun_app$ab (Dtree_T_set_fun$ Dtree$ )T_set$ )
(declare-fun fun_app$ac (T_dtree_set_fun$ T$ )Dtree_set$ )
(declare-fun fun_app$ad (T_T_set_fun$ T$ )T_set$ )
(declare-fun fun_app$ae (Dtree_dtree_dtree_prod_set_fun$ Dtree$ )Dtree_dtree_prod_set$ )
(declare-fun fun_app$af (Dtree_T_dtree_sum_set_fun$ Dtree$ )T_dtree_sum_set$ )
(declare-fun fun_app$ag (Dtree_dtree_prod_dtree_set_fun$ Dtree_dtree_prod$ )Dtree_set$ )
(declare-fun fun_app$ah (Dtree_dtree_prod_T_set_fun$ Dtree_dtree_prod$ )T_set$ )
(declare-fun fun_app$ai (T_dtree_sum_dtree_set_fun$ T_dtree_sum$ )Dtree_set$ )
(declare-fun fun_app$aj (Dtree_dtree_dtree_prod_fun$ Dtree$ )Dtree_dtree_prod$ )
(declare-fun fun_app$ak (Dtree_dtree_prod_dtree_fun$ Dtree_dtree_prod$ )Dtree$ )
(declare-fun fun_app$al (Dtree_dtree_prod_T_fun$ Dtree_dtree_prod$ )T$ )
(declare-fun fun_app$am (T_dtree_dtree_prod_fun$ T$ )Dtree_dtree_prod$ )
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$ uud$ ?v0 )(vimage$ uuc$ (cont$ tr2$ ))):pattern ((fun_app$ uud$ ?v0 )))):named a0 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ ))(! (= (fun_app$a uub$ ?v0 )(inr$ ?v0 )):pattern ((fun_app$a uub$ ?v0 )))):named a1 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$b uuc$ ?v0 )(inr$a ?v0 )):pattern ((fun_app$b uuc$ ?v0 )))):named a2 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$c uu$ ?v0 )(inl$ ?v0 )):pattern ((fun_app$c uu$ ?v0 )))):named a3 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$d uua$ ?v0 )(inl$a ?v0 )):pattern ((fun_app$d uua$ ?v0 )))):named a4 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(! (= (fun_app$ (uue$ ?v0 )?v1 )(vimage$ uuc$ (cont$ ?v0 ))):pattern ((fun_app$ (uue$ ?v0 )?v1 )))):named a5 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$f (uuo$ ?v0 )?v1 )?v2 )(fun_app$e ?v1 (fun_app$g ?v0 ?v2 ))):pattern ((fun_app$e (fun_app$f (uuo$ ?v0 )?v1 )?v2 )))):named a6 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$h (uul$ ?v0 )?v1 )?v2 )(fun_app$i ?v1 (fun_app$j ?v0 ?v2 ))):pattern ((fun_app$e (fun_app$h (uul$ ?v0 )?v1 )?v2 )))):named a7 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_bool_fun$ )(?v2 T_dtree_sum$ ))(! (= (fun_app$e (fun_app$k (uum$ ?v0 )?v1 )?v2 )(fun_app$l ?v1 (fun_app$m ?v0 ?v2 ))):pattern ((fun_app$e (fun_app$k (uum$ ?v0 )?v1 )?v2 )))):named a8 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$i (fun_app$n (uug$ ?v0 )?v1 )?v2 )(fun_app$e ?v1 (fun_app$b ?v0 ?v2 ))):pattern ((fun_app$i (fun_app$n (uug$ ?v0 )?v1 )?v2 )))):named a9 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$i (fun_app$o (uuh$ ?v0 )?v1 )?v2 )(fun_app$i ?v1 (fun_app$p ?v0 ?v2 ))):pattern ((fun_app$i (fun_app$o (uuh$ ?v0 )?v1 )?v2 )))):named a10 ))
(assert (! (forall ((?v0 Dtree_T_fun$ )(?v1 T_bool_fun$ )(?v2 Dtree$ ))(! (= (fun_app$i (fun_app$q (uuj$ ?v0 )?v1 )?v2 )(fun_app$l ?v1 (fun_app$r ?v0 ?v2 ))):pattern ((fun_app$i (fun_app$q (uuj$ ?v0 )?v1 )?v2 )))):named a11 ))
(assert (! (forall ((?v0 T_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ )(?v2 T$ ))(! (= (fun_app$l (fun_app$s (uun$ ?v0 )?v1 )?v2 )(fun_app$t ?v1 (fun_app$c ?v0 ?v2 ))):pattern ((fun_app$l (fun_app$s (uun$ ?v0 )?v1 )?v2 )))):named a12 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ )(?v2 T$ ))(! (= (fun_app$l (fun_app$u (uuf$ ?v0 )?v1 )?v2 )(fun_app$e ?v1 (fun_app$d ?v0 ?v2 ))):pattern ((fun_app$l (fun_app$u (uuf$ ?v0 )?v1 )?v2 )))):named a13 ))
(assert (! (forall ((?v0 T_dtree_fun$ )(?v1 Dtree_bool_fun$ )(?v2 T$ ))(! (= (fun_app$l (fun_app$v (uui$ ?v0 )?v1 )?v2 )(fun_app$i ?v1 (fun_app$w ?v0 ?v2 ))):pattern ((fun_app$l (fun_app$v (uui$ ?v0 )?v1 )?v2 )))):named a14 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ )(?v2 T$ ))(! (= (fun_app$l (fun_app$x (uuk$ ?v0 )?v1 )?v2 )(fun_app$l ?v1 (fun_app$y ?v0 ?v2 ))):pattern ((fun_app$l (fun_app$x (uuk$ ?v0 )?v1 )?v2 )))):named a15 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ ))(! (= (fun_app$z uur$ ?v0 )?v0 ):pattern ((fun_app$z uur$ ?v0 )))):named a16 ))
(assert (! (forall ((?v0 T_dtree_sum$ ))(! (= (fun_app$g uus$ ?v0 )?v0 ):pattern ((fun_app$g uus$ ?v0 )))):named a17 ))
(assert (! (forall ((?v0 Dtree$ ))(! (= (fun_app$p uup$ ?v0 )?v0 ):pattern ((fun_app$p uup$ ?v0 )))):named a18 ))
(assert (! (forall ((?v0 T$ ))(! (= (fun_app$y uuq$ ?v0 )?v0 ):pattern ((fun_app$y uuq$ ?v0 )))):named a19 ))
(assert (! (not (finite$ (sup$ (image$ uu$ (vimage$a uua$ (sup$a (cont$ tr1$ )(cont$ tr2$ ))))(image$a uub$ (sigma$ (vimage$ uuc$ (cont$ tr1$ ))uud$ ))))):named a20 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_set_fun$ ))(=> (and (finite$a ?v0 )(forall ((?v2 Dtree$ ))(=> (member$ ?v2 ?v0 )(finite$a (fun_app$ ?v1 ?v2 )))))(finite$b (sigma$ ?v0 ?v1 )))):named a21 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_set_fun$ ))(=> (and (finite$ ?v0 )(forall ((?v2 T_dtree_dtree_prod_sum$ ))(=> (member$a ?v2 ?v0 )(finite$ (fun_app$aa ?v1 ?v2 )))))(finite$c (sigma$a ?v0 ?v1 )))):named a22 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_T_set_fun$ ))(=> (and (finite$a ?v0 )(forall ((?v2 Dtree$ ))(=> (member$ ?v2 ?v0 )(finite$d (fun_app$ab ?v1 ?v2 )))))(finite$e (sigma$b ?v0 ?v1 )))):named a23 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_dtree_set_fun$ ))(=> (and (finite$d ?v0 )(forall ((?v2 T$ ))(=> (member$b ?v2 ?v0 )(finite$a (fun_app$ac ?v1 ?v2 )))))(finite$f (sigma$c ?v0 ?v1 )))):named a24 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_T_set_fun$ ))(=> (and (finite$d ?v0 )(forall ((?v2 T$ ))(=> (member$b ?v2 ?v0 )(finite$d (fun_app$ad ?v1 ?v2 )))))(finite$g (sigma$d ?v0 ?v1 )))):named a25 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_dtree_prod_set_fun$ ))(=> (and (finite$a ?v0 )(forall ((?v2 Dtree$ ))(=> (member$ ?v2 ?v0 )(finite$b (fun_app$ae ?v1 ?v2 )))))(finite$h (sigma$e ?v0 ?v1 )))):named a26 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_T_dtree_sum_set_fun$ ))(=> (and (finite$a ?v0 )(forall ((?v2 Dtree$ ))(=> (member$ ?v2 ?v0 )(finite$i (fun_app$af ?v1 ?v2 )))))(finite$j (sigma$f ?v0 ?v1 )))):named a27 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_dtree_set_fun$ ))(=> (and (finite$b ?v0 )(forall ((?v2 Dtree_dtree_prod$ ))(=> (member$c ?v2 ?v0 )(finite$a (fun_app$ag ?v1 ?v2 )))))(finite$k (sigma$g ?v0 ?v1 )))):named a28 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_T_set_fun$ ))(=> (and (finite$b ?v0 )(forall ((?v2 Dtree_dtree_prod$ ))(=> (member$c ?v2 ?v0 )(finite$d (fun_app$ah ?v1 ?v2 )))))(finite$l (sigma$h ?v0 ?v1 )))):named a29 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_dtree_set_fun$ ))(=> (and (finite$i ?v0 )(forall ((?v2 T_dtree_sum$ ))(=> (member$d ?v2 ?v0 )(finite$a (fun_app$ai ?v1 ?v2 )))))(finite$m (sigma$i ?v0 ?v1 )))):named a30 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_dtree_prod$ ))(= (= (inl$ ?v0 )(inr$ ?v1 ))false )):named a31 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree$ ))(= (= (inl$a ?v0 )(inr$a ?v1 ))false )):named a32 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 T$ ))(= (= (inr$ ?v0 )(inl$ ?v1 ))false )):named a33 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T$ ))(= (= (inr$a ?v0 )(inl$a ?v1 ))false )):named a34 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(= (vimage$a ?v0 (sup$a ?v1 ?v2 ))(sup$b (vimage$a ?v0 ?v1 )(vimage$a ?v0 ?v2 )))):named a35 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(= (vimage$ ?v0 (sup$a ?v1 ?v2 ))(sup$c (vimage$ ?v0 ?v1 )(vimage$ ?v0 ?v2 )))):named a36 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(= (vimage$b ?v0 (sup$a ?v1 ?v2 ))(sup$a (vimage$b ?v0 ?v1 )(vimage$b ?v0 ?v2 )))):named a37 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_set$ )(?v2 T_dtree_dtree_prod_sum_set$ ))(= (vimage$c ?v0 (sup$ ?v1 ?v2 ))(sup$a (vimage$c ?v0 ?v1 )(vimage$c ?v0 ?v2 )))):named a38 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(= (vimage$d ?v0 (sup$a ?v1 ?v2 ))(sup$ (vimage$d ?v0 ?v1 )(vimage$d ?v0 ?v2 )))):named a39 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_set$ )(?v2 T_dtree_dtree_prod_sum_set$ ))(= (vimage$e ?v0 (sup$ ?v1 ?v2 ))(sup$ (vimage$e ?v0 ?v1 )(vimage$e ?v0 ?v2 )))):named a40 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_set$ ))(= (vimage$f ?v0 (sup$c ?v1 ?v2 ))(sup$c (vimage$f ?v0 ?v1 )(vimage$f ?v0 ?v2 )))):named a41 ))
(assert (! (forall ((?v0 T_dtree_fun$ )(?v1 Dtree_set$ )(?v2 Dtree_set$ ))(= (vimage$g ?v0 (sup$c ?v1 ?v2 ))(sup$b (vimage$g ?v0 ?v1 )(vimage$g ?v0 ?v2 )))):named a42 ))
(assert (! (forall ((?v0 Dtree_T_fun$ )(?v1 T_set$ )(?v2 T_set$ ))(= (vimage$h ?v0 (sup$b ?v1 ?v2 ))(sup$c (vimage$h ?v0 ?v1 )(vimage$h ?v0 ?v2 )))):named a43 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_set$ )(?v2 T_set$ ))(= (vimage$i ?v0 (sup$b ?v1 ?v2 ))(sup$b (vimage$i ?v0 ?v1 )(vimage$i ?v0 ?v2 )))):named a44 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(= (finite$i (sup$a ?v0 ?v1 ))(and (finite$i ?v0 )(finite$i ?v1 )))):named a45 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_set$ ))(= (finite$ (sup$ ?v0 ?v1 ))(and (finite$ ?v0 )(finite$ ?v1 )))):named a46 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_set$ ))(= (finite$a (sup$c ?v0 ?v1 ))(and (finite$a ?v0 )(finite$a ?v1 )))):named a47 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_set$ ))(= (finite$d (sup$b ?v0 ?v1 ))(and (finite$d ?v0 )(finite$d ?v1 )))):named a48 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_set$ ))(= (finite$b (sup$d ?v0 ?v1 ))(and (finite$b ?v0 )(finite$b ?v1 )))):named a49 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ ))(= (finite$c (sup$e ?v0 ?v1 ))(and (finite$c ?v0 )(finite$c ?v1 )))):named a50 ))
(assert (! (forall ((?v0 T_dtree_prod_set$ )(?v1 T_dtree_prod_set$ ))(= (finite$f (sup$f ?v0 ?v1 ))(and (finite$f ?v0 )(finite$f ?v1 )))):named a51 ))
(assert (! (forall ((?v0 T_T_prod_set$ )(?v1 T_T_prod_set$ ))(= (finite$g (sup$g ?v0 ?v1 ))(and (finite$g ?v0 )(finite$g ?v1 )))):named a52 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_prod_set$ )(?v1 T_dtree_dtree_prod_prod_set$ ))(= (finite$n (sup$h ?v0 ?v1 ))(and (finite$n ?v0 )(finite$n ?v1 )))):named a53 ))
(assert (! (forall ((?v0 T_T_dtree_sum_prod_set$ )(?v1 T_T_dtree_sum_prod_set$ ))(= (finite$o (sup$i ?v0 ?v1 ))(and (finite$o ?v0 )(finite$o ?v1 )))):named a54 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_T_dtree_dtree_prod_sum_fun$ ))(=> (finite$d ?v0 )(finite$ (image$ ?v1 ?v0 )))):named a55 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ ))(=> (finite$b ?v0 )(finite$ (image$a ?v1 ?v0 )))):named a56 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_fun$ ))(=> (finite$ ?v0 )(finite$ (image$b ?v1 ?v0 )))):named a57 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_fun$ ))(=> (finite$a ?v0 )(finite$a (image$c ?v1 ?v0 )))):named a58 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_T_fun$ ))(=> (finite$a ?v0 )(finite$d (image$d ?v1 ?v0 )))):named a59 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_dtree_fun$ ))(=> (finite$d ?v0 )(finite$a (image$e ?v1 ?v0 )))):named a60 ))
(assert (! (forall ((?v0 T_set$ )(?v1 T_T_fun$ ))(=> (finite$d ?v0 )(finite$d (image$f ?v1 ?v0 )))):named a61 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_dtree_dtree_prod_fun$ ))(=> (finite$a ?v0 )(finite$b (image$g ?v1 ?v0 )))):named a62 ))
(assert (! (forall ((?v0 Dtree_set$ )(?v1 Dtree_T_dtree_sum_fun$ ))(=> (finite$a ?v0 )(finite$i (image$h ?v1 ?v0 )))):named a63 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_set$ )(?v1 Dtree_dtree_prod_dtree_fun$ ))(=> (finite$b ?v0 )(finite$a (image$i ?v1 ?v0 )))):named a64 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree$ ))(! (= (par_c$ (pair$ ?v0 ?v1 ))(sup$ (image$ uu$ (vimage$a uua$ (sup$a (cont$ ?v0 )(cont$ ?v1 ))))(image$a uub$ (sigma$ (vimage$ uuc$ (cont$ ?v0 ))(uue$ ?v1 ))))):pattern ((pair$ ?v0 ?v1 )))):named a65 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 T_dtree_dtree_prod_sum_set$ ))(=> (and (= (par_c$ ?v0 )?v1 )(forall ((?v2 Dtree$ )(?v3 Dtree$ ))(=> (and (= ?v0 (pair$ ?v2 ?v3 ))(= ?v1 (sup$ (image$ uu$ (vimage$a uua$ (sup$a (cont$ ?v2 )(cont$ ?v3 ))))(image$a uub$ (sigma$ (vimage$ uuc$ (cont$ ?v2 ))(uue$ ?v3 ))))))false )))false )):named a66 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$a ?v0 (collect$ ?v1 ))(collect$a (fun_app$u (uuf$ ?v0 )?v1 )))):named a67 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$ ?v0 (collect$ ?v1 ))(collect$b (fun_app$n (uug$ ?v0 )?v1 )))):named a68 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$f ?v0 (collect$b ?v1 ))(collect$b (fun_app$o (uuh$ ?v0 )?v1 )))):named a69 ))
(assert (! (forall ((?v0 T_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$g ?v0 (collect$b ?v1 ))(collect$a (fun_app$v (uui$ ?v0 )?v1 )))):named a70 ))
(assert (! (forall ((?v0 Dtree_T_fun$ )(?v1 T_bool_fun$ ))(= (vimage$h ?v0 (collect$a ?v1 ))(collect$b (fun_app$q (uuj$ ?v0 )?v1 )))):named a71 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T_bool_fun$ ))(= (vimage$i ?v0 (collect$a ?v1 ))(collect$a (fun_app$x (uuk$ ?v0 )?v1 )))):named a72 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 Dtree_bool_fun$ ))(= (vimage$j ?v0 (collect$b ?v1 ))(collect$ (fun_app$h (uul$ ?v0 )?v1 )))):named a73 ))
(assert (! (forall ((?v0 T_dtree_sum_T_fun$ )(?v1 T_bool_fun$ ))(= (vimage$k ?v0 (collect$a ?v1 ))(collect$ (fun_app$k (uum$ ?v0 )?v1 )))):named a74 ))
(assert (! (forall ((?v0 T_T_dtree_dtree_prod_sum_fun$ )(?v1 T_dtree_dtree_prod_sum_bool_fun$ ))(= (vimage$l ?v0 (collect$c ?v1 ))(collect$a (fun_app$s (uun$ ?v0 )?v1 )))):named a75 ))
(assert (! (forall ((?v0 T_dtree_sum_T_dtree_sum_fun$ )(?v1 T_dtree_sum_bool_fun$ ))(= (vimage$b ?v0 (collect$ ?v1 ))(collect$ (fun_app$f (uuo$ ?v0 )?v1 )))):named a76 ))
(assert (! (forall ((?v0 Dtree_set$ ))(= (vimage$f uup$ ?v0 )?v0 )):named a77 ))
(assert (! (forall ((?v0 T_set$ ))(= (vimage$i uuq$ ?v0 )?v0 )):named a78 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ ))(= (vimage$e uur$ ?v0 )?v0 )):named a79 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ ))(= (vimage$b uus$ ?v0 )?v0 )):named a80 ))
(assert (! (forall ((?v0 T_set$ ))(= (image$f uuq$ ?v0 )?v0 )):named a81 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ ))(= (image$b uur$ ?v0 )?v0 )):named a82 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_set$ )(?v1 T_dtree_dtree_prod_sum_set$ ))(=> (and (= (vimage$l uu$ ?v0 )(vimage$l uu$ ?v1 ))(= (vimage$m uub$ ?v0 )(vimage$m uub$ ?v1 )))(= ?v0 ?v1 ))):named a83 ))
(assert (! (forall ((?v0 T_dtree_sum_set$ )(?v1 T_dtree_sum_set$ ))(=> (and (= (vimage$a uua$ ?v0 )(vimage$a uua$ ?v1 ))(= (vimage$ uuc$ ?v0 )(vimage$ uuc$ ?v1 )))(= ?v0 ?v1 ))):named a84 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 T_T_dtree_dtree_prod_sum_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$c ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$a ?v0 (image$ ?v1 ?v3 )))):named a85 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 Dtree_dtree_prod_T_dtree_dtree_prod_sum_fun$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= ?v0 (fun_app$a ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$a ?v0 (image$a ?v1 ?v3 )))):named a86 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$p ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$ ?v0 (image$c ?v1 ?v3 )))):named a87 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_T_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$r ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$b ?v0 (image$d ?v1 ?v3 )))):named a88 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 T_dtree_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$w ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$ ?v0 (image$e ?v1 ?v3 )))):named a89 ))
(assert (! (forall ((?v0 T$ )(?v1 T_T_fun$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= ?v0 (fun_app$y ?v1 ?v2 ))(member$b ?v2 ?v3 ))(member$b ?v0 (image$f ?v1 ?v3 )))):named a90 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_dtree_prod_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$aj ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$c ?v0 (image$g ?v1 ?v3 )))):named a91 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 Dtree_T_dtree_sum_fun$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= ?v0 (fun_app$b ?v1 ?v2 ))(member$ ?v2 ?v3 ))(member$d ?v0 (image$h ?v1 ?v3 )))):named a92 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_dtree_prod_dtree_fun$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= ?v0 (fun_app$ak ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$ ?v0 (image$i ?v1 ?v3 )))):named a93 ))
(assert (! (forall ((?v0 T$ )(?v1 Dtree_dtree_prod_T_fun$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= ?v0 (fun_app$al ?v1 ?v2 ))(member$c ?v2 ?v3 ))(member$b ?v0 (image$j ?v1 ?v3 )))):named a94 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )(?v2 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ ))(=> (=> (not (member$e ?v0 ?v1 ))(member$e ?v0 ?v2 ))(member$e ?v0 (sup$e ?v2 ?v1 )))):named a95 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 Dtree_dtree_prod_set$ ))(=> (=> (not (member$c ?v0 ?v1 ))(member$c ?v0 ?v2 ))(member$c ?v0 (sup$d ?v2 ?v1 )))):named a96 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_set$ ))(=> (=> (not (member$ ?v0 ?v1 ))(member$ ?v0 ?v2 ))(member$ ?v0 (sup$c ?v2 ?v1 )))):named a97 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_set$ ))(=> (=> (not (member$b ?v0 ?v1 ))(member$b ?v0 ?v2 ))(member$b ?v0 (sup$b ?v2 ?v1 )))):named a98 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 T_dtree_dtree_prod_sum_set$ )(?v2 T_dtree_dtree_prod_sum_set$ ))(=> (=> (not (member$a ?v0 ?v1 ))(member$a ?v0 ?v2 ))(member$a ?v0 (sup$ ?v2 ?v1 )))):named a99 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(=> (=> (not (member$d ?v0 ?v1 ))(member$d ?v0 ?v2 ))(member$d ?v0 (sup$a ?v2 ?v1 )))):named a100 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod$ )(?v1 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ )(?v2 T_dtree_dtree_prod_sum_T_dtree_dtree_prod_sum_prod_set$ ))(= (member$e ?v0 (sup$e ?v1 ?v2 ))(or (member$e ?v0 ?v1 )(member$e ?v0 ?v2 )))):named a101 ))
(assert (! (forall ((?v0 Dtree_dtree_prod$ )(?v1 Dtree_dtree_prod_set$ )(?v2 Dtree_dtree_prod_set$ ))(= (member$c ?v0 (sup$d ?v1 ?v2 ))(or (member$c ?v0 ?v1 )(member$c ?v0 ?v2 )))):named a102 ))
(assert (! (forall ((?v0 Dtree$ )(?v1 Dtree_set$ )(?v2 Dtree_set$ ))(= (member$ ?v0 (sup$c ?v1 ?v2 ))(or (member$ ?v0 ?v1 )(member$ ?v0 ?v2 )))):named a103 ))
(assert (! (forall ((?v0 T$ )(?v1 T_set$ )(?v2 T_set$ ))(= (member$b ?v0 (sup$b ?v1 ?v2 ))(or (member$b ?v0 ?v1 )(member$b ?v0 ?v2 )))):named a104 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_sum$ )(?v1 T_dtree_dtree_prod_sum_set$ )(?v2 T_dtree_dtree_prod_sum_set$ ))(= (member$a ?v0 (sup$ ?v1 ?v2 ))(or (member$a ?v0 ?v1 )(member$a ?v0 ?v2 )))):named a105 ))
(assert (! (forall ((?v0 T_dtree_sum$ )(?v1 T_dtree_sum_set$ )(?v2 T_dtree_sum_set$ ))(= (member$d ?v0 (sup$a ?v1 ?v2 ))(or (member$d ?v0 ?v1 )(member$d ?v0 ?v2 )))):named a106 ))
(assert (! (forall ((?v0 T_T_dtree_sum_fun$ )(?v1 T$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$d ?v0 ?v1 )?v2 )(member$d ?v2 ?v3 ))(member$b ?v1 (vimage$a ?v0 ?v3 )))):named a107 ))
(assert (! (forall ((?v0 Dtree_T_dtree_sum_fun$ )(?v1 Dtree$ )(?v2 T_dtree_sum$ )(?v3 T_dtree_sum_set$ ))(=> (and (= (fun_app$b ?v0 ?v1 )?v2 )(member$d ?v2 ?v3 ))(member$ ?v1 (vimage$ ?v0 ?v3 )))):named a108 ))
(assert (! (forall ((?v0 Dtree_dtree_fun$ )(?v1 Dtree$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$p ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$ ?v1 (vimage$f ?v0 ?v3 )))):named a109 ))
(assert (! (forall ((?v0 T_dtree_fun$ )(?v1 T$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$w ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$b ?v1 (vimage$g ?v0 ?v3 )))):named a110 ))
(assert (! (forall ((?v0 Dtree_T_fun$ )(?v1 Dtree$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$r ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$ ?v1 (vimage$h ?v0 ?v3 )))):named a111 ))
(assert (! (forall ((?v0 T_T_fun$ )(?v1 T$ )(?v2 T$ )(?v3 T_set$ ))(=> (and (= (fun_app$y ?v0 ?v1 )?v2 )(member$b ?v2 ?v3 ))(member$b ?v1 (vimage$i ?v0 ?v3 )))):named a112 ))
(assert (! (forall ((?v0 Dtree_dtree_prod_dtree_fun$ )(?v1 Dtree_dtree_prod$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$ak ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$c ?v1 (vimage$n ?v0 ?v3 )))):named a113 ))
(assert (! (forall ((?v0 T_dtree_sum_dtree_fun$ )(?v1 T_dtree_sum$ )(?v2 Dtree$ )(?v3 Dtree_set$ ))(=> (and (= (fun_app$j ?v0 ?v1 )?v2 )(member$ ?v2 ?v3 ))(member$d ?v1 (vimage$j ?v0 ?v3 )))):named a114 ))
(assert (! (forall ((?v0 Dtree_dtree_dtree_prod_fun$ )(?v1 Dtree$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= (fun_app$aj ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$ ?v1 (vimage$o ?v0 ?v3 )))):named a115 ))
(assert (! (forall ((?v0 T_dtree_dtree_prod_fun$ )(?v1 T$ )(?v2 Dtree_dtree_prod$ )(?v3 Dtree_dtree_prod_set$ ))(=> (and (= (fun_app$am ?v0 ?v1 )?v2 )(member$c ?v2 ?v3 ))(member$b ?v1 (vimage$p ?v0 ?v3 )))):named a116 ))
(check-sat )
;(get-unsat-core )
