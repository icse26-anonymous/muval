;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_set$ 0 )
(declare-sort A_a_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort Char_list_set$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort Char_list_bool_fun$ 0 )
(declare-sort Char_list_char_list_fun$ 0 )
(declare-sort Char_list_process_bool_fun$ 0 )
(declare-sort A_char_list_a_process_term_fun$ 0 )
(declare-sort Char_list_char_list_bool_fun_fun$ 0 )
(declare-sort Char_list_a_process_term_bool_fun$ 0 )
(declare-sort Char_list_process_char_list_process_bool_fun_fun$ 0 )
(declare-sort Char_list_a_process_term_char_list_a_process_term_bool_fun_fun$ 0 )
(declare-sort Nibble$ 0)
(declare-sort Char$ 0)
(declare-sort Char_list$ 0)
(declare-fun nibble0$ ()Nibble$)
(declare-fun nibble1$ ()Nibble$)
(declare-fun nibble2$ ()Nibble$)
(declare-fun nibble3$ ()Nibble$)
(declare-fun nibble4$ ()Nibble$)
(declare-fun nibble5$ ()Nibble$)
(declare-fun nibble6$ ()Nibble$)
(declare-fun nibble7$ ()Nibble$)
(declare-fun nibble8$ ()Nibble$)
(declare-fun nibble9$ ()Nibble$)
(declare-fun nibbleA$ ()Nibble$)
(declare-fun nibbleB$ ()Nibble$)
(declare-fun nibbleC$ ()Nibble$)
(declare-fun nibbleD$ ()Nibble$)
(declare-fun nibbleE$ ()Nibble$)
(declare-fun nibbleF$ ()Nibble$)
(declare-fun selectf$ (Char$)Nibble$)
(declare-fun selectg$ (Char$)Nibble$)
(declare-fun char$ (Nibble$ Nibble$ )Char$)
(declare-fun nil$ ()Char_list$)
(declare-fun hd$ (Char_list$)Char$)
(declare-fun tl$ (Char_list$)Char_list$)
(declare-fun cons$ (Char$ Char_list$ )Char_list$)
(declare-codatatypes ()((Char_list_process$ (action$ (prefOf$ Char_list$ )(contOf$ Char_list_process$ ))(choice$ (ch1Of$ Char_list_process$ )(ch2Of$ Char_list_process$ )))))
(declare-sort Char_list_a_process_term$ 0)
(declare-sort A_char_list_a_process_term_fun_char_list_a_process_term_prod$ 0)
(declare-fun select$ (Char_list_a_process_term$)A$)
(declare-fun var$ (A$ )Char_list_a_process_term$)
(declare-fun selecta$ (Char_list_a_process_term$)Char_list_process$)
(declare-fun proc$ (Char_list_process$ )Char_list_a_process_term$)
(declare-fun selectb$ (Char_list_a_process_term$)Char_list$)
(declare-fun selectc$ (Char_list_a_process_term$)Char_list_a_process_term$)
(declare-fun act$ (Char_list$ Char_list_a_process_term$ )Char_list_a_process_term$)
(declare-fun selectd$ (Char_list_a_process_term$)Char_list_a_process_term$)
(declare-fun selecte$ (Char_list_a_process_term$)Char_list_a_process_term$)
(declare-fun ch$ (Char_list_a_process_term$ Char_list_a_process_term$ )Char_list_a_process_term$)
(declare-fun selecth$ (A_char_list_a_process_term_fun_char_list_a_process_term_prod$)A_char_list_a_process_term_fun$)
(declare-fun selecti$ (A_char_list_a_process_term_fun_char_list_a_process_term_prod$)Char_list_a_process_term$)
(declare-fun pair$ (A_char_list_a_process_term_fun$ Char_list_a_process_term$ )A_char_list_a_process_term_fun_char_list_a_process_term_prod$)
(declare-fun uu$ ()Char_list_char_list_bool_fun_fun$ )
(declare-fun sys$ (Nat$ )Char_list_a_process_term$ )
(declare-fun uua$ ()A_a_bool_fun_fun$ )
(declare-fun uub$ ()Char_list_a_process_term_char_list_a_process_term_bool_fun_fun$ )
(declare-fun uuc$ (Char_list_set$ )Char_list_bool_fun$ )
(declare-fun uud$ (A_set$ )A_bool_fun$ )
(declare-fun uue$ ()Char_list_process_char_list_process_bool_fun_fun$ )
(declare-fun isACT$ (A_char_list_a_process_term_fun$ Char_list_a_process_term$ )Bool )
(declare-fun member$ (Char_list$ Char_list_set$ )Bool )
(declare-fun collect$ (A_bool_fun$ )A_set$ )
(declare-fun fun_app$ (Char_list_bool_fun$ Char_list$ )Bool )
(declare-fun guarded$ (A_char_list_a_process_term_fun$ )Bool )
(declare-fun member$a (A$ A_set$ )Bool )
(declare-fun collect$a (Char_list_bool_fun$ )Char_list_set$ )
(declare-fun fun_app$a (A_bool_fun$ A$ )Bool )
(declare-fun fun_app$b (Char_list_a_process_term_bool_fun$ Char_list_a_process_term$ )Bool )
(declare-fun fun_app$c (Char_list_a_process_term_char_list_a_process_term_bool_fun_fun$ Char_list_a_process_term$ )Char_list_a_process_term_bool_fun$ )
(declare-fun fun_app$d (Char_list_process_bool_fun$ Char_list_process$ )Bool )
(declare-fun fun_app$e (Char_list_process_char_list_process_bool_fun_fun$ Char_list_process$ )Char_list_process_bool_fun$ )
(declare-fun fun_app$f (Char_list_char_list_bool_fun_fun$ Char_list$ )Char_list_bool_fun$ )
(declare-fun fun_app$g (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun fun_app$h (A_char_list_a_process_term_fun$ A$ )Char_list_a_process_term$ )
(declare-fun fun_app$i (A_a_fun$ A$ )A$ )
(declare-fun fun_app$j (Char_list_char_list_fun$ Char_list$ )Char_list$ )
(declare-fun solution$ (A_char_list_a_process_term_fun$ Char_list_a_process_term$ )Char_list_process$ )
(declare-fun rel_process$ (Char_list_char_list_bool_fun_fun$ )Char_list_process_char_list_process_bool_fun_fun$ )
(declare-fun pred_process$ (Char_list_bool_fun$ Char_list_process$ )Bool )
(declare-fun map_process_term$ (Char_list_char_list_fun$ A_a_fun$ Char_list_a_process_term$ )Char_list_a_process_term$ )
(declare-fun rel_process_term$ (Char_list_char_list_bool_fun_fun$ A_a_bool_fun_fun$ )Char_list_a_process_term_char_list_a_process_term_bool_fun_fun$ )
(declare-fun pred_process_term$ (Char_list_bool_fun$ A_bool_fun$ Char_list_a_process_term$ )Bool )
(declare-fun set1_process_term$ (Char_list_a_process_term$ )Char_list_set$ )
(declare-fun set2_process_term$ (Char_list_a_process_term$ )A_set$ )
(assert (! (forall ((?v0 Char_list_set$ )(?v1 Char_list$ ))(! (= (fun_app$ (uuc$ ?v0 )?v1 )(member$ ?v1 ?v0 )):pattern ((fun_app$ (uuc$ ?v0 )?v1 )))):named a0 ))
(assert (! (forall ((?v0 A_set$ )(?v1 A$ ))(! (= (fun_app$a (uud$ ?v0 )?v1 )(member$a ?v1 ?v0 )):pattern ((fun_app$a (uud$ ?v0 )?v1 )))):named a1 ))
(assert (! (forall ((?v0 Char_list_a_process_term$ )(?v1 Char_list_a_process_term$ ))(! (= (fun_app$b (fun_app$c uub$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$b (fun_app$c uub$ ?v0 )?v1 )))):named a2 ))
(assert (! (forall ((?v0 Char_list_process$ )(?v1 Char_list_process$ ))(! (= (fun_app$d (fun_app$e uue$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$d (fun_app$e uue$ ?v0 )?v1 )))):named a3 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list$ ))(! (= (fun_app$ (fun_app$f uu$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$ (fun_app$f uu$ ?v0 )?v1 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(! (= (fun_app$a (fun_app$g uua$ ?v0 )?v1 )(= ?v0 ?v1 )):pattern ((fun_app$a (fun_app$g uua$ ?v0 )?v1 )))):named a5 ))
(assert (! (not (forall ((?v0 Nat$ )(?v1 A$ ))(not (= (sys$ ?v0 )(var$ ?v1 ))))):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (= (var$ ?v0 )(var$ ?v1 ))(= ?v0 ?v1 ))):named a7 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun$ ))(= (guarded$ ?v0 )(forall ((?v1 A$ )(?v2 A$ ))(not (= (fun_app$h ?v0 ?v1 )(var$ ?v2 )))))):named a8 ))
(assert (! (forall ((?v0 Char_list_bool_fun$ )(?v1 A_bool_fun$ )(?v2 A$ ))(! (= (pred_process_term$ ?v0 ?v1 (var$ ?v2 ))(fun_app$a ?v1 ?v2 )):pattern ((pred_process_term$ ?v0 ?v1 (var$ ?v2 ))))):named a9 ))
(assert (! (forall ((?v0 A$ ))(member$a ?v0 (set2_process_term$ (var$ ?v0 )))):named a10 ))
(assert (! (forall ((?v0 Char_list_char_list_fun$ )(?v1 A_a_fun$ )(?v2 A$ ))(! (= (map_process_term$ ?v0 ?v1 (var$ ?v2 ))(var$ (fun_app$i ?v1 ?v2 ))):pattern ((map_process_term$ ?v0 ?v1 (var$ ?v2 ))))):named a11 ))
(assert (! (forall ((?v0 A$ )(?v1 Char_list$ )(?v2 Char_list_a_process_term$ ))(not (= (var$ ?v0 )(act$ ?v1 ?v2 )))):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(not (= (var$ ?v0 )(ch$ ?v1 ?v2 )))):named a13 ))
(assert (! (forall ((?v0 A$ )(?v1 Char_list_process$ ))(not (= (var$ ?v0 )(proc$ ?v1 )))):named a14 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 A$ ))(! (= (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(var$ ?v2 ))(var$ ?v3 ))(fun_app$a (fun_app$g ?v1 ?v2 )?v3 )):pattern ((fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(var$ ?v2 ))(var$ ?v3 ))))):named a15 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 A$ )(?v3 Char_list_char_list_bool_fun_fun$ ))(=> (fun_app$a (fun_app$g ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c (rel_process_term$ ?v3 ?v0 )(var$ ?v1 ))(var$ ?v2 )))):named a16 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun$ )(?v1 A$ ))(! (=> (guarded$ ?v0 )(= (isACT$ ?v0 (var$ ?v1 ))(isACT$ ?v0 (fun_app$h ?v0 ?v1 )))):pattern ((isACT$ ?v0 (var$ ?v1 ))))):named a17 ))
(assert (! (forall ((?v0 Char_list_process$ )(?v1 Char_list_process$ ))(= (= (proc$ ?v0 )(proc$ ?v1 ))(= ?v0 ?v1 ))):named a18 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(= (= (act$ ?v0 ?v1 )(act$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a19 ))
(assert (! (forall ((?v0 Char_list_a_process_term$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(= (= (ch$ ?v0 ?v1 )(ch$ ?v2 ?v3 ))(and (= ?v0 ?v2 )(= ?v1 ?v3 )))):named a20 ))
(assert (! (forall ((?v0 Char_list_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(! (= (pred_process_term$ ?v0 ?v1 (act$ ?v2 ?v3 ))(and (fun_app$ ?v0 ?v2 )(pred_process_term$ ?v0 ?v1 ?v3 ))):pattern ((pred_process_term$ ?v0 ?v1 (act$ ?v2 ?v3 ))))):named a21 ))
(assert (! (forall ((?v0 Char_list_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(! (= (pred_process_term$ ?v0 ?v1 (ch$ ?v2 ?v3 ))(and (pred_process_term$ ?v0 ?v1 ?v2 )(pred_process_term$ ?v0 ?v1 ?v3 ))):pattern ((pred_process_term$ ?v0 ?v1 (ch$ ?v2 ?v3 ))))):named a22 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_a_process_term$ )(?v5 Char_list_a_process_term$ ))(! (= (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(ch$ ?v2 ?v3 ))(ch$ ?v4 ?v5 ))(and (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v2 )?v4 )(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(ch$ ?v2 ?v3 ))(ch$ ?v4 ?v5 ))))):named a23 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list$ )(?v5 Char_list_a_process_term$ ))(! (= (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(act$ ?v2 ?v3 ))(act$ ?v4 ?v5 ))(and (fun_app$ (fun_app$f ?v0 ?v2 )?v4 )(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v3 )?v5 ))):pattern ((fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(act$ ?v2 ?v3 ))(act$ ?v4 ?v5 ))))):named a24 ))
(assert (! (forall ((?v0 Char_list_char_list_fun$ )(?v1 A_a_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(! (= (map_process_term$ ?v0 ?v1 (ch$ ?v2 ?v3 ))(ch$ (map_process_term$ ?v0 ?v1 ?v2 )(map_process_term$ ?v0 ?v1 ?v3 ))):pattern ((map_process_term$ ?v0 ?v1 (ch$ ?v2 ?v3 ))))):named a25 ))
(assert (! (forall ((?v0 Char_list_char_list_fun$ )(?v1 A_a_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(! (= (map_process_term$ ?v0 ?v1 (act$ ?v2 ?v3 ))(act$ (fun_app$j ?v0 ?v2 )(map_process_term$ ?v0 ?v1 ?v3 ))):pattern ((map_process_term$ ?v0 ?v1 (act$ ?v2 ?v3 ))))):named a26 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_a_process_term$ ))(! (= (set2_process_term$ (act$ ?v0 ?v1 ))(set2_process_term$ ?v1 )):pattern ((act$ ?v0 ?v1 )))):named a27 ))
(assert (! (= (rel_process_term$ uu$ uua$ )uub$ ):named a28 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun$ )(?v1 Char_list$ )(?v2 Char_list_a_process_term$ ))(! (= (isACT$ ?v0 (act$ ?v1 ?v2 ))true ):pattern ((isACT$ ?v0 (act$ ?v1 ?v2 ))))):named a29 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(! (= (isACT$ ?v0 (ch$ ?v1 ?v2 ))false ):pattern ((isACT$ ?v0 (ch$ ?v1 ?v2 ))))):named a30 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun$ )(?v1 Char_list_a_process_term$ ))(=> (and (=> (isACT$ ?v0 ?v1 )false )(=> (not (isACT$ ?v0 ?v1 ))false ))false )):named a31 ))
(assert (! (forall ((?v0 Char_list_a_process_term$ ))(=> (and (forall ((?v1 A$ ))(=> (= ?v0 (var$ ?v1 ))false ))(and (forall ((?v1 Char_list_process$ ))(=> (= ?v0 (proc$ ?v1 ))false ))(and (forall ((?v1 Char_list$ )(?v2 Char_list_a_process_term$ ))(=> (= ?v0 (act$ ?v1 ?v2 ))false ))(forall ((?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(=> (= ?v0 (ch$ ?v1 ?v2 ))false )))))false )):named a32 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_a_process_term$ )(?v5 Char_list_a_process_term$ ))(=> (and (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v2 )?v3 )(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v4 )?v5 ))(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(ch$ ?v2 ?v4 ))(ch$ ?v3 ?v5 )))):named a33 ))
(assert (! (forall ((?v0 A$ )(?v1 Char_list_a_process_term$ ))(=> (and (member$a ?v0 (set2_process_term$ ?v1 ))(and (=> (= ?v1 (var$ ?v0 ))false )(and (forall ((?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(=> (and (= ?v1 (act$ ?v2 ?v3 ))(member$a ?v0 (set2_process_term$ ?v3 )))false ))(and (forall ((?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(=> (and (= ?v1 (ch$ ?v2 ?v3 ))(member$a ?v0 (set2_process_term$ ?v2 )))false ))(forall ((?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(=> (and (= ?v1 (ch$ ?v2 ?v3 ))(member$a ?v0 (set2_process_term$ ?v3 )))false ))))))false )):named a34 ))
(assert (! (forall ((?v0 A$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(=> (member$a ?v0 (set2_process_term$ ?v1 ))(member$a ?v0 (set2_process_term$ (ch$ ?v1 ?v2 ))))):named a35 ))
(assert (! (forall ((?v0 A$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(=> (member$a ?v0 (set2_process_term$ ?v1 ))(member$a ?v0 (set2_process_term$ (ch$ ?v2 ?v1 ))))):named a36 ))
(assert (! (forall ((?v0 A$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list$ ))(=> (member$a ?v0 (set2_process_term$ ?v1 ))(member$a ?v0 (set2_process_term$ (act$ ?v2 ?v1 ))))):named a37 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 Char_list$ )(?v2 Char_list$ )(?v3 A_a_bool_fun_fun$ )(?v4 Char_list_a_process_term$ )(?v5 Char_list_a_process_term$ ))(=> (and (fun_app$ (fun_app$f ?v0 ?v1 )?v2 )(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v3 )?v4 )?v5 ))(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v3 )(act$ ?v1 ?v4 ))(act$ ?v2 ?v5 )))):named a38 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(not (= (act$ ?v0 ?v1 )(ch$ ?v2 ?v3 )))):named a39 ))
(assert (! (forall ((?v0 Char_list_process$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(not (= (proc$ ?v0 )(ch$ ?v1 ?v2 )))):named a40 ))
(assert (! (forall ((?v0 Char_list_process$ )(?v1 Char_list$ )(?v2 Char_list_a_process_term$ ))(not (= (proc$ ?v0 )(act$ ?v1 ?v2 )))):named a41 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list$ )(?v5 Char_list_a_process_term$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(ch$ ?v2 ?v3 ))(act$ ?v4 ?v5 )))):named a42 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_process$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(ch$ ?v2 ?v3 ))(proc$ ?v4 )))):named a43 ))
(assert (! (forall ((?v0 A_bool_fun$ )(?v1 A_bool_fun$ ))(=> (forall ((?v2 A$ ))(= (fun_app$a ?v0 ?v2 )(fun_app$a ?v1 ?v2 )))(= (collect$ ?v0 )(collect$ ?v1 )))):named a44 ))
(assert (! (forall ((?v0 Char_list_set$ ))(= (collect$a (uuc$ ?v0 ))?v0 )):named a45 ))
(assert (! (forall ((?v0 A_set$ ))(= (collect$ (uud$ ?v0 ))?v0 )):named a46 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_bool_fun$ ))(= (member$ ?v0 (collect$a ?v1 ))(fun_app$ ?v1 ?v0 ))):named a47 ))
(assert (! (forall ((?v0 A$ )(?v1 A_bool_fun$ ))(= (member$a ?v0 (collect$ ?v1 ))(fun_app$a ?v1 ?v0 ))):named a48 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_a_process_term$ )(?v5 Char_list_a_process_term$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(act$ ?v2 ?v3 ))(ch$ ?v4 ?v5 )))):named a49 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_process$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(act$ ?v2 ?v3 ))(proc$ ?v4 )))):named a50 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_process$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_a_process_term$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(proc$ ?v2 ))(ch$ ?v3 ?v4 )))):named a51 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_process$ )(?v3 Char_list$ )(?v4 Char_list_a_process_term$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(proc$ ?v2 ))(act$ ?v3 ?v4 )))):named a52 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_process$ )(?v3 A$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(proc$ ?v2 ))(var$ ?v3 )))):named a53 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 Char_list_process$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(var$ ?v2 ))(proc$ ?v3 )))):named a54 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_a_process_term$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(var$ ?v2 ))(ch$ ?v3 ?v4 )))):named a55 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ )(?v4 A$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(ch$ ?v2 ?v3 ))(var$ ?v4 )))):named a56 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 A$ )(?v3 Char_list$ )(?v4 Char_list_a_process_term$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(var$ ?v2 ))(act$ ?v3 ?v4 )))):named a57 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ )(?v4 A$ ))(not (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )(act$ ?v2 ?v3 ))(var$ ?v4 )))):named a58 ))
(assert (! (forall ((?v0 Char_list_bool_fun$ )(?v1 A_bool_fun$ )(?v2 Char_list_process$ ))(! (= (pred_process_term$ ?v0 ?v1 (proc$ ?v2 ))(pred_process$ ?v0 ?v2 )):pattern ((pred_process_term$ ?v0 ?v1 (proc$ ?v2 ))))):named a59 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ )(?v4 Char_list_a_process_term_char_list_a_process_term_bool_fun_fun$ ))(=> (and (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v5 A$ )(?v6 A$ ))(=> (fun_app$a (fun_app$g ?v1 ?v5 )?v6 )(fun_app$b (fun_app$c ?v4 (var$ ?v5 ))(var$ ?v6 ))))(and (forall ((?v5 Char_list_process$ )(?v6 Char_list_process$ ))(=> (fun_app$d (fun_app$e (rel_process$ ?v0 )?v5 )?v6 )(fun_app$b (fun_app$c ?v4 (proc$ ?v5 ))(proc$ ?v6 ))))(and (forall ((?v5 Char_list$ )(?v6 Char_list_a_process_term$ )(?v7 Char_list$ )(?v8 Char_list_a_process_term$ ))(=> (and (fun_app$ (fun_app$f ?v0 ?v5 )?v7 )(fun_app$b (fun_app$c ?v4 ?v6 )?v8 ))(fun_app$b (fun_app$c ?v4 (act$ ?v5 ?v6 ))(act$ ?v7 ?v8 ))))(forall ((?v5 Char_list_a_process_term$ )(?v6 Char_list_a_process_term$ )(?v7 Char_list_a_process_term$ )(?v8 Char_list_a_process_term$ ))(=> (and (fun_app$b (fun_app$c ?v4 ?v5 )?v7 )(fun_app$b (fun_app$c ?v4 ?v6 )?v8 ))(fun_app$b (fun_app$c ?v4 (ch$ ?v5 ?v6 ))(ch$ ?v7 ?v8 ))))))))(fun_app$b (fun_app$c ?v4 ?v2 )?v3 ))):named a60 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 A_a_bool_fun_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(=> (and (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v2 )?v3 )(and (forall ((?v4 A$ )(?v5 A$ ))(=> (and (= ?v2 (var$ ?v4 ))(and (= ?v3 (var$ ?v5 ))(fun_app$a (fun_app$g ?v1 ?v4 )?v5 )))false ))(and (forall ((?v4 Char_list_process$ )(?v5 Char_list_process$ ))(=> (and (= ?v2 (proc$ ?v4 ))(and (= ?v3 (proc$ ?v5 ))(fun_app$d (fun_app$e (rel_process$ ?v0 )?v4 )?v5 )))false ))(and (forall ((?v4 Char_list$ )(?v5 Char_list_a_process_term$ )(?v6 Char_list$ )(?v7 Char_list_a_process_term$ ))(=> (and (= ?v2 (act$ ?v4 ?v5 ))(and (= ?v3 (act$ ?v6 ?v7 ))(and (fun_app$ (fun_app$f ?v0 ?v4 )?v6 )(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v5 )?v7 ))))false ))(forall ((?v4 Char_list_a_process_term$ )(?v5 Char_list_a_process_term$ )(?v6 Char_list_a_process_term$ )(?v7 Char_list_a_process_term$ ))(=> (and (= ?v2 (ch$ ?v4 ?v5 ))(and (= ?v3 (ch$ ?v6 ?v7 ))(and (fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v4 )?v6 )(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v1 )?v5 )?v7 ))))false ))))))false )):named a61 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun_char_list_a_process_term_prod$ ))(=> (and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 A$ ))(=> (= ?v0 (pair$ ?v1 (var$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_process$ ))(=> (= ?v0 (pair$ ?v1 (proc$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (act$ ?v2 ?v3 )))false ))(forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (ch$ ?v2 ?v3 )))false )))))false )):named a62 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun_char_list_a_process_term_prod$ ))(=> (and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 A$ ))(=> (= ?v0 (pair$ ?v1 (var$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_process$ ))(=> (= ?v0 (pair$ ?v1 (proc$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (act$ ?v2 ?v3 )))false ))(forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (ch$ ?v2 ?v3 )))false )))))false )):named a63 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun_char_list_a_process_term_prod$ ))(=> (and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 A$ ))(=> (= ?v0 (pair$ ?v1 (var$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_process$ ))(=> (= ?v0 (pair$ ?v1 (proc$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (act$ ?v2 ?v3 )))false ))(forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (ch$ ?v2 ?v3 )))false )))))false )):named a64 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun_char_list_a_process_term_prod$ ))(=> (and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 A$ ))(=> (= ?v0 (pair$ ?v1 (var$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_process$ ))(=> (= ?v0 (pair$ ?v1 (proc$ ?v2 )))false ))(and (forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list_a_process_term$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (ch$ ?v2 ?v3 )))false ))(forall ((?v1 A_char_list_a_process_term_fun$ )(?v2 Char_list$ )(?v3 Char_list_a_process_term$ ))(=> (= ?v0 (pair$ ?v1 (act$ ?v2 ?v3 )))false )))))false )):named a65 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun$ )(?v1 A$ ))(! (=> (guarded$ ?v0 )(= (solution$ ?v0 (var$ ?v1 ))(solution$ ?v0 (fun_app$h ?v0 ?v1 )))):pattern ((solution$ ?v0 (var$ ?v1 ))))):named a66 ))
(assert (! (forall ((?v0 Char_list_a_process_term$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_char_list_fun$ )(?v3 Char_list_char_list_fun$ )(?v4 A_a_fun$ )(?v5 A_a_fun$ ))(=> (and (forall ((?v6 Char_list$ )(?v7 Char_list$ ))(=> (and (member$ ?v6 (set1_process_term$ ?v0 ))(and (member$ ?v7 (set1_process_term$ ?v1 ))(= (fun_app$j ?v2 ?v6 )(fun_app$j ?v3 ?v7 ))))(= ?v6 ?v7 )))(and (forall ((?v6 A$ )(?v7 A$ ))(=> (and (member$a ?v6 (set2_process_term$ ?v0 ))(and (member$a ?v7 (set2_process_term$ ?v1 ))(= (fun_app$i ?v4 ?v6 )(fun_app$i ?v5 ?v7 ))))(= ?v6 ?v7 )))(= (map_process_term$ ?v2 ?v4 ?v0 )(map_process_term$ ?v3 ?v5 ?v1 ))))(= ?v0 ?v1 ))):named a67 ))
(assert (! (forall ((?v0 Char_list_a_process_term$ )(?v1 Char_list_char_list_fun$ )(?v2 Char_list_char_list_fun$ )(?v3 A_a_fun$ )(?v4 A_a_fun$ ))(=> (and (forall ((?v5 Char_list$ ))(=> (member$ ?v5 (set1_process_term$ ?v0 ))(= (fun_app$j ?v1 ?v5 )(fun_app$j ?v2 ?v5 ))))(forall ((?v5 A$ ))(=> (member$a ?v5 (set2_process_term$ ?v0 ))(= (fun_app$i ?v3 ?v5 )(fun_app$i ?v4 ?v5 )))))(= (map_process_term$ ?v1 ?v3 ?v0 )(map_process_term$ ?v2 ?v4 ?v0 )))):named a68 ))
(assert (! (forall ((?v0 Char_list_a_process_term$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_char_list_fun$ )(?v3 Char_list_char_list_fun$ )(?v4 A_a_fun$ )(?v5 A_a_fun$ ))(=> (and (= ?v0 ?v1 )(and (forall ((?v6 Char_list$ ))(=> (member$ ?v6 (set1_process_term$ ?v1 ))(= (fun_app$j ?v2 ?v6 )(fun_app$j ?v3 ?v6 ))))(forall ((?v6 A$ ))(=> (member$a ?v6 (set2_process_term$ ?v1 ))(= (fun_app$i ?v4 ?v6 )(fun_app$i ?v5 ?v6 ))))))(= (map_process_term$ ?v2 ?v4 ?v0 )(map_process_term$ ?v3 ?v5 ?v1 )))):named a69 ))
(assert (! (forall ((?v0 A_char_list_a_process_term_fun$ )(?v1 Char_list_process$ ))(! (= (solution$ ?v0 (proc$ ?v1 ))?v1 ):pattern ((solution$ ?v0 (proc$ ?v1 ))))):named a70 ))
(assert (! (= (rel_process$ uu$ )uue$ ):named a71 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_a_process_term$ ))(member$ ?v0 (set1_process_term$ (act$ ?v0 ?v1 )))):named a72 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list$ ))(=> (member$ ?v0 (set1_process_term$ ?v1 ))(member$ ?v0 (set1_process_term$ (act$ ?v2 ?v1 ))))):named a73 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(=> (member$ ?v0 (set1_process_term$ ?v1 ))(member$ ?v0 (set1_process_term$ (ch$ ?v2 ?v1 ))))):named a74 ))
(assert (! (forall ((?v0 Char_list$ )(?v1 Char_list_a_process_term$ )(?v2 Char_list_a_process_term$ ))(=> (member$ ?v0 (set1_process_term$ ?v1 ))(member$ ?v0 (set1_process_term$ (ch$ ?v1 ?v2 ))))):named a75 ))
(assert (! (forall ((?v0 Char_list_char_list_bool_fun_fun$ )(?v1 Char_list_process$ )(?v2 Char_list_process$ )(?v3 A_a_bool_fun_fun$ ))(=> (fun_app$d (fun_app$e (rel_process$ ?v0 )?v1 )?v2 )(fun_app$b (fun_app$c (rel_process_term$ ?v0 ?v3 )(proc$ ?v1 ))(proc$ ?v2 )))):named a76 ))
(check-sat )
;(get-unsat-core )
