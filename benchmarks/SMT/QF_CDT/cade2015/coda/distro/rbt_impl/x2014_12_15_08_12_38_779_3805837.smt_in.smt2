;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort B_b_fun$ 0 )
(declare-sort A_bool_fun$ 0 )
(declare-sort A_a_bool_fun_fun$ 0 )
(declare-sort A_b_b_b_fun_fun_fun$ 0 )
(declare-sort Color$ 0)
(declare-sort A_b_rbt$ 0)
(declare-fun r$ ()Color$)
(declare-fun b$ ()Color$)
(declare-fun empty$ ()A_b_rbt$)
(declare-fun select$ (A_b_rbt$)Color$)
(declare-fun selecta$ (A_b_rbt$)A_b_rbt$)
(declare-fun selectb$ (A_b_rbt$)A$)
(declare-fun selectc$ (A_b_rbt$)B$)
(declare-fun selectd$ (A_b_rbt$)A_b_rbt$)
(declare-fun branch$ (Color$ A_b_rbt$ A$ B$ A_b_rbt$ )A_b_rbt$)
(declare-fun f$ ()B_b_fun$ )
(declare-fun k$ ()A$ )
(declare-fun t$ ()A_b_rbt$ )
(declare-fun inv1$ (A_b_rbt$ )Bool )
(declare-fun inv2$ (A_b_rbt$ )Bool )
(declare-fun less$ ()A_a_bool_fun_fun$ )
(declare-fun paint$ (Color$ A_b_rbt$ )A_b_rbt$ )
(declare-fun is_rbt$ (A_a_bool_fun_fun$ A_b_rbt$ )Bool )
(declare-fun fun_app$ (A_bool_fun$ A$ )Bool )
(declare-fun rbt_ins$ (A_a_bool_fun_fun$ A_b_b_b_fun_fun_fun$ A$ B$ A_b_rbt$ )A_b_rbt$ )
(declare-fun color_of$ (A_b_rbt$ )Color$ )
(declare-fun fun_app$a (A_a_bool_fun_fun$ A$ )A_bool_fun$ )
(declare-fun rbt_less$ (A_a_bool_fun_fun$ A$ A_b_rbt$ )Bool )
(declare-fun rbt_sorted$ (A_a_bool_fun_fun$ A_b_rbt$ )Bool )
(declare-fun rbt_map_entry$ (A_a_bool_fun_fun$ A$ B_b_fun$ A_b_rbt$ )A_b_rbt$ )
(assert (! (not (= (and (inv1$ (rbt_map_entry$ less$ k$ f$ t$ ))(and (inv2$ (rbt_map_entry$ less$ k$ f$ t$ ))(and (= (color_of$ (rbt_map_entry$ less$ k$ f$ t$ ))b$ )(rbt_sorted$ less$ (rbt_map_entry$ less$ k$ f$ t$ )))))(and (inv1$ t$ )(and (inv2$ t$ )(and (= (color_of$ t$ )b$ )(rbt_sorted$ less$ t$ )))))):named a0 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(=> (and (fun_app$ (fun_app$a less$ ?v0 )?v1 )(= ?v1 ?v2 ))(fun_app$ (fun_app$a less$ ?v0 )?v2 ))):named a1 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(=> (and (= ?v0 ?v1 )(fun_app$ (fun_app$a less$ ?v1 )?v2 ))(fun_app$ (fun_app$a less$ ?v0 )?v2 ))):named a2 ))
(assert (! (forall ((?v0 A$ )(?v1 B_b_fun$ )(?v2 A_b_rbt$ ))(= (rbt_sorted$ less$ (rbt_map_entry$ less$ ?v0 ?v1 ?v2 ))(rbt_sorted$ less$ ?v2 ))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 B_b_fun$ )(?v2 A_b_rbt$ ))(= (inv1$ (rbt_map_entry$ less$ ?v0 ?v1 ?v2 ))(inv1$ ?v2 ))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 B_b_fun$ )(?v2 A_b_rbt$ ))(= (inv2$ (rbt_map_entry$ less$ ?v0 ?v1 ?v2 ))(inv2$ ?v2 ))):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 B_b_fun$ )(?v2 A_b_rbt$ ))(= (color_of$ (rbt_map_entry$ less$ ?v0 ?v1 ?v2 ))(color_of$ ?v2 ))):named a6 ))
(assert (! (forall ((?v0 A_b_rbt$ ))(=> (is_rbt$ less$ ?v0 )(rbt_sorted$ less$ ?v0 ))):named a7 ))
(assert (! (forall ((?v0 A_b_rbt$ ))(! (= (is_rbt$ less$ ?v0 )(and (inv1$ ?v0 )(and (inv2$ ?v0 )(and (= (color_of$ ?v0 )b$ )(rbt_sorted$ less$ ?v0 ))))):pattern ((is_rbt$ less$ ?v0 )))):named a8 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 B_b_fun$ )(?v3 A_b_rbt$ ))(= (rbt_sorted$ ?v0 (rbt_map_entry$ ?v0 ?v1 ?v2 ?v3 ))(rbt_sorted$ ?v0 ?v3 ))):named a9 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 B_b_fun$ )(?v3 A_b_rbt$ ))(= (inv1$ (rbt_map_entry$ ?v0 ?v1 ?v2 ?v3 ))(inv1$ ?v3 ))):named a10 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 B_b_fun$ )(?v3 A_b_rbt$ ))(= (inv2$ (rbt_map_entry$ ?v0 ?v1 ?v2 ?v3 ))(inv2$ ?v3 ))):named a11 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A$ )(?v2 B_b_fun$ )(?v3 A_b_rbt$ ))(= (color_of$ (rbt_map_entry$ ?v0 ?v1 ?v2 ?v3 ))(color_of$ ?v3 ))):named a12 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A_b_b_b_fun_fun_fun$ )(?v2 A$ )(?v3 B$ ))(=> (and (inv1$ ?v0 )(and (inv2$ ?v0 )(= (color_of$ ?v0 )b$ )))(inv1$ (rbt_ins$ less$ ?v1 ?v2 ?v3 ?v0 )))):named a13 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A_b_b_b_fun_fun_fun$ )(?v2 A$ )(?v3 B$ ))(=> (and (inv1$ ?v0 )(inv2$ ?v0 ))(inv2$ (rbt_ins$ less$ ?v1 ?v2 ?v3 ?v0 )))):named a14 ))
(assert (! (forall ((?v0 A_a_bool_fun_fun$ )(?v1 A_b_rbt$ ))(! (= (is_rbt$ ?v0 ?v1 )(and (inv1$ ?v1 )(and (inv2$ ?v1 )(and (= (color_of$ ?v1 )b$ )(rbt_sorted$ ?v0 ?v1 ))))):pattern ((is_rbt$ ?v0 ?v1 )))):named a15 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 Color$ ))(=> (rbt_sorted$ less$ ?v0 )(rbt_sorted$ less$ (paint$ ?v1 ?v0 )))):named a16 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 B_b_fun$ )(?v3 A_b_rbt$ ))(= (rbt_less$ less$ ?v0 (rbt_map_entry$ less$ ?v1 ?v2 ?v3 ))(rbt_less$ less$ ?v0 ?v3 ))):named a17 ))
(check-sat )
;(get-unsat-core )
