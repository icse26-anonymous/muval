;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Color$ 0)
(declare-sort A_b_rbt$ 0)
(declare-fun r$ ()Color$)
(declare-fun b$ ()Color$)
(declare-fun empty$ ()A_b_rbt$)
(declare-fun select$ (A_b_rbt$)Color$)
(declare-fun selecta$ (A_b_rbt$)A_b_rbt$)
(declare-fun selectb$ (A_b_rbt$)A$)
(declare-fun selectc$ (A_b_rbt$)B$)
(declare-fun selectd$ (A_b_rbt$)A_b_rbt$)
(declare-fun branch$ (Color$ A_b_rbt$ A$ B$ A_b_rbt$ )A_b_rbt$)
(declare-fun bb$ ()A_b_rbt$ )
(declare-fun mt$ ()A_b_rbt$ )
(declare-fun inv1$ (A_b_rbt$ )Bool )
(declare-fun inv2$ (A_b_rbt$ )Bool )
(declare-fun less$ (A$ A$ )Bool )
(assert (! (not (and (inv2$ mt$ )(inv1$ mt$ ))):named a0 ))
(assert (! (inv1$ bb$ ):named a1 ))
(assert (! (inv2$ bb$ ):named a2 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (not (less$ ?v0 ?v1 ))(or (less$ ?v1 ?v0 )(= ?v0 ?v1 )))):named a3 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(= (not (= ?v0 ?v1 ))(or (less$ ?v0 ?v1 )(less$ ?v1 ?v0 )))):named a4 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (and (=> (less$ ?v0 ?v1 )false )(and (=> (= ?v0 ?v1 )false )(=> (less$ ?v1 ?v0 )false )))false )):named a5 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (and (less$ ?v0 ?v1 )(=> (not false )(less$ ?v1 ?v0 )))false )):named a6 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(=> (and (less$ ?v0 ?v1 )(less$ ?v1 ?v2 ))(less$ ?v0 ?v2 ))):named a7 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(=> (and (less$ ?v0 ?v1 )(less$ ?v1 ?v2 ))(less$ ?v0 ?v2 ))):named a8 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(=> (and (less$ ?v0 ?v1 )(less$ ?v2 ?v0 ))(less$ ?v2 ?v1 ))):named a9 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (and (less$ ?v0 ?v1 )(less$ ?v1 ?v0 ))false )):named a10 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (and (less$ ?v0 ?v1 )(less$ ?v1 ?v0 ))false )):named a11 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (and (less$ ?v0 ?v1 )(less$ ?v1 ?v0 ))false )):named a12 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 A$ ))(=> (and (less$ ?v0 ?v1 )(= ?v1 ?v2 ))(less$ ?v0 ?v2 ))):named a13 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (less$ ?v0 ?v1 )(= (= ?v1 ?v0 )false ))):named a14 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (less$ ?v0 ?v1 )(= (= ?v0 ?v1 )false ))):named a15 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ )(?v2 Bool ))(=> (less$ ?v0 ?v1 )(= (=> (less$ ?v1 ?v0 )?v2 )true ))):named a16 ))
(assert (! (forall ((?v0 A$ )(?v1 A$ ))(=> (less$ ?v0 ?v1 )(= (not (less$ ?v1 ?v0 ))true ))):named a17 ))
(check-sat )
;(get-unsat-core )
