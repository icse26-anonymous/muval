;(set-option :produce-unsat-cores true )
(set-logic ALL_SUPPORTED )
(declare-sort A$ 0 )
(declare-sort B$ 0 )
(declare-sort Nat$ 0 )
(declare-sort A_b_prod_set$ 0 )
(declare-sort A_b_prod$ 0)
(declare-sort A_b_prod_list$ 0)
(declare-sort Color$ 0)
(declare-sort A_b_rbt$ 0)
(declare-fun fst$ (A_b_prod$)A$)
(declare-fun snd$ (A_b_prod$)B$)
(declare-fun pair$ (A$ B$ )A_b_prod$)
(declare-fun nil$ ()A_b_prod_list$)
(declare-fun hd$ (A_b_prod_list$)A_b_prod$)
(declare-fun tl$ (A_b_prod_list$)A_b_prod_list$)
(declare-fun cons$ (A_b_prod$ A_b_prod_list$ )A_b_prod_list$)
(declare-fun r$ ()Color$)
(declare-fun b$ ()Color$)
(declare-fun empty$ ()A_b_rbt$)
(declare-fun select$ (A_b_rbt$)Color$)
(declare-fun selecta$ (A_b_rbt$)A_b_rbt$)
(declare-fun selectb$ (A_b_rbt$)A$)
(declare-fun selectc$ (A_b_rbt$)B$)
(declare-fun selectd$ (A_b_rbt$)A_b_rbt$)
(declare-fun branch$ (Color$ A_b_rbt$ A$ B$ A_b_rbt$ )A_b_rbt$)
(declare-fun a$ ()A_b_rbt$ )
(declare-fun c$ ()A_b_rbt$ )
(declare-fun d$ ()A_b_rbt$ )
(declare-fun k$ ()A$ )
(declare-fun l$ ()A_b_rbt$ )
(declare-fun s$ ()A$ )
(declare-fun v$ ()B$ )
(declare-fun x$ ()B$ )
(declare-fun y$ ()B$ )
(declare-fun b$a ()A_b_rbt$ )
(declare-fun ka$ ()A$ )
(declare-fun r$a ()A_b_rbt$ )
(declare-fun va$ ()B$ )
(declare-fun kaa$ ()A$ )
(declare-fun lta$ ()A_b_rbt$ )
(declare-fun rta$ ()A_b_rbt$ )
(declare-fun set$ (A_b_prod_list$ )A_b_prod_set$ )
(declare-fun inv1$ (A_b_rbt$ )Bool )
(declare-fun inv2$ (A_b_rbt$ )Bool )
(declare-fun inv1l$ (A_b_rbt$ )Bool )
(declare-fun member$ (A_b_prod$ A_b_prod_set$ )Bool )
(declare-fun bheight$ (A_b_rbt$ )Nat$ )
(declare-fun combine$ (A_b_rbt$ A_b_rbt$ )A_b_rbt$ )
(declare-fun entries$ (A_b_rbt$ )A_b_prod_list$ )
(assert (! (not (= (member$ (pair$ k$ v$ )(set$ (entries$ (combine$ (branch$ b$ a$ ka$ x$ b$a )(branch$ b$ c$ s$ y$ d$ )))))(or (member$ (pair$ k$ v$ )(set$ (entries$ (branch$ b$ a$ ka$ x$ b$a ))))(member$ (pair$ k$ v$ )(set$ (entries$ (branch$ b$ c$ s$ y$ d$ ))))))):named a0 ))
(assert (! (inv1$ l$ ):named a1 ))
(assert (! (inv1$ r$a ):named a2 ))
(assert (! (inv2$ l$ ):named a3 ))
(assert (! (inv2$ r$a ):named a4 ))
(assert (! (= (combine$ b$a c$ )(branch$ r$ lta$ kaa$ va$ rta$ )):named a5 ))
(assert (! (forall ((?v0 Color$ )(?v1 A_b_rbt$ )(?v2 A$ )(?v3 B$ )(?v4 A_b_rbt$ )(?v5 Color$ )(?v6 A_b_rbt$ )(?v7 A$ )(?v8 B$ )(?v9 A_b_rbt$ ))(= (= (branch$ ?v0 ?v1 ?v2 ?v3 ?v4 )(branch$ ?v5 ?v6 ?v7 ?v8 ?v9 ))(and (= ?v0 ?v5 )(and (= ?v1 ?v6 )(and (= ?v2 ?v7 )(and (= ?v3 ?v8 )(= ?v4 ?v9 ))))))):named a6 ))
(assert (! (inv1$ (branch$ b$ a$ ka$ x$ b$a )):named a7 ))
(assert (! (inv1$ (branch$ b$ c$ s$ y$ d$ )):named a8 ))
(assert (! (inv2$ (branch$ b$ a$ ka$ x$ b$a )):named a9 ))
(assert (! (inv2$ (branch$ b$ c$ s$ y$ d$ )):named a10 ))
(assert (! (= (bheight$ (combine$ b$a c$ ))(bheight$ b$a )):named a11 ))
(assert (! (= (bheight$ (branch$ b$ a$ ka$ x$ b$a ))(bheight$ (branch$ b$ c$ s$ y$ d$ ))):named a12 ))
(assert (! (=> (and (inv2$ b$a )(and (inv2$ c$ )(and (= (bheight$ b$a )(bheight$ c$ ))(and (inv1$ b$a )(inv1$ c$ )))))(= (member$ (pair$ k$ v$ )(set$ (entries$ (combine$ b$a c$ ))))(or (member$ (pair$ k$ v$ )(set$ (entries$ b$a )))(member$ (pair$ k$ v$ )(set$ (entries$ c$ )))))):named a13 ))
(assert (! (inv1l$ (combine$ b$a c$ )):named a14 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A_b_rbt$ )(?v5 A$ )(?v6 B$ )(?v7 A_b_rbt$ ))(! (= (combine$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )(branch$ r$ ?v4 ?v5 ?v6 ?v7 ))(branch$ r$ (combine$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )?v4 )?v5 ?v6 ?v7 )):pattern ((combine$ (branch$ b$ ?v0 ?v1 ?v2 ?v3 )(branch$ r$ ?v4 ?v5 ?v6 ?v7 ))))):named a15 ))
(assert (! (forall ((?v0 A_b_rbt$ )(?v1 A$ )(?v2 B$ )(?v3 A_b_rbt$ )(?v4 A_b_rbt$ )(?v5 A$ )(?v6 B$ )(?v7 A_b_rbt$ ))(! (= (combine$ (branch$ r$ ?v0 ?v1 ?v2 ?v3 )(branch$ b$ ?v4 ?v5 ?v6 ?v7 ))(branch$ r$ ?v0 ?v1 ?v2 (combine$ ?v3 (branch$ b$ ?v4 ?v5 ?v6 ?v7 )))):pattern ((combine$ (branch$ r$ ?v0 ?v1 ?v2 ?v3 )(branch$ b$ ?v4 ?v5 ?v6 ?v7 ))))):named a16 ))
(assert (! (= (bheight$ l$ )(bheight$ r$a )):named a17 ))
(check-sat )
;(get-unsat-core )
