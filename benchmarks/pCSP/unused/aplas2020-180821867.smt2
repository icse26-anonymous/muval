(set-logic HORN)
(declare-fun X1 (Int Int) Bool)
(declare-fun X2 (Int) Bool)
(declare-fun X3 (Int Int) Bool)
(declare-fun X19 (Int) Bool)
(declare-fun X20 (Int) Bool)
(declare-fun X21 (Int) Bool)
(declare-fun X35 (Int) Bool)
(declare-fun X36 (Int) Bool)
(declare-fun X37 (Int) Bool)
(declare-fun X38 (Int) Bool)
(declare-fun X39 (Int) Bool)
(declare-fun X40 (Int) Bool)
(declare-fun X41 (Int) Bool)
(declare-fun X42 (Int) Bool)
(declare-fun X43 (Int) Bool)
(declare-fun X44 (Int) Bool)
(declare-fun X45 (Int) Bool)
(declare-fun X51 (Int) Bool)
(declare-fun X52 (Int) Bool)
(declare-fun X53 (Int) Bool)
(declare-fun X55 (Int) Bool)
(declare-fun X56 (Int) Bool)
(declare-fun X57 (Int) Bool)
(declare-fun X58 (Int) Bool)
(declare-fun X83 (Int) Bool)
(declare-fun X84 (Int) Bool)
(declare-fun X85 (Int) Bool)
(declare-fun X95 () Bool)
(declare-fun X98 (Int) Bool)
(declare-fun X99 (Int) Bool)
(declare-fun X100 (Int) Bool)
(declare-fun X101 (Int) Bool)
(declare-fun X103 (Int) Bool)
(declare-fun X119 (Int) Bool)
(declare-fun X120 (Int) Bool)
(declare-fun X121 (Int) Bool)
(declare-fun X122 (Int) Bool)
(declare-fun X123 (Int) Bool)
(declare-fun X124 () Bool)
(declare-fun X125 (Int) Bool)
(declare-fun X126 (Int) Bool)
(declare-fun X127 (Int) Bool)
(declare-fun X128 (Int) Bool)
(declare-fun X129 (Int) Bool)
(declare-fun X130 (Int) Bool)
(declare-fun X131 (Int) Bool)
(declare-fun X132 (Int) Bool)
(declare-fun X133 (Int Int) Bool)
(declare-fun X134 (Int) Bool)
(assert (forall ((x111 Int)) (=> (and (X2  x111) (<=  x111 0)) false)))
(assert (forall ((tmp113 Int)(tmp114 Int)(x111 Int)) (=> (and (and (=  tmp113 (-  0 x111)) (=  tmp114 x111)) (X2  x111)) (or (or (X134  x111) (X3  tmp113 x111)) (X3  x111 tmp114)))))
(assert (forall ((x111 Int)(x112 Int)) (=> (and (X2  x111) (X3  x112 x111)) (X1  x112 x111))))
(assert (forall ((tmp115 Int)(x20 Int)) (=> (and (=  tmp115 (-  x20 1)) (X134  x20)) (X2  tmp115))))
(assert (forall ((x20 Int)(x110 Int)) (=> (and (X134  x20) (X1  x110 (-  x20 1))) (X3  x110 x20))))
(assert (forall ((x109 Int)) (=> (X20  x109) (X21  x109))))
(assert (forall ((tmp116 Int)(x109 Int)) (=> (and (=  tmp116 (-  0 x109)) (X20  x109)) (X21  tmp116))))
(assert (forall ((tmp117 Int)(x109 Int)) (=> (and (=  tmp117 (+  x109 1)) (X20  x109)) (X133  tmp117 x109))))
(assert (forall ((x79 Int)(x108 Int)) (=> (and (X20  x79) (X21  x108)) (X19  x108))))
(assert (forall ((x18 Int)(x107 Int)) (=> (X133  x107 x18) (X20  x107))))
(assert (forall ((x18 Int)(x79 Int)(x106 Int)) (=> (and (X133  x79 x18) (X19  x106)) (X21  x106))))
(assert (forall ((x105 Int)) (=> (and (X40  x105) (=  x105 0)) (X126  x105))))
(assert (forall ((x105 Int)) (=> (and (X40  x105) (not (=  x105 0))) (X132  x105))))
(assert (forall ((x105 Int)) (=> (and (X40  x105) (X45  x105)) (X39  x105))))
(assert (forall ((x105 Int)) (=> (and (and (X40  x105) (X45  x105)) (X38  x105)) (X44  x105))))
(assert (forall ((x105 Int)) (=> (and (and (and (X40  x105) (X45  x105)) (X38  x105)) (X43  x105)) (X37  x105))))
(assert (forall ((x105 Int)) (=> (and (and (and (and (X40  x105) (X45  x105)) (X38  x105)) (X43  x105)) (X36  x105)) (X42  x105))))
(assert (forall ((x105 Int)) (=> (and (and (and (X40  x105) (X45  x105)) (X38  x105)) (X41  x105)) (X35  x105))))
(assert (forall ((x_49 Int)) (=> (X132  x_49) (X45  x_49))))
(assert (forall ((x_49 Int)) (=> (and (X132  x_49) (X44  x_49)) (X131  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (X132  x_49) (X44  x_49)) (X53  x_49)) (X43  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (and (X132  x_49) (X44  x_49)) (X53  x_49)) (X42  x_49)) (X52  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (X132  x_49) (X44  x_49)) (X51  x_49)) (X41  x_49))))
(assert (forall ((tmp118 Int)(x_49 Int)) (=> (and (=  tmp118 (-  x_49 1)) (X131  x_49)) (X40  tmp118))))
(assert (forall ((x_49 Int)) (=> (and (X131  x_49) (X39  (-  x_49 1))) (X130  x_49))))
(assert (forall ((tmp119 Int)(x_49 Int)) (=> (and (=  tmp119 (-  x_49 1)) (and (and (X131  x_49) (X39  (-  x_49 1))) (X58  x_49))) (X38  tmp119))))
(assert (forall ((x_49 Int)) (=> (and (and (and (X131  x_49) (X39  (-  x_49 1))) (X58  x_49)) (X37  (-  x_49 1))) (X57  x_49))))
(assert (forall ((tmp120 Int)(x_49 Int)) (=> (and (=  tmp120 (-  x_49 1)) (and (and (and (and (X131  x_49) (X39  (-  x_49 1))) (X58  x_49)) (X37  (-  x_49 1))) (X56  x_49))) (X36  tmp120))))
(assert (forall ((x_49 Int)) (=> (and (and (and (X131  x_49) (X39  (-  x_49 1))) (X58  x_49)) (X35  (-  x_49 1))) (X55  x_49))))
(assert (forall ((x_49 Int)) (=> (X130  x_49) (X127  x_49))))
(assert (forall ((x_49 Int)) (=> (and (X130  x_49) (X128  x_49)) (X53  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (X130  x_49) (X128  x_49)) (X52  x_49)) (X129  x_49))))
(assert (forall ((x_49 Int)) (=> (X127  x_49) (X58  x_49))))
(assert (forall ((x_49 Int)) (=> (and (X127  x_49) (X57  x_49)) (X128  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (X127  x_49) (X57  x_49)) (X129  x_49)) (X56  x_49))))
(assert (forall ((x_49 Int)) (=> (and (X127  x_49) (X55  x_49)) (X51  x_49))))
(assert (forall ((x_49 Int)) (=> (X126  x_49) (X45  x_49))))
(assert (forall ((x_49 Int)) (=> (and (X126  x_49) (X44  x_49)) (X125  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (X126  x_49) (X44  x_49)) (X85  x_49)) (X43  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (and (X126  x_49) (X44  x_49)) (X85  x_49)) (X42  x_49)) (X84  x_49))))
(assert (forall ((x_49 Int)) (=> (and (and (X126  x_49) (X44  x_49)) (X83  x_49)) (X41  x_49))))
(assert (forall ((x_49 Int)) (=> (X125  x_49) (X85  x_49))))
(assert (forall ((x_49 Int)) (=> (and (X125  x_49) (X84  x_49)) (X83  x_49))))
(assert (=> X95 X124))
(assert (forall ((tmp121 Int)) (=> (and (=  tmp121 1000) X124) (X2  tmp121))))
(assert (forall ((x104 Int)) (=> (and X124 (X1  x104 1000)) (X123  x104))))
(assert (forall ((t6 Int)) (=> (X123  t6) (X40  t6))))
(assert (forall ((t6 Int)) (=> (and (X123  t6) (X39  t6)) (X122  t6))))
(assert (forall ((t6 Int)) (=> (and (and (X123  t6) (X39  t6)) (X101  t6)) (X38  t6))))
(assert (forall ((t6 Int)) (=> (and (and (and (X123  t6) (X39  t6)) (X101  t6)) (X37  t6)) (X100  t6))))
(assert (forall ((t6 Int)) (=> (and (and (and (and (X123  t6) (X39  t6)) (X101  t6)) (X37  t6)) (X99  t6)) (X36  t6))))
(assert (forall ((t6 Int)) (=> (and (and (and (X123  t6) (X39  t6)) (X101  t6)) (X35  t6)) (X98  t6))))
(assert (forall ((t6 Int)) (=> (X122  t6) (X119  t6))))
(assert (forall ((t6 Int)) (=> (and (X122  t6) (X120  t6)) false)))
(assert (forall ((t6 Int)) (=> (and (and (X122  t6) (X120  t6)) (X103  t6)) (X121  t6))))
(assert (forall ((t6 Int)) (=> (X119  t6) (X101  t6))))
(assert (forall ((t6 Int)) (=> (and (X119  t6) (X100  t6)) (X120  t6))))
(assert (forall ((t6 Int)) (=> (and (and (X119  t6) (X100  t6)) (X121  t6)) (X99  t6))))
(assert (=> false false))
(assert (=> true X95))
(check-sat)
    