(set-logic HORN)
(declare-fun X1 (Int Int) Bool)
(declare-fun X2 (Int) Bool)
(declare-fun X3 (Int Int) Bool)
(declare-fun X19 (Int) Bool)
(declare-fun X20 (Int) Bool)
(declare-fun X21 (Int) Bool)
(declare-fun X35 (Int Int) Bool)
(declare-fun X36 (Int Int) Bool)
(declare-fun X37 (Int Int) Bool)
(declare-fun X38 (Int) Bool)
(declare-fun X39 (Int) Bool)
(declare-fun X40 (Int) Bool)
(declare-fun X41 (Int) Bool)
(declare-fun X42 (Int) Bool)
(declare-fun X43 (Int) Bool)
(declare-fun X44 (Int Int) Bool)
(declare-fun X45 (Int Int) Bool)
(declare-fun X46 (Int Int) Bool)
(declare-fun X47 (Int) Bool)
(declare-fun X48 (Int) Bool)
(declare-fun X49 (Int) Bool)
(declare-fun X50 (Int) Bool)
(declare-fun X51 (Int) Bool)
(declare-fun X92 () Bool)
(declare-fun X95 (Int) Bool)
(declare-fun X98 (Int Int Int) Bool)
(declare-fun X99 (Int Int Int) Bool)
(declare-fun X100 (Int Int Int) Bool)
(declare-fun X101 (Int Int) Bool)
(declare-fun X102 (Int Int) Bool)
(declare-fun X122 (Int Int) Bool)
(declare-fun X123 (Int Int) Bool)
(declare-fun X124 (Int Int) Bool)
(declare-fun X125 (Int Int) Bool)
(declare-fun X126 (Int) Bool)
(declare-fun X127 () Bool)
(declare-fun X128 (Int Int Int) Bool)
(declare-fun X129 (Int Int Int) Bool)
(declare-fun X130 (Int Int Int) Bool)
(declare-fun X131 (Int Int) Bool)
(declare-fun X132 (Int Int) Bool)
(declare-fun X133 (Int Int) Bool)
(declare-fun X134 (Int Int) Bool)
(declare-fun X135 (Int) Bool)
(declare-fun X136 (Int) Bool)
(declare-fun X137 (Int Int) Bool)
(declare-fun X138 (Int) Bool)
(assert (forall ((x141 Int)) (=> (and (X2  x141) (<=  x141 0)) false)))
(assert (forall ((tmp143 Int)(tmp144 Int)(x141 Int)) (=> (and (and (=  tmp143 (-  0 x141)) (=  tmp144 x141)) (X2  x141)) (or (or (X138  x141) (X3  tmp143 x141)) (X3  x141 tmp144)))))
(assert (forall ((x141 Int)(x142 Int)) (=> (and (X2  x141) (X3  x142 x141)) (X1  x142 x141))))
(assert (forall ((tmp145 Int)(x19 Int)) (=> (and (=  tmp145 (-  x19 1)) (X138  x19)) (X2  tmp145))))
(assert (forall ((x19 Int)(x140 Int)) (=> (and (X138  x19) (X1  x140 (-  x19 1))) (X3  x140 x19))))
(assert (forall ((x139 Int)) (=> (X20  x139) (X21  x139))))
(assert (forall ((tmp146 Int)(x139 Int)) (=> (and (=  tmp146 (-  0 x139)) (X20  x139)) (X21  tmp146))))
(assert (forall ((tmp147 Int)(x139 Int)) (=> (and (=  tmp147 (+  x139 1)) (X20  x139)) (X137  tmp147 x139))))
(assert (forall ((x99 Int)(x138 Int)) (=> (and (X20  x99) (X21  x138)) (X19  x138))))
(assert (forall ((x17 Int)(x137 Int)) (=> (X137  x137 x17) (X20  x137))))
(assert (forall ((x17 Int)(x99 Int)(x136 Int)) (=> (and (X137  x99 x17) (X19  x136)) (X21  x136))))
(assert (forall ((x135 Int)) (=> (and (X43  x135) (>  x135 0)) (X135  x135))))
(assert (forall ((x135 Int)) (=> (and (X43  x135) (<=  x135 0)) (X136  x135))))
(assert (forall ((x135 Int)) (=> (and (X43  x135) (X51  x135)) (X42  x135))))
(assert (forall ((x135 Int)) (=> (and (and (X43  x135) (X51  x135)) (X41  x135)) (X50  x135))))
(assert (forall ((n_450 Int)(x133 Int)) (=> (and (X43  n_450) (X49  x133)) (X40  x133))))
(assert (forall ((n_450 Int)(x133 Int)) (=> (and (and (X43  n_450) (X49  x133)) (X39  x133)) (X48  x133))))
(assert (forall ((n_450 Int)(x133 Int)) (=> (and (and (and (X43  n_450) (X49  x133)) (X39  x133)) (X47  x133)) (X38  x133))))
(assert (forall ((n_450 Int)(x133 Int)(x134 Int)) (=> (and (and (X43  n_450) (X49  x133)) (X37  x134 x133)) (X46  x134 x133))))
(assert (forall ((n_450 Int)(x133 Int)(x134 Int)) (=> (and (and (and (X43  n_450) (X49  x133)) (X37  x134 x133)) (X45  x134 x133)) (X36  x134 x133))))
(assert (forall ((n_450 Int)(x133 Int)(x134 Int)) (=> (and (and (and (and (X43  n_450) (X49  x133)) (X37  x134 x133)) (X45  x134 x133)) (X35  x134 x133)) (X44  x134 x133))))
(assert (forall ((n_412 Int)) (=> (X136  n_412) (X51  n_412))))
(assert (=> false false))
(assert (forall ((n_412 Int)(tmp148 Int)) (=> (and (=  tmp148 1000) (X135  n_412)) (X2  tmp148))))
(assert (forall ((n_412 Int)(x132 Int)) (=> (and (X135  n_412) (X1  x132 1000)) (X134  x132 n_412))))
(assert (forall ((d14 Int)(n_412 Int)) (=> (X134  d14 n_412) (X131  d14 n_412))))
(assert (forall ((d14 Int)(n_412 Int)) (=> (and (X134  d14 n_412) (X132  d14 n_412)) (X51  n_412))))
(assert (forall ((d14 Int)(n_412 Int)) (=> (and (and (X134  d14 n_412) (X132  d14 n_412)) (X50  n_412)) (X133  d14 n_412))))
(assert (forall ((d14 Int)(n_412 Int)(tmp149 Int)) (=> (and (=  tmp149 (+  n_412 d14)) (X131  d14 n_412)) (X49  tmp149))))
(assert (forall ((d14 Int)(n_412 Int)) (=> (and (X131  d14 n_412) (X48  (+  n_412 d14))) (X132  d14 n_412))))
(assert (forall ((d14 Int)(n_412 Int)(tmp150 Int)) (=> (and (=  tmp150 (+  n_412 d14)) (and (and (X131  d14 n_412) (X48  (+  n_412 d14))) (X133  d14 n_412))) (X47  tmp150))))
(assert (forall ((d14 Int)(n_412 Int)(x131 Int)) (=> (and (X131  d14 n_412) (X46  x131 (+  n_412 d14))) (X128  x131 d14 n_412))))
(assert (forall ((d14 Int)(n_412 Int)(tmp151 Int)(x131 Int)) (=> (and (=  tmp151 (+  n_412 d14)) (and (and (X131  d14 n_412) (X46  x131 (+  n_412 d14))) (X129  x131 d14 n_412))) (X45  x131 tmp151))))
(assert (forall ((d14 Int)(n_412 Int)(x131 Int)) (=> (and (and (and (X131  d14 n_412) (X46  x131 (+  n_412 d14))) (X129  x131 d14 n_412)) (X44  x131 (+  n_412 d14))) (X130  x131 d14 n_412))))
(assert (forall ((d14 Int)(n_412 Int)(x130 Int)) (=> (X128  x130 d14 n_412) (X43  x130))))
(assert (forall ((d14 Int)(n_412 Int)(x130 Int)) (=> (and (X128  x130 d14 n_412) (X42  x130)) (X129  x130 d14 n_412))))
(assert (forall ((d14 Int)(n_412 Int)(x130 Int)) (=> (and (and (X128  x130 d14 n_412) (X42  x130)) (X130  x130 d14 n_412)) (X41  x130))))
(assert (forall ((d14 Int)(n_412 Int)(n_450 Int)(x128 Int)) (=> (and (X128  n_450 d14 n_412) (X40  x128)) (X49  x128))))
(assert (forall ((d14 Int)(n_412 Int)(n_450 Int)(x128 Int)) (=> (and (and (X128  n_450 d14 n_412) (X40  x128)) (X48  x128)) (X39  x128))))
(assert (forall ((d14 Int)(n_412 Int)(n_450 Int)(x128 Int)) (=> (and (and (and (X128  n_450 d14 n_412) (X40  x128)) (X48  x128)) (X38  x128)) (X47  x128))))
(assert (forall ((d14 Int)(n_412 Int)(n_450 Int)(x128 Int)(x129 Int)) (=> (and (and (X128  n_450 d14 n_412) (X40  x128)) (X46  x129 x128)) (X37  x129 x128))))
(assert (forall ((d14 Int)(n_412 Int)(n_450 Int)(x128 Int)(x129 Int)) (=> (and (and (and (X128  n_450 d14 n_412) (X40  x128)) (X46  x129 x128)) (X36  x129 x128)) (X45  x129 x128))))
(assert (forall ((d14 Int)(n_412 Int)(n_450 Int)(x128 Int)(x129 Int)) (=> (and (and (and (and (X128  n_450 d14 n_412) (X40  x128)) (X46  x129 x128)) (X36  x129 x128)) (X44  x129 x128)) (X35  x129 x128))))
(assert (=> X92 X127))
(assert (forall ((tmp152 Int)) (=> (and (=  tmp152 1000) X127) (X2  tmp152))))
(assert (forall ((x127 Int)) (=> (and X127 (X1  x127 1000)) (X126  x127))))
(assert (forall ((r6 Int)(tmp153 Int)) (=> (and (=  tmp153 r6) (X126  r6)) (X123  r6 tmp153))))
(assert (forall ((r6 Int)) (=> (and (X126  r6) (X124  r6 r6)) false)))
(assert (forall ((r6 Int)(tmp154 Int)) (=> (and (=  tmp154 r6) (and (and (X126  r6) (X124  r6 r6)) (X95  r6))) (X125  r6 tmp154))))
(assert (forall ((r6 Int)(x126 Int)) (=> (X123  x126 r6) (X43  x126))))
(assert (forall ((r6 Int)(x126 Int)) (=> (and (X123  x126 r6) (X42  x126)) (X124  x126 r6))))
(assert (forall ((r6 Int)(x126 Int)) (=> (and (and (X123  x126 r6) (X42  x126)) (X125  x126 r6)) (X41  x126))))
(assert (forall ((n_450 Int)(r6 Int)(x124 Int)) (=> (and (X123  n_450 r6) (X40  x124)) (X122  x124 r6))))
(assert (forall ((n_450 Int)(r6 Int)(x124 Int)) (=> (and (and (X123  n_450 r6) (X40  x124)) (X102  x124 r6)) (X39  x124))))
(assert (forall ((n_450 Int)(r6 Int)(x124 Int)) (=> (and (and (and (X123  n_450 r6) (X40  x124)) (X102  x124 r6)) (X38  x124)) (X101  x124 r6))))
(assert (forall ((n_450 Int)(r6 Int)(x124 Int)(x125 Int)) (=> (and (and (X123  n_450 r6) (X40  x124)) (X100  x125 x124 r6)) (X37  x125 x124))))
(assert (forall ((n_450 Int)(r6 Int)(x124 Int)(x125 Int)) (=> (and (and (and (X123  n_450 r6) (X40  x124)) (X100  x125 x124 r6)) (X36  x125 x124)) (X99  x125 x124 r6))))
(assert (forall ((n_450 Int)(r6 Int)(x124 Int)(x125 Int)) (=> (and (and (and (and (X123  n_450 r6) (X40  x124)) (X100  x125 x124 r6)) (X36  x125 x124)) (X98  x125 x124 r6)) (X35  x125 x124))))
(assert (forall ((n7 Int)(r6 Int)(tmp155 Int)) (=> (and (=  tmp155 n7) (X122  n7 r6)) (X100  n7 tmp155 r6))))
(assert (forall ((n7 Int)(r6 Int)) (=> (and (X122  n7 r6) (X99  n7 n7 r6)) (X102  n7 r6))))
(assert (forall ((n7 Int)(r6 Int)(tmp156 Int)) (=> (and (=  tmp156 n7) (and (and (X122  n7 r6) (X99  n7 n7 r6)) (X101  n7 r6))) (X98  n7 tmp156 r6))))
(assert (=> true X92))
(check-sat)
    