(set-logic HORN)
(declare-fun X1 (Int Int) Bool)
(declare-fun X2 (Int) Bool)
(declare-fun X3 (Int Int) Bool)
(declare-fun X19 (Int) Bool)
(declare-fun X20 (Int) Bool)
(declare-fun X21 (Int) Bool)
(declare-fun X35 () Bool)
(declare-fun X36 () Bool)
(declare-fun X37 () Bool)
(declare-fun X38 () Bool)
(declare-fun X39 () Bool)
(declare-fun X40 () Bool)
(declare-fun X41 () Bool)
(declare-fun X42 () Bool)
(declare-fun X43 () Bool)
(declare-fun X44 () Bool)
(declare-fun X45 () Bool)
(declare-fun X46 () Bool)
(declare-fun X47 () Bool)
(declare-fun X48 () Bool)
(declare-fun X49 () Bool)
(declare-fun X50 () Bool)
(declare-fun X51 () Bool)
(declare-fun X52 () Bool)
(declare-fun X53 () Bool)
(declare-fun X54 () Bool)
(declare-fun X55 () Bool)
(declare-fun X56 () Bool)
(declare-fun X57 () Bool)
(declare-fun X58 () Bool)
(declare-fun X59 () Bool)
(declare-fun X60 () Bool)
(declare-fun X61 () Bool)
(declare-fun X62 () Bool)
(declare-fun X63 () Bool)
(declare-fun X64 () Bool)
(declare-fun X65 () Bool)
(declare-fun X66 () Bool)
(declare-fun X67 () Bool)
(declare-fun X68 () Bool)
(declare-fun X69 () Bool)
(declare-fun X170 () Bool)
(declare-fun X172 () Bool)
(declare-fun X175 () Bool)
(declare-fun X176 () Bool)
(declare-fun X177 () Bool)
(declare-fun X178 () Bool)
(declare-fun X179 () Bool)
(declare-fun X180 () Bool)
(declare-fun X185 () Bool)
(declare-fun X186 () Bool)
(declare-fun X187 () Bool)
(declare-fun X188 () Bool)
(declare-fun X189 () Bool)
(declare-fun X190 () Bool)
(declare-fun X217 () Bool)
(declare-fun X218 () Bool)
(declare-fun X219 () Bool)
(declare-fun X220 () Bool)
(declare-fun X221 () Bool)
(declare-fun X222 () Bool)
(declare-fun X223 () Bool)
(declare-fun X224 () Bool)
(declare-fun X225 () Bool)
(declare-fun X226 () Bool)
(declare-fun X227 () Bool)
(declare-fun X228 () Bool)
(declare-fun X229 () Bool)
(declare-fun X230 () Bool)
(declare-fun X231 () Bool)
(declare-fun X232 () Bool)
(declare-fun X233 () Bool)
(declare-fun X234 () Bool)
(declare-fun X235 () Bool)
(declare-fun X236 () Bool)
(declare-fun X237 () Bool)
(declare-fun X238 () Bool)
(declare-fun X239 () Bool)
(declare-fun X240 () Bool)
(declare-fun X241 (Int) Bool)
(declare-fun X242 (Int) Bool)
(declare-fun X243 (Int) Bool)
(declare-fun X244 (Int) Bool)
(declare-fun X245 (Int) Bool)
(declare-fun X246 (Int) Bool)
(declare-fun X247 (Int) Bool)
(declare-fun X248 (Int) Bool)
(declare-fun X249 (Int) Bool)
(declare-fun X250 (Int) Bool)
(declare-fun X251 (Int) Bool)
(declare-fun X252 (Int) Bool)
(declare-fun X253 (Int) Bool)
(declare-fun X254 (Int) Bool)
(declare-fun X255 (Int) Bool)
(declare-fun X256 (Int) Bool)
(declare-fun X257 (Int) Bool)
(declare-fun X258 (Int) Bool)
(declare-fun X259 (Int) Bool)
(declare-fun X260 (Int) Bool)
(declare-fun X261 (Int) Bool)
(declare-fun X262 (Int) Bool)
(declare-fun X263 (Int) Bool)
(declare-fun X264 (Int) Bool)
(declare-fun X265 (Int) Bool)
(declare-fun X266 (Int) Bool)
(declare-fun X267 (Int) Bool)
(declare-fun X268 (Int) Bool)
(declare-fun X269 (Int) Bool)
(declare-fun X270 (Int) Bool)
(declare-fun X271 (Int) Bool)
(declare-fun X272 (Int) Bool)
(declare-fun X273 (Int) Bool)
(declare-fun X274 (Int) Bool)
(declare-fun X275 (Int) Bool)
(declare-fun X276 (Int) Bool)
(declare-fun X277 (Int) Bool)
(declare-fun X278 (Int) Bool)
(declare-fun X279 () Bool)
(declare-fun X280 (Int Int) Bool)
(declare-fun X281 (Int) Bool)
(assert (forall ((x196 Int)) (=> (and (X2  x196) (<=  x196 0)) false)))
(assert (forall ((tmp198 Int)(tmp199 Int)(x196 Int)) (=> (and (and (=  tmp198 (-  0 x196)) (=  tmp199 x196)) (X2  x196)) (or (or (X281  x196) (X3  tmp198 x196)) (X3  x196 tmp199)))))
(assert (forall ((x196 Int)(x197 Int)) (=> (and (X2  x196) (X3  x197 x196)) (X1  x197 x196))))
(assert (forall ((tmp200 Int)(x20 Int)) (=> (and (=  tmp200 (-  x20 1)) (X281  x20)) (X2  tmp200))))
(assert (forall ((x20 Int)(x195 Int)) (=> (and (X281  x20) (X1  x195 (-  x20 1))) (X3  x195 x20))))
(assert (forall ((x194 Int)) (=> (X20  x194) (X21  x194))))
(assert (forall ((tmp201 Int)(x194 Int)) (=> (and (=  tmp201 (-  0 x194)) (X20  x194)) (X21  tmp201))))
(assert (forall ((tmp202 Int)(x194 Int)) (=> (and (=  tmp202 (+  x194 1)) (X20  x194)) (X280  tmp202 x194))))
(assert (forall ((x165 Int)(x193 Int)) (=> (and (X20  x165) (X21  x193)) (X19  x193))))
(assert (forall ((x18 Int)(x192 Int)) (=> (X280  x192 x18) (X20  x192))))
(assert (forall ((x18 Int)(x165 Int)(x191 Int)) (=> (and (X280  x165 x18) (X19  x191)) (X21  x191))))
(assert (=> X52 X279))
(assert (=> (and X52 X69) X51))
(assert (=> (and (and X52 X69) X50) X68))
(assert (=> (and X52 X67) X49))
(assert (=> (and X52 X66) X48))
(assert (=> (and (and X52 X66) X47) X65))
(assert (=> (and (and (and X52 X66) X47) X64) X46))
(assert (=> (and (and X52 X66) X45) X63))
(assert (=> (and (and (and X52 X66) X45) X62) X44))
(assert (=> (and (and (and (and X52 X66) X45) X62) X43) X61))
(assert (=> (and (and (and X52 X66) X45) X60) X42))
(assert (=> (and X52 X59) X41))
(assert (=> (and (and X52 X59) X40) X58))
(assert (=> (and (and (and X52 X59) X40) X57) X39))
(assert (=> (and (and X52 X59) X38) X56))
(assert (=> (and (and (and X52 X59) X38) X55) X37))
(assert (=> (and (and (and (and X52 X59) X38) X55) X36) X54))
(assert (=> (and (and (and X52 X59) X38) X53) X35))
(assert (forall ((tmp203 Int)) (=> (and (=  tmp203 1000) X279) (X2  tmp203))))
(assert (forall ((x190 Int)) (=> (and (and X279 (X1  x190 1000)) (>  x190 0)) (X259  x190))))
(assert (forall ((x190 Int)) (=> (and (and X279 (X1  x190 1000)) (<=  x190 0)) (X278  x190))))
(assert (forall ((x15 Int)) (=> (X278  x15) (X275  x15))))
(assert (forall ((x15 Int)) (=> (and (X278  x15) (X276  x15)) X69)))
(assert (forall ((x15 Int)) (=> (and (and (X278  x15) (X276  x15)) X68) (X277  x15))))
(assert (forall ((x15 Int)) (=> (X275  x15) X66)))
(assert (forall ((x15 Int)) (=> (and (X275  x15) X65) (X276  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X275  x15) X65) (X277  x15)) X64)))
(assert (forall ((x15 Int)) (=> (and (X275  x15) X63) (X271  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X275  x15) X63) (X272  x15)) X62)))
(assert (forall ((x15 Int)) (=> (and (and (and (X275  x15) X63) (X272  x15)) X61) (X273  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X275  x15) X63) (X274  x15)) X60)))
(assert (forall ((x15 Int)) (=> (X271  x15) (X260  x15))))
(assert (forall ((x15 Int)) (=> (and (X271  x15) (X261  x15)) (X272  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X271  x15) (X261  x15)) (X273  x15)) (X262  x15))))
(assert (forall ((x15 Int)) (=> (and (X271  x15) (X263  x15)) (X274  x15))))
(assert (forall ((x15 Int)) (=> (and (X271  x15) (X264  x15)) X59)))
(assert (forall ((x15 Int)) (=> (and (and (X271  x15) (X264  x15)) X58) (X265  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (X271  x15) (X264  x15)) X58) (X266  x15)) X57)))
(assert (forall ((x15 Int)) (=> (and (and (X271  x15) (X264  x15)) X56) (X267  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (X271  x15) (X264  x15)) X56) (X268  x15)) X55)))
(assert (forall ((x15 Int)) (=> (and (and (and (and (X271  x15) (X264  x15)) X56) (X268  x15)) X54) (X269  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (X271  x15) (X264  x15)) X56) (X270  x15)) X53)))
(assert (forall ((x15 Int)) (=> (X260  x15) X52)))
(assert (forall ((x15 Int)) (=> (and (X260  x15) X51) (X261  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X260  x15) X51) (X262  x15)) X50)))
(assert (forall ((x15 Int)) (=> (and (X260  x15) X49) (X263  x15))))
(assert (forall ((x15 Int)) (=> (and (X260  x15) X48) (X264  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X260  x15) X48) (X265  x15)) X47)))
(assert (forall ((x15 Int)) (=> (and (and (and (X260  x15) X48) (X265  x15)) X46) (X266  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X260  x15) X48) (X267  x15)) X45)))
(assert (forall ((x15 Int)) (=> (and (and (and (X260  x15) X48) (X267  x15)) X44) (X268  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (and (X260  x15) X48) (X267  x15)) X44) (X269  x15)) X43)))
(assert (forall ((x15 Int)) (=> (and (and (and (X260  x15) X48) (X267  x15)) X42) (X270  x15))))
(assert (forall ((x15 Int)) (=> (and (X260  x15) X41) X66)))
(assert (forall ((x15 Int)) (=> (and (and (X260  x15) X41) X65) X40)))
(assert (forall ((x15 Int)) (=> (and (and (and (X260  x15) X41) X65) X39) X64)))
(assert (forall ((x15 Int)) (=> (and (and (X260  x15) X41) X63) X38)))
(assert (forall ((x15 Int)) (=> (and (and (and (X260  x15) X41) X63) X37) X62)))
(assert (forall ((x15 Int)) (=> (and (and (and (and (X260  x15) X41) X63) X37) X61) X36)))
(assert (forall ((x15 Int)) (=> (and (and (and (X260  x15) X41) X63) X35) X60)))
(assert (forall ((x15 Int)) (=> (X259  x15) (X256  x15))))
(assert (forall ((x15 Int)) (=> (and (X259  x15) (X257  x15)) X69)))
(assert (forall ((x15 Int)) (=> (and (and (X259  x15) (X257  x15)) X68) (X258  x15))))
(assert (forall ((x15 Int)) (=> (X256  x15) X59)))
(assert (forall ((x15 Int)) (=> (and (X256  x15) X58) (X257  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X256  x15) X58) (X258  x15)) X57)))
(assert (forall ((x15 Int)) (=> (and (X256  x15) X56) (X252  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X256  x15) X56) (X253  x15)) X55)))
(assert (forall ((x15 Int)) (=> (and (and (and (X256  x15) X56) (X253  x15)) X54) (X254  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X256  x15) X56) (X255  x15)) X53)))
(assert (forall ((x15 Int)) (=> (X252  x15) (X241  x15))))
(assert (forall ((x15 Int)) (=> (and (X252  x15) (X242  x15)) (X253  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X252  x15) (X242  x15)) (X254  x15)) (X243  x15))))
(assert (forall ((x15 Int)) (=> (and (X252  x15) (X244  x15)) (X255  x15))))
(assert (forall ((x15 Int)) (=> (and (X252  x15) (X245  x15)) X59)))
(assert (forall ((x15 Int)) (=> (and (and (X252  x15) (X245  x15)) X58) (X246  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (X252  x15) (X245  x15)) X58) (X247  x15)) X57)))
(assert (forall ((x15 Int)) (=> (and (and (X252  x15) (X245  x15)) X56) (X248  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (X252  x15) (X245  x15)) X56) (X249  x15)) X55)))
(assert (forall ((x15 Int)) (=> (and (and (and (and (X252  x15) (X245  x15)) X56) (X249  x15)) X54) (X250  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (X252  x15) (X245  x15)) X56) (X251  x15)) X53)))
(assert (forall ((x15 Int)) (=> (X241  x15) X52)))
(assert (forall ((x15 Int)) (=> (and (X241  x15) X51) (X242  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X241  x15) X51) (X243  x15)) X50)))
(assert (forall ((x15 Int)) (=> (and (X241  x15) X49) (X244  x15))))
(assert (forall ((x15 Int)) (=> (and (X241  x15) X48) (X245  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X241  x15) X48) (X246  x15)) X47)))
(assert (forall ((x15 Int)) (=> (and (and (and (X241  x15) X48) (X246  x15)) X46) (X247  x15))))
(assert (forall ((x15 Int)) (=> (and (and (X241  x15) X48) (X248  x15)) X45)))
(assert (forall ((x15 Int)) (=> (and (and (and (X241  x15) X48) (X248  x15)) X44) (X249  x15))))
(assert (forall ((x15 Int)) (=> (and (and (and (and (X241  x15) X48) (X248  x15)) X44) (X250  x15)) X43)))
(assert (forall ((x15 Int)) (=> (and (and (and (X241  x15) X48) (X248  x15)) X42) (X251  x15))))
(assert (forall ((x15 Int)) (=> (and (X241  x15) X41) X66)))
(assert (forall ((x15 Int)) (=> (and (and (X241  x15) X41) X65) X40)))
(assert (forall ((x15 Int)) (=> (and (and (and (X241  x15) X41) X65) X39) X64)))
(assert (forall ((x15 Int)) (=> (and (and (X241  x15) X41) X63) X38)))
(assert (forall ((x15 Int)) (=> (and (and (and (X241  x15) X41) X63) X37) X62)))
(assert (forall ((x15 Int)) (=> (and (and (and (and (X241  x15) X41) X63) X37) X61) X36)))
(assert (forall ((x15 Int)) (=> (and (and (and (X241  x15) X41) X63) X35) X60)))
(assert (=> X170 X240))
(assert (=> X240 X237))
(assert (=> (and X240 X238) false))
(assert (=> (and (and X240 X238) X172) X239))
(assert (=> X237 X233))
(assert (=> (and X237 X234) X238))
(assert (=> (and (and X237 X234) X239) X235))
(assert (=> false false))
(assert (=> X233 X221))
(assert (=> (and X233 X222) X234))
(assert (=> (and (and X233 X222) X235) X223))
(assert (=> (and X233 X224) X236))
(assert (=> (and X233 X225) X232))
(assert (=> (and (and X233 X225) X180) X226))
(assert (=> (and (and (and X233 X225) X180) X227) X179))
(assert (=> (and (and X233 X225) X178) X228))
(assert (=> (and (and (and X233 X225) X178) X229) X177))
(assert (=> (and (and (and (and X233 X225) X178) X229) X176) X230))
(assert (=> (and (and (and X233 X225) X178) X231) X175))
(assert (=> X232 X180))
(assert (=> false false))
(assert (=> X221 X52))
(assert (=> (and X221 X51) X222))
(assert (=> (and (and X221 X51) X223) X50))
(assert (=> (and X221 X49) X224))
(assert (=> (and X221 X48) X225))
(assert (=> (and (and X221 X48) X226) X47))
(assert (=> (and (and (and X221 X48) X226) X46) X227))
(assert (=> (and (and X221 X48) X228) X45))
(assert (=> (and (and (and X221 X48) X228) X44) X229))
(assert (=> (and (and (and (and X221 X48) X228) X44) X230) X43))
(assert (=> (and (and (and X221 X48) X228) X42) X231))
(assert (=> (and X221 X41) X220))
(assert (=> (and (and X221 X41) X190) X40))
(assert (=> (and (and (and X221 X41) X190) X39) X189))
(assert (=> (and (and X221 X41) X188) X38))
(assert (=> (and (and (and X221 X41) X188) X37) X187))
(assert (=> (and (and (and (and X221 X41) X188) X37) X186) X36))
(assert (=> (and (and (and X221 X41) X188) X35) X185))
(assert (=> X220 X217))
(assert (=> (and X220 X218) X190))
(assert (=> (and (and X220 X218) X189) X219))
(assert (=> X217 X188))
(assert (=> (and X217 X187) X218))
(assert (=> (and (and X217 X187) X219) X186))
(assert (=> false false))
(assert (=> true X170))
(check-sat)
    