(set-logic HORN)
(declare-fun X1 (Int) Bool)
(declare-fun X2 (Int) Bool)
(declare-fun X3 (Int) Bool)
(declare-fun X4 (Int) Bool)
(declare-fun X5 (Int) Bool)
(declare-fun X6 (Int) Bool)
(declare-fun X7 (Int) Bool)
(declare-fun X8 (Int) Bool)
(declare-fun X9 (Int) Bool)
(declare-fun X28 (Int) Bool)
(declare-fun X33 () Bool)
(declare-fun X43 () Bool)
(declare-fun X44 () Bool)
(declare-fun X56 () Bool)
(declare-fun X57 () Bool)
(declare-fun X69 () Bool)
(declare-fun X70 () Bool)
(declare-fun X82 () Bool)
(declare-fun X83 () Bool)
(declare-fun X95 () Bool)
(declare-fun X96 () Bool)
(declare-fun X107 () Bool)
(declare-fun X108 () Bool)
(declare-fun X109 () Bool)
(declare-fun X110 () Bool)
(declare-fun X111 () Bool)
(declare-fun X112 () Bool)
(declare-fun X113 () Bool)
(declare-fun X114 () Bool)
(declare-fun X115 () Bool)
(declare-fun X116 () Bool)
(declare-fun X117 () Bool)
(declare-fun X118 () Bool)
(declare-fun X119 () Bool)
(declare-fun X120 () Bool)
(declare-fun X121 () Bool)
(declare-fun X122 () Bool)
(declare-fun X123 () Bool)
(declare-fun X124 () Bool)
(declare-fun X125 () Bool)
(declare-fun X126 () Bool)
(declare-fun X127 () Bool)
(declare-fun X128 () Bool)
(declare-fun X129 () Bool)
(declare-fun X130 () Bool)
(declare-fun X131 () Bool)
(declare-fun X132 () Bool)
(declare-fun X133 () Bool)
(declare-fun X134 () Bool)
(declare-fun X135 () Bool)
(declare-fun X136 () Bool)
(declare-fun X137 (Int) Bool)
(declare-fun X138 (Int) Bool)
(declare-fun X139 (Int) Bool)
(declare-fun X140 (Int) Bool)
(declare-fun X141 (Int) Bool)
(declare-fun X142 (Int) Bool)
(assert (forall ((x80 Int)) (=> (and (=  x80 0) (X137  x80)) (X5  x80))))
(assert (forall ((x80 Int)) (=> (and (not (=  x80 0)) (X142  x80)) (X5  x80))))
(assert (forall ((x80 Int)) (=> (X4  x80) (or (X9  x80) (X5  x80)))))
(assert (forall ((x80 Int)) (=> (X8  x80) (or (or (X3  x80) (X9  x80)) (X5  x80)))))
(assert (forall ((x80 Int)) (=> (X2  x80) (or (or (or (X7  x80) (X3  x80)) (X9  x80)) (X5  x80)))))
(assert (forall ((x80 Int)) (=> (X1  x80) (or (X6  x80) (X5  x80)))))
(assert (forall ((x12 Int)) (=> (X138  x12) (X142  x12))))
(assert (forall ((x12 Int)) (=> (X9  x12) (or (X139  x12) (X142  x12)))))
(assert (forall ((x12 Int)) (=> (X140  x12) (or (or (X8  x12) (X139  x12)) (X142  x12)))))
(assert (forall ((x12 Int)) (=> (X7  x12) (or (or (or (X141  x12) (X8  x12)) (X139  x12)) (X142  x12)))))
(assert (forall ((x12 Int)) (=> (X5  (-  x12 1)) (X138  x12))))
(assert (forall ((tmp93 Int)(x12 Int)) (=> (and (=  tmp93 (-  x12 1)) (X139  x12)) (or (X4  tmp93) (X138  x12)))))
(assert (forall ((tmp94 Int)(x12 Int)) (=> (and (=  tmp94 (-  x12 1)) (X3  (-  x12 1))) (or (or (X140  x12) (X4  tmp94)) (X138  x12)))))
(assert (forall ((tmp95 Int)(tmp96 Int)(x12 Int)) (=> (and (and (=  tmp95 (-  x12 1)) (=  tmp96 (-  x12 1))) (X141  x12)) (or (or (or (X2  tmp95) (X140  x12)) (X4  tmp96)) (X138  x12)))))
(assert (forall ((tmp97 Int)(x12 Int)) (=> (=  tmp97 (-  x12 1)) (or (X1  tmp97) (X138  x12)))))
(assert (forall ((x12 Int)) (=> (X9  x12) (X137  x12))))
(assert (forall ((x12 Int)) (=> (X28  x12) (or (X8  x12) (X137  x12)))))
(assert (forall ((x12 Int)) (=> (X7  x12) (or (or (X28  x12) (X8  x12)) (X137  x12)))))
(assert (=> (and X112 (and X118 (and X124 (and X130 X136)))) X33))
(assert (=> X131 X136))
(assert (=> X135 (or X132 X136)))
(assert (=> X133 (or (or X44 X132) X136)))
(assert (=> X43 (or (or (or X134 X44) X132) X136)))
(assert (=> X44 X135))
(assert (=> true (or X43 X135)))
(assert (=> (X5  10) X131))
(assert (forall ((tmp98 Int)) (=> (and (=  tmp98 10) X132) (or (X4  tmp98) X131))))
(assert (forall ((tmp99 Int)) (=> (and (=  tmp99 10) (X3  10)) (or (or X133 (X4  tmp99)) X131))))
(assert (forall ((tmp100 Int)(tmp101 Int)) (=> (and (and (=  tmp100 10) (=  tmp101 10)) X134) (or (or (or (X2  tmp100) X133) (X4  tmp101)) X131))))
(assert (forall ((tmp102 Int)) (=> (=  tmp102 10) (or (X1  tmp102) X131))))
(assert (=> X125 X130))
(assert (=> X129 (or X126 X130)))
(assert (=> X127 (or (or X57 X126) X130)))
(assert (=> X56 (or (or (or X128 X57) X126) X130)))
(assert (=> X57 X129))
(assert (=> true (or X56 X129)))
(assert (=> (X5  3) X125))
(assert (forall ((tmp103 Int)) (=> (and (=  tmp103 3) X126) (or (X4  tmp103) X125))))
(assert (forall ((tmp104 Int)) (=> (and (=  tmp104 3) (X3  3)) (or (or X127 (X4  tmp104)) X125))))
(assert (forall ((tmp105 Int)(tmp106 Int)) (=> (and (and (=  tmp105 3) (=  tmp106 3)) X128) (or (or (or (X2  tmp105) X127) (X4  tmp106)) X125))))
(assert (forall ((tmp107 Int)) (=> (=  tmp107 3) (or (X1  tmp107) X125))))
(assert (=> X119 X124))
(assert (=> X123 (or X120 X124)))
(assert (=> X121 (or (or X70 X120) X124)))
(assert (=> X69 (or (or (or X122 X70) X120) X124)))
(assert (=> X70 X123))
(assert (=> true (or X69 X123)))
(assert (=> (X5  1) X119))
(assert (forall ((tmp108 Int)) (=> (and (=  tmp108 1) X120) (or (X4  tmp108) X119))))
(assert (forall ((tmp109 Int)) (=> (and (=  tmp109 1) (X3  1)) (or (or X121 (X4  tmp109)) X119))))
(assert (forall ((tmp110 Int)(tmp111 Int)) (=> (and (and (=  tmp110 1) (=  tmp111 1)) X122) (or (or (or (X2  tmp110) X121) (X4  tmp111)) X119))))
(assert (forall ((tmp112 Int)) (=> (=  tmp112 1) (or (X1  tmp112) X119))))
(assert (=> X113 X118))
(assert (=> X117 (or X114 X118)))
(assert (=> X115 (or (or X83 X114) X118)))
(assert (=> X82 (or (or (or X116 X83) X114) X118)))
(assert (=> X83 X117))
(assert (=> true (or X82 X117)))
(assert (=> (X5  0) X113))
(assert (forall ((tmp113 Int)) (=> (and (=  tmp113 0) X114) (or (X4  tmp113) X113))))
(assert (forall ((tmp114 Int)) (=> (and (=  tmp114 0) (X3  0)) (or (or X115 (X4  tmp114)) X113))))
(assert (forall ((tmp115 Int)(tmp116 Int)) (=> (and (and (=  tmp115 0) (=  tmp116 0)) X116) (or (or (or (X2  tmp115) X115) (X4  tmp116)) X113))))
(assert (forall ((tmp117 Int)) (=> (=  tmp117 0) (or (X1  tmp117) X113))))
(assert (=> X107 X112))
(assert (=> X111 (or X108 X112)))
(assert (=> X109 (or (or X96 X108) X112)))
(assert (=> X95 (or (or (or X110 X96) X108) X112)))
(assert (=> X96 X111))
(assert (=> true (or X95 X111)))
(assert (=> (X5  (-  0 3)) X107))
(assert (forall ((tmp118 Int)) (=> (and (=  tmp118 (-  0 3)) X108) (or (X4  tmp118) X107))))
(assert (forall ((tmp119 Int)) (=> (and (=  tmp119 (-  0 3)) (X3  (-  0 3))) (or (or X109 (X4  tmp119)) X107))))
(assert (forall ((tmp120 Int)(tmp121 Int)) (=> (and (and (=  tmp120 (-  0 3)) (=  tmp121 (-  0 3))) X110) (or (or (or (X2  tmp120) X109) (X4  tmp121)) X107))))
(assert (forall ((tmp122 Int)) (=> (=  tmp122 (-  0 3)) (or (X1  tmp122) X107))))
(assert (=> X33 false))
(check-sat)
    