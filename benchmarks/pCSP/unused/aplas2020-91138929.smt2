(set-logic HORN)
(declare-fun X1 (Int) Bool)
(declare-fun X2 (Int) Bool)
(declare-fun X3 (Int) Bool)
(declare-fun X4 (Int) Bool)
(declare-fun X5 (Int) Bool)
(declare-fun X6 (Int) Bool)
(declare-fun X7 (Int) Bool)
(declare-fun X24 (Int) Bool)
(declare-fun X29 () Bool)
(declare-fun X39 () Bool)
(declare-fun X40 () Bool)
(declare-fun X50 () Bool)
(declare-fun X51 () Bool)
(declare-fun X61 () Bool)
(declare-fun X62 () Bool)
(declare-fun X72 () Bool)
(declare-fun X73 () Bool)
(declare-fun X83 () Bool)
(declare-fun X84 () Bool)
(declare-fun X93 () Bool)
(declare-fun X94 () Bool)
(declare-fun X95 () Bool)
(declare-fun X96 () Bool)
(declare-fun X97 () Bool)
(declare-fun X98 () Bool)
(declare-fun X99 () Bool)
(declare-fun X100 () Bool)
(declare-fun X101 () Bool)
(declare-fun X102 () Bool)
(declare-fun X103 (Int) Bool)
(declare-fun X104 (Int) Bool)
(assert (forall ((x76 Int)) (=> (and (=  x76 0) (X103  x76)) (X4  x76))))
(assert (forall ((x76 Int)) (=> (and (not (=  x76 0)) (X104  x76)) (X4  x76))))
(assert (forall ((x76 Int)) (=> (X3  x76) (or (X7  x76) (X4  x76)))))
(assert (forall ((x76 Int)) (=> (X6  x76) (or (or (X2  x76) (X7  x76)) (X4  x76)))))
(assert (forall ((x76 Int)) (=> (X1  x76) (or (or (or (X5  x76) (X2  x76)) (X7  x76)) (X4  x76)))))
(assert (forall ((x12 Int)) (=> (X4  (-  x12 1)) (X104  x12))))
(assert (forall ((tmp89 Int)(x12 Int)) (=> (and (=  tmp89 (-  x12 1)) (X7  x12)) (or (X3  tmp89) (X104  x12)))))
(assert (forall ((tmp90 Int)(x12 Int)) (=> (and (=  tmp90 (-  x12 1)) (X2  (-  x12 1))) (or (or (X6  x12) (X3  tmp90)) (X104  x12)))))
(assert (forall ((tmp91 Int)(tmp92 Int)(x12 Int)) (=> (and (and (=  tmp91 (-  x12 1)) (=  tmp92 (-  x12 1))) (X5  x12)) (or (or (or (X1  tmp91) (X6  x12)) (X3  tmp92)) (X104  x12)))))
(assert (forall ((x12 Int)) (=> (X7  x12) (X103  x12))))
(assert (forall ((x12 Int)) (=> (X24  x12) (or (X6  x12) (X103  x12)))))
(assert (forall ((x12 Int)) (=> (X5  x12) (or (or (X24  x12) (X6  x12)) (X103  x12)))))
(assert (=> (and X94 (and X96 (and X98 (and X100 X102)))) X29))
(assert (=> (X4  10) X102))
(assert (forall ((tmp93 Int)) (=> (and (=  tmp93 10) X101) (or (X3  tmp93) X102))))
(assert (forall ((tmp94 Int)) (=> (and (=  tmp94 10) (X2  10)) (or (or X40 (X3  tmp94)) X102))))
(assert (forall ((tmp95 Int)(tmp96 Int)) (=> (and (and (=  tmp95 10) (=  tmp96 10)) X39) (or (or (or (X1  tmp95) X40) (X3  tmp96)) X102))))
(assert (=> X40 X101))
(assert (=> true (or X39 X101)))
(assert (=> (X4  3) X100))
(assert (forall ((tmp97 Int)) (=> (and (=  tmp97 3) X99) (or (X3  tmp97) X100))))
(assert (forall ((tmp98 Int)) (=> (and (=  tmp98 3) (X2  3)) (or (or X51 (X3  tmp98)) X100))))
(assert (forall ((tmp99 Int)(tmp100 Int)) (=> (and (and (=  tmp99 3) (=  tmp100 3)) X50) (or (or (or (X1  tmp99) X51) (X3  tmp100)) X100))))
(assert (=> X51 X99))
(assert (=> true (or X50 X99)))
(assert (=> (X4  1) X98))
(assert (forall ((tmp101 Int)) (=> (and (=  tmp101 1) X97) (or (X3  tmp101) X98))))
(assert (forall ((tmp102 Int)) (=> (and (=  tmp102 1) (X2  1)) (or (or X62 (X3  tmp102)) X98))))
(assert (forall ((tmp103 Int)(tmp104 Int)) (=> (and (and (=  tmp103 1) (=  tmp104 1)) X61) (or (or (or (X1  tmp103) X62) (X3  tmp104)) X98))))
(assert (=> X62 X97))
(assert (=> true (or X61 X97)))
(assert (=> (X4  0) X96))
(assert (forall ((tmp105 Int)) (=> (and (=  tmp105 0) X95) (or (X3  tmp105) X96))))
(assert (forall ((tmp106 Int)) (=> (and (=  tmp106 0) (X2  0)) (or (or X73 (X3  tmp106)) X96))))
(assert (forall ((tmp107 Int)(tmp108 Int)) (=> (and (and (=  tmp107 0) (=  tmp108 0)) X72) (or (or (or (X1  tmp107) X73) (X3  tmp108)) X96))))
(assert (=> X73 X95))
(assert (=> true (or X72 X95)))
(assert (=> (X4  (-  0 3)) X94))
(assert (forall ((tmp109 Int)) (=> (and (=  tmp109 (-  0 3)) X93) (or (X3  tmp109) X94))))
(assert (forall ((tmp110 Int)) (=> (and (=  tmp110 (-  0 3)) (X2  (-  0 3))) (or (or X84 (X3  tmp110)) X94))))
(assert (forall ((tmp111 Int)(tmp112 Int)) (=> (and (and (=  tmp111 (-  0 3)) (=  tmp112 (-  0 3))) X83) (or (or (or (X1  tmp111) X84) (X3  tmp112)) X94))))
(assert (=> X84 X93))
(assert (=> true (or X83 X93)))
(assert (=> X29 false))
(check-sat)
    